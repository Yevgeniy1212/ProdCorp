////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_БюджетированиеПоОрганизациям") Тогда	
 		Элементы.Организация1.ТолькоПросмотр = НЕ фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию("УчетПоВсемОрганизациям");
		Организация = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
		фин_ОбщегоНазначенияСервер.УстановитьОтборПоОсновнойОрганизации(ЭтотОбъект);
	КонецЕсли;
	фин_БюджетированиеОбщегоНазначения.НастроитьОформлениеТабличногоПоля(Элементы.Список);
	
	ИменаВсехРазрезов = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ВсеРазрезы();
	ИспользуемыеИзмерения = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПолучитьПолныйСписокИменРазрезов");
	Для Каждого ИмяРазреза Из ИменаВсехРазрезов Цикл
		Элементы[ИмяРазреза].Видимость = ИспользуемыеИзмерения.НайтиПоЗначению(ИмяРазреза)<>Неопределено;
		Если Найти(ИмяРазреза,"Разрез")<>0 И Элементы[ИмяРазреза].Видимость Тогда
			Элементы[ИмяРазреза].Заголовок = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(Перечисления.фин_ФактическиеПоказателиБюджетирования[ИмяРазреза]);
		КонецЕсли;
	КонецЦикла;
	
	Если Параметры.Отбор.Свойство("Организация") Тогда
		Организация = Параметры.Отбор.Организация;
	КонецЕсли;
	Если Параметры.Отбор.Свойство("Сценарий") Тогда
		Сценарий = Параметры.Отбор.Сценарий;
	КонецЕсли;
	Если Параметры.Отбор.Свойство("ПериодПланирования") Тогда
		ПериодПланирования = Параметры.Отбор.ПериодПланирования;
	КонецЕсли;
	УстановитьОтборы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ СПИСОК

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_БюджетированиеПоОрганизациям") Тогда	
 		фин_ОбщегоНазначенияСервер.ВосстановитьОтборСписка(Список, Настройки, "Организация");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Параметры.РежимВыбора Тогда
		СтандартнаяОбработка = Ложь;
		СтруктураЗаполнения = Новый Структура("Организация,Сценарий,ФинансовыйПоказатель,ПериодПланирования,УправленческоеПодразделение,Проект,Номенклатура,Контрагент,Валюта,ДополнительныеРазрезы,Количество,СуммаУпр");
		ЗаполнитьЗначенияСвойств(СтруктураЗаполнения,Элементы.Список.ТекущиеДанные);
		Закрыть(СтруктураЗаполнения);
	ИначеЕсли Параметры.РежимПодбора Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеСтроки = ПолучитьДанныеСтроки(Элементы.Список.ТекущиеДанные.НомерСтроки,Элементы.Список.ТекущиеДанные.Регистратор);
		ОповеститьОВыборе(ДанныеСтроки);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


&НаСервере
Процедура УстановитьОтборы()
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.КомпоновщикНастроек.Настройки.Отбор, "Организация", Организация, , , ЗначениеЗаполнено(Организация));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.КомпоновщикНастроек.Настройки.Отбор, "Сценарий", Сценарий, , , ЗначениеЗаполнено(Сценарий));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.КомпоновщикНастроек.Настройки.Отбор, "ПериодПланирования", ПериодПланирования, , , ЗначениеЗаполнено(ПериодПланирования));
КонецПроцедуры

&НаКлиенте
Процедура Сценарий1ПриИзменении(Элемент)
	УстановитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Параметры.РежимПодбора Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеСтроки = ПолучитьДанныеСтроки(ВыбранноеЗначение.НомерСтроки,ВыбранноеЗначение.Регистратор);
		ОповеститьОВыборе(ДанныеСтроки);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезконтекста
Функция ПолучитьДанныеСтроки(НомерСтроки,Регистратор)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ТекущаяДата КАК Период,
		|	фин_ОборотыБюджетов.ФинансовыйПоказатель,
		|	фин_ОборотыБюджетов.УправленческоеПодразделение,
		|	фин_ОборотыБюджетов.Проект,
		|	фин_ОборотыБюджетов.Контрагент,
		|	фин_ОборотыБюджетов.Номенклатура,
		|	фин_ОборотыБюджетов.Валюта,
		|	фин_ОборотыБюджетов.Количество,
		|	фин_ОборотыБюджетов.ВалютнаяСумма КАК Сумма,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез1,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез2,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез3,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез4,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез5,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез6,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез7,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез8,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез9,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез10
		|ИЗ
		|	РегистрНакопления.фин_ФактическиеОборотыБюджетов КАК фин_ОборотыБюджетов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.фин_КлассификаторНаборовДополнительныхРазрезов КАК фин_КлассификаторНаборовДополнительныхРазрезов
		|		ПО фин_ОборотыБюджетов.ДополнительныеРазрезы = фин_КлассификаторНаборовДополнительныхРазрезов.Ссылка
		|ГДЕ
		|	фин_ОборотыБюджетов.НомерСтроки = &НомерСтроки
		|	И фин_ОборотыБюджетов.Регистратор = &Регистратор";
	
	Запрос.УстановитьПараметр("НомерСтроки", НомерСтроки);
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Таблица = РезультатЗапроса.Выгрузить();
	
	Структура = Новый Структура;
	Для Каждого Колонка Из Таблица.Колонки Цикл
		Структура.Вставить(Колонка.Имя,?(Таблица.Количество()=0,Неопределено,Таблица[0][колонка.Имя]));
	КонецЦикла;
	Возврат Структура;
	
КонецФункции
