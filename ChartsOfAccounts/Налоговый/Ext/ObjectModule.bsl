Перем ЗапрещенныеСчета Экспорт;
Перем СписокИсключений Экспорт;

Процедура ПередЗаписью(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если Забалансовый = 0 Тогда
		Забалансовый = 1;
	КонецЕсли;

	Порядок = СокрЛ(ПолучитьПорядокКода());

КонецПроцедуры

ЗапрещенныеСчета = Новый СписокЗначений();
попытка
ЗапрещенныеСчета.Добавить(ПланыСчетов.Налоговый.РасходыПоКурсовойРазнице);
ЗапрещенныеСчета.Добавить(ПланыСчетов.Налоговый.ДоходОтКурсовойРазницы);
ЗапрещенныеСчета.Добавить(ПланыСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаРаботУслугПрав);

//по расчету заработной платы
ЗапрещенныеСчета.Добавить(ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками); // 3350Н (Н460)
ЗапрещенныеСчета.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоСоциальномуСтрахованию); // 3211Н
ЗапрещенныеСчета.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоВзносамОСМС); // 3212Н
ЗапрещенныеСчета.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоОтчислениямОСМС); // 3213Н
ЗапрещенныеСчета.Добавить(ПланыСчетов.Налоговый.ОбязательстваПоПенсионнымОтчислениям);  // 3220Н
Исключение
КонецПопытки;

СписокИсключений = Новый СписокЗначений();