

#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ПоВсемОрганизациям = Истина;
	УстановитьНастройкиПоОрганизации();
	
	Если Параметры.Свойство("СчетЗамены") И НЕ Параметры.СчетЗамены = Неопределено Тогда
		СтрокаСчетаЗамены = ТаблицаОбновляемыеСчета.Добавить();
		СтрокаСчетаЗамены.ИсходныйСчет = Параметры.СчетЗамены;
		СтрокаСчетаЗамены.НаименованиеИсходногоСчета = Параметры.СчетЗамены.Наименование;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
	СобытиеЖурналаРегистрацииЗаменаСчетов = НСтр("ru = 'Замена ссылок на счета регламентированного учета в данных'");
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновляемыеСчетаИсходныйСчетПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТаблицаОбновляемыеСчета.ТекущиеДанные;	
	ТекущаяСтрока.НаименованиеИсходногоСчета = ТекущаяСтрока.ИсходныйСчет.Наименование;
	
	ЗафиксироватьОшибкиПоСтроке(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновляемыеСчетаНовыйСчетПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТаблицаОбновляемыеСчета.ТекущиеДанные;
	ТекущаяСтрока.НаименованиеНовогоСчета = ТекущаяСтрока.НовыйСчет.Наименование;
		
	ЗафиксироватьОшибкиПоСтроке(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЖурналРегистрацииНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СобытиеЖурналаРегистрации", СобытиеЖурналаРегистрацииЗаменаСчетов);
	ПараметрыФормы.Вставить("ДатаНачала", ВремяНачалаЗаменыСчетов);
	Если ВремяОкончанияЗаменыСчетов <> Неопределено Тогда
		ПараметрыФормы.Вставить("ДатаОкончания", ВремяОкончанияЗаменыСчетов);
	КонецЕсли;

	ОткрытьФорму("Обработка.ЖурналРегистрации.Форма.ЖурналРегистрации", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаНазад(Команда)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница 	= Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаНастройкаЗамены;
	Элементы.СтраницыКомандыНиз.ТекущаяСтраница = Элементы.СтраницыКомандыНиз.ПодчиненныеЭлементы.СтраницаКомандыНизШаг1;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоВсемОрганизациямПриИзменении(Элемент)
	
	УстановитьНастройкиПоОрганизации();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ЗаменитьСчета(Команда)
	
	ОшибкиНастройкиЗаменыСсылок = ПроверитьНастройкиСчетов();
	Если ОшибкиНастройкиЗаменыСсылок.ОшибкиПоСчетам Тогда
		Возврат;
	ИначеЕсли ОшибкиНастройкиЗаменыСсылок.ОшибкиПоАналитике Тогда
		ТекстВопроса = НСтр("ru = 'Счета замены ссылок различаются по видам аналитики, часть данных может быть утеряна необратимо. Продолжить?'");
	Иначе
		ТекстВопроса = НСтр("ru = 'Операция замены счетов в объектах информационной базы необратима. Продолжить?'");
	КонецЕсли;
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияВопросаЗаменыСчетов", ЭтаФорма);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьАнализСчета(Команда)
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
	
	ТекущаяСтрока = Элементы.ТаблицаОбновляемыеСчета.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		СчетДляАнализа = ПредопределенноеЗначение("ПланСчетов.Типовой.ПустаяСсылка");
	Иначе
		СчетДляАнализа = ТекущаяСтрока.ИсходныйСчет;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СчетДляАнализа) Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru='Не выбран счет для анализа'"));
		Возврат;
	КонецЕсли;
		
	ФормаОтчета = Отчеты.АнализСчетатиповой.ПолучитьФорму();
	ПараметрыОтчета = ОпределитьПараметрыАнализаСчета(СчетДляАнализа);
	ЗаполнитьЗначенияСвойств(ФормаОтчета, ПараметрыОтчета);
	ФормаОтчета.Настроить();
	
	ФормаОтчета.Открыть();
	ФормаОтчета.ОбновитьОтчет();
	
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНеиспользуемымиСчетами(Команда)
	
	Если ТаблицаОбновляемыеСчета.Количество() > 0 Тогда
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ПослеЗакрытияВопросаЗаполнитьСчета", ЭтаФорма), 
			НСтр("ru = 'Список счетов по замене ссылок будет перезаполнен. Продолжить?'"), 
			РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьНеиспользуемымиСчетамиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗаполнитьСчета(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

	ЗаполнитьНеиспользуемымиСчетамиНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыиФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗафиксироватьОшибкиПоСтроке(ТекущаяСтрока)
	
	ОшибкиПоСоответствиюАналитикСчетов = ПоискОшибокПоАналитикеСчетов(ТекущаяСтрока.ИсходныйСчет, ТекущаяСтрока.НовыйСчет);
	
	Если ЗначениеЗаполнено(ОшибкиПоСоответствиюАналитикСчетов) Тогда
		ТекущаяСтрока.ВыявленыОшибки = Истина;
		ТекстОшибки = НСтр("ru = 'Отсутствует аналитика: %1'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ОшибкиПоСоответствиюАналитикСчетов);

		ТекущаяСтрока.Комментарий = ТекстОшибки;
	Иначе
		ТекущаяСтрока.ВыявленыОшибки = Ложь;
		ТекущаяСтрока.Комментарий = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНеиспользуемымиСчетамиНаСервере()
	
	ТаблицаОбновляемыеСчета.Очистить();	
	
	МакетОбновленияПС = ПланыСчетов.Типовой.ПолучитьМакет("ПФ_MXL_ИзменяемыеСчета2019");
	
	СчетаДляОбновления = МакетОбновленияПС.Области.Найти("СписокСчетов");
	
	Если НЕ СчетаДляОбновления = Неопределено Тогда
		
		Для НомерСтр = СчетаДляОбновления.Верх По СчетаДляОбновления.Низ Цикл
			
			ИмяЗаменяемогоСчета	= СокрП(МакетОбновленияПС.Область(НомерСтр, 2).Текст);
			ЗаменяемыйСчет = ПланыСчетов.Типовой[ИмяЗаменяемогоСчета];
			
			ИмяНовогоСчета = СокрП(МакетОбновленияПС.Область(НомерСтр, 4).Текст);
			НовыйСчет      = ПланыСчетов.Типовой[ИмяНовогоСчета];
			
			Если ЗначениеЗаполнено(ЗаменяемыйСчет) И ЗначениеЗаполнено(НовыйСчет) Тогда
				СтрокаОбновляемыеСчета = ТаблицаОбновляемыеСчета.Добавить();
				СтрокаОбновляемыеСчета.ИсходныйСчет = ЗаменяемыйСчет;
				СтрокаОбновляемыеСчета.НаименованиеИсходногоСчета = ЗаменяемыйСчет.Наименование;
				СтрокаОбновляемыеСчета.НовыйСчет = НовыйСчет;
				СтрокаОбновляемыеСчета.НаименованиеНовогоСчета = НовыйСчет.Наименование;
				ЗафиксироватьОшибкиПоСтроке(СтрокаОбновляемыеСчета);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьНастройкиПоОрганизации()
	
	Если ПоВсемОрганизациям Тогда
		Организация = Справочники.Организации.ПустаяСсылка();
	Иначе
		Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(
			ПользователиКлиентСервер.ТекущийПользователь(), "ОсновнаяОрганизация");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОпределитьПараметрыАнализаСчета(СчетДляАнализа)
	
	ПараметрыАнализаСчета = Новый Структура();
	ПараметрыАнализаСчета.Вставить("РежимРасшифровки",  Истина);
	ПараметрыАнализаСчета.Вставить("Счет",				СчетДляАнализа);
	Если ЗначениеЗаполнено(Организация) Тогда
		СписокСтруктурныхЕдиниц = Новый СписокЗначений;
		СписокСтруктурныхЕдиниц.Добавить(Организация); 
		ПараметрыАнализаСчета.Вставить("мСписокСтруктурныхЕдиниц", СписокСтруктурныхЕдиниц);
	КонецЕсли;

	Возврат ПараметрыАнализаСчета;
	
КонецФункции

&НаСервере
Функция ПоискДублейИсходныхСчетов()
	
	ТаблицаСчетов = ДанныеФормыВЗначение(ТаблицаОбновляемыеСчета,Тип("ТаблицаЗначений"));
	ТаблицаСчетов.Колонки.Добавить("КоличествоСчетов");
	ТаблицаСчетов.ЗаполнитьЗначения(1, "КоличествоСчетов");
	ТаблицаСчетов.Свернуть("ИсходныйСчет", "КоличествоСчетов");
	
	МассивДублейПоСчетам = Новый Массив;
	Для каждого ТекСтрока Из ТаблицаСчетов Цикл
		Если ТекСтрока.КоличествоСчетов > 1 Тогда
			МассивДублейПоСчетам.Добавить(ТекСтрока.ИсходныйСчет);
		КонецЕсли;
	КонецЦикла; 
	
	Возврат МассивДублейПоСчетам;
		
КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗаменыСчетов(Результат, Параметры) Экспорт 
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаменитьНаСервере();
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница 	= Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаРезультатЗаменыДанных;
	Элементы.СтраницыКомандыНиз.ТекущаяСтраница = Элементы.СтраницыКомандыНиз.ПодчиненныеЭлементы.СтраницаКомандыНизШаг2;

КонецПроцедуры

&НаСервере
Процедура ЗаменитьНаСервере()
	
	ВремяНачалаЗаменыСчетов 	  = ТекущаяДатаСеанса();
    
	ТаблицаСчетов = ДанныеФормыВЗначение(ТаблицаОбновляемыеСчета,Тип("ТаблицаЗначений"));
	СписокЗаменяемыхОбъектов = Новый СписокЗначений;
	СписокНовыхОбъектов      = Новый СписокЗначений;
	
	Для Каждого ТекСтрока Из ТаблицаСчетов Цикл
		СписокЗаменяемыхОбъектов.Добавить(ТекСтрока.ИсходныйСчет);
		СписокНовыхОбъектов.Добавить(ТекСтрока.НовыйСчет);
	КонецЦикла;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("СписокЗаменяемыхОбъектов", СписокЗаменяемыхОбъектов);
	СтруктураПараметров.Вставить("СписокНовыхОбъектов", СписокНовыхОбъектов);
	СтруктураПараметров.Вставить("Организация", Организация);
	
	ПланыСчетов.Типовой.ЗаменитьСчетаПриОбновленииПланаСчетов(СтруктураПараметров);
	
	ВремяОкончанияЗаменыСчетов = ТекущаяДатаСеанса();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоискОшибокПоАналитикеСчетов(ИсходныйСчет, НовыйСчет)
	
	СтрокаОшибокСоответствияАналитики = "";
	
	Если НЕ ЗначениеЗаполнено(ИсходныйСчет) ИЛИ НЕ ЗначениеЗаполнено(НовыйСчет) Тогда
		Возврат СтрокаОшибокСоответствияАналитики;	
	КонецЕсли;
		
	ВидыСубконтоИсходные = ИсходныйСчет.ВидыСубконто;
	ВидыСубконтоНовые    = НовыйСчет.ВидыСубконто;
	
	Для каждого ИсходныйВидСубконто Из ВидыСубконтоИсходные Цикл
	
		Если ВидыСубконтоНовые.Найти(ИсходныйВидСубконто.ВидСубконто) = Неопределено Тогда
			Если ЗначениеЗаполнено(СтрокаОшибокСоответствияАналитики) Тогда
				СтрокаОшибокСоответствияАналитики = СтрокаОшибокСоответствияАналитики + ", ";
			КонецЕсли;
			СтрокаОшибокСоответствияАналитики = СтрокаОшибокСоответствияАналитики + СокрЛП(ИсходныйВидСубконто.ВидСубконто.Наименование);
		КонецЕсли;
	
	КонецЦикла; 
	
	Возврат СтрокаОшибокСоответствияАналитики;
	
КонецФункции	

&НаКлиенте
Функция ПроверитьНастройкиСчетов()
	
	ТекстОшибки = "";
	ОшибкиПоАналитике = Ложь;
	
	СтруктураОшибок = Новый Структура;
	
	НомерСтрокиНастройкиСчетов = 1;
	Для Каждого СтрокаТаблицы Из ТаблицаОбновляемыеСчета Цикл
		Если ЗначениеЗаполнено(СтрокаТаблицы.ИсходныйСчет) И НЕ ЗначениеЗаполнено(СтрокаТаблицы.НовыйСчет) Тогда
			ТекстОшибки = НСтр("ru = 'Для исходного счета %1 не указан новый, на который будет произведена замена данных.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, СокрЛП(СтрокаТаблицы.ИсходныйСчет));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		ИначеЕсли НЕ ЗначениеЗаполнено(СтрокаТаблицы.ИсходныйСчет) И ЗначениеЗаполнено(СтрокаТаблицы.НовыйСчет) Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнен исходный счет для нового счета замены данных %1.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, СокрЛП(СтрокаТаблицы.НовыйСчет));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		ИначеЕсли НЕ ЗначениеЗаполнено(СтрокаТаблицы.ИсходныйСчет) И НЕ ЗначениеЗаполнено(СтрокаТаблицы.НовыйСчет) Тогда
			ТекстОшибки = НСтр("ru = 'Для строки %1 не определены счета замены данных'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, НомерСтрокиНастройкиСчетов);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		КонецЕсли;
		Если СтрокаТаблицы.ВыявленыОшибки Тогда
			ОшибкиПоАналитике = Истина;
		КонецЕсли;
		НомерСтрокиНастройкиСчетов = НомерСтрокиНастройкиСчетов + 1;
	КонецЦикла;
	
	ДублиИсходныхСчетов = ПоискДублейИсходныхСчетов();
	Для каждого ТекЭлемент Из ДублиИсходныхСчетов Цикл
	    ТекстОшибки = НСтр("ru = 'Для исходного счета %1 настройки определены несколько раз, необходимо оставить только одну строку с новым счетом'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ТекЭлемент);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецЦикла;
	
	Если ТаблицаОбновляемыеСчета.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Не определены настройки для замены счетов'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
	СтруктураОшибок.Вставить("ОшибкиПоСчетам",    ЗначениеЗаполнено(ТекстОшибки));
	СтруктураОшибок.Вставить("ОшибкиПоАналитике", ОшибкиПоАналитике);

	Возврат СтруктураОшибок;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Элементы.Организация.Видимость = НЕ Форма.ПоВсемОрганизациям;
	
КонецПроцедуры

#КонецОбласти