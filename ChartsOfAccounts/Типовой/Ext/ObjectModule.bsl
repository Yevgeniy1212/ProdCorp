Перем ЗапрещенныеСчета Экспорт;
Перем СписокИсключений Экспорт;

Процедура ПередЗаписью(Отказ)
    Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Порядок = СокрЛ(ПолучитьПорядокКода());

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если Не Отказ Тогда
		глЗначениеПеременнойУстановить("глВедетсяУчетПоРасчетнымДокументам", УправлениеВзаиморасчетами.ВедутсяВзаиморасчетыПоДокументам(), Истина);
	КонецЕсли;
	
КонецПроцедуры

ЗапрещенныеСчета = Новый СписокЗначений();

ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.СырьеИМатериалы);
ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.ГотоваяПродукция);
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.Товары);
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.МонтажОборудования);
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.МатериалыПринятыеВПереработку_);
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.ОсновноеПроизводство_);

//для проводок по курсовым разницам
ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.РасходыПоКурсовойРазнице);
ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.ДоходыОтКурсовойРазницы);

//по расчету заработной платы
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоОплатеТруда); //3350
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоДепонированнойЗаработнойПлате); //3394
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.ОбязательстваПоПенсионнымОтчислениям); //3220
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.ОбязательстваПоСоциальномуСтрахованию); //3210
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.КраткосрочныеОценочныеОбязательстваПоВознаграждениямРаботникам); //3430
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.ДолгосрочнаяЗадолженностьПоДепонированнойЗаработнойПлате); //4174
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.ДолгосрочныеОценочныеОбязательстваПоВознаграждениямРаботникам); //4230
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоВыплаченнойЗаработнойПлате); //1252
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.ДолгосрочнаяЗадолженностьПоВыплаченнойЗаработнойПлате); //2152

//прибыль/убыток отчетного года
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.НераспределеннаяПрибыльНепокрытыйУбытокОтчетногоГода);

//налоговые платежи
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.ОтложенныеНалоговыеАктивыПоКорпоративномуПодоходномуНалогу);
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.КорпоративныйПодоходныйНалогПодлежащийУплате);
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.РасходыПоКорпоративномуПодоходномуНалогу);
//ЗапрещенныеСчета.Добавить(ПланыСчетов.Типовой.ОтложенныеНалоговыеОбязательстваПоКорпоративномуПодоходномуНалогу);

// счета доходов и затрат
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	Типовой.Ссылка КАК Счет
               |ИЗ
               |	ПланСчетов.Типовой КАК Типовой
               |ГДЕ
               |	Типовой.Родитель В (&СчетаРодители)";
			   
// доходы			   
СчетаДоходов = Новый СписокЗначений;
СчетаДоходов.Добавить(ПланыСчетов.Типовой.ДоходОтРеализацииПродукцииИОказанияУслуг_); //6000
СчетаДоходов.Добавить(ПланыСчетов.Типовой.ДоходыОтФинансирования); //6100
СчетаДоходов.Добавить(ПланыСчетов.Типовой.ПрочиеДоходы_); //6200
СчетаДоходов.Добавить(ПланыСчетов.Типовой.ДоходыСвязанныеСПрекращаемойДеятельностью_); //6300
СчетаДоходов.Добавить(ПланыСчетов.Типовой.ДоляПрибылиОрганизацийУчитываемыхПоМетодуДолевогоУчастия); //6400

Для Каждого СчетДохода Из СчетаДоходов Цикл
	ЗапрещенныеСчета.Добавить(СчетДохода.Значение);
КонецЦикла;	

Запрос.УстановитьПараметр("СчетаРодители", СчетаДоходов);
Выборка = Запрос.Выполнить().Выбрать();

Пока Выборка.Следующий() Цикл
	ЗапрещенныеСчета.Добавить(Выборка.Счет);
КонецЦикла;	

// затраты
СчетаЗатрат = Новый СписокЗначений;
СчетаЗатрат.Добавить(ПланыСчетов.Типовой.СебестоимостьРеализованнойПродукцииИОказанныхУслуг_); //7000
СчетаЗатрат.Добавить(ПланыСчетов.Типовой.РасходыНаФинансирование); //7300
СчетаЗатрат.Добавить(ПланыСчетов.Типовой.ПрочиеРасходы_); //7400
СчетаЗатрат.Добавить(ПланыСчетов.Типовой.РасходыСвязанныеСПрекращаемойДеятельностью_); //7500
СчетаЗатрат.Добавить(ПланыСчетов.Типовой.ДоляВУбыткеОрганизацийУчитываемыхМетодомДолевогоУчастия); //7600
СчетаЗатрат.Добавить(ПланыСчетов.Типовой.РасходыПоКорпоративномуПодоходномуНалогу_); //7700

Для Каждого СчетЗатрат Из СчетаЗатрат Цикл
	ЗапрещенныеСчета.Добавить(СчетЗатрат.Значение);
КонецЦикла;	

Запрос.УстановитьПараметр("СчетаРодители", СчетаЗатрат);
Выборка = Запрос.Выполнить().Выбрать();

Пока Выборка.Следующий() Цикл
	ЗапрещенныеСчета.Добавить(Выборка.Счет);
КонецЦикла;	

ТаблицаСчетовВзаиморасчетов = УправлениеВзаиморасчетами.ПолучитьСписокСчетовВзаиморасчетов();
Для каждого Строка Из ТаблицаСчетовВзаиморасчетов Цикл
	ЗапрещенныеСчета.Добавить(Строка.Ссылка);
КонецЦикла;


СписокИсключений = Новый СписокЗначений();
