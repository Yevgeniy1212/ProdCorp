//////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура выполняет обновление реквизитов "ЗачетОтработанногоВремени" и
// "ЗачетНормыВремени" в зависимости от значения ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени
//
// Параметры:
//  Нет.
//
Процедура ОбновитьПризнакиУчетаВремени() Экспорт

	Если НЕ ЗначениеЗаполнено(ОбозначениеВТабелеУчетаРабочегоВремени) Тогда
		ЗачетОтработанногоВремени 	= Ложь;
		ЗачетНормыВремени 			= Ложь;
	Иначе
		ВидВремени = ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени;
		
		Если ВидВремени = Перечисления.ВидыВремени.ОтработанноеВПределахНормы Тогда
			ЗачетОтработанногоВремени 	= Истина;
			ЗачетНормыВремени 			= Истина;
		ИначеЕсли ВидВремени = Перечисления.ВидыВремени.ОтработанноеСверхНормы Тогда
			ЗачетОтработанногоВремени 	= Истина;
			ЗачетНормыВремени 			= Ложь;
		ИначеЕсли ВидВремени = Перечисления.ВидыВремени.ЦелодневноеНеотработанное Тогда
			ЗачетОтработанногоВремени 	= Ложь;
			ЗачетНормыВремени 			= Истина;
		ИначеЕсли ВидВремени = Перечисления.ВидыВремени.ЧасовоеНеотработанное Тогда
			ЗачетОтработанногоВремени 	= Ложь;
			ЗачетНормыВремени 			= Истина;
		Иначе
			ЗачетОтработанногоВремени 	= Ложь;
			ЗачетНормыВремени 			= Ложь;
		КонецЕсли;
	КонецЕсли;
	
	// связанное изменение зависимых признаков
	Если ЗачетОтработанногоВремени Тогда
		УчетОтработанногоВремени = Истина;
	КонецЕсли;
	
	Если Не ЗачетНормыВремени Тогда
		ЗачетОтработанногоВремениДляВычета = Ложь;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ПриКопировании
//
Процедура ПриКопировании(ОбъектКопирования)
    Если ОбъектКопирования.Предопределенный Тогда
		ТЧ = ВытесняющиеВидыРасчета.Выгрузить();
		ТЧ.ЗаполнитьЗначения(Ложь,"Предопределенный");
		ВытесняющиеВидыРасчета.Загрузить(ТЧ);
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 

	// Описание текста запроса:
	// Первая часть запроса - поиск видов расчета, которые вытесняЮт текущий, являющийся почасовым отклонением: 
	//		Выбираются виды расчета, которые вытесняЕт текущий, проверяется отсутствие таких видов
	//
	// Вторая часть запроса - поиск видов расчета, которые вытесняЕт текущий, являющийся почасовым отклонением: 
	//		Выбираются виды расчета, которые вытесняЕт текущий, проверяется отсутствие таких видов
	//
	// Третья часть запроса - поиск видов расчета, являющихся почасовыми отклонениями, которые вытесняЮт текущий: 
	//		Для вида расчета, не являющегося почасовым отклонением, поиск вытесняющий его видов - почасовых отклонений
	// 
	// Четвертая часть запроса - проверка соответствия почасовых способов расчета и видов времени 
	// 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамСсылка", Ссылка);
	Запрос.УстановитьПараметр("СписокПочасовыхОтклонений", ПроведениеРасчетов.ПолучитьСписокНачисленийПочасовыхОтклонений());
	Запрос.УстановитьПараметр("ЧасовоеНеотработанное", Перечисления.ВидыВремени.ЧасовоеНеотработанное);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	""Для почасовых отклонений нельзя назначать вытесняющие виды расчета"" КАК ОписаниеКонфликта
	|ИЗ
	|	(ВЫБРАТЬ
	|			КОЛИЧЕСТВО(*) КАК КоличествоВР
	|		ИЗ
	|			ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК ВытесняющиеВР
	|		ГДЕ
	|			ВытесняющиеВР.Ссылка = &парамСсылка И
	|			ВытесняющиеВР.Ссылка.СпособРасчета В (&СписокПочасовыхОтклонений)) КАК ДанныеПоВытесняющимВР
	|ГДЕ
	|	ДанныеПоВытесняющимВР.КоличествоВР > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Недопустимо назначение почасового отклонения '""+ОсновныеНачисления.Ссылка.Наименование+""' как вытесняющего для '"" + ВытесняемыеНачисления.Ссылка.Наименование+""'"" КАК ОписаниеКонфликта
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК ВытесняемыеНачисления
	|		ПО ОсновныеНачисления.Ссылка = ВытесняемыеНачисления.ВидРасчета
	|ГДЕ
	|	ОсновныеНачисления.Ссылка = &парамСсылка И
	|	ОсновныеНачисления.СпособРасчета В (&СписокПочасовыхОтклонений)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Недопустимо назначение почасового отклонения '"" + ВытесняющиеВР.ВидРасчета.Наименование + ""' в качестве вытесняющего вида расчета"" КАК ОписаниеКонфликта
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК ВытесняющиеВР
	|ГДЕ
	|	ВытесняющиеВР.Ссылка = &парамСсылка И
	|	ВытесняющиеВР.ВидРасчета.СпособРасчета В (&СписокПочасовыхОтклонений)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Вид времени 'часовые отклонения и командировки' и способ расчета, являющийся почасовым отклонением, могут использоваться только совместно"" КАК ОписаниеКонфликта
	|ИЗ
	|	(ВЫБРАТЬ
	|			ВЫБОР КОГДА СпособРасчета В (&СписокПочасовыхОтклонений) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ КАК ВРПочасовоеОтклонение,
	|			ВЫБОР КОГДА ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени = &ЧасовоеНеотработанное ТОГДА 1 ИНАЧЕ 0 КОНЕЦ КАК ВидВремениЧасовоеНеотработанное
	|		ИЗ
	|			ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисления
	|		ГДЕ
	|			ОсновныеНачисления.Ссылка = &парамСсылка) КАК ДанныеВР
	|ГДЕ
	|	ВРПочасовоеОтклонение <> ВидВремениЧасовоеНеотработанное
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.ОписаниеКонфликта) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(Выборка.ОписаниеКонфликта, Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОсновныеНачисленияОрганизацийПереопределяемый.ПередЗаписьюДополнительно(ЭтотОбъект);

КонецПроцедуры
