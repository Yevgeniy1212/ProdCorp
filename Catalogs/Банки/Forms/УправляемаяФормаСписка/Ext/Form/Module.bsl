
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	оф_СведенияЗаголовок = "Сведения";
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ, ВЫЗЫВАЕМЫЕ ИЗ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события "ПриАктивизации" реквизита "Список"
&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ИнформационнаяНадписьТелефоны="Телефоны: ";
	ИнформационнаяНадписьАдрес="Адрес: ";
	//Если Элемент.ТекущиеДанные <> Неопределено И НЕ ЭтоГруппа(Элемент.ТекущиеДанные) Тогда
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Элементы.ИнформационнаяНадписьТелефоны.Заголовок="Телефоны: "+Элемент.ТекущиеДанные.Телефоны;
		Элементы.ИнформационнаяНадписьАдрес.Заголовок="Адрес: "+Элемент.ТекущиеДанные.Адрес;
	КонецЕсли;
	//Элементы.Дерево.ТекущаяСтрока = Элементы.Список.ТекущийРодитель;
КонецПроцедуры // СписокПриАктивизацииСтроки()

&НаСервереБезКонтекста
Функция ЭтоГруппа(Знач ТекущиеДанные)
	Возврат ТекущиеДанные.ЭтоГруппа;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура - обработчик нажатия кнопки "ОбновлениеБИКов"
// подменю "Действия"
//
&НаКлиенте
Процедура ДействияФормыОбновлениеБИКов(Кнопка)
	//Сообщить("Обработка справочника ""Банки"". Заполнение реквизитов ""БИК"" .");
    Состояние("Обработка справочника ""Банки""",25,"Заполнение реквизитов ""БИК"" .");
	ДействияФормыОбновлениеБИКовНаСервере();
	Состояние("Обработка справочника ""Банки"".",100,"Заполнение реквизитов ""БИК"" закончена.");
	//Сообщить("Обработка справочника ""Банки"". Заполнение реквизитов ""БИК"" закончена.");

КонецПроцедуры

&НаСервере
Процедура ДействияФормыОбновлениеБИКовНаСервере()
	ТзБанков = ЗагрузитьКлассификаторБанков();
	// обработка справочника "Банки"
	ТзБанков = ЗагрузитьКлассификаторБанков();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Банки.Ссылка,
	               |	Банки.Код,
	               |	Банки.КодВПлатежнойСистеме,
	               |	Банки.БИК,
	               |	Банки.БИКДоРеформыБанковскихСчетов,
	               |	Банки.КодВПлатежнойСистемеДоРеформыБанковскихСчетов,
	               |	Банки.Представление
	               |ИЗ
	               |	Справочник.Банки КАК Банки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.БИК) тогда
			Продолжить;
		КонецЕсли;
		СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если СпрОбъект.ЭтоГруппа Тогда 
			Продолжить;
		КонецЕсли;
		// попытка поиска по старому БИК
		Стр = ТзБанков.Найти(СокрЛП(Выборка.БИКДоРеформыБанковскихСчетов), "СтарыйБИК"); 
		Если Стр = Неопределено Тогда
			Попытка
				СпрОбъект.ОбменДанными.Загрузка = Истина;
				СпрОбъект.Записать();
			Исключение
				Сообщить(" при записи элемента " + Выборка.Представление + " произошла ошибка: " + ОписаниеОшибки(), СтатусСообщения.Важное);
			КонецПопытки;
			Продолжить;
		КонецЕсли;		
		СпрОбъект.БИК = Стр.БИК;
		СпрОбъект.КодВПлатежнойСистеме = УправлениеДенежнымиСредствами.ПолучитьКодБанкаВПлатежнойСистеме(Стр.БИК);
		Попытка
			СпрОбъект.ОбменДанными.Загрузка = Истина;
			СпрОбъект.Записать();
		Исключение
			Сообщить(" при записи элемента " + Выборка.Представление + " произошла ошибка: " + ОписаниеОшибки(), СтатусСообщения.Важное);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры
// Обработчик события Действие элемента КоменднаяПанель.ДействиеПодбор
//
&НаКлиенте
Процедура ДействияФормыДействиеПодбор(Кнопка)
	// Для совместимости с УТП
	Если Не ПроверитьПравоДоступа() Тогда
		Возврат;
	КонецЕсли;
	ОткрытьФорму("Справочник.Банки.Форма.УправляемаяФормаПодбораИзКлассификатора",,ЭтаФорма);
КонецПроцедуры

&НаСервере
Функция ПроверитьПравоДоступа()
	Возврат ОбщегоНазначения.ПроверитьПравоДоступа(Метаданные.Справочники.Банки,"Добавление");
КонецФункции


// процедура заполнения таблицы значений
// для обработки новых банковских кодов
Функция ЗагрузитьКлассификаторБанков()
	Макет 	= Справочники.Банки.ПолучитьМакет("ОбщаяТаблицаСоответствияБанковскихРеквизитов");	
	Область = Макет.Области["КлассификаторБанков"];
	ТзБанков = Новый ТаблицаЗначений;
	ТзБанков.Колонки.Добавить("БИК");
	ТзБанков.Колонки.Добавить("СтарыйБИК");
	ТзБанков.Колонки.Добавить("Наименование");
		
	Для Ном = Область.Верх По Область.Низ Цикл
		НоваяСтрока = ТзБанков.Добавить();
		
		НоваяСтрока.БИК = СокрЛП(Макет.Область(Ном, 1).Текст);
		НоваяСтрока.СтарыйБИК = СокрЛП(Макет.Область(Ном, 2).Текст);
		НоваяСтрока.Наименование = СокрЛП(Макет.Область(Ном, 3).Текст);	
	КонецЦикла;	
	
	Возврат ТзБанков;
КонецФункции

&НаКлиенте
Процедура БИКПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Список.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.КодВПлатежнойСистеме) Тогда
		СтрокаТабличнойЧасти.КодВПлатежнойСистеме = УправлениеДенежнымиСредствами.ПолучитьКодБанкаВПлатежнойСистеме(СтрокаТабличнойЧасти.БИК);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура БИКДоРеформыБанковскихСчетовПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Список.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.КодВПлатежнойСистемеДоРеформыБанковскихСчетов) Тогда
		СтрокаТабличнойЧасти.КодВПлатежнойСистемеДоРеформыБанковскихСчетов = УправлениеДенежнымиСредствами.ПолучитьКодБанкаВПлатежнойСистеме(СтрокаТабличнойЧасти.БИКДоРеформыБанковскихСчетов);
	КонецЕсли;	
КонецПроцедуры
