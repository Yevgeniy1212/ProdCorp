&НаСервере
Перем СоответствиеРегистров;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УчастиеВОтраженииФакта = фин_РегистрацияФактическихДанныхПоБюджетированию.ОпределитьВозможностьРегистрацииФактаРегистром(Объект.ПрограммныйИдентификатор,Объект.ВидРегистра);
	Элементы.РегистрироватьПервичныеДанныеПоБюджетированию.Доступность = УчастиеВОтраженииФакта;
	Если Объект.РегистрироватьПервичныеДанныеПоБюджетированию И Не Объект.Ссылка.Пустая() Тогда
		ПрочитатьШаблонПроводок();
	КонецЕсли;
	ЗаполнитьСписокВыбораРегистров();
	УстановитьДоступность();
	НадписьОтражениеВБюджетах 	= "Отражение в бюджетах";
	НадписьРегистрСистемы 		= "Регистр системы";
КонецПроцедуры

&НаСервере
// заполняет список выбора документа на основании метаданных
//
Процедура ЗаполнитьСписокВыбораРегистров()
	СписокВыбора.Очистить();
	Если НЕ Объект.ВидРегистра.Пустая() Тогда
		Для Каждого Документ Из Метаданные[СоответствиеРегистров.Получить(Объект.ВидРегистра)] Цикл
			СписокВыбора.Добавить(Документ.Имя,Документ.Синоним);
		КонецЦикла;
	КонецЕсли;
	СписокВыбора.СортироватьПоПредставлению();
КонецПроцедуры //ЗаполнитьСписокВыбораДокументов

&НаСервере
Процедура УстановитьДоступность()
	УчастиеВОтраженииФакта = фин_РегистрацияФактическихДанныхПоБюджетированию.ОпределитьВозможностьРегистрацииФактаРегистром(Объект.ПрограммныйИдентификатор,Объект.ВидРегистра);// ?(ЗначениеЗаполнено(Объект.ВидРегистра) И Объект.ПрограммныйИдентификатор<>"",Метаданные.ПодпискиНаСобытия.Найти("фин_БюджетированиеФормированиеПроводок"+СоответствиеРегистров.Получить(Объект.ВидРегистра)).Источник.СодержитТип(Тип(СтрЗаменить(СоответствиеРегистров.Получить(Объект.ВидРегистра),"Регистры","Регистр")+"НаборЗаписей."+Объект.ПрограммныйИдентификатор)),Ложь);
	Элементы.РегистрироватьПервичныеДанныеПоБюджетированию.Доступность = УчастиеВОтраженииФакта;
	Элементы.Шаблон.Доступность = Объект.РегистрироватьПервичныеДанныеПоБюджетированию И Не Объект.Ссылка.Пустая();
	Элементы.ДатаДействияШаблона.Доступность = Объект.РегистрироватьПервичныеДанныеПоБюджетированию И Не Объект.Ссылка.Пустая();
КонецПроцедуры

//Процедура ПрочитатьШаблонПроводок
//
Процедура ПрочитатьШаблонПроводок()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	фин_ПрименениеСхемОтраженияФактическихДанных.Период,
	               |	фин_ПрименениеСхемОтраженияФактическихДанных.Схема КАК НаборШаблонов
	               |ИЗ
	               |	РегистрСведений.фин_ПрименениеСхемОтраженияФактическихДанных.СрезПоследних(, ОбъектИнформационнойБазы = &Ссылка) КАК фин_ПрименениеСхемОтраженияФактическихДанных";
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Шаблон = Справочники.фин_СхемыОтраженияФактическихДанных.ПустаяСсылка();
		
		ДатаДействияШаблона ='19800101';
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Шаблон 	= Выборка.НаборШаблонов;
		ДатаДействияШаблона = Выборка.Период;
		мЕстьЗаписи = Истина;
	КонецЕсли;
	
	мШаблон 	= Шаблон;
	мДатаВводаВДействие = ДатаДействияШаблона;
	
КонецПроцедуры //ПрочитатьШаблонПроводок

&НаКлиенте
Процедура ВидРегистраПриИзменении(Элемент)
	ЗаполнитьСписокВыбораРегистров();
	Если (НЕ Объект.ВидРегистра.Пустая()) И Объект.ПрограммныйИдентификатор<>"" Тогда
		ОбработатьИзменениеВида();
		УстановитьДоступность();
		Если НЕ УчастиеВОтраженииФакта Тогда
			Объект.РегистрироватьПервичныеДанныеПоБюджетированию=Ложь;
			Шаблон = ПредопределенноеЗначение("Справочник.фин_СхемыОтраженияФактическихДанных.ПустаяСсылка");
		КонецЕсли;
	Иначе
		Объект.НаименованиеПолное = "";
		УстановитьДоступность();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеВида()
	Если Метаданные[СоответствиеРегистров.Получить(Объект.ВидРегистра)].Найти(Объект.ПрограммныйИдентификатор)<>Неопределено Тогда
		Объект.НаименованиеПолное = Метаданные[СоответствиеРегистров.Получить(Объект.ВидРегистра)].Найти(Объект.ПрограммныйИдентификатор).Синоним;
		Объект.Наименование			 = Объект.НаименованиеПолное;
	Иначе
		Объект.НаименованиеПолное = "";
		Объект.ПрограммныйИдентификатор="";
	КонецЕсли;
	ЗаполнитьСписокВыбораРегистров();
КонецПроцедуры


// Процедура записывает данные отражения в учете в информационную базу.
//
&НаСервере
Процедура ЗаписатьСпособОтражения(Отказ)

	Если Не ЗначениеЗаполнено(мШаблон) И Не ЗначениеЗаполнено(Шаблон) Тогда
		Возврат;
	ИначеЕсли Шаблон = мШаблон
				И ДатаДействияШаблона = мДатаВводаВДействие Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(мШаблон) И Не ЗначениеЗаполнено(Шаблон) Тогда
		Сообщить("Нельзя назначить пустой шаблон! Для отмены отражения первичных данных
		|необходимо снять признак ""Регистрировать первичные данные по бюджетированию""");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ДатаДействияШаблона = '00010101' Тогда
		Если мЕстьЗаписи=Истина Тогда
			ДатаДействияШаблона = ТекущаяДата();
		Иначе
			ДатаДействияШаблона = '19800101';
		КонецЕсли;
	КонецЕсли;	
	НаборЗаписей = РегистрыСведений.фин_ПрименениеСхемОтраженияФактическихДанных.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДатаДействияШаблона);
	НаборЗаписей.Отбор.ОбъектИнформационнойБазы.Установить(Объект.Ссылка);
	НаборЗаписей.Прочитать();
	Запись 					= НаборЗаписей.Добавить();
	Запись.Период			= ДатаДействияШаблона;
	Запись.ОбъектИнформационнойБазы 	= Объект.Ссылка;
	Запись.Схема 	= Шаблон;

	Попытка
		НаборЗаписей.Записать();
		
		мШаблон = Шаблон;
		мДатаВводаВДействие = ДатаДействияШаблона;
		
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось записать данные отражения по шаблону : " + ОписаниеОшибки());
		Отказ = Истина;
	КонецПопытки;

КонецПроцедуры // ЗаписатьСпособОтражения()

&НаКлиенте
Процедура ДатаДействияШаблонаПриИзменении(Элемент)
	Если ДатаДействияШаблона = '00010101' Тогда
		ДатаДействияШаблона = '19800101';
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ЗаписатьСпособОтражения(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура РегистрироватьПервичныеДанныеПоБюджетированиюПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура История(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
    ОткрытьФорму("РегистрСведений.фин_ПрименениеСхемОтраженияФактическихДанных.Форма.ФормаИстория",Новый Структура("Отбор",Новый Структура("ОбъектИнформационнойБазы",Объект.Ссылка)),ЭтотОбъект,УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ПрограммныйИдентификаторПриИзменении(Элемент)
	Если (НЕ Объект.ВидРегистра.Пустая()) И Объект.ПрограммныйИдентификатор<>"" Тогда
		ОбработатьИзменениеВида();
		УстановитьДоступность();
	Иначе
		Объект.НаименованиеПолное = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПрограммныйИдентификаторНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ДанныеВыбора=СписокВыбора;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	УстановитьДоступность();
	Оповестить("ЗаписьВидаРегистра",Новый Структура("ПрограммныйИдентификатор,Объект,Наименование,ВидРегистра",Объект.ПрограммныйИдентификатор,Объект.Ссылка,Объект.Наименование,Объект.ВидРегистра));
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ТекущийОбъект.Ссылка.Пустая() Тогда
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;
КонецПроцедуры


#Если Сервер Тогда
СоответствиеРегистров= Новый Соответствие;
СоответствиеРегистров.Вставить(Перечисления.фин_ВидыРегистровСистемы.РегистрыСведений,		"РегистрыСведений");
СоответствиеРегистров.Вставить(Перечисления.фин_ВидыРегистровСистемы.РегистрыБухгалтерии,	"РегистрыБухгалтерии");
СоответствиеРегистров.Вставить(Перечисления.фин_ВидыРегистровСистемы.РегистрыНакопления,	"РегистрыНакопления");
СоответствиеРегистров.Вставить(Перечисления.фин_ВидыРегистровСистемы.РегистрыРасчета,		"РегистрыРасчета");
#КонецЕсли