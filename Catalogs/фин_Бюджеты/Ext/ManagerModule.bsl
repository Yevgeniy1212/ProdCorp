#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	Если ВидФормы = "ФормаОбъекта" Тогда
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "Обработка.фин_УправлениеСтруктуройБюджета.Форма.ФормаБюджета";
		Если Параметры.Свойство("ЗначениеКопирования") Тогда
			Параметры.Вставить("Бюджет",Параметры.ЗначениеКопирования);
			Параметры.Вставить("Копирование",Истина);
		ИначеЕсли Параметры.Свойство("Ключ") Тогда
			Параметры.Вставить("Бюджет",Параметры.Ключ);
			Параметры.Вставить("Копирование",Ложь);
		Иначе
			Параметры.Вставить("Бюджет",ПредопределенноеЗначение("Справочник.фин_Бюджеты.ПустаяСсылка"));
			Параметры.Вставить("Копирование",Ложь);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция БюджетСПеретекающимиОстатками(Бюджет,НачалоПериодаПланирования=Неопределено,Версии=Неопределено) Экспорт
	
	Статьи = СтатьиБюджетаСПеретекающимиОстатками(Бюджет,НачалоПериодаПланирования,Версии);
	
	Возврат Статьи.Количество()>0;
	
КонецФункции


Функция СтатьиБюджетаСПеретекающимиОстатками(Бюджет,НачалоПериодаПланирования=Неопределено,ВерсииБюджета=Неопределено,ВключаяОборотные = Ложь) Экспорт
	Если ВерсииБюджета = Неопределено Тогда
		ВерсииБюджета = Новый Массив;
		Если НачалоПериодаПланирования<>Неопределено Тогда
			ВерсииБюджета.Добавить(фин_ПроцедурыМеханизмовБюджетирования.ВерсияБюджета(Бюджет,НачалоПериодаПланирования));
		КонецЕсли;
		ВерсииБюджета.Добавить(Справочники.фин_ВерсииБюджетов.ПустаяСсылка());
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_СтатьиБюджета.Ссылка
		|ИЗ
		|	Справочник.фин_СтатьиБюджета КАК фин_СтатьиБюджета
		|ГДЕ
		|	НЕ фин_СтатьиБюджета.ЭтоГруппа
		|	И фин_СтатьиБюджета.Владелец = &Бюджет
		|	И (&ОтборПоВерсиям = ЛОЖЬ
		|			ИЛИ фин_СтатьиБюджета.Версия В (&ВерсииБюджета))
		|	И фин_СтатьиБюджета.ФинансовыйПоказатель.ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.фин_ВидыФинансовыхПоказателей.Рассчитываемый)
		|	И ВЫБОР КОГДА &ВключаяОборотные ТОГДА фин_СтатьиБюджета.ФинансовыйПоказатель.ПризнакПеретекающегоОстатка <> ЗНАЧЕНИЕ(Перечисление.фин_ПризнакиПеретекающихОстатковМеждуПериодами.ПустаяСсылка)
		|		ИНАЧЕ фин_СтатьиБюджета.ФинансовыйПоказатель.ПризнакПеретекающегоОстатка <> ЗНАЧЕНИЕ(Перечисление.фин_ПризнакиПеретекающихОстатковМеждуПериодами.ПустаяСсылка) И фин_СтатьиБюджета.ФинансовыйПоказатель.ПризнакПеретекающегоОстатка <> ЗНАЧЕНИЕ(Перечисление.фин_ПризнакиПеретекающихОстатковМеждуПериодами.ПриростУменьшениеЗаПериод) КОНЕЦ";
	
	Запрос.УстановитьПараметр("ВключаяОборотные", ВключаяОборотные);
	Запрос.УстановитьПараметр("Бюджет", Бюджет);
	Запрос.УстановитьПараметр("ВерсииБюджета", ВерсииБюджета);
	Запрос.УстановитьПараметр("ОтборПоВерсиям", НачалоПериодаПланирования<>Неопределено ИЛИ ВерсииБюджета<>Неопределено);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса.ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ВерсионированиеБюджетаИспользуется(Бюджет) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СтатьиБюджета.Версия
		|ИЗ
		|	Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
		|ГДЕ
		|	СтатьиБюджета.Владелец = &Владелец
		|	И НЕ СтатьиБюджета.ПометкаУдаления
		|	И СтатьиБюджета.Версия <> ЗНАЧЕНИЕ(Справочник.фин_ВерсииБюджетов.ПустаяСсылка)";

	Запрос.УстановитьПараметр("Владелец", Бюджет);

	Результат = Запрос.Выполнить();
	Возврат НЕ Результат.Пустой();
КонецФункции

Функция РазличныеНастройкиИтоговВСтатьяхБюджета(Бюджет) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СтатьиБюджета.Ссылка
		|ИЗ
		|	Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
		|ГДЕ
		|	СтатьиБюджета.Владелец = &Владелец
		|	И НЕ СтатьиБюджета.ПометкаУдаления
		|	И НЕ СтатьиБюджета.ЭтоГруппа
		|	И (СтатьиБюджета.ПризнакВнутригрупповогоОборота <> &ПризнакВнутригрупповогоОборота
		|			ИЛИ СтатьиБюджета.ИтоговаяФункция НЕ В (&ИтоговаяФункция)
		|			ИЛИ СтатьиБюджета.ИсключитьИзИтогов <> &ИсключитьИзИтогов)";
	ИтоговаяФункция = Новый Массив;
	ИтоговаяФункция.Добавить(Перечисления.фин_ИтоговыеФункции.ПустаяСсылка());
	ИтоговаяФункция.Добавить(Перечисления.фин_ИтоговыеФункции.Сумма);
	Запрос.УстановитьПараметр("Владелец", 			Бюджет);
	Запрос.УстановитьПараметр("ПризнакВнутригрупповогоОборота", Перечисления.фин_ТипыВнутригрупповыхОборотовПоБюджету.ПустаяСсылка());
	Запрос.УстановитьПараметр("ИтоговаяФункция", 	ИтоговаяФункция);
	Запрос.УстановитьПараметр("ИсключитьИзИтогов", 	Ложь);

	Результат = Запрос.Выполнить();
	Возврат НЕ Результат.Пустой();
КонецФункции
	
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецЕсли