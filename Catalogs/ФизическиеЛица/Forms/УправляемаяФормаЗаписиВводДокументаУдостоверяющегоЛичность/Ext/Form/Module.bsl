&НаКлиенте
Процедура ПодтвердитьИзменения(Кнопка)
	ЗаписьИзНабора 			= НаборЗаписей[0];
	// Если что-то поменяли тогда запишем 
	Если ДокументВидПриОткрытии <> ДокументВид ИЛИ
		ДокументДатаВыдачиПриОткрытии <> ДокументДатаВыдачи ИЛИ
		ДокументКемВыданПриОткрытии <> ДокументКемВыдан ИЛИ
		ДокументНомерПриОткрытии <> ДокументНомер ИЛИ
		Период <> ПериодПриОткрытии ИЛИ
		ДокументСерияПриОткрытии <> ДокументСерия Тогда
		ЗаписьИзНабора.ДокументВид 						= ДокументВид;
		ЗаписьИзНабора.ДокументДатаВыдачи	    		= ДокументДатаВыдачи;
		ЗаписьИзНабора.ДокументКемВыдан 	    		= ДокументКемВыдан;
		ЗаписьИзНабора.ДокументНомер	    			= ДокументНомер;
		ЗаписьИзНабора.ДокументСерия 					= ДокументСерия;
		ЗаписьИзНабора.Период 							= Период;
	КонецЕсли;
	
	Закрыть();
	Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","УдостоверениеЛичности"), ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка"));
	
КонецПроцедуры
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ДокументКемВыдан.СписокВыбора.ЗагрузитьЗначения(ОбщегоНазначения.ПолучитьСписокПоУмолчаниюГосОргановВыдающихДокументыУдостоверяющиеЛичность().ВыгрузитьЗначения());
	Если НаборЗаписей.Количество() = 0 тогда
		НаборЗаписей.Добавить();
		ЗаписьИзНабора = НаборЗаписей[0];
		ЗаписьИзНабора.ФизЛицо = ФизЛицоПриОткрытии;
		ЗаписьИзНабора.Период  = ПериодПриОткрытии;
	КонецЕсли;
	ЗаписьИзНабора 						= НаборЗаписей[0];
	ДокументВид 						= ЗаписьИзНабора.ДокументВид;
	ДокументДатаВыдачи 					= ЗаписьИзНабора.ДокументДатаВыдачи;
	ДокументКемВыдан 					= ЗаписьИзНабора.ДокументКемВыдан;
	ДокументНомер 						= ЗаписьИзНабора.ДокументНомер;
	ДокументСерия 						= ЗаписьИзНабора.ДокументСерия;
	Период 								= ?(НЕ ЗначениеЗаполнено(ЗаписьИзНабора.Период), Макс(НастройкаПравДоступа.ПолучитьПервуюДатуДоступногоПериода(), '19000101'), ЗаписьИзНабора.Период);
	ФизЛицо								= ЗаписьИзНабора.Физлицо;
	Если ФизЛицо.Пустая() тогда
		//ИндКнопки = Элементы.ОсновныеДействияФормы.Кнопки.Индекс(Элементы.ОсновныеДействияФормы.Кнопки.КнопкаИстория);
		//Элементы.ОсновныеДействияФормы.Кнопки.Удалить(ИндКнопки);
		//ИндКнопки = Элементы.ОсновныеДействияФормы.Кнопки.Индекс(Элементы.ОсновныеДействияФормы.Кнопки.РазделительИстория);
		//Элементы.ОсновныеДействияФормы.Кнопки.Удалить(ИндКнопки);
		Элементы.ФормаИстория.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаИсторияНажатие(Элемент)
	КнопкаИсторияНажатиеНаСервере();
КонецПроцедуры

&НаСервере
Процедура КнопкаИсторияНажатиеНаСервере()
	
	ФормаРегистра = РегистрыСведений.ПаспортныеДанныеФизЛиц.ПолучитьФормуСписка();
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.Значение 					 = ФизЛицо;
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.ВидСравнения 				 = ВидСравнения.Равно;
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.Использование 			 = Истина;
	ФормаРегистра.ЭлементыФормы.РегистрСведенийСписок.НачальноеОтображениеСписка = НачальноеОтображениеСписка.Конец;
	ФормаРегистра.Открыть();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АдресНабораЗаписей") Тогда
		Переменные = ПолучитьИзВременногоХранилища(Параметры.АдресНабораЗаписей);
		//НаборЗаписей.Загрузить(Переменные.мНаборЗаписейДокументаУдостоверяющегоЛичность.Выгрузить());
		НаборЗаписей=Переменные.мНаборЗаписейДокументаУдостоверяющегоЛичность;
	КонецЕсли;
КонецПроцедуры
