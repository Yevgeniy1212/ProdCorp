
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	оф_СведенияОВОВЗаголовок = "Сведения о статусе участника, инвалида ВОВ и лиц, приравненных к ним";
	оф_СведенияОбИнвалидностиЗаголовок = "Сведения об инвалидности";
	оф_ТрудоваяДеятельностьЗаголовок = "Трудовая деятельность";
	Если Параметры.Свойство("ФизЛицо") Тогда
		//Объект = Параметры.ФизЛицо;
		
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПрочитатьДанныеОбИнвалидности()
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.Текст = 
    "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Период,
	|	ОтношениеКИнвалидности,
	|	СерияСправки,
	|	НомерСправки,
	|	ДатаВыдачи,
	|	ГруппаИнвалидности,
	|	СрокДействияСправки,
	|	Физлицо
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(, ФизЛицо = &Ссылка) КАК СведенияОбИнвалидностиФизлицСрезПоследних"	;

	Инвалидность = "Ввести данные об инвалидности";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если ЗначениеЗаполнено(Выборка.ОтношениеКИнвалидности) Тогда
			Инвалидность = 	Строка(Выборка.ОтношениеКИнвалидности) + ": " + Выборка.ГруппаИнвалидности + " группы" 
							+ ", справка серия: " + Выборка.СерияСправки + ", номер: " + Выборка.НомерСправки 
							+ ", выдана: "  + Формат(Выборка.ДатаВыдачи,"ДФ='дд ММММ гггг';ДП='...'") + " года "
							+ ", срок действия: " + Формат(Выборка.СрокДействияСправки,"ДФ='дд ММММ гггг';ДП='...'") + " года ";
		Иначе
			Инвалидность = "Не является инвалидом";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеОбУчастникахВОВ()
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.Текст = 
   	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Период,
	|	Статус,
	|	СерияУдостоверения,
	|	НомерУдостоверения,
	|	ДатаВыдачи,
	|	Физлицо
	|ИЗ
	|	РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(, ФизЛицо = &Ссылка) КАК СведенияОФизлицахУчастникахВОВСрезПоследних";
	СтатусУчастникаВОВ = "Ввести данные о статусе участника, инвалида ВОВ и лиц, приравненных к ним";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если ЗначениеЗаполнено(Выборка.Статус) Тогда
			СтатусУчастникаВОВ = "статус: " + Выборка.Статус + ", удостоверение серия: " + Выборка.СерияУдостоверения
								 + ", номер: " + Выборка.НомерУдостоверения + ", выдано: "  + Формат(Выборка.ДатаВыдачи,"ДФ='дд ММММ гггг';ДП='...'") + " года ";
		Иначе
			СтатусУчастникаВОВ = "Не является участиником, инвалидом ВОВ и лицом, приравненным к ним";
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПрочитатьДанныеОбИнвалидности();
	ПрочитатьДанныеОбУчастникахВОВ();
	Заголовок = "Трудовая деятельность: " + Объект.Ссылка; 
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьФорму" и (Источник = Объект.Ссылка или (ТипЗнч(Источник) = Тип("СправочникСсылка.ФизическиеЛица") и Источник.Пустая())) Тогда
		ИмяОбновляемогоЭлемента = Параметр.ИмяЭлемента;
		Если ИмяОбновляемогоЭлемента = "Инвалидность" Тогда
			ПрочитатьДанныеОбИнвалидности();
			Если Инвалидность = "инвалид (родитель инвалида с детства):  группы, справка серия: , номер: , выдана:  года, срок действия: " Тогда
				Инвалидность = "Ввести данные об инвалидности";
			КонецЕсли;
		ИначеЕсли ИмяОбновляемогоЭлемента = "СтатусУчастникаВОВ" Тогда
			ПрочитатьДанныеОбУчастникахВОВ();
			Если Инвалидность = "статус:  , удостоверение серия: , номер: , выдано:  года" Тогда
				Инвалидность = "Ввести данные о статусе участника, инвалида ВОВ и лиц, приравненных к ним";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	// проверим, чтобы в табличной части Стажи были указаны даты отсчета для всех строк
	Для Каждого СтрокаТЧ Из Объект.Стажи Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ДатаОтсчета) Тогда
			куфиб_ОбщегоНазначения.СообщитьОбОшибке("Не указана дата отсчета для стажа в строке " + СтрокаТЧ.НомерСтроки + "!", Отказ, "Стажи общего характера");
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ВидСтажа) Тогда
			куфиб_ОбщегоНазначения.СообщитьОбОшибке("Не указан вид стажа в строке " + СтрокаТЧ.НомерСтроки + "!", Отказ, "Стажи общего характера");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
&НаКлиенте
Процедура ИнвалидностьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыФормы = ПолучитьСведенияОбИнвалидности();
	ОткрытьФорму("РегистрСведений.СведенияОбИнвалидностиФизлиц.Форма.УправляемаяФормаЗаписиДополнительная",ПараметрыФормы,Элемент);
КонецПроцедуры

&НаСервере
Функция ПолучитьСведенияОбИнвалидности()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизЛицо", Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Период,
	|	Физлицо,
	|	ОтношениеКИнвалидности,
	|	СерияСправки,
	|	НомерСправки,
	|	ДатаВыдачи,
	|	ГруппаИнвалидности,
	|	СрокДействияСправки
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(, Физлицо = &Физлицо) КАК СведенияОбИнвалидностиФизлицСрезПоследних";
	ТаблицаРегистра = Запрос.Выполнить().Выгрузить();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФизЛицо", Объект.Ссылка);
	//ТаблицаРегистра = РегистрыСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(, Новый Структура("ФизЛицо",Ссылка));
	Если ТаблицаРегистра.Количество() > 0 Тогда
		ПараметрыФормы.Вставить("Период", ТаблицаРегистра[0].Период);
		ПараметрыФормы.Вставить("ГруппаИнвалидности", ТаблицаРегистра[0].ГруппаИнвалидности);
		ПараметрыФормы.Вставить("ДатаВыдачи", ТаблицаРегистра[0].ДатаВыдачи);
		ПараметрыФормы.Вставить("ОтношениеКИнвалидности", ТаблицаРегистра[0].ОтношениеКИнвалидности);
		ПараметрыФормы.Вставить("НомерСправки", ТаблицаРегистра[0].НомерСправки);
		ПараметрыФормы.Вставить("СерияСправки", ТаблицаРегистра[0].СерияСправки);
		ПараметрыФормы.Вставить("СрокДействияСправки", ТаблицаРегистра[0].СрокДействияСправки);
	Иначе
		ПараметрыФормы.Вставить("Период", Макс(НастройкаПравДоступа.ПолучитьПервуюДатуДоступногоПериода(), '19000101'));
	КонецЕсли;
    Возврат ПараметрыФормы
КонецФункции

&НаКлиенте
Процедура СтатусУчастникаВОВНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыФормы = ПолучитьСведенияОВОВ();	
	ОткрытьФОрму("РегистрСведений.СведенияОФизлицахУчастникахВОВ.Форма.УправляемаяФормаЗаписиДополнительная",ПараметрыФормы,Элемент);
КонецПроцедуры

&НаСервере
Функция ПолучитьСведенияОВОВ()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизЛицо", Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Период,
	|	Физлицо,
	|	Статус,
	|	СерияУдостоверения,
	|	НомерУдостоверения,
	|	ДатаВыдачи
	|ИЗ
	|	РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(, Физлицо = &Физлицо) КАК СведенияОбИнвалидностиФизлицСрезПоследних";
	ТаблицаРегистра = Запрос.Выполнить().Выгрузить();
 	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФизЛицо", Объект.Ссылка);
	Если ТаблицаРегистра.Количество() > 0 Тогда
		ПараметрыФормы.Вставить("Период", ТаблицаРегистра[0].Период);
		ПараметрыФормы.Вставить("ДатаВыдачи", ТаблицаРегистра[0].ДатаВыдачи);
		ПараметрыФормы.Вставить("Статус", ТаблицаРегистра[0].Статус);
		ПараметрыФормы.Вставить("НомерУдостоверения", ТаблицаРегистра[0].НомерУдостоверения);
		ПараметрыФормы.Вставить("СерияУдостоверения", ТаблицаРегистра[0].СерияУдостоверения);
	Иначе
		ПараметрыФормы.Вставить("Период", Макс(НастройкаПравДоступа.ПолучитьПервуюДатуДоступногоПериода(), '19000101'));
	КонецЕсли;
    Возврат ПараметрыФормы;
КонецФункции
