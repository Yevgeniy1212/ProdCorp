////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("ОбъектВладелец") Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Форма не предназначена для самостоятельного использования!'"));
		Возврат;
	КонецЕсли;

	ПодготовитьФормуНаСервере(Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.СоставныеЧастиУсловия.ТекущаяСтрока = СоставныеЧастиУсловия[ИндексСтроки].ПолучитьИдентификатор();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ИсточникДанныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокРегистров();
КонецПроцедуры

&НаКлиенте
Процедура ПолеИсточникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокВыбораРесурсовРегистра;
КонецПроцедуры

&НаКлиенте
Процедура ПолеИсточника2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокВыбораРесурсовРегистра;
КонецПроцедуры

&НаКлиенте
Процедура ВидСравненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбранныеДанные = СоставныеЧастиУсловия[ИндексСтроки];
	ДанныеВыбора = СписокВидовСравнения(ВыбранныеДанные.РежимСравнения);
КонецПроцедуры

&НаКлиенте
Процедура ПолеИсточника3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ПоляПроизвольногоИсточника;
КонецПроцедуры

&НаКлиенте
Процедура ПолеИсточника4НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ПоляПроизвольногоИсточника;
КонецПроцедуры

&НаКлиенте
Процедура ПолеТекстаЗапросаПриИзменении(Элемент)
	ПоляПроизвольногоИсточника.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура РеквизитПриИзменении(Элемент)
	ВыбранныеДанные = СоставныеЧастиУсловия[ИндексСтроки];
	НастроитьТипПроизвольныхЗначений();
	ВыбранныеДанные.ЗначениеДляСравнения 			= Элементы.ЗначениеДляСравнения.ОграничениеТипа.ПривестиЗначение(ВыбранныеДанные.ЗначениеДляСравнения);
	ВыбранныеДанные.ЗначениеДляСравнения2 			= Элементы.ЗначениеДляСравнения2.ОграничениеТипа.ПривестиЗначение(ВыбранныеДанные.ЗначениеДляСравнения2);
КонецПроцедуры

&НаКлиенте
Процедура РеквизитНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("ОбщаяФорма.усд_ФормаВыбораРеквизита",Новый Структура("ВидДокументов",ОбъектВладелец),Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура РеквизитОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбранныеДанные = СоставныеЧастиУсловия[ИндексСтроки];
	ВыбранныеДанные.ИмяРеквизита = ВыбранноеЗначение.Путь;
	ВыбранныеДанные.ПредставлениеРеквизита = ВыбранноеЗначение.Заголовок;
	НастроитьТипПроизвольныхЗначений();
	ВыбранныеДанные.ЗначениеДляСравнения 			= Элементы.ЗначениеДляСравнения.ОграничениеТипа.ПривестиЗначение(ВыбранныеДанные.ЗначениеДляСравнения);
	ВыбранныеДанные.ЗначениеДляСравнения2 			= Элементы.ЗначениеДляСравнения2.ОграничениеТипа.ПривестиЗначение(ВыбранныеДанные.ЗначениеДляСравнения2);
КонецПроцедуры

&НаКлиенте
Процедура ВидСравненияПриИзменении(Элемент)
	ПриИзмененииВидаСравнения();
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РежимСравненияПриИзменении(Элемент)
	
	ЭтоСписок  = Ложь;
	ВыбранныеДанные = СоставныеЧастиУсловия[ИндексСтроки];
	мВидСравнения =ВыбранныеДанные.ВидСравнения;
	Если мВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.ВСписке") 
		ИЛИ мВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.ВСпискеПоИерархии")
		ИЛИ мВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.НеВСписке")
		ИЛИ мВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.НеВСпискеПоИерархии") Тогда
		ЭтоСписок = Истина;
	КонецЕсли;
	Если ЭтоСписок И ВыбранныеДанные.РежимСравнения <> ПредопределенноеЗначение("Перечисление.усд_РежимыСравненияДляУсловий.СравнениеСПроизвольнымЗначением") Тогда
		ВыбранныеДанные.ВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.Равно");
		ПриИзмененииВидаСравнения();
		СписокСравнения.Очистить();
	КонецЕсли;
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникДанныхПриИзменении(Элемент)
	ЗаполнитьСпискиВыбораПолейРегистра();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ <ПараметрыСвязи>

&НаКлиенте
Процедура ПараметрыСвязиИзмерениеРегистраНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокВыбораИзмеренийРегистра;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыСвязиРеквизитДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("ОбщаяФорма.усд_ФормаВыбораРеквизита",Новый Структура("ВидДокументов",ОбъектВладелец),Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыСвязиРеквизитДокументаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ВыбранноеЗначение = ВыбранноеЗначение.Путь;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КонструкторЗапроса(Команда)
	
	Конструктор = Новый КонструкторЗапроса();
	Если СокрЛП(ПолеТекстаЗапроса.ПолучитьТекст()) <>"" Тогда
		Конструктор.Текст = ПолеТекстаЗапроса.ПолучитьТекст();
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияКонструктораЗапроса", ЭтотОбъект);
	Попытка
		Конструктор.Показать(Оповещение);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Текст запроса не корректен!'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Описание ошибки в тексте запроса: '") + Символы.ПС + "		" + ОписаниеОшибки);
	КонецПопытки;		

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗапрос(Команда)
	ВыполнитьПроверкуЗапроса();
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Сообщение = "";
	Если НЕ ФормированиеРезультата(Сообщение) Тогда
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, "Условие некорректно: "  +Сообщение + Символы.ПС + "Удалить его из списка условий?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет, "Некорректное условие");
	Иначе
		ВернутьРезультат();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПодготовитьФормуНаСервере(Отказ)
	
	НадписьДанныеДляПроверкиУсловия = "Данные для проверки условия";
	НадписьСвязьДокументаИРегистра 	= "Связь документа и регистра";
	
	ОбъектВладелец 	= Параметры.ОбъектВладелец;
	Адрес 			= Параметры.Адрес;
	СоставныеЧастиУсловия.Загрузить(ПолучитьИзВременногоХранилища(Адрес));
	ИндексСтроки 	= Параметры.ТекущаяСтрока;
	Если НЕ ЗначениеЗаполнено(ОбъектВладелец) Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Форма не предназначена для самостоятельного использования!'"));
		Возврат;
	КонецЕсли;
	Если Метаданные.Документы.Найти(ОбъектВладелец.ПрограммныйИдентификатор) = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не определен вид документов!'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Если СокрЛП(СоставныеЧастиУсловия[ИндексСтроки].ИмяРеквизита)<>""
		И СоставныеЧастиУсловия[ИндексСтроки].ИмяРеквизита<>"Ссылка" 
		И СоставныеЧастиУсловия[ИндексСтроки].ИмяРеквизита<>"Номер" 
		И СоставныеЧастиУсловия[ИндексСтроки].ИмяРеквизита<>"Проведен" 
		И СоставныеЧастиУсловия[ИндексСтроки].ИмяРеквизита<>"Дата" Тогда
		ИмяРеквизитаДляПроверки = СоставныеЧастиУсловия[ИндексСтроки].ИмяРеквизита;
		Если Найти(ИмяРеквизитаДляПроверки,".")<>0 Тогда
			ИмяРеквизитаДляПроверки = Лев(ИмяРеквизитаДляПроверки,Найти(ИмяРеквизитаДляПроверки,".")-1);
		КонецЕсли;
		Если Метаданные.Документы.Найти(ОбъектВладелец.ПрограммныйИдентификатор).Реквизиты.Найти(СокрЛП(ИмяРеквизитаДляПроверки))=Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'У выбранного документа отсутствует указанный реквизит!'"));
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если СоставныеЧастиУсловия[ИндексСтроки].СтрокаПараметрыСоединенияСИсточником<>"" Тогда
		Таблица = ЗначениеИзСтрокиВнутр(СоставныеЧастиУсловия[ИндексСтроки].СтрокаПараметрыСоединенияСИсточником);
		Если ТипЗнч(Таблица) = Тип("ТаблицаЗначений") Тогда
			Для Каждого Строка Из Таблица Цикл
				НоваяСтрока = ПараметрыСвязи.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Если СоставныеЧастиУсловия[ИндексСтроки].СтрокаСписокСравнения<>"" Тогда
		СписокЗначений = ЗначениеИзСтрокиВнутр(СоставныеЧастиУсловия[ИндексСтроки].СтрокаСписокСравнения);
		Если ТипЗнч(СписокЗначений) = Тип("ТаблицаЗначений") Тогда
			Для Каждого Строка Из СписокЗначений Цикл
				НоваяСтрока = СписокСравнения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	ПолеТекстаЗапроса.УстановитьТекст(СоставныеЧастиУсловия[ИндексСтроки].ПроизвольныйИсточник);	
	
	Если НЕ СокрЛП(СоставныеЧастиУсловия[ИндексСтроки].ИмяРеквизита) = "" Тогда	
		НастроитьТипПроизвольныхЗначений();		
		ЗаполнитьСпискиВыбораполейРегистра();
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры //ПодготовитьФормуНаСервере

&НаСервере
Процедура НастроитьТипПроизвольныхЗначений()
	ВыбранныеДанные = СоставныеЧастиУсловия[ИндексСтроки];
	
	ОписаниеТипов = фин_ПроцедурыМеханизмовБюджетирования.ОпределитьОписаниеТиповПоПутиРеквизита(Метаданные.Документы.Найти(ОбъектВладелец.ПрограммныйИдентификатор),СокрЛП(ВыбранныеДанные.ИмяРеквизита));
	Элементы.ЗначениеДляСравнения.ОграничениеТипа 	= ОписаниеТипов;
	Элементы.ЗначениеДляСравнения2.ОграничениеТипа 	= ОписаниеТипов;
	ВыбранныеДанные.ЗначениеДляСравнения 	= ОписаниеТипов.ПривестиЗначение(ВыбранныеДанные.ЗначениеДляСравнения);
	ВыбранныеДанные.ЗначениеДляСравнения2 	= ОписаниеТипов.ПривестиЗначение(ВыбранныеДанные.ЗначениеДляСравнения2);
	Элементы.СписокСравнения.ПодчиненныеЭлементы.СписокСравненияЗначение.ОграничениеТипа = ОписаниеТипов;
	Для Каждого СтрокаСписка Из СписокСравнения Цикл
		 СтрокаСписка.Значение = ОписаниеТипов.ПривестиЗначение(СтрокаСписка.Значение);
	КонецЦикла;
	ТаблицаСписок = ДанныеФормыВЗначение(СписокСравнения,Тип("ТаблицаЗначений")); 
	ТаблицаСписок.Свернуть("Значение");
	ЗначениеВДанныеФормы(ТаблицаСписок,СписокСравнения);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиВыбораПолейРегистра()
	ВыбранныеДанные = СоставныеЧастиУсловия[ИндексСтроки];
	СписокВыбораРесурсовРегистра.Очистить();
	СписокВыбораИзмеренийРегистра.Очистить();
	Если СокрЛП(ВыбранныеДанные.ИсточникДанных) <> "" Тогда
		 Регистр = Метаданные.РегистрыСведений.Найти(ВыбранныеДанные.ИсточникДанных);
		 Если Регистр <>Неопределено Тогда
			 Для Каждого Ресурс Из Регистр.Ресурсы Цикл
				 СписокВыбораРесурсовРегистра.Добавить(Ресурс.Имя,Ресурс.Синоним);
			 КонецЦикла;
			 Для Каждого Ресурс Из Регистр.Реквизиты Цикл
				 СписокВыбораРесурсовРегистра.Добавить(Ресурс.Имя,Ресурс.Синоним);
			 КонецЦикла;
			 Для Каждого Ресурс Из Регистр.Измерения Цикл
				 СписокВыбораИзмеренийРегистра.Добавить(Ресурс.Имя,Ресурс.Синоним);
			 КонецЦикла;
			 Если ВыбранныеДанные.РежимСравнения = Перечисления.усд_РежимыСравненияДляУсловий.СравнениеСПолемРегистраСведений Тогда
				 Если Регистр.Ресурсы.Найти(ВыбранныеДанные.ПолеИсточникаДляСравнения)=Неопределено И 
					 Регистр.Реквизиты.Найти(ВыбранныеДанные.ПолеИсточникаДляСравнения)=Неопределено Тогда
					 ВыбранныеДанные.ПолеИсточникаДляСравнения="";
				 КонецЕсли;
				 Если Регистр.Ресурсы.Найти(ВыбранныеДанные.ПолеИсточникаДляСравнения2)=Неопределено И 
					 Регистр.Реквизиты.Найти(ВыбранныеДанные.ПолеИсточникаДляСравнения2)=Неопределено Тогда
					 ВыбранныеДанные.ПолеИсточникаДляСравнения2="";
				 КонецЕсли;
			 КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	СписокВыбораИзмеренийРегистра.СортироватьПоПредставлению();
	СписокВыбораРесурсовРегистра.СортироватьПоПредставлению();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ВыбранныеДанные = Форма.СоставныеЧастиУсловия[Форма.ИндексСтроки];
	Если ВыбранныеДанные.РежимСравнения = ПредопределенноеЗначение("Перечисление.усд_РежимыСравненияДляУсловий.СравнениеСПолемПроизвольногоИсточника") Тогда
		Элементы.СтраницыРежимы.ТекущаяСтраница = Элементы.СтраницыРежимы.ПодчиненныеЭлементы.СравнениеСПолемПроизвольногоИсточника;
	ИначеЕсли ВыбранныеДанные.РежимСравнения = ПредопределенноеЗначение("Перечисление.усд_РежимыСравненияДляУсловий.СравнениеСПолемРегистраСведений") Тогда
		Элементы.СтраницыРежимы.ТекущаяСтраница = Элементы.СтраницыРежимы.ПодчиненныеЭлементы.РегистрСведений;
	ИначеЕсли ВыбранныеДанные.РежимСравнения = ПредопределенноеЗначение("Перечисление.усд_РежимыСравненияДляУсловий.СравнениеСПроизвольнымЗначением") Тогда
		Элементы.СтраницыРежимы.ТекущаяСтраница = Элементы.СтраницыРежимы.ПодчиненныеЭлементы.СравнениеСПроизвольнымЗначением;
	Иначе
		ВыбранныеДанные.РежимСравнения = ПредопределенноеЗначение("Перечисление.усд_РежимыСравненияДляУсловий.СравнениеСПроизвольнымЗначением");
		Элементы.СтраницыРежимы.ТекущаяСтраница = Элементы.СтраницыРежимы.ПодчиненныеЭлементы.СравнениеСПроизвольнымЗначением;
	КонецЕсли;
	Если ВыбранныеДанные.ВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.ВИнтервале") 
			ИЛИ ВыбранныеДанные.ВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.ВИнтервалеВключаяГраницы") Тогда
		Элементы.ЗначениеДляСравнения2.Видимость = Истина;	
		Элементы.ПолеИсточника2.Видимость = Истина;	
		Элементы.ПолеИсточника4.Видимость = Истина;	
	Иначе		
		Элементы.ЗначениеДляСравнения2.Видимость = Ложь;	
		Элементы.ПолеИсточника2.Видимость = Ложь;	
		Элементы.ПолеИсточника4.Видимость = Ложь;	
	КонецЕсли;
	
	ЭтоСписок  = Ложь;
	мВидСравнения = ВыбранныеДанные.ВидСравнения;
	Если мВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.ВСписке") 
		ИЛИ мВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.ВСпискеПоИерархии")
		ИЛИ мВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.НеВСписке")
		ИЛИ мВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.НеВСпискеПоИерархии") Тогда
		ЭтоСписок = Истина;
	КонецЕсли;
	Элементы.ГруппаСписокЗначений.Видимость 		= ЭтоСписок;
	Элементы.ГруппаПроизвольноеЗначение.Видимость 	= НЕ ЭтоСписок;
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокРегистров()
	СписокВыбора = Новый СписокЗначений;
	Если СписокВыбора.Количество() =0 Тогда
		Для Каждого Регистр Из Метаданные.РегистрыСведений Цикл
			 СписокВыбора.Добавить(Регистр.Имя,Регистр.Синоним);
		КонецЦикла;
	КонецЕсли;
	СписокВыбора.СортироватьПоПредставлению();
	Возврат СписокВыбора;
КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияКонструктораЗапроса(Текст, ДополнительныеПараметры) Экспорт 
	
	Если НЕ Текст = Неопределено Тогда
		ПолеТекстаЗапроса.УстановитьТекст(Текст);
		ПоляПроизвольногоИсточника.Очистить();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПроверкуЗапроса()
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолеТекстаЗапроса.ПолучитьТекст();
	Если ЗначениеЗаполнено(ОбъектВладелец) Тогда
		ОбъектМетаданных = Метаданные.Документы.Найти(ОбъектВладелец.ПрограммныйИдентификатор);
		Если Строка(ОбъектМетаданных.Проведение)="Разрешить" Тогда
			Запрос.УстановитьПараметр("Проведен",Истина);
		КонецЕсли;
		Запрос.УстановитьПараметр("Дата",ТекущаяДата());
		Запрос.УстановитьПараметр("Номер","00000000000");
		Запрос.УстановитьПараметр("Ссылка",Документы[ОбъектВладелец.ПрограммныйИдентификатор].ПустаяСсылка());
		Для Каждого Реквизит Из ОбъектМетаданных.Реквизиты Цикл
			 Запрос.УстановитьПараметр(Реквизит.Имя,Реквизит.Тип.ПривестиЗначение(Неопределено));
		КонецЦикла;
	КонецЕсли;
	Попытка
		Результат = Запрос.Выполнить();
		ПоляПроизвольногоИсточника.Очистить();
		Для Каждого Колонка Из Результат.Колонки Цикл
			ПоляПроизвольногоИсточника.Добавить(Колонка.Имя);
		КонецЦикла;
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Текст запроса не корректен!'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Описание ошибки в тексте запроса: '") + Символы.ПС + "		" + ОписаниеОшибки);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Ответ, ПараметрыВопроса) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СоставныеЧастиУсловия.Удалить(СоставныеЧастиУсловия.Получить(ИндексСтроки));
		ВернутьРезультат(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьРезультат(Удаление = Ложь)
	Поместить(Удаление);
	ВладелецФормы.ОбработатьРедактированиеУсловия();
	Закрыть();	
КонецПроцедуры

&НаСервере
Процедура Поместить(Удаление = Ложь)
	Сообщение = "";
	Если НЕ Удаление Тогда 
		ВыбранныеДанные = СоставныеЧастиУсловия[ИндексСтроки];
		
		Отказ = Ложь;
		Если ВыбранныеДанные.ИмяРеквизита ="" Тогда
			Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан реквизит документа;";
			Отказ = Истина;
		КонецЕсли;
		Если ВыбранныеДанные.РежимСравнения.Пустая() Тогда
			Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан режим сравнения;";
			Отказ = Истина;
		КонецЕсли;
		Если ВыбранныеДанные.ВидСравнения.Пустая() Тогда
			Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан вид сравнения;";
			Отказ = Истина;
		КонецЕсли;
		Если ВыбранныеДанные.РежимСравнения = Перечисления.усд_РежимыСравненияДляУсловий.СравнениеСПолемПроизвольногоИсточника Тогда
			ВыбранныеДанные.ПроизвольныйИсточник = ПолеТекстаЗапроса.ПолучитьТекст();
			ВыбранныеДанные.ИсточникДанных ="";
			ВыбранныеДанные.СтрокаПараметрыСоединенияСИсточником = ЗначениеВСтрокуВнутр(Ложь);
			ВыбранныеДанные.ЗначениеДляСравнения = Неопределено;
			ВыбранныеДанные.ЗначениеДляСравнения2 = Неопределено;
			Если СокрЛП(ВыбранныеДанные.ПроизвольныйИсточник)="" Тогда
				Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан текст произвольного источника;";
				Отказ = Истина;
			КонецЕсли;
			Если СокрЛП(ВыбранныеДанные.ПолеИсточникаДляСравнения)="" Тогда
				Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указано поле источника для сравнения;";
				Отказ = Истина;
			КонецЕсли;
			Если СокрЛП(ВыбранныеДанные.ПолеИсточникаДляСравнения2)="" 
				И (ВыбранныеДанные.ВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВИнтервалеВключаяГраницы 
				ИЛИ ВыбранныеДанные.ВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВИнтервале) Тогда
				Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан поле источника с верхней границей;";
				Отказ = Истина;
			КонецЕсли;
			ВыбранныеДанные.СтрокаСписокСравнения = ЗначениеВСтрокуВнутр(Ложь);
		ИначеЕсли ВыбранныеДанные.РежимСравнения = Перечисления.усд_РежимыСравненияДляУсловий.СравнениеСПолемРегистраСведений Тогда
			ВыбранныеДанные.СтрокаПараметрыСоединенияСИсточником = ЗначениеВСтрокуВнутр(ДанныеФормыВЗначение(ПараметрыСвязи,Тип("ТаблицаЗначений")));
			ВыбранныеДанные.ПроизвольныйИсточник = "";
			ВыбранныеДанные.ЗначениеДляСравнения = Неопределено;
			ВыбранныеДанные.ЗначениеДляСравнения2 = Неопределено;
			Если СокрЛП(ВыбранныеДанные.ИсточникДанных)="" Тогда
				Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан регистр сведений;";
				Отказ = Истина;
			КонецЕсли;
			Если СокрЛП(ВыбранныеДанные.ПолеИсточникаДляСравнения)="" Тогда
				Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указано поле источника для сравнения;";
				Отказ = Истина;
			КонецЕсли;
			Если СокрЛП(ВыбранныеДанные.ПолеИсточникаДляСравнения2)="" 
				И (ВыбранныеДанные.ВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВИнтервалеВключаяГраницы 
				ИЛИ ВыбранныеДанные.ВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВИнтервале) Тогда
				Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан поле источника с верхней границей;";
				Отказ = Истина;
			КонецЕсли;
			ВыбранныеДанные.СтрокаСписокСравнения = ЗначениеВСтрокуВнутр(Ложь);
		ИначеЕсли ВыбранныеДанные.РежимСравнения = Перечисления.усд_РежимыСравненияДляУсловий.СравнениеСПроизвольнымЗначением Тогда
			ВыбранныеДанные.ИсточникДанных ="";
			ВыбранныеДанные.СтрокаПараметрыСоединенияСИсточником = ЗначениеВСтрокуВнутр(Ложь);
			ВыбранныеДанные.ПроизвольныйИсточник = "";
			ВыбранныеДанные.ПолеИсточникаДляСравнения ="";
			ВыбранныеДанные.ПолеИсточникаДляСравнения2 ="";
			мВидСравнения = ВыбранныеДанные.ВидСравнения;
			ЭтоСписок = Ложь;
			Если мВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВСписке 
				ИЛИ мВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВСпискеПоИерархии
				ИЛИ мВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.НеВСписке
				ИЛИ мВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.НеВСпискеПоИерархии Тогда
				ЭтоСписок = Истина;
			КонецЕсли;
			Если ЭтоСписок Тогда
				Если СписокСравнения.Количество()=0 Тогда
					Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан список значений для сравнения;";
					Отказ = Истина;
				КонецЕсли;
			Иначе
				Если ВыбранныеДанные.ЗначениеДляСравнения=Неопределено Тогда
					Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указано значения для сравнения;";
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
			Если ВыбранныеДанные.ЗначениеДляСравнения2=Неопределено 
				И (ВыбранныеДанные.ВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВИнтервалеВключаяГраницы 
				ИЛИ ВыбранныеДанные.ВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВИнтервале) Тогда
				Сообщение = Сообщение+Символы.ПС+Символы.Таб+"- не указано значение верхней границы;";
				Отказ = Истина;
			КонецЕсли;
			ВыбранныеДанные.СтрокаСписокСравнения = ЗначениеВСтрокуВнутр(ДанныеФормыВЗначение(СписокСравнения,Тип("ТаблицаЗначений")));
		КонецЕсли;
		
		ВыбранныеДанные.ОписаниеУсловия = Справочники.усд_УсловияВыполненияОперацийПоДокументам.ПолучитьОписаниеУсловия(ВыбранныеДанные);
	КонецЕсли;
	ПоместитьВоВременноеХранилище(СоставныеЧастиУсловия.Выгрузить(),Адрес);
	
КонецПроцедуры

&НаСервере
Функция ФормированиеРезультата(Сообщение)
	ВыбранныеДанные = СоставныеЧастиУсловия[ИндексСтроки];
	Отказ = Ложь;
	Если ВыбранныеДанные.ИмяРеквизита ="" Тогда
		Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан реквизит документа;";
		Отказ = Истина;
	КонецЕсли;
	Если ВыбранныеДанные.РежимСравнения.Пустая() Тогда
		Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан режим сравнения;";
		Отказ = Истина;
	КонецЕсли;
	Если ВыбранныеДанные.ВидСравнения.Пустая() Тогда
		Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан вид сравнения;";
		Отказ = Истина;
	КонецЕсли;
	Если ВыбранныеДанные.РежимСравнения = Перечисления.усд_РежимыСравненияДляУсловий.СравнениеСПолемПроизвольногоИсточника Тогда
		ВыбранныеДанные.ПроизвольныйИсточник = ПолеТекстаЗапроса.ПолучитьТекст();
		Если СокрЛП(ВыбранныеДанные.ПроизвольныйИсточник)="" Тогда
			Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан текст произвольного источника;";
			Отказ = Истина;
		КонецЕсли;
		Если СокрЛП(ВыбранныеДанные.ПолеИсточникаДляСравнения)="" Тогда
			Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указано поле источника для сравнения;";
			Отказ = Истина;
		КонецЕсли;
		Если СокрЛП(ВыбранныеДанные.ПолеИсточникаДляСравнения2)="" 
			И (ВыбранныеДанные.ВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВИнтервалеВключаяГраницы 
				ИЛИ ВыбранныеДанные.ВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВИнтервале) Тогда
			Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан поле источника с верхней границей;";
			Отказ = Истина;
		КонецЕсли;
	ИначеЕсли ВыбранныеДанные.РежимСравнения = Перечисления.усд_РежимыСравненияДляУсловий.СравнениеСПолемРегистраСведений Тогда
		ВыбранныеДанные.ПроизвольныйИсточник = "";
		ВыбранныеДанные.ЗначениеДляСравнения = Неопределено;
		ВыбранныеДанные.ЗначениеДляСравнения2 = Неопределено;
		Если СокрЛП(ВыбранныеДанные.ИсточникДанных)="" Тогда
			Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан регистр сведений;";
			Отказ = Истина;
		КонецЕсли;
		Если СокрЛП(ВыбранныеДанные.ПолеИсточникаДляСравнения)="" Тогда
			Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указано поле источника для сравнения;";
			Отказ = Истина;
		КонецЕсли;
		Если СокрЛП(ВыбранныеДанные.ПолеИсточникаДляСравнения2)="" 
			И (ВыбранныеДанные.ВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВИнтервалеВключаяГраницы 
				ИЛИ ВыбранныеДанные.ВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВИнтервале) Тогда
			Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан поле источника с верхней границей;";
			Отказ = Истина;
		КонецЕсли;
		ВыбранныеДанные.СтрокаСписокСравнения = ЗначениеВСтрокуВнутр(Ложь);
	ИначеЕсли ВыбранныеДанные.РежимСравнения = Перечисления.усд_РежимыСравненияДляУсловий.СравнениеСПроизвольнымЗначением Тогда
		ВыбранныеДанные.ИсточникДанных ="";
		ВыбранныеДанные.СтрокаПараметрыСоединенияСИсточником = "";
		ВыбранныеДанные.ПроизвольныйИсточник = "";
		ВыбранныеДанные.ПолеИсточникаДляСравнения ="";
		ВыбранныеДанные.ПолеИсточникаДляСравнения2 ="";
		мВидСравнения = ВыбранныеДанные.ВидСравнения;
		ЭтоСписок = Ложь;
		Если мВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВСписке 
			ИЛИ мВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВСпискеПоИерархии
			ИЛИ мВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.НеВСписке
			ИЛИ мВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.НеВСпискеПоИерархии Тогда
			ЭтоСписок = Истина;
		КонецЕсли;
		Если ЭтоСписок Тогда
			Если СписокСравнения.Количество()=0 Тогда
				Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указан список значений для сравнения;";
				Отказ = Истина;
			КонецЕсли;
		Иначе
			Если ВыбранныеДанные.ЗначениеДляСравнения=Неопределено Тогда
				Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указано значения для сравнения;";
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ВыбранныеДанные.ЗначениеДляСравнения2=Неопределено 
			И (ВыбранныеДанные.ВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВИнтервалеВключаяГраницы 
				ИЛИ ВыбранныеДанные.ВидСравнения = Перечисления.усд_ВидыСравненияДляУсловий.ВИнтервале) Тогда
			Сообщение=Сообщение+Символы.ПС+Символы.Таб+"- не указано значение верхней границы;";
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	Возврат НЕ Отказ;
КонецФункции

&НаКлиенте
Процедура ПриИзмененииВидаСравнения()
	ЭтоСписок  = Ложь;
	ВыбранныеДанные = СоставныеЧастиУсловия[ИндексСтроки];
	мВидСравнения =ВыбранныеДанные.ВидСравнения;
	Если мВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.ВСписке") 
		ИЛИ мВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.ВСпискеПоИерархии")
		ИЛИ мВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.НеВСписке")
		ИЛИ мВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.НеВСпискеПоИерархии") Тогда
		ЭтоСписок = Истина;
	КонецЕсли;
	Если ЭтоСписок Тогда
		ВыбранныеДанные.ЗначениеДляСравнения 		= Элементы.ЗначениеДляСравнения.ОграничениеТипа.ПривестиЗначение(Неопределено);
		ВыбранныеДанные.ЗначениеДляСравнения2 		= Элементы.ЗначениеДляСравнения2.ОграничениеТипа.ПривестиЗначение(Неопределено);
	Иначе
		СписокСравнения.Очистить();
	КонецЕсли;
	Если НЕ (ВыбранныеДанные.ВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.ВИнтервале") 
			ИЛИ ВыбранныеДанные.ВидСравнения = ПредопределенноеЗначение("Перечисление.усд_ВидыСравненияДляУсловий.ВИнтервалеВключаяГраницы")) Тогда
		ВыбранныеДанные.ЗначениеДляСравнения2 		= Элементы.ЗначениеДляСравнения2.ОграничениеТипа.ПривестиЗначение(Неопределено);
		ВыбранныеДанные.ПолеИсточникаДляСравнения2 = "";
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокВидовСравнения(РежимСравнения)
	СписокВидов = Новый СписокЗначений;
	СписокВидов.Добавить(Перечисления.усд_ВидыСравненияДляУсловий.Равно);
	СписокВидов.Добавить(Перечисления.усд_ВидыСравненияДляУсловий.НеРавно);
	СписокВидов.Добавить(Перечисления.усд_ВидыСравненияДляУсловий.Больше);
	СписокВидов.Добавить(Перечисления.усд_ВидыСравненияДляУсловий.БольшеИлиРавно);
	СписокВидов.Добавить(Перечисления.усд_ВидыСравненияДляУсловий.Меньше);
	СписокВидов.Добавить(Перечисления.усд_ВидыСравненияДляУсловий.МеньшеИлиРавно);
	СписокВидов.Добавить(Перечисления.усд_ВидыСравненияДляУсловий.ВИнтервале);
	СписокВидов.Добавить(Перечисления.усд_ВидыСравненияДляУсловий.ВИнтервалеВключаяГраницы);
	Если РежимСравнения = Перечисления.усд_РежимыСравненияДляУсловий.СравнениеСПроизвольнымЗначением Тогда
		СписокВидов.Добавить(Перечисления.усд_ВидыСравненияДляУсловий.ВИерархии);
		СписокВидов.Добавить(Перечисления.усд_ВидыСравненияДляУсловий.ВСписке);
		СписокВидов.Добавить(Перечисления.усд_ВидыСравненияДляУсловий.ВСпискеПоИерархии);
		СписокВидов.Добавить(Перечисления.усд_ВидыСравненияДляУсловий.НеВИерархии);
		СписокВидов.Добавить(Перечисления.усд_ВидыСравненияДляУсловий.НеВСписке);
		СписокВидов.Добавить(Перечисления.усд_ВидыСравненияДляУсловий.НеВСпискеПоИерархии);
	КонецЕсли;
	Возврат СписокВидов;
КонецФункции
