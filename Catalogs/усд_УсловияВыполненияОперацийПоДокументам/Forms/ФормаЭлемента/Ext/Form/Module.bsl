////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.СправочникПриСозданииНаСервере(ЭтотОбъект);
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.Владелец) И Объект.СоставныеЧастиУсловия.Количество() >0 Тогда
		Объект.СоставныеЧастиУсловия.Очистить();
	ИначеЕсли мВладелец <> Объект.Владелец И ЗначениеЗаполнено(Объект.Владелец) Тогда
		Для Каждого СтрокаУсловие Из Объект.СоставныеЧастиУсловия Цикл
			Если СтрокаУсловие.ИмяРеквизита = "Дата" ИЛИ СтрокаУсловие.ИмяРеквизита = "Проведен" ИЛИ СтрокаУсловие.ИмяРеквизита = "Номер" Тогда
				Продолжить;
			КонецЕсли;
			Если НЕ ЕстьРеквизит(Объект.Владелец, СтрокаУсловие.ИмяРеквизита) Тогда
				 Объект.СоставныеЧастиУсловия.Удалить(СтрокаУсловие);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	мВладелец = Объект.Владелец;
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.фин_ВидыДокументов.ФормаВыбора",Новый Структура("ТекущаяСтрока",Объект.Владелец),Элемент,УникальныйИдентификатор);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ <СоставныеЧастиУсловия>

&НаКлиенте
Процедура СоставныеЧастиУсловияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбран вид документов!'"));
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставныеЧастиУсловияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьРедакторСтроки();
КонецПроцедуры

&НаКлиенте
Процедура СоставныеЧастиУсловияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ОткрытьРедакторСтроки();
КонецПроцедуры

&НаКлиенте
Процедура СоставныеЧастиУсловияПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные<>Неопределено И Элемент.ТекущиеДанные.ИмяРеквизита="" Тогда
		//ОткрытьРедакторСтроки();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	Если НЕ фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// Управление формой

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	НадписьСоставныеЧастиУсловия = "Составные части условия";
	мВладелец = Объект.Владелец;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьРеквизит(Владелец, ИмяРеквизита)     
	ПрограммныйИдентификатор = Владелец.ПрограммныйИдентификатор;
	Возврат Метаданные.Документы.Найти(ПрограммныйИдентификатор).Реквизиты.Найти(ИмяРеквизита)<>Неопределено;	
КонецФункции

&НаКлиенте
Процедура ОткрытьРедакторСтроки()
	
	ИндексСтроки = Объект.СоставныеЧастиУсловия.Индекс(Объект.СоставныеЧастиУсловия.НайтиПоИдентификатору(Элементы.СоставныеЧастиУсловия.ТекущаяСтрока));
	ОткрытьФорму("Справочник.усд_УсловияВыполненияОперацийПоДокументам.Форма.ФормаРедактированияУсловия", Новый Структура("ОбъектВладелец,ТекущаяСтрока,Адрес",Объект.Владелец,ИндексСтроки,АдресХранилища()), ЭтотОбъект, КлючУникальности,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);  

КонецПроцедуры

&НаСервере
Функция АдресХранилища()
	Адрес = ПоместитьВоВременноеХранилище(Объект.СоставныеЧастиУсловия.Выгрузить(),УникальныйИдентификатор);
	Возврат Адрес;
КонецФункции

&НаКлиенте
Процедура ОбработатьРедактированиеУсловия() Экспорт
	ВыполнитьЗагрузкуДанных();
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗагрузкуДанных()
	Объект.СоставныеЧастиУсловия.Загрузить(ПолучитьИзВременногоХранилища(Адрес));
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаИсполнения(Команда)
	
	Если Объект.Ссылка.Пустая() ИЛИ  Модифицированность Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Элемент справочника должен быть записан!'"));
		Возврат;
	КонецЕсли;
	ОткрытьФорму("Обработка.усд_КалькуляторУсловий.Форма",Новый Структура("ВидДокументов,Условие",Объект.Владелец,Объект.Ссылка),ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры