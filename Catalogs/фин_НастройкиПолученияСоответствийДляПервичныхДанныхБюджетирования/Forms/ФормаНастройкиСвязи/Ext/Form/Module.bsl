
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьЗначенияСвойств(ЭтотОбъект,Параметры,"ОбъектИБ,ВидДанных,ИмяИсточника,Вариант,ВариантДляТрансформации,Значение,ПоказательВарианта,РеквизитЗаполненияПоказателя,Трансформация,ФиксированноеЗначение");
	Режим = ?(ФиксированноеЗначение,1,0);
	Элементы.Значение.ТолькоПросмотр = НЕ ФиксированноеЗначение;
	Элементы.РеквизитЗаполненияПоказателя.ТолькоПросмотр = ФиксированноеЗначение;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Показатели.Числовой,
		|	Показатели.Справочник,
		|	Показатели.ТипПоказателя
		|ИЗ
		|	Справочник.фин_ВариантыПолученияСоответствийДляПервичныхДанных.ВходящиеПоказатели КАК Показатели
		|ГДЕ
		|	Показатели.Ссылка = &Ссылка
		|	И Показатели.Показатель = &Показатель";
	
	Запрос.УстановитьПараметр("Показатель", ПоказательВарианта);
	Запрос.УстановитьПараметр("Ссылка", Вариант);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТекущиеДанные = РезультатЗапроса.Выбрать();
	
	Если ТекущиеДанные.Следующий() Тогда
		 Если ТекущиеДанные.ТипПоказателя = ПредопределенноеЗначение("Перечисление.фин_ТипыВходящихПоказателейБюджетирования.Справочник") Тогда
		 	ИмяТипа = "СправочникСсылка."+ТекущиеДанные.Справочник;
		 ИначеЕсли ТекущиеДанные.ТипПоказателя = ПредопределенноеЗначение("Перечисление.фин_ТипыВходящихПоказателейБюджетирования.ПланВидовРасчета") Тогда
		 	ИмяТипа = "ПланВидовРасчетаСсылка."+ТекущиеДанные.Справочник;
		 ИначеЕсли ТекущиеДанные.ТипПоказателя = ПредопределенноеЗначение("Перечисление.фин_ТипыВходящихПоказателейБюджетирования.ПланВидовХарактеристик") Тогда
		 	ИмяТипа = "ПланВидовХарактеристикСсылка."+ТекущиеДанные.Справочник;
		 ИначеЕсли ТекущиеДанные.ТипПоказателя = ПредопределенноеЗначение("Перечисление.фин_ТипыВходящихПоказателейБюджетирования.ПланСчетов") Тогда
		 	ИмяТипа = "ПланСчетовСсылка."+ТекущиеДанные.Справочник;
		 ИначеЕсли ТекущиеДанные.ТипПоказателя = ПредопределенноеЗначение("Перечисление.фин_ТипыВходящихПоказателейБюджетирования.Перечисление") Тогда
		 	ИмяТипа = "ПеречислениеСсылка."+ТекущиеДанные.Справочник;
		 ИначеЕсли ТекущиеДанные.ТипПоказателя = ПредопределенноеЗначение("Перечисление.фин_ТипыВходящихПоказателейБюджетирования.Числовой") Тогда
		 	ИмяТипа = "Число";
		 ИначеЕсли ТекущиеДанные.ТипПоказателя = ПредопределенноеЗначение("Перечисление.фин_ТипыВходящихПоказателейБюджетирования.Дата") Тогда
		 	ИмяТипа = "Дата";
		 Иначе
		 	ИмяТипа = "Булево";
		КонецЕсли;
		мТипЗначения = ТекущиеДанные.ТипПоказателя;
		ОписаниеТипа = новый ОписаниеТипов(ИмяТипа);
		Элементы.Значение.ОграничениеТипа = ОписаниеТипа;
	КонецЕсли;
	

КонецПроцедуры

&НаКлиенте
Процедура РежимПриИзменении(Элемент)
	ФиксированноеЗначение = Режим = 1;
	Если режим = 0 Тогда
		Значение = ОписаниеТипа.ПривестиЗначение(Неопределено);
	Иначе
		РеквизитЗаполненияПоказателя = "";
	КонецЕсли;
	Элементы.Значение.ТолькоПросмотр = НЕ ФиксированноеЗначение;
	Элементы.РеквизитЗаполненияПоказателя.ТолькоПросмотр = ФиксированноеЗначение;
КонецПроцедуры

&НаКлиенте
Процедура РеквизитЗаполненияПоказателяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если НЕ ЗначениеЗаполнено(ОбъектИБ) Тогда
		ПоказатьПредупреждение(,"Не указан вид документов/регистров!");
		Возврат;
	КонецЕсли;
	Если ТипЗнч(ОбъектИБ)=Тип("СправочникСсылка.фин_ВидыДокументов") И ВидДанных <>ПредопределенноеЗначение("Перечисление.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоШапкеДокумента") И ИмяИсточника = "" Тогда
		ПоказатьПредупреждение(,"Не указан источник данных!");
		Возврат;
	КонецЕсли;
	СтруктураПараметров = Новый Структура;
	ЗаполнениеПоказателейРеквизитЗаполненияПоказателяНачалоВыбораНаСервере(СтруктураПараметров);
	ОткрытьФорму("Справочник.усд_УсловияВыполненияОперацийПоДокументам.Форма.ФормаВыбораРеквизита",СтруктураПараметров,Элемент,УникальныйИдентификатор,?(фин_ОбщегоНазначенияКлиентПовтИсп.РежимОтдельногоОткрытияОкон(),ВариантОткрытияОкна.ОтдельноеОкно,Окно));
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеПоказателейРеквизитЗаполненияПоказателяНачалоВыбораНаСервере(СтруктураПараметров)
	ВсеПоля 		= Ложь;
	
	Если НЕ Вариант.Предопределенный Тогда
		Если ОписаниеТипа.Типы().Количество()>0 Тогда
			ТребуемыйТип = ОписаниеТипа.Типы()[0];
		Иначе
			ТребуемыйТип = Неопределено;
		КонецЕсли;
		ТипЗначения = мТипЗначения;
		ИмяДокумента 	= ОбъектИБ.ПрограммныйИдентификатор;
		Документ 		= типЗнч(ОбъектИБ)=Тип("СправочникСсылка.фин_ВидыДокументов");
		Список 			= Новый СписокЗначений;
		ТипПриТрансформации = "";
		Если ВариантДляТрансформации.Пустая() Тогда
			Трансформация = Ложь;
		ИначеЕсли Трансформация Тогда 
			Если ВариантДляТрансформации.ВходящиеПоказатели.Количество() >0 Тогда
				ИсточникПриТрансформации 	= ВариантДляТрансформации.ВходящиеПоказатели[0].Справочник;
				мТипЗначения 				= ВариантДляТрансформации.ВходящиеПоказатели[0].ТипПоказателя;
				Если мТипЗначения =Перечисления.фин_ТипыВходящихПоказателейБюджетирования.Числовой Тогда
					ТребуемыйТип = Тип("Число");
				ИначеЕсли мТипЗначения=Перечисления.фин_ТипыВходящихПоказателейБюджетирования.Булево Тогда
					ТребуемыйТип = Тип("Булево");
				ИначеЕсли мТипЗначения=Перечисления.фин_ТипыВходящихПоказателейБюджетирования.Дата Тогда
					ТребуемыйТип = Тип("Дата");
				ИначеЕсли мТипЗначения=Перечисления.фин_ТипыВходящихПоказателейБюджетирования.Перечисление Тогда
					ТребуемыйТип = Тип("ПеречислениеСсылка."+ИсточникПриТрансформации);
				ИначеЕсли мТипЗначения=Перечисления.фин_ТипыВходящихПоказателейБюджетирования.ПланВидовРасчета Тогда
					ТребуемыйТип = Тип("ПланВидовРасчетаСсылка."+ИсточникПриТрансформации);
				ИначеЕсли мТипЗначения=Перечисления.фин_ТипыВходящихПоказателейБюджетирования.ПланВидовХарактеристик Тогда
					ТребуемыйТип = Тип("ПланВидовХарактеристикСсылка."+ИсточникПриТрансформации);
				ИначеЕсли мТипЗначения=Перечисления.фин_ТипыВходящихПоказателейБюджетирования.ПланСчетов Тогда
					ТребуемыйТип = Тип("ПланСчетовСсылка."+ИсточникПриТрансформации);
				Иначе
					ТребуемыйТип = Тип("СправочникСсылка."+ИсточникПриТрансформации);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Вариант = Справочники.фин_ВариантыПолученияСоответствийДляПервичныхДанных.ПолучениеПодразделенияПоПодразделениюОрганизации Тогда
		ТипЗначения = Перечисления.фин_ТипыВходящихПоказателейБюджетирования.Справочник;
		Если ПоказательВарианта = "ПодразделениеОрганизации" Тогда
			Справочник = "ПодразделенияОрганизаций";
			ТребуемыйТип = Тип("СправочникСсылка."+Справочник);
		Иначе
			Справочник = "Организации";
			ТребуемыйТип = Тип("СправочникСсылка."+Справочник);
		КонецЕсли;
	ИначеЕсли Вариант = Справочники.фин_ВариантыПолученияСоответствийДляПервичныхДанных.ПоНастройкеСоответствийДляИзмеренийБюджетирования Тогда
		ВсеПоля = Истина;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ОбъектИБ)=Тип("СправочникСсылка.фин_ВидыДокументов") Тогда
		СтруктураПараметров = Новый Структура("ВидДокументов,ВидДанных,ИмяИсточника",ОбъектИБ,ВидДанных,ИмяИсточника);
	Иначе
		СтруктураПараметров = Новый Структура("ВидДокументов,ВидДанных,ИмяИсточника",ОбъектИБ,Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоДвижениямВРегистрах,ОбъектИБ.ПолучитьОбъект().ПолноеИмя());
	КонецЕсли;
	СтруктураПараметров.Вставить("ТребуетсяАвтовыборПоСубконто",	(ТипЗначения=Перечисления.фин_ТипыВходящихПоказателейБюджетирования.Справочник ИЛИ ТипЗначения=Перечисления.фин_ТипыВходящихПоказателейБюджетирования.Перечисление ИЛИ ТипЗначения=Перечисления.фин_ТипыВходящихПоказателейБюджетирования.ПланВидовРасчета ИЛИ ТипЗначения=Перечисления.фин_ТипыВходящихПоказателейБюджетирования.ПланВидовХарактеристик ИЛИ ТипЗначения=Перечисления.фин_ТипыВходящихПоказателейБюджетирования.ПланСчетов));
	СтруктураПараметров.Вставить("ТребуемыйТип",					ТребуемыйТип);
	СтруктураПараметров.Вставить("БезРеквизитовШапки",				?(ТипЗнч(ОбъектИБ)=Тип("СправочникСсылка.фин_КлассификаторРегистров"),Истина,Ложь));
	СтруктураПараметров.Вставить("ВсеПоля",							ВсеПоля);
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	Закрыть(Новый Структура("ВариантДляТрансформации,Значение,ПоказательВарианта,РеквизитЗаполненияПоказателя,Трансформация,ФиксированноеЗначение",ВариантДляТрансформации,Значение,ПоказательВарианта,РеквизитЗаполненияПоказателя,Трансформация,ФиксированноеЗначение));
КонецПроцедуры

&НаКлиенте
Процедура РеквизитЗаполненияПоказателяОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	РеквизитЗаполненияПоказателя = ВыбранноеЗначение.Путь;
КонецПроцедуры
