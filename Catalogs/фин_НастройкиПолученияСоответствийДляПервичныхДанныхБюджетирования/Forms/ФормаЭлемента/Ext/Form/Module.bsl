
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НадписьВидПолучаемыхДанных 									= "Вид получаемых данных";
	НадписьОбластьПримененияНастроек 							= "Область применения настроек";
	НадписьСвязьДанныхДокументаСВариантомРасчетаСоответствия 	= "Связь данных документа с вариантом расчета соответствия";
	НадписьСпособЗаполненияПоказателейВариантаРасчета 			= "Способ заполнения показателей варианта расчета полями документа - источника";
	
	мВариант 	= Объект.ВариантПолученияСоответствийДляПервичныхДанных;
	мВладелец 	= Объект.Владелец;
	мИсточник	= Объект.ИмяИсточника;
	мВид		= Объект.ВидДанных;
	
	фин_ПроцедурыМеханизмовБюджетирования.ЗаполнитьСписокРеквизитовБюджетирования(СписокРазрезов);
	СписокРазрезов.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.ФинансовыйПоказатель,	"Финансовый показатель");
	СписокРазрезов.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.Сумма,					"Сумма");
	СписокРазрезов.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.Количество,			"Количество");
	СписокРазрезов.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.ПустаяСсылка(),		"Прочие данные");
	
	РазрезПредставление= ?(Объект.Разрез.Пустая(),"Прочие данные",фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(Объект.Разрез));
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Управление формой

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	Для Каждого СтрокаЗаполнения Из Объект.ЗаполнениеПоказателей Цикл
		Если ЗначениеЗаполнено(СтрокаЗаполнения.ВариантДляТрансформации) Тогда
			ОтображатьРеквизитыТрансформацииЗначений 					= Истина;
			Элементы.ЗаполнениеПоказателейТрансформацияКоманда.Пометка 	= Истина;
		КонецЕсли;
	КонецЦикла;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	// установка видимости и доступности элементов в зависимости от значений реквизитов
	
	Элементы.ПредставлениеИсточника.Доступность 	= (Объект.ВидДанных <> ПредопределенноеЗначение("Перечисление.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоШапкеДокумента") И ТипЗнч(Объект.Владелец)=Тип("СправочникСсылка.фин_ВидыДокументов"));
	Элементы.ВидДанных.Доступность 					= ТипЗнч(Объект.Владелец)=Тип("СправочникСсылка.фин_ВидыДокументов");
	Элементы.ЗаполнениеПоказателейГруппаТрансформация.Видимость = Форма.ОтображатьРеквизитыТрансформацииЗначений;
	
КонецПроцедуры

&НаКлиенте
Процедура Трансформация(Команда)
	Элементы.ЗаполнениеПоказателейТрансформацияКоманда.Пометка 	= НЕ Элементы.ЗаполнениеПоказателейТрансформацияКоманда.Пометка;
	ОтображатьРеквизитыТрансформацииЗначений 					= Элементы.ЗаполнениеПоказателейТрансформацияКоманда.Пометка;
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РазрезПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка 	= Ложь;
	ДанныеВыбора 			= СписокРазрезов;
КонецПроцедуры

&НаКлиенте
Процедура РазрезПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка 	= Ложь;
	Объект.Разрез 			= ВыбранноеЗначение;
	РазрезПредставление		= ?(Объект.Разрез.Пустая(),"Прочие данные",фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(Объект.Разрез));
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	Если Объект.Владелец <> мВладелец Тогда
		мВладелец = Объект.Владелец;
		ВладелецПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииНаСервере()
	Если НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
		Возврат;
	КонецЕсли;
	Если ТипЗнч(Объект.Владелец)=Тип("СправочникСсылка.фин_КлассификаторРегистров") Тогда
		Объект.ВидДанных 				= Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоДвижениямВРегистрах;
		Объект.ИмяИсточника 			= Объект.Владелец.ПолучитьОбъект().ПолноеИмя();
		Объект.ПредставлениеИсточника 	= Объект.Владелец.НаименованиеПолное;
	КонецЕсли;
	ЗаполнитьСоставВарианта();
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

//Процедура ЗаполнитьСоставВарианта
//
&НаСервере
Процедура ЗаполнитьСоставВарианта()
	Объект.ЗаполнениеПоказателей.Очистить();
	Если Объект.ВариантПолученияСоответствийДляПервичныхДанных = Справочники.фин_ВариантыПолученияСоответствийДляПервичныхДанных.ПолучениеПодразделенияПоПодразделениюОрганизации Тогда
		НоваяСтрока = Объект.ЗаполнениеПоказателей.Добавить();
		НоваяСтрока.ПоказательВарианта 	= "ПодразделениеОрганизации";
		НоваяСтрока.Справочник 			= "ПодразделенияОрганизаций";
		НоваяСтрока.ТипПоказателя		= Перечисления.фин_ТипыВходящихПоказателейБюджетирования.Справочник;
		НоваяСтрока = Объект.ЗаполнениеПоказателей.Добавить();
		НоваяСтрока.ПоказательВарианта 	= "Организация";
		НоваяСтрока.ТипПоказателя		= Перечисления.фин_ТипыВходящихПоказателейБюджетирования.Справочник;
		НоваяСтрока.Справочник 			= "Организации";
	ИначеЕсли Объект.ВариантПолученияСоответствийДляПервичныхДанных = Справочники.фин_ВариантыПолученияСоответствийДляПервичныхДанных.ПоНастройкеСоответствийДляИзмеренийБюджетирования Тогда
		НоваяСтрока = Объект.ЗаполнениеПоказателей.Добавить();
		НоваяСтрока.ПоказательВарианта 	= "ИсходноеЗначение";
		НоваяСтрока.ТипПоказателя		= Перечисления.фин_ТипыВходящихПоказателейБюджетирования.Справочник;
	Иначе
		Для Каждого Показатель Из Объект.ВариантПолученияСоответствийДляПервичныхДанных.ВходящиеПоказатели Цикл
			НоваяСтрока = Объект.ЗаполнениеПоказателей.Добавить();
			НоваяСтрока.ПоказательВарианта 	= Показатель.Показатель;
			НоваяСтрока.ТипПоказателя 		= Показатель.ТипПоказателя;
			НоваяСтрока.Справочник 			= Показатель.Справочник;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры //ЗаполнитьСоставВарианта

&НаКлиенте
Процедура ВидДанныхПриИзменении(Элемент)
	Если мВид <> Объект.ВидДанных Тогда
		ВидДанныхПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВидДанныхПриИзмененииНаСервере()
	мВид = Объект.ВидДанных;
	Объект.ИмяИсточника 			= "";
	Объект.ПредставлениеИсточника 	= "";
	ЗаполнитьСоставВарианта();
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеИсточникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка 	= Ложь;
	ПредставлениеИсточникаНачалоВыбораНаСервере();
	ДанныеВыбора 			= СписокИсточниковДанных;
КонецПроцедуры

&НаСервере
Процедура ПредставлениеИсточникаНачалоВыбораНаСервере()
	СписокИсточниковДанных.Очистить();
	Если Объект.ВидДанных = Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоТабличнойЧасти Тогда
		ИмяДокумента 	= Объект.Владелец.ПрограммныйИдентификатор;
		Документ 		= Метаданные.Документы.Найти(ИмяДокумента);
		Если Документ <> Неопределено Тогда
			Для Каждого ТабличнаяЧасть Из Документ.ТабличныеЧасти Цикл
				СписокИсточниковДанных.Добавить(ТабличнаяЧасть.Имя,ТабличнаяЧасть.Синоним);
			КонецЦикла;
		КонецЕсли;
	Иначе
		ИмяДокумента 	= Объект.Владелец.ПрограммныйИдентификатор;
		Документ 		= Метаданные.Документы.Найти(ИмяДокумента);
		Если Документ <> Неопределено Тогда
			Для Каждого Движение Из Документ.Движения Цикл
				СписокИсточниковДанных.Добавить(Движение.ПолноеИмя(),Движение.Синоним);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеИсточникаПриИзменении(Элемент)
	Если Объект.ИмяИсточника <> мИсточник Тогда
		мИсточник = Объект.ИмяИсточника;
		ПредставлениеИсточникаПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПредставлениеИсточникаПриИзмененииНаСервере()
	ЗаполнитьСоставВарианта();
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеИсточникаОчистка(Элемент, СтандартнаяОбработка)
	Объект.ИмяИсточника = "";
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеИсточникаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ВыбранноеЗначение<>Неопределено Тогда
		Объект.ИмяИсточника				= ВыбранноеЗначение;
		Объект.ПредставлениеИсточника 	= СписокИсточниковДанных.НайтиПоЗначению(ВыбранноеЗначение).Представление;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВариантПолученияСоответствийДляПервичныхДанныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокРазрезов = Новый СписокЗначений;
	СписокРазрезов.Добавить(Объект.Разрез);
	Если Объект.Разрез <> ПредопределенноеЗначение("Перечисление.фин_ФактическиеПоказателиБюджетирования.Сумма") И Объект.Разрез <> ПредопределенноеЗначение("Перечисление.фин_ФактическиеПоказателиБюджетирования.Количество") Тогда
		СписокРазрезов.Добавить(ПредопределенноеЗначение("Перечисление.фин_ФактическиеПоказателиБюджетирования.ПустаяСсылка"));
	КонецЕсли;
	СтруктураПараметровВыбора = Новый Структура("Отбор,Разрез",Новый Структура("Разрез",СписокРазрезов),Объект.Разрез);
	ОткрытьФорму("Справочник.фин_ВариантыПолученияСоответствийДляПервичныхДанных.ФормаВыбора",СтруктураПараметровВыбора,Элемент,УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ВариантПолученияСоответствийДляПервичныхДанныхПриИзменении(Элемент)
	Если Объект.ВариантПолученияСоответствийДляПервичныхДанных <> мВариант Тогда
		мВариант = Объект.ВариантПолученияСоответствийДляПервичныхДанных;
		ВариантПолученияСоответствийДляПервичныхДанныхПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВариантПолученияСоответствийДляПервичныхДанныхПриИзмененииНаСервере()
	ЗаполнитьСоставВарианта();
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнениеПоказателейПредставлениеНастройкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораНастройки",ЭтотОбъект,Элементы.ЗаполнениеПоказателей.ТекущиеДанные.ПолучитьИдентификатор());
	СтруктураПараметров = Новый Структура("ОбъектИБ,ВидДанных,ИмяИсточника,Вариант,ВариантДляТрансформации,Значение,ПоказательВарианта,РеквизитЗаполненияПоказателя,Трансформация,ФиксированноеЗначение");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров,Объект);
	ЗаполнитьЗначенияСвойств(СтруктураПараметров,Элементы.ЗаполнениеПоказателей.ТекущиеДанные);
	СтруктураПараметров.Вставить("ОбъектИБ",Объект.Владелец);
	СтруктураПараметров.Вставить("Вариант",Объект.ВариантПолученияСоответствийДляПервичныхДанных);
	ОткрытьФорму("Справочник.фин_НастройкиПолученияСоответствийДляПервичныхДанныхБюджетирования.Форма.ФормаНастройкиСвязи",СтруктураПараметров,Элемент,УникальныйИдентификатор,?(фин_ОбщегоНазначенияКлиентПовтИсп.РежимОтдельногоОткрытияОкон(),ВариантОткрытияОкна.ОтдельноеОкно,Окно),,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораНастройки(РезультатВыбора,Идентификатор) Экспорт
	Если РезультатВыбора<>Неопределено Тогда
		ТекущиеДанные = Объект.ЗаполнениеПоказателей.НайтиПоИдентификатору(Идентификатор);
		ЗаполнитьЗначенияСвойств(ТекущиеДанные,РезультатВыбора);
		фин_ОбщегоНазначенияКлиентСервер.ЗаполнитьПредставлениеСтрокиНастройкиСоответствий(ТекущиеДанные);
	КонецЕсли;
КонецПроцедуры




