
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		ЗаполнитьДанныеОбъекта();
	Иначе
		Для Каждого СтрокаОбъект Из Объект.ОграниченияОбластиДействияЗависимости Цикл
			СтрокаОбъект.Представление = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(СтрокаОбъект.Измерение);
		КонецЦикла;
		Для Каждого СтрокаОбъект Из Объект.РезультирующиеЗначенияРазрезов Цикл
			СтрокаОбъект.Представление = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(СтрокаОбъект.Измерение);
		КонецЦикла;
	КонецЕсли;
	НадписьРезультирующиеЗначенияРазрезов 	= "Результирующие значения разрезов";
	НадписьОграниченияОбластиДействия 		= "Ограничения области действия";
	НадписьИспользуемыеПоказатели 			= "Используемые показатели";
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеОбъекта()
	мЭтотОбъект = РеквизитФормыВЗначение("Объект");
	Для Инд=1 По 3 Цикл
		Если мЭтотОбъект.ИспользуемыеПоказатели.НайтиСтроки(Новый Структура("Показатель","Показатель"+Строка(Инд))).Количество()=0 Тогда
			НоваяСтрока = мЭтотОбъект.ИспользуемыеПоказатели.Добавить();
			НоваяСтрока.Показатель = "Показатель"+Строка(Инд);
		КонецЕсли;
	КонецЦикла;
	МассивИзмерений = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПолучитьПолныйСписокРазрезов");
	СписокТабличныхЧастей = Новый Массив;
	СписокТабличныхЧастей.Добавить("ОграниченияОбластиДействияЗависимости");
	СписокТабличныхЧастей.Добавить("РезультирующиеЗначенияРазрезов");
	Для Каждого ТЧ Из СписокТабличныхЧастей Цикл
		Для Каждого Измерение Из МассивИзмерений Цикл
			Если мЭтотОбъект[ТЧ].НайтиСтроки(Новый Структура("Измерение",Измерение.Значение)).Количество()=0 Тогда
				НоваяСтрока = мЭтотОбъект[ТЧ].Добавить();
				НоваяСтрока.Измерение = Измерение.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	ЗначениеВРеквизитФормы(мЭтотОбъект,"Объект");
	Для Каждого СтрокаОбъект Из Объект.ОграниченияОбластиДействияЗависимости Цикл
		СтрокаОбъект.Представление = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(СтрокаОбъект.Измерение);
	КонецЦикла;
	Для Каждого СтрокаОбъект Из Объект.РезультирующиеЗначенияРазрезов Цикл
		СтрокаОбъект.Представление = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(СтрокаОбъект.Измерение);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеРазрезов(Команда)
	ЗаполнитьДанныеОбъекта();
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеСоставаНастроек(Команда)
	Если Объект.Ссылка.Пустая() Или Модифицированность Тогда
		ПоказатьПредупреждение(,"Необходимо записать объект перед продолжением!");
	Иначе 
		ОткрытьФорму("РегистрСведений.фин_СоставНастроекРасчетаЗависимостейБюджетирования.Форма.ФормаСписка",Новый Структура("НастройкаРасчета",Объект.Ссылка),ЭтотОбъект,КлючУникальности);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	НаборЗаписей = РегистрыСведений.фин_СоставНастроекРасчетаЗависимостейБюджетирования.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.НастройкаРасчета.Значение = Объект.Ссылка;
	НаборЗаписей.Отбор.НастройкаРасчета.Использование = Истина;
	НаборЗаписей.Прочитать();
	КЭШ_Разрезы = Новый Соответствие;
	Для Каждого Запись Из НаборЗаписей Цикл
		СтруктураОтбораИсходныхЗначений = Новый Структура;
		Для Каждого СтрокаРазрез Из Объект.ОграниченияОбластиДействияЗависимости Цикл
			Если СтрокаРазрез.Использование Тогда
				ИмяРазреза = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(СтрокаРазрез.Измерение); 
				СтруктураОтбораИсходныхЗначений.Вставить(ИмяРазреза,?(ЗначениеЗаполнено(Запись.ИсходныйНаборРазрезов[ИмяРазреза]),Запись.ИсходныйНаборРазрезов[ИмяРазреза],фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(СтрокаРазрез.Измерение,КЭШ_Разрезы).ТипЗначения.ПривестиЗначение("")));
				СтруктураОтбораИсходныхЗначений.Вставить("Отбор"+ИмяРазреза,Истина);
			КонецЕсли;
		КонецЦикла;
		СтруктураОтбораРезультирующихЗначений = Новый Структура;
		Для Каждого СтрокаРазрез Из Запись.НастройкаРасчета.РезультирующиеЗначенияРазрезов Цикл
			Если СтрокаРазрез.Использование Тогда
				ИмяРазреза = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(СтрокаРазрез.Измерение); 
				СтруктураОтбораРезультирующихЗначений.Вставить(ИмяРазреза,?(ЗначениеЗаполнено(Запись.ЗависимыйНаборРазрезов[ИмяРазреза]),Запись.ЗависимыйНаборРазрезов[ИмяРазреза],фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(СтрокаРазрез.Измерение,КЭШ_Разрезы).ТипЗначения.ПривестиЗначение("")));
				СтруктураОтбораРезультирующихЗначений.Вставить("Отбор"+ИмяРазреза,Истина);
			КонецЕсли;
		КонецЦикла;
		Запись.ИсходныйНаборРазрезов = фин_УправлениеЗависимостямиСтатейБюджетов.ОпределитьПозициюНабораПоЗависимостям(Истина,СтруктураОтбораИсходныхЗначений);
		Запись.ЗависимыйНаборРазрезов = фин_УправлениеЗависимостямиСтатейБюджетов.ОпределитьПозициюНабораПоЗависимостям(Ложь,СтруктураОтбораРезультирующихЗначений);
	КонецЦикла;
	НаборЗаписей.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Для Каждого СтрокаОбъект Из Объект.ОграниченияОбластиДействияЗависимости Цикл
		СтрокаОбъект.Представление = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(СтрокаОбъект.Измерение);
	КонецЦикла;
	Для Каждого СтрокаОбъект Из Объект.РезультирующиеЗначенияРазрезов Цикл
		СтрокаОбъект.Представление = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(СтрокаОбъект.Измерение);
	КонецЦикла;
КонецПроцедуры
