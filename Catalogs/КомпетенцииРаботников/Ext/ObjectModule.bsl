// Процедура создает список оценок для ввода к ним описаний.
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ЗаполнитьОценки() Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СоставОценочныхШкалКомпетенций.Ссылка,
	|	СоставОценочныхШкалКомпетенций.ПриоритетОценки КАК ПриоритетОценки
	|ИЗ
	|	Справочник.СоставОценочныхШкалКомпетенций КАК СоставОценочныхШкалКомпетенций
	|
	|ГДЕ
	|	СоставОценочныхШкалКомпетенций.Владелец = &Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПриоритетОценки УБЫВ");
	
	Запрос.УстановитьПараметр("Владелец",ШкалаОценок);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда 
		ТекстСообщения = "В шкале оценок: """+ ШкалаОценок.Наименование +""" не введен список наименований оценок"; 
		Сообщить (ТекстСообщения);
	    Возврат;
	КонецЕсли;
	
	Если ОписаниеОценок.Количество() > 0 Тогда 
		
		// Перестройка шкалы оценок. 
		// Найдем и удалим все строки таблицы, где не заполнено описание.
		МассивСтрок = ОписаниеОценок.НайтиСтроки(Новый Структура("ОписаниеОценки",""));
		Для каждого СтрокаДляУдаления Из МассивСтрок Цикл
			ОписаниеОценок.Удалить(СтрокаДляУдаления);
		КонецЦикла;
		
		// "Обнулим" оставшиеся строки.
		ТЗ = ОписаниеОценок.Выгрузить();
		ТЗ.ЗаполнитьЗначения(0,"ПриоритетОценки");
		ТЗ.ЗаполнитьЗначения(Справочники.ШкалыОценокКомпетенций.ПустаяСсылка(),"Оценка");
		ОписаниеОценок.Загрузить(ТЗ);
	КонецЕсли;
	
	// Добавляем оценки в список.
	Пока Выборка.Следующий() Цикл
		СтрокаТЧ = ОписаниеОценок.Добавить();
		СтрокаТЧ.Оценка 		 = Выборка.Ссылка;
		СтрокаТЧ.ПриоритетОценки = Выборка.ПриоритетОценки;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьОценки
