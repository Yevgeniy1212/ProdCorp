
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УправлениеФормой(ЭтотОбъект);
	
	ОбновитьОтборыДинамическихСписков(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)    // пример обработки внешнего оповещения
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Объект.Наименование="" Тогда
		Для Каждого СтрокаХарактеристика Из Объект.СоставХарактеристики Цикл
			Объект.Наименование = Объект.Наименование+?(Объект.Наименование="","","; ")+ПолучитьСвойство(СтрокаХарактеристика.Характеристика,"Наименование")+": "+Строка(СтрокаХарактеристика.Значение);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Управление формой

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	Если Объект.Ссылка.Пустая() Тогда
		Объект.Активная = Истина;
	КонецЕсли;
	
	ОбновитьОтборыДинамическихСписков(ЭтотОбъект); // если есть связанные динамические списки
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	// установка видимости и доступности элементов в зависимости от значений реквизитов
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьОтборыДинамическихСписков(Форма)
	
	// настройка отбора динамических списков связанных элементов
	
	//фин_ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	//	Форма.КонтактныеЛица, 
	//	"ОбъектВладелец", 
	//	Форма.Объект.Ссылка, 
	//	ВидСравненияКомпоновкиДанных.Равно,
	//	НСтр("ru = 'Отбор по владельцу'"),
	//	Истина,
	//	РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	//	
	// если списки содержат поле "Организация"
	//Если фин_ОбщегоНазначенияСервер.ПолучитьЗначениеПоУмолчанию(, "УчетПоВсемОрганизациям") = Ложь Тогда 		
	//	фин_ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	//		Форма.Договоры, 
	//		"Организация", 
	//		фин_ОбщегоНазначенияСервер.ПолучитьЗначениеПоУмолчанию(, "ОсновнаяОрганизация"), 
	//		ВидСравненияКомпоновкиДанных.Равно,
	//		НСтр("ru = 'Отбор по организации'"),
	//		Истина,
	//		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	//КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСвойство(Значение,Свойство)
	Возврат Значение[Свойство];
КонецФункции


&НаКлиенте
Процедура СоставХарактеристикиЗначениеПриИзменении(Элемент)
	Объект.Наименование = СформироватьНаименование(Объект.СоставХарактеристики);
КонецПроцедуры

// Функция устанавливает новое наименование характеристики по значениям свойств.
//
// Параметры:
//  КоллекцияЗначенийСвойств - коллекция значений, имеющая свойство Значение.
//
// Возвращаемое значение:
//  Строка - сформированное наименование.
//
&НаСервере
Функция СформироватьНаименование(знач КоллекцияЗначенийСвойств) Экспорт

	Строка = "";

	Для Каждого ЭлементКоллекции Из КоллекцияЗначенийСвойств Цикл
		Если ЗначениеЗаполнено(ЭлементКоллекции.Значение) Тогда
			Строка = Строка + ЭлементКоллекции.Значение + ", ";
		КонецЕсли;
	КонецЦикла;

	Строка = Лев(Строка, СтрДлина(Строка) - 2);

	Если ПустаяСтрока(Строка) Тогда
		Строка = "<Свойства не назначены>";
	КонецЕсли;

	Возврат Строка;

КонецФункции // СформироватьНаименование()
