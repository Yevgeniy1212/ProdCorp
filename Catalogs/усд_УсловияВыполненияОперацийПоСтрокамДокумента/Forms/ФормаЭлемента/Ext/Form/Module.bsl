////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.СправочникПриСозданииНаСервере(ЭтотОбъект);
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

//Процедура ВидДанныхПриИзменении
//
&НаКлиенте
Процедура ВидДанныхПриИзменении(Элемент)
	
	Если мВид <> Объект.ВидДанных Тогда
		мВид = Объект.ВидДанных;
		Объект.СоставныеЧастиУсловия.Очистить();
	КонецЕсли;
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры //ВидДанныхПриИзменении

//Процедура ВладелецПриИзменении
//
&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)

	ВладелецПриИзмененииНаСервере();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры //ВладелецПриИзменении     

//Процедура ПредставлениеИсточникаПриИзменении
//
&НаКлиенте
Процедура ПредставлениеИсточникаПриИзменении(Элемент)
	Если Объект.ИмяИсточника <> мИсточник Тогда
		мИсточник = Объект.ИмяИсточника;
		Объект.СоставныеЧастиУсловия.Очистить();
	КонецЕсли;
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры //ПредставлениеИсточникаПриИзменении

//Процедура НаборПравилОтраженияПредставлениеИсточникаОчистка
//
&НаКлиенте
Процедура ПредставлениеИсточникаОчистка(Элемент, СтандартнаяОбработка)

	Объект.ИмяИсточника = "";
	Объект.СоставныеЧастиУсловия.Очистить();
	
КонецПроцедуры //НаборПравилОтраженияПредставлениеИсточникаОчистка

//Процедура ПредставлениеИсточникаНачалоВыбора
//
&НаКлиенте
Процедура ПредставлениеИсточникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не указан вид документов/регистров!'"));
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	Список = Новый СписокЗначений;
	
	ПредставлениеИсточникаНачалоВыбораНаСервере(Объект.ВидДанных, Список, ПрограммныйИдентификатор);
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВыбораЭлемента", ЭтотОбъект);
	Список.ПоказатьВыборЭлемента(Оповещение, НСтр("ru = 'Выберите нужный источник'")); 

КонецПроцедуры //ПредставлениеИсточникаНачалоВыбора

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	Если НЕ фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ <СоставныеЧастиУсловия>

//Процедура СоставныеЧастиУсловияПередНачаломДобавления
//
&НаКлиенте
Процедура СоставныеЧастиУсловияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбран вид документов!'"));
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры //СоставныеЧастиУсловияПередНачаломДобавления

//Процедура СоставныеЧастиУсловияВыбор
//
&НаКлиенте
Процедура СоставныеЧастиУсловияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ПроверитьЗаполнение() Тогда
		ОткрытьРедакторСтроки();
	КонецЕсли;
	
КонецПроцедуры //СоставныеЧастиУсловияВыбор

&НаКлиенте
Процедура СоставныеЧастиУсловияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если ПроверитьЗаполнение() Тогда
		ОткрытьРедакторСтроки();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// Управление формой

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	НадписьСоставныеЧастиУсловия = "Составные части условия";
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Если НЕ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) И НЕ ЗначениеЗаполнено(Объект.ВидДанных) Тогда
			ВидДанных = Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоШапкеДокумента;
		КонецЕсли;
		
	КонецЕсли;
	
	мВладелец 	= Объект.Владелец;
	мВид		= Объект.ВидДанных;
	мИсточник 	= Объект.ИмяИсточника;
	Если Объект.Владелец = Неопределено Тогда 
		ПрограммныйИдентификатор = "";
	Иначе 
		ПрограммныйИдентификатор = Объект.Владелец.ПрограммныйИдентификатор;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	// установка видимости и доступности элементов в зависимости от значений реквизитов
	Элементы 	= Форма.Элементы;
	Объект		= Форма.Объект;
	
	Элементы.ПредставлениеИсточника.Доступность = (Объект.ВидДанных <> ПредопределенноеЗначение("Перечисление.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоШапкеДокумента") И ТипЗнч(Объект.Владелец)<>Тип("СправочникСсылка.фин_КлассификаторРегистров"));	
	Элементы.ВидДанных.Доступность = (ТипЗнч(Объект.Владелец)<>Тип("СправочникСсылка.фин_КлассификаторРегистров"));	
	
КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииНаСервере()
	
	ПрограммныйИдентификатор = Объект.Владелец.ПрограммныйИдентификатор;
	
	Если НЕ ЗначениеЗаполнено(Объект.Владелец) И Объект.СоставныеЧастиУсловия.Количество() >0 Тогда
		Объект.СоставныеЧастиУсловия.Очистить();
	ИначеЕсли мВладелец <> Объект.Владелец И ЗначениеЗаполнено(Объект.Владелец) Тогда
		Для Каждого СтрокаУсловие Из Объект.СоставныеЧастиУсловия Цикл
			Если СтрокаУсловие.ИмяРеквизита = "Дата" ИЛИ СтрокаУсловие.ИмяРеквизита = "Проведен" Тогда
				Продолжить;
			КонецЕсли;
			Если Метаданные.Документы.Найти(ПрограммныйИдентификатор).Реквизиты.Найти(СтрокаУсловие.ИмяРеквизита)=Неопределено Тогда
				 Объект.СоставныеЧастиУсловия.Удалить(СтрокаУсловие);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Владелец) И ТипЗнч(Объект.Владелец)=Тип("СправочникСсылка.фин_КлассификаторРегистров") Тогда
		Объект.ВидДанных = Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоДвижениямВРегистрах;
		Объект.ИмяИсточника = Объект.Владелец.ПолучитьОбъект().ПолноеИмя();
		Объект.ПредставлениеИсточника = Объект.Владелец.НаименованиеПолное;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВыбораЭлемента(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Объект.ИмяИсточника				= Результат.Значение;
		Объект.ПредставлениеИсточника	= Результат.Представление;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПредставлениеИсточникаНачалоВыбораНаСервере(ВидДанных, Список, ПрограммныйИдентификатор)
	
	Если ВидДанных = Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоТабличнойЧасти Тогда
		ИмяДокумента = ПрограммныйИдентификатор;
		Документ = Метаданные.Документы.Найти(ИмяДокумента);
		Если Документ <> Неопределено Тогда
			Для Каждого ТабличнаяЧасть Из Документ.ТабличныеЧасти Цикл
				Список.Добавить(ТабличнаяЧасть.Имя,ТабличнаяЧасть.Синоним);
			КонецЦикла;
		КонецЕсли;
	Иначе
		ИмяДокумента = ПрограммныйИдентификатор;
		Документ = Метаданные.Документы.Найти(ИмяДокумента);
		Если Документ <> Неопределено Тогда
			Для Каждого Движение Из Документ.Движения Цикл
				Список.Добавить(Движение.ПолноеИмя(),Движение.Синоним);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРедакторСтроки()
	
	ИндексСтроки = Объект.СоставныеЧастиУсловия.Индекс(Объект.СоставныеЧастиУсловия.НайтиПоИдентификатору(Элементы.СоставныеЧастиУсловия.ТекущаяСтрока));
	ОткрытьФорму("Справочник.усд_УсловияВыполненияОперацийПоСтрокамДокумента.Форма.ФормаРедактированияУсловия", Новый Структура("ОбъектВладелец,ТекущаяСтрока,Адрес,ВидДанных,ИмяИсточника",Объект.Владелец,ИндексСтроки,АдресХранилища(),Объект.ВидДанных,Объект.ИмяИсточника), ЭтотОбъект, КлючУникальности,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);  

КонецПроцедуры

&НаСервере
Функция АдресХранилища()
	Адрес = ПоместитьВоВременноеХранилище(Объект.СоставныеЧастиУсловия.Выгрузить(),УникальныйИдентификатор);
	Возврат Адрес;
КонецФункции

&НаКлиенте
Процедура ОбработатьРедактированиеУсловия() Экспорт
	ВыполнитьЗагрузкуДанных();
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗагрузкуДанных()
	Объект.СоставныеЧастиУсловия.Загрузить(ПолучитьИзВременногоХранилища(Адрес));
КонецПроцедуры
