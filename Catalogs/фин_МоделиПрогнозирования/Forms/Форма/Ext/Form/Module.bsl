
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	фин_РаботаСДополнительнымиРазрезамиБюджетирования.ЗаполнитьСписокРазрезовУчета(СписокРазрезов);
	фин_РаботаСДополнительнымиРазрезамиБюджетирования.НастроитьПредставлениеРазрезов(ЭтотОбъект);
	Реквизиты = ПолучитьРеквизиты();
	Для Каждого Реквизит Из Реквизиты  Цикл
		Если Найти(Реквизит.Имя,"Надпись")<>0 Тогда
			ЭтотОбъект[Реквизит.Имя] = Реквизит.Заголовок;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	ЭтоНелинейнаяМодель = Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии");
	ЭтоЛинейнаяМодель = Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии");
	Элементы.НачалоНаблюдаемогоПериода.ТолькоПросмотр = Объект.СпособСбораНаблюдаемыхДанных=ПредопределенноеЗначение("Перечисление.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ЗначенияПериодаПредшествующегоПрогнозируемому");
	Элементы.НачалоНаблюдаемогоПериода.Видимость = Объект.СпособСбораНаблюдаемыхДанных=ПредопределенноеЗначение("Перечисление.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ЗначенияЗаданногоПериода");
	Элементы.ОкончаниеНаблюдаемогоПериода.Видимость = Объект.СпособСбораНаблюдаемыхДанных=ПредопределенноеЗначение("Перечисление.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ЗначенияЗаданногоПериода");
	Элементы.ФормулаПреобразованияНаблюдаемыхЗначений.Видимость 			=  ЭтоНелинейнаяМодель; 
	Элементы.ФормулаПреобразованияПрогнозируемыхЗначений.Видимость			=  ЭтоНелинейнаяМодель; 
	Элементы.НаблюдаемыеИсходныеПоказателиФормулаПреобразования.Видимость	=  ЭтоНелинейнаяМодель;
	Элементы.НаблюдаемыеИсходныеПоказатели.Видимость = ЭтоНелинейнаяМодель ИЛИ ЭтоЛинейнаяМодель;
	Элементы.НадписьИсходныеПоказатели.Видимость = ЭтоНелинейнаяМодель ИЛИ ЭтоЛинейнаяМодель;
	Элементы.ФиксированныеОценкиМНК.Видимость = ЭтоНелинейнаяМодель ИЛИ ЭтоЛинейнаяМодель;
	Элементы.ГруппаНаблюдаемыеДанные.Видимость = ?(ЭтоНелинейнаяМодель ИЛИ ЭтоЛинейнаяМодель,НЕ Объект.ФиксированныеОценкиПараметров,Истина);
	Элементы.НаблюдаемыеИсходныеПоказателиОценкаМНК.Видимость = Объект.ФиксированныеОценкиПараметров;
	Элементы.БазоваяОценка.Видимость = ?(ЭтоНелинейнаяМодель ИЛИ ЭтоЛинейнаяМодель,Объект.ФиксированныеОценкиПараметров,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ВидМоделиПрогнозированияПриИзменении(Элемент)
	Если Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.МодельПрогнозированияВременногоРядаНаОсновеЭкспоненциальногоСглаживания") ИЛИ Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.РегрессионнаяМодельВременногоРяда") Тогда
		Объект.НаблюдаемыеИсходныеПоказатели.Очистить();
	КонецЕсли;
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПрогнозируемыйПоказательПриИзменении(Элемент)
	Объект.ОбластьДействия.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура КоличествоНаблюдаемыхПериодовПриИзменении(Элемент)
	НастройкаПериодов();
КонецПроцедуры

&НаКлиенте
Процедура СценарийНаблюдаемыхДанныхПриИзменении(Элемент)
	НастройкаПериодов();
КонецПроцедуры

&НаКлиенте
Процедура СценарийПрогнозныхДанныхПриИзменении(Элемент)
	НастройкаПериодов();
КонецПроцедуры

&НаСервере
Процедура НастройкаПериодов()
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.НастроитьПериодыПрогноза();	
	ЗначениеВРеквизитФормы(ОбъектОбработки,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура СпособСбораНаблюдаемыхДанныхПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ФормулаПреобразованияНаблюдаемыхЗначенийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбработатьВыборФормулы(Объект.ФормулаПреобразованияНаблюдаемыхЗначений,,"ФормулаПреобразованияНаблюдаемыхЗначений");
КонецПроцедуры

&НаКлиенте
Функция ОбработатьВыборФормулы(Текст,ТекущиеДанные=Неопределено,ИмяПоля = "")
	ОписаниеОбработчикЗавершенияВводаФормулы = Новый ОписаниеОповещения("ОбработчикЗавершенияВводаФормулы",ЭтотОбъект,?(ТекущиеДанные=Неопределено,Новый Структура("ИмяПоля",ИмяПоля),Новый Структура("ТекущиеДанные",ТекущиеДанные)));
 	ОткрытьФорму("Обработка.фин_РасчетПоМоделиПрогнозирования.Форма.ФормаФормулы",Новый Структура("Формула",Текст),ЭтотОбъект,,,,ОписаниеОбработчикЗавершенияВводаФормулы,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецФункции

&НаКлиенте
Процедура ОбработчикЗавершенияВводаФормулы(Результат,ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		Если ДополнительныеПараметры.Свойство("ТекущиеДанные") Тогда
			ДополнительныеПараметры.ТекущиеДанные.ФормулаПреобразования = Результат;
		Иначе
			Объект[ДополнительныеПараметры.ИмяПоля] = Результат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФормулаПреобразованияПрогнозируемыхЗначенийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбработатьВыборФормулы(Объект.ФормулаПреобразованияПрогнозируемыхЗначений,,"ФормулаПреобразованияПрогнозируемыхЗначений");
КонецПроцедуры

&НаКлиенте
Процедура НаблюдаемыеИсходныеПоказателиФормулаПреобразованияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбработатьВыборФормулы(Элементы.НаблюдаемыеИсходныеПоказатели.ТекущиеДанные.ФормулаПреобразования,Элементы.НаблюдаемыеИсходныеПоказатели.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ОбластьДействияИзмерениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокРазрезов;
КонецПроцедуры

&НаКлиенте
Процедура ОбластьДействияИзмерениеПриИзменении(Элемент)

	ТекущиеДанные = Элементы.ОбластьДействия.ТекущаяСтрока;
	ОбработатьИзменениеРазрезаУчета(ТекущиеДанные);
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеРазрезаУчета(ТекущаяСтрока)
	ТекущиеДанные = Объект.ОбластьДействия.НайтиПоИдентификатору(ТекущаяСтрока);
	ТекущиеДанные.Разрез = фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(ТекущиеДанные.Измерение);
	Если ЗначениеЗаполнено(ТекущиеДанные.Разрез) Тогда
		ТекущиеДанные.ОсновноеЗначение = ТекущиеДанные.Разрез.ТипЗначения.ПривестиЗначение(ТекущиеДанные.ОсновноеЗначение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбластьДействияЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Элемент.ОграничениеТипа = Элементы.ОбластьДействия.ТекущиеДанные.Разрез.ТипЗначения;
КонецПроцедуры

&НаКлиенте
Процедура НачалоНаблюдаемогоПериодаПриИзменении(Элемент)
	НастройкаПериодов();
КонецПроцедуры

&НаКлиенте
Процедура НачалоНаблюдаемогоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СценарийНаблюдаемый = ?(Объект.ПорядокОпределенияСценарияНаблюдаемыхДанных=ПредопределенноеЗначение("Перечисление.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ВыбранныйСценарий") И ЗначениеЗаполнено(Объект.СценарийНаблюдаемыхДанных),Объект.СценарийНаблюдаемыхДанных,Объект.СценарийПрогнозныхДанных);
	Если ЗначениеЗаполнено(СценарийНаблюдаемый) Тогда
		СтандартнаяОбработка = Ложь;
		ОбработатьРегулированиеПериода(СценарийНаблюдаемый,Направление);
	КонецЕсли;
	НастройкаПериодов();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРегулированиеПериода(СценарийНаблюдаемый,Направление)
	Объект.НачалоНаблюдаемогоПериода = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(Объект.НачалоНаблюдаемогоПериода,СценарийНаблюдаемый,Направление);
КонецПроцедуры

&НаКлиенте
Процедура ФиксированныеОценкиМНКПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры
