////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем ПрошлыйИзмененныйРодительОбъектаДоступа;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция проверяет, существуют ли движения по кассе.
// Если есть - менять валюту кассы нельзя.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Истина - если есть движения, Ложь - если нет.
//
Функция СуществуютСсылки() Экспорт

	Запрос = Новый Запрос();

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1	
	|	ТиповойОбороты.Счет
	|ИЗ
	|	РегистрБухгалтерии.Типовой.Обороты(, , , , , Субконто1 = &Касса ИЛИ Субконто2 = &Касса ИЛИ Субконто3 = &Касса, , ) КАК ТиповойОбороты"; 	

	Запрос.УстановитьПараметр("Касса", Ссылка);

	Возврат НЕ Запрос.Выполнить().Пустой();

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ПередЗаписью
//
Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		
		Если Не ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда 
			ВалютаДенежныхСредств = Константы.ВалютаРегламентированногоУчета.Получить();
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа И НЕ ЗначениеЗаполнено(ВалютаДенежныхСредств) Тогда
		Сообщить("Не указана валюта денежных средств.", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	
	Если НЕ ЭтоГруппа И НЕ ЭтоНовый() Тогда
		// Проверяем изменения учетных реквизитов - счет учета и валюта учета
		Если ВалютаДенежныхСредств <> Ссылка.ВалютаДенежныхСредств Тогда
			СуществуютСсылки = ЭтотОбъект.СуществуютСсылки();
			Если СуществуютСсылки и ВалютаДенежныхСредств <> Ссылка.ВалютаДенежныхСредств Тогда		
				Сообщить("Существуют документы, проведенные по кассе """ + Наименование + """.
						|Реквизит ""Валюта денежных средств"" не может быть изменен, элемент не записан.", СтатусСообщения.Важное);		
				Отказ = Истина;
			КонецЕсли;				
		КонецЕсли;	
	КонецЕсли;	

	Если Не Отказ И Не ОбменДанными.Загрузка Тогда
	
		ПрошлыйИзмененныйРодительОбъектаДоступа = ?(Не ЭтоНовый() и Не Ссылка.Родитель = Родитель, Ссылка.Родитель, Неопределено);
		НастройкаПравДоступа.ПередЗаписьюНовогоОбъектаСПравамиДоступаПользователей(ЭтотОбъект, Отказ, Родитель);
		
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Обработчик события ПриЗаписи
//
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если Не Отказ И Не ОбменДанными.Загрузка Тогда
		
		НастройкаПравДоступа.ОбновитьПраваДоступаКИерархическимОбъектамПриНеобходимости(Ссылка,ПрошлыйИзмененныйРодительОбъектаДоступа, Отказ);
		
	КонецЕсли;

КонецПроцедуры // ПриЗаписи()
