// Процедура генерирует код перемещаемого элемента (группы) справочника,
// а также код расположенного рядом элемента при интерактивном перемещении
// элемента в форме списка справочника.
// Записывает переставляемые элементы с измененными кодами.
// В случае сдвига группы элементов также изменяет коды вложенных в группу
// элементов.
//
// Параметры
//  Направление  – число – направление сдвига элемента,
//                 принимает значения:
//                      1 - при сдвиге вниз;
//                     -1 - при сдвиге вверх.
//
Процедура ИзменитьКод(Направление) Экспорт

	#Если Клиент Тогда
	
	ТекущийКод    = Код;

	СписокКодов   = Новый СписокЗначений;

	СтатьиБюджета  = Справочники.фин_СтатьиБюджета;
	ВыборкаСтроки = СтатьиБюджета.Выбрать(Родитель, Владелец, , "Код Убыв");

	Пока ВыборкаСтроки.Следующий() Цикл
		СписокКодов.Добавить(ВыборкаСтроки.Код);
	КонецЦикла;

	Если СписокКодов.Количество() < 2  Тогда
		// На данном уровне имеется только один элемент или группа справочника.
		// Игнорируем действие пользователя.

		Возврат;
	КонецЕсли; 

	ПорядковыйНомер = СписокКодов.Индекс(СписокКодов.НайтиПоЗначению(ТекущийКод));

	Если (ПорядковыйНомер = 0) И (Направление < 0) Тогда

		// Попытка перемещения первого по порядку элемента вверх.
		ИндексЭлементаЗамены = СписокКодов.Количество() - 1;
	
	ИначеЕсли (ПорядковыйНомер = СписокКодов.Количество() - 1) И (Направление > 0) Тогда

		// Попытка перемещения последнего по порядку элемента вниз.
		ИндексЭлементаЗамены = 0;

	Иначе

		// в иных случаях
		ИндексЭлементаЗамены = ПорядковыйНомер + Направление;

	КонецЕсли;

	КодЭлементаЗамены     = СписокКодов.Получить(ИндексЭлементаЗамены).Значение;
	
	ЭлементЗаменыСсылка   = СтатьиБюджета.НайтиПоКоду(КодЭлементаЗамены,,Родитель, Владелец);
	Если ЭлементЗаменыСсылка <> СтатьиБюджета.ПустаяСсылка() Тогда
		
		Попытка
			
			// Открываем транзакцию
			НачатьТранзакцию();
			
			// Промежуточная запись текущего элемента с уникальным кодом
			ЭтотОбъект.Код="&&$##";
			ЭтотОбъект.Записать();
						
			// записываем соседний элемент с кодом текущего
			ЭлементЗамены= ЭлементЗаменыСсылка.ПолучитьОбъект();
			ПредыдущийКод=ЭлементЗамены.Код;
			ЭлементЗамены.Код = ТекущийКод;
			ЭлементЗамены.Записать();
			
			// записываем текущий элемент с кодом соседнего
			ЭтотОбъект.Код = ПредыдущийКод;
			ЭтотОбъект.Записать();
			
			// Завершаем транзакцию
			ЗафиксироватьТранзакцию();
			
		Исключение
			ПоказатьПредупреждение(,"Не удалось записать элемент справочника:
			|" + ОписаниеОшибки());
			
			Возврат;
		КонецПопытки;
		
	КонецЕсли;
	
	#КонецЕсли
	
КонецПроцедуры // ИзменитьКод()

//Процедура ПередЗаписью
//
Процедура ПередЗаписью(Отказ)
	//Если Владелец.Пустая() И Не ПометкаУдаления Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Статья бюджета """+Наименование+""" не записана, так как не указан бюджет!");
	//	Отказ = Истина;
	//	Возврат;
	//КонецЕсли;
	//Если Не ЭтоГруппа Тогда
	//	Если ФинансовыйПоказатель.Пустая() Тогда
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Статья бюджета """+Наименование+""" записана, но для нее не указан финансовый показатель!");
	//	КонецЕсли;
	//	Если Не ФинансовыйПоказатель.Пустая() Тогда
	//		Запрос = Новый Запрос;
	//		Запрос.Текст = "ВЫБРАТЬ
	//		|	СтатьиБюджета.Ссылка
	//		|ИЗ
	//		|	Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
	//		|ГДЕ
	//		|	СтатьиБюджета.Владелец = &Владелец
	//		|	И СтатьиБюджета.ФинансовыйПоказатель = &ФинансовыйПоказатель
	//		|	И СтатьиБюджета.Версия В (&Версия)
	//		|	И СтатьиБюджета.Ссылка <> &Ссылка";
	//		Запрос.УстановитьПараметр("Ссылка",			Ссылка);
	//		Запрос.УстановитьПараметр("ФинансовыйПоказатель",	ФинансовыйПоказатель);
	//		Запрос.УстановитьПараметр("Владелец",		Владелец);
	//		СписокВерсий = Новый СписокЗначений;
	//		СписокВерсий.Добавить(Версия);
	//		СписокВерсий.Добавить(Справочники.фин_ВерсииБюджетов.ПустаяСсылка());
	//		Запрос.УстановитьПараметр("Версия",			СписокВерсий);
	//		РезультатЗапроса = Запрос.Выполнить();
	//		Если НЕ РезультатЗапроса.Пустой() Тогда
	//			Отказ = Истина;
	//			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Статья бюджета """+Наименование+""" не записана, 
	//			|	так как финансовый показатель "+ФинансовыйПоказатель+" назначен другим статьям этого же бюджета """+Владелец+""""+?(ЗначениеЗаполнено(Версия)," (версии "+Строка(Версия)+")","")+":");
	//			Выборка = РезультатЗапроса.Выбрать();
	//			Пока Выборка.Следующий() Цикл
	//				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("	- "+Выборка.Ссылка);
	//			КонецЦикла;
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;	
КонецПроцедуры //ПередЗаписью
