
&НаКлиенте
Процедура ТрансляцияРазрезовРазрезНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ДанныеВыбора = СписокРазрезов;
КонецПроцедуры

&НаКлиенте
Процедура ПоказателиВКолонкахРазрезНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ДанныеВыбора = СписокПоказателей;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УправлениеФормой(ЭтотОбъект);
	фин_РаботаСДополнительнымиРазрезамиБюджетирования.НастроитьПредставлениеРазрезов(ЭтотОбъект,,"ТрансляцияРазрезов",Ложь,,"Разрез");
	фин_РаботаСДополнительнымиРазрезамиБюджетирования.НастроитьПредставлениеРазрезов(ЭтотОбъект,,"Объект",Ложь,Истина,"Колонка");
	ЗаполнитьСпискиВыбора();
КонецПроцедуры

&НаКлиенте
Процедура ДляЗагрузкиФактическихИПрогнозныхДанныхПриИзменении(Элемент)
	Если Объект.ДляЗагрузкиФактическихИПрогнозныхДанных Тогда
		Объект.Бюджет=ПредопределенноеЗначение("Справочник.фин_Бюджеты.ПустаяСсылка");
	КонецЕсли;
	УправлениеФормой(ЭтотОбъект);
	ЗаполнитьСпискиВыбора(Истина);
КонецПроцедуры

&НаКлиенте
Процедура БюджетПриИзменении(Элемент)
	УправлениеФормой(ЭтотОбъект);
	ЗаполнитьСпискиВыбора(Истина);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция УправлениеФормой(Форма)
	Элементы = Форма.Элементы;
	Элементы.Бюджет.Видимость = НЕ Форма.Объект.ДляЗагрузкиФактическихИПрогнозныхДанных;	
КонецФункции

&НаСервере
Функция ЗаполнитьСпискиВыбора(Перезаполнять = Ложь)
	СписокПоказателей.Очистить();
	СписокРазрезов.Очистить();
	
	СписокРазрезов.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.ПериодПланирования);
	СписокРазрезов.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта);
	
	Если Объект.ДляЗагрузкиФактическихИПрогнозныхДанных Тогда
		СписокРазрезов.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.ФинансовыйПоказатель);
		СписокРазрезов.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.Контрагент);
		СписокРазрезов.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.Проект);
		СписокРазрезов.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.Номенклатура);
		СписокРазрезов.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение);
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	фин_НастройкаДополнительныхРазрезовБюджетирования.Измерение
			|ИЗ
			|	РегистрСведений.фин_НастройкаДополнительныхРазрезовБюджетирования КАК фин_НастройкаДополнительныхРазрезовБюджетирования";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СписокРазрезов.Добавить(ВыборкаДетальныеЗаписи.Измерение, фин_ОбщегоНазначенияВызовСервераПовтИсп.ПредставлениеРазреза(ВыборкаДетальныеЗаписи.Измерение));
		КонецЦикла;
		
		Если Объект.ИмеетсяРазрезВКолонке Тогда
			СписокПоказателей.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.Количество);
			СписокПоказателей.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма);
			СписокПоказателей.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.СуммаУпр);
		Иначе
			СписокРазрезов.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.Количество);
			СписокРазрезов.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма);
			СписокРазрезов.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.СуммаУпр);
		КонецЕсли;
		
	Иначе
		СписокРазрезов.Добавить(Перечисления.фин_ДополнительныеРазрезыОтчетов.СтатьяБюджета);
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка",Объект.Бюджет);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	фин_БюджетыРазрезыУчета.Измерение
			|ИЗ
			|	Справочник.фин_Бюджеты.РазрезыУчета КАК фин_БюджетыРазрезыУчета
			|ГДЕ
			|	фин_БюджетыРазрезыУчета.Ссылка = &Ссылка";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СписокРазрезов.Добавить(ВыборкаДетальныеЗаписи.Измерение, фин_ОбщегоНазначенияВызовСервераПовтИсп.ПредставлениеРазреза(ВыборкаДетальныеЗаписи.Измерение));
		КонецЦикла;
		Если Объект.ИмеетсяРазрезВКолонке Тогда
			Если Объект.Бюджет.УчетПоКоличеству Тогда
				СписокПоказателей.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.Количество);
			КонецЕсли;
			Если Объект.Бюджет.УчетПоСумме Тогда
				СписокПоказателей.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма);
				СписокПоказателей.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.СуммаУпр);
				Если Объект.Бюджет.УчетПоКоличеству Тогда
					СписокПоказателей.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяЦена);
					СписокПоказателей.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.ЦенаУпр);
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если Объект.Бюджет.УчетПоКоличеству Тогда
				СписокРазрезов.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.Количество);
			КонецЕсли;
			Если Объект.Бюджет.УчетПоСумме Тогда
				СписокРазрезов.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма);
				СписокРазрезов.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.СуммаУпр);
				Если Объект.Бюджет.УчетПоКоличеству Тогда
					СписокРазрезов.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяЦена);
					СписокРазрезов.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.ЦенаУпр);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Перезаполнять Тогда
		СтрокиУдалить = Новый Массив;
		Для Каждого Строка Из Объект.ТрансляцияРазрезов Цикл
			Если СписокРазрезов.НайтиПоЗначению(Строка.Разрез)=Неопределено Тогда
				СтрокиУдалить.Добавить(Строка);
			КонецЕсли;
		КонецЦикла;
		Для Каждого Строка Из СтрокиУдалить Цикл
			Объект.ТрансляцияРазрезов.Удалить(Строка);
		КонецЦикла;
		Для Каждого ЭлементРазрез Из СписокРазрезов Цикл
			Если Объект.ТрансляцияРазрезов.НайтиСтроки(Новый структура("Разрез",ЭлементРазрез.Значение)).Количество()=0 Тогда
				НС = Объект.ТрансляцияРазрезов.Добавить();
				НС.Разрез = ЭлементРазрез.Значение;
				НС.Данные = ?(ЭлементРазрез.Значение=Перечисления.фин_ФактическиеПоказателиБюджетирования.ПериодПланирования ИЛИ ТипЗнч(ЭлементРазрез.Значение)=Тип("ПеречислениеСсылка.фин_РесурсыДанныхБюджетирования"),Перечисления.фин_ВариантыСинхронизацииСправочников.ПустаяСсылка(),Перечисления.фин_ВариантыСинхронизацииСправочников.ПоНаименованию);
				НС.ШиринаПоУмолчанию = ?(ТипЗнч(НС.Разрез)=Тип("ПеречислениеСсылка.фин_РесурсыДанныхБюджетирования"),8,?(НС.Разрез=ПредопределенноеЗначение("Перечисление.фин_ФактическиеПоказателиБюджетирования.ПериодПланирования"),10,?(НС.Разрез=ПредопределенноеЗначение("Перечисление.фин_ФактическиеПоказателиБюджетирования.Валюта"),4,15)));
				НС.Заголовок = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПредставлениеРазреза(НС.Разрез);
			КонецЕсли;
		КонецЦикла;
		СтрокиУдалить = Новый Массив;
		Для Каждого Строка Из Объект.ПоказателиВКолонках Цикл
			Если СписокПоказателей.НайтиПоЗначению(Строка.Разрез)=Неопределено Тогда
				СтрокиУдалить.Добавить(Строка);
			КонецЕсли;
		КонецЦикла;
		Для Каждого Строка Из СтрокиУдалить Цикл
			Объект.ПоказателиВКолонках.Удалить(Строка);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ТрансляцияРазрезовРазрезПриИзменении(Элемент)
	НС = Элементы.ТрансляцияРазрезов.ТекущиеДанные;
	НС.Данные = ?(НС.Разрез=ПредопределенноеЗначение("Перечисление.фин_ФактическиеПоказателиБюджетирования.ПериодПланирования") ИЛИ ТипЗнч(НС.Разрез)=Тип("ПеречислениеСсылка.фин_РесурсыДанныхБюджетирования"),ПредопределенноеЗначение("Перечисление.фин_ВариантыСинхронизацииСправочников.ПустаяСсылка"),ПредопределенноеЗначение("Перечисление.фин_ВариантыСинхронизацииСправочников.ПоНаименованию"));
	НС.ШиринаПоУмолчанию = ?(ТипЗнч(НС.Разрез)=Тип("ПеречислениеСсылка.фин_РесурсыДанныхБюджетирования"),8,?(НС.Разрез=ПредопределенноеЗначение("Перечисление.фин_ФактическиеПоказателиБюджетирования.ПериодПланирования"),10,?(НС.Разрез=ПредопределенноеЗначение("Перечисление.фин_ФактическиеПоказателиБюджетирования.Валюта"),4,15)));
	НС.Заголовок = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПредставлениеРазреза(НС.Разрез);
КонецПроцедуры

&НаКлиенте
Процедура ПоказателиВКолонкахПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элементы.ПоказателиВКолонках.ТекущиеДанные.ШиринаПоУмолчанию = 12;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТрансляцияРазрезовИтогиПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ТрансляцияРазрезов.ТекущиеДанные;
	Если ТекущиеДанные.Итоги = Ложь Тогда
		ТекущиеДанные.ТолькоВИтогах = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИмеетсяРазрезВКолонкеПриИзменении(Элемент)
	ЗаполнитьСпискиВыбора(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПоказателиВКолонкахРазрезПриИзменении(Элемент)
	НС = Элементы.ПоказателиВКолонках.ТекущиеДанные;
	НС.Заголовок = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПредставлениеРазреза(НС.Разрез);
КонецПроцедуры
