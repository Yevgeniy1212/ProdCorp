
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПолеЗапроса.УстановитьТекст(Объект.ТекстЗапроса);
	СписокПараметровДоговора = дог_УправлениеДоговорами.СписокПараметровДоговораДляПроизвольногоПравила();
КонецПроцедуры

&НаКлиенте
Процедура ТекстЗапросаПриИзменении(Элемент)
	Объект.ТекстЗапроса	= ПолеЗапроса.ПолучитьТекст();
	Модифицированность	= Истина;
КонецПроцедуры

&НаКлиенте
Процедура КонструкторЗапроса(Команда)
	Конструктор = Новый КонструкторЗапроса;
	Если СокрЛП(ПолеЗапроса.ПолучитьТекст())<>"" Тогда
		Попытка
			Конструктор.Текст = ПолеЗапроса.ПолучитьТекст();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчкиОписанияОповещения",ЭтаФорма);
	Конструктор.Показать(ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчкиОписанияОповещения(Текст,ДополнительныеПараметры) Экспорт
	Если Текст<>Неопределено Тогда
		Объект.ТекстЗапроса	= Текст;
		ПолеЗапроса.УстановитьТекст(Текст);
		Модифицированность	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПараметрыИзЗапроса(Команда)
	ЗаполнитьПараметрыИзЗапросаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыИзЗапросаНаСервере()
	ТекстЗапроса = ПолеЗапроса.ПолучитьТекст();
	Текст = ТекстЗапроса;
	РазбивающиеСимволы = Новый Массив;
	РазбивающиеСимволы.Добавить(" ");
	РазбивающиеСимволы.Добавить(",");
	РазбивающиеСимволы.Добавить(".");
	РазбивающиеСимволы.Добавить("/");
	РазбивающиеСимволы.Добавить("(");
	РазбивающиеСимволы.Добавить(")");
	РазбивающиеСимволы.Добавить("=");
	РазбивающиеСимволы.Добавить(Символы.ПС);
	РазбивающиеСимволы.Добавить(Символы.Таб);
	Пока Найти(Текст,"&")<>0 Цикл
		Текст = Сред(Текст,Найти(Текст,"&")+1);
		Для Инд=1 По СтрДлина(Текст) Цикл
			Если РазбивающиеСимволы.Найти(Сред(Текст,Инд,1))<>Неопределено Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Объект.ПараметрыЗапроса.НайтиСтроки(Новый Структура("ИмяПараметра",Лев(Текст,Инд-1))).Количество()=0 Тогда
			НовыйПараметр = Объект.ПараметрыЗапроса.Добавить();
			НовыйПараметр.ИмяПараметра = Лев(Текст,Инд-1);
			// попытаемся определить тип параметра
			Попытка
				Построитель = Новый ПостроительОтчета(ТекстЗапроса);
			Исключение
				Продолжить;
			КонецПопытки;
			Построитель.ЗаполнитьНастройки();
			Параметр_Тип = Неопределено;
			Для Каждого РазбивающийСимвол Из РазбивающиеСимволы Цикл
				Если РазбивающийСимвол="." ИЛИ Параметр_Тип <>Неопределено Тогда
					Продолжить;
				КонецЕсли;
				Позиция = Найти(ТекстЗапроса,"&"+НовыйПараметр.ИмяПараметра+РазбивающийСимвол);
				Если Позиция <> 0 Тогда
					ТекстПоиска = Лев(ТекстЗапроса,Позиция-1);
					Слово = "";
					Для Инд = 1 По СтрДлина(ТекстПоиска) Цикл
						Если РазбивающиеСимволы.Найти(Сред(ТекстПоиска,СтрДлина(ТекстПоиска)-Инд+1,1))<>Неопределено Тогда
							Если Слово="" ИЛИ НРег(Слово) = "в" ИЛИ НРег(Слово)="иерархии" Тогда
								Слово = "";
							Иначе
								Попытка
									НовоеПоле = Построитель.ДоступныеПоля.Найти(Слово);
									Если НовоеПоле <> Неопределено Тогда
										Параметр_Тип = НовоеПоле.ТипЗначения;
									ИначеЕсли НРег(Слово) = НРег("СрезПоследних") ИЛИ  НРег(Слово) = НРег("СрезПервых") ИЛИ НРег(Слово) = НРег("Остатки") ИЛИ  НРег(Слово) = НРег("Обороты") ИЛИ  НРег(Слово) = НРег("ОстаткиИОбороты") Тогда
										Параметр_Тип = Новый ОписаниеТипов("Дата");
									Иначе
										х=1;
									КонецЕсли;
									Прервать;
								Исключение
									Прервать;
								КонецПопытки;
							КонецЕсли;
						Иначе
							Слово = Сред(ТекстПоиска,СтрДлина(ТекстПоиска)-Инд+1,1) + Слово;
						КонецЕсли;
					КонецЦикла;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если Параметр_Тип <>Неопределено Тогда
				НовыйПараметр.ЗначениеПараметра = Параметр_Тип.ПривестиЗначение("");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗапросаПараметрДоговораПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ПараметрыЗапроса.ТекущиеДанные;
	Если ТекущиеДанные.ПараметрДоговора Тогда
		ТекущиеДанные.ЗначениеПараметра = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗапросаЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.ПараметрыЗапроса.ТекущиеДанные;
	Если ТекущиеДанные.ПараметрДоговора Тогда
		СтандартнаяОбработка 	= Ложь;
		ДанныеВыбора 			= СписокПараметровДоговора;
	КонецЕсли;
КонецПроцедуры
