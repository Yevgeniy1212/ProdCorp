
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ПравоДоступа("Добавление",Метаданные.Справочники.фин_ВидыДокументов) Тогда
		Сообщить("Для синхронизации необходимы права на добавление новых элементов!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Заполнить();
КонецПроцедуры

//Процедура Заполнить
//
&НаСервере
Процедура Заполнить()
	ТаблицаВидовДокументов = Новый ТаблицаЗначений;
	КС 		= Новый КвалификаторыСтроки(255);
	Массив 	= Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТипов = Новый ОписаниеТипов(Массив, , КС);
	ТаблицаВидовДокументов.Колонки.Добавить("ИмяДокумента",		ОписаниеТипов);
	ТаблицаВидовДокументов.Колонки.Добавить("СинонимДокумента",	ОписаниеТипов);
	Для Каждого Документ Из Метаданные.Документы Цикл
		СтрокаТаблицыВидовДокументов 					= ТаблицаВидовДокументов.Добавить();
		СтрокаТаблицыВидовДокументов.ИмяДокумента 		= Документ.Имя;
		СтрокаТаблицыВидовДокументов.СинонимДокумента 	= Документ.Синоним;
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаВидовДокументов",ТаблицаВидовДокументов);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст="ВЫБРАТЬ *
				|ПОМЕСТИТЬ ВТ_СписокДокументов
				|	ИЗ &ТаблицаВидовДокументов КАК ВТ 
				|;";
	Запрос.Выполнить();
	Запрос.Текст="ВЫБРАТЬ
	             |	ВЫБОР
	             |		КОГДА ВидыДокументов.Ссылка ЕСТЬ NULL 
	             |			ТОГДА ЗНАЧЕНИЕ(Справочник.фин_ВидыДокументов.ПустаяСсылка)
	             |		ИНАЧЕ ВидыДокументов.Ссылка
	             |	КОНЕЦ КАК ЭлементСправочника,
	             |	ВЫБОР
	             |		КОГДА ВТ_СписокДокументов.ИмяДокумента ЕСТЬ NULL 
	             |			ТОГДА """"
	             |		ИНАЧЕ ВТ_СписокДокументов.ИмяДокумента
	             |	КОНЕЦ КАК ИмяДокумента,
	             |	ВЫБОР
	             |		КОГДА ВТ_СписокДокументов.СинонимДокумента ЕСТЬ NULL 
	             |			ТОГДА """"
	             |		ИНАЧЕ ВТ_СписокДокументов.СинонимДокумента
	             |	КОНЕЦ КАК СинонимДокумента,
	             |	ВЫБОР
	             |		КОГДА ВидыДокументов.Ссылка ЕСТЬ NULL 
	             |			ТОГДА ИСТИНА
	             |		ИНАЧЕ ЛОЖЬ
	             |	КОНЕЦ КАК СоздатьЭлемент,
	             |	ВЫБОР
	             |		КОГДА (ВТ_СписокДокументов.ИмяДокумента ЕСТЬ NULL) И НЕ ВидыДокументов.ПометкаУдаления 
	             |			ТОГДА ИСТИНА
	             |		ИНАЧЕ ЛОЖЬ
	             |	КОНЕЦ КАК УдалитьЭлемент,
	             |	ВЫБОР
	             |		КОГДА (НЕ ВТ_СписокДокументов.ИмяДокумента ЕСТЬ NULL )
	             |				И (НЕ ВидыДокументов.Ссылка ЕСТЬ NULL )
	             |				И ВидыДокументов.НаименованиеПолное <> ВТ_СписокДокументов.СинонимДокумента
	             |			ТОГДА ИСТИНА
	             |		ИНАЧЕ ЛОЖЬ
	             |	КОНЕЦ КАК ОбновитьЭлемент
	             |ИЗ
	             |	Справочник.фин_ВидыДокументов КАК ВидыДокументов
	             |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_СписокДокументов КАК ВТ_СписокДокументов
	             |		ПО ВидыДокументов.ПрограммныйИдентификатор = ВТ_СписокДокументов.ИмяДокумента";
	Выборка = Запрос.Выполнить().Выбрать();
	ТаблицаДействий.Очистить();
	Пока Выборка.Следующий() Цикл
		СтрокаДействий = ТаблицаДействий.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДействий,Выборка);
		СтрокаДействий.НетДействий 				= Истина;
		Если СокрЛП(СтрокаДействий.ИмяДокумента) <> "" И ЗначениеЗаполнено(СтрокаДействий.ЭлементСправочника) Тогда
			 мЭлемент = СтрокаДействий.ЭлементСправочника;
		КонецЕсли;
		Если СтрокаДействий.СоздатьЭлемент Тогда
			 СтрокаДействий.Действие = "Создать элемент";
			 СтрокаДействий.НетДействий 				= Ложь;
		КонецЕсли;
		Если СтрокаДействий.УдалитьЭлемент Тогда
			 СтрокаДействий.Действие = ?(СокрЛП(СтрокаДействий.Действие)="","","; ")+"Удалить элемент";
			 СтрокаДействий.ОбновитьЭлемент 			= Ложь;
			 СтрокаДействий.ОчиститьРеквизитКонтроля 	= Ложь;
			 СтрокаДействий.НетДействий 				= Ложь;
		КонецЕсли;
		Если СтрокаДействий.ОбновитьЭлемент Тогда
			 СтрокаДействий.Действие = ?(СокрЛП(СтрокаДействий.Действие)="","","; ")+"Обновить представление";
			 СтрокаДействий.НетДействий 				= Ложь;
		КонецЕсли;
		СтрокаДействий.Применить = НЕ СтрокаДействий.НетДействий; 
		Если СтрокаДействий.НетДействий Тогда
			 ТаблицаДействий.Удалить(СтрокаДействий);
		КонецЕсли;
	КонецЦикла;
	ТаблицаДействий.Сортировать("СинонимДокумента ВОЗР");
КонецПроцедуры //Заполнить


&НаКлиенте
Процедура ТаблицаДействийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВыбраннаяСтрока.Применить = Не ВыбраннаяСтрока.Применить;
КонецПроцедуры


&НаКлиенте
Процедура ВыполнитьСинхронизацию(Команда)
	ВыполнитьНаСервере();
	Закрыть();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьНаСервере()
	Для Каждого СтрокаДействий Из ТаблицаДействий Цикл
		Если СтрокаДействий.НетДействий Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ СтрокаДействий.Применить Тогда
			Продолжить;
		КонецЕсли;
		Если СтрокаДействий.СоздатьЭлемент Тогда
			НовыйЭлемент 	= Справочники.фин_ВидыДокументов.СоздатьЭлемент();
			НовыйЭлемент.Наименование 				= СтрокаДействий.СинонимДокумента;
			НовыйЭлемент.НаименованиеПолное 		= СтрокаДействий.СинонимДокумента;
			НовыйЭлемент.ПрограммныйИдентификатор 	= СтрокаДействий.ИмяДокумента;
			НовыйЭлемент.Записать();
			Продолжить;
		КонецЕсли;
		Если СтрокаДействий.УдалитьЭлемент Тогда
			Элемент 		= СтрокаДействий.ЭлементСправочника.ПолучитьОбъект();
			Элемент.УстановитьПометкуУдаления(Истина);
			Элемент.Записать();
			Продолжить;
		КонецЕсли;
		Если СтрокаДействий.ОбновитьЭлемент Тогда
			Элемент 		= СтрокаДействий.ЭлементСправочника.ПолучитьОбъект();
			Если Элемент.Наименование 				= Элемент.НаименованиеПолное Тогда
				Элемент.Наименование 				= СтрокаДействий.СинонимДокумента;
			КонецЕсли;
			Элемент.НаименованиеПолное 				= СтрокаДействий.СинонимДокумента;
			Элемент.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для Каждого СтрокаТЗ Из ТаблицаДействий Цикл
		СтрокаТЗ.Применить = Истина;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для Каждого СтрокаТЗ Из ТаблицаДействий Цикл
		СтрокаТЗ.Применить = Ложь;
	КонецЦикла;
КонецПроцедуры

