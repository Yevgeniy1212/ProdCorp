
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Разрезы = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПолучитьПолныйСписокРазрезов");
	ЭтоРегистр = ЭтоРегистр();
	БазовыеПараметры.Добавить("ФинансовыйПоказатель","ФинансовыйПоказатель");
	БазовыеПараметры.Добавить("Сумма","Сумма");
	БазовыеПараметры.Добавить("Количество","Количество");
	БазовыеПараметры.Добавить("Валюта","Валюта");
	Для Каждого ЭлементБазовыйПараметр Из БазовыеПараметры Цикл
		ЭтотОбъект[ЭлементБазовыйПараметр.Представление] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(ЭлементБазовыйПараметр.Представление,Объект,ЭтоРегистр);
	КонецЦикла;
	Для Каждого ЭлементРазрез Из Разрезы Цикл
		НовыйЭлемент = ПолныйСписокРазрезов.Добавить(ЭлементРазрез.Значение,фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(ЭлементРазрез.Значение));
		ЭлементФормы = Элементы[НовыйЭлемент.Представление];
		ЭлементФормы.Видимость = Истина;
		ЭлементФормы.РедактированиеТекста = Ложь;
		ЭлементФормы.КнопкаВыбора = Истина;
		ЭлементФормы.КнопкаОткрытия = Истина;
		ЭлементФормы.УстановитьДействие("НачалоВыбора","НачалоВыбораАналитики");
		ЭлементФормы.УстановитьДействие("Открытие","ОткрытиеАналитики");
		ЭлементФормы.Заголовок = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(ЭлементРазрез.Значение);
		ПредставлениеНастройки = фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(НовыйЭлемент.Представление,Объект,ЭтоРегистр);
		ЭлементФормы.ЦветФона = ?(ЗначениеЗаполнено(ПредставлениеНастройки) И Объект[НовыйЭлемент.Представление+"Обязательный"],WebЦвета.АнтикБелый,WebЦвета.Белый);
		ЭтотОбъект[НовыйЭлемент.Представление] = ПредставлениеНастройки;
	КонецЦикла;
	ТаблицаДанных = фин_ОбщегоНазначенияКлиентСервер.ПредставлениеТаблицыДанныхПравила(Объект);
	ОбъектИБ = Справочники.фин_ПравилаОтраженияФактическихДанных.ОбъектИнформационнойБазы(Объект);
	ОпределитьУчетныеПризнакиПоказателя();
	Если Объект.Ссылка.Пустая() Тогда
		ПроверитьЗаполнениеПравил();
		Если ЭтоРегистр И НЕ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			Объект.ВидДанных = Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоДвижениямВРегистрах;
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.Владелец)  Тогда
			ВладелецПриИзмененииНаСервере();
		КонецЕсли;
	КонецЕсли;
	Если Объект.Ссылка.Пустая() И ЗначениеЗаполнено(Объект.Владелец) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(фин_ПравилаОтраженияФактическихДанных.Порядок) КАК Порядок
		|ИЗ
		|	Справочник.фин_ПравилаОтраженияФактическихДанных КАК фин_ПравилаОтраженияФактическихДанных
		|ГДЕ
		|	фин_ПравилаОтраженияФактическихДанных.Владелец = &Владелец";
		
		Запрос.УстановитьПараметр("Владелец", Объект.Владелец);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Объект.Порядок = ?(ВыборкаДетальныеЗаписи.Порядок=Null,1,ВыборкаДетальныеЗаписи.Порядок+1);
		КонецЦикла;
		
	КонецЕсли;
	ПорядокПрименения = фин_ОбщегоНазначенияКлиентСервер.ПредставлениеСпособаИспользованияПравила(Объект);
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Функция ЭтоРегистр()
	Возврат Справочники.фин_ПравилаОтраженияФактическихДанных.ЭтоРегистр(Объект);
КонецФункции

&НаСервере
Процедура ОпределитьУчетныеПризнакиПоказателя()
	СтруктураПризнаковУчетаПоказателя = Новый ФиксированнаяСтруктура(Справочники.фин_ПравилаОтраженияФактическихДанных.СтруктураПризнаковУчетаПоказателя(Объект));
	СтруктураРазрезовУчетаПоказателя = Новый ФиксированнаяСтруктура(Справочники.фин_ПравилаОтраженияФактическихДанных.СтруктураРазрезовУчетаПоказателя(Объект,ЭтотОбъект));
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	Форма.Элементы.Владелец.ТолькоПросмотр = Форма.Объект.ПоФинансовомуПоказателю;
	Форма.Элементы.ФинансовыйПоказатель.ТолькоПросмотр = Форма.Объект.ПоФинансовомуПоказателю;
	Форма.Элементы.ФинансовыйПоказатель.КнопкаВыбора = НЕ Форма.Объект.ПоФинансовомуПоказателю;
	Форма.Элементы.ГруппаСуммаИВалюта.Видимость = Форма.СтруктураПризнаковУчетаПоказателя.Сумма;
	Форма.Элементы.Количество.Видимость 		= Форма.СтруктураПризнаковУчетаПоказателя.Количество;
	Форма.Элементы.ТаблицаДанных.Видимость 		= НЕ (Форма.ЭтоРегистр ИЛИ ТипЗнч(Форма.Объект.Владелец)=Тип("СправочникСсылка.фин_ГруппыПравилОтраженияФактическихДанных"));
	Для Каждого ЭлементРазрез Из Форма.ПолныйСписокРазрезов Цикл
		Форма.Элементы[ЭлементРазрез.Представление].Видимость = Форма.СтруктураРазрезовУчетаПоказателя.Свойство(ЭлементРазрез.Представление);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытиеАналитики(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ИмяЭлемента = Элемент.Имя;
	Попытка
		ПоказатьЗначение(,Объект[ИмяЭлемента+"Источник"]);
	Исключение
		
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	ВладелецПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииНаСервере()
	ЭтоРегистр 	= ЭтоРегистр();
	ОбъектИБ 	= Справочники.фин_ПравилаОтраженияФактическихДанных.ОбъектИнформационнойБазы(Объект);
	Если ЗначениеЗаполнено(Объект.Владелец) И ТипЗнч(Объект.Владелец)=Тип("СправочникСсылка.фин_ГруппыПравилОтраженияФактическихДанных") Тогда
		Объект.ПредставлениеИсточника	= Объект.Владелец.ПредставлениеИсточника;
		Объект.ИмяИсточника				= Объект.Владелец.ИмяИсточника;
		Объект.ВидДанных				= Объект.Владелец.ВидДанных;
	КонецЕсли;
	Если ЭтоРегистр Тогда
		Объект.ПредставлениеИсточника	= "";
		Объект.ИмяИсточника				= "";
		Объект.ВидДанных				= Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоДвижениямВРегистрах;
	КонецЕсли;
	Объект.ПоФинансовомуПоказателю = ТипЗнч(Объект.Владелец)=Тип("СправочникСсылка.фин_ВидыДокументов") ИЛИ ТипЗнч(Объект.Владелец)=Тип("СправочникСсылка.фин_КлассификаторРегистров");
	Если Объект.ПоФинансовомуПоказателю Тогда
		Объект.ФинансовыйПоказательТипИсточника = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ФиксированноеЗначение;
	КонецЕсли;
	ПроверитьЗаполнениеПравил();
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗаполнениеПравил()
	Справочники.фин_ПравилаОтраженияФактическихДанных.КорректироватьЗаполнениеПравил(Объект,ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораАналитики(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если НЕ ЭтоРегистр Тогда
		Если НЕ ЗначениеЗаполнено(Объект.ВидДанных) Тогда
			ПоказатьПредупреждение(,"Не указан вид данных");
			Возврат;	
		ИначеЕсли Объект.ВидДанных<>ПредопределенноеЗначение("Перечисление.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоШапкеДокумента") И НЕ ЗначениеЗаполнено(Объект.ИмяИсточника) Тогда
			ПоказатьПредупреждение(,"Не указана таблица источника");
			Возврат;	
		КонецЕсли;
	КонецЕсли;
	ИмяЭлемента = Элемент.Имя;
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = Новый Структура("Поле,ТипИсточника,Источник,ВладелецНастроек,ВидДанных,ИмяИсточника,ЭтоРегистр,ТолькоПросмотр,ФинансовыйПоказатель",ИмяЭлемента,Объект[ИмяЭлемента+"ТипИсточника"],Объект[ИмяЭлемента+"Источник"],Объект.Владелец,Объект.ВидДанных,Объект.ИмяИсточника,ЭтоРегистр,ТолькоПросмотр,Объект.ФинансовыйПоказательИсточник);
	Если БазовыеПараметры.НайтиПоЗначению(ИмяЭлемента)=Неопределено Тогда
		СтруктураПараметров.Вставить("Обязательный",Объект[ИмяЭлемента+"Обязательный"]);
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОписаниеОповещенияВыбораАналитики",ЭтотОбъект,ИмяЭлемента);
	ОткрытьФорму("Справочник.фин_ПравилаОтраженияФактическихДанных.Форма.ФормаНастройкиПравила",СтруктураПараметров,ЭтотОбъект,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеОповещенияВыбораАналитики(ДанныеВыбора, ИмяЭлемента) Экспорт
	Если ДанныеВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Объект[ИмяЭлемента+"ТипИсточника"] 	= ДанныеВыбора.ТипИсточника;
	Объект[ИмяЭлемента+"Источник"] 		= ДанныеВыбора.Источник;
	Если БазовыеПараметры.НайтиПоЗначению(ИмяЭлемента)=Неопределено Тогда
		Объект[ИмяЭлемента+"Обязательный"] 	= ДанныеВыбора.Обязательный;
	КонецЕсли;
	ПредставлениеНастройки = фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(ИмяЭлемента,Объект,ЭтоРегистр);
	Элементы[ИмяЭлемента].ЦветФона = ?(ЗначениеЗаполнено(ПредставлениеНастройки) И БазовыеПараметры.НайтиПоЗначению(ИмяЭлемента)=Неопределено И Объект[ИмяЭлемента+"Обязательный"],WebЦвета.АнтикБелый,WebЦвета.Белый);
	ЭтотОбъект[ИмяЭлемента] = ПредставлениеНастройки;
	Модифицированность=Истина;
	Если ИмяЭлемента = "ФинансовыйПоказатель" Тогда
		ПриИзмененииФинансовогоПоказателяНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииФинансовогоПоказателяНаСервере()
	ОпределитьУчетныеПризнакиПоказателя();
	Справочники.фин_ПравилаОтраженияФактическихДанных.КорректироватьЗаполнениеПравил(Объект,ЭтотОбъект);
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры



&НаКлиенте
Процедура ТаблицаДанныхНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОписаниеОповещенияТаблицаДанных",ЭтотОбъект);
	ПараметрыФормы = Новый Структура("ВидДанных,ИмяИсточника,ПредставлениеИсточника");
	ЗаполнитьЗначенияСвойств(ПараметрыФормы,Объект);
	ПараметрыФормы.Вставить("ОбъектИБ",ОбъектИБ);
	ПараметрыФормы.Вставить("ТолькоПросмотр",ТолькоПросмотр);
	ОткрытьФорму("Справочник.фин_ГруппыПравилОтраженияФактическихДанных.Форма.НастройкаТаблицыДанных",ПараметрыФормы,ЭтотОбъект,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры


&НаКлиенте
Процедура ОписаниеОповещенияТаблицаДанных(Результат, ДополнительныеПараметры) Экспорт
	Если Результат<>Неопределено Тогда
		Если Объект.ВидДанных<>Результат.ВидДанных ИЛИ Объект.ИмяИсточника<>Результат.ИмяИсточника Тогда
			Объект.Условие=ПредопределенноеЗначение("Справочник.усд_УсловияВыполненияОперацийПоСтрокамДокумента.ПустаяСсылка");
			ПорядокПрименения = фин_ОбщегоНазначенияКлиентСервер.ПредставлениеСпособаИспользованияПравила(Объект);
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Объект,Результат);
		ТаблицаДанных = фин_ОбщегоНазначенияКлиентСервер.ПредставлениеТаблицыДанныхПравила(Объект);
		Модифицированность=Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ЗаписьПравила",Новый Структура("Объект,Наименование,Владелец,ОбъектИБ",Объект.Ссылка,Объект.Наименование,Объект.Владелец,ОбъектИБ));
КонецПроцедуры


&НаКлиенте
Процедура ПорядокПримененияНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОписаниеОповещенияПорядокПрименения",ЭтотОбъект);
	ПараметрыФормы = Новый Структура("ВидДанных,ИмяИсточника,СпособИспользования,Условие,Порядок");
	ЗаполнитьЗначенияСвойств(ПараметрыФормы,Объект);
	ПараметрыФормы.Вставить("ОбъектИБ",ОбъектИБ);
	ПараметрыФормы.Вставить("ТолькоПросмотр",ТолькоПросмотр);
	ОткрытьФорму("Справочник.фин_ГруппыПравилОтраженияФактическихДанных.Форма.НастройкаОграниченияИспользования",ПараметрыФормы,ЭтотОбъект,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеОповещенияПорядокПрименения(Результат, ДополнительныеПараметры) Экспорт
	Если Результат<>Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Объект,Результат);
		Модифицированность=Истина;
		ПорядокПрименения = фин_ОбщегоНазначенияКлиентСервер.ПредставлениеСпособаИспользованияПравила(Объект);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	Модифицированность=Истина;
	ОбъектМетаданных = Справочники.фин_ПравилаОтраженияФактическихДанных.ОбъектМетаданных(ОбъектИБ);
	Если Объект.ВидДанных = Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоШапкеДокумента Тогда
		Документ = ОбъектМетаданных;
		Если Документ <> Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ДополнительныеРеквизитыДокументовДляБюджетирования.РеквизитДокумента
			|ИЗ
			|	РегистрСведений.фин_ДополнительныеРеквизитыДокументовДляБюджетирования КАК ДополнительныеРеквизитыДокументовДляБюджетирования
			|ГДЕ
			|	ДополнительныеРеквизитыДокументовДляБюджетирования.ВидДокументов = &ВидДокументов";
			Запрос.УстановитьПараметр("ВидДокументов",ОбъектИБ);
			Выборка = Запрос.Выполнить().Выбрать();
			Для Каждого ИзмерениеЭлемент Из СтруктураРазрезовУчетаПоказателя Цикл
				Измерение = ИзмерениеЭлемент.Ключ;
				НадлежащийТип 	= Новый Массив;
				ИмяСправочника 	= Новый Массив;
				фин_ПроцедурыМеханизмовБюджетирования.УстановитьНадлежащийТип(Измерение,ИмяСправочника,НадлежащийТип);
				Найден = Ложь;
				Для Каждого Реквизит Из Документ.Реквизиты Цикл
					Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) И Найти(Реквизит.Имя,"Субконто")=0 Тогда
						Объект[Измерение+"ТипИсточника"] 	= Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
						Объект[Измерение+"Источник"] 		= Реквизит.Имя;
						ЭтотОбъект[Измерение] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Измерение,Объект,ЭтоРегистр);
						Найден = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если Не Найден Тогда
					Выборка.Сбросить();
					Пока Выборка.Следующий() Цикл
						Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Выборка.РеквизитДокумента.ТипЗначения,НадлежащийТип) Тогда
							Объект[Измерение+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ДополнительныеРеквизитыБюджетирования;
							Объект[Измерение+"Источник"] 	= Выборка.РеквизитДокумента;
							ЭтотОбъект[Измерение] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Измерение,Объект,ЭтоРегистр);
							Найден = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если Не Найден Тогда
					Объект[Измерение+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
					Объект[Измерение+"Источник"] = "";
					ЭтотОбъект[Измерение] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Измерение,Объект,ЭтоРегистр);
				КонецЕсли;
			КонецЦикла;
			Для Каждого ПоказательЭлемент Из СтруктураПризнаковУчетаПоказателя Цикл
				Показатель = ПоказательЭлемент.Ключ;
				НадлежащийТип 	= Новый Массив;
				ИмяСправочника 	= Новый Массив;
				фин_ПроцедурыМеханизмовБюджетирования.УстановитьНадлежащийТип(Показатель,ИмяСправочника,НадлежащийТип);
				Найден = Ложь;
				Реквизит = Документ.Реквизиты.Найти(Показатель);
				Если Реквизит <> Неопределено И фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) Тогда
					Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
					Объект[Показатель+"Источник"] 	= Реквизит.Имя;
					ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
					Найден = Истина;
					Прервать;
				КонецЕсли;
				Если Не Найден Тогда
					Для Каждого Реквизит Из Документ.Реквизиты Цикл
						Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) И Найти(Реквизит.Имя,"Субконто")=0 Тогда
							Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
							Объект[Показатель+"Источник"] 	= Реквизит.Имя;
							ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
							Найден = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если Не Найден Тогда
					Выборка.Сбросить();
					Пока Выборка.Следующий() Цикл
						Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Выборка.РеквизитДокумента.ТипЗначения,НадлежащийТип) Тогда
							Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ДополнительныеРеквизитыБюджетирования;
							Объект[Показатель+"Источник"] 	= Выборка.РеквизитДокумента;
							ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
							Найден = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если Не Найден Тогда
					Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
					Объект[Показатель+"Источник"] = "";
					ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли Объект.ВидДанных = Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоТабличнойЧасти Тогда
		Если Объект.ИмяИсточника = "" Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрана табличная часть!");
			Возврат;
		КонецЕсли;
		Документ = ОбъектМетаданных;
		Если Документ <> Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ДополнительныеРеквизитыДокументовДляБюджетирования.РеквизитДокумента
			|ИЗ
			|	РегистрСведений.фин_ДополнительныеРеквизитыДокументовДляБюджетирования КАК ДополнительныеРеквизитыДокументовДляБюджетирования
			|ГДЕ
			|	ДополнительныеРеквизитыДокументовДляБюджетирования.ВидДокументов = &ВидДокументов";
			Запрос.УстановитьПараметр("ВидДокументов",ОбъектИБ);
			Выборка = Запрос.Выполнить().Выбрать();
			Для Каждого ИзмерениеЭлемент Из СтруктураРазрезовУчетаПоказателя Цикл
				Измерение = ИзмерениеЭлемент.Ключ;
				НадлежащийТип 	= Новый Массив;
				ИмяСправочника 	= Новый Массив;
				фин_ПроцедурыМеханизмовБюджетирования.УстановитьНадлежащийТип(Измерение,ИмяСправочника,НадлежащийТип);
				Найден = Ложь;
				Для Каждого Реквизит Из Документ.ТабличныеЧасти[Объект.ИмяИсточника].Реквизиты Цикл
					Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) И Найти(Реквизит.Имя,"Субконто")=0 Тогда
						Объект[Измерение+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ТабличнаяЧастьДвижения;
						Объект[Измерение+"Источник"] 	= Объект.ИмяИсточника+":"+Реквизит.Имя;
						ЭтотОбъект[Измерение] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Измерение,Объект,ЭтоРегистр);
						Найден = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если Не Найден Тогда
					Для Каждого Реквизит Из Документ.Реквизиты Цикл
						Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) И Найти(Реквизит.Имя,"Субконто")=0 Тогда
							Объект[Измерение+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
							Объект[Измерение+"Источник"] 	= Реквизит.Имя;
							ЭтотОбъект[Измерение] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Измерение,Объект,ЭтоРегистр);
							Найден = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;	
				Если Не Найден Тогда
					Выборка.Сбросить();
					Пока Выборка.Следующий() Цикл
						Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Выборка.РеквизитДокумента.ТипЗначения,НадлежащийТип) Тогда
							Объект[Измерение+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ДополнительныеРеквизитыБюджетирования;
							Объект[Измерение+"Источник"] 	= Выборка.РеквизитДокумента;
							ЭтотОбъект[Измерение] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Измерение,Объект,ЭтоРегистр);
							Найден = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если Не Найден Тогда
					Объект[Измерение+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
					Объект[Измерение+"Источник"] = "";
					ЭтотОбъект[Измерение] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Измерение,Объект,ЭтоРегистр);
				КонецЕсли;
			КонецЦикла;
			Для Каждого ПоказательЭлемент Из СтруктураПризнаковУчетаПоказателя Цикл
				Показатель = ПоказательЭлемент.Ключ;
				НадлежащийТип 	= Новый Массив;
				ИмяСправочника 	= Новый Массив;
				фин_ПроцедурыМеханизмовБюджетирования.УстановитьНадлежащийТип(Показатель,ИмяСправочника,НадлежащийТип);
				Найден = Ложь;
				Реквизит = Документ.ТабличныеЧасти[Объект.ИмяИсточника].Реквизиты.Найти(Показатель);
				Если Реквизит <> Неопределено И фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) Тогда
					Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ТабличнаяЧастьДвижения;
					Объект[Показатель+"Источник"] 	= Объект.ИмяИсточника+":"+Реквизит.Имя;
					ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
					Найден = Истина;
				КонецЕсли;
				Если Не Найден Тогда
					Для Каждого Реквизит Из Документ.ТабличныеЧасти[Объект.ИмяИсточника].Реквизиты Цикл
						Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) И Найти(Реквизит.Имя,"Субконто")=0  Тогда
							Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ТабличнаяЧастьДвижения;
							Объект[Показатель+"Источник"] 	= Объект.ИмяИсточника+":"+Реквизит.Имя;
							ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
							Найден = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если Не Найден Тогда
					Реквизит = Документ.Реквизиты.Найти(Показатель);
					Если Реквизит <> Неопределено И фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) Тогда
						Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
						Объект[Показатель+"Источник"] 	= Реквизит.Имя;
						ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
						Найден = Истина;
					КонецЕсли;
				КонецЕсли;	
				Если Не Найден Тогда
					Для Каждого Реквизит Из Документ.Реквизиты Цикл
						Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) И Найти(Реквизит.Имя,"Субконто")=0  Тогда
							Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
							Объект[Показатель+"Источник"] 	= Реквизит.Имя;
							ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
							Найден = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если Не Найден Тогда
					Выборка.Сбросить();
					Пока Выборка.Следующий() Цикл
						Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Выборка.РеквизитДокумента.ТипЗначения,НадлежащийТип) Тогда
							Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ДополнительныеРеквизитыБюджетирования;
							Объект[Показатель+"Источник"] 	= Выборка.РеквизитДокумента;
							ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
							Найден = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если Не Найден Тогда
					Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
					Объект[Показатель+"Источник"] = "";
					ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли Объект.ВидДанных = Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоДвижениямВРегистрах Тогда
		Если Объект.ИмяИсточника = "" Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран набор движений!");
			Возврат;
		КонецЕсли;
		Документ = ОбъектМетаданных;
		Если Документ <> Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ДополнительныеРеквизитыДокументовДляБюджетирования.РеквизитДокумента
			|ИЗ
			|	РегистрСведений.фин_ДополнительныеРеквизитыДокументовДляБюджетирования КАК ДополнительныеРеквизитыДокументовДляБюджетирования
			|ГДЕ
			|	ДополнительныеРеквизитыДокументовДляБюджетирования.ВидДокументов = &ВидДокументов";
			Запрос.УстановитьПараметр("ВидДокументов",Объект.Владелец);
			Выборка = Запрос.Выполнить().Выбрать();
			Если ЭтоРегистр Тогда
				ОбъектПоиска = ОбъектМетаданных;
			Иначе
				ИмяРегистра = Сред(Объект.ИмяИсточника,Найти(Объект.ИмяИсточника,".")+1);
				ОбъектПоиска = Метаданные["Регистры"+?(Найти(Объект.ИмяИсточника,"Сведений.")<>0,"Сведений",?(Найти(Объект.ИмяИсточника,"Накопления.")<>0,"Накопления",?(Найти(Объект.ИмяИсточника,"Бухгалтерии.")<>0,"Бухгалтерии","Расчета")))].Найти(ИмяРегистра);
			КонецЕсли;
			Для Каждого ИзмерениеЭлемент Из СтруктураРазрезовУчетаПоказателя Цикл
				Измерение = ИзмерениеЭлемент.Ключ;
				НадлежащийТип 	= Новый Массив;
				ИмяСправочника 	= Новый Массив;
				фин_ПроцедурыМеханизмовБюджетирования.УстановитьНадлежащийТип(Измерение,ИмяСправочника,НадлежащийТип);
				Найден = Ложь;
				
				Если ОбъектПоиска <> Неопределено Тогда
					Для Каждого Реквизит Из ОбъектПоиска.Измерения Цикл
						Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) И Найти(Реквизит.Имя,"Субконто")=0  Тогда
							Объект[Измерение+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ТабличнаяЧастьДвижения;
							Объект[Измерение+"Источник"] 	= Реквизит.Имя;
							ЭтотОбъект[Измерение] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Измерение,Объект,ЭтоРегистр);
							Найден = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					Если Не Найден Тогда
						Для Каждого Реквизит Из ОбъектПоиска.Ресурсы Цикл
							Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) И Найти(Реквизит.Имя,"Субконто")=0  Тогда
								Объект[Измерение+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ТабличнаяЧастьДвижения;
								Объект[Измерение+"Источник"] 	= Реквизит.Имя;
								ЭтотОбъект[Измерение] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Измерение,Объект,ЭтоРегистр);
								Найден = Истина;
								Прервать;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					Если Не Найден Тогда
						Для Каждого Реквизит Из ОбъектПоиска.Реквизиты Цикл
							Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) И Найти(Реквизит.Имя,"Субконто")=0  Тогда
								Объект[Измерение+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ТабличнаяЧастьДвижения;
								Объект[Измерение+"Источник"] 	= Реквизит.Имя;
								ЭтотОбъект[Измерение] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Измерение,Объект,ЭтоРегистр);
								Найден = Истина;
								Прервать;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				
				Если Не Найден Тогда
					Для Каждого Реквизит Из Документ.Реквизиты Цикл
						Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) И Найти(Реквизит.Имя,"Субконто")=0  Тогда
							Объект[Измерение+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
							Объект[Измерение+"Источник"] 	= Реквизит.Имя;
							ЭтотОбъект[Измерение] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Измерение,Объект,ЭтоРегистр);
							Найден = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;	
				Если Не Найден Тогда
					Выборка.Сбросить();
					Пока Выборка.Следующий() Цикл
						Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Выборка.РеквизитДокумента.ТипЗначения,НадлежащийТип) Тогда
							Объект[Измерение+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ДополнительныеРеквизитыБюджетирования;
							Объект[Измерение+"Источник"] 	= Выборка.РеквизитДокумента;
							ЭтотОбъект[Измерение] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Измерение,Объект,ЭтоРегистр);
							Найден = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если Не Найден Тогда
					Объект[Измерение+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
					Объект[Измерение+"Источник"] = "";
					ЭтотОбъект[Измерение] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Измерение,Объект,ЭтоРегистр);
				КонецЕсли;
			КонецЦикла;
			Для Каждого текПоказатель Из СтруктураПризнаковУчетаПоказателя Цикл
				Показатель = текПоказатель.Ключ;
				НадлежащийТип 	= Новый Массив;
				ИмяСправочника 	= Новый Массив;
				фин_ПроцедурыМеханизмовБюджетирования.УстановитьНадлежащийТип(Показатель,ИмяСправочника,НадлежащийТип);
				Найден = Ложь;
				Если ОбъектПоиска <> Неопределено Тогда
					Реквизит = ОбъектПоиска.Ресурсы.Найти(Показатель);
					Если Реквизит <> Неопределено И фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) Тогда
						Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ТабличнаяЧастьДвижения;
						Объект[Показатель+"Источник"] 	= Реквизит.Имя;
						ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
						Найден = Истина;
					КонецЕсли;
					Если Не Найден Тогда
						Реквизит = ОбъектПоиска.Реквизиты.Найти(Показатель);
						Если Реквизит <> Неопределено И фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) Тогда
							Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ТабличнаяЧастьДвижения;
							Объект[Показатель+"Источник"] 	= Реквизит.Имя;
							ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
							Найден = Истина;
						КонецЕсли;
					КонецЕсли;
					Если Не Найден Тогда
						Для Каждого Реквизит Из ОбъектПоиска.Измерения Цикл
							Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) И Найти(Реквизит.Имя,"Субконто")=0  Тогда
								Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ТабличнаяЧастьДвижения;
								Объект[Показатель+"Источник"] 	= Реквизит.Имя;
								ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
								Найден = Истина;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						Если Не Найден Тогда
							Для Каждого Реквизит Из ОбъектПоиска.Ресурсы Цикл
								Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) И Найти(Реквизит.Имя,"Субконто")=0  Тогда
									Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ТабличнаяЧастьДвижения;
									Объект[Показатель+"Источник"] 	= Реквизит.Имя;
									ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
									Найден = Истина;
									Прервать;
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
						Если Не Найден Тогда
							Для Каждого Реквизит Из ОбъектПоиска.Реквизиты Цикл
								Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) И Найти(Реквизит.Имя,"Субконто")=0  Тогда
									Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ТабличнаяЧастьДвижения;
									Объект[Показатель+"Источник"] 	= Реквизит.Имя;
									ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
									Найден = Истина;
									Прервать;
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				Если Не Найден Тогда
					Реквизит = Документ.Реквизиты.Найти(Показатель);
					Если Реквизит <> Неопределено И фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) Тогда
						Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
						Объект[Показатель+"Источник"] 	= Реквизит.Имя;
						ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
						Найден = Истина;
					КонецЕсли;
				КонецЕсли;	
				Если Не Найден Тогда
					Для Каждого Реквизит Из Документ.Реквизиты Цикл
						Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Реквизит.Тип,НадлежащийТип) И Найти(Реквизит.Имя,"Субконто")=0  Тогда
							Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
							Объект[Показатель+"Источник"] 	= Реквизит.Имя;
							ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
							Найден = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если Не Найден Тогда
					Выборка.Сбросить();
					Пока Выборка.Следующий() Цикл
						Если фин_РаботаСДополнительнымиРазрезамиБюджетирования.РеквизитСодержитТип(Выборка.РеквизитДокумента.ТипЗначения,НадлежащийТип) Тогда
							Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ДополнительныеРеквизитыБюджетирования;
							Объект[Показатель+"Источник"] 	= Выборка.РеквизитДокумента;
							ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
							Найден = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если Не Найден Тогда
					Объект[Показатель+"ТипИсточника"] = Перечисления.фин_ТипыИсточниковОтраженияПервичныхДвижений.ШапкаДокумента;
					Объект[Показатель+"Источник"] = "";
					ЭтотОбъект[Показатель] 	= фин_ОбщегоНазначенияКлиентСервер.ПолучитьПредставлениеПолученияФактическихДанных(Показатель,Объект,ЭтоРегистр);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ФинансовыйПоказательИсточник) И ТипЗнч(Объект.ФинансовыйПоказательИсточник)=Тип("СправочникСсылка.фин_ФинансовыеПоказатели") Тогда
		Если НЕ Объект.ФинансовыйПоказательИсточник.УчетПоКоличеству Тогда
			Объект.КоличествоИсточник = Неопределено;
		КонецЕсли;
		Если НЕ Объект.ФинансовыйПоказательИсточник.УчетПоСумме Тогда
			Объект.СуммаИсточник = Неопределено;
			Объект.ВалютаИсточник = Неопределено;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры
