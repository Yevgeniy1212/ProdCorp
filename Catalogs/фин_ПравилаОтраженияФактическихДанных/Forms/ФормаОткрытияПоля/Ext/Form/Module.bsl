
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекстПоле = "";
	Если НЕ Параметры.Свойство("ИмяПоля",ТекстПоле) Тогда
		Отказ = Истина
	Иначе
		Если Найти(ТекстПоле,"{")<>0 Тогда
			ИмяПоля = Лев(ТекстПоле,Найти(ТекстПоле,"{")-1);
			ОписаниеТипа = Сред(ТекстПоле,Найти(ТекстПоле,"{")+1);
			ОписаниеТипа = Лев(ОписаниеТипа,СтрДлина(ОписаниеТипа)-1);
			Типизатор = Новый (Тип(ОписаниеТипа));
			ПредставлениеТипа = Строка(ТипЗнч(Типизатор));
		Иначе
			ИмяПоля = ТекстПоле;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТипизаторПриИзменении(Элемент)
	ПредставлениеТипа = Строка(ТипЗнч(Типизатор));
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	Закрыть(ИмяПоля+"{"+СтроковеПредставлениеТипа()+"}");
КонецПроцедуры

&НаСервере
Функция СтроковеПредставлениеТипа()
	ИмяТаблицы = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ОпределитьТаблицуПоТипу(ТипЗнч(Типизатор));
	Возврат СтрЗаменить(ИмяТаблицы,".","Ссылка.");
КонецФункции

&НаКлиенте
Процедура ТипизаторНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Типизатор = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ТипизаторОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТипЗнч(ВыбранноеЗначение)=Тип("Тип") Тогда
		Типизатор = Новый (ВыбранноеЗначение);
		ПредставлениеТипа = Строка(ТипЗнч(Типизатор));
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры
