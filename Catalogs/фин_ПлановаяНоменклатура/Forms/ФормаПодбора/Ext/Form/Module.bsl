
&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть(КодВозвратаДиалога.OK);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
		
	Если ФормаЗакрыта Тогда
		Возврат;
	КонецЕсли;

	Если НЕ ФормаЗакрыта И Не ПеренестиВДокумент И ПодобраннаяНоменклатура.Количество() > 0 Тогда

		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("Отказ", Отказ);
		ТекстВопроса = НСтр("ru = 'Подобранные товары не перенесены в документ.
			|
			|Перенести?'");
		Режим = РежимДиалогаВопрос.ДаНетОтмена;	
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаПеренестиТовары", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
		
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;

	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаПеренестиТовары(Результат, Параметры) Экспорт

		Если Результат = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
			ПеренестиВДокумент = Истина;
			ФормаЗакрыта       = Истина;
			Закрыть();
		ИначеЕсли  Результат = КодВозвратаДиалога.Нет Тогда
			ФормаЗакрыта = Истина;
			Закрыть();
		КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	СтруктураВозврата = ПриЗакрытииНаСервере();

	Если ПеренестиВДокумент Тогда
		ОповеститьОВыборе(СтруктураВозврата);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПриЗакрытииНаСервере()

	СтруктураВозврата = Новый Структура();

	//ПараметрыЗакрытия = Новый Структура;
	//ПараметрыЗакрытия.Вставить("ЗапрашиватьКоличество"    , ЗапрашиватьКоличество);
	//ПараметрыЗакрытия.Вставить("ЗапрашиватьЦену"          , ЗапрашиватьЦену);
	//ПараметрыЗакрытия.Вставить("ПоказыватьТолькоОстатки"  , ПоказыватьТолькоОстатки);
	//ПараметрыЗакрытия.Вставить("СчетОстатков"             , СчетОстатков);  
	//ПараметрыЗакрытия.Вставить("СписокВидовПодбора"       , СписокВидовПодбора);
	
	//ПараметрыЗакрытияОбщие = Новый Структура;
	//ПараметрыЗакрытияОбщие.Вставить("ИсторияПоискаНоменклатуры", Элементы.СтрокаПоиска.СписокВыбора.ВыгрузитьЗначения());
	//ПараметрыЗакрытияОбщие.Вставить("ВидПоиска"                , Элементы.СтрокаПоиска.СписокВыбора.ВыгрузитьЗначения());
	//ПараметрыЗакрытияОбщие.Вставить("НоменклатурнаяГруппа"     , Элементы.СтрокаПоиска.СписокВыбора.ВыгрузитьЗначения());
	
	//НаименованиеНастроек = "ПодборНоменклатуры" + ИмяОбъекта + ИмяТаблицы;
	//ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(НаименованиеНастроек, , ПараметрыЗакрытия);
	//ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ПодборНоменклатуры", , ПараметрыЗакрытияОбщие);

	Если ПеренестиВДокумент Тогда
		АдресПодобраннойНоменклатурыВХранилище = ПоместитьПодобраннуюНоменклатуруВХранилище();
		СтруктураВозврата.Вставить("АдресПодобраннойНоменклатурыВХранилище", АдресПодобраннойНоменклатурыВХранилище);
	КонецЕсли;
	
	Возврат СтруктураВозврата;

КонецФункции

&НаСервере
Функция ПоместитьПодобраннуюНоменклатуруВХранилище()

	ТаблицаНоменклатуры = ПодобраннаяНоменклатура.Выгрузить();

	АдресПодобраннойНоменклатурыВХранилище = ПоместитьВоВременноеХранилище(ТаблицаНоменклатуры, УникальныйИдентификатор);

	Возврат АдресПодобраннойНоменклатурыВХранилище;

КонецФункции

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		СтруктураПараметрыНоменклатуры = Новый Структура;
		СтруктураПараметрыНоменклатуры.Вставить("Номенклатура"    , Элемент.ТекущиеДанные.Ссылка);
		СтруктураПараметрыНоменклатуры.Вставить("ЕдиницаИзмерения", Элемент.ТекущиеДанные.БазоваяЕдиницаИзмерения);
		
		Если ЗапрашиватьКоличество И ЕстьКоличество Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Номенклатура"    , СтруктураПараметрыНоменклатуры.Номенклатура);
			ПараметрыФормы.Вставить("Количество"      , 1);
			ПараметрыФормы.Вставить("ЕдиницаИзмерения", СтруктураПараметрыНоменклатуры.ЕдиницаИзмерения);
			ПараметрыФормы.Вставить("ЕстьКоличество"  , ЗапрашиватьКоличество И ЕстьКоличество);
			Если СтруктураПараметрыНоменклатуры.Свойство("Спецификация") Тогда
				ПараметрыФормы.Вставить("Спецификация", СтруктураПараметрыНоменклатуры.Спецификация);
			КонецЕсли;
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьВыбраннуюНоменклатуруПродолжение", ЭтотОбъект);
			ОткрытьФорму("Обработка.ПодборНоменклатуры.Форма.ВводПараметров", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения);
		Иначе
			ДобавитьВыбраннуюНоменклатуру(СтруктураПараметрыНоменклатуры, 1);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВыбраннуюНоменклатуру(ПараметрыНоменклатуры, Количество, ВыбратьВсе = Ложь) Экспорт

	Если ПараметрыНоменклатуры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыНоменклатуры.Свойство("Количество") Тогда
		Количество = ПараметрыНоменклатуры.Количество;
	КонецЕсли;

	ПараметрыПоиска = Новый Структура("Номенклатура", ПараметрыНоменклатуры.Номенклатура);
	
	РезультатПоиска = ПодобраннаяНоменклатура.НайтиСтроки(ПараметрыПоиска);
	Если РезультатПоиска.Количество() = 0 Тогда
		ТекущаяСтрока = ПодобраннаяНоменклатура.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ПараметрыНоменклатуры);
		ТекущаяСтрока.Количество = Количество;
	Иначе
		ТекущаяСтрока            = РезультатПоиска[0];
		ТекущаяСтрока.Количество = Количество + ТекущаяСтрока.Количество;
	КонецЕсли;

	// Активизируем текущую строку табличной части
	Элементы.ПодобраннаяНоменклатура.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЕстьКоличество			= Истина;
	ПоказыватьТолькоОстатки	= Ложь;
	
	СписокСвойств = "Заголовок, Товар, Услуги, ИмяТаблицы";
		
	СписокСвойств = СписокСвойств + ?(Параметры.Свойство("ЕстьКоличество"), ", ЕстьКоличество", "");
	
	ИмяОбъекта = ?(Параметры.Свойство("ОбъектСсылка"), Параметры.ОбъектСсылка.Метаданные().Имя, "");
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, СписокСвойств);
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
		Заголовок     = Параметры.Заголовок;
		АвтоЗаголовок = Ложь;
	КонецЕсли;
	
	//УправлениеФормой(ЭтотОбъект, Истина);
	
КонецПроцедуры
