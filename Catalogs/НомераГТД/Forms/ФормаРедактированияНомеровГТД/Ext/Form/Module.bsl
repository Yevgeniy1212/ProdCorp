
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Если помещаемое значение не привязать к уникальному идентификатору, то со временем оно будет удалено.
	ТаблицаТовары = ПолучитьИзВременногоХранилища(Параметры.АдресТовары);
	КопияТаблицыТовары = ТаблицаТовары.Скопировать();
	АдресТовары = ПоместитьВоВременноеХранилище(КопияТаблицыТовары, ЭтаФорма.УникальныйИдентификатор);
	
	// Если помещаемое значение не привязать к уникальному идентификатору, то со временем оно будет удалено.
	ТаблицаНомераГТД = ПолучитьИзВременногоХранилища(Параметры.АдресНомераГТД);
	КопияТаблицыНомераГТД = ТаблицаНомераГТД.Скопировать();
	АдресНомераГТД = ПоместитьВоВременноеХранилище(КопияТаблицыНомераГТД, ЭтаФорма.УникальныйИдентификатор);
	
	Дата = Параметры.Дата;
	Организация = Параметры.Организация;
	Ссылка = Параметры.Ссылка;
	СтруктурноеПодразделение = Параметры.СтруктурноеПодразделение;
	ДокументМодифицирован    = Параметры.ДокументМодифицирован; 	
	ЕстьРеквизитНовыйНомерГТД = (ТипЗнч(Ссылка) = Тип("ДокументСсылка.ПеремещениеТоваров"));
	ЗаполнитьДеревоНомеровГТД(АдресТовары, АдресНомераГТД);
	ЗаполнятьОстатки = Параметры.ЗаполнятьОстатки;
	
	Элементы.НовыйНомерГТД.Видимость = ЕстьРеквизитНовыйНомерГТД;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.КартинкаВнимание.Видимость = ДокументМодифицирован;
	Элементы.НадписьДокументМодифицирован.Видимость = ДокументМодифицирован;
	Элементы.ДеревоНомеровГТДГруппаЗаполнить.Видимость = ЗаполнятьОстатки;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	АдресНомеровГТД = ПоместитьНомераГТДВХранилище();
	Закрыть(КодВозвратаДиалога.OK);
	ОповеститьОВыборе(АдресНомеровГТД);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомераГТДСначалаЗаполненными(Команда)
	ЗаполнитьНомераГТДНаСервере(НомераГТДКлиентСервер.СпособЗаполнения_СначалаЗаполненными());
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомераГТДСначалаПустыми(Команда)
	ЗаполнитьНомераГТДНаСервере(НомераГТДКлиентСервер.СпособЗаполнения_СначалаПустыми());
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНомераГТДНаСервере(Знач СпособЗаполнения)
		
	Объект = Новый Структура;
	Объект.Вставить("Товары", ПолучитьИзВременногоХранилища(АдресТовары));
	Объект.Вставить("НомераГТД", НоваяТаблицаНомераГТД());
	Объект.Вставить("Дата", Дата);
	Объект.Вставить("Ссылка", Ссылка);
	Объект.Вставить("Организация", Организация);
	Объект.Вставить("СтруктурноеПодразделение", СтруктурноеПодразделение);
	
	НомераГТДСервер.ЗаполнитьТаблицуНомераГТД(Объект, "Товары", СпособЗаполнения, Истина);	
	
	АдресНомераГТД = ПоместитьВоВременноеХранилище(Объект.НомераГТД, ЭтаФорма.УникальныйИдентификатор);	
	ЗаполнитьДеревоНомеровГТД(АдресТовары, АдресНомераГТД);	
	УдалитьИзВременногоХранилища(АдресНомераГТД);
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормы

&НаКлиенте
Процедура ДеревоНомеровГТДВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные.Свойство(Поле.Имя) Тогда
		
		Значение = Неопределено;
		Если Поле.Имя = "Номенклатура" Тогда
			Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Номенклатура) Тогда
				Значение = Элемент.ТекущиеДанные.Номенклатура;
			КонецЕсли;
			СтандартнаяОбработка = Ложь;
		ИначеЕсли Элементы.ДеревоНомеровГТД.ТолькоПросмотр Тогда
			Значение = Элемент.ТекущиеДанные[Поле.Имя];
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Значение) Тогда
			ПоказатьЗначение(Неопределено, Значение);
		КонецЕсли;
		
	ИначеЕсли Элементы.ДеревоНомеровГТД.ТолькоПросмотр Тогда
		
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.НомерГТД) Тогда
			ПоказатьЗначение(Неопределено, Элемент.ТекущиеДанные.НомерГТД);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНомеровГТДПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		// В таблице Товары нет ни одной строки.
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СтрокаРодитель = Элемент.ТекущиеДанные.ПолучитьРодителя();
	
	Если НЕ Копирование И СтрокаРодитель <> Неопределено Тогда
	 
		Отказ = Истина;
		Элемент.ТекущаяСтрока = СтрокаРодитель.ПолучитьИдентификатор();
		Элемент.ДобавитьСтроку();
		
	ИначеЕсли Копирование И СтрокаРодитель = Неопределено Тогда
	 
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНомеровГТДПередУдалением(Элемент, Отказ)
	
	СтрокаТаблицы = Элемент.ТекущиеДанные;
	Если СтрокаТаблицы.ПолучитьРодителя() = Неопределено Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Корневую строку дерева удалять нельзя.'"));
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНомеровГТДПослеУдаления(Элемент)
	РодительскаяСтрока = РодительскаяСтрока(Элементы.ДеревоНомеровГТД.ТекущиеДанные);
	ЗаполнитьПолеИнформация(ДеревоНомеровГТД);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНомеровГТДПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	СтрокаТаблицы = Элемент.ТекущиеДанные;
	СтрокаРодитель = СтрокаТаблицы.ПолучитьРодителя();
	
	Если НоваяСтрока И НЕ Копирование Тогда
			
		СуммаКоличествДочернихСтрок = 0;
		ДочерниеСтроки = СтрокаРодитель.ПолучитьЭлементы();
		Для Каждого ДочерняяСтрока Из ДочерниеСтроки Цикл
			СуммаКоличествДочернихСтрок = СуммаКоличествДочернихСтрок + ДочерняяСтрока.Количество;
		КонецЦикла;
		
		СтрокаТаблицы.НомерСтроки = 0;
		СтрокаТаблицы.Номенклатура = СтрокаРодитель.Номенклатура;		
		СтрокаТаблицы.Коэффициент = СтрокаРодитель.Коэффициент;
		СтрокаТаблицы.Количество = СтрокаРодитель.Количество - СуммаКоличествДочернихСтрок;
		СтрокаТаблицы.КлючСвязи = СтрокаРодитель.КлючСвязи;
		СтрокаТаблицы.НомерГТД = ПредопределенноеЗначение("Справочник.НомераГТД.ПустаяСсылка");
		СтрокаТаблицы.НовыйНомерГТД = ПредопределенноеЗначение("Справочник.НомераГТД.ПустаяСсылка");		
		СтрокаТаблицы.ЭтоРодительскаяСтрока = Ложь;
		
	КонецЕсли;
	
	ЗаполнитьПолеИнформация(ДеревоНомеровГТД);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНомеровГТДНомерГТДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыВыбора = ПараметрыВыбораНомераГТД(Элементы.ДеревоНомеровГТД.ТекущаяСтрока);	
	НомераГТДКлиент.ТоварыНомерГТДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, ПараметрыВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	РодительскаяСтрока = РодительскаяСтрока(Элементы.ДеревоНомеровГТД.ТекущиеДанные);
	ЗаполнитьПолеИнформация(ДеревоНомеровГТД);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФУнкции

Функция НоваяТаблицаНомераГТД()
	
	НомераГТД = Новый ТаблицаЗначений;
	
	КвалификаторЧисла = Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Любой);
	ТипЧисло = Новый ОписаниеТипов("Число", КвалификаторЧисла);
	
	НомераГТД.Колонки.Добавить("НомерСтроки", ТипЧисло);
	НомераГТД.Колонки.Добавить("КлючСвязи", ТипЧисло);
	НомераГТД.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	НомераГТД.Колонки.Добавить("НомерГТД", Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	НомераГТД.Колонки.Добавить("Коэффициент", ТипЧисло);
	НомераГТД.Колонки.Добавить("Количество", ТипЧисло);
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		НомераГТД.Колонки.Добавить("НовыйНомерГТД", Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	КонецЕсли;
	
	Возврат НомераГТД;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДеревоНомеровГТД(АдресТовары, АдресНомераГТД)
		
	// Очистить ДеревоНомеровГТД.
	ДеревоНомеровГТД.ПолучитьЭлементы().Очистить();
	
	// Получить таблицы значений, переданные из документа.
	ТабЗначТовары = ПолучитьИзВременногоХранилища(АдресТовары);
	ЕстьРеквизитКоэффициент = (НЕ ТабЗначТовары.Колонки.Найти("Коэффициент") = Неопределено); 
	ТабЗначНомераГТД = ПолучитьИзВременногоХранилища(АдресНомераГТД); 
	
	// Заполнить ДеревоНомеровГТД.
	Для Каждого СтрокаТабЗначТовары Из ТабЗначТовары Цикл
		
		РодительскаяСтрокаДерева = ДеревоНомеровГТД.ПолучитьЭлементы().Добавить();	
		РодительскаяСтрокаДерева.НомерСтроки = СтрокаТабЗначТовары.НомерСтроки;
		РодительскаяСтрокаДерева.Номенклатура = СтрокаТабЗначТовары.Номенклатура;
		РодительскаяСтрокаДерева.НомерГТД = Неопределено;
		Если ЕстьРеквизитКоэффициент Тогда
			РодительскаяСтрокаДерева.Коэффициент = СтрокаТабЗначТовары.Коэффициент;
		Иначе
			РодительскаяСтрокаДерева.Коэффициент = 1;
		КонецЕсли;
		РодительскаяСтрокаДерева.Количество = СтрокаТабЗначТовары.Количество;
		РодительскаяСтрокаДерева.КлючСвязи = СтрокаТабЗначТовары.КлючСвязи;
		РодительскаяСтрокаДерева.ЭтоРодительскаяСтрока = Истина;
		
		// Предполагается, что в таблице Товары может быть строка, а в таблице НомераГТД строки нет.
		// Также предполагается, что ситуация, когда в таблице НомераГТД есть строка с определенным ключом,
		// а в таблице Товары строки с таким ключом нет - невозможна.
		ПараметрыОтбора = Новый Структура();
		ПараметрыОтбора.Вставить("КлючСвязи", СтрокаТабЗначТовары.КлючСвязи);
		МассивСтрокНомеровГТД = ТабЗначНомераГТД.НайтиСтроки(ПараметрыОтбора);
			
		Для Каждого СтрокаНомерГТД Из МассивСтрокНомеровГТД Цикл
			
			ДочернииСтроки = РодительскаяСтрокаДерева.ПолучитьЭлементы();
			
			ДочерняяСтрока = ДочернииСтроки.Добавить();
			
			ДочерняяСтрока.НомерСтроки  = Неопределено;
			ДочерняяСтрока.Номенклатура = СтрокаНомерГТД.Номенклатура;
			ДочерняяСтрока.НомерГТД     = СтрокаНомерГТД.НомерГТД;
			
			Если ЕстьРеквизитКоэффициент Тогда
				ДочерняяСтрока.Коэффициент = СтрокаНомерГТД.Коэффициент;
			Иначе
				ДочерняяСтрока.Коэффициент = 1;
			КонецЕсли;
			
			ДочерняяСтрока.Количество = СтрокаНомерГТД.Количество;
			ДочерняяСтрока.КлючСвязи = СтрокаНомерГТД.КлючСвязи;
			
			Если ЕстьРеквизитНовыйНомерГТД  Тогда
				ДочерняяСтрока.НовыйНомерГТД = СтрокаНомерГТД.НовыйНомерГТД;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Заполнить колонку Информация.
	РодительскиеСтрокиДерева = ДеревоНомеровГТД.ПолучитьЭлементы();
	Для Каждого РодительскаяСтрока Из РодительскиеСтрокиДерева Цикл
		ЗаполнитьПолеИнформация(ДеревоНомеровГТД);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьНомераГТДВХранилище()
	
	// Создать новую ТабЗначНомераГТД и задать ее колонки.
	ТабЗначНомераГТД = Новый ТаблицаЗначений();
	ДеревоЗначНомераГТД = РеквизитФормыВЗначение("ДеревоНомеровГТД");
	Для Каждого КолонкаДерева Из ДеревоЗначНомераГТД.Колонки Цикл
		Если КолонкаДерева.Имя <> "НомерСтроки" Тогда
			ТабЗначНомераГТД.Колонки.Добавить(КолонкаДерева.Имя, КолонкаДерева.ТипЗначения);
		КонецЕсли;
	КонецЦикла;
	
	РодительскиеСтрокиДерева = ДеревоНомеровГТД.ПолучитьЭлементы();	
	Для Каждого РодительскаяСтрока Из РодительскиеСтрокиДерева Цикл
		
		ДочерниеСтрокиДерева = РодительскаяСтрока.ПолучитьЭлементы();
		
		Для Каждого ДочерняяСтрока Из ДочерниеСтрокиДерева Цикл
			
			СтрокаНомераГТД = ТабЗначНомераГТД.Добавить();	
			СтрокаНомераГТД.КлючСвязи = ДочерняяСтрока.КлючСвязи;
			СтрокаНомераГТД.Номенклатура = ДочерняяСтрока.Номенклатура;
			СтрокаНомераГТД.НомерГТД = ДочерняяСтрока.НомерГТД;
			СтрокаНомераГТД.Коэффициент = ДочерняяСтрока.Коэффициент;
			СтрокаНомераГТД.Количество = ДочерняяСтрока.Количество;
			Если ЕстьРеквизитНовыйНомерГТД Тогда
				СтрокаНомераГТД.НовыйНомерГТД = ДочерняяСтрока.НовыйНомерГТД;
			КонецЕсли;
				
		КонецЦикла;
		
	КонецЦикла;
	
	АдресНомераГТД = ПоместитьВоВременноеХранилище(ТабЗначНомераГТД);
	
	Возврат АдресНомераГТД;
	
КонецФункции

&НаКлиенте
Функция ПараметрыВыбораНомераГТД(ТекущаяСтрока)
	
	ПараметрыВыбора = НомераГТДКлиент.ПустыеПараметрыВыбораНомераГТД();
	
	ПараметрыВыбора.Ссылка = Ссылка;
	ПараметрыВыбора.Дата = Дата;	
	ПараметрыВыбора.Организация = Организация;
	ПараметрыВыбора.СтруктурноеПодразделение = СтруктурноеПодразделение;
	ПараметрыВыбора.ПоказыватьТолькоОстатки = Истина;
	
	ТекущиеДанные = ДеревоНомеровГТД.НайтиПоИдентификатору(ТекущаяСтрока);
	ПараметрыВыбора.Товар = ТекущиеДанные.Номенклатура;
	ПараметрыВыбора.НомерГТД = ТекущиеДанные.НомерГТД;
	
	Возврат ПараметрыВыбора;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьПолеИнформация(ДеревоНомеровГТД)
	
	КоллекцияРодителей = ДеревоНомеровГТД.ПолучитьЭлементы();
	
	Для Каждого СтрокаРодитель Из КоллекцияРодителей Цикл
		
		СуммаКоличествДочернихСтрок = 0;
		ДочерниеСтроки = СтрокаРодитель.ПолучитьЭлементы();
		Для Каждого ДочерняяСтрока Из ДочерниеСтроки Цикл
			СуммаКоличествДочернихСтрок = СуммаКоличествДочернихСтрок + ДочерняяСтрока.Количество;
		КонецЦикла;
		
		Если СтрокаРодитель.Количество > СуммаКоличествДочернихСтрок Тогда
			СтрокаРодитель.Информация = "Недостаточно: " + Формат(СтрокаРодитель.Количество - СуммаКоличествДочернихСтрок, "ЧДЦ=3");
		ИначеЕсли СтрокаРодитель.Количество < СуммаКоличествДочернихСтрок Тогда
			СтрокаРодитель.Информация = "Превышение: " + Формат(СуммаКоличествДочернихСтрок - СтрокаРодитель.Количество, "ЧДЦ=3");
		Иначе
			СтрокаРодитель.Информация = "";
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РодительскаяСтрока(СтрокаДерева)
	
	РодительскаяСтрока = Неопределено;
	
	Если СтрокаДерева.ПолучитьРодителя() = Неопределено Тогда
		РодительскаяСтрока = СтрокаДерева;
	Иначе
		РодительскаяСтрока = СтрокаДерева.ПолучитьРодителя();	
	КонецЕсли;
	
	Возврат РодительскаяСтрока;
	
КонецФункции

&НаКлиенте
Процедура ПриЗакрытии()
	
	// если просто закрываем, то нам просто нужно восстановить модифицированность из открываемой формы
	//
	Если ЗначениеЗаполнено(АдресНомеровГТД) Тогда
		Возврат;
	КонецЕсли;
	
	ОповеститьОВыборе(Неопределено); 
	
КонецПроцедуры

#КонецОбласти