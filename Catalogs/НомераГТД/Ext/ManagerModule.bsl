#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПоискСозданиеОбновлениеНомеровГТД

// Общий порядок работы:
// Получить пустую таблицу для работы с номерами ГТД, вызвав ПустаяТаблицаНомеровГТД().
// Заполнить полученную таблицу номеров ГТД и передать её в метод НайтиСоздатьОбновитьНомераГТД().
// После выполнения метода НайтиСоздатьОбновитьНомераГТД() извлечь данные из таблицы ТаблицаНомеровГТД.  

Функция ПустаяТаблицаНомеровГТД() Экспорт
	
	// Тип булево был добавлен, чтобы в качестве значения ячейки можно было указывать Неопределено,
	// т.к. если поле составного типа, то для него можно указать Неопределено.
	//
	// Если для поля указывается значение Неопределено, то предполагается,
	// что в процедуре ОбновитьНомераГТД() данное поле не будет перезаполняться.
	// Это нужно, если в документе нет такого поля, например, в документе ГТДИмпорт,
	// нет поля РегистрационныйНомерЭСФ.
	
	ТаблицаНомеровГТД = Новый ТаблицаЗначений;
	
	ТипСтрока = Новый ОписаниеТипов("Строка, Булево", , Новый КвалификаторыСтроки(400));
	
	ТаблицаНомеровГТД.Колонки.Добавить("Идентификатор", ТипСтрока);
	ТаблицаНомеровГТД.Колонки.Добавить("НомерСтроки", ТипСтрока);
	ТаблицаНомеровГТД.Колонки.Добавить("НомерГТД", ТипСтрока);
	ТаблицаНомеровГТД.Колонки.Добавить("НомерСтрокиГТД", ТипСтрока);	
	ТаблицаНомеровГТД.Колонки.Добавить("КодТНВЭД", ТипСтрока);
	ТаблицаНомеровГТД.Колонки.Добавить("ГСВС", Новый ОписаниеТипов("СправочникСсылка.НоменклатураГСВС, Булево"));
	ТаблицаНомеровГТД.Колонки.Добавить("НаименованиеТовара", ТипСтрока);
	ТаблицаНомеровГТД.Колонки.Добавить("СтранаПроисхожденияТовара", Новый ОписаниеТипов("СправочникСсылка.КлассификаторСтранМира, Булево"));
	ТаблицаНомеровГТД.Колонки.Добавить("СпособПроисхожденияТовара", Новый ОписаниеТипов("ПеречислениеСсылка.СпособыПроисхожденияТоваров, Булево")); 
	ТаблицаНомеровГТД.Колонки.Добавить("РегистрационныйНомерЭСФ", ТипСтрока);	
	ТаблицаНомеровГТД.Колонки.Добавить("СсылкаНомерГТД", Новый ОписаниеТипов("СправочникСсылка.НомераГТД, Булево"));
	ТаблицаНомеровГТД.Колонки.Добавить("ПризнакПроисхождения", ТипСтрока);
	
	Возврат ТаблицаНомеровГТД;
	
КонецФункции

// Получает на вход ТаблицаНомеровГТД, после чего изменяет ее и возвращает обратно.
// В возвращаемой ТаблицаНомеровГТД всегда заполнена колонка СсылкаНомерГТД.
//
// Сначала пытается найти существующие номера ГТД в справочнике НомераГТД.
// Затем, если номера ГТД не удалось найти, то создает и записывает новые элементы справочника.
// После этого обновляет новые и старые элементы справочника по данным ТаблицаНомеровГТД.
//
// Возвращает ТаблицаНомеровГТД с заполненным полем СсылкаНомерГТД.
//
Функция  НайтиСоздатьОбновитьНомераГТД(ТаблицаНомеровГТД, СинонимТаблицы, ДокументСсылка) Экспорт
	
	Попытка 
		
		НачатьТранзакцию();
	
		НайтиНомераГТД(ТаблицаНомеровГТД);
		МассивСозданныхНомеровГТД = СоздатьНомераГТД(ТаблицаНомеровГТД, СинонимТаблицы, ДокументСсылка);						
		ОбновитьНомераГТД(ТаблицаНомеровГТД);
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
		ВызватьИсключение ПодробноеПредставлениеОшибки;
		
	КонецПопытки;
	
	Возврат МассивСозданныхНомеровГТД;
	
КонецФункции

// Процедура пытается заполнить колонку СсылкаНомерГТД в таблице ТаблицаНомеровГТД.
// Если в ячейки колонки уже есть значение, то оно не заполняется.
// Для заполнения колонки процедура ищет элементы в справочнике НомераГТД по:
// номеру ГТД и номеру строки ГТД и коду ТН ВЭД.
Процедура НайтиНомераГТД(ТаблицаНомеровГТД) Экспорт
	
	// При поиске элементов справочника НомераГТД из документа ЭСФ,	
	// если у строки таблицы Товары не заполнен номер строки ГТД (Товары.ДополнительныеДанные),
	// то для двух строк с разными кодами ТН ВЭД и наименованиями будет найден один элемент справочника НомераГТД,
	// что является не правильным, т.к. у этих строк разные коды ТН ВЭД
	// и для них нужно создвать два элемента справочника НомераГТД.
	//
	// Поэтому поиск выполняется по реквизитам НомерГТД, НомерСтрокиГТД, КодТНВЭД, Наименование.
	// Тажке поиск по наименованию нужен для корректного создания номеров ГТД в ГТДИмпорт.
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНомеровГТД.Идентификатор,
	|	ТаблицаНомеровГТД.НомерГТД,
	|	ТаблицаНомеровГТД.НомерСтрокиГТД,
	|	ТаблицаНомеровГТД.КодТНВЭД,
	|	ТаблицаНомеровГТД.НаименованиеТовара,
	|	ТаблицаНомеровГТД.СсылкаНомерГТД,
	|	ТаблицаНомеровГТД.РегистрационныйНомерЭСФ,
	|	ТаблицаНомеровГТД.СтранаПроисхожденияТовара,
	|	ТаблицаНомеровГТД.СпособПроисхожденияТовара,
	|	ТаблицаНомеровГТД.ПризнакПроисхождения	
	|ПОМЕСТИТЬ ВТ_ТаблицаНомеровГТД
	|ИЗ
	|	&ТаблицаНомеровГТД КАК ТаблицаНомеровГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	ВТ_ТаблицаНомеровГТД.Идентификатор,
	|	ВТ_ТаблицаНомеровГТД.НомерГТД,
	|	НомераГТД.Ссылка КАК СсылкаНомерГТД
	|ИЗ
	|	ВТ_ТаблицаНомеровГТД КАК ВТ_ТаблицаНомеровГТД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
	|		ПО ВТ_ТаблицаНомеровГТД.НомерГТД = НомераГТД.Код
	|			И ВТ_ТаблицаНомеровГТД.НомерСтрокиГТД = НомераГТД.НомерСтрокиГТД
	|			И ВТ_ТаблицаНомеровГТД.КодТНВЭД = НомераГТД.КодТНВЭД
	|			И ВТ_ТаблицаНомеровГТД.НаименованиеТовара = НомераГТД.НаименованиеТовара
	|			И ВТ_ТаблицаНомеровГТД.РегистрационныйНомерЭСФ = НомераГТД.РегистрационныйНомерЭСФ
	|			И ВТ_ТаблицаНомеровГТД.СтранаПроисхожденияТовара = НомераГТД.СтранаПроисхожденияТовара
	|			И ВТ_ТаблицаНомеровГТД.СпособПроисхожденияТовара = НомераГТД.СпособПроисхожденияТовара
	|			И ВТ_ТаблицаНомеровГТД.ПризнакПроисхождения = НомераГТД.ПризнакПроисхождения
	|ГДЕ	
	|	НЕ НомераГТД.ПометкаУдаления";
	
	КопияТаблицыНомеровГТД = ТаблицаНомеровГТД.Скопировать();
	
	// При заполнении источников происхождения в таблице ОС документа ГТДИмпорт
	// устанавливается: СтрокаНомерГТД.КодТНВЭД = Неопределено,
	// это нужно, чтобы для ОС создавались номера ГТД,
	// т.к. в СоздатьНомераГТД() номера ГТД не создадутся, если СтрокаНомерГТД.КодТНВЭД = "",
	// а в таблице ОС нет реквизита КодТНВЭД.
	// Код ниже исключает неявное преобразование из Неопределено в строку в тексте запроса,
	// т.к. предполагается, что оно может привести к ошибкам на некоторых ОС или версиях 1С.
	Для Каждого СтрокаКопии Из КопияТаблицыНомеровГТД Цикл
		Если СтрокаКопии.КодТНВЭД = Неопределено Тогда
			СтрокаКопии.КодТНВЭД = "";	
		КонецЕсли;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ТаблицаНомеровГТД", КопияТаблицыНомеровГТД);
	
	//очистим старые ссылки
	//ТаблицаНомеровГТД.ЗаполнитьЗначения(Справочники.НомераГТД.ПустаяСсылка(),"СсылкаНомерГТД");
	Выборка = Запрос.Выполнить().Выбрать();	
	Пока Выборка.Следующий() Цикл
		
		// Номера ГТД ищутся, только если указана строка НомерГТД.
		// Это нужно, чтобы после обновления ИБ, когда пользователь записывает
		// документы ГТДИмпорт, если в них не указан номер ГТД,
		// не подставлять в реквизит ТЧ Товары и ОС найденный ГТД,
		// т.к. до обновления номер ГТД был пустым.
		
		Если ЗначениеЗаполнено(Выборка.НомерГТД) Тогда
			СтрокаНомерГТД = ТаблицаНомеровГТД.Найти(Выборка.Идентификатор, "Идентификатор");
			Если ЗначениеЗаполнено(СтрокаНомерГТД.СсылкаНомерГТД) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаНомерГТД.СсылкаНомерГТД = Выборка.СсылкаНомерГТД;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СоздатьНомераГТД(ТаблицаНомеровГТД, СинонимТаблицы, ДокументСсылка) Экспорт
	
	МассивСозданныхНомеровГТД = Новый Массив;

	Для Каждого СтрокаНомерГТД Из ТаблицаНомеровГТД Цикл
				
			// Новые источники происхождения создаются, только если указана строка НомерГТД.
			// Это нужно, чтобы после обновления ИБ, когда пользователь записывает
			// документы ГТДИмпорт, если в них не указан номер ГТД,
			// не создавались новые пустые номера ГТД.
			Если НЕ ЗначениеЗаполнено(СтрокаНомерГТД.НомерГТД)
				И ТипЗнч(ДокументСсылка) <> Тип("ДокументСсылка.ЭСФ") Тогда
				
				Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваровИУплатеКосвенныхНалогов") Тогда
					НаименованиеПоля = НСтр("ru = 'Регистрационный номер'");
				ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ГТДИмпорт") Тогда
					НаименованиеПоля = НСтр("ru = 'Номер декларации (ГТД)'");	
				Иначе
					НаименованиеПоля = НСтр("ru = 'Номер ГТД'"); // Для безопасности. Код сюда не должен заходить.	
				КонецЕсли;
				
				ТекстСообщения = НСтр("ru = 'В документе не заполнено поле ""%1"", поэтому источник происхождения не создан, строка №%2, таблица: ""%3"", документ: ""%4"".'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения, НаименованиеПоля, СтрокаНомерГТД.НомерСтроки, СинонимТаблицы, ДокументСсылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументСсылка);
				
			КонецЕсли;
			
			// Также новые источники происхождения создаются, только если заполнен код ТН ВЭД.
			// Это нужно, чтобы избежать ситуации: Пользователь вводит ЗавялениеОВвозе или ГТДИмпорт, 
			// не указал коды ТН ВЭД, нажал записать, создался один источник происхождения для двух строк.
			// Пользователь указал в строках коды ТН ВЭД, но источник происхождения все равно уже один.		
			Если СтрокаНомерГТД.КодТНВЭД = "" И ТипЗнч(ДокументСсылка) <> Тип("ДокументСсылка.ЭСФ") Тогда				
				ТекстСообщения = НСтр("ru = 'Источник происхождения не создан, так как не указан код ТН ВЭД, строка №%1, таблица: ""%2"", документ: ""%3"".'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СтрокаНомерГТД.НомерСтроки, СинонимТаблицы, ДокументСсылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументСсылка);				
			КонецЕсли;	
						
			// Также новые источники происхождения создаются, только если заполнено наименование товара. Из правил:
			//"В графе 3/1 «Наименование товаров в соответствии с Декларацией на товары или заявлением о ввозе товаров и уплате косвенных налогов» 
			//указывается наименование товара, отраженное в графе 31 основного (добавочного) листа декларации на товары при импорте с территории государств,
			//не являющихся государствами-членами ЕАЭС, или в графе 2 заявления о ввозе товаров и уплате косвенных налогов при импорте с территории государства-члена ЕАЭС."
		  	Если СтрокаНомерГТД.НаименованиеТовара = "" И СинонимТаблицы <> "ОС" И ТипЗнч(ДокументСсылка) <> Тип("ДокументСсылка.ЭСФ") Тогда				
				ТекстСообщения = НСтр("ru = 'Источник происхождения не создан, так как не указано наименование товара, строка №%1, таблица: ""%2"", документ: ""%3"".'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СтрокаНомерГТД.НомерСтроки, СинонимТаблицы, ДокументСсылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументСсылка);				
			КонецЕсли;	
			
			// Также новые источники происхождения создаются, только если заполнен признак происхождения.
			// Данное поле является ключевым.
			Если СтрокаНомерГТД.ПризнакПроисхождения = "" Тогда
				ТекстСообщения = НСтр("ru = 'Источник происхождения не создан, так как не указан признак происхождения, строка №%1, таблица: ""%2"", документ: ""%3"".'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СтрокаНомерГТД.НомерСтроки, СинонимТаблицы, ДокументСсылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументСсылка);
			КонецЕсли;
				
			Если ((НЕ ЗначениеЗаполнено(СтрокаНомерГТД.НомерГТД) ИЛИ СтрокаНомерГТД.КодТНВЭД = "" ИЛИ (СтрокаНомерГТД.НаименованиеТовара = "" И СинонимТаблицы <> "ОС"))
				И ТипЗнч(ДокументСсылка) <> Тип("ДокументСсылка.ЭСФ"))
				ИЛИ НЕ СтрокаНомерГТД.СсылкаНомерГТД.Пустая() 
				ИЛИ СтрокаНомерГТД.ПризнакПроисхождения = "" Тогда
				Продолжить;
			КонецЕсли;
			
		ОбъектНомерГТД = Справочники.НомераГТД.СоздатьЭлемент();
		
		ОбъектНомерГТД.Код = СтрокаНомерГТД.НомерГТД;
		ОбъектНомерГТД.НомерСтрокиГТД = СтрокаНомерГТД.НомерСтрокиГТД;
		ОбъектНомерГТД.КодТНВЭД = СтрокаНомерГТД.КодТНВЭД;
		ОбъектНомерГТД.ГСВС = СтрокаНомерГТД.ГСВС;
		ОбъектНомерГТД.НаименованиеТовара = СтрокаНомерГТД.НаименованиеТовара;			
		ОбъектНомерГТД.СтранаПроисхожденияТовара = СтрокаНомерГТД.СтранаПроисхожденияТовара;
		ОбъектНомерГТД.СпособПроисхожденияТовара = СтрокаНомерГТД.СпособПроисхожденияТовара;
		ОбъектНомерГТД.РегистрационныйНомерЭСФ = СтрокаНомерГТД.РегистрационныйНомерЭСФ;
		ОбъектНомерГТД.ПризнакПроисхождения = СтрокаНомерГТД.ПризнакПроисхождения;
		
		//заполним наименование товара
		МассивВариантовНаименований = ВариантыНаименованийНомераГТД(ОбъектНомерГТД);
		ОбъектНомерГТД.Наименование = МассивВариантовНаименований[МассивВариантовНаименований.ВГраница()];
		
		ОбъектНомерГТД.Записать();
		МассивСозданныхНомеровГТД.Добавить(ОбъектНомерГТД.Ссылка);
		
		// Созданный элемент справочника НомераГТД может быть подставлен в несколько строк таблицы ТаблицаНомеровГТД,
		// например, когда заполняются источники происхождений в таблице ОС или в таблице Товары указано
		// несколько строк с одинаковым наименованием и кодом ТН ВЭД.
		// Важно! Ключи поиска в данном методе должны совпадать с ключами поиска в методе НайтиНомераГТД().		
		ПараметрыПоиска = Новый Структура;
		ПараметрыПоиска.Вставить("НомерГТД", СтрокаНомерГТД.НомерГТД);
		ПараметрыПоиска.Вставить("НомерСтрокиГТД", СтрокаНомерГТД.НомерСтрокиГТД);
		ПараметрыПоиска.Вставить("КодТНВЭД", СтрокаНомерГТД.КодТНВЭД);
		ПараметрыПоиска.Вставить("НаименованиеТовара", СтрокаНомерГТД.НаименованиеТовара);
		ПараметрыПоиска.Вставить("СпособПроисхожденияТовара", СтрокаНомерГТД.СпособПроисхожденияТовара);
		ПараметрыПоиска.Вставить("СтранаПроисхожденияТовара", СтрокаНомерГТД.СтранаПроисхожденияТовара);
		ПараметрыПоиска.Вставить("ПризнакПроисхождения", СтрокаНомерГТД.ПризнакПроисхождения);
		
		МассивСтрокДляЗаполнения = ТаблицаНомеровГТД.НайтиСтроки(ПараметрыПоиска);
		
		Для Каждого НайденнаяСтрокаДляЗаполнения Из МассивСтрокДляЗаполнения Цикл						
			НайденнаяСтрокаДляЗаполнения.СсылкаНомерГТД = ОбъектНомерГТД.Ссылка;		
		КонецЦикла; 		
	КонецЦикла;	
	
	Возврат МассивСозданныхНомеровГТД;
	
КонецФункции

Процедура ОбновитьНомераГТД(ТаблицаНомеровГТД) Экспорт
	
	Для Каждого СтрокаНомерГТД Из ТаблицаНомеровГТД Цикл
		
		Если ЗначениеЗаполнено(СтрокаНомерГТД.СсылкаНомерГТД) Тогда
		
			ОбъектНомерГТД = СтрокаНомерГТД.СсылкаНомерГТД.ПолучитьОбъект();
			
			Если СтрокаНомерГТД.НомерГТД <> Неопределено Тогда
				ОбъектНомерГТД.Код = СтрокаНомерГТД.НомерГТД;
			КонецЕсли;
			
			Если СтрокаНомерГТД.НомерСтрокиГТД <> Неопределено Тогда
				ОбъектНомерГТД.НомерСтрокиГТД = СтрокаНомерГТД.НомерСтрокиГТД;
			КонецЕсли;
			
			Если СтрокаНомерГТД.КодТНВЭД <> Неопределено Тогда
				ОбъектНомерГТД.КодТНВЭД = СтрокаНомерГТД.КодТНВЭД;
			КонецЕсли;
			
			Если СтрокаНомерГТД.НаименованиеТовара <> Неопределено Тогда
				ОбъектНомерГТД.НаименованиеТовара = СтрокаНомерГТД.НаименованиеТовара;			
			КонецЕсли;
			
			Если СтрокаНомерГТД.СтранаПроисхожденияТовара <> Неопределено Тогда
				ОбъектНомерГТД.СтранаПроисхожденияТовара = СтрокаНомерГТД.СтранаПроисхожденияТовара;
			КонецЕсли;
			
			Если СтрокаНомерГТД.СпособПроисхожденияТовара <> Неопределено Тогда
				ОбъектНомерГТД.СпособПроисхожденияТовара = СтрокаНомерГТД.СпособПроисхожденияТовара;
			КонецЕсли;
			
			Если СтрокаНомерГТД.ПризнакПроисхождения <> Неопределено Тогда
				ОбъектНомерГТД.ПризнакПроисхождения = СтрокаНомерГТД.ПризнакПроисхождения;
			КонецЕсли;
			
			Если СтрокаНомерГТД.РегистрационныйНомерЭСФ <> Неопределено Тогда
				ОбъектНомерГТД.РегистрационныйНомерЭСФ = СтрокаНомерГТД.РегистрационныйНомерЭСФ;
			КонецЕсли;
			
			МассивВариантовНаименований = ВариантыНаименованийНомераГТД(ОбъектНомерГТД);
			ОбъектНомерГТД.Наименование = МассивВариантовНаименований[МассивВариантовНаименований.ВГраница()];
			
			ОбъектНомерГТД.Записать();
		
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает различные варианты наименования для элемента справочника Номера ГТД.
//
// Параметры:
//  НомерГТД - Номер ГДТ для которого нужно получить варианты наименований .
//
// Возвращаемое значение:
//  Массив - Варианты наименования номера ГТД.
//
Функция ВариантыНаименованийНомераГТД(Знач НомерГТД) Экспорт
	
	МассивНаименований = Новый Массив();
		
	Если НомерГТД.СпособПроисхожденияТовара = Перечисления.СпособыПроисхожденияТоваров.СТ1 Тогда
		
		СтрокаНаименования = СокрЛП(НомерГТД.Код) 
		+ ?(ЗначениеЗаполнено(НомерГТД.ДатаСертификатаПроисхожденияТовара), "/" + Формат(НомерГТД.ДатаСертификатаПроисхожденияТовара, "ДФ=dd.MM.yyyy"), "");	
		
		МассивНаименований.Добавить(СтрокаНаименования);
		
	Иначе
		
		СтрокаНаименования = СокрЛП(НомерГТД.Код)
		+ ?(ЗначениеЗаполнено(НомерГТД.НомерСтрокиГТД), "/" + СокрЛП(НомерГТД.НомерСтрокиГТД), "")
		+ ?(ЗначениеЗаполнено(НомерГТД.КодТНВЭД), "/" + СокрЛП(НомерГТД.КодТНВЭД), "");
		
		МассивНаименований.Добавить(СтрокаНаименования); 		

	КонецЕсли; 	
	
	Если ЗначениеЗаполнено(НомерГТД.СтранаПроисхожденияТовара) Тогда
		
		СтрокаНаименования = СтрокаНаименования + "/" + СокрЛП(НомерГТД.СтранаПроисхожденияТовара.Наименование);
		МассивНаименований.Добавить(СтрокаНаименования);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НомерГТД.СпособПроисхожденияТовара) Тогда
		
		Если ЗначениеЗаполнено(НомерГТД.ПризнакПроисхождения) Тогда
			Разделитель = "/" +  НомерГТД.ПризнакПроисхождения + " ";
		Иначе
			Разделитель = "/"
		КонецЕсли;
		
		СтрокаНаименования = СтрокаНаименования  + Разделитель + ЭСФКлиентСервер.СпособыПроисхожденияТоваровИСЭСФ(НомерГТД.СпособПроисхожденияТовара);
		МассивНаименований.Добавить(СтрокаНаименования);
		
	КонецЕсли; 							         	
	
	Возврат МассивНаименований;

КонецФункции

#КонецОбласти


#КонецЕсли