
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	оф_ХарактеристикиПодразделенияВФинансовойСтруктуреЗаголовок = "Характеристики подразделения в финансовой структуре";
	//добавляет действие "Редактировать номер"	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		ПрочитатьОтветственноеЛицо();
		НаборЗаписей = Неопределено;
		ПрочитатьСоответствия(НаборЗаписей);
		СоответствиеПодразделениямОрганизаций.Загрузить(НаборЗаписей.Выгрузить());
	КонецЕсли;
КонецПроцедуры

//Процедура ОбработкаОповещения
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьНадписьОтветственноеЛицоТекст" Тогда
		ПрочитатьОтветственноеЛицо();
	ИначеЕсли ИмяСобытия = "ОбновитьФорму" И (Источник = Объект.Ссылка ИЛИ (ТипЗнч(Источник) = фин_ОбщегоНазначенияВызовСервераПовтИсп.ТипСправочникУправленческихПодразделений() и Источник.Пустая())) Тогда
		ИмяОбновляемогоЭлемента = Параметр.ИмяЭлемента;
	КонецЕсли;
КонецПроцедуры

//Процедура ПередЗаписью
//
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	СписокНеЗаполненныхРеквизитов = Новый СписокЗначений;
	ОбнаруженыОшибки = Ложь;
	Если НЕ ЗначениеЗаполнено(Объект.Наименование)Тогда
		СписокНеЗаполненныхРеквизитов.Добавить(" Наименование");
		ОбнаруженыОшибки = Истина;
	КонецЕсли;	
	Если ОбнаруженыОшибки Тогда
		Если СписокНеЗаполненныхРеквизитов.Количество()>0 Тогда
			Сообщить("Не заполнены реквизиты: " + СписокНеЗаполненныхРеквизитов);
			Сообщить("Элемент не записан!");
		КонецЕсли;
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

//Процедура ПриЗаписи
//
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ЗаписатьСоответствия(СоответствиеПодразделениямОрганизаций, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ФормаПодразделенияЗаписана", , ЭтотОбъект);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура читает данные о текущем ответственном лице.
//
&НаСервере
Процедура ПрочитатьОтветственноеЛицо()
	Отбор = Новый Структура("СтруктурнаяЕдиница");
	Отбор.СтруктурнаяЕдиница = Объект.Ссылка;
	СрезПоследних   = РегистрыСведений.фин_ОтветственныеЛица.СрезПоследних(ТекущаяДата(), Отбор);
	Если Объект.Ссылка.Пустая() ИЛИ СрезПоследних.Количество() < 1 Тогда
		НадписьРуководитель = "Не указан." + Символы.ПС + "Используется в отчетах, требующих подписи руководителя";
	ИначеЕсли ЗначениеЗаполнено(СрезПоследних[0].ФизическоеЛицо) Тогда
		НадписьРуководитель = СрезПоследних[0].ФизическоеЛицо.Наименование + ", с " + Формат(СрезПоследних[0].Период, "ДЛФ=DD");
	Иначе
		НадписьРуководитель = "Не указан с " + Формат(СрезПоследних[0].Период, "ДЛФ=DD") + Символы.ПС + "Используется в отчетах, требующих подписи руководителя";
	КонецЕсли;
КонецПроцедуры // ПрочитатьОтветственноеЛицо()

//Процедура ПрочитатьСоответствия
//
&НаСервере
Процедура ПрочитатьСоответствия(НаборЗаписей)
	Если ТипЗнч(НаборЗаписей) <> Тип("РегистрСведенийНаборЗаписей."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СоответствиеПодразделенийИПодразделенийОрганизаций") Тогда
		НаборЗаписей = РегистрыСведений[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СоответствиеПодразделенийИПодразделенийОрганизаций"].СоздатьНаборЗаписей();
	Иначе
		НаборЗаписей.Очистить();
	КонецЕсли;
	НаборЗаписей.Отбор.Подразделение.Установить(Объект.Ссылка);
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеПодразделенийИПодразделенийОрганизаций.Подразделение,
	|	СоответствиеПодразделенийИПодразделенийОрганизаций.Организация,
	|	СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации
	|ИЗ
	|	РегистрСведений."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СоответствиеПодразделенийИПодразделенийОрганизаций КАК СоответствиеПодразделенийИПодразделенийОрганизаций
	|ГДЕ
	|	СоответствиеПодразделенийИПодразделенийОрганизаций.Подразделение = &Подразделение";
	Запрос.УстановитьПараметр("Подразделение",	Объект.Ссылка);
	НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

//Процедура ЗаписатьСоответствия
//
&НаСервере
Процедура ЗаписатьСоответствия(Набор, Отказ)
	НаборЗаписей = РегистрыСведений[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СоответствиеПодразделенийИПодразделенийОрганизаций"].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Подразделение.Значение=Объект.Ссылка;
	НаборЗаписей.Отбор.Подразделение.Использование=Истина;
	НаборЗаписей.Загрузить(Набор.Выгрузить());
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	Для Каждого Запись Из НаборЗаписей Цикл
		Запись.Подразделение	= Объект.Ссылка;
	КонецЦикла;
	ПервичныйНабор = НаборЗаписей.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ * ИЗ РегистрСведений."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СоответствиеПодразделенийИПодразделенийОрганизаций ГДЕ Подразделение = &Подразделение";
	Запрос.УстановитьПараметр("Подразделение", Объект.Ссылка);
	Если НЕ СравнитьТаблицыНаборовЗаписей(Запрос.Выполнить().Выгрузить(), НаборЗаписей.Выгрузить()) Тогда
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки(),, ("Элемент """ + СокрЛП(Объект.Ссылка) + """ не записан. Не записано соответствие подразделениям организаций."));
			// возвратим обратно данные набора
			НаборЗаписей.Загрузить(ПервичныйНабор);
			Отказ = Истина;
			Возврат;
		КонецПопытки;
		ПрочитатьСоответствия(НаборЗаписей)
	Иначе
		НаборЗаписей.Загрузить(ПервичныйНабор);
	КонецЕсли;
КонецПроцедуры //ЗаписатьСоответствия

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОГО ПОЛЯ СоответствиеПодразделениямОрганизаций

//Процедура КоманднаяПанель1Подбор
//
&НаКлиенте
Процедура Подбор(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		ПоказатьПредупреждение(,"Перед продолжением необходимо записать элемент!");
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("ПараметрВыборГруппИЭлементов",ИспользованиеГруппИЭлементов.Элементы);
	ОткрытьФорму("Справочник.ПодразделенияОрганизаций.ФормаВыбора",ПараметрыФормы,ЭтотОбъект);
КонецПроцедуры

//Процедура ОбработкаВыбора
//
&НаКлиенте
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = ОбработкаВыбораНаСервере(ЗначениеВыбора);
	
	Если ТипЗнч(ВыборкаДетальныеЗаписи) = Тип("Булево") Тогда
		Возврат;
	КонецЕсли;	
	
	Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
		Текст = "Выбранное подразделение организации уже установлено в соответствие следующим подразделениям (упр.):";
		УжеИмеется = Ложь;
		Для НомерСтроки = 0 По ВыборкаДетальныеЗаписи.Количество()-1 Цикл
			//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи[НомерСтроки] = Объект.Ссылка Тогда
				УжеИмеется = Истина;
				Возврат;
			Иначе
				Текст = Текст+"
				//|	- "+Строка(ВыборкаДетальныеЗаписи.Подразделение);
				|	- "+Строка(ВыборкаДетальныеЗаписи[НомерСтроки]);
			КонецЕсли;
		КонецЦикла;
		Текст = Текст+"
		|Продолжить его добавление в соответствие текущему подразделению?";
		ОписаниеОбработкаОтветаНаВопросИмеющиесяСоответствия = Новый ОписаниеОповещения("ОбработкаОтветаНаВопросИмеющиесяСоответствия",ЭтотОбъект,ЗначениеВыбора);
		ПоказатьВопрос(ОписаниеОбработкаОтветаНаВопросИмеющиесяСоответствия,Текст,РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	ДобавитьСоответствие(ЗначениеВыбора);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаНаВопросИмеющиесяСоответствия(Ответ,ЗначениеВыбора) Экспорт
	Если Ответ=КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	ДобавитьСоответствие(ЗначениеВыбора);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСоответствие(ЗначениеВыбора)
	НС = СоответствиеПодразделениямОрганизаций.Добавить();
	НС.Организация = ПолучитьВладельца(ЗначениеВыбора);
	НС.ПодразделениеОрганизации = ЗначениеВыбора;
	НС.Подразделение = Объект.Ссылка;
	ЭтотОбъект.Модифицированность=Истина;
КонецПроцедуры

&НаСервере
Функция ПолучитьВладельца(Ссылка)
	Возврат Ссылка.Владелец;	
КонецФункции

&НаСервере
Функция ОбработкаВыбораНаСервере(ЗначениеВыбора)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Соответствие.Подразделение
		|ИЗ
		|	РегистрСведений."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СоответствиеПодразделенийИПодразделенийОрганизаций КАК Соответствие
		|ГДЕ
		|	Соответствие.ПодразделениеОрганизации = &ПодразделениеОрганизации";
	Запрос.УстановитьПараметр("ПодразделениеОрганизации", ЗначениеВыбора);
	Результат = Запрос.Выполнить().Выбрать();
	Массив = Новый Массив;
	Пока Результат.Следующий() Цикл
		Массив.Добавить(Результат.Подразделение);
	КонецЦикла;
	Если СоответствиеПодразделениямОрганизаций.Выгрузить().НайтиСтроки(Новый Структура("ПодразделениеОрганизации",ЗначениеВыбора)).Количество()>0 Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат Массив;
	
КонецФункции

// Сравнивает содержимое двух таблиц значений по списку полей либо по всем полям
//
// Параметры:
// 	ТаблицаЗначений1, ТаблицаЗначений2 - сравниваемые таблицы значений
// 	РежимВключенияПолей: 
//              Истина       - сравниваются только поля из СписокПолей
//              Ложь         - сравниваются поля кроме СписокПолей
//              Неопределено.- сравниваются все поля
//
// Возвращаемое значение
//	Истина, если в таблицы по переданному списку полей (по всем полям) идентичны, иначе - Ложь
//
&НаСервере
Функция СравнитьТаблицыНаборовЗаписей(ТаблицаЗначений1, ТаблицаЗначений2) Экспорт

	Если ТипЗнч(ТаблицаЗначений1) <> Тип("ТаблицаЗначений") ИЛИ ТипЗнч(ТаблицаЗначений2) <> Тип("ТаблицаЗначений") Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Если ТаблицаЗначений1.Количество() <> ТаблицаЗначений2.Количество() Тогда
		Возврат Ложь;
	КонецЕсли; 

	Если ТаблицаЗначений1.Колонки.Количество() <> ТаблицаЗначений2.Колонки.Количество() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Проверим поля
	Для каждого Колонка Из ТаблицаЗначений1.Колонки Цикл
		Если ТаблицаЗначений2.Колонки.Найти(Колонка.Имя) = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла; 
	Для каждого Колонка Из ТаблицаЗначений2.Колонки Цикл
		Если ТаблицаЗначений1.Колонки.Найти(Колонка.Имя) = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла; 
	
	// сформируем строку индекса для оптимизации поиска по таблице значений
	СтрокаИндекса = "";
	Для каждого Колонка Из ТаблицаЗначений1.Колонки Цикл
		Если СтрокаИндекса = "" Тогда
			СтрокаИндекса = Колонка.Имя;
		Иначе
			СтрокаИндекса = СтрокаИндекса+","+Колонка.Имя;
		КонецЕсли;
	КонецЦикла;
	// добавим индекс
	ТаблицаЗначений2.Индексы.Добавить(СтрокаИндекса);
	
	// Проверим записи
	Для каждого СтрокаТаблицы Из ТаблицаЗначений1 Цикл
		СтруктураПоиска = Новый Структура;
		Для каждого Колонка Из ТаблицаЗначений1.Колонки Цикл
			СтруктураПоиска.Вставить(Колонка.Имя, СтрокаТаблицы[Колонка.Имя]);
		КонецЦикла;
		СтрокиТаблицы2 = ТаблицаЗначений2.НайтиСтроки(СтруктураПоиска);
		Если СтрокиТаблицы2.Количество() <> 1 Тогда
			Возврат Ложь;
		КонецЕсли; 
	КонецЦикла;
	
	// сформируем строку индекса для оптимизации поиска по таблице значений
	СтрокаИндекса = "";
	Для каждого Колонка Из ТаблицаЗначений2.Колонки Цикл
		Если СтрокаИндекса = "" Тогда
			СтрокаИндекса = Колонка.Имя;
		Иначе
			СтрокаИндекса = СтрокаИндекса+","+Колонка.Имя;
		КонецЕсли;
	КонецЦикла;
	// добавим индекс
	ТаблицаЗначений1.Индексы.Добавить(СтрокаИндекса);
	
	Для каждого СтрокаТаблицы Из ТаблицаЗначений2 Цикл
		СтруктураПоиска = Новый Структура;
		Для каждого Колонка Из ТаблицаЗначений2.Колонки Цикл
			СтруктураПоиска.Вставить(Колонка.Имя, СтрокаТаблицы[Колонка.Имя]);
		КонецЦикла;
		СтрокиТаблицы1 = ТаблицаЗначений1.НайтиСтроки(СтруктураПоиска);
		Если СтрокиТаблицы1.Количество() <> 1 Тогда
			Возврат Ложь;
		КонецЕсли; 
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции // СравнитьТаблицыЗначений()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
