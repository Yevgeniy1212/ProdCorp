////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
&НаКлиенте
Перем мЖирныйШрифт;             // хранит жирный шрифт
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
&наСервере
Функция ПолучитьВладельца(Ссылка)
	Возврат ссылка.владелец
КонецФункции

//Процедура ОбновитьКнопки
//
&НаКлиенте
Процедура ОбновитьКнопки()
	ОбновитьКнопкиПодразделений();	
	ОбновитьКнопкиПодразделенийОрганизаций();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКнопкиПодразделений()
	ДанныеСтроки = Элементы.ДеревоПодразделений.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено 
		 ИЛИ ТипЗнч(ДанныеСтроки.Ссылка)=Тип("СправочникСсылка.Организации") 
		 ИЛИ НЕ ЗначениеЗаполнено(ДанныеСтроки.Ссылка) Тогда
		 	Возврат;
	КонецЕсли;
	Элементы.Удалить.Заголовок = ?(Элементы.ДеревоПодразделений.ТекущиеДанные.НаУдаление,"Снять пометку удаления","Установить пометку удаления");
	Элементы.Удалить1.Заголовок = Элементы.Удалить.Заголовок;
	//Элементы.ДействиеРедактировать.Заголовок = "Редактировать подразделение " + ДанныеСтроки.Наименование;
	
КонецПроцедуры //ОбновитьКнопки

&НаКлиенте
Процедура ОбновитьКнопкиПодразделенийОрганизаций()
	ДанныеСтроки = Элементы.ДеревоПодразделенийОрганизаций.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено 
		 ИЛИ ТипЗнч(ДанныеСтроки.Ссылка)=Тип("СправочникСсылка.Организации") 
		 ИЛИ НЕ ЗначениеЗаполнено(ДанныеСтроки.Ссылка) Тогда
		 	Возврат;
	КонецЕсли;
	Элементы.УдалитьОрг.Заголовок = ?(ДанныеСтроки.НаУдаление,"Снять пометку удаления","Установить пометку удаления");
	Элементы.УдалитьОрг1.Заголовок = Элементы.УдалитьОрг.Заголовок;
	ИсключитьИзПодразделения=Неопределено;
	Если ЗначениеЗаполнено(ДанныеСтроки.Подразделения) Тогда
		ИсключитьИзПодразделения = Истина;
	Иначе
		ИсключитьИзПодразделения = Ложь;
	КонецЕсли;
	Элементы.ДеревоПодразделенийОрганизацийДействиеИсключитьИзПодразделения.Доступность	= ИсключитьИзПодразделения;
	Элементы.ДеревоПодразделенийОрганизацийДействиеРедактировать.Заголовок = "Редактировать подразделение " + ДанныеСтроки.Наименование;
КонецПроцедуры //ОбновитьКнопки

&НаКлиенте
Процедура РазвернутьДерево()
	Элементы.ДеревоПодразделений.Развернуть(ДеревоПодразделений.ПолучитьЭлементы().Получить(0).ПолучитьИдентификатор(),Истина);
	Элементы.ДеревоПодразделенийОрганизаций.Развернуть(ДеревоПодразделенийОрганизаций.ПолучитьЭлементы().Получить(0).ПолучитьИдентификатор(),Истина);
КонецПроцедуры

&НаСервере
Функция СортироватьДерево(имяДерева, ПорядокСортировкиПодразделенийОрганизаций)
	Дерево = РеквизитФормыВЗначение(ИмяДерева);
   	Дерево.Строки.Сортировать(ПорядокСортировкиПодразделенийОрганизаций,Истина);
	ЗначениеВРеквизитФормы(Дерево,ИмяДерева);	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

//Процедура ПриОткрытии
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	РазвернутьДерево();
КонецПроцедуры

&НаСервере
Процедура ОбновитьДерево(РезультатВыбора=Неопределено,ДополнительныеПараметры=Неопределено)
	Соответствия = Неопределено;
	ОбновитьДеревоПодразделений(Соответствия);
	ОбновитьДеревоПодразделенийОрганизаций(Соответствия,ПорядокСортировкиПодразделенийОрганизаций);
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоПодразделений(Соответствия=Неопределено)
	Дерево = РеквизитФормыВЗначение("ДеревоПодразделений");
	ЭлементыДерева = Дерево.Строки;
	ЭлементыДерева.Очистить();
	Если Соответствия = Неопределено Тогда
		// получим соответствия
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Соответствие.Подразделение,
			|	Соответствие.Организация,
			|	Соответствие.ПодразделениеОрганизации
			|ИЗ
			|	РегистрСведений."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СоответствиеПодразделенийИПодразделенийОрганизаций КАК Соответствие";
		Соответствия = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	// заполним список подразделений упр.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Подразделения.Ссылка КАК Ссылка,
		|	1 КАК Поле1,
		|	Подразделения.ПометкаУдаления
		|ИЗ
		|	Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПодразделений()+" КАК Подразделения
		|ИТОГИ
		|	СУММА(Поле1)
		|ПО
		|	Ссылка ИЕРАРХИЯ";
	Результат = Запрос.Выполнить();
	ВыборкаСсылка = Результат.Выбрать();
	НС = Дерево.Строки.Добавить();
	НС.Наименование = "Структура предприятия";
	Пока ВыборкаСсылка.Следующий() Цикл
		ДобавитьСтрокуВДеревоПодразделений(ВыборкаСсылка.Ссылка,Соответствия,Дерево);
	КонецЦикла;
    Дерево.Строки.Сортировать("Наименование",Истина);
	
	ЗначениеВРеквизитФормы(Дерево,"ДеревоПодразделений");
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуВДеревоПодразделений(Подразделение,Соответствия,мДерево)
	//мДерево = ДанныеФормыВЗначение(ДеревоПодразделений,Тип("ДеревоЗначений"));
	Если мДерево.Строки.НайтиСтроки(Новый Структура("Ссылка",Подразделение),Истина).Количество()=0 Тогда
		СтрокаПриемник = мДерево.Строки[0];
		Если ЗначениеЗаполнено(Подразделение.Родитель) Тогда
			СтрокаПриемник = ПолучитьСтрокуРодителя(Подразделение,Соответствия,мДерево);
		КонецЕсли;
		НС = СтрокаПриемник.Строки.Добавить();
		//НС.Картинка = ?(Подразделение.ПометкаУдаления,БиблиотекаКартинок.ЭлементПомеченНаУдаление,БиблиотекаКартинок.Элемент);
		НС.Наименование = Подразделение.Наименование;
		НС.Код = Подразделение.Код;
		НС.Ссылка = Подразделение;
		НС.НаУдаление = Подразделение.ПометкаУдаления;
		ТекстПодразделения = "";
		СтрокиПодразделенийОрганизации = Соответствия.НайтиСтроки(Новый Структура("Подразделение",Подразделение));
		Для Каждого СтрокаПО Из СтрокиПодразделенийОрганизации Цикл
			ТекстПодразделения = ТекстПодразделения + ?(ТекстПодразделения="","",";
			|")+Строка(СтрокаПО.ПодразделениеОрганизации);
		КонецЦикла;
		НС.ПодразделенияОрганизаций = ТекстПодразделения;
	КонецЕсли;
	//ЗначениеВДанныеФормы(мДерево,ДеревоПодразделений);
КонецПроцедуры

&НаСервере
Функция ПолучитьСтрокуРодителя(Элемент,Соответствия,Дерево,ПолеОписания = "ПодразделенияОрганизаций",ПолеПоиска = "Подразделение")
	Если НЕ ЗначениеЗаполнено(Элемент.Родитель) Тогда
		Возврат Дерево.Строки[0];
	КонецЕсли;
	СтрокиРодителя =  Дерево.Строки.НайтиСтроки(Новый Структура("Ссылка",Элемент.Родитель),Истина);
	Если СтрокиРодителя.Количество()>0 Тогда
		Возврат СтрокиРодителя[0];
	Иначе 
		СтрокаПриемник = ПолучитьСтрокуРодителя(Элемент.Родитель,Соответствия,Дерево);
		НС = СтрокаПриемник.Строки.Добавить();
		//НС.Картинка = ?(Элемент.Родитель.ПометкаУдаления,БиблиотекаКартинок.ЭлементПомеченНаУдаление,БиблиотекаКартинок.Элемент);
		НС.Ссылка = Элемент.Родитель;
		НС.Код = Элемент.Родитель.Код;
		НС.Наименование = Элемент.Родитель.Наименование;
		ТекстПодразделения = "";
		СтрокиПодразделенийОрганизации = Соответствия.НайтиСтроки(Новый Структура(ПолеПоиска,Элемент.Родитель));
		Для Каждого СтрокаПО Из СтрокиПодразделенийОрганизации Цикл
			ТекстПодразделения = ТекстПодразделения + ?(ТекстПодразделения="","",";
			|")+Строка(СтрокаПО.ПодразделениеОрганизации);
		КонецЦикла;
		НС[ПолеОписания] = ТекстПодразделения;
		Возврат НС;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ОбновитьДеревоПодразделенийОрганизаций(Соответствия=Неопределено,ПорядокСортировкиПодразделенийОрганизаций)
	мДерево = РеквизитФормыВЗначение("ДеревоПодразделенийОрганизаций");
	УстановитьПривилегированныйРежим(Истина);
	мДерево.Строки.Очистить();
	Если Соответствия = Неопределено Тогда
		// получим соответствия
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Соответствие.Подразделение,
			|	Соответствие.Организация,
			|	Соответствие.ПодразделениеОрганизации
			|ИЗ
			|	РегистрСведений."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СоответствиеПодразделенийИПодразделенийОрганизаций КАК Соответствие";
		Соответствия = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	// заполним список подразделений упр.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Подразделения.Ссылка КАК Ссылка,
		|	1 КАК Поле1,
		|	Подразделения.Владелец КАК Владелец,
		|	Подразделения.ПометкаУдаления
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций КАК Подразделения
		|ИТОГИ
		|	СУММА(Поле1)
		|ПО
		|	Владелец,
		|	Ссылка ИЕРАРХИЯ";
	Результат = Запрос.Выполнить();
	ВыборкаСсылка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Владелец");
	НС = мДерево.Строки.Добавить();
	НС.Наименование = "Все организации";
	Пока ВыборкаСсылка.Следующий() Цикл
		СтрокаОрганизации  = НС.Строки.Добавить();
		СтрокаОрганизации.Наименование = ВыборкаСсылка.Владелец;
		СтрокаОрганизации.Ссылка = ВыборкаСсылка.Владелец;
		СтрокаОрганизации.НаУдаление = ВыборкаСсылка.ПометкаУдаления;
		ВыборкаПодразделения = ВыборкаСсылка.Выбрать();
		Пока ВыборкаПодразделения.Следующий() Цикл
			ДобавитьСтрокуВДеревоПодразделенийОрганизаций(ВыборкаПодразделения.Ссылка,Соответствия,СтрокаОрганизации);
		КонецЦикла;
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Организации.Ссылка,
		|	ПодразделенияОрганизаций.ПометкаУдаления
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|		ПО (ПодразделенияОрганизаций.Владелец = Организации.Ссылка)
		|ГДЕ
		|	ПодразделенияОрганизаций.Ссылка ЕСТЬ NULL ";
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаОрганизации  = НС.Строки.Добавить();
		СтрокаОрганизации.Наименование = ВыборкаДетальныеЗаписи.Ссылка;
		СтрокаОрганизации.Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
		СтрокаОрганизации.НаУдаление = ВыборкаДетальныеЗаписи.ПометкаУдаления;
	КонецЦикла;
	мДерево.Строки.Сортировать(ПорядокСортировкиПодразделенийОрганизаций,Истина);
	ЗначениеВРеквизитФормы(мДерево,"ДеревоПодразделенийОрганизаций");
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуВДеревоПодразделенийОрганизаций(Подразделение,Соответствия,СтрокаОрганизации)
	УстановитьПривилегированныйРежим(Истина);
	Если СтрокаОрганизации.Строки.НайтиСтроки(Новый Структура("Ссылка",Подразделение),Истина).Количество()=0 Тогда
		СтрокаПриемник = СтрокаОрганизации;
		Если ЗначениеЗаполнено(Подразделение.Родитель) Тогда
			СтрокаПриемник = ПолучитьСтрокуРодителя(Подразделение,Соответствия,СтрокаОрганизации,"Подразделения","ПодразделениеОрганизации");
		КонецЕсли;
		НС = СтрокаПриемник.Строки.Добавить();
//		НС.Картинка = ?(Подразделение.ПометкаУдаления,БиблиотекаКартинок.ЭлементПомеченНаУдаление,БиблиотекаКартинок.Элемент);
		НС.Наименование = Подразделение.Наименование;
		НС.Код = Подразделение.Код;
		НС.Ссылка = Подразделение;
		НС.НаУдаление = Подразделение.ПометкаУдаления;
		ТекстПодразделения = "";
		СтрокиПодразделенийОрганизации = Соответствия.НайтиСтроки(Новый Структура("ПодразделениеОрганизации",Подразделение));
		Для Каждого СтрокаПО Из СтрокиПодразделенийОрганизации Цикл
			ТекстПодразделения = ТекстПодразделения + ?(ТекстПодразделения="","",";
			|")+Строка(СтрокаПО.Подразделение);
		КонецЦикла;
		НС.Подразделения = ТекстПодразделения;
		НС.НесколькоПодразделений = (СтрокиПодразделенийОрганизации.Количество()>1);
	КонецЕсли;                                        
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

//Процедура ВключитьВСтруктурноеПодразделение
//
&НаКлиенте
Процедура ВключитьВСтруктурноеПодразделение(Кнопка)
	ДанныеСтроки	= Элементы.ДеревоПодразделенийОрганизаций.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТипЗнч(ДанныеСтроки.Ссылка)<>Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		Возврат;
	КонецЕсли;
	ОписаниеОбработкаВключенияВСтруктурноеПодразделение = Новый ОписаниеОповещения("ОбработкаВключенияВСтруктурноеПодразделение",ЭтотОбъект,ДанныеСтроки.Ссылка);	
	ОткрытьФорму("Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПодразделений()+".ФормаВыбора",,ЭтотОбъект,,,,ОписаниеОбработкаВключенияВСтруктурноеПодразделение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВключенияВСтруктурноеПодразделение(Результат,ДанныеСтроки) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ВключитьВСтруктурноеПодразделениеЗаписьВРегистры(ДанныеСтроки, Результат);	
	ОбновитьКнопки();
	ОбновитьДерево();
	РазвернутьДерево();
КонецПроцедуры

&НаСервере
Процедура ВключитьВСтруктурноеПодразделениеЗаписьВРегистры(Ссылка, Результат)
	НаборЗаписей = РегистрыСведений[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СоответствиеПодразделенийИПодразделенийОрганизаций"].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Ссылка.Владелец);
	НаборЗаписей.Отбор.ПодразделениеОрганизации.Установить(Ссылка);
	НаборЗаписей.Отбор.Подразделение.Установить(Результат);
	Строка = НаборЗаписей.Добавить();
	Строка.Подразделение			= Результат;
	Строка.Организация				= Ссылка.Владелец;
	Строка.ПодразделениеОрганизации	= Ссылка;
	НаборЗаписей.Записать();
КонецПроцедуры //ВключитьВСтруктурноеПодразделение

//Процедура ИсключитьИзСтруктурногоПодразделения
//
&НаКлиенте
Процедура ИсключитьИзСтруктурногоПодразделения(Кнопка)
	ДанныеСтроки	= Элементы.ДеревоПодразделенийОрганизаций.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТипЗнч(ДанныеСтроки.Ссылка)<>Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		Возврат;
	КонецЕсли;
	ИсключитьИзСтруктурногоПодразделенияЗаписьВРегистры(ДанныеСтроки.Ссылка);
	ОбновитьКнопки();
	ОбновитьДерево();
	// Необходимо обновлять все строки, иначе табличное поле не изменит высоту ячейки
	//Элементы.Подразделения.ОбновитьСтроки();
	//Элементы.ПодразделенияОрганизаций.ОбновитьСтроки();
	РазвернутьДерево();
КонецПроцедуры //ИсключитьИзСтруктурногоПодразделения

&НаСервере
Процедура ИсключитьИзСтруктурногоПодразделенияЗаписьВРегистры(Ссылка)
	НаборЗаписей = РегистрыСведений[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СоответствиеПодразделенийИПодразделенийОрганизаций"].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Ссылка.Владелец);
	НаборЗаписей.Отбор.ПодразделениеОрганизации.Установить(Ссылка);
	НаборЗаписей.Записать();
КонецПроцедуры

//Процедура СписокОрганизаций
//
&НаКлиенте
Процедура СписокОрганизаций(Команда)
	ОткрытьФорму("Справочник.Организации.ФормаСписка");
КонецПроцедуры

//Процедура КоманднаяПанельПодразделенияОрганизацийУпорядочитьПоКод
//
&НаКлиенте
Процедура КоманднаяПанельПодразделенияОрганизацийУпорядочитьПоКод(Кнопка)
	Элементы.ДеревоПодразделенийОрганизацийУпорядочитьПоКод.Пометка = Истина;
	Элементы.ДеревоПодразделенийОрганизацийУпорядочитьПоНаименование.Пометка = Ложь;
	ПорядокСортировкиПодразделенийОрганизаций = "Код";
	СортироватьДерево("ДеревоПодразделенийОрганизаций",ПорядокСортировкиПодразделенийОрганизаций);
	РазвернутьДерево();
КонецПроцедуры


//Процедура КоманднаяПанельПодразделенияОрганизацийУпорядочитьПоНаименование
//
&НаКлиенте
Процедура КоманднаяПанельПодразделенияОрганизацийУпорядочитьПоНаименование(Кнопка)
	Элементы.ДеревоПодразделенийОрганизацийУпорядочитьПоКод.Пометка = Ложь;
	Элементы.ДеревоПодразделенийОрганизацийУпорядочитьПоНаименование.Пометка = Истина;
	ПорядокСортировкиПодразделенийОрганизаций = "Наименование";	
   	//ДеревоПодразделенийОрганизаций.Строки.Сортировать(ПорядокСортировкиПодразделенийОрганизаций,Истина);
	СортироватьДерево("ДеревоПодразделенийОрганизаций",ПорядокСортировкиПодразделенийОрганизаций);
	РазвернутьДерево();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Подразделения

//Процедура ПодразделенияПриАктивизацииСтроки
//
&НаКлиенте
Процедура ДеревоПодразделенийПриАктивизацииСтроки(Элемент)
	Кнопка = Элементы.ДействиеРедактировать;
	Кнопка.Заголовок = "Редактировать";
	ДанныеСтроки = Элемент.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Кнопка.Заголовок = "Редактировать " + ДанныеСтроки.Наименование;
	мКнопка = Элементы.Удалить;
	//мКнопкаЗаголовок = ?(ДанныеСтроки.Ссылка.ПометкаУдаления,"Снять пометку удаления","Установить пометку удаления");
	//мКнопкаЗаголовок = ?(ПолучитьМеткуУдаления(ДанныеСтроки.Ссылка),"Снять пометку удаления","Установить пометку удаления");
КонецПроцедуры


//Процедура ПодразделенияПроверкаПеретаскивания
//
&НаКлиенте
Процедура ДеревоПодразделенийПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = ТипЗнч(ПараметрыПеретаскивания.Значение) <> Тип("СправочникСсылка.ПодразделенияОрганизаций");
КонецПроцедуры

//Процедура ПодразделенияПеретаскивание
//
&НаКлиенте
Процедура ДеревоПодразделенийПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	//СтандартнаяОбработка = Ложь;
	ДеревоПодразделенийПеретаскиваниеНаСервере(ПараметрыПеретаскивания.Значение, СтандартнаяОбработка, Строка);
	ОбновитьКнопки();
	РазвернутьДерево();
КонецПроцедуры

&НаСервере
Процедура ДеревоПодразделенийПеретаскиваниеНаСервере(Значение, СтандартнаяОбработка, Строка)
	Ссылка = ДеревоПодразделений.НайтиПоИдентификатору(Строка).Ссылка;
	Если Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	НаборЗаписей = РегистрыСведений[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СоответствиеПодразделенийИПодразделенийОрганизаций"].СоздатьНаборЗаписей();
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Владелец КАК Организация
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Ссылка = &ПодразделениеОрганизации";
	Запрос.УстановитьПараметр("ПодразделениеОрганизации",	Значение.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
	НаборЗаписей.Отбор.ПодразделениеОрганизации.Установить(Значение);
	НаборЗаписей.Отбор.Подразделение.Установить(Ссылка);
	
	Запись = НаборЗаписей.Добавить();
	Запись.Организация				= Выборка.Организация;
	Запись.ПодразделениеОрганизации	= Значение;
	Запись.Подразделение			= Ссылка;
	
	НаборЗаписей.Записать();
	
	ОбновитьДерево();

	// Необходимо обновлять все строки, иначе табличное поле не изменит высоту ячейки
	//Элементы.Подразделения.ОбновитьСтроки();
	//Элементы.ПодразделенияОрганизаций.ОбновитьСтроки(ПараметрыПеретаскивания.Значение);
КонецПроцедуры //ПодразделенияПеретаскивание

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ПодразделенияОрганизаций

//Процедура ПодразделенияОрганизацийПриАктивизацииСтроки
//
&НаКлиенте
Процедура ДеревоПодразделенийОрганизацийПриАктивизацииСтроки(Элемент)
	ОбновитьКнопки();
КонецПроцедуры

//Процедура ПодразделенияОрганизацийНачалоПеретаскивания
//
&НаКлиенте
Процедура ДеревоПодразделенийОрганизацийНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	Выполнение = ЗначениеЗаполнено(Элемент.ТекущиеДанные.Ссылка) 
	И ТипЗнч(Элемент.ТекущиеДанные.Ссылка)=Тип("СправочникСсылка.ПодразделенияОрганизаций");
	Если Выполнение Тогда
		ПараметрыПеретаскивания.Значение = Элемент.ТекущиеДанные.Ссылка;
	
	КонецЕсли;
	//СтандартнаяОбработка = ЗначениеЗаполнено(ПараметрыПеретаскивания.Значение.Ссылка)                                                             Отдел оптовых продаж
	//И ТипЗнч(ПараметрыПеретаскивания.Значение.Ссылка)=Тип("СправочникСсылка.ПодразделенияОрганизаций");
	//Если СтандартнаяОбработка Тогда
	//	ПараметрыПеретаскивания.Значение = ПараметрыПеретаскивания.Значение.Ссылка;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодразделенийВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Элементы.ДеревоПодразделений.ТекущиеДанные.Ссылка) Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ",Элементы.ДеревоПодразделений.ТекущиеДанные.Ссылка);
		ОписаниеОбновитьДанныеСоответствийПодразделения = Новый ОписаниеОповещения("ОбновитьДерево",ЭтотОбъект);
		ОткрытьФорму("Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПодразделений()+".ФормаОбъекта",ПараметрыФормы,Элемент,,,,ОписаниеОбновитьДанныеСоответствийПодразделения);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеСоответствийПодразделения(РезультатВыбора=Неопределено,ДополнительныеПараметры=Неопределено)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Соответствие.Подразделение,
		|	Соответствие.Организация,
		|	Соответствие.ПодразделениеОрганизации
		|ИЗ
		|	РегистрСведений."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СоответствиеПодразделенийИПодразделенийОрганизаций КАК Соответствие";

	Соответствия = Запрос.Выполнить().Выгрузить();
	Дерево = РеквизитФормыВЗначение("ДеревоПодразделений");
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		ОбновитьДанныеСоответствий(СтрокаДерева,Соответствия,"ПодразделенияОрганизаций");
	КонецЦикла;
	ЗначениеВРеквизитФормы(Дерево,"ДеревоПодразделений");
	Дерево = РеквизитФормыВЗначение("ДеревоПодразделенийОрганизаций");
 	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		ОбновитьДанныеСоответствий(СтрокаДерева,Соответствия,"Подразделения");
	КонецЦикла;
	ЗначениеВРеквизитФормы(Дерево,"ДеревоПодразделенийОрганизаций");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеСоответствий(СтрокаДерева,Соответствия,Поле)
	Если ЗначениеЗаполнено(СтрокаДерева.Ссылка) И ТипЗнч(СтрокаДерева.Ссылка)<>Тип("СправочникСсылка.Организации") Тогда
		ТекстПодразделения = "";
		СтрокиСоответствия = Соответствия.НайтиСтроки(Новый Структура(?(ТипЗнч(СтрокаДерева.Ссылка)=фин_ОбщегоНазначенияВызовСервераПовтИсп.ТипСправочникУправленческихПодразделений(),"Подразделение","ПодразделениеОрганизации"),СтрокаДерева.Ссылка));
		Для Каждого СтрокаПО Из СтрокиСоответствия Цикл
			ТекстПодразделения = ТекстПодразделения + ?(ТекстПодразделения="","",";
			|")+Строка(СтрокаПО[?(ТипЗнч(СтрокаДерева.Ссылка)<>фин_ОбщегоНазначенияВызовСервераПовтИсп.ТипСправочникУправленческихПодразделений(),"Подразделение","ПодразделениеОрганизации")]);
		КонецЦикла;
		СтрокаДерева[Поле] = ТекстПодразделения;
		Если ТипЗнч(СтрокаДерева.Ссылка)=Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
			СтрокаДерева.НесколькоПодразделений = СтрокиСоответствия.Количество()>1;
		КонецЕсли;
	Иначе
		СтрокаДерева[Поле]="";
	КонецЕсли;
	Для Каждого СтрокаДочерняя Из СтрокаДерева.Строки Цикл
		ОбновитьДанныеСоответствий(СтрокаДочерняя,Соответствия,Поле);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодразделенийПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	ОписаниеОбработкаОтветаНаВопросПометкаУдаления = Новый ОписаниеОповещения("ОбработкаОтветаНаВопросПометкаУдаления",ЭтотОбъект,Элемент.ТекущиеДанные.Ссылка);
	ПоказатьВопрос(ОписаниеОбработкаОтветаНаВопросПометкаУдаления,?(ПолучитьПометкуУдаления(Элемент.ТекущиеДанные.Ссылка)=Ложь,"Пометить элемент на удаление?","Снять с элемента пометку удаления?"),РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&наСервере
Функция ПолучитьПометкуУдаления(Ссылка)
	Возврат Ссылка.ПометкаУдаления
КонецФункции

&НаСервере
Функция УстановкаПометкиУдаления(Ссылка)
	Попытка
		ОбъектЭлемент = Ссылка.ПолучитьОбъект();
		ОбъектЭлемент.УстановитьПометкуУдаления(НЕ ОбъектЭлемент.ПометкаУдаления);
		ОбъектЭлемент.Записать();
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура ДеревоПодразделенийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	Если НЕ ПравоДоступаКСправочникам() Тогда
		ПоказатьПредупреждение(,"Не достаточно прав для создания");
		Возврат;
	КонецЕсли;
	ДеревоПодразделенийПередНачаломДобавленияНаСервере(Копирование, Родитель);
	Отказ = Истина;
	Если НЕ Копирование Тогда
		ЗначенияЗаполнения = Новый Структура();
		Если Родитель<>Неопределено Тогда
			ЗначенияЗаполнения.Вставить("Родитель",Родитель.Ссылка);
		КонецЕсли;
		СтруктураПараметров = Новый Структура("ЗначенияЗаполнения",ЗначенияЗаполнения);
	Иначе
		СтруктураПараметров = Новый Структура("ЗначениеКопирования",Элементы.ДеревоПодразделений.ТекущиеДанные.Ссылка);
	КонецЕсли;
	ОписаниеОбновитьДанныеСоответствийПодразделения = Новый ОписаниеОповещения("ОбновитьДерево",ЭтотОбъект);
	ОткрытьФорму("Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПодразделений()+".ФормаОбъекта",СтруктураПараметров,ЭтотОбъект,,,,ОписаниеОбновитьДанныеСоответствийПодразделения);
КонецПроцедуры


&НаСервере
Функция ПравоДоступаКСправочникам()
	Если Не ПравоДоступа("Изменение",Метаданные.Справочники[фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПодразделений()]) Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;	
КонецФункции

&НаСервере
Процедура ДеревоПодразделенийПередНачаломДобавленияНаСервере(Копирование, Родитель)
КонецПроцедуры


&НаКлиенте
Процедура КоманднаяПанельПодразделенияДействиеРедактировать(Кнопка)
	Если Элементы.ДеревоПодразделений.ТекущиеДанные<>Неопределено Тогда
		СсылкаНаЭлемент = Элементы.ДеревоПодразделений.ТекущиеДанные.Ссылка;
		Если ЗначениеЗаполнено(СсылкаНаЭлемент) Тогда
			ОписаниеОбновитьДанныеСоответствийПодразделения = Новый ОписаниеОповещения("ОбновитьДерево",ЭтотОбъект);
			ПоказатьЗначение(ОписаниеОбновитьДанныеСоответствийПодразделения,Элементы.ДеревоПодразделений.ТекущиеДанные.Ссылка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура КоманднаяПанельПодразделенияПереместитьВГруппу(Кнопка)
	Если Элементы.ДеревоПодразделений.ТекущиеДанные<>Неопределено Тогда
		СсылкаНаЭлемент = Элементы.ДеревоПодразделений.ТекущиеДанные.Ссылка;
		Если ЗначениеЗаполнено(СсылкаНаЭлемент) Тогда
			ОписаниеОбработкаПеремещенияВГруппу = Новый ОписаниеОповещения("ОбработкаПеремещенияВГруппу",ЭтотОбъект,Элементы.ДеревоПодразделений.ТекущиеДанные.ПолучитьИдентификатор());
			ОткрытьФорму("Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПодразделений()+".ФормаВыбораГруппы",,ЭтотОбъект,,,,ОписаниеОбработкаПеремещенияВГруппу,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПеремещенияВГруппу(Результат,Идентификатор) Экспорт
	Если Результат<>Неопределено Тогда
		КоманднаяПанельПодразделенияДействие2НаСервере(ДеревоПодразделений.НайтиПоИдентификатору(Идентификатор).Ссылка,Результат, Идентификатор,ПорядокСортировкиПодразделенийОрганизаций);
		РазвернутьДерево();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура КоманднаяПанельПодразделенияДействие2НаСервере(СсылкаНаЭлемент,Результат,ИдентификаторСтроки,ПорядокСортировкиПодразделенийОрганизаций)
	ОбъектСправочник = СсылкаНаЭлемент.ПолучитьОбъект();
	ОбъектСправочник.Родитель = Результат;
	
	Попытка
		ОбъектСправочник.Записать();
		ОбновитьДерево();
	Исключение
	КонецПопытки;	
КонецПроцедуры

&НаСервере
Функция ПеренестиСтроку(СтрокаПереносимая,Получатель)
	НС = Получатель.Строки.Добавить();
	ЗаполнитьЗначенияСвойств(НС,СтрокаПереносимая);
	СтрокиКПереносу = Новый Массив;
	Для Каждого СтрокаДочерняя Из СтрокаПереносимая.Строки Цикл
		СтрокиКПереносу.Добавить(СтрокаДочерняя);
	КонецЦикла;
	Для Каждого СтрокаДочерняя Из СтрокиКПереносу Цикл
		ПеренестиСтроку(СтрокаДочерняя,НС);
	КонецЦикла;
	СтрокаПереносимая.Родитель.Строки.Удалить(СтрокаПереносимая);
	Возврат НС;
КонецФункции


&НаКлиенте
Процедура ДеревоПодразделенийОрганизацийВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Элементы.ДеревоПодразделенийОрганизаций.ТекущиеДанные.Ссылка) Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ",Элементы.ДеревоПодразделенийОрганизаций.ТекущиеДанные.Ссылка);
		ОписаниеОбновитьДанныеСоответствийПодразделения = Новый ОписаниеОповещения("ОбновитьДерево",ЭтотОбъект);
		Если ТипЗнч(Элементы.ДеревоПодразделенийОрганизаций.ТекущиеДанные.Ссылка)=Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
			ОткрытьФорму("Справочник.ПодразделенияОрганизаций.ФормаОбъекта",ПараметрыФормы,Элемент,,,,ОписаниеОбновитьДанныеСоответствийПодразделения);
		Иначе
			ОткрытьФорму("Справочник.Организации.ФормаОбъекта",ПараметрыФормы,Элемент,,,,ОписаниеОбновитьДанныеСоответствийПодразделения);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодразделенийОрганизацийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	Если Элемент.ТекущиеДанные.Ссылка=Неопределено Тогда
		ПоказатьПредупреждение(,"Не выбрана организация!");
		Возврат;
	КонецЕсли;
	Если ТипЗнч(Элемент.ТекущиеДанные.Ссылка)=Тип("СправочникСсылка.Организации") Тогда
		ОрганизацияТекущая = Элемент.ТекущиеДанные.Ссылка;
	Иначе
		ОрганизацияТекущая = ПолучитьВладельца(Элемент.ТекущиеДанные.Ссылка);	
	КонецЕсли;
	Если НЕ Копирование Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Родитель",Родитель);
		ПараметрыФормы.Вставить("Владелец",ОрганизацияТекущая);
		СтруктураПараметров = Новый Структура("ЗначенияЗаполнения",ПараметрыФормы);
	Иначе
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ЗначениеКопирования",Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;
	ОписаниеОбновитьДанныеСоответствийПодразделения = Новый ОписаниеОповещения("ОбновитьДерево",ЭтотОбъект);
	ОткрытьФорму("Справочник.ПодразделенияОрганизаций.ФормаОбъекта",СтруктураПараметров,ЭтотОбъект,,,,ОписаниеОбновитьДанныеСоответствийПодразделения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельПодразделенияОрганизацийПереместитьПодразделениеОрганизации(Кнопка)
	Если Элементы.ДеревоПодразделенийОрганизаций.ТекущиеДанные<>Неопределено Тогда
		Если ТипЗнч(Элементы.ДеревоПодразделенийОрганизаций.ТекущиеДанные.Ссылка)<>Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
			Возврат;
		КонецЕсли;
		СтрокаОрганизации = ПолучитьРодительПоСсылке(Элементы.ДеревоПодразделенийОрганизаций.ТекущиеДанные.Ссылка);
		СсылкаНаЭлемент = Элементы.ДеревоПодразделенийОрганизаций.ТекущиеДанные.Ссылка;
		Если ЗначениеЗаполнено(СсылкаНаЭлемент) Тогда
			ОписаниеОбработкаВыбораПодразделенияДляПеремещения = Новый ОписаниеОповещения("ОбработкаВыбораПодразделенияДляПеремещения",ЭтотОбъект,СсылкаНаЭлемент);
			ОткрытьФорму("Справочник.ПодразделенияОрганизаций.ФормаВыбораГруппы",,ЭтотОбъект,,,,ОписаниеОбработкаВыбораПодразделенияДляПеремещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораПодразделенияДляПеремещения(Результат,СсылкаНаЭлемент) Экспорт
	Если Результат<>Неопределено Тогда
		КоманднаяПанельПодразделенияОрганизацийПереместитьПодразделениеОрганизацииНаСервере(СсылкаНаЭлемент,Результат,ПорядокСортировкиПодразделенийОрганизаций);
		ОбновитьДерево();
		РазвернутьДерево();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура КоманднаяПанельПодразделенияОрганизацийПереместитьПодразделениеОрганизацииНаСервере(СсылкаНаЭлемент,Результат,ПорядокСортировкиПодразделенийОрганизаций)
	ОбъектСправочник = СсылкаНаЭлемент.ПолучитьОбъект();
	ОбъектСправочник.Родитель = Результат;
	//ОбъектСправочник.Владелец = Результат.Владелец;
	Попытка
		ОбъектСправочник.Записать();
		
		//СтрокаПриемник = ?(Результат.Пустая(),СтрокаОрганизации,ДеревоПодразделенийОрганизаций.Строки.НайтиСтроки(Новый Структура("Ссылка",Результат),Истина)[0]);
		//Элементы.ДеревоПодразделенийОрганизаций.ТекущаяСтрока = ПеренестиСтроку(Элементы.ДеревоПодразделенийОрганизаций.ТекущаяСтрока,СтрокаПриемник);
		//ДеревоПодразделенийОрганизаций.Строки.Сортировать(ПорядокСортировкиПодразделенийОрганизаций,Истина);
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ПолучитьРодительПоСсылке(Ссылка)
	Возврат Ссылка.Родитель;	
КонецФункции


&НаКлиенте
Процедура КоманднаяПанельПодразделенияОрганизацийОбновить(Кнопка)
	КоманднаяПанельПодразделенияОрганизацийОбновитьНаСервере(ПорядокСортировкиПодразделенийОрганизаций);
	РазвернутьДерево();
КонецПроцедуры

&НаСервере
Процедура КоманднаяПанельПодразделенияОрганизацийОбновитьНаСервере(ПорядокСортировкиПодразделенийОрганизаций)
	ОбновитьДеревоПодразделенийОрганизаций(,ПорядокСортировкиПодразделенийОрганизаций);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодразделенийОрганизацийПередУдалением(Элемент, Отказ)
	ОписаниеОбработкаОтветаНаВопросПометкаУдаления = Новый ОписаниеОповещения("ОбработкаОтветаНаВопросПометкаУдаления",ЭтотОбъект,Элемент.ТекущиеДанные.Ссылка);
	ПоказатьВопрос(ОписаниеОбработкаОтветаНаВопросПометкаУдаления,?(ПолучитьПометкуУдаления(Элемент.ТекущиеДанные.Ссылка)=Ложь,"Пометить элемент на удаление?","Снять с элемента пометку удаления?"),РежимДиалогаВопрос.ДаНет);
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаНаВопросПометкаУдаления(Ответ,ДополнительныеПараметры) Экспорт
	Если Ответ=КодВозвратаДиалога.Да Тогда
		Если УстановкаПометкиУдаления(ДополнительныеПараметры) Тогда
			ОбновитьДерево();
			РазвернутьДерево();
			ОбновитьКнопки();
			//ЭтотОбъект.ТекущийЭлемент = Элемент;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ФормаПодразделенияЗаписана" Тогда
		//ОбновитьДанныеСоответствийПодразделения();	
		ОбновитьДерево();
		РазвернутьДерево();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодразделенийПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	ДеревоПодразделенийВыбор(,,,);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодразделенийОрганизацийПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	ДеревоПодразделенийОрганизацийВыбор(,,,)
КонецПроцедуры

&НаКлиенте
Процедура ФормированиеСпискаУправленческихПодразделенийПоРегламентированным(Команда)
	ОткрытьФорму("Обработка.фин_ФормированиеСпискаУправленческихПодразделенийПоРегламентированным.Форма");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПорядокСортировкиПодразделенийОрганизаций = "Наименование";
	ОбновитьДерево();	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

//мЖирныйШрифт = Новый Шрифт(ШрифтыСтиля.ШрифтТекста,,, Истина);