
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		НовыйЭлемент = Объект.Пользователи.Добавить();
		НовыйЭлемент.Пользователь = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ТекущийПользователь");
		НовыйЭлемент.ПравоИзменения = Истина;
	КонецЕсли;
	ДоступныеНастройки = Справочники.общ_СохраненныеНастройки.ПолучитьСписокДоступныхВариантов(Объект.Ссылка.НастраиваемыйОбъект, фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ТекущийПользователь"));
	Элемент = ДоступныеНастройки.НайтиПоЗначению(Объект.Ссылка);
	
	Доступность = (Объект.ТипНастройки = Перечисления.ТипыНастроек.НастройкиОтчета ИЛИ Объект.ТипНастройки = Перечисления.ТипыНастроек.ПроизвольныеНастройки) И (Элемент <> Неопределено И Элемент.Пометка ИЛИ Объект.Ссылка.Пустая() ИЛИ РольДоступна("ПолныеПрава"));
	Элементы.Наименование.ТолькоПросмотр = Не Доступность;
	Элементы.Описание.ТолькоПросмотр = Не Доступность;
	Элементы.Пользователи.ТолькоПросмотр = Не Доступность;
КонецПроцедуры

// Заполняет отбор компоновщика по отбору построителя

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Элементы.Пользователи.ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаСТекущимПользователем = ПолучитьСтрокуСТекущимПользователем();
	
	Если ТипЗнч(ВладелецФормы) = Тип("Форма") И (СтрокаСТекущимПользователем = Неопределено) Тогда
		// Если вариант отчета открыт из формы отчета - нельзя удалять себя из списка пользователей
		СпроситьДобавитьТекущегоПользователяВСписок(Отказ, "Текущий пользователь должен присутствовать в списке пользователей. Добавить?");
	ИначеЕсли СтрокаСТекущимПользователем <> Неопределено И СтрокаСТекущимПользователем.ПравоИзменения Тогда
		// Право изменения как было так и осталось
		Возврат;
	ИначеЕсли фин_ОбщегоНазначенияСервер.ПроверкаРольДоступна("ПолныеПрава") И Объект.Пользователи.Количество() = 0 Тогда
		// Пользователь с полными правами удалил всех пользователей
		СпроситьДобавитьТекущегоПользователяВСписок(Отказ, "Должен присутствовать по крайней мере один пользователь. Добавить текущего?");
	ИначеЕсли фин_ОбщегоНазначенияСервер.ПроверкаРольДоступна("ПолныеПрава") Тогда
		// Пользователь с полными правами, но без права изменения
		Возврат;
	ИначеЕсли Не фин_ОбщегоНазначенияСервер.ПроверкаРольДоступна("ПолныеПрава") И СтрокаСТекущимПользователем = Неопределено Тогда
		// Пользователь удалил себя из пользователей
		СпроситьДобавитьТекущегоПользователяВСписок(Отказ, "Текущий пользователь удален из списка пользователей. Добавить текущего пользователя с правом измения варианта отчета?");
	ИначеЕсли Не фин_ОбщегоНазначенияСервер.ПроверкаРольДоступна("ПолныеПрава") И Не СтрокаСТекущимПользователем.ПравоИзменения Тогда
		// Пользователь лишил себя права изменения. Заставим его вернуть себе это право
		СпроситьДобавитьТекущегоПользователяВСписок(Отказ, "Вы лишили себя изменения варианта отчета. Установить право для строки " + СтрокаСТекущимПользователем.Пользователь + "?", СтрокаСТекущимПользователем);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СпроситьДобавитьТекущегоПользователяВСписок(Отказ, ТекстВопроса, Строка = Неопределено)
	
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Если Строка = Неопределено Тогда
			Строка = Объект.Пользователи.Добавить();
			Строка.Пользователь = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ТекущийПользователь");
		КонецЕсли;
		Строка.ПравоИзменения = Истина;
	КонецЕсли;
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтрокуСТекущимПользователем()
	
	Для каждого Строка Из Объект.Пользователи Цикл
		НайденнаяСтрока = Неопределено;
		Если ТипЗнч(Строка.Пользователь) = Тип("СправочникСсылка.Пользователи")
		   И Строка.Пользователь = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ТекущийПользователь") Тогда
			Если Строка.ПравоИзменения Тогда
				Возврат Строка;
			Иначе
				НайденнаяСтрока = Строка;
			КонецЕсли;
		ИначеЕсли ТипЗнч(Строка.Пользователь) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
			Если Строка.Пользователь = ПредопределенноеЗначение("Справочник.ГруппыПользователей.ВсеПользователи") Тогда
				Возврат Строка;
			Иначе
				Для каждого ПользовательГруппы Из Строка.Пользователь.ПользователиГруппы Цикл
					Если ПользовательГруппы.Пользователь = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ТекущийПользователь") Тогда
						Если Строка.ПравоИзменения Тогда
							Возврат Строка;
						Иначе
							НайденнаяСтрока = Строка;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат НайденнаяСтрока;
	
КонецФункции
