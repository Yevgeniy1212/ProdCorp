////////////////////////////////////////////////////////////////////////////////
//ОБРАБОТЧИКИ СОБЫТИЙ  ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭСФКлиентСерверПереопределяемый.УстановитьЭлементОтбора(
	    ИсторияИзмененийГСВС.Отбор, 
	    "НоменклатураГСВС", 
	    Объект.Ссылка, 
	    ВидСравненияКомпоновкиДанных.Равно, 
	    "Номенклатура ГСВС", 
	    Истина ,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный
	);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьЭлементов();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьЗапись(Команда)
	
	ЗначенияЗаполнения = Новый Структура("НоменклатураГСВС", Объект.Ссылка);
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ОткрытьФорму("РегистрСведений.СведенияОНоменклатуреГСВС.ФормаЗаписи", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Процедура СкопироватьЗапись(Команда)
	
	ТекущиеДанные = Элементы.ИсторияИзмененийГСВС.ТекущиеДанные;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("НоменклатураГСВС"					, ТекущиеДанные.НоменклатураГСВС);
	ЗначенияЗаполнения.Вставить("ДействиеЗаписиНачальнаяДата"			, ТекущиеДанные.ДействиеЗаписиНачальнаяДата);
	ЗначенияЗаполнения.Вставить("ДействиеЗаписиКонечнаяДата"					, ТекущиеДанные.ДействиеЗаписиКонечнаяДата);
	ЗначенияЗаполнения.Вставить("ПолныйКодГСВС"		, ТекущиеДанные.ПолныйКодГСВС);
	ЗначенияЗаполнения.Вставить("ПризнакАктивности", ТекущиеДанные.ПризнакАктивности);
	
	ЗначенияЗаполнения.Вставить("ПризнакПеречняИзьятий", ТекущиеДанные.ПризнакПеречняИзьятий);
	ЗначенияЗаполнения.Вставить("ПризнакТовараДвойногоНазначения", ТекущиеДанные.ПризнакТовараДвойногоНазначения);
	ЗначенияЗаполнения.Вставить("ПризнакУникальногоТовара", ТекущиеДанные.ПризнакУникальногоТовара);
	
	ЗначенияЗаполнения.Вставить("ПризнакУчетаНаВиртуальномСкладе", ТекущиеДанные.ПризнакУчетаНаВиртуальномСкладе);
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ОткрытьФорму("РегистрСведений.СведенияОНоменклатуреГСВС.ФормаЗаписи", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
//ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ИсторияИзмененийГСВСПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
						
		ТекстВопроса = НСтр("ru = 'Перед редактированием данных необходимо записать элемент.
		|Записать?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаЗаписатьВФорме", ЭтаФорма, Параметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
		Отказ = Истина;

	Иначе 
		
		ЗначенияЗаполнения = Новый Структура("НоменклатураГСВС", Объект.Ссылка);
		Параметр = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТипКодаГСВСПриИзменении(Элемент)
	УстановитьВидимостьЭлементов();
	Объект.СодержитДополнительныйУровень = Ложь;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗаписатьВФорме(Результат, Параметры) Экспорт 
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		// записываем объет
		Если Записать() Тогда
			ЭСФКлиентСерверПереопределяемый.УстановитьЭлементОтбора(
		        ИсторияИзмененийГСВС.Отбор, 
		        "НоменклатураГСВС", 
		        Объект.Ссылка, 
		        ВидСравненияКомпоновкиДанных.Равно, 
		        "Номенклатура ГСВС", 
		        Истина
		    );        
			ЗначенияЗаполнения = Новый Структура("НоменклатураГСВС", Объект.Ссылка);
			ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
			ОткрытьФорму("РегистрСведений.СведенияОНоменклатуреГСВС.ФормаЗаписи", ПараметрыФормы, ЭтаФорма);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимостьЭлементов()
	Если Объект.ТипКодаГСВС = ПредопределенноеЗначение("Перечисление.ТипыКодовГСВС.ТНВЭД") Тогда
		Элементы.СодержитДополнительныйУровень.Видимость = Истина;
	Иначе
		Элементы.СодержитДополнительныйУровень.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

