
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.Соответствия.Видимость = Объект.ВариантРасчета = Перечисления.фин_ВариантыАвтоматическогоРасчетаРазрезовБюджетирования.Соответствие;
	Элементы.ПолеИсходногоРазреза.Видимость = Объект.ВариантРасчета = Перечисления.фин_ВариантыАвтоматическогоРасчетаРазрезовБюджетирования.УказанноеПоле;
	РазрезИсходный = фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(Объект.ИсходныйРазрез);
	РазрезКонечный = фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(Объект.РассчитываемыйРазрез);
	Для Каждого ЭлементСписка Из фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПолучитьПолныйСписокРазрезов() Цикл
		СписокРазрезов.Добавить(фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(ЭлементСписка.Значение));
	КонецЦикла;
	ЗаполнитьСписокРеквизитов();
КонецПроцедуры

&НаКлиенте
Процедура ВариантРасчетаПриИзменении(Элемент)
	Элементы.Соответствия.Видимость = Объект.ВариантРасчета = ПредопределенноеЗначение("Перечисление.фин_ВариантыАвтоматическогоРасчетаРазрезовБюджетирования.Соответствие");
	Элементы.ПолеИсходногоРазреза.Видимость = Объект.ВариантРасчета = ПредопределенноеЗначение("Перечисление.фин_ВариантыАвтоматическогоРасчетаРазрезовБюджетирования.УказанноеПоле");
	Если НЕ Объект.ВариантРасчета = ПредопределенноеЗначение("Перечисление.фин_ВариантыАвтоматическогоРасчетаРазрезовБюджетирования.Соответствие") Тогда
		Объект.Соответствия.Очистить();
	КонецЕсли;
	Если НЕ Объект.ВариантРасчета = ПредопределенноеЗначение("Перечисление.фин_ВариантыАвтоматическогоРасчетаРазрезовБюджетирования.УказанноеПоле") Тогда
		Объект.ПолеИсходногоРазреза = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РассчитываемыйРазрезПриИзменении(Элемент)
	РассчитываемыйРазрезПриИзмененииНаСервере();
	Модифицированность=Истина;
КонецПроцедуры

&НаСервере
Процедура РассчитываемыйРазрезПриИзмененииНаСервере()
	Объект.РассчитываемыйРазрез= фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИзмерениеПоРазрезу(РазрезКонечный);
	Если Объект.ВариантРасчета = Перечисления.фин_ВариантыАвтоматическогоРасчетаРазрезовБюджетирования.Соответствие Тогда
		Для Каждого СтрокаСоответствие Из Объект.Соответствия Цикл
			СтрокаСоответствие.ИсходноеЗначение = РазрезИсходный.ТипЗначения.ПривестиЗначение(СтрокаСоответствие.ИсходноеЗначение);
		КонецЦикла;
	КонецЕсли;
	ЗаполнитьСписокРеквизитов();
	Если Объект.ВариантРасчета = Перечисления.фин_ВариантыАвтоматическогоРасчетаРазрезовБюджетирования.УказанноеПоле И СписокРеквизитов.НайтиПоЗначению(Объект.ПолеИсходногоРазреза)=Неопределено Тогда
		Объект.ПолеИсходногоРазреза = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИсходныйРазрезПриИзменении(Элемент)
	Объект.ПолеИсходногоРазреза = "";
	ИсходныйРазрезПриИзмененииНаСервере();
	Модифицированность=Истина;
КонецПроцедуры
 
&НаСервере
Процедура ИсходныйРазрезПриИзмененииНаСервере()
	Объект.ИсходныйРазрез=фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИзмерениеПоРазрезу(РазрезИсходный);
	Если Объект.ВариантРасчета = Перечисления.фин_ВариантыАвтоматическогоРасчетаРазрезовБюджетирования.Соответствие Тогда
		Для Каждого СтрокаСоответствие Из Объект.Соответствия Цикл
			СтрокаСоответствие.РезультирующееЗначение = РазрезИсходный.ТипЗначения.ПривестиЗначение(СтрокаСоответствие.РезультирующееЗначение);
		КонецЦикла;
	КонецЕсли;
	ЗаполнитьСписокРеквизитов();
	Если Объект.ВариантРасчета = Перечисления.фин_ВариантыАвтоматическогоРасчетаРазрезовБюджетирования.УказанноеПоле И СписокРеквизитов.НайтиПоЗначению(Объект.ПолеИсходногоРазреза)=Неопределено Тогда
		Объект.ПолеИсходногоРазреза = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолеИсходногоРазрезаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокРеквизитов;
КонецПроцедуры

&НаКлиенте
Процедура РассчитываемыйРазрезНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокРазрезов;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокРеквизитов()
	СписокРеквизитов.Очистить();
	Если ЗначениеЗаполнено(Объект.ИсходныйРазрез) Тогда
		Описание = фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(Объект.ИсходныйРазрез);
		Для Каждого Тип Из Описание.ТипЗначения.Типы() Цикл
			НовыйМассив = Новый Массив;
			НовыйМассив.Добавить(Тип);
			НовыйОписание = Новый ОписаниеТипов(НовыйМассив);
			ПустоеЗначение = НовыйОписание.ПривестиЗначение(Неопределено);
			Попытка
				МетаданныеЗначения = ПустоеЗначение.Метаданные();
				Для Каждого Реквизит Из МетаданныеЗначения.Реквизиты Цикл
					Если СписокРеквизитов.НайтиПоЗначению(Реквизит.Имя)=Неопределено Тогда
						СписокРеквизитов.Добавить(Реквизит.Имя,Реквизит.Синоним);
					КонецЕсли;
				КонецЦикла;
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
