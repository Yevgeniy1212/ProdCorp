////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ОбновлениеОтображения формы.
//
&НаКлиенте
Процедура ОбновлениеОтображения()
	СформироватьНадписиПолейПрописиНаРусском();
КонецПроцедуры

// Обработчик события ПриИзмененииДанных формы.
//
&НаКлиенте
Процедура ПриИзмененииДанных()
	// Устанавливается отбор курсов валюты.
	СписокКурсыВалют.Параметры.УстановитьЗначениеПараметра("ВалютаСсылка", Объект.Ссылка);
	// Перечитываются параметры прописи.
	ПрочитатьПараметрыПрописи();
КонецПроцедуры

// Обработчик события ПослеЗаписи формы.
//
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	// Устанавливается отбор курсов валюты - на тот случай если был записан новый элемент.
	СписокКурсыВалют.Параметры.УстановитьЗначениеПараметра("ВалютаСсылка", Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// если курс на 1 января 1980 не задан, установим его
	ПроверитьКорректностьКурсаНа01_01_1980(Объект.Ссылка);
КонецПроцедуры

// Проверяет наличие установленного курса и кратности валюты на 1 января 1980 года.
// В случае отсутствия устанавливает курс и кратность равными единице.
//
// Параметры:
//  Валюта - ссылка на элемент справочника Валют
//
&НаСервере
Процедура ПроверитьКорректностьКурсаНа01_01_1980(Валюта) Экспорт

	ДатаКурса = Дата(1980, 1, 1);
	СтруктураКурса = куфиб_ОбщегоНазначения.ПолучитьКурсВалюты(Валюта, ДатаКурса);

	Если (СтруктураКурса.Курс = 0) Или (СтруктураКурса.Кратность = 0) Тогда

		// установим курс и кратность = 1 на 01.01.1980, чтобы не было ошибок при создании документов

		РегистрКурсыВалют = РегистрыСведений.КурсыВалют.СоздатьНаборЗаписей();
		РегистрКурсыВалют.Отбор.Валюта.Установить(Валюта, Истина);
		РегистрКурсыВалют.Отбор.Период.Установить(ДатаКурса, Истина);

		НоваяЗапись = РегистрКурсыВалют.Добавить();
		НоваяЗапись.Период    = ДатаКурса;
		НоваяЗапись.Валюта    = Валюта;
		НоваяЗапись.Курс      = 1;
		НоваяЗапись.Кратность = 1;
		
		РегистрКурсыВалют.ОбменДанными.Загрузка = Истина; // чтобы не проверять дату запрета редактирования
		РегистрКурсыВалют.Записать();
		
		Если Метаданные.РегистрыСведений.Найти("КурсыВалютДляРасчетовСПерсоналом") <> Неопределено Тогда
			РегистрКурсыВалют = РегистрыСведений["КурсыВалютДляРасчетовСПерсоналом"].СоздатьНаборЗаписей();
			РегистрКурсыВалют.Отбор.Валюта.Установить(Валюта, Истина);
			РегистрКурсыВалют.Отбор.Период.Установить(ДатаКурса, Истина);

			НоваяЗапись = РегистрКурсыВалют.Добавить();
			НоваяЗапись.Период    = ДатаКурса;
			НоваяЗапись.Валюта    = Валюта;
			НоваяЗапись.Курс      = 1;
			НоваяЗапись.Кратность = 1;
			
			РегистрКурсыВалют.ОбменДанными.Загрузка = Истина; // чтобы не проверять дату запрета редактирования
			РегистрКурсыВалют.Записать();
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры // ПроверитьКорректностьКурсаНа01_01_1980()

 
// Обработчик события ПередНачаломДобавления элемента СписокКурсыВалют.
//
&НаКлиенте
Процедура СписокКурсыВалютПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Объект.Ссылка.Пустая() Тогда
		Ответ = Вопрос("Элемент еще не записан. Записать?", РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Отказ = НЕ Записать();//ЗаписатьВФорме();
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "ПередУдалением" элемент СписокКурсыВалют
//
&НаКлиенте
Процедура СписокКурсыВалютПередУдалением(Элемент, Отказ)
    ДанныеСтроки = Элемент.ТекущиеДанные;
    Если ДанныеСтроки = Неопределено Тогда
    	Возврат;
    КонецЕсли;
    Если ЗначениеЗаполнено(ДанныеСтроки.Период) Тогда
    	ДатаСреза = ДанныеСтроки.Период - 86400;
    Иначе
    	// если это запись с пустым периодом, ее точно удалять нельзя
    	Отказ = Истина;
    	Возврат;
    КонецЕсли;
    СтруктураОтбора = Новый Структура("Валюта", Объект.Ссылка);
    Отказ = ТаблицаКурсовПерваяЗапись(СтруктураОтбора,ДатаСреза);
КонецПроцедуры // СписокКурсыВалютПередУдалением()
&НаСервере
Функция ТаблицаКурсовПерваяЗапись(СтруктураОтбора,ДатаСреза)
    ТаблицаКурсов = РегистрыСведений.КурсыВалют.СрезПоследних(ДатаСреза, СтруктураОтбора);
    Если ТаблицаКурсов.Количество() = 0 Тогда
    	// это строка с первой записью о курсе и кратности для валюты, ее удалять нельзя
    	Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
КонецФункции	
// Обработчик события ПриНачалеРедактирования элемента СписокКурсыВалют.
//
&НаКлиенте
Процедура СписокКурсыВалютПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		СтруктураКурса = КурсыВалютПолучитьПоследнее();
		Элемент.ТекущиеДанные.Курс      = СтруктураКурса.Курс;
		Элемент.ТекущиеДанные.Кратность = СтруктураКурса.Кратность;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция КурсыВалютПолучитьПоследнее()
	Возврат РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ТекущаяДата(), Новый Структура("Валюта", Объект.Ссылка));
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ПРОПИСИ

// Обработчик события ПриИзменении элемента НаименованиеПолное.
//
&НаКлиенте
Процедура НаименованиеПолноеПриИзменении(Элемент)

	Если ПустаяСтрока(Элементы.ПолеПрописи1наРусском.Значение) Тогда
		Элементы.ПолеПрописи1наРусском.Значение = Нрег(Объект.НаименованиеПолное);
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриИзменении элементов ПолеПрописи1наРусском, ..., ПолеПрописи8наРусском.
//
&НаКлиенте
Процедура ПолеПрописиНаРусскомПриИзменении(Элемент)
	СформироватьПараметрыПрописиНаРусском();
КонецПроцедуры

// Обработчик события ПриИзменении элемента ПолеПрописиДлинаДробнойЧасти.
//
&НаКлиенте
Процедура ПолеПрописиДлинаДробнойЧастиПриИзменении(Элемент)

	СформироватьПараметрыПрописиНаРусском();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ

// Процедура считывает параметры прописи и заполняет соответствующие поля диалога.
//
// Параметры:
//  Нет.
//
&НаКлиенте
Процедура ПрочитатьПараметрыПрописи()

	СтрокаПараметров = СтрЗаменить(Объект.ПараметрыПрописиНаРусском, ",", Символы.ПС);

	ПолеПрописи1наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 1));
	ПолеПрописи2наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 2));
	ПолеПрописи3наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 3));
	ПолеПрописи4наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 4));
	ПолеПрописи5наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 5));
	ПолеПрописи6наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 6));
	ПолеПрописи7наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 7));
	ПолеПрописи8наРусском        = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 8));
	ПолеПрописиДлинаДробнойЧасти = СокрЛП(СтрПолучитьСтроку(СтрокаПараметров, 9));

	Если ПолеПрописи4наРусском = Неопределено Тогда
		ПолеПрописи4наРусском = ПолеПрописи4наРусском.СписокВыбора[0];
	КонецЕсли;

	Если ПолеПрописи8наРусском = Неопределено Тогда
		ПолеПрописи8наРусском = ПолеПрописи8наРусском.СписокВыбора[0];
	КонецЕсли;

	Если ПолеПрописиДлинаДробнойЧасти = Неопределено Тогда
		ПолеПрописиДлинаДробнойЧасти = ПолеПрописиДлинаДробнойЧасти.СписокВыбора[0];
	КонецЕсли;

КонецПроцедуры

// Процедура формирует параметры прописи для русского языка из соответствующих полей диалога.
//
// Параметры:
//  Нет.
//
&НаКлиенте
Процедура СформироватьПараметрыПрописиНаРусском()

	ПараметрыПрописиНаРусском = Элементы.ПолеПрописи1наРусском.Значение + ", "
	                          + Элементы.ПолеПрописи2наРусском.Значение + ", "
	                          + Элементы.ПолеПрописи3наРусском.Значение + ", "
	                          + Элементы.ПолеПрописи4наРусском.Значение + ", "
	                          + Элементы.ПолеПрописи5наРусском.Значение + ", "
	                          + Элементы.ПолеПрописи6наРусском.Значение + ", "
	                          + Элементы.ПолеПрописи7наРусском.Значение + ", "
	                          + Элементы.ПолеПрописи8наРусском.Значение + ", "
	                          + Элементы.ПолеПрописиДлинаДробнойЧасти.Значение;

КонецПроцедуры

// Процедура формирует надписи к полям прописи для русского языка.
//
// Параметры:
//  Нет.
//
&НаКлиенте
Процедура СформироватьНадписиПолейПрописиНаРусском()
	Надписи = Новый Структура("м1, м2, м3, ж1, ж2, ж3, с1, с2, с3");
	Надписи.м1 = "один:"; Надписи.м2 = "два:"; Надписи.м3 = "пять:";
	Надписи.ж1 = "одна:"; Надписи.ж2 = "две:"; Надписи.ж3 = "пять:";
	Надписи.с1 = "одно:"; Надписи.с2 = "два:"; Надписи.с3 = "пять:";

	Род = Элементы.ПолеПрописи4наРусском;

	Элементы.ПолеПрописи1наРусском.Заголовок = Надписи[Род + "1"];
	Элементы.ПолеПрописи2наРусском.Заголовок = Надписи[Род + "2"];
	Элементы.ПолеПрописи3наРусском.Заголовок = Надписи[Род + "3"];

	Род = Элементы.ПолеПрописи8наРусском.Значение;

	Элементы.ПолеПрописи5наРусском.Заголовок = Надписи[Род + "1"];
	Элементы.ПолеПрописи6наРусском.Заголовок = Надписи[Род + "2"];
	Элементы.ПолеПрописи7наРусском.Заголовок = Надписи[Род + "3"];

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		// Устанавливается отбор курсов валюты.
	//Структура = Новый Структура("Валюта", Объект.Ссылка);
	//ПараметрыОтбора = СписокКурсыВалют.Отбор.Вставить(Структура);
	
	// Перечитываются параметры прописи.
	ПрочитатьПараметрыПрописи();

КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СписокКурсыВалют.Параметры.УстановитьЗначениеПараметра("ВалютаСсылка", Объект.Ссылка);
	//оформление
	оф_ПараметрыПрописиЦелойЧастиДляРусскогоЯзыкаЗаголовок = "Параметры прописи целой части для русского языка";
	оф_ПараметрыПрописиДробнойЧастиДляРусскогоЯзыкаЗаголовок = "Параметры прописи дробной части для русского языка";
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// РАЗДЕЛ ОСНОВНОЙ ПРОГРАММЫ

// Род целой части на русском языке
Элементы.ПолеПрописи4наРусском.СписокВыбора.Очистить();
Элементы.ПолеПрописи4наРусском.СписокВыбора.Добавить("м", "Мужской");
Элементы.ПолеПрописи4наРусском.СписокВыбора.Добавить("ж", "Женский");
Элементы.ПолеПрописи4наРусском.СписокВыбора.Добавить("с", "Средний");

// Род дробной части на русском языке
Элементы.ПолеПрописи8наРусском.СписокВыбора.Очистить();
Элементы.ПолеПрописи8наРусском.СписокВыбора.Добавить("м", "Мужской");
Элементы.ПолеПрописи8наРусском.СписокВыбора.Добавить("ж", "Женский");
Элементы.ПолеПрописи8наРусском.СписокВыбора.Добавить("с", "Средний");

// Род дробной части на русском языке
Элементы.ПолеПрописиДлинаДробнойЧасти.СписокВыбора.Очистить();
Элементы.ПолеПрописиДлинаДробнойЧасти.СписокВыбора.Добавить("2", "2 знака");
Элементы.ПолеПрописиДлинаДробнойЧасти.СписокВыбора.Добавить("1", "1 знак");
Элементы.ПолеПрописиДлинаДробнойЧасти.СписокВыбора.Добавить("3", "3 знака");
