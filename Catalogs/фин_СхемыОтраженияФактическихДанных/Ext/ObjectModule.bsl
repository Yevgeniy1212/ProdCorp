
Процедура ПриЗаписи(Отказ)
	
	Если ДополнительныеСвойства.Свойство("ОбновлятьПравила") Тогда 
	    ОбновитьДанныеСправочника("фин_ПравилаОтраженияФактическихДанных");
	    ОбновитьДанныеСправочника("фин_ГруппыПравилОтраженияФактическихДанных");
		ДополнительныеСвойства.Удалить("ОбновлятьПравила");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьДанныеСправочника(ИмяСправочника)
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	фин_ПравилаОтраженияФактическихДанных.Ссылка,
			|	фин_ПравилаОтраженияФактическихДанных.Условие,
			|	фин_ПравилаОтраженияФактическихДанных.Условие.ВидДанных КАК Условие_ВидДанных,
			|	фин_ПравилаОтраженияФактическихДанных.Условие.ИмяИсточника КАК Условие_ИмяИсточника,
			|	фин_ПравилаОтраженияФактическихДанных.Условие.Владелец КАК Условие_Владелец
			|ИЗ
			|	Справочник.фин_ПравилаОтраженияФактическихДанных КАК фин_ПравилаОтраженияФактическихДанных
			|ГДЕ
			|	фин_ПравилаОтраженияФактическихДанных.Владелец = &Ссылка
			|	И (ВЫБОР 
			|		КОГДА &ЭтоРегистр 
			|			ТОГДА фин_ПравилаОтраженияФактическихДанных.ВидДанных <> ЗНАЧЕНИЕ(Перечисление.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоДвижениямВРегистрах) ИЛИ фин_ПравилаОтраженияФактическихДанных.ИмяИсточника <> """"
			|	    КОГДА фин_ПравилаОтраженияФактическихДанных.ВидДанных = ЗНАЧЕНИЕ(Перечисление.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоТабличнойЧасти)
			|			ТОГДА фин_ПравилаОтраженияФактическихДанных.ИмяИсточника НЕ В (&ТЧ)
			|	    КОГДА фин_ПравилаОтраженияФактическихДанных.ВидДанных = ЗНАЧЕНИЕ(Перечисление.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоДвижениямВРегистрах)
			|			ТОГДА фин_ПравилаОтраженияФактическихДанных.ИмяИсточника НЕ В (&Регистры)
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ
			|	ИЛИ (фин_ПравилаОтраженияФактическихДанных.Условие <> ЗНАЧЕНИЕ(Справочник.усд_УсловияВыполненияОперацийПоСтрокамДокумента.ПустаяСсылка)
			|			И фин_ПравилаОтраженияФактическихДанных.Условие.Владелец <> &Ссылка))";
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"фин_ПравилаОтраженияФактическихДанных",ИмяСправочника);	
		ОбъектИБ = Владелец.Владелец;	
		ЭтоРегистр = ТипЗнч(Владелец)=Тип("СправочникСсылка.фин_КлассификаторРегистров");	
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("ЭтоРегистр",ЭтоРегистр);
		ТЧ = Новый СписокЗначений;
		Регистры = Новый СписокЗначений;
		Если НЕ ЭтоРегистр Тогда
			Справочники.фин_ГруппыПравилОтраженияФактическихДанных.ДополнитьТабличнымиЧастямиДокумента(ТЧ,Владелец.ПрограммныйИдентификатор);
			Справочники.фин_ГруппыПравилОтраженияФактическихДанных.ДополнитьДвижениямиДокумента(Регистры,Владелец.ПрограммныйИдентификатор);
		КонецЕсли;
		Запрос.УстановитьПараметр("ТЧ", ТЧ);
		Запрос.УстановитьПараметр("Регистры", Регистры);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбъектПравил = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			Если ЭтоРегистр Тогда
				ОбъектПравил.ВидДанных 		= Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоДвижениямВРегистрах;
				ОбъектПравил.ИмяИсточника	= "";
				ОбъектПравил.ПредставлениеИсточника	= "";
			ИначеЕсли ОбъектПравил.ВидДанных 		= Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоТабличнойЧасти И ТЧ.НайтиПоЗначению(ОбъектПравил.ИмяИсточника)=Неопределено Тогда
				ОбъектПравил.ИмяИсточника	= "";
				ОбъектПравил.ПредставлениеИсточника	= "";
			ИначеЕсли ОбъектПравил.ВидДанных 		= Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоДвижениямВРегистрах И Регистры.НайтиПоЗначению(ОбъектПравил.ИмяИсточника)=Неопределено Тогда
				ОбъектПравил.ИмяИсточника	= "";
				ОбъектПравил.ПредставлениеИсточника	= "";
			КонецЕсли;
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Условие) Тогда
				Если ВыборкаДетальныеЗаписи.Условие_Владелец<>Владелец ИЛИ ВыборкаДетальныеЗаписи.Условие_ВидДанных<>ОбъектПравил.ВидДанных ИЛИ ВыборкаДетальныеЗаписи.Условие_ИмяИсточника<>ОбъектПравил.ИмяИсточника Тогда
					ОбъектПравил.Условие = Справочники.усд_УсловияВыполненияОперацийПоСтрокамДокумента.ПустаяСсылка();
				КонецЕсли;
			КонецЕсли;
			Если ИмяСправочника="фин_ПравилаОтраженияФактическихДанных" Тогда
				Справочники.фин_ПравилаОтраженияФактическихДанных.КорректироватьЗаполнениеПравил(ОбъектПравил);
			КонецЕсли;
			Попытка
				ОбъектПравил.Записать();
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо пересмотреть настройки "+?(ИмяСправочника="фин_ПравилаОтраженияФактическихДанных","правила ","группы правил ")+ВыборкаДетальныеЗаписи.Ссылка,ВыборкаДетальныеЗаписи.Ссылка);
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось обновить данные "+?(ИмяСправочника="фин_ПравилаОтраженияФактическихДанных","правила ","группы правил ")+ВыборкаДетальныеЗаписи.Ссылка+"
				|	"+ОписаниеОшибки());
			КонецПопытки;
		КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если ОбменДанными.Загрузка=Истина ИЛИ ДополнительныеСвойства.Свойство("ВнешняяОбработка") Тогда
		Возврат;
	КонецЕсли;
	Если ЗначениеЗаполнено(Ссылка) И Ссылка.Владелец<>Владелец Тогда
		ДополнительныеСвойства.Вставить("ОбновлятьПравила");
	КонецЕсли;
КонецПроцедуры
