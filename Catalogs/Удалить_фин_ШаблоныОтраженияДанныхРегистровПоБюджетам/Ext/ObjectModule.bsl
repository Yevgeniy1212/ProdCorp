//Процедура ПередЗаписью
//
Процедура ПередЗаписью(Отказ)
	Если ОбменДанными.Загрузка ИЛИ ДополнительныеСвойства.Свойство("ВнешняяОбработка") Тогда
		Возврат;
	КонецЕсли;
	Для Каждого СтрокаГруппы Из ГруппыПравил Цикл
		Строки = ГруппыПравил.НайтиСтроки(Новый Структура("Представление",СтрокаГруппы.Представление));
		Если Строки.Количество() >1 Тогда
			Сообщить("Элемент справочника Шаблоны отражения фактических данных по бюджетам 
			|	"+Ссылка+" не может быть записан, так как группа с наименованием "+СтрокаГруппы.Представление+" значится в списке более одного раза!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаТЧ Из НаборПравилОтражения Цикл
		Если СтрокаТЧ.СпособИспользования = Перечисления.фин_СпособИспользованияШаблонаОтраженияВБюджетировании.ВсегдаЕслиУдовлетворяетУсловию 
			ИЛИ СтрокаТЧ.СпособИспользования = Перечисления.фин_СпособИспользованияШаблонаОтраженияВБюджетировании.ЕслиУдовлетворяетУсловию Тогда
			Если Не ЗначениеЗаполнено(СтрокаТЧ.Условие) Тогда
				Сообщить("Элемент справочника Шаблоны отражения фактических данных по бюджетам 
				|	"+Ссылка+" не может быть записан, так как в строке №"+Строка(СтрокаТЧ.НомерСтроки)+" не указано условие использования");
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли
	КонецЦикла;
КонецПроцедуры //ПередЗаписью

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка ИЛИ ДополнительныеСвойства.Свойство("ВнешняяОбработка") Тогда
		Возврат;
	КонецЕсли;
	//Если ДополнительныеСвойства.Свойство("КонтрольВыполнен") Тогда
	//	ДополнительныеСвойства.Удалить("КонтрольВыполнен");
	КонтрольЗаписейПараметров();
КонецПроцедуры

Процедура КонтрольЗаписейПараметров()  Экспорт
	МассивИдентификаторов = Новый Массив;
	Для Каждого СтрокаТЧ Из НаборПравилОтражения Цикл
		МассивИдентификаторов.Добавить(СтрокаТЧ.БазовыйИдентификатор);
	КонецЦикла;
	РегистрСведенийНаборЗаписей = РегистрыСведений.Удалить_фин_ПараметрыШаблоновОтраженияФактическихДанных.СоздатьНаборЗаписей();
	РегистрСведенийНаборЗаписей.Отбор.Шаблон.Значение 		= Ссылка;
	РегистрСведенийНаборЗаписей.Отбор.Шаблон.Использование 	= Истина;
	РегистрСведенийНаборЗаписей.Прочитать();
	МассивУдалить = Новый Массив;
	Модификация = Ложь;
	Для Каждого СтрокаНабора Из РегистрСведенийНаборЗаписей Цикл
		Если МассивИдентификаторов.Найти(СтрокаНабора.ИдентификаторСтроки)=Неопределено Тогда
			МассивУдалить.Добавить(СтрокаНабора);
			Модификация = Истина;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаУдалить Из МассивУдалить Цикл
		РегистрСведенийНаборЗаписей.Удалить(СтрокаУдалить);
	КонецЦикла;
	РегистрСведенийНаборЗаписей.Записать();
КонецПроцедуры

  Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения)=Тип("Структура") Тогда
		Для Каждого ЭлементЗаполнения Из ДанныеЗаполнения Цикл
			Если Метаданные().Реквизиты.Найти(ЭлементЗаполнения.Ключ)<>Неопределено  ИЛИ ЭлементЗаполнения.Ключ = "Владелец" Тогда
				ЭтотОбъект[ЭлементЗаполнения.Ключ] = ЭлементЗаполнения.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
