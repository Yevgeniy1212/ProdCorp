
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

// Управление формой

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	УправлениеФормой(ЭтотОбъект);
	
	НадписьНастройки 				= "Настройки";
	НадписьЭлементыДляРаспределения	= "Элементы для распределения";
	
	Если ЗначениеЗаполнено(Объект.ИзмерениеБюджетирования) Тогда
		ПредставлениеИзмерения = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(Объект.ИзмерениеБюджетирования);
	КонецЕсли;
	СписокРазрезов = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПолучитьСписокДополнительныхРазрезов");
	Для Каждого ЭлементСписка Из СписокРазрезов Цикл
		СписокЗначенийВыбора.Добавить(ЭлементСписка.Значение,ЭлементСписка.Представление);
	КонецЦикла;
	СписокЗначенийВыбора.Вставить(0,Перечисления.фин_ФактическиеПоказателиБюджетирования.Номенклатура);
	СписокЗначенийВыбора.Вставить(0,Перечисления.фин_ФактическиеПоказателиБюджетирования.Контрагент);
	СписокЗначенийВыбора.Вставить(0,Перечисления.фин_ФактическиеПоказателиБюджетирования.Проект);
	СписокЗначенийВыбора.Вставить(0,Перечисления.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение);
	СписокЗначенийВыбора.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта);
	Для Каждого ЗначениеСписка Из СписокЗначенийВыбора Цикл
		ЗначениеСписка.Представление = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(ЗначениеСписка.Значение);
	КонецЦикла;
	Если ЗначениеЗаполнено(Объект.Ссылка) И Объект.ВидРаспределения=Перечисления.фин_ВидыРаспределенийПоИзмерениямБюджетирования.ПоПоказателюИсточника И ЗначениеЗаполнено(Объект.ИзмерениеБюджетирования) Тогда
		СписокИсточниковПоИзмерению = фин_УправлениеБюджетированием.СписокИсточниковДляИзмерения(Объект.ИзмерениеБюджетирования);
		ОбновитьСпискиВыбора();
	КонецЕсли; 
	ЭлементПВХ = фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(Объект.ИзмерениеБюджетирования);
	Если ЗначениеЗаполнено(ЭлементПВХ) Тогда
		Элементы.ЭлементыДляРаспределенияЭлементУправленческойАналитики.ОграничениеТипа = ТипЗначенияПВХ(ЭлементПВХ);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	// установка видимости и доступности элементов в зависимости от значений реквизитов

	Если Объект.ВидРаспределения = ПредопределенноеЗначение("Перечисление.фин_ВидыРаспределенийПоИзмерениямБюджетирования.Фиксированное") Тогда
		Элементы.ИсточникДанных.Видимость 			= Ложь;
		Элементы.ПоказательИсточника.Видимость		= Ложь;
		Элементы.ЭлементыДляРаспределенияПроцентДляРаспределения.Видимость	= Истина;
		Элементы.Автозаполнение.Видимость			= Истина;
		Элементы.ПоВсемЭлементам.Видимость			= Ложь;
	Иначе
		Элементы.ИсточникДанных.Видимость 			= Истина;
		Элементы.ПоказательИсточника.Видимость 		= Истина;
		Элементы.ЭлементыДляРаспределенияПроцентДляРаспределения.Видимость	= Ложь;
		Элементы.Автозаполнение.Видимость			= Ложь;
		Элементы.ПоВсемЭлементам.Видимость			= Истина;
		Форма.Автозаполнение						= Ложь;
	КонецЕсли; 	
	Если ЗначениеЗаполнено(Объект.ИзмерениеБюджетирования) Тогда
		Элементы.ИсточникДанных.Доступность				= Истина;
		Элементы.ПоказательИсточника.Доступность		= Истина;
		Элементы.ЭлементыДляРаспределения.Доступность	= Истина;
	Иначе
		Элементы.ИсточникДанных.Доступность				= Ложь;
		Элементы.ПоказательИсточника.Доступность		= Ложь;
		Элементы.ЭлементыДляРаспределения.Доступность	= Ложь;
	КонецЕсли;
	
	Если Объект.ПоВсемЭлементам Тогда
		Элементы.ЭлементыДляРаспределения.ТолькоПросмотр	= Истина;
		Элементы.ЭлементыДляРаспределенияПодбор.Доступность	= Ложь;
	Иначе
		Элементы.ЭлементыДляРаспределения.ТолькоПросмотр	= Ложь;
		Элементы.ЭлементыДляРаспределенияПодбор.Доступность	= Истина;
	КонецЕсли;

	
КонецПроцедуры

//Обновляет списки выбора для показателей источников данных
//
//
&НаСервере
Процедура ОбновитьСпискиВыбора()
	Если НЕ Объект.ИсточникДанных.Пустая() Тогда
		СписокПоказателей.Очистить();
		Для Каждого Показатель Из Объект.ИсточникДанных.Показатели Цикл
			Если Показатель.Использование Тогда
				СписокПоказателей.Добавить(Показатель.Имя, Показатель.Представление);
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
КонецПроцедуры // ОбновитьСпискиВыбора()


&НаКлиенте
Процедура ПредставлениеИзмеренияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка 	= Ложь;
	ДанныеВыбора 			= СписокЗначенийВыбора;
КонецПроцедуры


&НаКлиенте
Процедура ПоказательИсточникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка 	= Ложь;
	ДанныеВыбора 			= СписокПоказателей;
КонецПроцедуры


&НаКлиенте
Процедура ПредставлениеИзмеренияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Объект.ИзмерениеБюджетирования = ВыбранноеЗначение;
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ПредставлениеИзмерения = СписокЗначенийВыбора.НайтиПоЗначению(ВыбранноеЗначение).Представление;
	КонецЕсли;
	ИзмерениеБюджетированияПриИзменении();
КонецПроцедуры


//Процедура ИзмерениеБюджетированияПриИзменении
//
&НаСервере
Процедура ИзмерениеБюджетированияПриИзменении()
	Объект.ЭлементыДляРаспределения.Очистить();
	Объект.ПоВсемЭлементам=Ложь;
	Автозаполнение=Ложь;
	Объект.ИсточникДанных=Справочники.фин_ИсточникиДанныхДляРасчетовБюджетирования.ПустаяСсылка();
	Объект.ПоказательИсточника="";
	УправлениеФормой(ЭтотОбъект);
	Если ЗначениеЗаполнено(Объект.ИзмерениеБюджетирования) Тогда
		ЭлементПВХ = фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(Объект.ИзмерениеБюджетирования);
		Если Объект.ВидРаспределения=Перечисления.фин_ВидыРаспределенийПоИзмерениямБюджетирования.ПоПоказателюИсточника Тогда
			СписокИсточниковПоИзмерению=фин_УправлениеБюджетированием.СписокИсточниковДляИзмерения(Объект.ИзмерениеБюджетирования);
		КонецЕсли;
		Если ЗначениеЗаполнено(ЭлементПВХ) Тогда
			Элементы.ЭлементыДляРаспределенияЭлементУправленческойАналитики.ОграничениеТипа = ТипЗначенияПВХ(ЭлементПВХ);
		КонецЕсли;
	Иначе
		СписокИсточниковПоИзмерению=Новый СписокЗначений;
	КонецЕсли;
КонецПроцедуры //ИзмерениеБюджетированияПриИзменении

&НаКлиенте
Процедура ВидРаспределенияПриИзменении(Элемент)
	Объект.ПоВсемЭлементам		= Ложь;
	Автозаполнение				= Ложь;
	Объект.ИсточникДанных 		= ПредопределенноеЗначение("Справочник.фин_ИсточникиДанныхДляРасчетовБюджетирования.ПустаяСсылка");
	Объект.ПоказательИсточника	= "";
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ИсточникДанныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ДанныеВыбора = ИсточникДанныхНачалоВыбораНаСервере(Объект.ИзмерениеБюджетирования);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИсточникДанныхНачалоВыбораНаСервере(ИзмерениеБюджетирования)
	Возврат фин_УправлениеБюджетированием.СписокИсточниковДляИзмерения(ИзмерениеБюджетирования);
КонецФункции

&НаКлиенте
Процедура ИсточникДанныхПриИзменении(Элемент)
	Объект.ПоказательИсточника = "";
	ОбновитьСпискиВыбора();
КонецПроцедуры

&НаКлиенте
Процедура ПоВсемЭлементамПриИзменении(Элемент)
 	Объект.ЭлементыДляРаспределения.Очистить();
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура АвтозаполнениеПриИзменении(Элемент)
	РассчитатьПроценты(); 
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыДляРаспределенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Копирование Тогда
		Элементы.ЭлементыДляРаспределения.ТекущиеДанные.ЭлементУправленческойАналитики = ?(ЗначениеЗаполнено(ЭлементПВХ),ПустоеЗначениеПВХ(ЭлементПВХ),ПредопределенноеЗначение("Справочник.Валюты.ПустаяСсылка"));
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПустоеЗначениеПВХ(ЭлементПВХ)
	Возврат ЭлементПВХ.ТипЗначения.ПривестиЗначение(Неопределено);	
КонецФункции

&НаСервереБезКонтекста
Функция ТипЗначенияПВХ(ЭлементПВХ)
	Возврат ЭлементПВХ.ТипЗначения;	
КонецФункции

&НаКлиенте
Процедура ЭлементыДляРаспределенияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	РассчитатьПроценты(); 
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьПроценты()
	Если Автозаполнение Тогда
		КоличествоЭлементов = Объект.ЭлементыДляРаспределения.Количество();
		Для Каждого СтрокаТаблицы Из Объект.ЭлементыДляРаспределения Цикл
			СтрокаТаблицы.ПроцентДляРаспределения=100/КоличествоЭлементов;
		КонецЦикла; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыДляРаспределенияПослеУдаления(Элемент)
	РассчитатьПроценты(); 
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	Если НЕ ЗначениеЗаполнено(ЭлементПВХ) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ИзмерениеБюджетирования) Тогда
		Возврат;
	КонецЕсли;
	СписокТипов = СписокТиповДляВыбора();
	Если СписокТипов.Количество()=1 Тогда
		ВыбранныйЭлемент = СписокТипов[0];
		ОбработатьНачалоПодбора(ВыбранныйЭлемент.Значение);
	Иначе
		ОписаниеОповещенияВыбора = Новый ОписаниеОповещения("ОбработкаОповещенияВыбора",ЭтотОбъект);
		СписокТипов.ПоказатьВыборЭлемента(ОписаниеОповещенияВыбора,"Выберите детализацию");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещенияВыбора(РезультатВыбора,ДополнительныеПараметры) Экспорт
	Если РезультатВыбора<>Неопределено Тогда
		ОбработатьНачалоПодбора(РезультатВыбора.Значение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНачалоПодбора(ИмяТаблицы)
	ИмяФормыКОткрытию = Лев(ИмяТаблицы,Найти(ИмяТаблицы,".")-1)+"."+Сред(ИмяТаблицы,Найти(ИмяТаблицы,".")+1)+".ФормаВыбора";
	ОткрытьФорму(ИмяФормыКОткрытию,Новый Структура("ЗакрыватьПриВыборе",Ложь),Элементы.ЭлементыДляРаспределения,УникальныйИдентификатор);
КонецПроцедуры

&НаСервере
Функция СписокТиповДляВыбора()
	СписокТипов = Новый СписокЗначений;
	Для Каждого ТипЗначения Из ЭлементПВХ.ТипЗначения.Типы() Цикл
		ИмяТаблицы = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ОпределитьТаблицуПоТипу(ТипЗначения);
		СписокТипов.Добавить(ИмяТаблицы,Строка(ТипЗначения));
	КонецЦикла;
	Возврат СписокТипов;
КонецФункции

&НаКлиенте
Процедура ЭлементыДляРаспределенияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Объект.ЭлементыДляРаспределения.НайтиСтроки(Новый Структура("ЭлементУправленческойАналитики",ВыбранноеЗначение)).Количество()>0 Тогда
		Возврат;
	КонецЕсли;
	НоваяСтрока = Объект.ЭлементыДляРаспределения.Добавить();
	НоваяСтрока.ЭлементУправленческойАналитики = ВыбранноеЗначение;
	РассчитатьПроценты();
КонецПроцедуры



