&НаКлиенте
Перем мОбработкаТайпингаВидаКИ;
&НаКлиенте
Перем мТекстТайпингаВидаКИ;
&НаКлиенте
Перем мПоследнееЗначениеЭлементаТайпингаВидаКИ;
&НаКлиенте
Перем мКнопкаРедактироватьКИВДиалоге;

&НаКлиенте
Перем текФамилия;
&НаКлиенте
Перем текИмя;
&НаКлиенте
Перем текОтчество;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
Функция ПолучитьОпределения(парам,парамЗнач)
	//Если парам = "" Тогда
	//КонецЕсли
	Если парам = "Перечисления.ВидыКонтактныхЛиц.ЛичныйКонтакт" Тогда
		Возврат Перечисления.ВидыКонтактныхЛиц.ЛичныйКонтакт;
	КонецЕсли;
	Если парам = "Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента" Тогда
		Возврат Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента;
	КонецЕсли;
	Если парам = "Перечисления.ВидыКонтактныхЛиц.ПрочееКонтактноеЛицо" Тогда
		Возврат Перечисления.ВидыКонтактныхЛиц.ПрочееКонтактноеЛицо;
	КонецЕсли;
	//Если парам = "Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента" Тогда
	//	Возврат Перечисления.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента;
	//КонецЕсли;
	
КонецФункции

// Процедура обрабатывает событие ПриИзменении реквизита ВидКонтактногоЛица.
// 
&НаКлиенте
Процедура ПриИзмененииВидаКонтактногоЛица()
	Если НЕ ЗначениеЗаполнено(Объект.ВидКонтактногоЛица) Тогда
		Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.ЛичныйКонтакт");
	КонецЕсли;
	Если Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента") Тогда
		Если ТипЗнч(Объект.ОбъектВладелец) <> Тип("СправочникСсылка.Контрагенты") Тогда
			Объект.ОбъектВладелец = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
		КонецЕсли;
	ИначеЕсли Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.ЛичныйКонтакт") Тогда
		Если Объект.ОбъектВладелец <> глТекущийПользователь Тогда
			Объект.ОбъектВладелец = глТекущийПользователь;
		КонецЕсли;
	Иначе
		Если ТипЗнч(Объект.ОбъектВладелец) <> Тип("СправочникСсылка.Пользователи") Тогда
			Объект.ОбъектВладелец = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Процедура управляет доступностью поля ввода ОбъектВладелец.
// 
&НаКлиенте
Процедура ДоступностьОтветственного()
	Если Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента") Тогда
		Элементы.ОбъектВладелец.Заголовок   = "Контрагент:";
		Элементы.ОбъектВладелец.ТолькоПросмотр    = Ложь;
	ИначеЕсли Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.ЛичныйКонтакт") Тогда
		Элементы.ОбъектВладелец.Заголовок   = "Ответственный:";
		Элементы.ОбъектВладелец.ТолькоПросмотр    = Истина;
	ИначеЕсли Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.ПрочееКонтактноеЛицо") Тогда
		Элементы.ОбъектВладелец.Заголовок   = "Ответственный:";
		Элементы.ОбъектВладелец.ТолькоПросмотр    = Ложь;
	КонецЕсли;
КонецПроцедуры

// Процедура управляет видимостью панели данных (роль, должность).
// 
&НаКлиенте
Процедура ВидимостьДопонительнойИнформации()
	Если Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента") Тогда
		Элементы.ПанельДопКонтрагент.Видимость = Истина;
	Иначе
		Элементы.ПанельДопКонтрагент.Видимость = Ложь;
	КонецЕсли; 
КонецПроцедуры

// Функция определяет номера позиций пробелов в строке реквизита Наименование
//
// Параметры
//  НЕТ
//
// Возвращаемое значение
//  Массив, числа - позиции пробелов в строке
//
&НаКлиенте
Функция ОпределитьПозицииПробелов()
	Пробелы = Новый Массив;
	Для а = 1 По 2 Цикл
		Пробелы.Добавить(0);
	КонецЦикла; 
	КолПробелов = 0;
	Для а = 1 По СтрДлина(Объект.Наименование) Цикл
		Если Сред(Объект.Наименование, а, 1) = " " Тогда
			Пробелы[КолПробелов] = а;
			КолПробелов = КолПробелов + 1;
		КонецЕсли;
		Если КолПробелов = 2 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат Пробелы;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
// Обработчик события ПередОткрытием формы.
//

// Обработчик события ПриЗакрытии формы.
//
&НаКлиенте
Процедура ПриЗакрытии()
	// Контактная информация
	//СохранитьЗначение("РедактироватьКИВДиалоге", мКнопкаРедактироватьКИВДиалоге.Пометка);
КонецПроцедуры

// Обработчик события ПриОткрытии формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Контактная информация
	//мКнопкаРедактироватьКИВДиалоге = Элементы.КоманднаяПанельКонтактнаяИнформация.Кнопки.РедактироватьВДиалоге;
	//НажатиеКнопки = ВосстановитьЗначение("РедактироватьКИВДиалоге");
	//Если ТипЗнч(НажатиеКнопки) = Тип("Булево") Тогда
	//	мКнопкаРедактироватьКИВДиалоге.Пометка = НажатиеКнопки;
	//КонецЕсли;
	
	мОбработкаТайпингаВидаКИ                 = Ложь;
	мТекстТайпингаВидаКИ                     = "";
	мПоследнееЗначениеЭлементаТайпингаВидаКИ = Неопределено;
    	
	ПриИзмененииВидаКонтактногоЛица();
	текФамилия  = Объект.Фамилия;
	текИмя      = Объект.Имя;
	текОтчество = Объект.Отчество;
	ДоступностьОтветственного();
	ВидимостьДопонительнойИнформации();
	// Установим ЭУ по умолчанию
	Если НЕ ЗначениеЗаполнено(Объект.ВидКонтактногоЛица) Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.ВидКонтактногоЛица;
	ИначеЕсли Объект.ВидКонтактногоЛица = ПредопределенноеЗначение("Перечисление.ВидыКонтактныхЛиц.КонтактноеЛицоКонтрагента")
			И НЕ ЗначениеЗаполнено(Объект.ОбъектВладелец) Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.ОбъектВладелец;
	Иначе
		ЭтаФорма.ТекущийЭлемент = Элементы.Фамилия;
	КонецЕсли;
	//добавляет действие "Редактировать номер"	
	//РаботаСДиалогами.ДобавитьВМенюДействияКнопкуРедактированияКода(Элементы.ДействияФормы.Кнопки.Подменю);
	//РаботаСДиалогами.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, Элементы.ДействияФормы.Кнопки.Подменю, Элементы.Код);	
КонецПроцедуры

// Обработчик события ПриЗаписи формы.
//
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	куфиб_УправлениеКонтактнойИнформацией.ЗаписатьКонтактнуюИнформацию(НаборКонтактнойИнформации, Объект.Ссылка, Отказ);
КонецПроцедуры

// Процедура - обработчик события "ОбработкаЗаписиНовогоОбъекта".
//
&НаКлиенте
Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)
	//Если ТипЗнч(Объект) = Тип("ПланВидовХарактеристикОбъект.СвойстваОбъектов") Тогда
	//	Свойства.ПроверитьДобавитьНовоеСвойство(Объект.Ссылка, Элементы.Свойства);
	//ИначеЕсли ТипЗнч(Объект) = Тип("СправочникОбъект.КатегорииОбъектов") Тогда
	//	Категории.ПроверитьДобавитьНовуюКатегорию(Объект.Ссылка, Элементы.Категории);
	//КонецЕсли;

КонецПроцедуры

// Процедура - обработчик пришедшего оповещения.
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗаписанаКИ" И ТипЗнч(Параметр) = Тип("Структура") Тогда
		// Контактная информация
		Если Элементы.КонтактнаяИнформация.ТекущиеДанные <> Неопределено
		   И Элементы.КонтактнаяИнформация.ТекущиеДанные.Вид = Параметр.Вид
		   И Элементы.КонтактнаяИнформация.ТекущиеДанные.Тип = Параметр.Тип Тогда
					куфиб_УправлениеКонтактнойИнформацией.УстановитьВозможностьРедактированияТекстаКИ(Элементы.КонтактнаяИнформация);
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ


///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ МЕХАНИЗМА КОНТАКТНОЙ ИНФОРМАЦИИ

// Обработчик события Нажатие элемента формы КоманднаяПанельКонтактнойИнформации.РедактироватьВДиалоге.
//
&НаКлиенте
Процедура КоманднаяПанельКонтактнойИнформацииРедактироватьВДиалоге(Кнопка)
//	Кнопка.Пометка = НЕ Кнопка.Пометка;
КонецПроцедуры

// Обработчик события ПриНачалеРедактирования элемента формы КонтактнаяИнформация.
//
&НаКлиенте
Процедура НаборКонтактнойИнформацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	куфиб_УправлениеКонтактнойИнформациейКлиент.КонтактнаяИнформацияПриНачалеРедактированияОбщая(Элемент, НоваяСтрока, мПоследнееЗначениеЭлементаТайпингаВидаКИ);
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы КонтактнаяИнформация.
//
&НаКлиенте
Процедура НаборКонтактнойИнформацииПриАктивизацииСтроки(Элемент)
	куфиб_УправлениеКонтактнойИнформациейКлиент.КонтактнаяИнформацияПриАктивизацииСтрокиТаблицы(Элемент, Элементы.УстановитьОсновным);
КонецПроцедуры

// Обработчик события ПриВыводеСтроки элемента формы КонтактнаяИнформация.
//
&НаКлиенте
Процедура КонтактнаяИнформацияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	куфиб_УправлениеКонтактнойИнформацией.КонтактнаяИнформацияСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки);
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы КонтактнаяИнформация.
//
&НаКлиенте
Процедура НаборКонтактнойИнформацииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	куфиб_УправлениеКонтактнойИнформациейКлиент.КонтактнаяИнформацияПередНачаломДобавленияОбработкаДоступностиЭлементовОбщее(Отказ, Элемент, Объект.Ссылка, Копирование, Элементы.КнопкаРедактироватьКИВДиалоге.Пометка)
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы КонтактнаяИнформация.
//
&НаКлиенте
Процедура НаборКонтактнойИнформацииПередНачаломИзменения(Элемент, Отказ)
	куфиб_УправлениеКонтактнойИнформациейКлиент.УстановитьПараметрыОкна(Отказ, Объект.Ссылка,Элемент, Элементы.КнопкаРедактироватьКИВДиалоге.Пометка, ложь,,Ложь)
КонецПроцедуры

// Обработчик события ПриИзменении элемента КонтактнаяИнформация.Тип.
//
&НаКлиенте
Процедура КонтактнаяИнформацияТипПриИзменении(Элемент)
	куфиб_УправлениеКонтактнойИнформацией.КонтактнаяИнформацияТипПриИзмененииОбщее(Элемент, Элементы.КонтактнаяИнформация);
КонецПроцедуры  //КонтактнаяИнформацияТипПриИзменении()

// Обработчик события Регулирование КонтактнаяИнформация.Тип.
//
&НаКлиенте
Процедура КонтактнаяИнформацияТипРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры   //КонтактнаяИнформацияТипРегулирование()

// Обработчик события ПриИзменении элемента КонтактнаяИнформация.Вид.
//
&НаКлиенте
Процедура КонтактнаяИнформацияВидПриИзменении(Элемент)
	Если Элемент.Значение = Неопределено Тогда
		Элемент.Значение = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ПустаяСсылка");
	КонецЕсли; 
	мПоследнееЗначениеЭлементаТайпингаВидаКИ = Элемент.Значение;
КонецПроцедуры    //КонткктнаяИнформацияВидПриИзменении()

// Обработчик события НачалоВыбора элемента КонтактнаяИнформация.Вид.
//
&НаКлиенте
Процедура КонтактнаяИнформацияВидНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	куфиб_УправлениеКонтактнойИнформацией.ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Элементы.КонтактнаяИнформация.ТекущиеДанные.Тип, куфиб_УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Объект.Ссылка));
КонецПроцедуры   //КонтактнаяИнформацияВидНачалоВыбора()

// Обработчик события АвтоПодборТекста элемента КонтактнаяИнформация.Вид.
//
&НаКлиенте
Процедура КонтактнаяИнформацияВидАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	куфиб_РаботаСДиалогами.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", Элементы.КонтактнаяИнформация.ТекущиеДанные.Тип, куфиб_УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Объект.Ссылка)), Тип("СправочникСсылка.ВидыКонтактнойИнформации"));
КонецПроцедуры   //КонтактнаяИнформацияВидАвтоПодборТекста()

// Обработчик события ОкончаниеВводаТекста элемента КонтактнаяИнформация.Вид.
//
&НаКлиенте
Процедура КонтактнаяИнформацияВидОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	куфиб_РаботаСДиалогами.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", Элементы.КонтактнаяИнформация.ТекущиеДанные.Тип, куфиб_УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Объект.Ссылка)), ЭтаФорма, Тип("СправочникСсылка.ВидыКонтактнойИнформации"), мОбработкаТайпингаВидаКИ, мТекстТайпингаВидаКИ, мПоследнееЗначениеЭлементаТайпингаВидаКИ);
КонецПроцедуры  //КонтактнаяИнформацияВидОкончаниеВводаТекста()

// Обработчик события ПриИзменении элемента КонтактнаяИнформация.Представление.
//
&НаКлиенте
Процедура КонтактнаяИнформацияПредставлениеПриИзменении(Элемент)
	куфиб_УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПредставлениеПриИзмененииОбщая(Элемент, Элементы.КонтактнаяИнформация);
КонецПроцедуры  //КонтактнаяИнформацияПредставлениеПриИзменении()

// Обработчик события НачалоВыбора элемента КонтактнаяИнформация.Представление.
&НаКлиенте
Процедура КонтактнаяИнформацияПредставлениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;	
	КонтактнаяИнформацияПредставлениеНачалоВыбораНаСервере();
КонецПроцедуры
&НаСервере
Процедура КонтактнаяИнформацияПредставлениеНачалоВыбораНаСервере()
	
	Обработки.РедактированиеКонтактнойИнформации.Создать().РедактироватьЗапись(Элементы.КонтактнаяИнформация.ТекущиеДанные,, ЭтаФорма);
КонецПроцедуры   //КонтактнаяИнформацияПредставлениеНачалоВыбора()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события ПриИзменении элемента Фамилия.
//
&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)
	ПозицииПробелов = ОпределитьПозицииПробелов();
	Если ПозицииПробелов[0] > 0 Тогда
		ФамилияИзНаименования = Сред(Объект.Наименование, 1, (ПозицииПробелов[0] - 1));
		Если ФамилияИзНаименования <> текФамилия И НЕ ПустаяСтрока(ФамилияИзНаименования) Тогда
			текФамилия = СокрЛП(Элемент.ТекстРедактирования);
			Возврат;
		КонецЕсли;
		Объект.Наименование = СокрЛП(Элемент.ТекстРедактирования) + Сред(Объект.Наименование, ПозицииПробелов[0]);
	Иначе
		Если ПустаяСтрока(Объект.Наименование) Тогда
			Объект.Наименование = СокрЛП(Элемент.ТекстРедактирования);
		Иначе
			Если СокрЛП(Объект.Наименование) = текФамилия Тогда
				Объект.Наименование = СокрЛП(Элемент.ТекстРедактирования);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	текФамилия = СокрЛП(Элемент.ТекстРедактирования);
КонецПроцедуры

// Обработчик события ПриИзменении элемента Имя.
//
&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	ПозицииПробелов = ОпределитьПозицииПробелов();
	Если ПозицииПробелов[0] > 0 И ПозицииПробелов[1] > 0 Тогда
		ИмяИзНаименования = Сред(Объект.Наименование, (ПозицииПробелов[0] + 1), (ПозицииПробелов[1] - ПозицииПробелов[0] - 1));
		Если ИмяИзНаименования <> текИмя И НЕ ПустаяСтрока(ИмяИзНаименования) Тогда
			текИмя = СокрЛП(Элемент.ТекстРедактирования);
			Возврат;
		КонецЕсли;
		Объект.Наименование = Сред(Объект.Наименование, 1, ПозицииПробелов[0]) + СокрЛП(Элемент.ТекстРедактирования) + Сред(Объект.Наименование, ПозицииПробелов[1]);
	ИначеЕсли ПозицииПробелов[0] > 0 Тогда
		ИмяИзНаименования = Сред(Объект.Наименование, (ПозицииПробелов[0] + 1));
		Если ИмяИзНаименования <> текИмя И НЕ ПустаяСтрока(ИмяИзНаименования) Тогда
			текИмя = СокрЛП(Элемент.ТекстРедактирования);
			Возврат;
		КонецЕсли; 
		Объект.Наименование = Сред(Объект.Наименование, 1, ПозицииПробелов[0]) + СокрЛП(Элемент.ТекстРедактирования);
	Иначе
		Если НЕ ПустаяСтрока(Объект.Наименование) Тогда
			Объект.Наименование = Объект.Наименование + " " + СокрЛП(Элемент.ТекстРедактирования);
		Иначе
			Объект.Наименование = " " + СокрЛП(Элемент.ТекстРедактирования);
		КонецЕсли; 
	КонецЕсли;
	текИмя = СокрЛП(Элемент.ТекстРедактирования);
КонецПроцедуры

// Обработчик события ПриИзменении элемента Отчество.
//
&НаКлиенте
Процедура ОтчествоПриИзменении(Элемент)
	ПозицииПробелов = ОпределитьПозицииПробелов();
	Если ПозицииПробелов[1] > 0 Тогда
		ОтчествоИзНаименования = Сред(Объект.Наименование, (ПозицииПробелов[1] + 1));
		Если ОтчествоИзНаименования <> текОтчество И НЕ ПустаяСтрока(ОтчествоИзНаименования) Тогда
			текОтчество = СокрЛП(Элемент.ТекстРедактирования);
			Возврат;
		КонецЕсли;
		Объект.Наименование = Сред(Объект.Наименование, 1, ПозицииПробелов[1]) + СокрЛП(Элемент.ТекстРедактирования);
	Иначе
		Если НЕ ПустаяСтрока(Объект.Наименование) Тогда
			Объект.Наименование = Объект.Наименование + " " + СокрЛП(Элемент.ТекстРедактирования);
		Иначе
			Объект.Наименование = "  " + СокрЛП(Элемент.ТекстРедактирования);
		КонецЕсли;
	КонецЕсли;
	текОтчество = СокрЛП(Элемент.ТекстРедактирования);
КонецПроцедуры

// Обработчик события НачалоВыбораИзСписка элемента Наименование.
//
&НаКлиенте
Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СписокВыбора = Новый СписокЗначений;
	Если НЕ ПустаяСтрока(Объект.Фамилия) Тогда
		СписокВыбора.Добавить(СокрЛП(Объект.Фамилия));
	КонецЕсли;
	Если НЕ ПустаяСтрока(Объект.Фамилия) И НЕ ПустаяСтрока(Объект.Имя) Тогда
		СписокВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Объект.Имя)));
		СписокВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Сред(Объект.Имя,1,1)) + "."));
	КонецЕсли;
	Если НЕ ПустаяСтрока(Объект.Фамилия) И НЕ ПустаяСтрока(Объект.Имя) И НЕ ПустаяСтрока(Объект.Отчество) Тогда
		СписокВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Объект.Имя) + " " + СокрЛП(Объект.Отчество)));
		СписокВыбора.Добавить((СокрЛП(Объект.Фамилия) + " " + СокрЛП(Сред(Объект.Имя,1,1)) + "." + СокрЛП(Сред(Объект.Отчество,1,1)) + "."));
	КонецЕсли;
	Элементы.Наименование.СписокВыбора = СписокВыбора;
КонецПроцедуры

// Обработчик события ПриИзменении элемента ДатаРождения.
//
&НаКлиенте
Процедура ДатаРожденияПриИзменении(Элемент)
	Если Объект.ДатаРождения = '00010101000000' Тогда
		НапоминатьОДнеРождения = Ложь;
	КонецЕсли;
КонецПроцедуры

// Обработчик события ПриИзменении элемента ВидКонтактногоЛица.
//
&НаКлиенте
Процедура ВидКонтактногоЛицаПриИзменении(Элемент)
	ПриИзмененииВидаКонтактногоЛица();
	ДоступностьОтветственного();
	ВидимостьДопонительнойИнформации();
КонецПроцедуры

// Обработчик события Очистка элемента ВидКонтактногоЛица.
//
&НаКлиенте
Процедура ВидКонтактногоЛицаОчистка(Элемент, СтандартнаяОбработка)
	Отказ = Истина;
КонецПроцедуры

// Обработчик события ПриИзменении элемента ОбъектВладелец.
//
&НаКлиенте
Процедура ОбъектВладелецПриИзменении(Элемент)
	ПриИзмененииВидаКонтактногоЛица();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		куфиб_УправлениеКонтактнойИнформацией.ПрочитатьКонтактнуюИнформацию(НаборКонтактнойИнформации, Параметры.ЗначениеКопирования);
	Иначе
		НаборКонтактнойИнформации.Загрузить(куфиб_УправлениеКонтактнойИнформацией.ПрочитатьКонтактнуюИнформацию(НаборКонтактнойИнформации, Объект.Ссылка));
	КонецЕсли;
	Если Параметры.Свойство("ОбъектВладелец") Тогда
		Объект.ОбъектВладелец = Параметры.ОбъектВладелец;
	КонецЕсли;
	Если Параметры.Свойство("ВидКонтактногоЛица") Тогда
		Объект.ВидКонтактногоЛица = Параметры.ВидКонтактногоЛица;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОсновным(Команда)
	куфиб_УправлениеКонтактнойИнформациейКлиент.УстановитьЗаписьОсновной(НаборКонтактнойИнформации, Элементы.КонтактнаяИнформация.ПодчиненныеЭлементы.НаборКонтактнойИнформации, Элементы.УстановитьОсновным);
КонецПроцедуры

&НаКлиенте
Процедура НаборКонтактнойИнформацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	КонтактнаяИнформацияОбработкаВыбораНаСервере(ВыбранноеЗначение);
КонецПроцедуры

&НаСервере
Процедура КонтактнаяИнформацияОбработкаВыбораНаСервере(ВыбранноеЗначение)
	НаборКонтактнойИнформации.Загрузить(куфиб_УправлениеКонтактнойИнформацией.ЗаписьКИВРегистр(ВыбранноеЗначение,НаборКонтактнойИнформации));
КонецПроцедуры


&НаКлиенте
Процедура РедактироватьКИВДиалоге(Команда)
	Если Элементы.КнопкаРедактироватьКИВДиалоге.Пометка тогда
		Элементы.КнопкаРедактироватьКИВДиалоге.Пометка=Ложь;
	Иначе
		Элементы.КнопкаРедактироватьКИВДиалоге.Пометка=Истина;
	КонецЕсли;
	РедактироватьКИВДиалоге = Элементы.КнопкаРедактироватьКИВДиалоге.Пометка;
КонецПроцедуры


&НаКлиенте
Процедура НаборКонтактнойИнформацииПредставлениеПриИзменении(Элемент)
	куфиб_УправлениеКонтактнойИнформациейКлиент.КонтактнаяИнформацияПредставлениеПриИзмененииОбщая(Элемент, Элементы.НаборКонтактнойИнформации);
КонецПроцедуры


&НаКлиенте
Процедура НаборКонтактнойИнформацииПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	куфиб_УправлениеКонтактнойИнформациейКлиент.УстановитьПараметрыОкна(Ложь, Объект.Ссылка,Элементы.НаборКонтактнойИнформации, Истина, ложь,,Ложь);
КонецПроцедуры

