#Если Клиент Тогда

// Функция формирует табличный документ с печатной формой инвентарной карточки НМА (форма НМА-2).
//
// Возвращаемое значение:
//  Табличный документ - печатная форма инвентарной карточки НМА.
//
Функция ПечатьНМА2(ДатаСведений, Организация) 
	
	
	Макет = ПолучитьМакет("НМА2");
	
	Шапка 							= Макет.ПолучитьОбласть("Шапка");
	СтрокаТаблицы 					= Макет.ПолучитьОбласть("СтрокаТаблицы");
	Заполнил	 					= Макет.ПолучитьОбласть("Заполнил");
	
	ТабДок = Новый ТабличныйДокумент();
	
	// Зададим параметры макета по умолчанию
	ТабДок.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	// Загрузим настройки пользователя
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НематериальныеАктивы_НМА2";

    //Последние сведения о НМА
	//
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("ДатаСведений",     ДатаСведений);
	Запрос.УстановитьПараметр("НематериальныйАктив", Ссылка);
		
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.СрокПолезногоИспользования КАК СрокПолезнойСлужбы,
	|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.СпособПоступления,
	|	ВЫРАЗИТЬ(ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив.НаименованиеПолное КАК СТРОКА(1000)) КАК НаименованиеНМА,
	|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(&ДатаСведений, Организация = &Организация) КАК ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних
	|ГДЕ
	|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив = &НематериальныйАктив";
	
	ВыборкаНМА = Запрос.Выполнить().Выбрать();
	ВыборкаНМА.Следующий();
	
	Если НЕ ЗначениеЗаполнено(ВыборкаНМА.НематериальныйАктив) Тогда
		Сообщить("На момент формирования отчета нематериальный актив не принимался к учету в указанной организации."+Символы.ПС+
				 "Нельзя сформировать карточку учета объекта!",СтатусСообщения.Внимание);
		Возврат неопределено;
	КонецЕсли; 

	//найдем документы поступления, принятия к учету и выбытия
	//документы принятия к учету и выбытия ОС
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияНМАОрганизаций.НематериальныйАктив,
	|	СостоянияНМАОрганизаций.Период,
	|	СостоянияНМАОрганизаций.Состояние,
	|	ПРЕДСТАВЛЕНИЕ(СостоянияНМАОрганизаций.Регистратор) КАК РегистраторПредставление,
	|	СостоянияНМАОрганизаций.Регистратор
	|ИЗ
	|	РегистрСведений.СостоянияНМАОрганизаций КАК СостоянияНМАОрганизаций
	|ГДЕ
	|	СостоянияНМАОрганизаций.Организация = &Организация
	|	И СостоянияНМАОрганизаций.НематериальныйАктив = &НематериальныйАктив";
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("НематериальныйАктив",Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	//получаем области
	Шапка = Макет.ПолучитьОбласть("Шапка");
	СтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	Заполнил = Макет.ПолучитьОбласть("Заполнил");
	
	// заполняем шапку
	СведенияОбОрганизации = ОбщегоНазначения.СведенияОЮрФизЛице(Организация, ДатаСведений);
	
	Шапка.Параметры.Заполнить(ВыборкаНМА);	
	Шапка.Параметры.ПредставлениеОрганизации = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
	Шапка.Параметры.ОрганизацияПоОКПО = СведенияОбОрганизации.КодПоОКПО;
	Шапка.Параметры.ОрганизацияРНН    = СведенияОбОрганизации.РНН;
	Шапка.Параметры.ДатаДок = Формат(ДатаСведений,"ДЛФ=Д");
	Шапка.Параметры.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ДокументВводаДата = '00010101';
	ДокументПоступления = "";
	
	ДокументВыбытияДата  = "";
	ДокументВыбытияНомер = "";
	ПричинаВыбытия		  = "";
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Состояние = Перечисления.ВидыСостоянийНМА.Поступил Тогда
			
			ДокументПоступления = Выборка.РегистраторПредставление;			
			
		ИначеЕсли Выборка.Состояние   = Перечисления.ВидыСостоянийНМА.ПринятКУчету   Тогда
			
			ДокументВводаДата  = Выборка.Период;		
			
		ИначеЕсли Выборка.Состояние = Перечисления.ВидыСостоянийНМА.Списан Тогда
			
			ДокументВыбытияДата = Выборка.Период;
			ДокументВыбытияНомер = Выборка.Регистратор.Номер;
			РегистраторСписания = Выборка.Регистратор;
			
			Если ТипЗнч(РегистраторСписания) = Тип("ДокументСсылка.ПередачаНМА") Тогда
				ПричинаВыбытия = "передача НМА" 	 
			ИначеЕсли	ТипЗнч(РегистраторСписания) = Тип("ДокументСсылка.СписаниеНМА")  Тогда
				ПричинаВыбытия = "списание НМА";
			КонецЕсли;
			
		КонецЕсли; 
	КонецЦикла;
	
	Шапка.Параметры.ДокументПоступления = ДокументПоступления;
	ТабДок.Вывести(Шапка);
	
	//выводим строку таблицы
	СтрокаТаблицы.Параметры.Заполнить(ВыборкаНМА);
	
	Если НЕ ЗначениеЗаполнено(ВыборкаНМА.СрокПолезнойСлужбы) ИЛИ ВыборкаНМА.СрокПолезнойСлужбы = 0 Тогда
		КоэффициентАмортизацииБУ = 0;	
	Иначе
		КоэффициентАмортизацииБУ = Окр((12/ВыборкаНМА.СрокПолезнойСлужбы) * 100, 2);	
	КонецЕсли;
	
	СтрокаТаблицы.Параметры.НормаАмортизации 	 = КоэффициентАмортизацииБУ;
	СтрокаТаблицы.Параметры.ДокументВводаДата 	 = ДокументВводаДата;
	СтрокаТаблицы.Параметры.ДокументВыбытияНомер = ДокументВыбытияНомер;
	СтрокаТаблицы.Параметры.ДокументВыбытияДата  = ДокументВыбытияДата;
	СтрокаТаблицы.Параметры.ПричинаВыбытия		 = ПричинаВыбытия;
	
	ТабДок.Вывести(СтрокаТаблицы);
	ТабДок.Вывести(Заполнил);
		
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ПолеСверху = 0;
	ТабДок.ПолеСнизу = 0;
	
	Возврат ТабДок;

	
КонецФункции // ПечатьОС6

// Функция формирует табличный документ с печатной формой инвентарной карточки НМА (форма ДА-2).
//
// Возвращаемое значение:
//  Табличный документ - печатная форма инвентарной карточки НМА.
//
Функция ПечатьДА2(ДатаСведений, Организация) 
		
	ТабДок = Новый ТабличныйДокумент();
		
	Макет		   = ПолучитьМакет("ДА2");
	ЛицеваяСторона = Макет.ПолучитьОбласть("ЛицеваяСторона");
	
	ВалютаРегламентированногоУчета 					  = Константы.ВалютаРегламентированногоУчета.Получить();
	СведенияОбОрганизации							  = ОбщегоНазначения.СведенияОЮрФизЛице(Организация, ДатаСведений);		
	ЛицеваяСторона.Параметры.ПредставлениеОрганизации = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
	ЛицеваяСторона.Параметры.ОрганизацияРНН_БИН       = ОбщегоНазначения.ПолучитьРегистрационныйНомерОрганизацииКонтрагентаВПечатнуюФорму(СведенияОбОрганизации, ДатаСведений, Ложь, ""); 
	ЛицеваяСторона.Параметры.ДатаДокумента            = Формат(ДатаСведений, "ДФ=dd.MM.yyyy");
	ЛицеваяСторона.Параметры.Валюта                   = ВалютаРегламентированногоУчета;
	
	ЗапросНМА = Новый Запрос();
	ЗапросНМА.УстановитьПараметр("Организация"		  , Организация);
	ЗапросНМА.УстановитьПараметр("ДатаСведений"		  , ДатаСведений);
	ЗапросНМА.УстановитьПараметр("НематериальныйАктив", Ссылка);
	
	ЗапросНМА.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальныеСведения.НематериальныйАктив КАК НематериальныйАктив,
	|	ВЫРАЗИТЬ(ПервоначальныеСведения.НематериальныйАктив.НаименованиеПолное КАК СТРОКА(100)) КАК НаименованиеАктива,
	|	ПервоначальныеСведения.НематериальныйАктив.Код КАК ИнвентарныйНомер,
	|	ПервоначальныеСведения.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведения.СрокПолезногоИспользования КАК СрокПолезногоИспользования
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(&ДатаСведений, Организация = &Организация) КАК ПервоначальныеСведения
	|ГДЕ
	|	ПервоначальныеСведения.НематериальныйАктив = &НематериальныйАктив";
	
	ВыборкаНМА = ЗапросНМА.Выполнить().Выбрать();
	ВыборкаНМА.Следующий();
	
	Если НЕ ЗначениеЗаполнено(ВыборкаНМА.НематериальныйАктив) Тогда
		ТекстСообщения = 
		"На момент формирования отчета нематериальный актив не принимался к учету.
		|Нельзя сформировать карточку учета объекта!";
		Сообщить(ТекстСообщения, СтатусСообщения.Внимание);
		Возврат неопределено;
	КонецЕсли;	
	
	ЗаполнитьЗначенияСвойств(ЛицеваяСторона.Параметры, ВыборкаНМА);
	
	ЗапросСостояния = Новый Запрос();
	ЗапросСостояния.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияНМАОрганизаций.Период КАК Период,
	|	СостоянияНМАОрганизаций.Регистратор,
	|	СостоянияНМАОрганизаций.НематериальныйАктив,
	|	СостоянияНМАОрганизаций.Состояние
	|ИЗ
	|	РегистрСведений.СостоянияНМАОрганизаций КАК СостоянияНМАОрганизаций
	|ГДЕ
	|	СостоянияНМАОрганизаций.Организация = &Организация
	|	И СостоянияНМАОрганизаций.НематериальныйАктив = &НематериальныйАктив
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	ЗапросСостояния.УстановитьПараметр("Организация"		, Организация);
	ЗапросСостояния.УстановитьПараметр("НематериальныйАктив", Ссылка);
	ВыборкаСостояния = ЗапросСостояния.Выполнить().Выбрать();
	
	Пока ВыборкаСостояния.Следующий() Цикл
		
		РегистраторНомер = ОбщегоНазначения.ПолучитьНомерНаПечать(ВыборкаСостояния.Регистратор, глСписокПрефиксовУзлов);
		
		Если ВыборкаСостояния.Состояние = Перечисления.ВидыСостоянийНМА.Поступил Тогда
			
			ЛицеваяСторона.Параметры.ДокументПриобритенияНаименование = ТипЗнч(ВыборкаСостояния.Регистратор);
			ЛицеваяСторона.Параметры.ДокументПриобритенияНомер        = РегистраторНомер;
			ЛицеваяСторона.Параметры.ДокументПриобритенияДата         = Формат(ВыборкаСостояния.Период, "ДФ=dd.MM.yyyy");
			
		ИначеЕсли ВыборкаСостояния.Состояние = Перечисления.ВидыСостоянийНМА.ПринятКУчету Тогда
			
			ДокументВводаДатаНомер = "№%Номер% от %Дата%";
			Номер				   = РегистраторНомер;
			Дата				   = Формат(ВыборкаСостояния.Период, "ДФ=dd.MM.yyyy");
			ДокументВводаДатаНомер = СтрЗаменить(ДокументВводаДатаНомер, "%Номер%", Номер);
			ДокументВводаДатаНомер = СтрЗаменить(ДокументВводаДатаНомер, "%Дата%", Дата);
			ЛицеваяСторона.Параметры.ДокументВводаДатаНомер = ДокументВводаДатаНомер;
			
		ИначеЕсли ВыборкаСостояния.Состояние = Перечисления.ВидыСостоянийНМА.Списан Тогда
			
			ДокументВыбытияДатаНомер = "№%Номер% от %Дата%";
			Номер					 = РегистраторНомер;
			Дата					 = Формат(ВыборкаСостояния.Период, "ДФ=dd.MM.yyyy");
			ДокументВыбытияДатаНомер = СтрЗаменить(ДокументВыбытияДатаНомер, "%Номер%", Номер);
			ДокументВыбытияДатаНомер = СтрЗаменить(ДокументВыбытияДатаНомер, "%Дата%", Дата);
			ЛицеваяСторона.Параметры.ДокументВыбытияДатаНомер = ДокументВыбытияДатаНомер;
			
			Если ТипЗнч(ВыборкаСостояния.Регистратор) = Тип("ДокументСсылка.ПередачаНМА") Тогда
				ПричинаВыбытия = "передача НМА" 	 
			ИначеЕсли ТипЗнч(ВыборкаСостояния.Регистратор) = Тип("ДокументСсылка.СписаниеНМА") Тогда
				ПричинаВыбытия = "списание НМА";
			КонецЕсли;
			ЛицеваяСторона.Параметры.ПричинаВыбытия = ПричинаВыбытия;
			
			Если ТипЗнч(ВыборкаСостояния.Регистратор) = Тип("ДокументСсылка.ПередачаНМА") Тогда
				
				ЗапросПередачаНМА = Новый Запрос();
				ЗапросПередачаНМА.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ПередачаНМА.СуммаВключаетНДС,
				|	ПередачаНМА.Сумма,
				|	ПередачаНМА.СуммаНДС,
				|	ПередачаНМА.Дата,
				|	ПередачаНМА.ВалютаДокумента
				|ИЗ
				|	Документ.ПередачаНМА КАК ПередачаНМА
				|ГДЕ
				|	ПередачаНМА.Ссылка = &Регистратор";
				ЗапросПередачаНМА.УстановитьПараметр("Регистратор", ВыборкаСостояния.Регистратор);
				ВыборкаПередачаНМА = ЗапросПередачаНМА.Выполнить().Выбрать();
				ВыборкаПередачаНМА.Следующий();
				
				Если ВыборкаПередачаНМА.СуммаВключаетНДС Тогда
					СуммаРеализации = ВыборкаПередачаНМА.Сумма - ВыборкаПередачаНМА.СуммаНДС;	
				Иначе
					СуммаРеализации = ВыборкаПередачаНМА.Сумма; 	
				КонецЕсли;
				
				Если ВыборкаПередачаНМА.ВалютаДокумента <> ВалютаРегламентированногоУчета Тогда
					
					ВалютаДокументаКурсКратность = ОбщегоНазначения.ПолучитьКурсВалюты(ВыборкаПередачаНМА.ВалютаДокумента, ВыборкаПередачаНМА.Дата);
					ВалютаРегУчетаКурсКратность  = ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаРегламентированногоУчета, ВыборкаПередачаНМА.Дата);
					
					СуммаРеализации = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(
										СуммаРеализации, 
										ВыборкаПередачаНМА.ВалютаДокумента, 
										ВалютаРегламентированногоУчета, 
										ВалютаДокументаКурсКратность.Курс, 
										ВалютаРегУчетаКурсКратность.Курс, 
										ВалютаДокументаКурсКратность.Кратность, 
										ВалютаРегУчетаКурсКратность.Кратность);
					
				КонецЕсли;
				
				ЛицеваяСторона.Параметры.СуммаДоходаУбыткаОтРеализации = СуммаРеализации;	
				
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла;
	
	ТабДок.Вывести(ЛицеваяСторона);
	
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();

	СведенияОДостройкеИРемонтеШапка           			  = Макет.ПолучитьОбласть("СведенияОДостройкеИРемонтеШапка");
	СведенияОДостройкеИРемонтеШапка.Параметры.Валюта 	  = ВалютаРегламентированногоУчета;
	СведенияОДостройкеИРемонтеСтрока         			  = Макет.ПолучитьОбласть("СведенияОДостройкеИРемонтеСтрока");
	СведенияОПереоценкиИПеремещенииШапка      			  = Макет.ПолучитьОбласть("СведенияОПереоценкиИПеремещенииШапка");
	СведенияОПереоценкиИПеремещенииШапка.Параметры.Валюта = ВалютаРегламентированногоУчета;	
	СведенияОПереоценкиИПеремещенииСтрока     			  = Макет.ПолучитьОбласть("СведенияОПереоценкиИПеремещенииСтрока");
	КраткаяИндивидуальнаяХарактеристикаАктива 			  = Макет.ПолучитьОбласть("КраткаяИндивидуальнаяХарактеристикаАктива");
	
	ТабДок.Вывести(СведенияОДостройкеИРемонтеШапка);
	ТабДок.Вывести(СведенияОДостройкеИРемонтеСтрока);
	ТабДок.Вывести(СведенияОПереоценкиИПеремещенииШапка);
	ТабДок.Вывести(СведенияОПереоценкиИПеремещенииСтрока);
	ТабДок.Вывести(КраткаяИндивидуальнаяХарактеристикаАктива);
	
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НематериальныеАктивы_НМА2";
	ТабДок.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб 		   = Истина;
	ТабДок.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабДок.ПолеСверху 		   = 0;
	ТабДок.ПолеСнизу		   = 0;
	
	Возврат ТабДок;
	
КонецФункции // ПечатьДА2

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура осуществляет печать справочника. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
// Параметры:
//  НазваниеМакета - строка, название макета.
// Возвращаемое значение:
//  Нет.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, ФормаЭлемента = Неопределено) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Справочник можно распечатать только после его записи");
		Возврат;
	КонецЕсли; 

	Если Не ПроверитьМодифицированностьСправочника(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	//Если ФормаЭлемента = Неопределено Тогда
	//	ДатаСведений  = ОбщегоНазначения.ПолучитьРабочуюДату();
	//	ВыборкаЗаписей = РегистрыСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.ПолучитьПоследнее(ДатаСведений,Новый Структура("ОсновноеСредство",Ссылка));
	//	Организация    = ?(ВыборкаЗаписей.Количество() > 0,ВыборкаЗаписей.Организация,Справочники.Организации.ПустаяСсылка());
	//Иначе
	//	ДатаСведений  = ФормаЭлемента.ДатаСведений;
	//	Организация   = ФормаЭлемента.Организация;
	//КонецЕсли;
	
	ДатаСведений  = КонецДня(ОбщегоНазначения.ПолучитьРабочуюДату());
	ВыборкаЗаписей = РегистрыСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.ПолучитьПоследнее(ДатаСведений,Новый Структура("НематериальныйАктив",Ссылка));
	Организация    = ?(ВыборкаЗаписей.Количество() > 0,ВыборкаЗаписей.Организация,Справочники.Организации.ПустаяСсылка());
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "НМА2" тогда
		ТабДокумент = ПечатьНМА2(ДатаСведений,Организация);
	ИначеЕсли ИмяМакета = "ДА2" тогда
		ТабДокумент = ПечатьДА2(ДатаСведений,Организация);
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Инвентарная карточка ОС (Форма ОС-6)");

КонецПроцедуры // Печать()

// Возвращает доступные варианты печати справочника.
//
// Вовращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати.
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("НМА2, ДА2","Форма НМА-2","Форма ДА-2");

КонецФункции // ПолучитьСписокПечатныхФорм(

// Проверяет модифицированность справочника перед печатью, и если необходимо 
// записывает его
// 
// Параметры
//  ЭлементСправочника - (СправочникОбъект.*) - проверяемый элемент справочника
//
Функция ПроверитьМодифицированностьСправочника(ЭлементСправочника)

	Результат = Ложь;

	Если ЭлементСправочника.Модифицированность() Тогда

		Ответ = Вопрос("Элемент справочника изменен. Для печати его необходимо записать.
		               |Записать?",
		               РежимДиалогаВопрос.ОКОтмена, , 
		               КодВозвратаДиалога.Отмена,
		               "Элемент справочника изменен");

		Если Ответ = КодВозвратаДиалога.ОК Тогда

			ЭлементСправочника.Записать();
			Результат = Истина;

		КонецЕсли;

	Иначе
		Результат = Истина;
	КонецЕсли;

	Возврат Результат;

КонецФункции // ПроверитьМодифицированностьСправочника()

#КонецЕсли

