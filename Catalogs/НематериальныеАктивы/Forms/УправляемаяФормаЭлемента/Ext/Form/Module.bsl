////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// Хранит дерево макетов печатных форм
&НаКлиенте
Перем мДеревоМакетов;
// Хранит элемент управления подменю печати
&НаКлиенте
Перем мПодменюПечати;
// Хранит элемент управления кнопку печать по умолчанию
&НаКлиенте
Перем мПечатьПоУмолчанию;
//&НаКлиенте
//Перем мПлановаяНоменклатура;
//&НаКлиенте
//Перем мПлановаяХарактеристика;
&НаКлиенте
Перем Переменные;


&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	Если ПустаяСтрока(Объект.НаименованиеПолное) Тогда
		Объект.НаименованиеПолное = Объект.Наименование;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

//Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
&НаСервере
Процедура УстановитьКнопкиПечати()
	//мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(объект.Ссылка, ПолучитьСтруктуруПечатныхФорм(), Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));
	//УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, Элементы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	//УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, Элементы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));
	//Если Не мПодменюПечати = Неопределено Тогда
	//	УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	//КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Объявление переменных
	Переменные = Новый Структура;
	Переменные.Вставить("мПлановаяНоменклатура");
	Переменные.Вставить("мПлановаяХарактеристика");
    //////////////////////////////////////////
	//добавляет действие "Редактировать номер"	
	//РаботаСДиалогами.ДобавитьВМенюДействияКнопкуРедактированияКода(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	//РаботаСДиалогами.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);	
	УстановитьКнопкиПечати();
	УстановитьВидимость();
   	Переменные = ПолучитьПлановуюНоменклатуру(Переменные);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура - обработчик нажатия кнопки "РедактироватьКод"
// подменю "Действия"
//
&НаКлиенте
Процедура ДействияФормыРедактироватьКод(Кнопка)
	//РаботаСДиалогами.ИзменениеВозможностиРедактированияНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
&НаКлиенте
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Команда)
	ОсновныеДействияФормыПечатьПоУмолчаниюНаСервере(мДеревоМакетов);
КонецПроцедуры
&НаСервере
Процедура ОсновныеДействияФормыПечатьПоУмолчаниюНаСервере(мДеревоМакетов)
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, Объект, ЭтаФорма, "Кнопка.Текст");
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
&НаКлиенте
Процедура ОсновныеДействияФормыПечать(Кнопка)
	ОсновныеДействияФормыПечатьнаСервере(мДеревоМакетов);
КонецПроцедуры

&НаСервере
Процедура ОсновныеДействияФормыПечатьнаСервере(мДеревоМакетов)
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, Объект, ЭтаФорма, "Кнопка.Текст");
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
&НаКлиенте
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Команда)
	ОсновныеДействияФормыУстановитьПечатьПоУмолчаниюНаСервере(мДеревоМакетов);
КонецПроцедуры

&НаСервере
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчаниюНаСервере(мДеревоМакетов)
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Объект.Ссылка.Метаданные().Имя) Тогда
		УстановитьКнопкиПечати();
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Переменные = ПолучитьИзВременногоХранилища(Параметры.АдресХранилища);
	Если Переменные.мПлановаяНоменклатура 	<> ПлановаяНоменклатура
		ИЛИ Переменные.мПлановаяХарактеристика	<> ПлановаяХарактеристика Тогда
		Если НЕ ЗначениеЗаполнено(ПлановаяНоменклатура) Тогда
			НаборЗаписей = РегистрыСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ВнеоборотныйАктив.Установить(Объект.Ссылка);
			НаборЗаписей.Прочитать();
			НаборЗаписей.Очистить();
			Попытка
				НаборЗаписей.Записать();
			Исключение
				Сообщить("При отмене соответствия плановой номенклатуре произошла ошибка: "+ОписаниеОшибки(),СтатусСообщения.Важное);
				Отказ = Истина;
			КонецПопытки;
		Иначе
			НаборЗаписей = РегистрыСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ВнеоборотныйАктив.Установить(Объект.Ссылка);
			НаборЗаписей.Прочитать();
			НЗ = НаборЗаписей.Добавить();
			НЗ.ВнеоборотныйАктив = Объект.Ссылка;
			НЗ.ПлановаяНоменклатура = ПлановаяНоменклатура;
			НЗ.ХарактеристикаПлановойНоменклатуры = ПлановаяХарактеристика;
			Попытка
				НаборЗаписей.Записать();
			Исключение
				Сообщить("При установке соответствия плановой номенклатуре произошла ошибка: "+ОписаниеОшибки(),СтатусСообщения.Важное);
				Отказ = Истина;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПлановаяНоменклатураПриИзменении(Элемент)
	Если ПлановаяНоменклатура.Пустая() Тогда
		ПлановаяХарактеристика = Справочникиузп_ПлановыеХарактеристикиНоменклатурыПустаяСсылка();
	КонецЕсли;
	УстановитьВидимость();
КонецПроцедуры

&наСервере
Функция Справочникиузп_ПлановыеХарактеристикиНоменклатурыПустаяСсылка()
	Возврат Справочники.узп_ПлановыеХарактеристикиНоменклатуры.ПустаяСсылка();
КонецФункции

&НаСервере
Функция ПолучитьПлановуюНоменклатуру(Переменные)
    ПлановаяНоменклатура 	= Справочники.фин_ПлановаяНоменклатура.ПустаяСсылка();
	ПлановаяХарактеристика 	= Справочники.узп_ПлановыеХарактеристикиНоменклатуры.ПустаяСсылка();
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат Переменные;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Соответствие.ПлановаяНоменклатура,
		|	Соответствие.ХарактеристикаПлановойНоменклатуры
		|ИЗ
		|	РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК Соответствие
		|ГДЕ
		|	Соответствие.ВнеоборотныйАктив = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
	    ПлановаяНоменклатура = Выборка.ПлановаяНоменклатура;
		ПлановаяХарактеристика = Выборка.ХарактеристикаПлановойНоменклатуры;
	КонецЕсли;
 	Переменные.мПлановаяНоменклатура 	= ПлановаяНоменклатура;
	Переменные.мПлановаяХарактеристика	= ПлановаяХарактеристика;
	Возврат Переменные;
КонецФункции

&НаКлиенте
Процедура ПлановаяНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.фин_ПлановаяНоменклатура.ФормаВыбора",Новый Структура("Отбор",Новый Структура("ТипПозицииВПланеЗакупок",Перечисленияузп_ТипыПозицийПлановойНоменклатурыВПланеЗакупокНематериальныйАктив())),Элемент);
КонецПроцедуры

&НаСервере
Функция Перечисленияузп_ТипыПозицийПлановойНоменклатурыВПланеЗакупокНематериальныйАктив()
	Возврат Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.НематериальныйАктив;
КонецФункции

 // Процедура устанавливает видимость реквизитов  формы
//
&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.ПлановаяХарактеристика.Доступность = ЗначениеЗаполнено(ПлановаяНоменклатура);
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Параметры.АдресХранилища = ПоместитьВоВременноеХранилище(переменные,ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//оформление
	оф_ПланированиеЗаголовок = "Планирование";
КонецПроцедуры

