Перем ПрошлыйИзмененныйГоловнаяОрганизация;

Перем мЭтоНовый;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Заполняет регистры учетной политики для переданной организации значениями по умолчанию
//
Процедура ЗаполнитьРегистрыУчетнойПолитикиПоУмолчанию(Организация)

	//Заполняем сведения по УчетнаяПолитикаБухгалтерскийУчет Организации 
	НаборЗаписей = РегистрыСведений.УчетнаяПолитикаБухгалтерскийУчет.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Значение		 = Организация;
	НаборЗаписей.Отбор.Организация.Использование = Истина;
	НаборЗаписей.Записать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = Макс(НастройкаПравДоступа.ПолучитьПервуюДатуДоступногоПериода(), '19000101'); 
	Запись.Организация =  Организация;
	Запись.СпособРасчетаСебестоимостиПроизводства = Перечисления.СпособыРасчетаСебестоимостиПродукции.ПоПодразделениям;
	Запись.УчетВременныхРазницПоНалогуНаПрибыль   = Истина;
	
	НаборЗаписей.Записать();
	
	//Заполняем сведения по УчетнаяПолитикаНалоговыйУчет Организации 
	НаборЗаписей = РегистрыСведений.УчетнаяПолитикаНалоговыйУчет.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Значение		 = Организация;
	НаборЗаписей.Отбор.Организация.Использование = Истина;
	НаборЗаписей.Записать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = Макс(НастройкаПравДоступа.ПолучитьПервуюДатуДоступногоПериода(), '19000101'); 
	Запись.Организация =  Организация;
	Запись.НДСНалоговыйПериод 	   = Перечисления.Периодичность.Квартал;
	Запись.НДСМетодОтнесенияВЗачет = Перечисления.МетодыОтнесенияНДСВЗачет.Пропорциональный;
	Запись.ОрганизацияЯвляетсяПлательщикомКПН = Истина;
	Запись.ОрганизацияЯвляетсяПлательщикомНДС = Истина;
	Запись.УпрощенныйУчетИПНиОПВ   		 = Ложь;
	Запись.ОтражениеПоПериодуРегистрации = Истина;
	Запись.ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ = Истина;
	Запись.ОрганизацияЯвляетсяПлательщикомСН = Истина;
	Запись.ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога = Истина;
	Запись.ПорядокСписанияЗадолженностиПоЗарплате = Перечисления.ПорядокСписанияЗадолженностиПоЗарплате.ПоСпособуЗаполненияДокумента;
	
	НаборЗаписей.Записать();

	// Заполняем сведения по УчетнаяПолитикаПоПерсоналуОрганизации 
	НаборЗаписей = РегистрыСведений.УчетнаяПолитикаПоПерсоналуОрганизаций.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Значение		 = Организация;
	НаборЗаписей.Отбор.Организация.Использование = Истина;
	
	Запись = НаборЗаписей.Добавить();
	Запись.Организация = Организация;
	НаборЗаписей.Записать();

КонецПроцедуры // ЗаполнитьРегистрыУчетнойПолитикиПоУмолчанию

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события "ПередЗаписью" Объекта
//
Процедура ПередЗаписью(Отказ, Сообщать = Истина)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	мЭтоНовый = ЭтоНовый();
	
	Если НЕ ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		// если головная не указана, то ставим ссылку на самого себя
		ГоловнаяОрганизация = Ссылка;
	КонецЕсли;
			
	Если НЕ УчетПоМестнымБюджетам И ЗначениеЗаполнено(МестныйБюджет) Тогда
		МестныйБюджет = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;

	Если НЕ Отказ Тогда
		// ПрошлыйИзмененныйГоловнаяОрганизация <> неопределено, когда изменилась головная организация
		ПрошлыйИзмененныйГоловнаяОрганизация = ?(НЕ ЭтоНовый() И НЕ Ссылка.ГоловнаяОрганизация = ГоловнаяОрганизация, Ссылка.ГоловнаяОрганизация, Неопределено);
		НастройкаПравДоступа.ПередЗаписьюНовогоОбъектаСПравамиДоступаПользователей(ЭтотОбъект, Отказ, ГоловнаяОрганизация);
	КонецЕсли;

КонецПроцедуры // ПередЗаписью()

// Обработчик события "ПриЗаписи" Объекта
//
Процедура ПриЗаписи(Отказ)
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// заполним для новой организации регистры учетной политики по умолчанию
	Если мЭтоНовый Тогда
		ЗаполнитьРегистрыУчетнойПолитикиПоУмолчанию(Ссылка);
		глЗначениеПеременнойУстановить("глИсчислениеНалоговСтруктурныхЕдиниц", Неопределено, ИСТИНА);        
	КонецЕсли;

	НастройкаПравДоступа.ОбновитьПраваДоступаКИерархическимОбъектамПриНеобходимости(Ссылка,ПрошлыйИзмененныйГоловнаяОрганизация, Отказ);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

мЭтоНовый = Ложь;
