Процедура РассчитатьДокументПоПравиламСценарногоПланирования(Объект,СценарийИсходный,СценарийРезультирующий,ОбъектИсточник = Неопределено) Экспорт
	Объект.ОборотыПоСтатьям.Очистить();
	Бюджет = Объект.ФормируемыйБюджет;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_СтатьиБюджета.Ссылка КАК Статья,
		|	фин_СтатьиБюджета.ФинансовыйПоказатель
		|ПОМЕСТИТЬ ВТ_Статьи
		|ИЗ
		|	Справочник.фин_СтатьиБюджета КАК фин_СтатьиБюджета
		|ГДЕ
		|	фин_СтатьиБюджета.Ссылка В (&Статьи)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Статьи.Статья КАК СтатьяБюджета,
		|	ВТ_Статьи.ФинансовыйПоказатель,
		|	ВЫБОР
		|		КОГДА фин_ПравилаСценарногоПланированияБюджетов.ИсходныйСценарий ЕСТЬ NULL 
		|				И фин_ПравилаСценарногоПланированияСтатейБюджетов.СпособЗаполнения ЕСТЬ NULL 
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.фин_СпособыЗаполненияСтатейПриСценарныхРасчетах.НЕЗаполнять)
		|		КОГДА фин_ПравилаСценарногоПланированияСтатейБюджетов.СпособЗаполнения ЕСТЬ NULL 
		|				ИЛИ фин_ПравилаСценарногоПланированияСтатейБюджетов.СпособЗаполнения = ЗНАЧЕНИЕ(Перечисление.фин_СпособыЗаполненияСтатейПриСценарныхРасчетах.ПоОбщемуПравилу)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.фин_СпособыЗаполненияСтатейПриСценарныхРасчетах.СПрименениемКоэффициента)
		|		ИНАЧЕ фин_ПравилаСценарногоПланированияСтатейБюджетов.СпособЗаполнения
		|	КОНЕЦ КАК СпособЗаполнения,
		|	ВЫБОР
		|		КОГДА фин_ПравилаСценарногоПланированияСтатейБюджетов.СпособЗаполнения ЕСТЬ NULL 
		|				ИЛИ фин_ПравилаСценарногоПланированияСтатейБюджетов.СпособЗаполнения = ЗНАЧЕНИЕ(Перечисление.фин_СпособыЗаполненияСтатейПриСценарныхРасчетах.ПоОбщемуПравилу)
		|			ТОГДА фин_ПравилаСценарногоПланированияБюджетов.ИсходныйСценарий
		|		ИНАЧЕ фин_ПравилаСценарногоПланированияСтатейБюджетов.ИсходныйСценарий
		|	КОНЕЦ КАК ИсходныйСценарий,
		|	ВЫБОР
		|		КОГДА фин_ПравилаСценарногоПланированияСтатейБюджетов.СпособЗаполнения ЕСТЬ NULL 
		|				ИЛИ фин_ПравилаСценарногоПланированияСтатейБюджетов.СпособЗаполнения = ЗНАЧЕНИЕ(Перечисление.фин_СпособыЗаполненияСтатейПриСценарныхРасчетах.ПоОбщемуПравилу)
		|			ТОГДА фин_ПравилаСценарногоПланированияБюджетов.ПоправочныйКоэффициентКСумме
		|		ИНАЧЕ фин_ПравилаСценарногоПланированияСтатейБюджетов.ПоправочныйКоэффициентКСумме
		|	КОНЕЦ КАК ПоправочныйКоэффициентКСумме,
		|	ВЫБОР
		|		КОГДА фин_ПравилаСценарногоПланированияСтатейБюджетов.СпособЗаполнения ЕСТЬ NULL 
		|				ИЛИ фин_ПравилаСценарногоПланированияСтатейБюджетов.СпособЗаполнения = ЗНАЧЕНИЕ(Перечисление.фин_СпособыЗаполненияСтатейПриСценарныхРасчетах.ПоОбщемуПравилу)
		|			ТОГДА фин_ПравилаСценарногоПланированияБюджетов.ПоправочныйКоэффициентККоличеству
		|		ИНАЧЕ фин_ПравилаСценарногоПланированияСтатейБюджетов.ПоправочныйКоэффициентККоличеству
		|	КОНЕЦ КАК ПоправочныйКоэффициентККоличеству,
		|	ВЫБОР
		|		КОГДА фин_ПравилаСценарногоПланированияСтатейБюджетов.СпособЗаполнения ЕСТЬ NULL 
		|				ИЛИ фин_ПравилаСценарногоПланированияСтатейБюджетов.СпособЗаполнения = ЗНАЧЕНИЕ(Перечисление.фин_СпособыЗаполненияСтатейПриСценарныхРасчетах.ПоОбщемуПравилу)
		|			ТОГДА ЕСТЬNULL(фин_ПравилаСценарногоПланированияБюджетов.Лаг,0)
		|		ИНАЧЕ фин_ПравилаСценарногоПланированияСтатейБюджетов.Лаг
		|	КОНЕЦ КАК Лаг,
		|	фин_ПравилаСценарногоПланированияСтатейБюджетов.Формула,
		|	фин_ПравилаСценарногоПланированияСтатейБюджетов.ФормулаКоличество,
		|	фин_ПравилаСценарногоПланированияСтатейБюджетов.СуммаПоРасценкам
		|ИЗ
		|	ВТ_Статьи КАК ВТ_Статьи
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.фин_ПравилаСценарногоПланированияБюджетов КАК фин_ПравилаСценарногоПланированияБюджетов
		|		ПО (фин_ПравилаСценарногоПланированияБюджетов.Бюджет = &Бюджет)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.фин_ПравилаСценарногоПланированияСтатейБюджетов КАК фин_ПравилаСценарногоПланированияСтатейБюджетов
		|		ПО ВТ_Статьи.Статья = фин_ПравилаСценарногоПланированияСтатейБюджетов.СтатьяБюджета";
	
	Запрос.УстановитьПараметр("Статьи", фин_УправлениеБюджетированием.ПервичныеСтатьиБюджета(Бюджет,Объект.ПериодПланирования));
	Запрос.УстановитьПараметр("Бюджет", Бюджет);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаПравил = РезультатЗапроса.Выгрузить();
	
	//1. расчет с применением коэффициентов
	
	ПравилаКоэффициенты = ТаблицаПравил.Скопировать(Новый Структура("СпособЗаполнения",Перечисления.фин_СпособыЗаполненияСтатейПриСценарныхРасчетах.СПрименениемКоэффициента));
	СводПравил = ПравилаКоэффициенты.Скопировать();
	СводПравил.Свернуть("ИсходныйСценарий,Лаг");
	
	ТребуютсяДанныеОбъектаДокумента = НЕ (ОбъектИсточник=Неопределено ИЛИ ТипЗнч(ОбъектИсточник)=Тип("Структура") ИЛИ ОбъектИсточник.Проведен);
	
	Для Каждого СтрокаСвода Из СводПравил Цикл
		Показатели = ПравилаКоэффициенты.Скопировать(Новый Структура("ИсходныйСценарий,Лаг",СтрокаСвода.ИсходныйСценарий,СтрокаСвода.Лаг)).ВыгрузитьКолонку("ФинансовыйПоказатель");	
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Коэффициенты",ПравилаКоэффициенты);
		Если ТребуютсяДанныеОбъектаДокумента Тогда
			Запрос.УстановитьПараметр("ОборотыПоСтатьям",ОбъектИсточник.ОборотыПоСтатьям.Выгрузить());
		КонецЕсли;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Коэффициенты.СтатьяБюджета,
			|	Коэффициенты.ФинансовыйПоказатель,
			|	Коэффициенты.ПоправочныйКоэффициентКСумме,
			|	Коэффициенты.ПоправочныйКоэффициентККоличеству
			|ПОМЕСТИТЬ ВТ_Коэффициенты
			|ИЗ
			|	&Коэффициенты КАК Коэффициенты
			|;
			| ";
			Если ТребуютсяДанныеОбъектаДокумента Тогда
				Запрос.Текст = Запрос.Текст+"
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ОборотыПоСтатьям.ВалютаОперации,
				|	ОборотыПоСтатьям.Количество,
				|	ОборотыПоСтатьям.Контрагент,
				|	ОборотыПоСтатьям.Номенклатура,
				|	ОборотыПоСтатьям.ПериодПланирования,
				|	ОборотыПоСтатьям.Проект,
				|	ОборотыПоСтатьям.Разрез1,
				|	ОборотыПоСтатьям.Разрез2,
				|	ОборотыПоСтатьям.Разрез3,
				|	ОборотыПоСтатьям.Разрез4,
				|	ОборотыПоСтатьям.Разрез5,
				|	ОборотыПоСтатьям.Разрез6,
				|	ОборотыПоСтатьям.Разрез7,
				|	ОборотыПоСтатьям.Разрез8,
				|	ОборотыПоСтатьям.Разрез9,
				|	ОборотыПоСтатьям.Разрез10,
				|	ОборотыПоСтатьям.Сумма,
				|	ОборотыПоСтатьям.УправленческоеПодразделение,
				|	ОборотыПоСтатьям.ФинансовыйПоказатель
				|ПОМЕСТИТЬ ВТ_Обороты
				|ИЗ
				|	&ОборотыПоСтатьям КАК ОборотыПоСтатьям
				|;
			| ";
			КонецЕсли;
			Запрос.Текст = Запрос.Текст+"
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	фин_ОборотыБюджетовОбороты.ПериодПланирования,
			|	фин_ОборотыБюджетовОбороты.ФинансовыйПоказатель,
			|	фин_ОборотыБюджетовОбороты.УправленческоеПодразделение,
			|	фин_ОборотыБюджетовОбороты.Проект,
			|	фин_ОборотыБюджетовОбороты.Номенклатура,
			|	фин_ОборотыБюджетовОбороты.Контрагент,
			|	СУММА(фин_ОборотыБюджетовОбороты.КоличествоОборот) КАК Количество,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез1,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез2,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез3,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез4,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез5,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез6,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез7,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез8,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез9,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез10,
			|	фин_ОборотыБюджетовОбороты.Валюта КАК ВалютаОперации,
			|	СУММА(фин_ОборотыБюджетовОбороты.ВалютнаяСуммаОборот) КАК Сумма
			|ПОМЕСТИТЬ ВТ_Данные
			|ИЗ
			|	РегистрНакопления.фин_ОборотыБюджетов.Обороты(
			|			,
			|			,
			|			,
			|			"+?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_БюджетированиеПоОрганизациям"),"Организация = &Организация И ","")+"
			|				Сценарий = &Сценарий
			|				И ФинансовыйПоказатель В (&Показатели)
			|				И ПериодПланирования >= &НачалоПериода
			|				И ПериодПланирования <= &КонецПериода"+?(Объект.УровеньДетализацииБюджета=Перечисления.фин_УровниДетализацииБюджета.БюджетПроекта," И Проект = &Проект","")+?(Объект.УровеньДетализацииБюджета=Перечисления.фин_УровниДетализацииБюджета.БюджетПодразделения,?(Объект.ФормируемыйБюджет.ВключаяПодчиненныеПодразделения," И УправленческоеПодразделение В ИЕРАРХИИ (&УправленческоеПодразделение)"," И УправленческоеПодразделение = &УправленческоеПодразделение"),"")+") КАК фин_ОборотыБюджетовОбороты
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.фин_КлассификаторНаборовДополнительныхРазрезов КАК фин_КлассификаторНаборовДополнительныхРазрезов
			|		ПО фин_ОборотыБюджетовОбороты.ДополнительныеРазрезы = фин_КлассификаторНаборовДополнительныхРазрезов.Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез9,
			|	фин_ОборотыБюджетовОбороты.Контрагент,
			|	фин_ОборотыБюджетовОбороты.УправленческоеПодразделение,
			|	фин_ОборотыБюджетовОбороты.Номенклатура,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез8,
			|	фин_ОборотыБюджетовОбороты.Проект,
			|	фин_ОборотыБюджетовОбороты.ФинансовыйПоказатель,
			|	фин_ОборотыБюджетовОбороты.Валюта,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез2,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез6,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез10,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез1,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез3,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез4,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез5,
			|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез7,
			|	фин_ОборотыБюджетовОбороты.ПериодПланирования
			| ";
			Если ТребуютсяДанныеОбъектаДокумента Тогда
				Запрос.Текст = Запрос.Текст+"
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ВТ_Обороты.ПериодПланирования,
				|	ВТ_Обороты.ФинансовыйПоказатель,
				|	ВТ_Обороты.УправленческоеПодразделение,
				|	ВТ_Обороты.Проект,
				|	ВТ_Обороты.Номенклатура,
				|	ВТ_Обороты.Контрагент,
				|	ВТ_Обороты.Количество,
				|	ВТ_Обороты.Разрез1,
				|	ВТ_Обороты.Разрез2,
				|	ВТ_Обороты.Разрез3,
				|	ВТ_Обороты.Разрез4,
				|	ВТ_Обороты.Разрез5,
				|	ВТ_Обороты.Разрез6,
				|	ВТ_Обороты.Разрез7,
				|	ВТ_Обороты.Разрез8,
				|	ВТ_Обороты.Разрез9,
				|	ВТ_Обороты.Разрез10,
				|	ВТ_Обороты.ВалютаОперации,
				|	ВТ_Обороты.Сумма
				|ИЗ
				|	ВТ_Обороты КАК ВТ_Обороты
				|ГДЕ ВТ_Обороты.ПериодПланирования >= &НачалоПериода
				|				И ВТ_Обороты.ПериодПланирования <= &КонецПериода
				|				И ВТ_Обороты.ФинансовыйПоказатель В (&Показатели)
				| ";
			КонецЕсли;
			Запрос.Текст = Запрос.Текст+"
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Данные.ПериодПланирования,
			|	ВТ_Данные.ФинансовыйПоказатель,
			|	ВТ_Данные.УправленческоеПодразделение,
			|	ВТ_Данные.Проект,
			|	ВТ_Данные.Номенклатура,
			|	ВТ_Данные.Контрагент,
			|	ВТ_Данные.Количество * ВТ_Коэффициенты.ПоправочныйКоэффициентККоличеству КАК Количество,
			|	ВТ_Данные.Разрез1,
			|	ВТ_Данные.Разрез2,
			|	ВТ_Данные.Разрез3,
			|	ВТ_Данные.Разрез4,
			|	ВТ_Данные.Разрез5,
			|	ВТ_Данные.Разрез6,
			|	ВТ_Данные.Разрез7,
			|	ВТ_Данные.Разрез8,
			|	ВТ_Данные.Разрез9,
			|	ВТ_Данные.Разрез10,
			|	ВТ_Данные.ВалютаОперации,
			|	ВТ_Данные.Сумма * ВТ_Коэффициенты.ПоправочныйКоэффициентКСумме КАК Сумма,
			|	ВТ_Коэффициенты.СтатьяБюджета
			|ИЗ
			|	ВТ_Данные КАК ВТ_Данные
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Коэффициенты КАК ВТ_Коэффициенты
			|		ПО ВТ_Данные.ФинансовыйПоказатель = ВТ_Коэффициенты.ФинансовыйПоказатель";
			
			
		ИсходныйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(Объект.ПериодПланирования,СценарийРезультирующий,-СтрокаСвода.Лаг);
		Запрос.УстановитьПараметр("КонецПериода", 	фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьГоризонтПланирования(ИсходныйПериод,СценарийРезультирующий));
		Запрос.УстановитьПараметр("НачалоПериода", 	ИсходныйПериод);
		Запрос.УстановитьПараметр("Организация", 	Объект.Организация);
		Запрос.УстановитьПараметр("УправленческоеПодразделение", 	Объект.УправленческоеПодразделение);
		Запрос.УстановитьПараметр("Проект", 	Объект.Проект);
		Запрос.УстановитьПараметр("Показатели", 	Показатели);
		Запрос.УстановитьПараметр("Сценарий", 		СтрокаСвода.ИсходныйСценарий);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НоваяСтрока = Объект.ОборотыПоСтатьям.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
			НоваяСтрока.Состояние = Объект.Состояние;
			Если СтрокаСвода.Лаг>0 Тогда
				НоваяСтрока.ПериодПланирования = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(НоваяСтрока.ПериодПланирования,СценарийРезультирующий,СтрокаСвода.Лаг);
			КонецЕсли;
			Если Объект.ЕдинаяВалюта И НоваяСтрока.ВалютаОперации <> Объект.ВалютаДокумента Тогда
				Если НоваяСтрока.Сумма<>0 Тогда
					КурсИсходный = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(НоваяСтрока.ВалютаОперации,ВыборкаДетальныеЗаписи.ПериодПланирования);
					КурсРезультирующий = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(Объект.ВалютаДокумента,НоваяСтрока.ПериодПланирования);
					НоваяСтрока.Сумма = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Сумма,НоваяСтрока.ВалютаОперации,Объект.ВалютаДокумента,КурсИсходный.Курс,КурсРезультирующий.Курс,КурсИсходный.Кратность,КурсРезультирующий.Кратность);
				КонецЕсли;
				НоваяСтрока.ВалютаОперации = Объект.ВалютаДокумента;
			КонецЕсли;
		КонецЦикла;
	
	КонецЦикла;
	
	
	//2. расчеты по формулам
	
	ПравилаФормулы = ТаблицаПравил.Скопировать(Новый Структура("СпособЗаполнения",Перечисления.фин_СпособыЗаполненияСтатейПриСценарныхРасчетах.ПоФормуле));
	Для Каждого СтрокаПравил Из ПравилаФормулы Цикл
		Разрезы = фин_ОбщегоНазначенияВызовСервераПовтИсп.СтруктураРазрезовФинансовогоПоказателя(СтрокаПравил.ФинансовыйПоказатель,Объект.ФормируемыйБюджет);
		СтрокаРазрезы = "";
		Для Каждого ЭлементРазрез Из Разрезы Цикл
			СтрокаРазрезы = СтрокаРазрезы +?(СтрокаРазрезы="","",",")+ЭлементРазрез.Ключ;
		КонецЦикла;
		Если ЗначениеЗаполнено(СтрокаПравил.ФормулаКоличество) Тогда
			ТаблицаРасчетыПоФормулам = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьРасчетПоФормуламБюджета(,,Объект.Организация,,Объект.ПериодПланирования,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьГоризонтПланирования(Объект.ПериодПланирования,СценарийРезультирующий),ТекущаяДата(),фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СтрокаПравил.ИсходныйСценарий),,,,,Перечисления.фин_ВидыДанныхОтчета.Плановые,ТекущаяДата(),СтрокаПравил.ФормулаКоличество,"Количество",,,,СтрокаПравил.ИсходныйСценарий,СтрокаРазрезы);
			ТаблицаРасчетыПоФормулам.Колонки.ВалютнаяСуммаОборот.Имя 	= "Сумма";
			ТаблицаРасчетыПоФормулам.Колонки.СуммаУпрОборот.Имя 		= "СуммаУпр";
			ТаблицаРасчетыПоФормулам.Колонки.КоличествоОборот.Имя 		= "Количество";
			ТаблицаРасчетыПоФормулам.Колонки.Валюта.Имя 		= "ВалютаОперации";
			
			Для Каждого ВыборкаДетальныеЗаписи Из ТаблицаРасчетыПоФормулам Цикл
				НоваяСтрока = Объект.ОборотыПоСтатьям.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
				НоваяСтрока.ФинансовыйПоказатель = СтрокаПравил.ФинансовыйПоказатель;
				НоваяСтрока.СтатьяБюджета = СтрокаПравил.СтатьяБюджета;
				НоваяСтрока.Состояние = Объект.Состояние;
				Если СтрокаПравил.Лаг>0 Тогда
					НоваяСтрока.ПериодПланирования = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(НоваяСтрока.ПериодПланирования,СценарийРезультирующий,СтрокаПравил.Лаг);
				КонецЕсли;
				Если Объект.ЕдинаяВалюта И НоваяСтрока.ВалютаОперации <> Объект.ВалютаДокумента Тогда
					Если НоваяСтрока.Сумма<>0 Тогда
						КурсИсходный = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(НоваяСтрока.ВалютаОперации,ВыборкаДетальныеЗаписи.ПериодПланирования);
						КурсРезультирующий = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(Объект.ВалютаДокумента,НоваяСтрока.ПериодПланирования);
						НоваяСтрока.Сумма = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Сумма,НоваяСтрока.ВалютаОперации,Объект.ВалютаДокумента,КурсИсходный.Курс,КурсРезультирующий.Курс,КурсИсходный.Кратность,КурсРезультирующий.Кратность);
					КонецЕсли;
					НоваяСтрока.ВалютаОперации = Объект.ВалютаДокумента;
				КонецЕсли;
				Если СтрокаПравил.СуммаПоРасценкам Тогда
					фин_ПроцедурыУправленияПлановымЦенообразованием.УстановитьЦенуПоУмолчанию(НоваяСтрока,СценарийРезультирующий,фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ВестиУчетПоПроектам"),?(СценарийРезультирующий.ЕдинаяЦенаВБюджетномПериоде,Объект.ПериодПланирования,НоваяСтрока.ПериодПланирования));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаПравил.Формула)  И СтрокаПравил.СуммаПоРасценкам = Ложь Тогда
			ТаблицаРасчетыПоФормулам = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьРасчетПоФормуламБюджета(,,Объект.Организация,,Объект.ПериодПланирования,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьГоризонтПланирования(Объект.ПериодПланирования,СценарийРезультирующий),ТекущаяДата(),фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СтрокаПравил.ИсходныйСценарий),,,,,Перечисления.фин_ВидыДанныхОтчета.Плановые,ТекущаяДата(),СтрокаПравил.Формула,"Сумма",,,,СтрокаПравил.ИсходныйСценарий,СтрокаРазрезы);
			ТаблицаРасчетыПоФормулам.Колонки.ВалютнаяСуммаОборот.Имя 	= "Сумма";
			ТаблицаРасчетыПоФормулам.Колонки.СуммаУпрОборот.Имя 		= "СуммаУпр";
			ТаблицаРасчетыПоФормулам.Колонки.КоличествоОборот.Имя 		= "Количество";
			ТаблицаРасчетыПоФормулам.Колонки.Валюта.Имя 		= "ВалютаОперации";

			Для Каждого ВыборкаДетальныеЗаписи Из ТаблицаРасчетыПоФормулам Цикл
				НоваяСтрока = Объект.ОборотыПоСтатьям.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
				НоваяСтрока.ФинансовыйПоказатель = СтрокаПравил.ФинансовыйПоказатель;
				НоваяСтрока.СтатьяБюджета = СтрокаПравил.СтатьяБюджета;
				НоваяСтрока.Состояние = Объект.Состояние;
				Если СтрокаПравил.Лаг>0 Тогда
					НоваяСтрока.ПериодПланирования = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(НоваяСтрока.ПериодПланирования,СценарийРезультирующий,СтрокаПравил.Лаг);
				КонецЕсли;
				Если Объект.ЕдинаяВалюта И НоваяСтрока.ВалютаОперации <> Объект.ВалютаДокумента Тогда
					Если НоваяСтрока.Сумма<>0 Тогда
						КурсИсходный = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(НоваяСтрока.ВалютаОперации,ВыборкаДетальныеЗаписи.ПериодПланирования);
						КурсРезультирующий = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(Объект.ВалютаДокумента,НоваяСтрока.ПериодПланирования);
						НоваяСтрока.Сумма = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(НоваяСтрока.Сумма,НоваяСтрока.ВалютаОперации,Объект.ВалютаДокумента,КурсИсходный.Курс,КурсРезультирующий.Курс,КурсИсходный.Кратность,КурсРезультирующий.Кратность);
					КонецЕсли;
					НоваяСтрока.ВалютаОперации = Объект.ВалютаДокумента;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Документы.фин_Бюджет.СвернутьОбороты(Объект);
	
	//3. расчет документа
	Документы.фин_Бюджет.РассчитатьБюджет(Объект,,Истина);

КонецПроцедуры