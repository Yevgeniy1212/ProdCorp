////////////////////////////////////////////////////////////////////////////////
//  Общие процедуры печати 

Функция ПечатьРасчетаСреднегоЗаработка(ДокументСсылка, ДатаСобытия, ПродолжительностьРасчетногоПериода, ОписаниеОплачиваемогоПериода, СпособРасчета, ВыводитьЗаголовок = Истина, СтруктураПоказателей = Неопределено, Подробно = Ложь) Экспорт
	
	Попытка
		МетаданныеДокумента = ДокументСсылка.Метаданные();
		ИмяИсточникаДанных = МетаданныеДокумента.Имя;
	Исключение
		Возврат Новый ТабличныйДокумент
	КонецПопытки;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасчетСреднегоЗаработка";
	
	СуммированныйУчетРабочегоВремени = Ложь;
	ВидВремени = "дней";
	ВидЗаработка = "Среднедневной";
	
	Запрос = Новый Запрос;
	
	Организация = ДокументСсылка.Организация;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",	     ДокументСсылка);
	Запрос.УстановитьПараметр("ПустаяОрганизация",   Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ДатаНачалаСобытия",	 ДатаСобытия);
	Запрос.УстановитьПараметр("Сотрудник",			 ДокументСсылка.Сотрудник);
	Запрос.УстановитьПараметр("ФизЛицо",			 ДокументСсылка.ФизЛицо);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПРЕДСТАВЛЕНИЕ(Документ.Ссылка) КАК Представление,
	|	Документ.Ссылка,
	|	Документ.ПерерассчитываемыйДокумент,
	|	ПРЕДСТАВЛЕНИЕ(Документ.ПерерассчитываемыйДокумент) КАК ПерерассчитываемыйДокументПредставление,
	|	Документ.Физлицо,
	|	Документ.Организация,
	|	ВЫРАЗИТЬ(Документ.Организация.НаименованиеПолное КАК СТРОКА(1000)) КАК НаименованиеОрганизации,
	|	ЕСТЬNULL(ФИОФизлица.Фамилия + "" "" + ФИОФизлица.Имя + "" "" + ФИОФизлица.Отчество, Документ.Физлицо.Наименование) КАК ФИОРаботника,
	|	РаботникиОрганизацииСрезПоследних.Сотрудник.Код КАК ТабельныйНомер,
	|	ЕСТЬNULL(РаботникиОрганизацииСрезПоследних.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ) КАК СуммированныйУчетРабочегоВремени
	|ИЗ
	|	Документ." + ИмяИсточникаДанных + " КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|		&ДатаНачалаСобытия,
	|		Сотрудник = &Сотрудник
	|		    И Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаНачалаСобытия, ФизЛицо = &ФизЛицо) КАК ФИОФизлица
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Документ.Ссылка = &ДокументСсылка";

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	СуммированныйУчетРабочегоВремени = Ложь;

	Если НЕ Результат.Пустой() Тогда
		ИспользованиеГрафиковРаботыПриОплатеСреднегоЗаработка = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Выборка.Организация].ИспользованиеГрафиковРаботыПриОплатеСреднегоЗаработка;
		Если ИспользованиеГрафиковРаботыПриОплатеСреднегоЗаработка = Перечисления.ИспользованиеГрафиковРаботыПриОплатеСреднегоЗаработка.ФактическийГрафикРаботыСотрудника Тогда
			СуммированныйУчетРабочегоВремени = Выборка.СуммированныйУчетРабочегоВремени;
		Иначе
			СуммированныйУчетРабочегоВремени = Константы.ОсновнойГрафикРаботыПредприятия.Получить().СуммированныйУчетРабочегоВремени;
		КонецЕсли;
	КонецЕсли;

	// Определим какие графы надо выводить в таблице за расчетный период
	ОтражатьДолюВремени = Ложь;
	Если СуммированныйУчетРабочегоВремени И СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпуска Тогда
		Если ДатаСобытия < ПроведениеРасчетов.ПолучитьДатуНачалаРасчетаСреднегоЗаработкаТолькоПоРабочимДням() Тогда
			// до введение Единых правил исчисления средней заработной платы № 1394 от 29.12.2007
			ОтражатьДолюВремени = Истина;
		КонецЕсли;
	КонецЕсли;

	Если СуммированныйУчетРабочегоВремени ИЛИ (СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляПочасовогоОтклонения) Тогда
		Если СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпуска 
		   И ДатаСобытия < ПроведениеРасчетов.ПолучитьДатуНачалаРасчетаСреднегоЗаработкаТолькоПоРабочимДням() Тогда
			ВидВремени = "дней";
			ВидЗаработка = "Среднедневной";
		Иначе
			ВидВремени = "часов";
			ВидЗаработка = "Среднечасовой";
		КонецЕсли;
	КонецЕсли;

 	// Определим выводимые секции
	Макет = ПолучитьОбщийМакет("РасчетСреднегоЗаработка");
	
	СекцияШапка = Макет.ПолучитьОбласть("Шапка");
	Если НЕ Результат.Пустой() Тогда
		ЗаполнитьЗначенияСвойств(СекцияШапка.Параметры, Выборка);
		СекцияШапка.Параметры.НаименованиеОрганизации = СокрЛП(Выборка.НаименованиеОрганизации);
	КонецЕсли;
	
	СекцияЗаголовокНачисленийОбщий = Макет.ПолучитьОбласть("ЗаголовокНачислений|РасчетОбщий");
	Если ОтражатьДолюВремени Тогда
		СекцияЗаголовокНачисленийЧастный = Макет.ПолучитьОбласть("ЗаголовокНачислений|РасчетПриСуммированномУчете");
	Иначе
		СекцияЗаголовокНачисленийЧастный = Макет.ПолучитьОбласть("ЗаголовокНачислений|РасчетПриНеСуммированномУчете");
		СекцияЗаголовокНачисленийЧастный.Параметры.ВидВремени = ВРег(Лев(ВидВремени, 1)) + Сред(ВидВремени, 2);
	КонецЕсли;
	
	Если Подробно Тогда
		СекцияЗаголовокНачисленоПремии = Макет.ПолучитьОбласть("ЗаголовокНачислений|РасчетПремии");
	КонецЕсли;
		
	СекцияМесячныйЗаработокОбщий = Макет.ПолучитьОбласть("МесячныйЗаработок|РасчетОбщий");
	Если ОтражатьДолюВремени Тогда
		СекцияМесячныйЗаработокЧастный = Макет.ПолучитьОбласть("МесячныйЗаработок|РасчетПриСуммированномУчете");
	Иначе
		СекцияМесячныйЗаработокЧастный = Макет.ПолучитьОбласть("МесячныйЗаработок|РасчетПриНеСуммированномУчете");
	КонецЕсли;
	
	Если Подробно Тогда
		СекцияМесячныйЗаработокПремии = Макет.ПолучитьОбласть("МесячныйЗаработок|РасчетПремии");
	КонецЕсли;
		
	СекцияСерединаОтчетаОбщий = Макет.ПолучитьОбласть("СерединаОтчета|РасчетОбщий");
	Если ОтражатьДолюВремени Тогда
		СекцияСерединаОтчетаЧастный = Макет.ПолучитьОбласть("СерединаОтчета|РасчетПриСуммированномУчете");
	Иначе
		СекцияСерединаОтчетаЧастный = Макет.ПолучитьОбласть("СерединаОтчета|РасчетПриНеСуммированномУчете");
	КонецЕсли;
	
	Если Подробно Тогда
		СекцияСерединаОтчетаПремии = Макет.ПолучитьОбласть("СерединаОтчета|РасчетПремии");
	КонецЕсли;
		
	СекцияДоляВремени = Макет.ПолучитьОбласть("ДоляВремени");
	
	Если НЕ Подробно Тогда
		СекцияЗаголовокПремий = Макет.ПолучитьОбласть("ЗаголовокПремий");
		СекцияПремии = Макет.ПолучитьОбласть("Премии");
		СекцияИтогПремий = Макет.ПолучитьОбласть("ИтогПремий");
	КонецЕсли;
			
	СекцияРасчетСреднегоЗаработка = Макет.ПолучитьОбласть("РасчетСреднегоЗаработка");
	СекцияРасчетСреднегоЗаработка.Параметры.ВидВремени = ВидВремени;
	СекцияРасчетСреднегоЗаработка.Параметры.ВидЗаработка = ВидЗаработка;
	
	СекцияЗаголовокНачисленоОбщий = Макет.ПолучитьОбласть("ЗаголовокНачислено|РасчетОбщий");
	СекцияЗаголовокНачисленоДни = Макет.ПолучитьОбласть("ЗаголовокНачислено|НачисленоДни");
	СекцияЗаголовокНачисленоЧасы = Макет.ПолучитьОбласть("ЗаголовокНачислено|НачисленоЧасы");
	СекцияЗаголовокНачисленоКалендарныеДни = Макет.ПолучитьОбласть("ЗаголовокНачислено|НачисленоКалендарныеДни");
	СекцияЗаголовокНачисленоРезультат = Макет.ПолучитьОбласть("ЗаголовокНачислено|РасчетПриНеСуммированномУчете");
			
	СекцияНачисленоОбщий = Макет.ПолучитьОбласть("Начислено|РасчетОбщий");
	СекцияНачисленоДни = Макет.ПолучитьОбласть("Начислено|НачисленоДни");
	СекцияНачисленоЧасы = Макет.ПолучитьОбласть("Начислено|НачисленоЧасы");
	СекцияНачисленоКалендарныеДни = Макет.ПолучитьОбласть("Начислено|НачисленоКалендарныеДни");
	СекцияНачисленоРезультат = Макет.ПолучитьОбласть("Начислено|РасчетПриНеСуммированномУчете");
	
	СекцияПодвалОбщий = Макет.ПолучитьОбласть("Подвал|РасчетОбщий");
	СекцияПодвалДни = Макет.ПолучитьОбласть("Подвал|НачисленоДни");
	СекцияПодвалЧасы = Макет.ПолучитьОбласть("Подвал|НачисленоЧасы");
	СекцияПодвалКалендарныеДни = Макет.ПолучитьОбласть("Подвал|НачисленоКалендарныеДни");
	СекцияПодвалРезультат = Макет.ПолучитьОбласть("Подвал|РасчетПриНеСуммированномУчете");
	СекцияПодвалИсполнитель = Макет.ПолучитьОбласть("ПодвалИсполнитель");
	
	Если ВыводитьЗаголовок Тогда
		СекцияШапка.Параметры.Представление = РаботаСДиалогами.СформироватьЗаголовокДокумента(ДокументСсылка,МетаданныеДокумента.Синоним);
		Если ЗначениеЗаполнено(Выборка.ПерерассчитываемыйДокумент) Тогда
			СекцияШапка.Параметры.ПерерассчитываемыйДокументПредставление = "перерасчет документа: " + РаботаСДиалогами.СформироватьЗаголовокДокумента(Выборка.ПерерассчитываемыйДокумент,МетаданныеДокумента.Синоним);
		КонецЕсли;		
		СекцияШапка.Параметры.ОписаниеОплачиваемогоПериода = ОписаниеОплачиваемогоПериода;
		СекцияШапка.Параметры.ДатаНачалаРасчетногоПериода = Формат(ДобавитьМесяц(НачалоМесяца(ДатаСобытия), - ПродолжительностьРасчетногоПериода),"ДФ=dd.MM.yyyy");
		СекцияШапка.Параметры.ДатаОкончанияРасчетногоПериода = Формат(НачалоДня(НачалоМесяца(ДатаСобытия) - 1),"ДФ=dd.MM.yyyy");
		СекцияШапка.Параметры.СпособРасчета = СпособРасчета;
		
		ТабДокумент.Вывести(СекцияШапка);
	КонецЕсли;
	
	СтруктураПоказателей = Новый Структура("
	|ВсегоЗаработка,
	|ВсегоОтработаноЧасов,
	|ВсегоНормаЧасов,
	|ВсегоНормаКалендарныхДней,
	|ВсегоДнейЧасовРасчетногоПериода,
	|ДоляВремени,
	|ВсегоУчтеноПремий,
	|ОбщийЗаработок, 
	|Средний",
	0,0,0,0,0,0,0,0,0);
	
	ОсновнойЗаработок = Новый Массив(3);
	ОсновнойЗаработок[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
	ОсновнойЗаработок[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
	ОсновнойЗаработок[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпуск;
	
	ВсеВидыОсновногоЗаработка = Новый Массив(6);
	ВсеВидыОсновногоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
	ВсеВидыОсновногоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБезИндексации;
	ВсеВидыОсновногоЗаработка[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
	ВсеВидыОсновногоЗаработка[3] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛБезИндексации;
	ВсеВидыОсновногоЗаработка[4] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпуск;
	ВсеВидыОсновногоЗаработка[5] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпускБезИндексации;
	
	ПоФиксПремиям = Новый Массив(2);
	ПоФиксПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;
	ПоФиксПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБезИндексации;
	
	ПоПремии = Новый Массив;
	ПоПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиям);
	ПоПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБезИндексации);
	ПоПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям);
	ПоПремии.Добавить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБезИндексации);
	
	СоответствиеВидыРасчетаБезИндексации = Новый Соответствие();
	СоответствиеВидыРасчетаБезИндексации.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБезИндексации, Истина);
	СоответствиеВидыРасчетаБезИндексации.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛБезИндексации, Истина);
	СоответствиеВидыРасчетаБезИндексации.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпускБезИндексации, Истина);
	СоответствиеВидыРасчетаБезИндексации.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБезИндексации, Истина);
	СоответствиеВидыРасчетаБезИндексации.Вставить(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБезИндексации, Истина);
	
	Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	Запрос.УстановитьПараметр("СпособРасчета", СпособРасчета);
	Запрос.УстановитьПараметр("СуммированныйУчетРабочегоВремени", СуммированныйУчетРабочегоВремени);
	Запрос.УстановитьПараметр("ОсновнойЗаработок", ОсновнойЗаработок);
	Запрос.УстановитьПараметр("ВсеВидыОсновногоЗаработка", ВсеВидыОсновногоЗаработка);
	Запрос.УстановитьПараметр("ПоФиксПремиям", ПоФиксПремиям);
	Запрос.УстановитьПараметр("парамПоПремии", ПоПремии);
	Запрос.УстановитьПараметр("ПоЗаработкуОтпуск", ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпуск);
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	Запрос.УстановитьПараметр("ПоСреднемуЗаработкуДляПочасовогоОтклонения", Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляПочасовогоОтклонения);
	Запрос.УстановитьПараметр("ПоСреднемуЗаработкуДляОтпуска", Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпуска);
	
	// по окончательным данным проведенного документа
	// собираем итоговые данные и рассчитываем средний заработок
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетСреднегоЗаработка.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	РасчетСреднегоЗаработка.ЧислоМесяцев КАК ЧислоМесяцев,
	|	РасчетСреднегоЗаработка.Размер КАК Размер,
	|	РасчетСреднегоЗаработка.ВидРасчета КАК ВидРасчета,
	|	НАЧАЛОПЕРИОДА(ДополнительныеНачисления.БазовыйПериодНачало, МЕСЯЦ) КАК ДатаНачалаПериодаПремии,
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ДополнительныеНачисления.БазовыйПериодКонец, МЕСЯЦ), ДЕНЬ) КАК ДатаОкончанияПериодаПремии,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ДополнительныеНачисления.ПериодРегистрации, МЕСЯЦ)) КАК ПериодРегистрацииПремии
	|
	|ПОМЕСТИТЬ ВТ_ПериодыРегистрацииПремий
	|ИЗ
	|	РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК БазовыеВидыРасчета
	|		ПО РасчетСреднегоЗаработка.ВидРасчета = БазовыеВидыРасчета.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
	|		ПО РасчетСреднегоЗаработка.Сотрудник = ДополнительныеНачисления.Сотрудник
	|			И РасчетСреднегоЗаработка.Организация = ДополнительныеНачисления.Организация
	|			И (БазовыеВидыРасчета.ВидРасчета = ДополнительныеНачисления.ВидРасчета)
	|			И (ДополнительныеНачисления.ПериодРегистрации МЕЖДУ РасчетСреднегоЗаработка.БазовыйПериодНачало И КОНЕЦПЕРИОДА(РасчетСреднегоЗаработка.ПериодРегистрации, МЕСЯЦ))
	|ГДЕ
	|	РасчетСреднегоЗаработка.Регистратор = &Регистратор
	|	И РасчетСреднегоЗаработка.ВидРасчета В(&парамПоПремии)
    |
	|СГРУППИРОВАТЬ ПО
	|	РасчетСреднегоЗаработка.БазовыйПериодНачало,
	|	РасчетСреднегоЗаработка.ЧислоМесяцев,
	|	РасчетСреднегоЗаработка.Размер,
	|	РасчетСреднегоЗаработка.ВидРасчета,
	|	НАЧАЛОПЕРИОДА(ДополнительныеНачисления.БазовыйПериодНачало, МЕСЯЦ),
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ДополнительныеНачисления.БазовыйПериодКонец, МЕСЯЦ), ДЕНЬ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	БазовыйПериодНачало,
	|	ЧислоМесяцев,
	|	Размер,
	|	ВидРасчета,
	|	ДатаНачалаПериодаПремии,
	|	ДатаОкончанияПериодаПремии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ВсеВидыОсновногоЗаработка)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК ПорядокЗаписей,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ВсеВидыОсновногоЗаработка)
	|			ТОГДА РасчетСреднегоЗаработка.Результат * РасчетСреднегоЗаработка.КоэффициентИндексации
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоЗаработка,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета НЕ В (&ВсеВидыОсновногоЗаработка)
	|			ТОГДА РасчетСреднегоЗаработка.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Премий,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|			ТОГДА ВЫБОР
	|					КОГДА &СуммированныйУчетРабочегоВремени
	|							ИЛИ РасчетСреднегоЗаработка.СпособРасчета = &ПоСреднемуЗаработкуДляПочасовогоОтклонения
	|						ТОГДА РасчетСреднегоЗаработка.ОтработаноЧасов
	|					ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноДней
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоДнейЧасовРасчетногоПериода,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ОсновнойЗаработок)
	|			ТОГДА РасчетСреднегоЗаработка.ОтработаноЧасов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоОтработаноЧасов,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета = &ПоЗаработкуОтпуск 
	|			ТОГДА РасчетСреднегоЗаработка.НормаЧасов 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоНормаЧасов,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета = &ПоЗаработкуОтпуск 
	|			ТОГДА РасчетСреднегоЗаработка.КалендарныхДней 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВсегоНормаКалендарныхДней,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ВсеВидыОсновногоЗаработка)
	|			ТОГДА 0
	|		КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиям)
	|					ТОГДА РасчетСреднегоЗаработка.Результат * РасчетСреднегоЗаработка.КоэффициентИндексации * ВЫБОР
	|							КОГДА РасчетСреднегоЗаработка.НормаПоПятидневке = 0
	|								ТОГДА 0
	|							ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноПоПятидневке / РасчетСреднегоЗаработка.НормаПоПятидневке
	|						КОНЕЦ
	|				ИНАЧЕ РасчетСреднегоЗаработка.Результат * РасчетСреднегоЗаработка.КоэффициентИндексации
	|			КОНЕЦ * ВЫБОР
	|				КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев > (ГОД(РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) * 12 + МЕСЯЦ(РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) - ГОД(РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода) * 12 - МЕСЯЦ(РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода) + 1)
	|					ТОГДА (ГОД(РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) * 12 + МЕСЯЦ(РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) - ГОД(РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода) * 12 - МЕСЯЦ(РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода) + 1) / РасчетСреднегоЗаработка.ЧислоМесяцев
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК ВсегоУчтеноПремий,
	|	ВЫБОР
	|		КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ВсеВидыОсновногоЗаработка)
	|			ТОГДА 0
	|		КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиям)
	|					ТОГДА РасчетСреднегоЗаработка.Результат * РасчетСреднегоЗаработка.КоэффициентИндексации 
	|				ИНАЧЕ РасчетСреднегоЗаработка.Результат * РасчетСреднегоЗаработка.КоэффициентИндексации
	|			КОНЕЦ 
	|	КОНЕЦ КАК ВсегоПремий,
	|	РасчетСреднегоЗаработка.БазовыйПериодНачало,
	|	РасчетСреднегоЗаработка.БазовыйПериодКонец,
	|	РасчетСреднегоЗаработка.ДатаНачалаПериодаПремии,
	|	РасчетСреднегоЗаработка.ДатаОкончанияПериодаПремии,
	|	РасчетСреднегоЗаработка.КоэффициентИндексации,
	|	РасчетСреднегоЗаработка.Результат,
	|	РасчетСреднегоЗаработка.Размер,                       
	|	ЕСТЬNULL(База.УчтеноПремий, 0) КАК ИтогоУчтеноПремий,
	|	ЕСТЬNULL(База.ДатаНачалаПериодаПремии, &ПустаяДата) КАК ИтогоДатаНачалаПериодаПремии,
	|	ЕСТЬNULL(База.ДатаОкончанияПериодаПремии, &ПустаяДата) КАК ИтогоДатаОкончанияПериодаПремии,
	|	РасчетСреднегоЗаработка.ЧислоМесяцев,
	|	РасчетСреднегоЗаработка.ВидРасчета,
	|	ЕСТЬNULL(ПериодыРегистрацииПремий.ПериодРегистрацииПремии, РасчетСреднегоЗаработка.БазовыйПериодНачало) КАК ПериодРегистрацииПремии
	|ИЗ
	|	РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|   						РасчетСреднегоЗаработка.БазовыйПериодНачало,
	|							РасчетСреднегоЗаработка.ЧислоМесяцев,
	|							РасчетСреднегоЗаработка.Размер,
	|							РасчетСреднегоЗаработка.ВидРасчета,
	|							МИНИМУМ(РасчетСреднегоЗаработка.ДатаНачалаПериодаПремии) КАК ДатаНачалаПериодаПремии,
	|							МАКСИМУМ(РасчетСреднегоЗаработка.ДатаОкончанияПериодаПремии) КАК ДатаОкончанияПериодаПремии,
	|							СУММА(РасчетСреднегоЗаработка.Результат * РасчетСреднегоЗаработка.КоэффициентИндексации) КАК УчтеноПремий
	|						ИЗ
	|							РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	|						ГДЕ
	|							РасчетСреднегоЗаработка.Регистратор = &Регистратор
	|							И РасчетСреднегоЗаработка.СпособРасчета = &СпособРасчета
	|						СГРУППИРОВАТЬ ПО
	|   						РасчетСреднегоЗаработка.БазовыйПериодНачало,
	|							РасчетСреднегоЗаработка.ЧислоМесяцев,
	|							РасчетСреднегоЗаработка.Размер,
	|							РасчетСреднегоЗаработка.ВидРасчета) КАК База
	|		ПО РасчетСреднегоЗаработка.БазовыйПериодНачало = База.БазовыйПериодНачало
	|			И РасчетСреднегоЗаработка.ЧислоМесяцев = База.ЧислоМесяцев
	|			И РасчетСреднегоЗаработка.Размер = База.Размер
	|			И РасчетСреднегоЗаработка.ВидРасчета = База.ВидРасчета
	|			И РасчетСреднегоЗаработка.ДатаНачалаПериодаПремии МЕЖДУ База.ДатаНачалаПериодаПремии И База.ДатаОкончанияПериодаПремии
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыРегистрацииПремий КАК ПериодыРегистрацииПремий
	|		ПО База.БазовыйПериодНачало = ПериодыРегистрацииПремий.БазовыйПериодНачало
	|			И База.ЧислоМесяцев = ПериодыРегистрацииПремий.ЧислоМесяцев
	|			И База.Размер = ПериодыРегистрацииПремий.Размер
	|			И База.ВидРасчета = ПериодыРегистрацииПремий.ВидРасчета
	|			И База.ДатаНачалаПериодаПремии = ПериодыРегистрацииПремий.ДатаНачалаПериодаПремии
	|			И База.ДатаОкончанияПериодаПремии = ПериодыРегистрацииПремий.ДатаОкончанияПериодаПремии
	|	
	|ГДЕ
	|	РасчетСреднегоЗаработка.Регистратор = &Регистратор
	|	И РасчетСреднегоЗаработка.СпособРасчета = &СпособРасчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокЗаписей,
	|	ВЫБОР КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ВсеВидыОсновногоЗаработка) ТОГДА NULL ИНАЧЕ РасчетСреднегоЗаработка.ВидРасчета КОНЕЦ,	
	|	РасчетСреднегоЗаработка.БазовыйПериодНачало,
	|	ЕСТЬNULL(ПериодыРегистрацииПремий.ПериодРегистрацииПремии, РасчетСреднегоЗаработка.БазовыйПериодНачало),	
	|	ЕСТЬNULL(База.ДатаНачалаПериодаПремии, РасчетСреднегоЗаработка.ДатаНачалаПериодаПремии),
	|	РасчетСреднегоЗаработка.ДатаНачалаПериодаПремии,
	|	РасчетСреднегоЗаработка.ВидРасчета.Код // чтобы виды расчета 'без индексации' шли после индексируемых
	|ИТОГИ
	|	СУММА(ВсегоЗаработка),
	|	СУММА(Премий),
	|	СУММА(ВсегоДнейЧасовРасчетногоПериода),
	|	СУММА(ВсегоОтработаноЧасов),
	|	СУММА(ВсегоНормаЧасов),
	|	СУММА(ВсегоНормаКалендарныхДней),
	|	СУММА(ВсегоПремий),
	|	СУММА(ВсегоУчтеноПремий)
	|ПО
	|	ОБЩИЕ";
	
	СерединаОтчетаВыведена = Ложь;
	ВыводитьПремии = Ложь;
	НомерСекции = 1;
	ТекущееЧислоМесяцев = Неопределено;
	ТекущийБазовыйПериодНачало = Неопределено;
	ТекущийВидРасчета = Неопределено;
	ТекущийПериодРегистрацииПремии = Неопределено;
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		
		Если Подробно Тогда
				
			ТаблицаПремий = Новый ТаблицаЗначений;
			ТаблицаПремий.Колонки.Добавить("РасчетныйПериод");
			ТаблицаПремий.Колонки.Добавить("ИндексироватьВидРасчета");
			ТаблицаПремий.Колонки.Добавить("НачисленоПремий");
			ТаблицаПремий.Колонки.Добавить("КоэффициентИндексацииПремий");
			ТаблицаПремий.Колонки.Добавить("ВсегоПремий");
			ТаблицаПремий.Колонки.Добавить("УчтеноПремий");
			
			Пока Выборка.Следующий() Цикл 
				Если Выборка.ТипЗаписи() <> ТипЗаписиЗапроса.ОбщийИтог Тогда
					Если Выборка.ПорядокЗаписей = 2 и Выборка.Результат > 0 Тогда
						Отбор = Новый Структура;
						Отбор.Вставить("РасчетныйПериод", Выборка.ДатаНачалаПериодаПремии);
						Отбор.Вставить("ИндексироватьВидРасчета", ?(СоответствиеВидыРасчетаБезИндексации[Выборка.ВидРасчета] <> Неопределено, Ложь, Истина));
						
						Строки = ТаблицаПремий.НайтиСтроки(Отбор);
						Если Строки.Количество() > 0 Тогда
							СтрокаПремии = Строки[0];
						Иначе 
							СтрокаПремии = Неопределено;
						КонецЕсли;
						
						Если СтрокаПремии = Неопределено Тогда
							СтрокаПремии = ТаблицаПремий.Добавить();
							СтрокаПремии.РасчетныйПериод = Выборка.ДатаНачалаПериодаПремии;
							СтрокаПремии.ИндексироватьВидРасчета = ?(СоответствиеВидыРасчетаБезИндексации[Выборка.ВидРасчета] <> Неопределено, Ложь, Истина);
							СтрокаПремии.НачисленоПремий = Выборка.Результат;
							СтрокаПремии.КоэффициентИндексацииПремий = Выборка.КоэффициентИндексации;
							СтрокаПремии.ВсегоПремий = Выборка.ВсегоПремий;
							СтрокаПремии.УчтеноПремий = Выборка.ВсегоУчтеноПремий;
						Иначе 
							СтрокаПремии.НачисленоПремий = СтрокаПремии.НачисленоПремий + Выборка.Результат;
							СтрокаПремии.ВсегоПремий = СтрокаПремии.ВсегоПремий + Выборка.ВсегоПремий;
							СтрокаПремии.УчтеноПремий = СтрокаПремии.УчтеноПремий + Выборка.ВсегоУчтеноПремий;						
						КонецЕсли;    						
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Выборка.Сбросить();		
		КонецЕсли;
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ОбщийИтог Тогда
				
				ВыводитьПремии = (Выборка.Премий <> 0); // признак вывода секции, касающейся премий 
				ЗаполнитьЗначенияСвойств(СтруктураПоказателей,Выборка);
				
				СекцияЗаголовокНачисленийОбщий.Параметры.НомерСекции = НомерСекции;
				НомерСекции = НомерСекции + 1;
				ТабДокумент.Вывести(СекцияЗаголовокНачисленийОбщий);
				Если Подробно Тогда
					ТабДокумент.Присоединить(СекцияЗаголовокНачисленоПремии);
				КонецЕсли;
				ТабДокумент.Присоединить(СекцияЗаголовокНачисленийЧастный);
								
				Если ОтражатьДолюВремени Тогда
					СтруктураПоказателей.ДоляВремени = ?(СтруктураПоказателей.ВсегоНормаЧасов = 0, 0, Окр(Мин(СтруктураПоказателей.ВсегоОтработаноЧасов / СтруктураПоказателей.ВсегоНормаЧасов, 1), 4));
					СтруктураПоказателей.ВсегоДнейЧасовРасчетногоПериода = Окр(СтруктураПоказателей.ДоляВремени * Выборка.ВсегоНормаКалендарныхДней, 2);
				КонецЕсли;
				СтруктураПоказателей.ОбщийЗаработок = Окр(СтруктураПоказателей.ВсегоЗаработка, 2) + Окр(СтруктураПоказателей.ВсегоУчтеноПремий, 2);
				СтруктураПоказателей.Средний = Окр(?(СтруктураПоказателей.ВсегоДнейЧасовРасчетногоПериода = 0,0, (СтруктураПоказателей.ВсегоЗаработка + СтруктураПоказателей.ВсегоУчтеноПремий) / СтруктураПоказателей.ВсегоДнейЧасовРасчетногоПериода),2);
				
			Иначе
				Если Выборка.ПорядокЗаписей = 1 Тогда
					
					Если Подробно Тогда
							
						Отбор = Новый Структура;
						Отбор.Вставить("РасчетныйПериод", Выборка.БазовыйПериодНачало);
						Отбор.Вставить("ИндексироватьВидРасчета", ?(СоответствиеВидыРасчетаБезИндексации[Выборка.ВидРасчета] <> Неопределено, Ложь, Истина));
						
						Строки = ТаблицаПремий.НайтиСтроки(Отбор);
						Если Строки.Количество() > 0 Тогда
							СтрокаПремии = Строки[0];
						Иначе 
							СтрокаПремии = Неопределено;
						КонецЕсли;
						
					Иначе
						СтрокаПремии = Неопределено;
					КонецЕсли;
						
					Если Выборка.Результат = 0 И СтрокаПремии = Неопределено 
							И (Выборка.ВидРасчета = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБезИндексации
								Или Выборка.ВидРасчета = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛБезИндексации
								Или Выборка.ВидРасчета = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпускБезИндексации) Тогда
						// виды среднего заработка БезИндексации с нулевым результатом не выводим, чтобы не нагружать отчет
						Продолжить;
					КонецЕсли;
					ЗаполнитьЗначенияСвойств(СекцияМесячныйЗаработокОбщий.Параметры,Выборка);
					Если СоответствиеВидыРасчетаБезИндексации[Выборка.ВидРасчета] <> Неопределено Тогда
						СекцияМесячныйЗаработокОбщий.Параметры.КоэффициентИндексации = "без индексации";
					КонецЕсли;
					
					Если Подробно Тогда
						Если СтрокаПремии = Неопределено Тогда
							СекцияМесячныйЗаработокПремии.Параметры.НачисленоПремий = 0;
							СекцияМесячныйЗаработокПремии.Параметры.КоэффициентИндексацииПремий = Выборка.КоэффициентИндексации;
							СекцияМесячныйЗаработокПремии.Параметры.ВсегоПремий = 0;
							СекцияМесячныйЗаработокПремии.Параметры.УчтеноПремий = 0;
							СекцияМесячныйЗаработокПремии.Параметры.ВсегоУчтено = Выборка.ВсегоЗаработка; 
						Иначе
							ЗаполнитьЗначенияСвойств(СекцияМесячныйЗаработокПремии.Параметры, СтрокаПремии);
							СекцияМесячныйЗаработокПремии.Параметры.ВсегоУчтено = Выборка.ВсегоЗаработка + СтрокаПремии.УчтеноПремий;
							Если НЕ СтрокаПремии.ИндексироватьВидРасчета Тогда
								СекцияМесячныйЗаработокПремии.Параметры.КоэффициентИндексацииПремий = "без индексации";
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(СекцияМесячныйЗаработокЧастный.Параметры,Выборка);
					
					СекцияМесячныйЗаработокОбщий.Параметры.РасчетныйПериод = УправлениеОтчетами.ОписаниеПериода(Выборка.БазовыйПериодНачало, Выборка.БазовыйПериодКонец);
					ТабДокумент.Вывести(СекцияМесячныйЗаработокОбщий);
					Если Подробно Тогда
						ТабДокумент.Присоединить(СекцияМесячныйЗаработокПремии);
					КонецЕсли;
					ТабДокумент.Присоединить(СекцияМесячныйЗаработокЧастный);
					
				ИначеЕсли НЕ Подробно Тогда
					Если Не СерединаОтчетаВыведена Тогда
						СерединаОтчетаВыведена = Истина;
						ЗаполнитьЗначенияСвойств(СекцияСерединаОтчетаОбщий.Параметры,СтруктураПоказателей);
						Если Подробно Тогда
							ЗаполнитьЗначенияСвойств(СекцияСерединаОтчетаПремии.Параметры,СтруктураПоказателей);
						КонецЕсли;
						ЗаполнитьЗначенияСвойств(СекцияСерединаОтчетаЧастный.Параметры,СтруктураПоказателей);
						ТабДокумент.Вывести(СекцияСерединаОтчетаОбщий);
						Если Подробно Тогда
							ТабДокумент.Присоединить(СекцияСерединаОтчетаПремии);
						КонецЕсли;
						ТабДокумент.Присоединить(СекцияСерединаОтчетаЧастный);
									
						Если ОтражатьДолюВремени Тогда
							ЗаполнитьЗначенияСвойств(СекцияДоляВремени.Параметры,СтруктураПоказателей);
							ТабДокумент.Вывести(СекцияДоляВремени);
						КонецЕсли;
						Если ВыводитьПремии Тогда
							СекцияЗаголовокПремий.Параметры.НомерСекции = НомерСекции;
							НомерСекции = НомерСекции + 1;
							ТабДокумент.Вывести(СекцияЗаголовокПремий);
						КонецЕсли;
					КонецЕсли;
					Если Выборка.Результат <> 0 И ВыводитьПремии Тогда

						Если ТекущийБазовыйПериодНачало <> Выборка.БазовыйПериодНачало
								ИЛИ ТекущееЧислоМесяцев <> Выборка.ЧислоМесяцев
								ИЛИ ТекущийВидРасчета <> Выборка.ВидРасчета
								ИЛИ ТекущийПериодРегистрацииПремии <> Выборка.ПериодРегистрацииПремии Тогда
							ТекущийБазовыйПериодНачало = Выборка.БазовыйПериодНачало;
							ТекущееЧислоМесяцев = Выборка.ЧислоМесяцев;
							ТекущийВидРасчета = Выборка.ВидРасчета;
							ТекущийПериодРегистрацииПремии = Выборка.ПериодРегистрацииПремии;
							Если Выборка.ЧислоМесяцев > 1 Тогда
								// длительные премии разбиваем по каждому месяцу
								Для Н = 0 По СекцияПремии.Параметры.Количество() - 1 Цикл
									СекцияПремии.Параметры.Установить(Н, "");
								КонецЦикла;
								СекцияПремии.Параметры.ТекстПремии = УправлениеОтчетами.ОписаниеПериода(Выборка.ПериодРегистрацииПремии, КонецМесяца(Выборка.ПериодРегистрацииПремии)) + 
																		" за " + УправлениеОтчетами.ОписаниеПериода(Выборка.ИтогоДатаНачалаПериодаПремии, Выборка.ИтогоДатаОкончанияПериодаПремии) + 
																		" (" + Выборка.ЧислоМесяцев + " мес), в т.ч. за";
								СекцияПремии.Параметры.Результат = Выборка.Размер;
								СекцияПремии.Параметры.ВсегоУчтеноПремий = Выборка.ИтогоУчтеноПремий;
								ТабДокумент.Вывести(СекцияПремии);
							КонецЕсли;
						КонецЕсли;
					
						ЗаполнитьЗначенияСвойств(СекцияПремии.Параметры,Выборка);
						Если СоответствиеВидыРасчетаБезИндексации[Выборка.ВидРасчета] <> Неопределено Тогда
							СекцияПремии.Параметры.КоэффициентИндексации = "без индексации";
						КонецЕсли;
						Если Выборка.ЧислоМесяцев > 1 Тогда
							СекцияПремии.Параметры.ТекстПремии = "    " + УправлениеОтчетами.ОписаниеПериода(Выборка.ДатаНачалаПериодаПремии, Выборка.ДатаОкончанияПериодаПремии);
						Иначе
							// премия за 1 месяц 
							СекцияПремии.Параметры.ТекстПремии = УправлениеОтчетами.ОписаниеПериода(Выборка.ПериодРегистрацииПремии, КонецМесяца(Выборка.ПериодРегистрацииПремии)) + 
																	" за " + УправлениеОтчетами.ОписаниеПериода(Выборка.ДатаНачалаПериодаПремии, Выборка.ДатаОкончанияПериодаПремии) + 
																	" (" + Выборка.ЧислоМесяцев + " мес)";
						КонецЕсли;
																	
						ТабДокумент.Вывести(СекцияПремии);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если НЕ СерединаОтчетаВыведена Тогда
			СерединаОтчетаВыведена = Истина;
			ЗаполнитьЗначенияСвойств(СекцияСерединаОтчетаОбщий.Параметры,СтруктураПоказателей);
			Если Подробно Тогда
				ЗаполнитьЗначенияСвойств(СекцияСерединаОтчетаПремии.Параметры,СтруктураПоказателей);
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(СекцияСерединаОтчетаЧастный.Параметры,СтруктураПоказателей);
			ТабДокумент.Вывести(СекцияСерединаОтчетаОбщий);
			Если Подробно Тогда
				ТабДокумент.Присоединить(СекцияСерединаОтчетаПремии);
			КонецЕсли;
			ТабДокумент.Присоединить(СекцияСерединаОтчетаЧастный);
						
			Если ОтражатьДолюВремени Тогда
				ЗаполнитьЗначенияСвойств(СекцияДоляВремени.Параметры,СтруктураПоказателей);
				ТабДокумент.Вывести(СекцияДоляВремени);
			КонецЕсли;
			Если ВыводитьПремии И НЕ Подробно Тогда
				СекцияЗаголовокПремий.Параметры.НомерСекции = НомерСекции;
				НомерСекции = НомерСекции + 1;
				ТабДокумент.Вывести(СекцияЗаголовокПремий);
				СекцияПремии.Область(1,2,1,2).Текст = "";
				ТабДокумент.Вывести(СекцияПремии);
			КонецЕсли;
		КонецЕсли;
		Если ВыводитьПремии И НЕ Подробно Тогда
			ЗаполнитьЗначенияСвойств(СекцияИтогПремий.Параметры, СтруктураПоказателей);
			ТабДокумент.Вывести(СекцияИтогПремий);
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СекцияРасчетСреднегоЗаработка.Параметры,СтруктураПоказателей);
		СекцияРасчетСреднегоЗаработка.Параметры.НомерСекции = НомерСекции;
		НомерСекции = НомерСекции + 1;
		ТабДокумент.Вывести(СекцияРасчетСреднегоЗаработка);
	КонецЕсли;
	
	// Начисленные суммы
	Запрос.УстановитьПараметр("СпособРасчета", СпособРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Начисления.ПериодДействияНачало КАК ПериодДействияНачало,
	|	Начисления.ПериодДействияКонец КАК ПериодДействияКонец,
	|	Начисления.ВидРасчета.Наименование КАК ВидРасчетаНаименование,
	|	Начисления.КоэффициентИндексации,
	|	СУММА(Начисления.Дни) КАК ВсегоДнейОплачиваемогоПериода,
	|	СУММА(Начисления.Часы) КАК ВсегоЧасовОплачиваемогоПериода,
	|	СУММА(Начисления.КалендарныеДни) КАК ВсегоКалендарныхДнейОплачиваемогоПериода,
	|	СУММА(Начисления.Результат) КАК ВсегоНачислено
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОсновныеНачисления.ПериодДействияНачало,
	|		ОсновныеНачисления.ПериодДействияКонец,
	|		ОсновныеНачисления.ВидРасчета,
	|		ОсновныеНачисления.Сторно,
	|		ОсновныеНачисления.ОтработаноДней + ОсновныеНачисления.УчитываемыеДни КАК Дни,
	|		ОсновныеНачисления.ОтработаноЧасов + ОсновныеНачисления.УчитываемыеЧасы КАК Часы,
	|		ОсновныеНачисления.КалендарныхДней КАК КалендарныеДни,
	|		ОсновныеНачисления.КоэффициентИндексации,
	|		ОсновныеНачисления.Результат
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|	ГДЕ
	|		ОсновныеНачисления.Регистратор = &Регистратор
	|		И (ОсновныеНачисления.ВидРасчета.СпособРасчета = &СпособРасчета
	|		И НЕ ОсновныеНачисления.Сторно)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДополнительныеНачисления.ДатаНачалаСобытия КАК ПериодДействияНачало,
	|		КОНЕЦПЕРИОДА(ДополнительныеНачисления.ДатаНачалаСобытия, ДЕНЬ) КАК ПериодДействияКонец,
	|		ДополнительныеНачисления.ВидРасчета,
	|		ДополнительныеНачисления.Сторно,
	|		" + ?(СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпуска," 
	|		ДополнительныеНачисления.Показатель2", "ДополнительныеНачисления.Показатель1") + " КАК Дни, // Показатель2 хранит либо рабочие дни либо часы в зависимости от суммированного учета времени
	|		" + ?(СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпуска," 
	|		ДополнительныеНачисления.Показатель2", "ДополнительныеНачисления.Показатель1") + " КАК Часы, // вывод нужной колонки в дальнейшем определяется в цикле обхода
	|		" + ?(СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпуска," 
	|		ДополнительныеНачисления.Показатель1", "0") + " КАК КалендарныеДни,
	|		ДополнительныеНачисления.КоэффициентИндексации,
	|		ДополнительныеНачисления.Результат
	|	ИЗ
	|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
	|	ГДЕ
	|		ДополнительныеНачисления.Регистратор = &Регистратор
	|		И (ДополнительныеНачисления.ВидРасчета.СпособРасчета = &СпособРасчета
	|		И НЕ ДополнительныеНачисления.Сторно)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	// учтем удержания за неотработанный отпуск
	|	ВЫБРАТЬ
	|		Удержания.ДатаНачалаСобытия КАК ПериодДействияНачало,
	|		КОНЕЦПЕРИОДА(Удержания.ДатаНачалаСобытия, ДЕНЬ) КАК ПериодДействияКонец,
	|		Удержания.ВидРасчета,
	|		Удержания.Сторно,
	|		Удержания.Показатель2 КАК Дни,
	|		Удержания.Показатель2 КАК Часы,
	|		Удержания.Показатель1 КАК КалендарныеДни,
	|		Удержания.КоэффициентИндексации,
	|		- Удержания.Результат
	|	ИЗ
	|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
	|	ГДЕ
	|		Удержания.Регистратор = &Регистратор
	|		И Удержания.ВидРасчета.СпособРасчета = &СпособРасчета
	|	) КАК Начисления
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ПериодДействияНачало,
	|	Начисления.ПериодДействияКонец,
	|	Начисления.ВидРасчета,
	|	Начисления.Сторно,
	|	Начисления.КоэффициентИндексации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Начисления.ПериодДействияНачало,
	|	Начисления.ПериодДействияКонец,
	|	ВЫБОР КОГДА Начисления.Сторно ТОГДА 0 ИНАЧЕ 1 КОНЕЦ
	|
	|ИТОГИ
	|	СУММА(ВсегоНачислено),
	|	СУММА(ВсегоДнейОплачиваемогоПериода),
	|	СУММА(ВсегоЧасовОплачиваемогоПериода),
	|	СУММА(ВсегоКалендарныхДнейОплачиваемогоПериода)
	|ПО ОБЩИЕ
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ЕстьДанные 				= Выборка.Следующий();	
	СекцияЗаголовокНачисленоОбщий.Параметры.НомерСекции = НомерСекции;
	НомерСекции 			= НомерСекции + 1;

	// Определим какие графы выводим в итоговый документ	
	ВыводитьЧасы 			= Ложь;
	ВыводитьДни 			= Ложь;
	ВыводитьКалендарныеДни 	= Ложь;
	
	Если СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпуска Тогда
		ВыводитьКалендарныеДни = Истина;
		Если ДатаСобытия >= ПроведениеРасчетов.ПолучитьДатуНачалаРасчетаСреднегоЗаработкаТолькоПоРабочимДням() Тогда
			Если СуммированныйУчетРабочегоВремени Тогда
				ВыводитьЧасы = Истина;
			Иначе
				ВыводитьДни	 = Истина;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляПочасовогоОтклонения Тогда
		ВыводитьЧасы = Истина;
	Иначе
		Если ТипЗнч(ДокументСсылка)	= Тип("ДокументСсылка.РасчетПриУвольненииРаботникаОрганизаций") Тогда
			Если СуммированныйУчетРабочегоВремени Тогда
				ВыводитьЧасы = Истина;			
			Иначе
				ВыводитьДни = Истина;
			КонецЕсли;
		Иначе
			ВыводитьДни = Истина;
			Если СуммированныйУчетРабочегоВремени Тогда
				ВыводитьЧасы = Истина;			
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ТабДокумент.Вывести(СекцияЗаголовокНачисленоОбщий);
	Если ВыводитьДни Тогда
		ТабДокумент.Присоединить(СекцияЗаголовокНачисленоДни);
	КонецЕсли;
	Если ВыводитьЧасы Тогда
		ТабДокумент.Присоединить(СекцияЗаголовокНачисленоЧасы);
	КонецЕсли;
	Если ВыводитьКалендарныеДни Тогда
		ТабДокумент.Присоединить(СекцияЗаголовокНачисленоКалендарныеДни);
	КонецЕсли;
	ТабДокумент.Присоединить(СекцияЗаголовокНачисленоРезультат);
	
	Пока ЕстьДанные Цикл
		
		Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ОбщийИтог Тогда
			ЗаполнитьЗначенияСвойств(СекцияПодвалОбщий.Параметры, Выборка);
			ЗаполнитьЗначенияСвойств(СекцияПодвалДни.Параметры, Выборка);
			ЗаполнитьЗначенияСвойств(СекцияПодвалЧасы.Параметры, Выборка);
			ЗаполнитьЗначенияСвойств(СекцияПодвалКалендарныеДни.Параметры, Выборка);
			ЗаполнитьЗначенияСвойств(СекцияПодвалРезультат.Параметры, Выборка);
		Иначе
			ЗаполнитьЗначенияСвойств(СекцияНачисленоОбщий.Параметры, Выборка);
			ЗаполнитьЗначенияСвойств(СекцияНачисленоДни.Параметры, Выборка);
			ЗаполнитьЗначенияСвойств(СекцияНачисленоЧасы.Параметры, Выборка);
			ЗаполнитьЗначенияСвойств(СекцияНачисленоКалендарныеДни.Параметры, Выборка);
			ЗаполнитьЗначенияСвойств(СекцияНачисленоРезультат.Параметры, Выборка);

			СекцияНачисленоОбщий.Параметры.РасчетныйПериод = УправлениеОтчетами.ОписаниеПериода(Выборка.ПериодДействияНачало, Выборка.ПериодДействияКонец);
			ТабДокумент.Вывести(СекцияНачисленоОбщий);
			Если ВыводитьДни Тогда
				ТабДокумент.Присоединить(СекцияНачисленоДни);
			КонецЕсли;
			Если ВыводитьЧасы Тогда
				ТабДокумент.Присоединить(СекцияНачисленоЧасы);
			КонецЕсли;
			Если ВыводитьКалендарныеДни Тогда
				ТабДокумент.Присоединить(СекцияНачисленоКалендарныеДни);
			КонецЕсли;
			ТабДокумент.Присоединить(СекцияНачисленоРезультат);
		КонецЕсли;
		
		ЕстьДанные = Выборка.Следующий();
	КонецЦикла;
	
	ТабДокумент.Вывести(СекцияПодвалОбщий);
	Если ВыводитьДни Тогда
		ТабДокумент.Присоединить(СекцияПодвалДни);
	КонецЕсли;
	Если ВыводитьЧасы Тогда
		ТабДокумент.Присоединить(СекцияПодвалЧасы);
	КонецЕсли;
	Если ВыводитьКалендарныеДни Тогда
		ТабДокумент.Присоединить(СекцияПодвалКалендарныеДни);
	КонецЕсли;
	ТабДокумент.Присоединить(СекцияПодвалРезультат);
		
	ДанныеИсполнителя = ОбщегоНазначения.ОтветственныеЛицаОрганизаций(ДокументСсылка.Организация, ДокументСсылка.Дата, ?(ЗначениеЗаполнено(ДокументСсылка.Ответственный), ДокументСсылка.Ответственный.ФизЛицо, ДокументСсылка.Автор.ФизЛицо));
	Если ДанныеИсполнителя.Исполнитель <> Неопределено Тогда
		СекцияПодвалИсполнитель.Параметры.Исполнитель 		   = ДанныеИсполнителя.Исполнитель;
		СекцияПодвалИсполнитель.Параметры.ИсполнительДолжность = ДанныеИсполнителя.ИсполнительДолжность;
	КонецЕсли;
	
	ТабДокумент.Вывести(СекцияПодвалИсполнитель);
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьРасчетаСреднегоЗаработка	


