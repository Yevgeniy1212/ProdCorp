///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБНОВЛЕНИЯ ИБ 

// Процедура проверяет, есть ли необходимость выполнять обновление информационной базы.
// Если необходимо - выполняется обновление.
// Если обновление не удалось выполнить, то
// - предлагает завершить работу системы (в режиме клиента);
// - выбрасывает исключение с описанием ошибки (в режиме внешнего соединения).
//
// Вызывается в режиме клиента или внешнего соединения.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьОбновлениеИнформационнойБазы() Экспорт
	
		
	// Проверка необходимости обновления информационной базы.
	ПервыйЗапуск = (Константы.НомерВерсииКонфигурации.Получить()="");
	
	Если НЕ ПустаяСтрока(Метаданные.Версия) и   Константы.НомерВерсииКонфигурации.Получить() <> Метаданные.Версия Тогда
		//первый запуск или обновление
	Иначе
		Возврат;
	КонецЕсли;

	// Проверка наличия прав для обновления информационной базы.
	Если НЕ ПравоДоступа("МонопольныйРежим" , Метаданные) 
	 ИЛИ НЕ ПравоДоступа("Использование"    , Метаданные.Обработки.ОбновлениеИнформационнойБазы) 
	 ИЛИ НЕ ПравоДоступа("Администрирование", Метаданные) Тогда

		#Если Клиент Тогда
		Предупреждение("Недостаточно прав для выполнения обновления. Работа системы будет завершена.");
		
		глЗначениеПеременнойУстановить("глЗапрашиватьПодтверждениеПриЗакрытии", Ложь);
		
		ЗавершитьРаботуСистемы();
		#КонецЕсли
		
		Возврат;

	КонецЕсли;
	//////////////////////////////////////
	мБазоваяВерсия = (Найти(ВРег(Метаданные.Имя), "БАЗОВАЯ") > 0);
	
	//Проверим используется ли монопольный режим
	МонопольныйРежимИспользуется = МонопольныйРежим();
	
	//Если версия не базовая и монопольный режим не включен то попытаемся его включить
	Если НЕ мБазоваяВерсия
		И Не МонопольныйРежимИспользуется Тогда
		// Установка монопольного режима для обновления информационной базы.
		Попытка
			УстановитьМонопольныйРежим(Истина);  			
		Исключение
			Сообщить(ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
			
			#Если Клиент Тогда
			Предупреждение("Не удалось установить монопольный режим. Работа системы будет завершена.");			
			глЗначениеПеременнойУстановить("глЗапрашиватьПодтверждениеПриЗакрытии", Ложь);
			ЗавершитьРаботуСистемы();
			#КонецЕсли
			Возврат;
			
		КонецПопытки;
	КонецЕсли;

	// Обновление информационной базы.
	Обработки.ОбновлениеИнформационнойБазы.Создать().ВыполнитьОбновление();

	//Если версия не базовая и монопольный режим установлен в данной процедуре то мы его отключим
	Если НЕ мБазоваяВерсия
		И Не МонопольныйРежимИспользуется Тогда		
		// Откючение монопольного режима.
		УстановитьМонопольныйРежим(Ложь);
	КонецЕсли;

	// Проверка выполнения обновления информационной базы.
	Если Константы.НомерВерсииКонфигурации.Получить() <> Метаданные.Версия Тогда

		Сообщить("Обновление информационной базы не выполнено.", СтатусСообщения.Важное);
        #Если Клиент Тогда
		Текст = "Не выполнено обновление информационной базы! Завершить работу системы?";
		Ответ = Вопрос(Текст, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, );

		Если Ответ = КодВозвратаДиалога.Да Тогда
			глЗначениеПеременнойУстановить("глЗапрашиватьПодтверждениеПриЗакрытии", Ложь);
			ЗавершитьРаботуСистемы();
		КонецЕсли;
        #КонецЕсли

	Иначе
		Сообщить("Обновление информационной базы выполнено успешно.", СтатусСообщения.Информация);

	КонецЕсли;

 КонецПроцедуры

