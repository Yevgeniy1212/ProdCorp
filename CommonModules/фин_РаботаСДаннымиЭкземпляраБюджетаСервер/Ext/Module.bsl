
Процедура ИнициализироватьКЭШДанныхСтатей(Форма) Экспорт
	Форма.КЭШ_ДанныеСтатей.Очистить();
	ФормируемыйБюджет = Форма.Объект.ФормируемыйБюджет;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиБюджета.Ссылка,
		|	СтатьиБюджета.ЭтоГруппа,
		|	ВЫБОР
		|		КОГДА СтатьиБюджета.ФинансовыйПоказатель.ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.фин_ВидыФинансовыхПоказателей.Рассчитываемый)
		|				И СтатьиБюджета.ФинансовыйПоказатель.ПризнакПеретекающегоОстатка <> ЗНАЧЕНИЕ(Перечисление.фин_ПризнакиПеретекающихОстатковМеждуПериодами.ПустаяСсылка)
		|			ТОГДА СтатьиБюджета.ФинансовыйПоказатель.ПризнакПеретекающегоОстатка
		|		ИНАЧЕ СтатьиБюджета.ИтоговаяФункция
		|	КОНЕЦ КАК ИтоговаяФункция,
		|	СтатьиБюджета.ИсключитьИзИтогов,
		|	СтатьиБюджета.КодСтрокиБюджета,
		|	СтатьиБюджета.Родитель,
		|	ВЫБОР
		|		КОГДА СтатьиБюджета.Родитель = ЗНАЧЕНИЕ(Справочник.фин_СтатьиБюджета.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьРодитель,
		|	СтатьиБюджета.ФинансовыйПоказатель,
		|	СтатьиБюджета.ИспользоватьРасчетыТолькоДляПервоначальногоЗаполнения,
		|	СтатьиБюджета.Наименование,
		|	СтатьиБюджета.Код
		|ИЗ
		|	Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
		|ГДЕ
		|	СтатьиБюджета.Владелец = &Владелец";

	Запрос.УстановитьПараметр("Владелец", ФормируемыйБюджет);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = Форма.КЭШ_ДанныеСтатей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
	КонецЦикла;
КонецПроцедуры

Процедура ИнициализироватьКЭШДанныхФП(Форма) Экспорт
	Форма.КЭШ_ДанныеФП.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ФинансовыеПоказатели.УчетПоКоличеству
		|				И ФинансовыеПоказатели.УчетПоСумме
		|				И ФинансовыеПоказателиРазрезыУчета.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК УчетЦеныБезНоменклатуры,
		|	ВЫБОР
		|		КОГДА ФинансовыеПоказатели.УчетПоКоличеству
		|				И ФинансовыеПоказатели.УчетПоСумме
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК УчетЦены,
		|	ФинансовыеПоказатели.Ссылка,
		|	ФинансовыеПоказатели.УчетПоКоличеству,
		|	ФинансовыеПоказатели.УчетПоПлановойНоменклатуре,
		|	ФинансовыеПоказатели.УчетПоСумме
		|ИЗ
		|	Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.фин_ФинансовыеПоказатели КАК ФинансовыеПоказатели
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.фин_ФинансовыеПоказатели.РазрезыУчета КАК ФинансовыеПоказателиРазрезыУчета
		|			ПО ФинансовыеПоказатели.Ссылка = ФинансовыеПоказателиРазрезыУчета.Ссылка
		|				И (ФинансовыеПоказателиРазрезыУчета.Измерение = &Измерение)
		|		ПО СтатьиБюджета.ФинансовыйПоказатель = ФинансовыеПоказатели.Ссылка
		|ГДЕ
		|	СтатьиБюджета.Владелец = &Бюджет";

	Запрос.УстановитьПараметр("Измерение", Перечисления.фин_ФактическиеПоказателиБюджетирования.Номенклатура);
	Запрос.УстановитьПараметр("Бюджет", Форма.Объект.ФормируемыйБюджет);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = Форма.КЭШ_ДанныеФП.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаДетальныеЗаписи);
	КонецЦикла;
КонецПроцедуры

Функция ОпределитьСтатьюБюджета(ФинансовыйПоказатель,Бюджет,Версия) Экспорт
	
	Версии = Новый СписокЗначений;
	Версии.Добавить(Справочники.фин_ВерсииБюджетов.ПустаяСсылка());
	Версии.Добавить(Версия);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_СтатьиБюджета.Ссылка
		|ИЗ
		|	Справочник.фин_СтатьиБюджета КАК фин_СтатьиБюджета
		|ГДЕ
		|	фин_СтатьиБюджета.ФинансовыйПоказатель = &ФинансовыйПоказатель
		|	И фин_СтатьиБюджета.Владелец = &Владелец
		|	И фин_СтатьиБюджета.Версия В(&Версия)";
	
	Запрос.УстановитьПараметр("Версия", 				Версии);
	Запрос.УстановитьПараметр("Владелец", 				Бюджет);
	Запрос.УстановитьПараметр("ФинансовыйПоказатель", 	ФинансовыйПоказатель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	Возврат Справочники.фин_СтатьиБюджета.ПустаяСсылка();
КонецФункции

Функция ПолучитьКурсВалюты(Валюта,Дата,Сценарий) Экспорт
	Возврат фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(Валюта,Дата,Сценарий);	
КонецФункции

Функция ПолеОбъекта(ОбъектДанных,Поле) Экспорт
	Возврат ОбъектДанных[Поле];	
КонецФункции


//возвращает таблицу внешних оборотов для корректировки
//
Функция ПолучитьТаблицуРасчетовПоМоделямДоКорректировки(Документ,Версия,СписокФильтрСтатей,ПродолжительностьЦикла,СписокРассчитываемых,СписокЗависимых,СписокНаследуемых,ВестиУчетПоПроектам,БюджетированиеПоОрганизациям,КЭШ_ЦеныНоменклатуры) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Сценарий 				= Документ.Сценарий;
	ПериодичностьСценария	= фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(Сценарий);
	ПериодПланирования		= Документ.ПериодПланирования;
	Проект 					= Документ.Проект;
	УправленческоеПодразделение	= Документ.УправленческоеПодразделение;
	
	Запрос = Новый Запрос;
    Версии = Новый СписокЗначений;
	Версии.Добавить(Версия);
	Версии.Добавить(Справочники.фин_ВерсииБюджетов.ПустаяСсылка());
	Запрос.УстановитьПараметр("Фильтр",					СписокФильтрСтатей);
	Запрос.УстановитьПараметр("Фильтровать",			СписокФильтрСтатей.Количество()>0);
	Запрос.УстановитьПараметр("Версии",					Версии);
	Запрос.УстановитьПараметр("Состояние",				Документ.Состояние);
	Запрос.УстановитьПараметр("ВИерархииПодразделения",	Документ.ФормируемыйБюджет.ВключаяПодчиненныеПодразделения);
	Запрос.Текст="ВЫБРАТЬ
	|	ФинансовыеПоказатели.Ссылка КАК ФинансовыйПоказатель,
	|	СтатьиБюджета.Ссылка КАК СтатьяБюджета
	|ПОМЕСТИТЬ ВТ_НужныеСтатьи
	|ИЗ
	|	Справочник.фин_ФинансовыеПоказатели КАК ФинансовыеПоказатели
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
	|		ПО ФинансовыеПоказатели.Ссылка = СтатьиБюджета.ФинансовыйПоказатель
	|ГДЕ
	|	ФинансовыеПоказатели.Ссылка В (&СписокРассчитываемых)
	|	И СтатьиБюджета.Владелец = &Бюджет
	|	И СтатьиБюджета.Версия В (&Версии)
	|ИНДЕКСИРОВАТЬ ПО
	|	ФинансовыйПоказатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыБюджетовОбороты.ПериодПланирования КАК ПериодПланированияЗаявки,
	|	ОборотыБюджетовОбороты.Сценарий,
	|	ОборотыБюджетовОбороты.Проект,
	|	ОборотыБюджетовОбороты.УправленческоеПодразделение,
	|	ОборотыБюджетовОбороты.ФинансовыйПоказатель,
	|	ОборотыБюджетовОбороты.Контрагент,
	|	ОборотыБюджетовОбороты.Номенклатура,
	|	ОборотыБюджетовОбороты.ДополнительныеРазрезы,
	|	ОборотыБюджетовОбороты.Валюта,
	|	ОборотыБюджетовОбороты.КоличествоОборот КАК Количество,
	|	ОборотыБюджетовОбороты.ВалютнаяСуммаОборот КАК Сумма,
	|	ОборотыБюджетовОбороты.ПериодПланирования КАК Период,
	|	ОборотыБюджетовОбороты.ПериодПланирования КАК ПериодПланирования,
	|	СтатьиБюджета.СтатьяБюджета КАК СтатьяБюджета
	|ПОМЕСТИТЬ ВТ_ОборотыПредварительные
	|ИЗ
	|	РегистрНакопления.фин_ОборотыБюджетов.Обороты(, &Дата, ,ДокументПланирования<>&Регистратор И ПериодПланирования>=&НачалоПериода И ПериодПланирования<=&КонецПериода И  (ФинансовыйПоказатель В
	|															(ВЫБРАТЬ
	|																	ВТ_НужныеСтатьи.ФинансовыйПоказатель
	|															ИЗ ВТ_НужныеСтатьи)) И Сценарий = &Сценарий"+?(БюджетированиеПоОрганизациям," И Организация = &Организация ","")+?(УправленческоеПодразделение.Пустая(),""," И ВЫБОР КОГДА &ВИерархииПодразделения ТОГДА УправленческоеПодразделение В ИЕРАРХИИ (&УправленческоеПодразделение) ИНАЧЕ УправленческоеПодразделение=&УправленческоеПодразделение КОНЕЦ")+?(Проект.Пустая(),""," И Проект = &Проект")+") КАК ОборотыБюджетовОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НужныеСтатьи КАК СтатьиБюджета
	|		ПО ОборотыБюджетовОбороты.ФинансовыйПоказатель = СтатьиБюджета.ФинансовыйПоказатель
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыБюджетовОбороты.ПериодПланированияЗаявки КАК ПериодПланированияЗаявки,
	|	ОборотыБюджетовОбороты.Сценарий,
	|	ОборотыБюджетовОбороты.Проект,
	|	ОборотыБюджетовОбороты.УправленческоеПодразделение,
	|	ОборотыБюджетовОбороты.ФинансовыйПоказатель,
	|	ОборотыБюджетовОбороты.Контрагент,
	|	ОборотыБюджетовОбороты.Номенклатура,
	|	Наборы.Разрез1,
	|	Наборы.Разрез2,
	|	Наборы.Разрез3,
	|	Наборы.Разрез4,
	|	Наборы.Разрез5,
	|	Наборы.Разрез6,
	|	Наборы.Разрез7,
	|	Наборы.Разрез8,
	|	Наборы.Разрез9,
	|	Наборы.Разрез10,
	|	ОборотыБюджетовОбороты.СтатьяБюджета,
	|	ОборотыБюджетовОбороты.Валюта,
	|	ОборотыБюджетовОбороты.Количество КАК Количество,
	|	ОборотыБюджетовОбороты.Сумма КАК Сумма,
	|	ОборотыБюджетовОбороты.Период КАК Период,
	|	ОборотыБюджетовОбороты.ПериодПланирования КАК ПериодПланирования
	|ПОМЕСТИТЬ ВТ_Обороты
	|ИЗ
	|	ВТ_ОборотыПредварительные КАК ОборотыБюджетовОбороты
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.фин_КлассификаторНаборовДополнительныхРазрезов КАК Наборы
	|		ПО ОборотыБюджетовОбороты.ДополнительныеРазрезы = Наборы.Ссылка
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодПланирования,
	|	Валюта,
	|	ОборотыБюджетовОбороты.ФинансовыйПоказатель
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Валюта КАК Валюта,
	|	ВложенныйЗапрос.ПериодПланирования КАК ПериодПланирования,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ПериодКурса
	|ПОМЕСТИТЬ ВТ_ПериодыКурсов
	|	ИЗ
	|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Обороты.Валюта КАК Валюта,
	|	ВТ_Обороты.ПериодПланирования КАК ПериодПланирования
	|	ИЗ
	|	ВТ_Обороты КАК ВТ_Обороты) КАК ВложенныйЗапрос
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|			ПО ВложенныйЗапрос.Валюта = КурсыВалют.Валюта
	|				И ВложенныйЗапрос.ПериодПланирования >= КурсыВалют.Период
	|			
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Валюта,
	|	ВложенныйЗапрос.ПериодПланирования
	|ИНДЕКСИРОВАТЬ ПО
	|   Валюта,
	|   ПериодКурса
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ВложенныйЗапрос.Валюта КАК Валюта,
	|			ВложенныйЗапрос.ПериодПланирования КАК ПериодПланирования,
	|			КурсыВалют.Курс КАК Курс,
	|			КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВТ_Курсы
	|		ИЗ
	|			ВТ_ПериодыКурсов КАК ВложенныйЗапрос
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|				ПО ВложенныйЗапрос.Валюта = КурсыВалют.Валюта
	|					И ВложенныйЗапрос.ПериодКурса = КурсыВалют.Период
	|ИНДЕКСИРОВАТЬ ПО
	|   ПериодПланирования,
	|   Валюта
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Курс КАК КурсОперации,
	|	ВложенныйЗапрос.Кратность КАК КратностьОперации,
	|	ВТ_Обороты.ПериодПланированияЗаявки,
	|	ВТ_Обороты.Сценарий,
	|	ВТ_Обороты.Проект,
	|	ВТ_Обороты.УправленческоеПодразделение,
	|	ВТ_Обороты.ФинансовыйПоказатель,
	|	ВТ_Обороты.ФинансовыйПоказатель.СпособЦенообразования КАК СпособЦенообразования,
	|	ВТ_Обороты.Контрагент,
	|	ВТ_Обороты.Номенклатура,
	|	ВТ_Обороты.Разрез1,
	|	ВТ_Обороты.Разрез2,
	|	ВТ_Обороты.Разрез3,
	|	ВТ_Обороты.Разрез4,
	|	ВТ_Обороты.Разрез5,
	|	ВТ_Обороты.Разрез6,
	|	ВТ_Обороты.Разрез7,
	|	ВТ_Обороты.Разрез8,
	|	ВТ_Обороты.Разрез9,
	|	ВТ_Обороты.Разрез10,
	|	ВТ_Обороты.Валюта КАК ВалютаОперации,
	|	ВТ_Обороты.Количество,
	|	ВТ_Обороты.Сумма,
	|	ВТ_Обороты.Период,
	|	ВТ_Обороты.Период КАК ПериодПланирования,
	|	Ложь КАК ЗависимаяСтатья,
	|	Ложь КАК Модель,
	|	Ложь КАК Наследуемая,
	|	0 КАК Цена,
	|	&Состояние КАК Состояние,
	|	ВТ_Обороты.СтатьяБюджета КАК СтатьяБюджета
	|ИЗ
	|	ВТ_Обороты КАК ВТ_Обороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Курсы КАК ВложенныйЗапрос
	|		ПО ВТ_Обороты.ПериодПланирования = ВложенныйЗапрос.ПериодПланирования
	|			И ВТ_Обороты.Валюта = ВложенныйЗапрос.Валюта";		   
	Запрос.УстановитьПараметр("СписокЗависимых",				СписокЗависимых);
	Запрос.УстановитьПараметр("СписокНаследуемых",				СписокНаследуемых);
	Запрос.УстановитьПараметр("Организация",					Документ.Организация);
	Запрос.УстановитьПараметр("Дата",							?(Документ.Дата='00010101',ТекущаяДата(),Документ.Дата));
	Запрос.УстановитьПараметр("Сценарий",						Сценарий);
	Запрос.УстановитьПараметр("Бюджет",							Документ.ФормируемыйБюджет);
	Запрос.УстановитьПараметр("Проект",							Документ.Проект);
	Запрос.УстановитьПараметр("УправленческоеПодразделение",	Документ.УправленческоеПодразделение);
	Запрос.УстановитьПараметр("Регистратор",					Документ.Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода",					фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(ПериодПланирования,ПериодичностьСценария));
	Запрос.УстановитьПараметр("КонецПериода",					?(ПродолжительностьЦикла<2,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ПериодПланирования,ПериодичностьСценария),фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ПериодПланирования,ПериодичностьСценария),ПериодичностьСценария,ПродолжительностьЦикла-1)));
	СписокСтатейОборотов = Новый СписокЗначений;
	Для Каждого Элемент из СписокРассчитываемых Цикл
		СписокСтатейОборотов.Добавить(Элемент.Значение.ФинансовыйПоказатель);
	КонецЦикла;
	Запрос.УстановитьПараметр("СписокРассчитываемых",СписокСтатейОборотов);
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаНаследуемыхОборотов 	= РезультатЗапроса.Выгрузить();	
	СтруктураРазрезовБюджета = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПолучитьПолныйСписокИменРазрезов();
	СтруктураРазрезовИТипов = Новый Структура;
	Для Каждого Разрез Из СтруктураРазрезовБюджета Цикл
		ИмяРазреза 			= Разрез.Значение;
		Если Найти(ИмяРазреза,"Разрез")=0 Тогда
			Продолжить;
		КонецЕсли;
		ЭлементРазреза 		= фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(Перечисления.фин_ФактическиеПоказателиБюджетирования[ИмяРазреза]);
		ТипЗначенияРазреза 	= ЭлементРазреза.ТипЗначения;
		СтруктураРазрезовИТипов.Вставить(ИмяРазреза,ТипЗначенияРазреза);
	КонецЦикла;
	Для Каждого СтрокаОборотов Из ТаблицаНаследуемыхОборотов Цикл
		Если СтрокаОборотов.СпособЦенообразования<>Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.НеРассчитывать Тогда
			фин_ПроцедурыУправленияПлановымЦенообразованием.УстановитьЦенуПоУмолчанию(СтрокаОборотов,Сценарий,ВестиУчетПоПроектам,СтрокаОборотов.ПериодПланирования,Истина,,КЭШ_ЦеныНоменклатуры);
		КонецЕсли;
		Для Каждого ЭлементСтруктуры Из СтруктураРазрезовИТипов Цикл
			СтрокаОборотов[ЭлементСтруктуры.Ключ] = ЭлементСтруктуры.Значение.ПривестиЗначение(СтрокаОборотов[ЭлементСтруктуры.Ключ]);	
		КонецЦикла;
	КонецЦикла;
	Возврат ТаблицаНаследуемыхОборотов;
КонецФункции //ПолучитьТаблицуОборотовПриКорректировке
