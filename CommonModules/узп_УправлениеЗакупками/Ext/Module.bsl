
Функция ПолучитьСписокЦенПоставщика(Документ) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеИзПереработкиУслуги.Номенклатура,
	|	СРЕДНЕЕ(ПоступлениеИзПереработкиУслуги.Цена) КАК Цена,
	|	ПоступлениеИзПереработкиУслуги.Ссылка.ВалютаДокумента КАК Валюта
	|ПОМЕСТИТЬ ВТ_Цены
	|ИЗ
	|	Документ.ПоступлениеИзПереработки.Услуги КАК ПоступлениеИзПереработкиУслуги
	|ГДЕ
	|	ПоступлениеИзПереработкиУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеИзПереработкиУслуги.Номенклатура,
	|	ПоступлениеИзПереработкиУслуги.Ссылка.ВалютаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
	|	СРЕДНЕЕ(ПоступлениеНМАНМА.Сумма),
	|	ПоступлениеНМАНМА.Ссылка.ВалютаДокумента
	|ИЗ
	|	Документ.ПоступлениеНМА.НМА КАК ПоступлениеНМАНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
	|		ПО ПоступлениеНМАНМА.НематериальныйАктив = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
	|ГДЕ
	|	ПоступлениеНМАНМА.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеНМАНМА.Ссылка.ВалютаДокумента,
	|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
	|	СРЕДНЕЕ(ПоступлениеТоваровУслугОС.Сумма),
	|	ПоступлениеТоваровУслугОС.Ссылка.ВалютаДокумента
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ОС КАК ПоступлениеТоваровУслугОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
	|		ПО ПоступлениеТоваровУслугОС.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
	|ГДЕ
	|	ПоступлениеТоваровУслугОС.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
	|	ПоступлениеТоваровУслугОС.Ссылка.ВалютаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугУслуги.Номенклатура,
	|	СРЕДНЕЕ(ПоступлениеТоваровУслугУслуги.Цена),
	|	ПоступлениеТоваровУслугУслуги.Ссылка.ВалютаДокумента
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	|ГДЕ
	|	ПоступлениеТоваровУслугУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугУслуги.Номенклатура,
	|	ПоступлениеТоваровУслугУслуги.Ссылка.ВалютаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	СРЕДНЕЕ(ПоступлениеТоваровУслугТовары.Цена * ПоступлениеТоваровУслугТовары.Коэффициент),
	|	ПоступлениеТоваровУслугТовары.Ссылка.ВалютаДокумента
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Ссылка.ВалютаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Цены.Номенклатура,
	|	ВТ_Цены.Цена,
	|	ВТ_Цены.Валюта
	|ПОМЕСТИТЬ ВТ_ЦеныРеглИПлан
	|ИЗ
	|	ВТ_Цены КАК ВТ_Цены
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Соответствие.ПлановаяНоменклатура,
	|	СРЕДНЕЕ(ВТ_Цены.Цена),
	|	ВТ_Цены.Валюта
	|ИЗ
	|	ВТ_Цены КАК ВТ_Цены
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК Соответствие
	|		ПО ВТ_Цены.Номенклатура = Соответствие.РегламентированнаяНоменклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	Соответствие.ПлановаяНоменклатура,
	|	ВТ_Цены.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЦеныРеглИПлан.Номенклатура,
	|	ВТ_ЦеныРеглИПлан.Цена,
	|	ВТ_ЦеныРеглИПлан.Валюта
	|ИЗ
	|	ВТ_ЦеныРеглИПлан КАК ВТ_ЦеныРеглИПлан
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ЦеныРеглИПлан.Номенклатура.Наименование,
	|	ВТ_ЦеныРеглИПлан.Валюта.Код";
	
	Запрос.УстановитьПараметр("Дата", 	Документ.Дата);
	Запрос.УстановитьПараметр("Ссылка",	Документ);
	
	Возврат Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
КонецФункции

Процедура ПолучитьЦенуПлановойНоменклатуры(СтрокаТЧ,Сценарий,ТипЦен) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
		|	ПрогнозныеЦеныНоменклатурыСрезПоследних.Цена,
		|	ПрогнозныеЦеныНоменклатурыСрезПоследних.Валюта
		|ИЗ
		|	РегистрСведений.фин_ПрогнозныеЦеныНоменклатуры.СрезПоследних(
		|			&Период,
		|			ТипЦен = &ТипЦен
		|				И Номенклатура =&Номенклатура
		|				И Сценарий = &Сценарий) КАК ПрогнозныеЦеныНоменклатурыСрезПоследних";

	Запрос.УстановитьПараметр("Период", СтрокаТЧ.ПериодПланирования);
	Запрос.УстановитьПараметр("Номенклатура", СтрокаТЧ.Номенклатура);
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	Запрос.УстановитьПараметр("ТипЦен", ТипЦен);
 	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Цена = ВыборкаДетальныеЗаписи.Цена;
		ВалютаНастройки = ВыборкаДетальныеЗаписи.Валюта;
	Иначе
		Цена = 0;
	КонецЕсли;
	СтрокаТЧ.Цена = Цена;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ ЗАПОЛНЕНИЯ ДОКУМЕНТОВ

Процедура ОбработкаЗаполненияПоЗаявкеМТСОбработкаЗаполнения(Источник, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.узп_ЗаявкаМТС") Тогда
		ЭтотОбъект = Источник;
		//Если ТипЗнч(Источник)=Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
		//	
		//	
		//	// Заполним реквизиты из стандартного набора по документу основанию.
		//	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		//	//ЭтотОбъект.Контрагент = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
		//	ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения.Ссылка;
		//	ЭтотОбъект.СтруктурноеПодразделениеОтправитель    = ДанныеЗаполнения.СтруктурноеПодразделение;	 	
		//	ЭтотОбъект.СтруктурноеПодразделениеПолучатель    = ДанныеЗаполнения.СтруктурноеПодразделение;	 	
		//	ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата);
		//	
		//	
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") И СтрокаТЧ.Номенклатура.ТипПозицииВПланеЗакупок<>Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.Товар Тогда
		//			Продолжить;
		//		КонецЕсли;
		//		
		//		
		//		СтрокаТабличнойЧасти = ЭтотОбъект.Товары.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		
		//		ТекущиеДанные = СтрокаТабличнойЧасти;
		//		ДанныеОбъекта = Новый Структура("Дата, Организация, Товары");
		//		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтотОбъект);
		//		ДанныеСтрокиТаблицы = Новый Структура("НомерСтроки, Номенклатура, ЕдиницаИзмерения, Коэффициент, СчетУчетаБУ, СчетУчетаНУ, НовыйСчетУчетаБУ, НовыйСчетУчетаНУ");
		//		ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);
		//		
		//		Если ТипЗнч(ДанныеСтрокиТаблицы.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
		//			Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
		//			Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		//				Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(ДанныеСтрокиТаблицы.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
		//			Иначе
		//				ДанныеСтрокиТаблицы.Номенклатура = Номенклатура;
		//			КонецЕсли;
		//		КонецЕсли;
		//						
		//		//ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТабличнойЧасти,"Товары", Истина, ЭтотОбъект.УчитыватьКПН И (ПоддержкаУчетаВременныхРазниц ИЛИ ЭтотОбъект.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ));
		//		ИмяТаблицы = "Товары";
		//		СчетаУчета = ПроцедурыБухгалтерскогоУчета.ПолучитьСчетаУчетаНоменклатуры(Источник.Организация, ДанныеСтрокиТаблицы.Номенклатура, Источник.Дата);
		//		Документы.ПеремещениеТоваров.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, ДанныеСтрокиТаблицы, ИмяТаблицы, СчетаУчета);
		//		СтрокаТабличнойЧасти.ЗаявкаМТС = ДанныеЗаполнения.Ссылка;
		//		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);
		//	КонецЦикла;				
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		//	
		//ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.ПеремещениеОС") Тогда
		//	
		//	
		//	// Заполним реквизиты шапки по документу основанию.
		//	// Заполним реквизиты из стандартного набора по документу основанию.
		//	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		//	//ЭтотОбъект.Контрагент 		  = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения.Ссылка;
		//	ЭтотОбъект.СтруктурноеПодразделениеОтправитель    = ДанныеЗаполнения.СтруктурноеПодразделение;	 	
		//	ЭтотОбъект.СтруктурноеПодразделениеПолучатель    = ДанныеЗаполнения.СтруктурноеПодразделение;	 	
		//	ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
		//	//БанковскийСчетОрганизации   = Основание.СчетОрганизации;
		//	//АдресДоставки			    = Основание.ПунктНазначения;
		//	//Доверенность			    = Основание.Доверенность;
		//	
		//	//УчетНДСИАкциза.ЗаполнитьТабличныеЧастиИзДокументаОснования(ЭтотОбъект, Основание);		
		//	ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата);
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)<>Тип("СправочникСсылка.фин_ПлановаяНоменклатура") ИЛИ СтрокаТЧ.Номенклатура.ТипПозицииВПланеЗакупок<>Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.ОсновноеСредство Тогда
		//			Продолжить;
		//		КонецЕсли;
		//		СтрокаТабличнойЧасти = ЭтотОбъект.ОС.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		
		//		Запрос = Новый Запрос;
		//		Запрос.Текст = 
		//		"ВЫБРАТЬ
		//		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		//		|ИЗ
		//		|	РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		//		|ГДЕ
		//		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура = &ПлановаяНоменклатура
		//		|	И СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры = &ХарактеристикаПлановойНоменклатуры";
		//		
		//		Запрос.УстановитьПараметр("ПлановаяНоменклатура", СтрокаТЧ.Номенклатура);
		//		Запрос.УстановитьПараметр("ХарактеристикаПлановойНоменклатуры", СтрокаТЧ.Характеристика);
		//		
		//		Результат = Запрос.Выполнить();
		//		
		//		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		//		
		//		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//			СтрокаТабличнойЧасти.ОсновноеСредство = ВыборкаДетальныеЗаписи.ВнеоборотныйАктив;

		//		КонецЦикла;
		//		
		//		
		//		СтрокаТабличнойЧасти.ЗаявкаМТС = ДанныеЗаполнения.Ссылка;
		//	КонецЦикла;	
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		//ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.СписаниеТоваров") Тогда
		//	// Заполним реквизиты из стандартного набора по документу основанию.
		//	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		//	ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения.Ссылка;
		//	ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата);
		//	
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") И СтрокаТЧ.Номенклатура.ТипПозицииВПланеЗакупок<>Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.Товар Тогда
		//			Продолжить;
		//		КонецЕсли;
		//		СтрокаТабличнойЧасти = ЭтотОбъект.Товары.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
		//			Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
		//			Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		//				Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
		//			Иначе
		//				СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
		//			КонецЕсли;
		//		КонецЕсли;
		//		ДанныеОбъекта 							= фин_ОбщегоНазначенияСервер.СформироватьСтруктуруРеквизитовОбъекта(Источник.Ссылка);
		//		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Источник);
		//		ТекущиеДанные 							= СтрокаТабличнойЧасти;
		//		Если ТекущиеДанные = Неопределено Тогда 
		//			Возврат;
		//		КонецЕсли;
		//		ДанныеСтрокиТаблицы = Новый Структура(
		//			"Номенклатура, ЕдиницаИзмерения, Коэффициент, Количество,
		//			|СтавкаНДС, Цена, Сумма, СчетУчетаНДС, СчетУчетаБУ, СчетУчетаНУ,
		//			|СчетЗатратБУ, СубконтоЗатратБУ1, СубконтоЗатратБУ2, СубконтоЗатратБУ3,
		//			|СчетЗатратНУ, СубконтоЗатратНУ1, СубконтоЗатратНУ2, СубконтоЗатратНУ3, 
		//			|НомерГТД, СтранаПроисхождения,
		//			|ВидСубконтоЗатратБУ1, ВидСубконтоЗатратБУ2, ВидСубконтоЗатратБУ3,
		//			|ВидСубконтоЗатратНУ1, ВидСубконтоЗатратНУ2, ВидСубконтоЗатратНУ3,
		//			|СубконтоЗатратБУ1Доступность, СубконтоЗатратБУ2Доступность, СубконтоЗатратБУ3Доступность,
		//			|СубконтоЗатратНУ1Доступность, СубконтоЗатратНУ2Доступность, СубконтоЗатратНУ3Доступность,
		//			|НДСВидОборота, НДСВидПоступления");
		//			
		//		ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, ТекущиеДанные);
		//	    
		//		МетаданныеДокумента 					= ДанныеОбъекта.Ссылка.Метаданные();
		//		СведенияОНоменклатуре = дог_УправлениеДоговорами.ПолучитьСведенияОНоменклатуре(
		//			ДанныеСтрокиТаблицы.Номенклатура, ДанныеОбъекта);
		//			
		//		Если СведенияОНоменклатуре = Неопределено Тогда
		//			Возврат;
		//		КонецЕсли;
		//		
		//		ДанныеСтрокиТаблицы.ЕдиницаИзмерения		= СведенияОНоменклатуре.БазоваяЕдиницаИзмерения;
		//		ДанныеСтрокиТаблицы.Коэффициент				= СведенияОНоменклатуре.Коэффициент;
		//		ДанныеСтрокиТаблицы.СтавкаНДС				= СведенияОНоменклатуре.СтавкаНДС;
		//		
		//		Документы.СписаниеТоваров.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, ДанныеСтрокиТаблицы, "Товары", СведенияОНоменклатуре);
		//			
		//		ПоляОбъектаСубконто		= Новый Структура("Субконто1, Субконто2, Субконто3", "СубконтоЗатратБУ1", "СубконтоЗатратБУ2", "СубконтоЗатратБУ3");
		//		ПоляОбъектаСубконтоНУ	= Новый Структура("Субконто1, Субконто2, Субконто3", "СубконтоЗатратНУ1", "СубконтоЗатратНУ2", "СубконтоЗатратНУ3");
		//		
		//		ПроцедурыБухгалтерскогоУчетаКлиентСервер.УстановитьДоступностьИЗаголовкиСубконто(ДанныеСтрокиТаблицы.СчетЗатратБУ, ДанныеСтрокиТаблицы, ПоляОбъектаСубконто);
		//		ПроцедурыБухгалтерскогоУчетаКлиентСервер.УстановитьДоступностьИЗаголовкиСубконто(ДанныеСтрокиТаблицы.СчетЗатратНУ, ДанныеСтрокиТаблицы, ПоляОбъектаСубконтоНУ);
		//		
		//		ОбработкаТабличныхЧастей.ЗаполнитьНДСВидОборотаТабЧасти(ДанныеСтрокиТаблицы, ДанныеОбъекта, "Товары", МетаданныеДокумента);
		//		ОбработкаТабличныхЧастей.ЗаполнитьНДСВидПоступленияТабЧасти(ДанныеСтрокиТаблицы, "Товары", МетаданныеДокумента, Пользователи.ТекущийПользователь());				
		//		
		//		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтрокиТаблицы);
		//		
		//		СтрокаТабличнойЧасти.ЗаявкаМТС = ДанныеЗаполнения.Ссылка;
		//	КонецЦикла;				
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		//ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.ТребованиеНакладная") Тогда
		//	
		//	
		//	// Заполним реквизиты из стандартного набора по документу основанию.
		//	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		//	//ЭтотОбъект.Контрагент = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
		//	ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения.Ссылка;
		//	ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата);
		//	
		//	
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") И СтрокаТЧ.Номенклатура.ТипПозицииВПланеЗакупок<>Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.Товар Тогда
		//			Продолжить;
		//		КонецЕсли;
		//		СтрокаТабличнойЧасти = ЭтотОбъект.Материалы.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
		//			Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
		//			Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		//				Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Материалы""",СтатусСообщения.Важное);
		//			Иначе
		//				СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
		//			КонецЕсли;
		//		КонецЕсли;
		//		
		//		//ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТабличнойЧасти,"Материалы", Истина, ЭтотОбъект.УчитыватьКПН И (ПоддержкаУчетаВременныхРазниц ИЛИ ЭтотОбъект.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ));
		//		ДанныеСтрокиТаблицы = Новый Структура("Номенклатура, ЕдиницаИзмерения, Коэффициент, Количество, СчетБУ, СчетНУ");
		//		ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, СтрокаТабличнойЧасти);
		//		ДанныеОбъекта = Новый Структура("Организация, СтруктурноеПодразделение, Дата, Ссылка, УчитыватьКПН, Склад");
		//		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтотОбъект);
		//		Документы.ТребованиеНакладная.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(ДанныеОбъекта.Организация, ДанныеСтрокиТаблицы, ДанныеОбъекта.УчитыватьКПН);
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ДанныеСтрокиТаблицы);
		//		СтрокаТабличнойЧасти.ЗаявкаМТС = ДанныеЗаполнения.Ссылка;
		//	КонецЦикла;				
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		//	
		//КонецЕсли;			
		Если ТипЗнч(Источник)=Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
			
			
			// Заполним реквизиты из стандартного набора по документу основанию.
			ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
			//ЭтотОбъект.Контрагент = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
			ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения.Ссылка;
			ЭтотОбъект.СтруктурноеПодразделениеОтправитель    = ДанныеЗаполнения.СтруктурноеПодразделение;	 	
			ЭтотОбъект.СтруктурноеПодразделениеПолучатель    = ДанныеЗаполнения.СтруктурноеПодразделение;	 	
			ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено);
			
			
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") И СтрокаТЧ.Номенклатура.ТипПозицииВПланеЗакупок<>Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.Товар Тогда
					Продолжить;
				КонецЕсли;
				СтрокаТабличнойЧасти = ЭтотОбъект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
					Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
					Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
						Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
					Иначе
						СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
					КонецЕсли;
				КонецЕсли;
				
				ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТабличнойЧасти,"Товары", Истина, ЭтотОбъект.УчитыватьКПН И (ПоддержкаУчетаВременныхРазниц ИЛИ ЭтотОбъект.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ));
				СтрокаТабличнойЧасти.ЗаявкаМТС = ДанныеЗаполнения.Ссылка;
			КонецЦикла;				
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
			
		ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.ПеремещениеОС") Тогда
			
			
			// Заполним реквизиты шапки по документу основанию.
			// Заполним реквизиты из стандартного набора по документу основанию.
			ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
			//ЭтотОбъект.Контрагент 		  = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения.Ссылка;
			ЭтотОбъект.СтруктурноеПодразделениеОтправитель    = ДанныеЗаполнения.СтруктурноеПодразделение;	 	
			ЭтотОбъект.СтруктурноеПодразделениеПолучатель    = ДанныеЗаполнения.СтруктурноеПодразделение;	 	
			ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
			//БанковскийСчетОрганизации   = Основание.СчетОрганизации;
			//АдресДоставки			    = Основание.ПунктНазначения;
			//Доверенность			    = Основание.Доверенность;
			
			//УчетНДСИАкциза.ЗаполнитьТабличныеЧастиИзДокументаОснования(ЭтотОбъект, Основание);		
			ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено);
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
				Если ТипЗнч(СтрокаТЧ.Номенклатура)<>Тип("СправочникСсылка.фин_ПлановаяНоменклатура") ИЛИ СтрокаТЧ.Номенклатура.ТипПозицииВПланеЗакупок<>Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.ОсновноеСредство Тогда
					Продолжить;
				КонецЕсли;
				СтрокаТабличнойЧасти = ЭтотОбъект.ОС.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
				|ИЗ
				|	РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
				|ГДЕ
				|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура = &ПлановаяНоменклатура
				|	И СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры = &ХарактеристикаПлановойНоменклатуры";
				
				Запрос.УстановитьПараметр("ПлановаяНоменклатура", СтрокаТЧ.Номенклатура);
				Запрос.УстановитьПараметр("ХарактеристикаПлановойНоменклатуры", СтрокаТЧ.Характеристика);
				
				Результат = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = Результат.Выбрать();
				
				Если ВыборкаДетальныеЗаписи.Следующий() Тогда
					СтрокаТабличнойЧасти.ОсновноеСредство = ВыборкаДетальныеЗаписи.ВнеоборотныйАктив;
				КонецЕсли;
				
				
				СтрокаТабличнойЧасти.ЗаявкаМТС = ДанныеЗаполнения.Ссылка;
			КонецЦикла;	
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
			
		ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.СписаниеТоваров") Тогда
			
			// Заполним реквизиты из стандартного набора по документу основанию.
			ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
			//ЭтотОбъект.Контрагент = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
			ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения.Ссылка;
			ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено);
			
			ТЧ = ДанныеЗаполнения.Товары.Выгрузить();
			ТЧ.Свернуть("Номенклатура,Характеристика,Подразделение","Количество");
			//Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
			Для Каждого СтрокаТЧ Из ТЧ Цикл
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") И СтрокаТЧ.Номенклатура.ТипПозицииВПланеЗакупок<>Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.Товар Тогда
					Продолжить;
				КонецЕсли;
				СтрокаТабличнойЧасти = ЭтотОбъект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
					Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
					Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
						Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
					Иначе
						СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
					КонецЕсли;
				КонецЕсли;
				
				ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТабличнойЧасти,"Товары", Истина, ЭтотОбъект.УчитыватьКПН И (ПоддержкаУчетаВременныхРазниц ИЛИ ЭтотОбъект.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ));
				СтрокаТабличнойЧасти.ЗаявкаМТС = ДанныеЗаполнения.Ссылка;
			КонецЦикла;				
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.ТребованиеНакладная") Тогда
			
			
			// Заполним реквизиты из стандартного набора по документу основанию.
			ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
			//ЭтотОбъект.Контрагент = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
			ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения.Ссылка;
			ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено);
			
			
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") И СтрокаТЧ.Номенклатура.ТипПозицииВПланеЗакупок<>Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.Товар Тогда
					Продолжить;
				КонецЕсли;
				СтрокаТабличнойЧасти = ЭтотОбъект.Материалы.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
					Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
					Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
						Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Материалы""",СтатусСообщения.Важное);
					Иначе
						СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
					КонецЕсли;
				КонецЕсли;
				
				ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТабличнойЧасти,"Материалы", Истина, ЭтотОбъект.УчитыватьКПН И (ПоддержкаУчетаВременныхРазниц ИЛИ ЭтотОбъект.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ));
				СтрокаТабличнойЧасти.ЗаявкаМТС = ДанныеЗаполнения.Ссылка;
			КонецЦикла;				
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполненияПоЗаказуПоставщикуОбработкаЗаполнения(Источник, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.узп_ЗаказПоставщику") Тогда
		ЭтотОбъект = Источник;
		Если ТипЗнч(Источник)=Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
			ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
			//ЭтотОбъект.Контрагент = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
			ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
			ЭтотОбъект.ВводНаОснованииРеализацииТМЗПередачиОС = Истина;
			ЭтотОбъект.ВидОперации  = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомисия;
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") 
					И СтрокаТЧ.Номенклатура.ТипПозицииВПланеЗакупок<>Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.Товар Тогда
					Продолжить;
				КонецЕсли;
				СтрокаТабличнойЧасти = ЭтотОбъект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
					Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
					Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
						Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
					Иначе
						СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
					КонецЕсли;
				КонецЕсли;
				СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
				ЭтотОбъект.ЗаполнитьРеквизитыНалоговогоУчета(СтрокаТабличнойЧасти);
				ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТабличнойЧасти, "Товары", Истина, Истина);
			КонецЦикла;
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Услуги Цикл
				СтрокаТабличнойЧасти = ЭтотОбъект.Услуги.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
					Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
					Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
						Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
					Иначе
						СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
					КонецЕсли;
				КонецЕсли;
				ЭтотОбъект.ЗаполнитьРеквизитыНалоговогоУчета(СтрокаТабличнойЧасти);
				ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТабличнойЧасти, "Услуги", Истина, Истина);
				СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
			КонецЦикла;
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
				Если ТипЗнч(СтрокаТЧ.Номенклатура)<>Тип("СправочникСсылка.фин_ПлановаяНоменклатура") ИЛИ СтрокаТЧ.Номенклатура.ТипПозицииВПланеЗакупок<>Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.ОсновноеСредство ИЛИ СтрокаТЧ.Количество=0 Тогда
					Продолжить;
				КонецЕсли;
				Для Инд = 1 По СтрокаТЧ.Количество Цикл
					НовоеОС = Справочники.ОсновныеСредства.СоздатьЭлемент();
					НовоеОС.Наименование = СтрокаТЧ.Номенклатура.Наименование;
					НовоеОС.НаименованиеПолное = СтрокаТЧ.Номенклатура.НаименованиеПолное;
					НовоеОС.Родитель = дог_УправлениеДоговорами.РодительОС();
					НовоеОС.Комментарий = СтрокаТЧ.Характеристика;
					НовоеОС.УстановитьНовыйКод();
					Попытка 
						НовоеОС.Записать();
					Исключение
						Сообщить("Не удалось создать основное средство для плановой номенклатуры "+Строка(СтрокаТЧ.Номенклатура)+" по строке №"+Строка(СтрокаТЧ.НомерСтроки),СтатусСообщения.Важное);
						Продолжить;
					КонецПопытки;
					НаборЗаписей = РегистрыСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.ВнеоборотныйАктив.Установить(НовоеОС.Ссылка);
					НЗ = НаборЗаписей.Добавить();
					НЗ.ВнеоборотныйАктив = НовоеОС.Ссылка;
					НЗ.ПлановаяНоменклатура = СтрокаТЧ.Номенклатура;
					НЗ.ХарактеристикаПлановойНоменклатуры = СтрокаТЧ.Характеристика;
					Попытка 
						НаборЗаписей.Записать();
					Исключение
						Сообщить("Не удалось создать установить соответствие основному средству для плановой номенклатуры "+Строка(СтрокаТЧ.Номенклатура)+" по строке №"+Строка(СтрокаТЧ.НомерСтроки),СтатусСообщения.Важное);
						Продолжить;
					КонецПопытки;
					СтрокаТабличнойЧасти = ЭтотОбъект.ОС.Добавить();
					//ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
					СтрокаТабличнойЧасти.ОсновноеСредство = НовоеОС.Ссылка;
					СтрокаТабличнойЧасти.Сумма = СтрокаТЧ.Цена;
					СтрокаТабличнойЧасти.СтавкаНДС = СтрокаТЧ.СтавкаНДС;
					ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
					ЭтотОбъект.ЗаполнитьРеквизитыНалоговогоУчета(СтрокаТабличнойЧасти);
					ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТабличнойЧасти, "ОС", Истина, Истина);
					СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
				КонецЦикла;
			КонецЦикла;
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.Доверенность") Тогда
			ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
			//ЭтотОбъект.Контрагент = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
			ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
				СтрокаТабличнойЧасти = ЭтотОбъект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
					Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
					Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
						Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
	                   	СтрокаТабличнойЧасти.НаименованиеТовара = СтрокаТЧ.Номенклатура.Наименование;
					Иначе
						СтрокаТабличнойЧасти.НаименованиеТовара = Номенклатура;
					КонецЕсли;
				Иначе	
                   	СтрокаТабличнойЧасти.НаименованиеТовара = СтрокаТЧ.Номенклатура;
				КонецЕсли;
				СтрокаТабличнойЧасти.ЕдиницаПоКлассификатору = СтрокаТЧ.ЕдиницаИзмерения;
				СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения;
			КонецЦикла;
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.ПоступлениеНМА") Тогда
			ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
			ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
			УчетПоПроектам = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("узп_ВестиУчетЗакупокПоПроектам");
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
				Если ТипЗнч(СтрокаТЧ.Номенклатура)<>Тип("СправочникСсылка.фин_ПлановаяНоменклатура") ИЛИ  СтрокаТЧ.Номенклатура.ТипПозицииВПланеЗакупок<>Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.НематериальныйАктив ИЛИ СтрокаТЧ.Количество=0 Тогда
					Продолжить;
				КонецЕсли;
				Для Инд = 1 По СтрокаТЧ.Количество Цикл
					НовоеОС = Справочники.НематериальныеАктивы.СоздатьЭлемент();
					НовоеОС.Наименование = СтрокаТЧ.Номенклатура.Наименование;
					НовоеОС.НаименованиеПолное = СтрокаТЧ.Номенклатура.НаименованиеПолное;
					НовоеОС.Родитель = дог_УправлениеДоговорами.РодительНМА();
					НовоеОС.ПрочиеСведения = СтрокаТЧ.Характеристика;
					НовоеОС.УстановитьНовыйКод();
					Попытка 
						НовоеОС.Записать();
					Исключение
						Сообщить("Не удалось создать нематериальный актив для плановой номенклатуры "+Строка(СтрокаТЧ.Номенклатура)+" по строке №"+Строка(СтрокаТЧ.НомерСтроки),СтатусСообщения.Важное);
						Продолжить;
					КонецПопытки;
					НаборЗаписей = РегистрыСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.ВнеоборотныйАктив.Установить(НовоеОС.Ссылка);
					НЗ = НаборЗаписей.Добавить();
					НЗ.ВнеоборотныйАктив = НовоеОС.Ссылка;
					НЗ.ПлановаяНоменклатура = СтрокаТЧ.Номенклатура;
					НЗ.ХарактеристикаПлановойНоменклатуры = СтрокаТЧ.Характеристика;
					Попытка 
						НаборЗаписей.Записать();
					Исключение
						Сообщить("Не удалось создать установить соответствие основному средству для плановой номенклатуры "+Строка(СтрокаТЧ.Номенклатура)+" по строке №"+Строка(СтрокаТЧ.НомерСтроки),СтатусСообщения.Важное);
						Продолжить;
					КонецПопытки;
					СтрокаТабличнойЧасти = ЭтотОбъект.НМА.Добавить();
					//ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
					СтрокаТабличнойЧасти.НематериальныйАктив = НовоеОС.Ссылка;
					СтрокаТабличнойЧасти.Сумма = СтрокаТЧ.Цена;
					СтрокаТабличнойЧасти.СтавкаНДС = СтрокаТЧ.СтавкаНДС;
					СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
					СтрокаТабличнойЧасти.ЗаявкаМТС = СтрокаТЧ.ЗаявкаМТС;
					СтрокаТабличнойЧасти.Подразделение = СтрокаТЧ.Подразделение;
					СтрокаТабличнойЧасти.Проект = СтрокаТЧ.Проект;
					Если УчетПоПроектам Тогда
						СтрокаТабличнойЧасти.Проект = СтрокаТЧ.Проект;
					КонецЕсли;
					ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
					ЭтотОбъект.ЗаполнитьРеквизитыНалоговогоУчета(СтрокаТабличнойЧасти);
					ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТабличнойЧасти, "НМА", Истина, Истина);
				КонецЦикла;
			КонецЦикла;
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
			
			
		ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.ПоступлениеИзПереработки") Тогда
			ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
			ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
			
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Услуги Цикл
				СтрокаТабличнойЧасти = ЭтотОбъект.Услуги.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
					Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
					Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
						Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
					Иначе
						СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
					КонецЕсли;
				КонецЕсли;
				ЭтотОбъект.ЗаполнитьРеквизитыНалоговогоУчета(СтрокаТабличнойЧасти);
				СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
				//ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТабличнойЧасти, "Услуги", Истина, Истина);
			КонецЦикла;
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
			
		КонецЕсли;
	КонецЕсли;
	/////////////////////////////////////////////////////////////////////////////////
	//ДЛЯ БК 3.0!!!!/////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////
	//Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.узп_ЗаказПоставщику") Тогда
	//	ЭтотОбъект = Источник;
		//Если ТипЗнч(Источник)=Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
		//	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		//	//ЭтотОбъект.Контрагент = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
		//	ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
		//	//ЭтотОбъект.ВводНаОснованииРеализацииТМЗПередачиОС = Истина;
		//	ЭтотОбъект.ВидОперации  = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомисия;
		//	
		//	ДанныеОбъекта = Новый Структура("Дата, Организация, ВидОперации, УчитыватьКПН, УчитыватьНДС");
		//	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Источник);

		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") 
		//			И СтрокаТЧ.Номенклатура.ТипПозицииВПланеЗакупок<>Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.Товар Тогда
		//			Продолжить;
		//		КонецЕсли;
		//		СтрокаТабличнойЧасти = ЭтотОбъект.Товары.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
		//			Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
		//			Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		//				Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
		//			Иначе
		//				СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
		//			КонецЕсли;
		//		КонецЕсли;
		//		СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
		//		
		//		ИмяТаблицы = "Товары";
		//		Документы.ПоступлениеТоваровУслуг.ЗаполнитьРеквизитыНалоговогоУчета(Источник, СтрокаТабличнойЧасти, ИмяТаблицы);
		//		СчетаУчета = ПроцедурыБухгалтерскогоУчета.ПолучитьСчетаУчетаНоменклатуры(Источник.Организация, СтрокаТабличнойЧасти.Номенклатура, Источник.Дата);
		//		Документы.ПоступлениеТоваровУслуг.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТаблицы, СчетаУчета);
		//	КонецЦикла;
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Услуги Цикл
		//		СтрокаТабличнойЧасти = ЭтотОбъект.Услуги.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
		//			Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
		//			Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		//				Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
		//			Иначе
		//				СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
		//			КонецЕсли;
		//		КонецЕсли;
		//		//ЭтотОбъект.ЗаполнитьРеквизитыНалоговогоУчета(СтрокаТабличнойЧасти);
		//		//ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТабличнойЧасти, "Услуги", Истина, Истина);
		//		ИмяТаблицы = "Услуги";
		//		Документы.ПоступлениеТоваровУслуг.ЗаполнитьРеквизитыНалоговогоУчета(Источник, СтрокаТабличнойЧасти, ИмяТаблицы);
		//		СчетаУчета = ПроцедурыБухгалтерскогоУчета.ПолучитьСчетаУчетаНоменклатуры(Источник.Организация, СтрокаТабличнойЧасти.Номенклатура, Источник.Дата);
		//		Документы.ПоступлениеТоваровУслуг.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТаблицы, СчетаУчета);
		//		СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
		//	КонецЦикла;
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)<>Тип("СправочникСсылка.фин_ПлановаяНоменклатура") ИЛИ СтрокаТЧ.Номенклатура.ТипПозицииВПланеЗакупок<>Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.ОсновноеСредство ИЛИ СтрокаТЧ.Количество=0 Тогда
		//			Продолжить;
		//		КонецЕсли;
		//		Для Инд = 1 По СтрокаТЧ.Количество Цикл
		//			НовоеОС = Справочники.ОсновныеСредства.СоздатьЭлемент();
		//			НовоеОС.Наименование = СтрокаТЧ.Номенклатура.Наименование;
		//			НовоеОС.НаименованиеПолное = СтрокаТЧ.Номенклатура.НаименованиеПолное;
		//			НовоеОС.Родитель = дог_УправлениеДоговорами.РодительОС();
		//			НовоеОС.Комментарий = СтрокаТЧ.Характеристика;
		//			НовоеОС.УстановитьНовыйКод();
		//			Попытка 
		//				НовоеОС.Записать();
		//			Исключение
		//				Сообщить("Не удалось создать основное средство для плановой номенклатуры "+Строка(СтрокаТЧ.Номенклатура)+" по строке №"+Строка(СтрокаТЧ.НомерСтроки),СтатусСообщения.Важное);
		//				Продолжить;
		//			КонецПопытки;
		//			НаборЗаписей = РегистрыСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.СоздатьНаборЗаписей();
		//			НаборЗаписей.Отбор.ВнеоборотныйАктив.Установить(НовоеОС.Ссылка);
		//			НЗ = НаборЗаписей.Добавить();
		//			НЗ.ВнеоборотныйАктив = НовоеОС.Ссылка;
		//			НЗ.ПлановаяНоменклатура = СтрокаТЧ.Номенклатура;
		//			НЗ.ХарактеристикаПлановойНоменклатуры = СтрокаТЧ.Характеристика;
		//			Попытка 
		//				НаборЗаписей.Записать();
		//			Исключение
		//				Сообщить("Не удалось создать установить соответствие основному средству для плановой номенклатуры "+Строка(СтрокаТЧ.Номенклатура)+" по строке №"+Строка(СтрокаТЧ.НомерСтроки),СтатусСообщения.Важное);
		//				Продолжить;
		//			КонецПопытки;
		//			СтрокаТабличнойЧасти = ЭтотОбъект.ОС.Добавить();
		//			//ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//			СтрокаТабличнойЧасти.ОсновноеСредство = НовоеОС.Ссылка;
		//			СтрокаТабличнойЧасти.Сумма = СтрокаТЧ.Цена;
		//			СтрокаТабличнойЧасти.СтавкаНДС = СтрокаТЧ.СтавкаНДС;
		//			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
		//			//ЭтотОбъект.ЗаполнитьРеквизитыНалоговогоУчета(СтрокаТабличнойЧасти);
		//			//ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТабличнойЧасти, "ОС", Истина, Истина);
		//			ИмяТаблицы = "Товары";
		//			Документы.ПоступлениеТоваровУслуг.ЗаполнитьРеквизитыНалоговогоУчета(Источник, СтрокаТабличнойЧасти, ИмяТаблицы);
		//			СчетаУчета = ПроцедурыБухгалтерскогоУчета.ПолучитьСчетаУчетаНоменклатуры(Источник.Организация, СтрокаТабличнойЧасти.Номенклатура, Источник.Дата);
		//			Документы.ПоступлениеТоваровУслуг.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТаблицы, СчетаУчета);
		//			СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
		//		КонецЦикла;
		//	КонецЦикла;
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		//ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.Доверенность") Тогда
		//	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		//	//ЭтотОбъект.Контрагент = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
		//	ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
		//		СтрокаТабличнойЧасти = ЭтотОбъект.Товары.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
		//			Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
		//			Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		//				Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
		//               	СтрокаТабличнойЧасти.НаименованиеТовара = СтрокаТЧ.Номенклатура.Наименование;
		//			Иначе
		//				СтрокаТабличнойЧасти.НаименованиеТовара = Номенклатура;
		//			КонецЕсли;
		//		Иначе	
		//           	СтрокаТабличнойЧасти.НаименованиеТовара = СтрокаТЧ.Номенклатура;
		//		КонецЕсли;
		//		СтрокаТабличнойЧасти.ЕдиницаПоКлассификатору = СтрокаТЧ.ЕдиницаИзмерения;
		//		СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения;
		//	КонецЦикла;
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		//ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.ПоступлениеНМА") Тогда
		//	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		//	ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
		//	УчетПоПроектам = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("узп_ВестиУчетЗакупокПоПроектам");
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)<>Тип("СправочникСсылка.фин_ПлановаяНоменклатура") ИЛИ  СтрокаТЧ.Номенклатура.ТипПозицииВПланеЗакупок<>Перечисления.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.НематериальныйАктив ИЛИ СтрокаТЧ.Количество=0 Тогда
		//			Продолжить;
		//		КонецЕсли;
		//		Для Инд = 1 По СтрокаТЧ.Количество Цикл
		//			НовоеОС = Справочники.НематериальныеАктивы.СоздатьЭлемент();
		//			НовоеОС.Наименование = СтрокаТЧ.Номенклатура.Наименование;
		//			НовоеОС.НаименованиеПолное = СтрокаТЧ.Номенклатура.НаименованиеПолное;
		//			НовоеОС.Родитель = дог_УправлениеДоговорами.РодительНМА();
		//			НовоеОС.ПрочиеСведения = СтрокаТЧ.Характеристика;
		//			НовоеОС.УстановитьНовыйКод();
		//			Попытка 
		//				НовоеОС.Записать();
		//			Исключение
		//				Сообщить("Не удалось создать нематериальный актив для плановой номенклатуры "+Строка(СтрокаТЧ.Номенклатура)+" по строке №"+Строка(СтрокаТЧ.НомерСтроки),СтатусСообщения.Важное);
		//				Продолжить;
		//			КонецПопытки;
		//			НаборЗаписей = РегистрыСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.СоздатьНаборЗаписей();
		//			НаборЗаписей.Отбор.ВнеоборотныйАктив.Установить(НовоеОС.Ссылка);
		//			НЗ = НаборЗаписей.Добавить();
		//			НЗ.ВнеоборотныйАктив = НовоеОС.Ссылка;
		//			НЗ.ПлановаяНоменклатура = СтрокаТЧ.Номенклатура;
		//			НЗ.ХарактеристикаПлановойНоменклатуры = СтрокаТЧ.Характеристика;
		//			Попытка 
		//				НаборЗаписей.Записать();
		//			Исключение
		//				Сообщить("Не удалось создать установить соответствие основному средству для плановой номенклатуры "+Строка(СтрокаТЧ.Номенклатура)+" по строке №"+Строка(СтрокаТЧ.НомерСтроки),СтатусСообщения.Важное);
		//				Продолжить;
		//			КонецПопытки;
		//			СтрокаТабличнойЧасти = ЭтотОбъект.НМА.Добавить();
		//			//ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//			СтрокаТабличнойЧасти.НематериальныйАктив = НовоеОС.Ссылка;
		//			СтрокаТабличнойЧасти.Сумма = СтрокаТЧ.Цена;
		//			СтрокаТабличнойЧасти.СтавкаНДС = СтрокаТЧ.СтавкаНДС;
		//			СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
		//			СтрокаТабличнойЧасти.ЗаявкаМТС = СтрокаТЧ.ЗаявкаМТС;
		//			СтрокаТабличнойЧасти.Подразделение = СтрокаТЧ.Подразделение;
		//			СтрокаТабличнойЧасти.Проект = СтрокаТЧ.Проект;
		//			Если УчетПоПроектам Тогда
		//				СтрокаТабличнойЧасти.Проект = СтрокаТЧ.Проект;
		//			КонецЕсли;
		//			//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
		//			//ЭтотОбъект.ЗаполнитьРеквизитыНалоговогоУчета(СтрокаТабличнойЧасти);
		//			//ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТабличнойЧасти, "НМА", Истина, Истина);
		//			ДанныеСтрокиТаблицы = Новый Структура(
		//			"НематериальныйАктив, Сумма, СтавкаНДС,
		//			|СуммаНДС, Всего, СчетУчетаБУ,
		//			|СчетУчетаНДС, НДСВидОборота, НДСВидПоступления,
		//			|СчетУчетаНУ"
		//			);
		// 			ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, СтрокаТабличнойЧасти);
		//			ДанныеОбъекта = Новый Структура(
		//			"Организация, СтруктурноеПодразделение, Дата, Ссылка, ВидУчетаНУ,  
		//			|УчитыватьКПН, УчитыватьНДС, СуммаВключаетНДС, 
		//			|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов, ДоговорКонтрагента");
		//			ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Источник);
		//			СчетаУчета = УправлениеВнеоборотнымиАктивамиСервер.ПолучитьСчетаУчетаНМА(ДанныеОбъекта.Организация, ДанныеСтрокиТаблицы.НематериальныйАктив, ДанныеОбъекта.Дата);
		//			Документы.ПоступлениеНМА.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, ДанныеСтрокиТаблицы, "НМА", СчетаУчета);
		//			Документы.ПоступлениеНМА.ЗаполнитьРеквизитыНалоговогоУчета(ДанныеОбъекта, ДанныеСтрокиТаблицы, "НМА");
		//			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ДанныеСтрокиТаблицы);
		//		КонецЦикла;
		//	КонецЦикла;
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		//	
		//	
		//ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.ПоступлениеИзПереработки") Тогда
		//	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		//	ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
		//	
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Услуги Цикл
		//		СтрокаТабличнойЧасти = ЭтотОбъект.Услуги.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
		//			Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
		//			Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		//				Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
		//			Иначе
		//				СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
		//			КонецЕсли;
		//		КонецЕсли;
		//		Документы.ПоступлениеИзПереработки.ЗаполнитьРеквизитыНалоговогоУчета(Источник, СтрокаТабличнойЧасти, "Услуги");
		//		//ЭтотОбъект.ЗаполнитьРеквизитыНалоговогоУчета(СтрокаТабличнойЧасти);
		//		СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
		//		//ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТабличнойЧасти, "Услуги", Истина, Истина);
		//	КонецЦикла;
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		//	
		//КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполненияПоЗаказуПокупателяОбработкаЗаполнения(Источник, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.узп_ЗаказПокупателя") Тогда
		ЭтотОбъект = Источник;
		Если ТипЗнч(Источник)=Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
			
			ЭтотОбъект.ВидОперации  =  Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия;
			
			// Заполним реквизиты из стандартного набора по документу основанию.
			ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
			//ЭтотОбъект.Контрагент = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
			ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
			
			//ЭтотОбъект.УчитыватьНДС   = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНДС(ЭтотОбъект.Организация, ЭтотОбъект.Дата);
			ЭтотОбъект.УчитыватьАкциз = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаАкциза(ЭтотОбъект.Организация, ЭтотОбъект.Дата);
			
			//Если ЗначениеЗаполнено(ЭтотОбъект.ТипЦен) Тогда
			//	ЭтотОбъект.СуммаВключаетНДС   = ЭтотОбъект.ТипЦен.ЦенаВключаетНДС;
			//	ЭтотОбъект.СуммаВключаетАкциз = ЭтотОбъект.ТипЦен.ЦенаВключаетАкциз;
			//Иначе
			//	ЭтотОбъект.СуммаВключаетНДС   = Истина;
			//	ЭтотОбъект.СуммаВключаетАкциз = Ложь;
			//КонецЕсли;
			ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено);
			
			СчетПоУмолчанию = ЭтотОбъект.Организация.ОсновнойБанковскийСчет;
			ЭтотОбъект.БанковскийСчетОрганизации = СчетПоУмолчанию;
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
				СтрокаТабличнойЧасти = ЭтотОбъект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
					Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
					Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
						Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
					Иначе
						СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
					КонецЕсли;
				КонецЕсли;
				
				ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТабличнойЧасти, "Товары", Истина,  ЭтотОбъект.УчитыватьКПН И (ПоддержкаУчетаВременныхРазниц ИЛИ ЭтотОбъект.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ));
				ЭтотОбъект.ЗаполнитьРеквизитыНалоговогоУчета(СтрокаТабличнойЧасти);
				Если ЭтотОбъект.УчитыватьАкциз Тогда
					ОбработкаТабличныхЧастей.ЗаполнитьСтавкуАкцизаТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
					ОбработкаТабличныхЧастей.РассчитатьСуммуАкцизаТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
				КонецЕсли;
				СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
				
			КонецЦикла;
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Услуги Цикл
				СтрокаТабличнойЧасти = ЭтотОбъект.Услуги.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
					Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
					Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
						Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
					Иначе
						СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
					КонецЕсли;
				КонецЕсли;
				
				ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТабличнойЧасти, "Услуги", Истина, ЭтотОбъект.УчитыватьКПН И (ПоддержкаУчетаВременныхРазниц ИЛИ ЭтотОбъект.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ));
				ЭтотОбъект.ЗаполнитьРеквизитыНалоговогоУчета(СтрокаТабличнойЧасти);
				СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
			КонецЦикла;				
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
			
		ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.РеализацияУслугПоПереработке") ИЛИ ТипЗнч(Источник)=Тип("ДокументОбъект.АктОбОказанииПроизводственныхУслуг") Тогда
			
			ЭтотОбъект.Грузополучатель    = ДанныеЗаполнения.Контрагент;	 	
			
			// Заполним реквизиты из стандартного набора по документу основанию.
			ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
			//ЭтотОбъект.Контрагент = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
			ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
			
			
			//Если ЗначениеЗаполнено(ЭтотОбъект.ТипЦен) Тогда
			//	ЭтотОбъект.СуммаВключаетНДС   = ЭтотОбъект.ТипЦен.ЦенаВключаетНДС;
			//	ЭтотОбъект.СуммаВключаетАкциз = ЭтотОбъект.ТипЦен.ЦенаВключаетАкциз;
			//Иначе
			//	ЭтотОбъект.СуммаВключаетНДС   = Истина;
			//	ЭтотОбъект.СуммаВключаетАкциз = Ложь;
			//КонецЕсли;
			ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено);
			СчетПоУмолчанию = ЭтотОбъект.Организация.ОсновнойБанковскийСчет;
			ЭтотОбъект.БанковскийСчетОрганизации = СчетПоУмолчанию;
			
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Услуги Цикл
				СтрокаТабличнойЧасти = ЭтотОбъект.Услуги.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
					Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
					Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
						Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
					Иначе
						СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
					КонецЕсли;
				КонецЕсли;
				
				ЭтотОбъект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиУслуги(СтрокаТабличнойЧасти, Истина, ЭтотОбъект.УчитыватьКПН И (ПоддержкаУчетаВременныхРазниц ИЛИ ЭтотОбъект.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ));
				ЭтотОбъект.ЗаполнитьРеквизитыНалоговогоУчета(СтрокаТабличнойЧасти);
				СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
				СтрокаТабличнойЧасти.СуммаПлановая = СтрокаТЧ.Сумма;
				СтрокаТабличнойЧасти.ПлановаяСтоимость = СтрокаТЧ.Цена;
			КонецЦикла;				
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
			
		ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.ПередачаОС") Тогда
			
			
			// Заполним реквизиты шапки по документу основанию.
			// Заполним реквизиты из стандартного набора по документу основанию.
			ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
			//ЭтотОбъект.Контрагент 		  = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
			ЭтотОбъект.Грузополучатель    = ДанныеЗаполнения.Контрагент;	 	
			ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
			ЭтотОбъект.ВидОперации =  Перечисления.ВидыОперацийПередачиОС.Реализация;
			//БанковскийСчетОрганизации   = Основание.СчетОрганизации;
			//АдресДоставки			    = Основание.ПунктНазначения;
			//Доверенность			    = Основание.Доверенность;
			
			//УчетНДСИАкциза.ЗаполнитьТабличныеЧастиИзДокументаОснования(ЭтотОбъект, Основание);		
			ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено);
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.ОС Цикл
				Если ТипЗнч(СтрокаТЧ.Номенклатура)<>Тип("СправочникСсылка.ОсновныеСредства") Тогда
					Продолжить;
				КонецЕсли;
				СтрокаТабличнойЧасти = ЭтотОбъект.ОС.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				СтрокаТабличнойЧасти.ОсновноеСредство = СтрокаТЧ.Номенклатура;
				
				УчетНДСИАкциза.РассчитатьОборотПоРеализацииТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
				СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
			КонецЦикла;	
			Если ЭтотОбъект.ОС.Количество() > 0 Тогда
				ЭтотОбъект.ЗаполнитьСчетаУчетаВТабЧасти(ЭтотОбъект.ОС, "ОС", Истина, ЭтотОбъект.УчитыватьКПН И (ПоддержкаУчетаВременныхРазниц ИЛИ ЭтотОбъект.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ));
			КонецЕсли;
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
			
		ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.ПередачаНМА") Тогда
			
			
			// Заполним реквизиты шапки по документу основанию.
			// Заполним реквизиты из стандартного набора по документу основанию.
			ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
			//ЭтотОбъект.Контрагент 		  = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
			ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
			
			//БанковскийСчетОрганизации   = Основание.СчетОрганизации;
			//АдресДоставки			    = Основание.ПунктНазначения;
			//Доверенность			    = Основание.Доверенность;
			
			//УчетНДСИАкциза.ЗаполнитьТабличныеЧастиИзДокументаОснования(ЭтотОбъект, Основание);		
			ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата, Неопределено);
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.ОС Цикл
				Если ТипЗнч(СтрокаТЧ.Номенклатура)<>Тип("СправочникСсылка.НематериальныеАктивы") Тогда
					Продолжить;
				КонецЕсли;
				ЭтотОбъект.НематериальныйАктив = СтрокаТЧ.Номенклатура;
				ЭтотОбъект.Сумма = СтрокаТЧ.Сумма;
				ЭтотОбъект.СуммаДокумента = СтрокаТЧ.Сумма;
				ЭтотОбъект.СтавкаНДС = СтрокаТЧ.СтавкаНДС;
				ЭтотОбъект.СуммаНДС = СтрокаТЧ.СуммаНДС;
			КонецЦикла;	
			ЭтотОбъект.Заказ = ДанныеЗаполнения.Ссылка;
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
			
		ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.СчетНаОплатуПокупателю") Тогда
			ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
			//ЭтотОбъект.Контрагент = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
			ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
			//ЭтотОбъект.ВводНаОснованииРеализацииТМЗПередачиОС = Истина;
			//ЭтотОбъект.ВидОперации  = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомисия;
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
				СтрокаТабличнойЧасти = ЭтотОбъект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
					Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
					Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
						Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
					Иначе
						СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
					КонецЕсли;
				КонецЕсли;
				СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
			КонецЦикла;
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Услуги Цикл
				СтрокаТабличнойЧасти = ЭтотОбъект.Услуги.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				СтрокаТабличнойЧасти.Содержание = СтрокаТЧ.Номенклатура.НаименованиеПолное;
				Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
					Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
					Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
						Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
					Иначе
						СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
					КонецЕсли;
				КонецЕсли;
				СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
			КонецЦикла;
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.ОС Цикл
				СтрокаТабличнойЧасти = ЭтотОбъект.ОС.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
				СтрокаТабличнойЧасти.ОсновноеСредство = СтрокаТЧ.Номенклатура;
				СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
			КонецЦикла;
			
		КонецЕсли;			
	КонецЕсли;	
	
	/////////////////////////////////////////////////////////////////////////////////
	//ДЛЯ БК 3.0!!!!/////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////
	//Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.узп_ЗаказПокупателя") Тогда
	//	ЭтотОбъект = Источник;
		//Если ТипЗнч(Источник)=Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
		//	
		//	ЭтотОбъект.ВидОперации  =  Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия;
		//	
		//	// Заполним реквизиты из стандартного набора по документу основанию.
		//	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		//	ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
		//	ЭтотОбъект.УчитыватьАкциз = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаАкциза(ЭтотОбъект.Организация, ЭтотОбъект.Дата);
		//	ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата);
		//	
		//	СчетПоУмолчанию = ЭтотОбъект.Организация.ОсновнойБанковскийСчет;
		//	ЭтотОбъект.БанковскийСчетОрганизации = СчетПоУмолчанию;
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
		//		СтрокаТабличнойЧасти = ЭтотОбъект.Товары.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
		//			Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
		//			Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		//				Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
		//			Иначе
		//				СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
		//			КонецЕсли;
		//		КонецЕсли;
		//		ДанныеОбъекта = Новый Структура(
		//			"Организация, СтруктурноеПодразделение, ВидОперации, Дата, Ссылка, ВидУчетаНУ, ТипЦен, 
		//			|УчитыватьКПН, УчитыватьНДС, УчитыватьАкциз, СуммаВключаетНДС, СуммаВключаетАкциз,  
		//			|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов, Склад, ДоговорКонтрагента");
		//		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтотОбъект);
		//		СведенияОНоменклатуре = дог_УправлениеДоговорами.ПолучитьСведенияОНоменклатуре(СтрокаТабличнойЧасти.Номенклатура, ДанныеОбъекта);
		//		Документы.РеализацияТоваровУслуг.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, "Товары", СведенияОНоменклатуре);
		//		Документы.РеализацияТоваровУслуг.ЗаполнитьРеквизитыНалоговогоУчета(ЭтотОбъект, СтрокаТабличнойЧасти, "Товары");
		//		СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
		//		
		//	КонецЦикла;
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Услуги Цикл
		//		СтрокаТабличнойЧасти = ЭтотОбъект.Услуги.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
		//			Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
		//			Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		//				Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
		//			Иначе
		//				СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
		//			КонецЕсли;
		//		КонецЕсли;
		//		ДанныеОбъекта = Новый Структура(
		//			"Организация, СтруктурноеПодразделение, ВидОперации, Дата, Ссылка, ВидУчетаНУ, ТипЦен, 
		//			|УчитыватьКПН, УчитыватьНДС, УчитыватьАкциз, СуммаВключаетНДС, СуммаВключаетАкциз,  
		//			|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов, Склад, ДоговорКонтрагента");
		//		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтотОбъект);
		//		СведенияОНоменклатуре = дог_УправлениеДоговорами.ПолучитьСведенияОНоменклатуре(СтрокаТабличнойЧасти.Номенклатура, ДанныеОбъекта);
		//		Документы.РеализацияТоваровУслуг.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, "Услуги", СведенияОНоменклатуре);
		//		Документы.РеализацияТоваровУслуг.ЗаполнитьРеквизитыНалоговогоУчета(ЭтотОбъект, СтрокаТабличнойЧасти, "Услуги");
		//		СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
		//	КонецЦикла;				
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		//	
		//ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.РеализацияУслугПоПереработке") ИЛИ ТипЗнч(Источник)=Тип("ДокументОбъект.АктОбОказанииПроизводственныхУслуг") Тогда
		//	
		//	ЭтотОбъект.Грузополучатель    = ДанныеЗаполнения.Контрагент;	 	
		//	
		//	// Заполним реквизиты из стандартного набора по документу основанию.
		//	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		//	ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
		//	ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата);
		//	СчетПоУмолчанию = ЭтотОбъект.Организация.ОсновнойБанковскийСчет;
		//	ЭтотОбъект.БанковскийСчетОрганизации = СчетПоУмолчанию;
		//	
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Услуги Цикл
		//		СтрокаТабличнойЧасти = ЭтотОбъект.Услуги.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
		//			Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
		//			Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		//				Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
		//			Иначе
		//				СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
		//			КонецЕсли;
		//		КонецЕсли;
		//		
		//		ДанныеСтрокиТаблицы = Новый Структура("Номенклатура, НДСВидОперацииРеализации,ТипЦенПлановойСебестоимости");
		//		ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, СтрокаТабличнойЧасти);
		//		ДанныеСтрокиТаблицы.ТипЦенПлановойСебестоимости = УчетнаяПолитикаСервер.ПолучитьТипЦенПлановойСебестоимости();
		//		ПараметрыОбъекта = Новый Структура("Дата, Ссылка, Организация, ПодразделениеОрганизации");
		//		ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, ЭтотОбъект);
		//		СведенияОНоменклатуре 					= дог_УправлениеДоговорами.ПолучитьСведенияОНоменклатуре(ДанныеСтрокиТаблицы.Номенклатура, ПараметрыОбъекта);
		//		Документы.АктОбОказанииПроизводственныхУслуг.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ПараметрыОбъекта, СтрокаТабличнойЧасти, СведенияОНоменклатуре);
		//		Документы.АктОбОказанииПроизводственныхУслуг.ЗаполнитьРеквизитыНалоговогоУчета(ПараметрыОбъекта, СтрокаТабличнойЧасти);
		//		
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ДанныеСтрокиТаблицы);
		//		СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
		//		СтрокаТабличнойЧасти.СуммаПлановая = СтрокаТЧ.Сумма;
		//		СтрокаТабличнойЧасти.ПлановаяСтоимость = СтрокаТЧ.Цена;
		//	КонецЦикла;				
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		//	
		//ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.ПередачаОС") Тогда
		//	
		//	
		//	// Заполним реквизиты шапки по документу основанию.
		//	// Заполним реквизиты из стандартного набора по документу основанию.
		//	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		//	//ЭтотОбъект.Контрагент 		  = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
		//	ЭтотОбъект.Грузополучатель    = ДанныеЗаполнения.Контрагент;	 	
		//	ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
		//	ЭтотОбъект.ВидОперации =  Перечисления.ВидыОперацийПередачиОС.Реализация;
		//	//БанковскийСчетОрганизации   = Основание.СчетОрганизации;
		//	//АдресДоставки			    = Основание.ПунктНазначения;
		//	//Доверенность			    = Основание.Доверенность;
		//	
		//	//УчетНДСИАкциза.ЗаполнитьТабличныеЧастиИзДокументаОснования(ЭтотОбъект, Основание);		
		//	ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата);
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.ОС Цикл
		//		Если ТипЗнч(СтрокаТЧ.ОС)<>Тип("СправочникСсылка.ОсновныеСредства") Тогда
		//			Продолжить;
		//		КонецЕсли;
		//		СтрокаТабличнойЧасти = ЭтотОбъект.ОС.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		СтрокаТабличнойЧасти.ОсновноеСредство = СтрокаТЧ.ОС;
		//		
		//		УчетНДСИАкциза.РассчитатьОборотПоРеализацииТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
		//		СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
		//	КонецЦикла;	
		//	Если ЭтотОбъект.ОС.Количество() > 0 Тогда
		//		ЭтотОбъект.ЗаполнитьСчетаУчетаВТабЧасти(ЭтотОбъект.ОС, "ОС", Истина, ЭтотОбъект.УчитыватьКПН И (ПоддержкаУчетаВременныхРазниц ИЛИ ЭтотОбъект.ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ));
		//	КонецЕсли;
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		//	
		//ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.ПередачаНМА") Тогда
		//	
		//	
		//	// Заполним реквизиты шапки по документу основанию.
		//	// Заполним реквизиты из стандартного набора по документу основанию.
		//	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		//	//ЭтотОбъект.Контрагент 		  = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
		//	ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
		//	
		//	//БанковскийСчетОрганизации   = Основание.СчетОрганизации;
		//	//АдресДоставки			    = Основание.ПунктНазначения;
		//	//Доверенность			    = Основание.Доверенность;
		//	
		//	//УчетНДСИАкциза.ЗаполнитьТабличныеЧастиИзДокументаОснования(ЭтотОбъект, Основание);		
		//	ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(ЭтотОбъект.Организация, ЭтотОбъект.Дата);
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.ОС Цикл
		//		Если ТипЗнч(СтрокаТЧ.ОС)<>Тип("СправочникСсылка.НематериальныеАктивы") Тогда
		//			Продолжить;
		//		КонецЕсли;
		//		ЭтотОбъект.НематериальныйАктив = СтрокаТЧ.ОС;
		//		ЭтотОбъект.Сумма = СтрокаТЧ.Сумма;
		//		ЭтотОбъект.СуммаДокумента = СтрокаТЧ.Сумма;
		//		ЭтотОбъект.СтавкаНДС = СтрокаТЧ.СтавкаНДС;
		//		ЭтотОбъект.СуммаНДС = СтрокаТЧ.СуммаНДС;
		//	КонецЦикла;	
		//	ЭтотОбъект.Заказ = ДанныеЗаполнения.Ссылка;
		//	ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		//	
		//ИначеЕсли ТипЗнч(Источник)=Тип("ДокументОбъект.СчетНаОплатуПокупателю") Тогда
		//	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		//	//ЭтотОбъект.Контрагент = ДанныеЗаполнения.ДоговорКонтрагента.Владелец;
		//	ЭтотОбъект.Дата = ДанныеЗаполнения.Дата;
		//	//ЭтотОбъект.ВводНаОснованииРеализацииТМЗПередачиОС = Истина;
		//	//ЭтотОбъект.ВидОперации  = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомисия;
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
		//		СтрокаТабличнойЧасти = ЭтотОбъект.Товары.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
		//			Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
		//			Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		//				Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
		//			Иначе
		//				СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
		//			КонецЕсли;
		//		КонецЕсли;
		//		СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
		//	КонецЦикла;
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Услуги Цикл
		//		СтрокаТабличнойЧасти = ЭтотОбъект.Услуги.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		СтрокаТабличнойЧасти.Содержание = СтрокаТЧ.Номенклатура.НаименованиеПолное;
		//		Если ТипЗнч(СтрокаТЧ.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
		//			Номенклатура = дог_УправлениеДоговорами.ПолучитьРегламентированнуюНоменклатуру(СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,ДанныеЗаполнения.Дата);
		//			Если ТипЗнч(Номенклатура)=Тип("Массив") ИЛИ НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		//				Сообщить("Не определена регламентированная номенклатура в строке № "+Строка(СтрокаТабличнойЧасти.НомерСтроки)+" табличной части ""Товары""",СтатусСообщения.Важное);
		//			Иначе
		//				СтрокаТабличнойЧасти.Номенклатура = Номенклатура;
		//			КонецЕсли;
		//		КонецЕсли;
		//		СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
		//	КонецЦикла;
		//	Для Каждого СтрокаТЧ Из ДанныеЗаполнения.ОС Цикл
		//		СтрокаТабличнойЧасти = ЭтотОбъект.ОС.Добавить();
		//		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЧ);
		//		СтрокаТабличнойЧасти.ОсновноеСредство = СтрокаТЧ.ОС;
		//		СтрокаТабличнойЧасти.Заказ = ДанныеЗаполнения.Ссылка;
		//	КонецЦикла;
		//	
		//КонецЕсли;			
	//КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ УЧЕТА ИСПОЛНЕНИЯ ПЛАНОВЫХ ДОКУМЕНТОВ/ЗАКАЗОВ

Процедура УчетИсполненияЗаказовПокупателейОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	Запрос = Новый Запрос;
	
	ФормироватьПоЧастям = Истина;
	ПсевдонимыПолей = Новый Массив;
	ПсевдонимыПолей.Добавить("Номенклатура");
	ПсевдонимыПолей.Добавить("Организация");
	ПсевдонимыПолей.Добавить("СтруктурноеПодразделение");
	ПсевдонимыПолей.Добавить("Контрагент");
	ПсевдонимыПолей.Добавить("СрокПоставки");
	ПсевдонимыПолей.Добавить("Количество");
	ПсевдонимыПолей.Добавить("Сумма");
	ПсевдонимыПолей.Добавить("ВалютаДокумента");
	ПсевдонимыПолей.Добавить("НоменклатураПлановая");
	ПсевдонимыПолей.Добавить("Характеристика");
	ПсевдонимыПолей.Добавить("Цена");
	ПсевдонимыПолей.Добавить("Заказ");
	ПсевдонимыПолей.Добавить("СтавкаНДС");
	ПсевдонимыПолей.Добавить("ЕдиницаИзмерения");
	ПсевдонимыПолей.Добавить("Коэффициент");
	
	Если ФормироватьПоЧастям Тогда
		СоставныеЧастиЗапроса = Новый Структура;
		СоставныеЧастиЗапроса.Вставить("АктОбОказанииПроизводственныхУслуг","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата КАК СрокПоставки,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура КАК НоменклатураПлановая,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры КАК Характеристика,
		|	Док.Цена,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент КАК Коэффициент
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)");
		
		СоставныеЧастиЗапроса.Вставить("РеализацияУслугПоПереработке","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	NULL,
		|	NULL
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.РеализацияУслугПоПереработке.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)");
		
		СоставныеЧастиЗапроса.Вставить("РеализацияТоваровУслуг","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)");
		
		СоставныеЧастиЗапроса.Вставить("ПередачаОС","ВЫБРАТЬ
		|	Док.ОсновноеСредство,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	NULL,
		|	NULL
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.ПередачаОС.ОС КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)");
		
		СоставныеЧастиЗапроса.Вставить("ПередачаНМА","ВЫБРАТЬ
		|	Док.НематериальныйАктив,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	NULL,
		|	NULL
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.ПередачаНМА КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.НематериальныйАктив = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)");
		
		СоставныеЧастиЗапроса.Вставить("ВозвратТоваровОтПокупателя","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)");
		Если СоставныеЧастиЗапроса.Свойство(Источник.Метаданные().Имя) Тогда
			Запрос.Текст = УстановитьПсевдонимы(СоставныеЧастиЗапроса[Источник.Метаданные().Имя],ПсевдонимыПолей)+"
			|
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Исполнение.Номенклатура,
			|	ВТ_Исполнение.Организация,
			|	ВТ_Исполнение.СтруктурноеПодразделение,
			|	ВТ_Исполнение.Контрагент,
			|	ВТ_Исполнение.СрокПоставки,
			|	ВТ_Исполнение.Количество,
			|	ВТ_Исполнение.Сумма,
			|	ВТ_Исполнение.ВалютаДокумента,
			|	ВТ_Исполнение.НоменклатураПлановая,
			|	ВТ_Исполнение.Характеристика,
			|	ВТ_Исполнение.Цена,
			|	ВТ_Исполнение.Заказ,
			|	ВТ_Исполнение.СтавкаНДС,
			|	ЗаказПокупателя.Подразделение,
			|	ВТ_Исполнение.ЕдиницаИзмерения,
			|	ВТ_Исполнение.Коэффициент
			|ИЗ
			|	ВТ_Исполнение КАК ВТ_Исполнение
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.узп_ЗаказПокупателя КАК ЗаказПокупателя
			|		ПО ВТ_Исполнение.Заказ = ЗаказПокупателя.Ссылка";
		Иначе
			ФормироватьПоЧастям = Ложь;
		КонецЕсли;
	КонецЕсли;
	Если Не ФормироватьПоЧастям Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата КАК СрокПоставки,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура КАК НоменклатураПлановая,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры КАК Характеристика,
		|	Док.Цена,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент КАК Коэффициент
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.РеализацияУслугПоПереработке.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.ОсновноеСредство,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПередачаОС.ОС КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.НематериальныйАктив,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПередачаНМА КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.НематериальныйАктив = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.Заказ,
		|	Док.СтавкаНДС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПокупателя.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Исполнение.Номенклатура,
		|	ВТ_Исполнение.Организация,
		|	ВТ_Исполнение.СтруктурноеПодразделение,
		|	ВТ_Исполнение.Контрагент,
		|	ВТ_Исполнение.СрокПоставки,
		|	ВТ_Исполнение.Количество,
		|	ВТ_Исполнение.Сумма,
		|	ВТ_Исполнение.ВалютаДокумента,
		|	ВТ_Исполнение.НоменклатураПлановая,
		|	ВТ_Исполнение.Характеристика,
		|	ВТ_Исполнение.Цена,
		|	ВТ_Исполнение.Заказ,
		|	ВТ_Исполнение.СтавкаНДС,
		|	ЗаказПокупателя.Подразделение,
		|	ВТ_Исполнение.ЕдиницаИзмерения,
		|	ВТ_Исполнение.Коэффициент
		|ИЗ
		|	ВТ_Исполнение КАК ВТ_Исполнение
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.узп_ЗаказПокупателя КАК ЗаказПокупателя
		|		ПО ВТ_Исполнение.Заказ = ЗаказПокупателя.Ссылка";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата", 	Источник.Дата);
	Запрос.УстановитьПараметр("Ссылка",	Источник.Ссылка);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	НаборЗаписей = Источник.Движения.узп_ЗаказыПокупателей;
	//НаборЗаписей = РегистрыНакопления.узп_ЗаказыПокупателей.СоздатьНаборЗаписей();
	//НаборЗаписей.Отбор.Регистратор.Установить(Источник.Ссылка);
	//НаборЗаписей.Прочитать();
	//НаборЗаписей.Очистить();
	ВалютаДокумента = Источник.ВалютаДокумента;
	ВалютаУпр = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
	
	Если ВалютаДокумента<>ВалютаУпр Тогда
		КурсУпр = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаУпр,Источник.Дата);
	КонецЕсли;
	Если ВалютаДокумента<>ВалютаУпр Тогда
		КурсДокумента = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаДокумента,Источник.Дата);
	КонецЕсли;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ВалютаУчетаЗакупок = ВыборкаДетальныеЗаписи.Заказ.ВалютаДокумента;
		Если ВалютаДокумента<>ВалютаУчетаЗакупок Тогда
			КурсУчета = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаУчетаЗакупок,Источник.Дата);
		КонецЕсли;
		Движение = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Движение,ВыборкаДетальныеЗаписи);
		Движение.Период = Источник.Дата;
		Движение.ПриходРасход = Перечисления.узп_ВидыОборотовПоЗаказам.Исполнено;
		Если ВалютаДокумента<>ВалютаУпр Тогда
			Движение.СуммаУпр = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,ВалютаДокумента,ВалютаУпр,КурсДокумента.Курс,КурсУпр.Курс,КурсДокумента.Кратность,КурсУпр.Кратность);
		Иначе
			Движение.СуммаУпр = Движение.Сумма;
		КонецЕсли;
		Если ВалютаДокумента<>ВалютаУчетаЗакупок Тогда
			Движение.Сумма = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,ВалютаДокумента,ВалютаУчетаЗакупок,КурсДокумента.Курс,КурсУчета.Курс,КурсДокумента.Кратность,КурсУчета.Кратность);
		КонецЕсли;
		Если ЗначениеЗаполнено(Движение.ЕдиницаИзмерения) Тогда
			Движение.КоличествоБазовое = Движение.Количество * ВыборкаДетальныеЗаписи.Коэффициент;
		Иначе
			Движение.КоличествоБазовое = Движение.Количество;
		КонецЕсли;
		Если Движение.КоличествоБазовое = 0 Тогда
			 Движение.КоличествоБазовое = Движение.Количество;
		КонецЕсли;
	КонецЦикла;
	Попытка
		НаборЗаписей.Записать();
	Исключение
		Сообщить("Не удалось зарегистрировать исполнение заказов покупателей документом "+Строка(Источник.Ссылка)+": 
		|	"+ОписаниеОшибки(),СтатусСообщения.Важное);
	КонецПопытки;
КонецПроцедуры

Процедура УчетИсполненияЗаявокМТСОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	Запрос = Новый Запрос;
	
	ФормироватьПоЧастям = Истина;
	
	ПсевдонимыПолей = Новый Массив;
	ПсевдонимыПолей.Добавить("Номенклатура");
	ПсевдонимыПолей.Добавить("Организация");
	ПсевдонимыПолей.Добавить("СтруктурноеПодразделение");
	ПсевдонимыПолей.Добавить("ПериодПланирования");
	ПсевдонимыПолей.Добавить("Количество");
	ПсевдонимыПолей.Добавить("Сумма");
	ПсевдонимыПолей.Добавить("ВалютаДокумента");
	ПсевдонимыПолей.Добавить("Подразделение");
	ПсевдонимыПолей.Добавить("Проект");
	ПсевдонимыПолей.Добавить("НоменклатураПлановая");
	ПсевдонимыПолей.Добавить("Характеристика");
	ПсевдонимыПолей.Добавить("ЕдиницаИзмерения");
	ПсевдонимыПолей.Добавить("Коэффициент");
	ПсевдонимыПолей.Добавить("Заявка");
	ПсевдонимыПолей.Добавить("СчетУчетаБУ");
	ПсевдонимыПолей.Добавить("Склад");
	
	Если ФормироватьПоЧастям Тогда
		СоставныеЧастиЗапроса = Новый Структура;
		СоставныеЧастиЗапроса.Вставить("ПоступлениеИзПереработки","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата КАК ПериодПланирования,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура КАК НоменклатураПлановая,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры КАК Характеристика,
		|	NULL КАК ЕдиницаИзмерения,
		|	NULL КАК Коэффициент,
		|	Док.ЗаявкаМТС КАК Заявка,
		|	NULL КАК СчетУчетаБУ,
		|	NULL КАК Склад
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.ПоступлениеИзПереработки.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)");
		СоставныеЧастиЗапроса.Вставить("ПоступлениеНМА","ВЫБРАТЬ
		|	Док.НематериальныйАктив,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	NULL,
		|	NULL,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.ПоступлениеНМА.НМА КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.НематериальныйАктив = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)");
		СоставныеЧастиЗапроса.Вставить("ПоступлениеТоваровУслуг","ВЫБРАТЬ
		|	Док.ОсновноеСредство,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	NULL,
		|	NULL,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ОС КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	NULL,
		|	NULL,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)");
		СоставныеЧастиЗапроса.Вставить("АвансовыйОтчет","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.АвансовыйОтчет.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)");
		СоставныеЧастиЗапроса.Вставить("ВозвратТоваровПоставщику","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	NULL,
		|	NULL,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)");
		СоставныеЧастиЗапроса.Вставить("ПеремещениеОС","ВЫБРАТЬ
		|	Док.ОсновноеСредство,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделениеПолучатель,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.СтоимостьБУ,
		|	&ВалютаРегл,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	NULL,
		|	NULL,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.ПеремещениеОС.ОС КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)");
		СоставныеЧастиЗапроса.Вставить("ПеремещениеТоваров","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделениеПолучатель,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	NULL,
		|	&ВалютаРегл,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.ЗаявкаМТС,
		|	Док.СчетУчетаБУ,
		|	Док.Ссылка.СкладОтправитель
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)");
		СоставныеЧастиЗапроса.Вставить("СписаниеТоваров","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	NULL,
		|	&ВалютаРегл,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.ЗаявкаМТС,
		|	Док.СчетУчетаБУ,
		|	Док.Ссылка.Склад
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.СписаниеТоваров.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)");
		СоставныеЧастиЗапроса.Вставить("ТребованиеНакладная","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	NULL,
		|	&ВалютаРегл,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.ЗаявкаМТС,
		|	Док.СчетБУ,
		|	Док.Ссылка.Склад
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.ТребованиеНакладная.Материалы КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)");
		Если СоставныеЧастиЗапроса.Свойство(Источник.Метаданные().Имя) Тогда
			СписокДокументовСРасчетомСуммыПоОстаткам = Новый Массив;
			СписокДокументовСРасчетомСуммыПоОстаткам.Добавить("ТребованиеНакладная");
			СписокДокументовСРасчетомСуммыПоОстаткам.Добавить("СписаниеТоваров");
			СписокДокументовСРасчетомСуммыПоОстаткам.Добавить("ПеремещениеТоваров");
			Запрос.Текст = УстановитьПсевдонимы(СоставныеЧастиЗапроса[Источник.Метаданные().Имя],ПсевдонимыПолей)+?(СписокДокументовСРасчетомСуммыПоОстаткам.Найти(Источник.Метаданные().Имя)=Неопределено,"
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Исполнение.Номенклатура,
			|	ВТ_Исполнение.Организация,
			|	ВТ_Исполнение.СтруктурноеПодразделение,
			|	ВТ_Исполнение.ПериодПланирования,
			|	ВТ_Исполнение.Количество,
			|	ВТ_Исполнение.Сумма,
			|	ВТ_Исполнение.ВалютаДокумента,
			|	ВТ_Исполнение.Подразделение,
			|	ВТ_Исполнение.Проект,
			|	ВТ_Исполнение.НоменклатураПлановая,
			|	ВТ_Исполнение.Характеристика,
			|	ВТ_Исполнение.ЕдиницаИзмерения,
			|	ВТ_Исполнение.Коэффициент,
			|	ВТ_Исполнение.Заявка
			|ИЗ
			|	ВТ_Исполнение КАК ВТ_Исполнение","	
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВТ_Исполнение.СчетУчетаБУ КАК Счет,
			|	ВТ_Исполнение.Склад
			|ПОМЕСТИТЬ ВТ_Счета
			|ИЗ
			|	ВТ_Исполнение КАК ВТ_Исполнение
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТиповойОстатки.Субконто2 КАК Номенклатура,
			|	ТиповойОстатки.Счет,
			|	ТиповойОстатки.Субконто1 КАК Склад,
			|	ВЫБОР
			|		КОГДА ТиповойОстатки.КоличествоОстатокДт > 0
			|			ТОГДА ТиповойОстатки.СуммаОстатокДт / ТиповойОстатки.КоличествоОстатокДт
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Цена
			|ПОМЕСТИТЬ ВТ_БУ
			|ИЗ
			|	РегистрБухгалтерии.Типовой.Остатки(
			|			&Граница,
			|			Счет В
			|				(ВЫБРАТЬ
			|					ВТ_Счета.Счет
			|				ИЗ
			|					ВТ_Счета),
			|			&Субконто,
			|			Субконто1 В
			|					(ВЫБРАТЬ
			|						ВТ_Счета.Склад
			|					ИЗ
			|						ВТ_Счета)
			|				И Организация = &Организация
			|				И СтруктурноеПодразделение = &СтруктурноеПодразделение) КАК ТиповойОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Исполнение.Номенклатура,
			|	ВТ_Исполнение.Организация,
			|	ВТ_Исполнение.СтруктурноеПодразделение,
			|	ВТ_Исполнение.ПериодПланирования,
			|	ВТ_Исполнение.Количество,
			|	ВЫБОР
			|		КОГДА ВТ_Исполнение.Склад ЕСТЬ NULL 
			|			ТОГДА ВТ_Исполнение.Сумма
			|		ИНАЧЕ ВТ_Исполнение.Количество * ЕСТЬNULL(ВТ_БУ.Цена, 0)
			|	КОНЕЦ КАК Сумма,
			|	ВТ_Исполнение.ВалютаДокумента,
			|	ВТ_Исполнение.Подразделение,
			|	ВТ_Исполнение.Проект,
			|	ВТ_Исполнение.НоменклатураПлановая,
			|	ВТ_Исполнение.Характеристика,
			|	ВТ_Исполнение.ЕдиницаИзмерения,
			|	ВТ_Исполнение.Коэффициент,
			|	ВТ_Исполнение.Заявка,
			|	ВТ_Исполнение.СчетУчетаБУ,
			|	ВТ_Исполнение.Склад
			|ИЗ
			|	ВТ_Исполнение КАК ВТ_Исполнение
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БУ КАК ВТ_БУ
			|		ПО ВТ_Исполнение.Номенклатура = ВТ_БУ.Номенклатура
			|			И ВТ_Исполнение.СчетУчетаБУ = ВТ_БУ.Счет
			|			И ВТ_Исполнение.Склад = ВТ_БУ.Склад");
			
		Иначе
			ФормироватьПоЧастям = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ФормироватьПоЧастям Тогда	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата КАК ПериодПланирования,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура КАК НоменклатураПлановая,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры КАК Характеристика,
		|	NULL КАК ЕдиницаИзмерения,
		|	NULL КАК Коэффициент,
		|	Док.ЗаявкаМТС КАК Заявка,
		|	NULL КАК СчетУчетаБУ,
		|	NULL КАК Склад
		|ПОМЕСТИТЬ ВТ_Исполнение
		|ИЗ
		|	Документ.ПоступлениеИзПереработки.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.НематериальныйАктив,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	NULL,
		|	NULL,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПоступлениеНМА.НМА КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.НематериальныйАктив = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.ОсновноеСредство,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	NULL,
		|	NULL,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ОС КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	NULL,
		|	NULL,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.АвансовыйОтчет.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	NULL,
		|	NULL,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.ОсновноеСредство,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделениеПолучатель,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.СтоимостьБУ,
		|	&ВалютаРегл,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	NULL,
		|	NULL,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПеремещениеОС.ОС КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделениеПолучатель,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	NULL,
		|	&ВалютаРегл,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.ЗаявкаМТС,
		|	Док.СчетУчетаБУ,
		|	Док.Ссылка.СкладОтправитель
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	NULL,
		|	&ВалютаРегл,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.ЗаявкаМТС,
		|	Док.СчетУчетаБУ,
		|	Док.Ссылка.Склад
		|ИЗ
		|	Документ.СписаниеТоваров.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	NULL,
		|	&ВалютаРегл,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.ЗаявкаМТС,
		|	Док.СчетБУ,
		|	Док.Ссылка.Склад
		|ИЗ
		|	Документ.ТребованиеНакладная.Материалы КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.ЗаявкаМТС <> ЗНАЧЕНИЕ(Документ.узп_ЗаявкаМТС.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_Исполнение.СчетУчетаБУ КАК Счет,
		|	ВТ_Исполнение.Склад
		|ПОМЕСТИТЬ ВТ_Счета
		|ИЗ
		|	ВТ_Исполнение КАК ВТ_Исполнение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТиповойОстатки.Субконто2 КАК Номенклатура,
		|	ТиповойОстатки.Счет,
		|	ТиповойОстатки.Субконто1 КАК Склад,
		|	ВЫБОР
		|		КОГДА ТиповойОстатки.КоличествоОстатокДт > 0
		|			ТОГДА ТиповойОстатки.СуммаОстатокДт / ТиповойОстатки.КоличествоОстатокДт
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Цена
		|ПОМЕСТИТЬ ВТ_БУ
		|ИЗ
		|	РегистрБухгалтерии.Типовой.Остатки(
		|			&Граница,
		|			Счет В
		|				(ВЫБРАТЬ
		|					ВТ_Счета.Счет
		|				ИЗ
		|					ВТ_Счета),
		|			&Субконто,
		|			Субконто1 В
		|					(ВЫБРАТЬ
		|						ВТ_Счета.Склад
		|					ИЗ
		|						ВТ_Счета)
		|				И Организация = &Организация
		|				И СтруктурноеПодразделение = &СтруктурноеПодразделение) КАК ТиповойОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Исполнение.Номенклатура,
		|	ВТ_Исполнение.Организация,
		|	ВТ_Исполнение.СтруктурноеПодразделение,
		|	ВТ_Исполнение.ПериодПланирования,
		|	ВТ_Исполнение.Количество,
		|	ВЫБОР
		|		КОГДА ВТ_Исполнение.Склад ЕСТЬ NULL 
		|			ТОГДА ВТ_Исполнение.Сумма
		|		ИНАЧЕ ВТ_Исполнение.Количество * ЕСТЬNULL(ВТ_БУ.Цена, 0)
		|	КОНЕЦ КАК Сумма,
		|	ВТ_Исполнение.ВалютаДокумента,
		|	ВТ_Исполнение.Подразделение,
		|	ВТ_Исполнение.Проект,
		|	ВТ_Исполнение.НоменклатураПлановая,
		|	ВТ_Исполнение.Характеристика,
		|	ВТ_Исполнение.ЕдиницаИзмерения,
		|	ВТ_Исполнение.Коэффициент,
		|	ВТ_Исполнение.Заявка,
		|	ВТ_Исполнение.СчетУчетаБУ,
		|	ВТ_Исполнение.Склад
		|ИЗ
		|	ВТ_Исполнение КАК ВТ_Исполнение
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БУ КАК ВТ_БУ
		|		ПО ВТ_Исполнение.Номенклатура = ВТ_БУ.Номенклатура
		|			И ВТ_Исполнение.СчетУчетаБУ = ВТ_БУ.Счет
		|			И ВТ_Исполнение.Склад = ВТ_БУ.Склад";
	КонецЕсли;
	Субконто = Новый Массив;
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Склады);
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура);
	Запрос.УстановитьПараметр("ВалютаРегл", фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"));
	Запрос.УстановитьПараметр("Дата", 	Источник.Дата);
	Запрос.УстановитьПараметр("Ссылка",	Источник.Ссылка);
	Запрос.УстановитьПараметр("Организация", 	Источник.Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", 	?(Источник.Метаданные().Реквизиты.Найти("СтруктурноеПодразделение")<>Неопределено,Источник.СтруктурноеПодразделение,Источник.СтруктурноеПодразделениеПолучатель));
	Запрос.УстановитьПараметр("Граница", 	Новый Граница(Источник.Дата,ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Субконто", 	Субконто);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	НаборЗаписей = Источник.Движения.узп_ЗаявкиМТС;
	НаборЗаписей.Записывать = Истина;
	//НаборЗаписей = РегистрыНакопления.узп_ЗаявкиМТС.СоздатьНаборЗаписей();
	//НаборЗаписей.Отбор.Регистратор.Установить(Источник.Ссылка);
	//НаборЗаписей.Прочитать();
	//НаборЗаписей.Очистить();
	ВалютаУчетаЗакупок = ?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПланированиеЗакупокВВалютеРеглУчета"),фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"),фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета"));
	ВалютаДокумента = ?(Источник.Метаданные().Реквизиты.Найти("ВалютаДокумента")<>Неопределено,Источник.ВалютаДокумента,фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"));
	ВалютаУпр = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
	
	Если ВалютаДокумента<>ВалютаУпр Тогда
		КурсУпр = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаУпр,Источник.Дата);
	КонецЕсли;
	Если ВалютаДокумента<>ВалютаУчетаЗакупок Тогда
		КурсУчета = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаУчетаЗакупок,Источник.Дата);
	КонецЕсли;
	Если ВалютаДокумента<>ВалютаУпр ИЛИ ВалютаДокумента<>ВалютаУчетаЗакупок Тогда
		КурсДокумента = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаДокумента,Источник.Дата);
	КонецЕсли;
	
	МассивДокументыЗакупа = Новый Массив;
	МассивДокументыЗакупа.Добавить("АвансовыйОтчет");
	МассивДокументыЗакупа.Добавить("ПоступлениеИзПереработки");
	МассивДокументыЗакупа.Добавить("ПоступлениеНМА");
	МассивДокументыЗакупа.Добавить("ПоступлениеТоваровУслуг");
	МассивДокументыЗакупа.Добавить("ВозвратТоваровПоставщику");
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Движение,ВыборкаДетальныеЗаписи);
		Движение.Период = Источник.Дата;
		Движение.ПриходРасход = ?(МассивДокументыЗакупа.Найти(Источник.Метаданные().Имя)<>Неопределено,Перечисления.узп_ВидыОборотовПоЗаказам.Закуплено,Перечисления.узп_ВидыОборотовПоЗаказам.ВыданоСписано);
		Если ВалютаДокумента<>ВалютаУпр Тогда
			Движение.СуммаУпр = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,ВалютаДокумента,ВалютаУпр,КурсДокумента.Курс,КурсУпр.Курс,КурсДокумента.Кратность,КурсУпр.Кратность);
		Иначе
			Движение.СуммаУпр = Движение.Сумма;
		КонецЕсли;
		Если ВалютаДокумента<>ВалютаУчетаЗакупок Тогда
			Движение.Сумма = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,ВалютаДокумента,ВалютаУчетаЗакупок,КурсДокумента.Курс,КурсУчета.Курс,КурсДокумента.Кратность,КурсУчета.Кратность);
		КонецЕсли;
		Если ЗначениеЗаполнено(Движение.ЕдиницаИзмерения) Тогда
			Движение.КоличествоБазовое = Движение.Количество * ВыборкаДетальныеЗаписи.Коэффициент;
		Иначе
			Движение.КоличествоБазовое = Движение.Количество;
		КонецЕсли;
		Если Движение.КоличествоБазовое = 0 Тогда
			Движение.КоличествоБазовое = Движение.Количество;
		КонецЕсли;
	КонецЦикла;
	Попытка
		НаборЗаписей.Записать();
	Исключение
		Сообщить("Не удалось зарегистрировать исполнение заявок МТС документом "+Строка(Источник.Ссылка)+": 
		|	"+ОписаниеОшибки(),СтатусСообщения.Важное);
	КонецПопытки;
КонецПроцедуры

Процедура УчетИсполненияПланаЗакупокОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	Режим = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("УчетИсполненияПланаЗакупок");
	Если Режим = Ложь Тогда
		НаборЗаписей = РегистрыНакопления.узп_ПланыЗакупок.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Источник.Ссылка);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	ФормироватьПоЧастям = Истина;
	ПсевдонимыПолей = Новый Массив;
	ПсевдонимыПолей.Добавить("Номенклатура");
	ПсевдонимыПолей.Добавить("Организация");
	ПсевдонимыПолей.Добавить("СтруктурноеПодразделение");
	ПсевдонимыПолей.Добавить("Контрагент");
	ПсевдонимыПолей.Добавить("ПериодПланирования");
	ПсевдонимыПолей.Добавить("Количество");
	ПсевдонимыПолей.Добавить("Сумма");
	ПсевдонимыПолей.Добавить("ВалютаДокумента");
	ПсевдонимыПолей.Добавить("Подразделение");
	ПсевдонимыПолей.Добавить("Проект");
	ПсевдонимыПолей.Добавить("НоменклатураПлановая");
	ПсевдонимыПолей.Добавить("Характеристика");
	ПсевдонимыПолей.Добавить("Цена");
	ПсевдонимыПолей.Добавить("Заявка");
	ПсевдонимыПолей.Добавить("ЕдиницаИзмерения");
	ПсевдонимыПолей.Добавить("Коэффициент");
	
	Если ФормироватьПоЧастям Тогда
		СоставныеЧастиЗапроса = Новый Структура;
		СоставныеЧастиЗапроса.Вставить("ПоступлениеИзПереработки","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата КАК ПериодПланирования,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура КАК НоменклатураПлановая,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры КАК Характеристика,
		|	Док.Цена,
		|	Док.ЗаявкаМТС,
		|	NULL КАК ЕдиницаИзмерения,
		|	NULL КАК Коэффициент
		|ИЗ
		|	Документ.ПоступлениеИзПереработки.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка");
		СоставныеЧастиЗапроса.Вставить("ПоступлениеНМА","ВЫБРАТЬ
		|	Док.НематериальныйАктив,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПоступлениеНМА.НМА КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.НематериальныйАктив = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка");
		СоставныеЧастиЗапроса.Вставить("ПоступлениеТоваровУслуг","ВЫБРАТЬ
		|	Док.ОсновноеСредство,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ОС КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЗаявкаМТС,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка");
		СоставныеЧастиЗапроса.Вставить("АвансовыйОтчет","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Поставщик,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЗаявкаМТС,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент
		|ИЗ
		|	Документ.АвансовыйОтчет.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка");
		СоставныеЧастиЗапроса.Вставить("ВозвратТоваровПоставщику","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЗаявкаМТС,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.ОсновноеСредство,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-1,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.ОС КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка");
		Если СоставныеЧастиЗапроса.Свойство(Источник.Метаданные().Имя) Тогда
			Запрос.Текст = УстановитьПсевдонимы(СоставныеЧастиЗапроса[Источник.Метаданные().Имя],ПсевдонимыПолей);
		Иначе
			ФормироватьПоЧастям = Ложь;
		КонецЕсли;
	КонецЕсли;
	Если Не ФормироватьПоЧастям Тогда	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата КАК ПериодПланирования,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура КАК НоменклатураПлановая,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры КАК Характеристика,
		|	Док.Цена,
		|	Док.ЗаявкаМТС КАК Заявка,
		|	NULL КАК ЕдиницаИзмерения,
		|	NULL КАК Коэффициент
		|ИЗ
		|	Документ.ПоступлениеИзПереработки.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.НематериальныйАктив,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПоступлениеНМА.НМА КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.НематериальныйАктив = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.ОсновноеСредство,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ОС КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЗаявкаМТС,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Поставщик,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЗаявкаМТС,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент
		|ИЗ
		|	Документ.АвансовыйОтчет.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЗаявкаМТС,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.ОсновноеСредство,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-1,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.ЗаявкаМТС,
		|	NULL,
		|	NULL
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.ОС КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка";
	КонецЕсли;
	Запрос.УстановитьПараметр("Дата", 	Источник.Дата);
	Запрос.УстановитьПараметр("Ссылка",	Источник.Ссылка);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	НаборЗаписей = Источник.Движения.узп_ПланыЗакупок;
	//НаборЗаписей = РегистрыНакопления.узп_ПланыЗакупок.СоздатьНаборЗаписей();
	//НаборЗаписей.Отбор.Регистратор.Установить(Источник.Ссылка);
	//НаборЗаписей.Прочитать();
	//НаборЗаписей.Очистить();
	ВалютаУчетаЗакупок = ?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПланированиеЗакупокВВалютеРеглУчета"),фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"),фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета"));
	ВалютаДокумента = Источник.ВалютаДокумента;
	ВалютаУпр = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
	
	Если ВалютаДокумента<>ВалютаУпр Тогда
		КурсУпр = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаУпр,Источник.Дата);
	КонецЕсли;
	Если ВалютаДокумента<>ВалютаУчетаЗакупок Тогда
		КурсУчета = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаУчетаЗакупок,Источник.Дата);
	КонецЕсли;
	Если ВалютаДокумента<>ВалютаУпр ИЛИ ВалютаДокумента<>ВалютаУчетаЗакупок Тогда
		КурсДокумента = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаДокумента,Источник.Дата);
	КонецЕсли;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Движение,ВыборкаДетальныеЗаписи);
		Движение.Период = Источник.Дата;
		Если ВалютаДокумента<>ВалютаУпр Тогда
			Движение.СуммаУпр = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,ВалютаДокумента,ВалютаУпр,КурсДокумента.Курс,КурсУпр.Курс,КурсДокумента.Кратность,КурсУпр.Кратность);
		Иначе
			Движение.СуммаУпр = Движение.Сумма;
		КонецЕсли;
		Если ВалютаДокумента<>ВалютаУчетаЗакупок Тогда
			Движение.Сумма = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,ВалютаДокумента,ВалютаУчетаЗакупок,КурсДокумента.Курс,КурсУчета.Курс,КурсДокумента.Кратность,КурсУчета.Кратность);
		КонецЕсли;
		Если ЗначениеЗаполнено(Движение.ЕдиницаИзмерения) Тогда
			Движение.КоличествоБазовое = Движение.Количество * ВыборкаДетальныеЗаписи.Коэффициент;
		Иначе
			Движение.КоличествоБазовое = Движение.Количество;
		КонецЕсли;
		Если Движение.КоличествоБазовое = 0 Тогда
			Движение.КоличествоБазовое = Движение.Количество;
		КонецЕсли;
		Движение.ОбъектРемонта = Движение.Заявка.ОбъектРемонта;
	КонецЦикла;
	Попытка
		НаборЗаписей.Записать();
	Исключение
		Сообщить("Не удалось зарегистрировать исполнение плана закупок документом "+Строка(Источник.Ссылка)+": 
		|	"+ОписаниеОшибки(),СтатусСообщения.Важное);
	КонецПопытки;
	
КонецПроцедуры

Процедура УчетИсполненияЗаказовПоставщикамОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	Запрос = Новый Запрос;
	
	ФормироватьПоЧастям = Истина;
	ПсевдонимыПолей = Новый Массив;
	ПсевдонимыПолей.Добавить("Номенклатура");
	ПсевдонимыПолей.Добавить("Организация");
	ПсевдонимыПолей.Добавить("СтруктурноеПодразделение");
	ПсевдонимыПолей.Добавить("Контрагент");
	ПсевдонимыПолей.Добавить("СрокПоставки");
	ПсевдонимыПолей.Добавить("Количество");
	ПсевдонимыПолей.Добавить("Сумма");
	ПсевдонимыПолей.Добавить("ВалютаДокумента");
	ПсевдонимыПолей.Добавить("Подразделение");
	ПсевдонимыПолей.Добавить("Проект");
	ПсевдонимыПолей.Добавить("НоменклатураПлановая");
	ПсевдонимыПолей.Добавить("Характеристика");
	ПсевдонимыПолей.Добавить("Цена");
	ПсевдонимыПолей.Добавить("ЕдиницаИзмерения");
	ПсевдонимыПолей.Добавить("Коэффициент");
	ПсевдонимыПолей.Добавить("Заказ");
	ПсевдонимыПолей.Добавить("Заявка");
	ПсевдонимыПолей.Добавить("СтавкаНДС");
	
	Если ФормироватьПоЧастям Тогда
		СоставныеЧастиЗапроса = Новый Структура;
		СоставныеЧастиЗапроса.Вставить("ВозвратТоваровПоставщику","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	NULL,
		|	NULL,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.ОсновноеСредство,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-1,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	NULL,
		|	NULL,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.ОС КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)");
		СоставныеЧастиЗапроса.Вставить("АвансовыйОтчет","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Поставщик,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.АвансовыйОтчет.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)");
		СоставныеЧастиЗапроса.Вставить("ПоступлениеТоваровУслуг","ВЫБРАТЬ
		|	Док.ОсновноеСредство,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма,
		|	NULL,
		|	NULL,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ОС КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	NULL,
		|	NULL,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)");
		СоставныеЧастиЗапроса.Вставить("ПоступлениеНМА","ВЫБРАТЬ
		|	Док.НематериальныйАктив,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма,
		|	NULL,
		|	NULL,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ПоступлениеНМА.НМА КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.НематериальныйАктив = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)");
		СоставныеЧастиЗапроса.Вставить("ПоступлениеИзПереработки","ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата КАК СрокПоставки,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура КАК НоменклатураПлановая,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры КАК Характеристика,
		|	Док.Цена,
		|	NULL КАК ЕдиницаИзмерения,
		|	NULL КАК Коэффициент,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ПоступлениеИзПереработки.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)");
		Если СоставныеЧастиЗапроса.Свойство(Источник.Метаданные().Имя) Тогда
			Запрос.Текст = УстановитьПсевдонимы(СоставныеЧастиЗапроса[Источник.Метаданные().Имя],ПсевдонимыПолей);
		Иначе
			ФормироватьПоЧастям = Ложь;
		КонецЕсли;
	КонецЕсли;	
	Если Не ФормироватьПоЧастям Тогда	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата КАК СрокПоставки,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура КАК НоменклатураПлановая,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры КАК Характеристика,
		|	Док.Цена,
		|	NULL КАК ЕдиницаИзмерения,
		|	NULL КАК Коэффициент,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС КАК Заявка,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ПоступлениеИзПереработки.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.НематериальныйАктив,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма,
		|	NULL,
		|	NULL,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ПоступлениеНМА.НМА КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.НематериальныйАктив = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.ОсновноеСредство,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	1,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма,
		|	NULL,
		|	NULL,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ОС КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	NULL,
		|	NULL,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Поставщик,
		|	Док.Ссылка.Дата,
		|	Док.Количество,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.АвансовыйОтчет.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	Док.ЕдиницаИзмерения,
		|	Док.Коэффициент,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.Номенклатура,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-Док.Количество,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ПлановаяНоменклатура,
		|	СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.ХарактеристикаПлановойНоменклатуры,
		|	Док.Цена,
		|	NULL,
		|	NULL,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Услуги КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних
		|		ПО Док.Номенклатура = СоответствиеПлановойИРегламентированнойНоменклатурыСрезПоследних.РегламентированнаяНоменклатура
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Док.ОсновноеСредство,
		|	Док.Ссылка.Организация,
		|	Док.Ссылка.СтруктурноеПодразделение,
		|	Док.Ссылка.Контрагент,
		|	Док.Ссылка.Дата,
		|	-1,
		|	-1 * (Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ),
		|	Док.Ссылка.ВалютаДокумента,
		|	Док.Подразделение,
		|	Док.Проект,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ПлановаяНоменклатура,
		|	СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ХарактеристикаПлановойНоменклатуры,
		|	Док.Сумма + ВЫБОР
		|		КОГДА Док.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА Док.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ Док.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	NULL,
		|	NULL,
		|	Док.Заказ,
		|	Док.ЗаявкаМТС,
		|	Док.СтавкаНДС
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.ОС КАК Док
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеВнеоборотныхАктивовПлановойНоменклатуре КАК СоответствиеВнеоборотныхАктивовПлановойНоменклатуре
		|		ПО Док.ОсновноеСредство = СоответствиеВнеоборотныхАктивовПлановойНоменклатуре.ВнеоборотныйАктив
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И Док.Заказ <> ЗНАЧЕНИЕ(Документ.узп_ЗаказПоставщику.ПустаяСсылка)";
	КонецЕсли;
	Запрос.УстановитьПараметр("Дата", 	Источник.Дата);
	Запрос.УстановитьПараметр("Ссылка",	Источник.Ссылка);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	НаборЗаписей = Источник.Движения.узп_ЗаказыПоставщикам;
	//   НаборЗаписей = РегистрыНакопления.узп_ЗаказыПоставщикам.СоздатьНаборЗаписей();
	//НаборЗаписей.Отбор.Регистратор.Установить(Источник.Ссылка);
	//НаборЗаписей.Прочитать();
	//НаборЗаписей.Очистить();
	ВалютаДокумента = Источник.ВалютаДокумента;
	ВалютаУпр = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
	
	Если ВалютаДокумента<>ВалютаУпр Тогда
		КурсУпр = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаУпр,Источник.Дата);
	КонецЕсли;
	Если ВалютаДокумента<>ВалютаУпр Тогда
		КурсДокумента = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаДокумента,Источник.Дата);
	КонецЕсли;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ВалютаУчетаЗакупок = ВыборкаДетальныеЗаписи.Заказ.ВалютаДокумента;
		Если ВалютаДокумента<>ВалютаУчетаЗакупок Тогда
			КурсУчета = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаУчетаЗакупок,Источник.Дата);
		КонецЕсли;
		Движение = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Движение,ВыборкаДетальныеЗаписи);
		Движение.Период = Источник.Дата;
		Движение.ПриходРасход = Перечисления.узп_ВидыОборотовПоЗаказам.Исполнено;
		Если ВалютаДокумента<>ВалютаУпр Тогда
			Движение.СуммаУпр = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,ВалютаДокумента,ВалютаУпр,КурсДокумента.Курс,КурсУпр.Курс,КурсДокумента.Кратность,КурсУпр.Кратность);
		Иначе
			Движение.СуммаУпр = Движение.Сумма;
		КонецЕсли;
		Если ВалютаДокумента<>ВалютаУчетаЗакупок Тогда
			Движение.Сумма = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,ВалютаДокумента,ВалютаУчетаЗакупок,КурсДокумента.Курс,КурсУчета.Курс,КурсДокумента.Кратность,КурсУчета.Кратность);
		КонецЕсли;
		Если ЗначениеЗаполнено(Движение.ЕдиницаИзмерения) Тогда
			Движение.КоличествоБазовое = Движение.Количество * ВыборкаДетальныеЗаписи.Коэффициент;
		Иначе
			Движение.КоличествоБазовое = Движение.Количество;
		КонецЕсли;
		Если Движение.КоличествоБазовое = 0 Тогда
			Движение.КоличествоБазовое = Движение.Количество;
		КонецЕсли;
	КонецЦикла;
	Попытка
		НаборЗаписей.Записать();
	Исключение
		Сообщить("Не удалось зарегистрировать исполнение заказов поставщикам документом "+Строка(Источник.Ссылка)+": 
		|	"+ОписаниеОшибки(),СтатусСообщения.Важное);
	КонецПопытки;
КонецПроцедуры

Процедура РегистрацияЦенПоставщиковОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("АвтоматическаяРегистрацияЦенПоставщиков")=Ложь Тогда
		Возврат;
	КонецЕсли;
	Контрагент = Источник.Контрагент;
	Регистратор = Источник.Ссылка;
	ТипЦен = Источник.ТипЦен;
	Если НЕ ЗначениеЗаполнено(ТипЦен) Тогда
		Возврат;
	КонецЕсли;
	ЦеныПоставщика = ПолучитьСписокЦенПоставщика(Регистратор);
	НаборЗаписей = РегистрыСведений.узп_ПереченьЦенПоставщиков.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	Для Каждого ТекСтрокаТовары Из ЦеныПоставщика Цикл
		НоваяСтрока = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрокаТовары);
		НоваяСтрока.Период 		= Источник.Дата;
		НоваяСтрока.Контрагент 	= Контрагент;
		НоваяСтрока.ТипЦен 		= ТипЦен;
	КонецЦикла;
	Попытка
		НаборЗаписей.Записать();
	Исключение
		Сообщить("Не удалось зарегистрировать цены поставщика документом "+Строка(Источник.Ссылка)+": 
		|	"+ОписаниеОшибки(),СтатусСообщения.Важное);
	КонецПопытки;
	
КонецПроцедуры


Функция УстановитьПсевдонимы(Знач ТекстЗапроса,НаборПсевдонимов)
	ПозицияЗапятой = Найти(ТекстЗапроса,",");
	УстановленоПсевдонимов = 0;
	Текст = "";
	Пока ПозицияЗапятой<>0 И УстановленоПсевдонимов<НаборПсевдонимов.Количество() Цикл
		ТекущийОтрезок = Лев(ТекстЗапроса,ПозицияЗапятой-1);
		ТекущийПсевдоним = Найти(ТекущийОтрезок," КАК ");
		Если ТекущийПсевдоним<>0 Тогда
			ТекущийОтрезок = Лев(ТекущийОтрезок,ТекущийПсевдоним-1)
		КонецЕсли;
		ТекущийОтрезок = ТекущийОтрезок + " КАК "+НаборПсевдонимов.Получить(УстановленоПсевдонимов);
		УстановленоПсевдонимов = УстановленоПсевдонимов + 1;
		Текст = Текст + ТекущийОтрезок + ",";
		ТекстЗапроса = Сред(ТекстЗапроса,ПозицияЗапятой+1);
		ПозицияЗапятой = Найти(ТекстЗапроса,",");
		СпецПоля = Новый Массив;
		СпецПоля.Добавить("ПОМЕСТИТЬ");
		СпецПоля.Добавить("ИЗ");
		Для Каждого СпецПоле Из СпецПоля Цикл
			ПозицияСпец = Найти(ТекстЗапроса,Символы.ПС+СпецПоле+" ");
			Если ПозицияСпец=0 Тогда
				ПозицияСпец = Найти(ТекстЗапроса,Символы.ПС+СпецПоле+Символы.ПС);
			КонецЕсли;
			Если ПозицияСпец<>0 И (ПозицияСпец<ПозицияЗапятой ИЛИ ПозицияЗапятой=0) Тогда
				ТекущийОтрезок = Лев(ТекстЗапроса,ПозицияСпец-1);
				ТекущийПсевдоним = Найти(ТекущийОтрезок," КАК ");
				Если ТекущийПсевдоним<>0 Тогда
					ТекущийОтрезок = Лев(ТекущийОтрезок,ТекущийПсевдоним-1)
				КонецЕсли;
				ТекущийОтрезок = ТекущийОтрезок + " КАК "+НаборПсевдонимов.Получить(УстановленоПсевдонимов);
				УстановленоПсевдонимов = УстановленоПсевдонимов + 1;
				Текст = Текст + ТекущийОтрезок;
				ТекстЗапроса = Сред(ТекстЗапроса,ПозицияСпец);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Возврат Текст+ТекстЗапроса;
КонецФункции

Процедура УстановитьИконкуТипаНоменклатуры(Объект, ТЧ) Экспорт
	
	Для Каждого СтрокаТЧ Из Объект[ТЧ] Цикл
		Если ТипЗнч(СтрокаТЧ.номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда 
			СтрокаТЧ.ТипНоменклатуры = 0;
		ИначеЕсли ТипЗнч(СтрокаТЧ.номенклатура) = Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда 
			СтрокаТЧ.ТипНоменклатуры = 1;
		Иначе
			СтрокаТЧ.ТипНоменклатуры = 2;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СОБЫТИЙ ОБЫЧНЫХ ФОРМ

#Если Клиент Тогда

Процедура ОбработатьВыборЗаказа(Элемент,ДокументОбъект,СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда 
		СтруктураОтбора = Новый Структура("Организация,СтруктурноеПодразделение",ДокументОбъект.Организация,ДокументОбъект.СтруктурноеПодразделениеПолучатель);
	Иначе
		СтруктураОтбора = Новый Структура("Организация,СтруктурноеПодразделение",ДокументОбъект.Организация,ДокументОбъект.СтруктурноеПодразделение);
	КонецЕсли;
	
	Если ТипЗнч(Элемент.Значение)=Тип("ДокументСсылка.узп_ЗаказПокупателя") Тогда
		ИмяДокумента = "узп_ЗаказПокупателя";
	ИначеЕсли ТипЗнч(Элемент.Значение)=Тип("ДокументСсылка.узп_ЗаказПоставщику") Тогда
		ИмяДокумента = "узп_ЗаказПоставщику";
	Иначе
		ИмяДокумента = "узп_ЗаявкаМТС";
	КонецЕсли;
	Если ИмяДокумента <> "узп_ЗаявкаМТС" И ДокументОбъект.Метаданные().Реквизиты.Найти("Контрагент")<>Неопределено Тогда
		СтруктураОтбора.Вставить("Контрагент",ДокументОбъект.Контрагент);
	КонецЕсли;
	ОткрытьФорму("Документ."+ИмяДокумента+".ФормаВыбора",Новый Структура("Отбор",СтруктураОтбора),Элемент);
	
КонецПроцедуры

#КонецЕсли

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОВЕДЕНИЕ ДОКУМЕНТОВ

//Процедура ЗарегистрироватьДвиженияЗаказыПокупателей(Отказ, РежимПроведения)
Процедура ЗарегистрироватьДвиженияЗаказыПокупателей(Реквизиты, Таблица, Движения, Отказ) Экспорт
	ВалютаДокумента 		 = Реквизиты.ВалютаДокумента;
	СрокПоставки 			 = Реквизиты.СрокПоставки;
	Дата 					 = Реквизиты.Дата;
	Ссылка 					 = Реквизиты.Ссылка;
	Контрагент 				 = Реквизиты.Контрагент;
	Организация				 = Реквизиты.Организация;
	СтруктурноеПодразделение = Реквизиты.СтруктурноеПодразделение;
	УчитыватьНДС 			 = Реквизиты.УчитыватьНДС;
	СуммаВключаетНДС 		 = Реквизиты.СуммаВключаетНДС;
	Подразделение 			 = Реквизиты.Подразделение;
	
	
	мВалютаУпрУчета 			= фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
	Движения.узп_ЗаказыПокупателей.Записывать=Истина;
	КурсыДокумента 				= Новый Соответствие;
	КурсДокумента 				= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаДокумента,СрокПоставки);
	КурсыДокумента.Вставить(СрокПоставки,КурсДокумента);
	КурсыУпр 					= Новый Соответствие;
	КурсУпр 					= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(мВалютаУпрУчета,СрокПоставки);
	КурсыУпр.Вставить(СрокПоставки,КурсУпр);
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		// планы закупок
		 Движение 				= Движения.узп_ЗаказыПокупателей.Добавить();
		 ЗаполнитьЗначенияСвойств(Движение,СтрокаТаблицы);
		 Движение.ПриходРасход 	= Перечисления.узп_ВидыОборотовПоЗаказам.Заказано;
		 Движение.Период 		= Дата;
		 Движение.Заказ 		= Ссылка;
		 Движение.Организация 	= Организация;
		 Движение.СтруктурноеПодразделение = СтруктурноеПодразделение;
		 Движение.Контрагент 	= Контрагент;
		 Движение.Количество 	= ?(Движение.Количество=0,1,Движение.Количество);
		 Если УчитыватьНДС И НЕ СуммаВключаетНДС Тогда
			 Движение.Сумма 	= Движение.Сумма + СтрокаТаблицы.СуммаНДС;
		 КонецЕсли;
		 Если ТипЗнч(СтрокаТаблицы.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
			Движение.НоменклатураПлановая = СтрокаТаблицы.Номенклатура; 
		 КонецЕсли;
		 // расчет базового количества
		 Если ЗначениеЗаполнено(Движение.ЕдиницаИзмерения) Тогда
			Движение.КоличествоБазовое = Движение.Количество*СтрокаТаблицы.Коэффициент;
		Иначе
			Движение.КоличествоБазовое = Движение.Количество;
		КонецЕсли;
		Если Движение.КоличествоБазовое = 0 Тогда
			Движение.КоличествоБазовое = Движение.Количество;
		КонецЕсли;
		 // расчет прочих сумм
		 КурсДокумента 			= КурсыДокумента.Получить(Движение.СрокПоставки);
		 Если КурсДокумента = Неопределено Тогда
			КурсДокумента 		= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаДокумента,Движение.СрокПоставки);
			КурсыДокумента.Вставить(Движение.СрокПоставки,КурсДокумента);
		 КонецЕсли;
		 КурсУпр 				= КурсыУпр.Получить(Движение.СрокПоставки);
		 Если КурсУпр = Неопределено Тогда
			КурсУпр 			= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(мВалютаУпрУчета,Движение.СрокПоставки);
			КурсыУпр.Вставить(Движение.СрокПоставки,КурсУпр);
		 КонецЕсли;
		 Если мВалютаУпрУчета 	= ВалютаДокумента Тогда
			Движение.СуммаУпр 	= Движение.Сумма; 
		 Иначе
			Движение.СуммаУпр 	= фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,ВалютаДокумента,мВалютаУпрУчета,КурсДокумента.Курс,КурсУпр.Курс,КурсДокумента.Кратность,КурсУпр.Кратность); 
		КонецЕсли;
         Движение.Подразделение = Подразделение;
	КонецЦикла;
КонецПроцедуры

//Процедура ЗарегистрироватьДвиженияЗаказыПоставщику(Отказ, РежимПроведения)
Процедура ЗарегистрироватьДвиженияЗаказыПоставщику(Реквизиты, Таблица, Движения, Отказ) Экспорт
	ВалютаДокумента 		 = Реквизиты.ВалютаДокумента;
	СрокПоставки 			 = Реквизиты.СрокПоставки;
	Дата 					 = Реквизиты.Дата;
	Ссылка 					 = Реквизиты.Ссылка;
	Контрагент 				 = Реквизиты.Контрагент;
	Организация				 = Реквизиты.Организация;
	СтруктурноеПодразделение = Реквизиты.СтруктурноеПодразделение;
	УчитыватьНДС 			 = Реквизиты.УчитыватьНДС;
	СуммаВключаетНДС 		 = Реквизиты.СуммаВключаетНДС;
	Подразделение 			 = Реквизиты.Подразделение;
	
	
	Движения.узп_ЗаказыПоставщикам.Записывать=Истина;
	мВалютаУпрУчета 		 	= фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
	ПризнакПроекта			 	= фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("узп_ВестиУчетЗакупокПоПроектам");
	КурсыДокумента			 	= Новый Соответствие;
	КурсДокумента			 	= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаДокумента,СрокПоставки);
	КурсыДокумента.Вставить(СрокПоставки,КурсДокумента);
	КурсыУпр				 	= Новый Соответствие;
	КурсУпр					 	= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(мВалютаУпрУчета,СрокПоставки);
	КурсыУпр.Вставить(СрокПоставки,КурсУпр);
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		// планы закупок
		 Движение			 	= Движения.узп_ЗаказыПоставщикам.Добавить();
		 ЗаполнитьЗначенияСвойств(Движение,СтрокаТаблицы);
		 Движение.Период	 	= Дата;
		 Движение.ПриходРасход 	= Перечисления.узп_ВидыОборотовПоЗаказам.Заказано;
		 Движение.Заказ		 	= Ссылка;
		 Движение.Организация 	= Организация;
		 Движение.СтруктурноеПодразделение = СтруктурноеПодразделение;
		 Движение.Контрагент	= Контрагент;
		 Движение.Заявка 		= СтрокаТаблицы.ЗаявкаМТС;
		 Если УчитыватьНДС И НЕ СуммаВключаетНДС Тогда
			 Движение.Сумма 	= Движение.Сумма + СтрокаТаблицы.СуммаНДС;
		 КонецЕсли;
		 Если ТипЗнч(СтрокаТаблицы.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
			Движение.НоменклатураПлановая = СтрокаТаблицы.Номенклатура; 
		 КонецЕсли;
		 // расчет базового количества
		 Если ЗначениеЗаполнено(Движение.ЕдиницаИзмерения) Тогда
			Движение.КоличествоБазовое = Движение.Количество*СтрокаТаблицы.Коэффициент; 
		 Иначе 
			Движение.КоличествоБазовое = Движение.Количество;
		КонецЕсли;
		Если Движение.КоличествоБазовое = 0 Тогда
			Движение.КоличествоБазовое = Движение.Количество;
		КонецЕсли;
		 // расчет прочих сумм
		 КурсДокумента 			= КурсыДокумента.Получить(Движение.СрокПоставки);
		 Если КурсДокумента = Неопределено Тогда
			КурсДокумента 		= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаДокумента,Движение.СрокПоставки);
			КурсыДокумента.Вставить(Движение.СрокПоставки,КурсДокумента);
		 КонецЕсли;
		 КурсУпр 				= КурсыУпр.Получить(Движение.СрокПоставки);
		 Если КурсУпр = Неопределено Тогда
			КурсУпр 			= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(мВалютаУпрУчета,Движение.СрокПоставки);
			КурсыУпр.Вставить(Движение.СрокПоставки,КурсУпр);
		 КонецЕсли;
		 Если мВалютаУпрУчета 	= ВалютаДокумента Тогда
			Движение.СуммаУпр 	= Движение.Сумма; 
		 Иначе
			Движение.СуммаУпр 	= фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,ВалютаДокумента,мВалютаУпрУчета,КурсДокумента.Курс,КурсУпр.Курс,КурсДокумента.Кратность,КурсУпр.Кратность); 
		КонецЕсли;
		Если ПризнакПроекта ТОгда
			Движение.Проект 	= СтрокаТаблицы.Проект;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//Проведение заявки МТС
//
Процедура ЗарегистрироватьДвиженияЗаявкиМТС(Реквизиты, Таблица, Движения, Отказ) Экспорт
	мВалютаДокумента 	= ?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПланированиеЗакупокВВалютеРеглУчета"),фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"),фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета"));
	мВалютаУпрУчета 	= фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
	Движения.узп_ЗаявкиМТС.Записывать=Истина;
	ПризнакПроекта 		= фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("узп_ВестиУчетЗакупокПоПроектам");
	ВалютаСценария 		= Реквизиты.Сценарий.Валюта;
	КурсыДокумента 		= Новый Соответствие;
	КурсДокумента 		= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(мВалютаДокумента,Реквизиты.ПериодПланирования,Реквизиты.Сценарий);
	КурсыДокумента.Вставить(Реквизиты.ПериодПланирования,КурсДокумента);
	КурсыСценария 		= Новый Соответствие;
	КурсСценария 		= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ВалютаСценария,Реквизиты.ПериодПланирования,Реквизиты.Сценарий);
	КурсыСценария.Вставить(Реквизиты.ПериодПланирования,КурсСценария);
	КурсыУпр 			= Новый Соответствие;
	КурсУпр 			= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(мВалютаУпрУчета,Реквизиты.ПериодПланирования,Реквизиты.Сценарий);
	КурсыУпр.Вставить(Реквизиты.ПериодПланирования,КурсУпр);
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		 Движение 				= Движения.узп_ЗаявкиМТС.Добавить();
		 ЗаполнитьЗначенияСвойств(Движение,СтрокаТаблицы);
		 Движение.ПриходРасход	= Перечисления.узп_ВидыОборотовПоЗаказам.Заказано;
		 Движение.Период 		= Реквизиты.Дата;
		 Движение.Заявка 		= Реквизиты.Ссылка;
		 Движение.Организация 	= Реквизиты.Организация;
		 Движение.СтруктурноеПодразделение = Реквизиты.СтруктурноеПодразделение;
		 Движение.Сценарий 		= Реквизиты.Сценарий;
		 Движение.ОбъектРемонта = Реквизиты.ОбъектРемонта;
		 Если ТипЗнч(СтрокаТаблицы.Номенклатура) = Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
			Движение.НоменклатураПлановая = СтрокаТаблицы.Номенклатура; 
		 КонецЕсли;
		 // расчет базового количества
		 Если ЗначениеЗаполнено(Движение.ЕдиницаИзмерения) Тогда
			Движение.КоличествоБазовое = Движение.Количество*СтрокаТаблицы.Коэффициент;
		Иначе
			Движение.КоличествоБазовое = Движение.Количество;
		КонецЕсли;
		Если Движение.КоличествоБазовое = 0 Тогда
			Движение.КоличествоБазовое = Движение.Количество;
		КонецЕсли;
		 // расчет прочих сумм
		 КурсСценария = КурсыСценария.Получить(Движение.ПериодПланирования);
		 Если КурсСценария = Неопределено Тогда
			КурсСценария = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ВалютаСценария,Движение.ПериодПланирования,Реквизиты.Сценарий);
			КурсыСценария.Вставить(Движение.ПериодПланирования,КурсСценария);
		 КонецЕсли;
		 КурсДокумента = КурсыДокумента.Получить(Движение.ПериодПланирования);
		 Если КурсДокумента = Неопределено Тогда
			КурсДокумента = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(мВалютаДокумента,Движение.ПериодПланирования,Реквизиты.Сценарий);
			КурсыДокумента.Вставить(Движение.ПериодПланирования,КурсДокумента);
		 КонецЕсли;
		 КурсУпр = КурсыУпр.Получить(Движение.ПериодПланирования);
		 Если КурсУпр = Неопределено Тогда
			КурсУпр = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(мВалютаУпрУчета,Движение.ПериодПланирования,Реквизиты.Сценарий);
			КурсыУпр.Вставить(Движение.ПериодПланирования,КурсУпр);
		 КонецЕсли;
		 Если ВалютаСценария = мВалютаДокумента Тогда
			Движение.СуммаСценария = Движение.Сумма; 
		 Иначе
			Движение.СуммаСценария = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,мВалютаДокумента,ВалютаСценария,КурсДокумента.Курс,КурсСценария.Курс,КурсДокумента.Кратность,КурсСценария.Кратность); 
		КонецЕсли;
		 Если мВалютаУпрУчета = мВалютаДокумента Тогда
			Движение.СуммаУпр = Движение.Сумма; 
		 Иначе
			Движение.СуммаУпр = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,мВалютаДокумента,мВалютаУпрУчета,КурсДокумента.Курс,КурсУпр.Курс,КурсДокумента.Кратность,КурсУпр.Кратность); 
		КонецЕсли;
		Если ПризнакПроекта Тогда
			Движение.Проект = СтрокаТаблицы.Проект;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//Проведение плана закупок
//
Процедура ЗарегистрироватьДвиженияПланЗакупок(Реквизиты, Таблица, Движения, Отказ) Экспорт
	мВалютаДокумента = ?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПланированиеЗакупокВВалютеРеглУчета"),фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"),фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета"));
	мВалютаУпрУчета = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
	ПризнакПроекта = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("узп_ВестиУчетЗакупокПоПроектам");
	Движения.узп_ПланыЗакупок.Записывать=Истина;
	Движения.узп_ЗаявкиМТС.Записывать=Истина;
	ВалютаСценария = Реквизиты.Сценарий.Валюта;
	КурсыДокумента = Новый Соответствие;
	КурсДокумента = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(мВалютаДокумента,Реквизиты.ПериодПланирования,Реквизиты.Сценарий);
	КурсыДокумента.Вставить(Реквизиты.ПериодПланирования,КурсДокумента);
	КурсыСценария = Новый Соответствие;
	КурсСценария = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ВалютаСценария,Реквизиты.ПериодПланирования,Реквизиты.Сценарий);
	КурсыСценария.Вставить(Реквизиты.ПериодПланирования,КурсСценария);
	КурсыУпр = Новый Соответствие;
	КурсУпр = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(мВалютаУпрУчета,Реквизиты.ПериодПланирования,Реквизиты.Сценарий);
	КурсыУпр.Вставить(Реквизиты.ПериодПланирования,КурсУпр);
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		// планы закупок
		 Движение = Движения.узп_ПланыЗакупок.Добавить();
		 ЗаполнитьЗначенияСвойств(Движение,СтрокаТаблицы);
		 Движение.Период = Реквизиты.Дата;
		 Движение.Организация = Реквизиты.Организация;
		 Движение.СтруктурноеПодразделение = Реквизиты.СтруктурноеПодразделение;
		 Движение.Сценарий = Реквизиты.Сценарий;
		 Движение.Контрагент = СтрокаТаблицы.Поставщик;
		 Если ТипЗнч(СтрокаТаблицы.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
			Движение.НоменклатураПлановая = СтрокаТаблицы.Номенклатура; 
		 КонецЕсли;
		 // расчет базового количества
		 Если ЗначениеЗаполнено(Движение.ЕдиницаИзмерения) Тогда
			Движение.КоличествоБазовое = Движение.Количество*СтрокаТаблицы.Коэффициент;
		 Иначе 
			Движение.КоличествоБазовое = Движение.Количество;
		 КонецЕсли;
		 Если Движение.КоличествоБазовое = 0 Тогда
			 Движение.КоличествоБазовое = Движение.Количество;
		 КонецЕсли;
		 // расчет прочих сумм
		 КурсСценария = КурсыСценария.Получить(Движение.ПериодПланирования);
		 Если КурсСценария = Неопределено Тогда
			КурсСценария = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ВалютаСценария,Движение.ПериодПланирования,Реквизиты.Сценарий);
			КурсыСценария.Вставить(Движение.ПериодПланирования,КурсСценария);
		 КонецЕсли;
		 КурсДокумента = КурсыДокумента.Получить(Движение.ПериодПланирования);
		 Если КурсДокумента = Неопределено Тогда
			КурсДокумента = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(мВалютаДокумента,Движение.ПериодПланирования,Реквизиты.Сценарий);
			КурсыДокумента.Вставить(Движение.ПериодПланирования,КурсДокумента);
		 КонецЕсли;
		 КурсУпр = КурсыУпр.Получить(Движение.ПериодПланирования);
		 Если КурсУпр = Неопределено Тогда
			КурсУпр = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(мВалютаУпрУчета,Движение.ПериодПланирования,Реквизиты.Сценарий);
			КурсыУпр.Вставить(Движение.ПериодПланирования,КурсУпр);
		 КонецЕсли;
		 Если ВалютаСценария = мВалютаДокумента Тогда
			Движение.СуммаСценария = Движение.Сумма; 
		 Иначе
			Движение.СуммаСценария = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,мВалютаДокумента,ВалютаСценария,КурсДокумента.Курс,КурсСценария.Курс,КурсДокумента.Кратность,КурсСценария.Кратность); 
		КонецЕсли;
		 Если мВалютаУпрУчета = мВалютаДокумента Тогда
			Движение.СуммаУпр = Движение.Сумма; 
		 Иначе
			Движение.СуммаУпр = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,мВалютаДокумента,мВалютаУпрУчета,КурсДокумента.Курс,КурсУпр.Курс,КурсДокумента.Кратность,КурсУпр.Кратность); 
		КонецЕсли;
		Если ПризнакПроекта тогда
			Движение.Проект = СтрокаТаблицы.Проект;
		КонецЕсли;
		
		// закрытие заявок
		Если ЗначениеЗаполнено(СтрокаТаблицы.Заявка) И НЕ Реквизиты.ЗакрытьВключенныеЗаявки Тогда
			 Движение = Движения.узп_ЗаявкиМТС.Добавить();
			 ЗаполнитьЗначенияСвойств(Движение,СтрокаТаблицы);
			 //Движение.ПриходРасход=Перечисления.ден_ВидыДвиженийПриходРасход.Расход;
			 Движение.Период = Реквизиты.Дата;
			 Движение.ПриходРасход=Перечисления.узп_ВидыОборотовПоЗаказам.ЗапланированоКЗакупу;
			 Движение.Заявка = СтрокаТаблицы.Заявка;
			 Движение.Организация = Реквизиты.Организация;
			 Движение.СтруктурноеПодразделение = Реквизиты.СтруктурноеПодразделение;
			 Движение.Сценарий = Реквизиты.Сценарий;
			 Если ТипЗнч(СтрокаТаблицы.Номенклатура)=Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
				Движение.НоменклатураПлановая = СтрокаТаблицы.Номенклатура; 
			 КонецЕсли;
			 // расчет базового количества
			 Если ЗначениеЗаполнено(Движение.ЕдиницаИзмерения) Тогда
				Движение.КоличествоБазовое = Движение.Количество*СтрокаТаблицы.Коэффициент; 
			 КонецЕсли;
			 Если Движение.КоличествоБазовое = 0 Тогда
			 	Движение.КоличествоБазовое = Движение.Количество;
			 КонецЕсли;
			 // расчет прочих сумм
			 Если ВалютаСценария = мВалютаДокумента Тогда
				Движение.СуммаСценария = Движение.Сумма; 
			 Иначе
				Движение.СуммаСценария = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,мВалютаДокумента,ВалютаСценария,КурсДокумента.Курс,КурсСценария.Курс,КурсДокумента.Кратность,КурсСценария.Кратность); 
			КонецЕсли;
			 Если мВалютаУпрУчета = мВалютаДокумента Тогда
				Движение.СуммаУпр = Движение.Сумма; 
			 Иначе
				Движение.СуммаУпр = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма,мВалютаДокумента,мВалютаУпрУчета,КурсДокумента.Курс,КурсУпр.Курс,КурсДокумента.Кратность,КурсУпр.Кратность); 
			КонецЕсли;
			Если ПризнакПроекта тогда
				Движение.Проект = СтрокаТаблицы.Проект;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;

	Если Реквизиты.ЗакрытьВключенныеЗаявки Тогда

		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПланЗакупокТовары.Заявка
			|ПОМЕСТИТЬ ВТ_Заявки
			|ИЗ
			|	Документ.узп_ПланЗакупок.Товары КАК ПланЗакупокТовары
			|ГДЕ
			|	ПланЗакупокТовары.Ссылка = &Ссылка
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПланЗакупокУслуги.Заявка
			|ИЗ
			|	Документ.узп_ПланЗакупок.Услуги КАК ПланЗакупокУслуги
			|ГДЕ
			|	ПланЗакупокУслуги.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЗаявкиМТСОбороты.Заявка,
			|	ЗаявкиМТСОбороты.Организация,
			|	ЗаявкиМТСОбороты.СтруктурноеПодразделение,
			|	ЗаявкиМТСОбороты.Сценарий,
			|	ЗаявкиМТСОбороты.Подразделение,
			|	ЗаявкиМТСОбороты.Номенклатура,
			|	ЗаявкиМТСОбороты.НоменклатураПлановая,
			|	ЗаявкиМТСОбороты.Характеристика,
			|	ЗаявкиМТСОбороты.ПериодПланирования,
			|	ЗаявкиМТСОбороты.ЕдиницаИзмерения,
			|	ЗаявкиМТСОбороты.Приоритет,
			|	ЗаявкиМТСОбороты.КоличествоОборот КАК Количество,
			|	ЗаявкиМТСОбороты.СуммаОборот КАК Сумма,
			|	ЗаявкиМТСОбороты.КоличествоБазовоеОборот КАК КоличествоБазовое,
			|	ЗаявкиМТСОбороты.СуммаСценарияОборот КАК СуммаСценария,
			|	ЗаявкиМТСОбороты.СуммаУпрОборот КАК СуммаУпр,
			|	ЗаявкиМТСОбороты.Проект
			|ПОМЕСТИТЬ ОстаткиЗаявок
			|ИЗ
			|	РегистрНакопления.узп_ЗаявкиМТС.Обороты(
			|			,
			|			,
			|			,
			|			Организация = &Организация
			|				И СтруктурноеПодразделение = &СтруктурноеПодразделение
			|				И Сценарий = &Сценарий
			|				И ПериодПланирования >= &ПериодПланирования
			|				И ПериодПланирования <= &ГоризонтПланирования
			|				И ПриходРасход = ЗНАЧЕНИЕ(Перечисление.ден_ВидыДвиженийПриходРасход.Приход)) КАК ЗаявкиМТСОбороты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заявки КАК ВТ_Заявки
			|		ПО ЗаявкиМТСОбороты.Заявка = ВТ_Заявки.Заявка
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗаявкиВключениеВПланы.Заявка,
			|	ЗаявкиВключениеВПланы.Организация,
			|	ЗаявкиВключениеВПланы.СтруктурноеПодразделение,
			|	ЗаявкиВключениеВПланы.Сценарий,
			|	ЗаявкиВключениеВПланы.Подразделение,
			|	ЗаявкиВключениеВПланы.Номенклатура,
			|	ЗаявкиВключениеВПланы.НоменклатураПлановая,
			|	ЗаявкиВключениеВПланы.Характеристика,
			|	ЗаявкиВключениеВПланы.ПериодПланирования,
			|	ЗаявкиВключениеВПланы.ЕдиницаИзмерения,
			|	ЗаявкиВключениеВПланы.Приоритет,
			|	СУММА(-ЗаявкиВключениеВПланы.КоличествоОборот),
			|	СУММА(-ЗаявкиВключениеВПланы.СуммаОборот),
			|	СУММА(-ЗаявкиВключениеВПланы.КоличествоБазовоеОборот),
			|	СУММА(-ЗаявкиВключениеВПланы.СуммаСценарияОборот),
			|	СУММА(-ЗаявкиВключениеВПланы.СуммаУпрОборот),
			|	ЗаявкиВключениеВПланы.Проект
			|ИЗ
			|	РегистрНакопления.узп_ЗаявкиМТС.Обороты(
			|			,
			|			,
			|			Регистратор,
			|			Организация = &Организация
			|				И СтруктурноеПодразделение = &СтруктурноеПодразделение
			|				И Сценарий = &Сценарий
			|				И ПериодПланирования >= &ПериодПланирования
			|				И ПериодПланирования <= &ГоризонтПланирования
			|				И ПриходРасход <> ЗНАЧЕНИЕ(Перечисление.ден_ВидыДвиженийПриходРасход.Приход)) КАК ЗаявкиВключениеВПланы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Заявки КАК ВТ_Заявки
			|		ПО ЗаявкиВключениеВПланы.Заявка = ВТ_Заявки.Заявка
			|ГДЕ
			|	ЗаявкиВключениеВПланы.Регистратор <> &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаявкиВключениеВПланы.СтруктурноеПодразделение,
			|	ЗаявкиВключениеВПланы.Организация,
			|	ЗаявкиВключениеВПланы.ЕдиницаИзмерения,
			|	ЗаявкиВключениеВПланы.Заявка,
			|	ЗаявкиВключениеВПланы.Подразделение,
			|	ЗаявкиВключениеВПланы.Приоритет,
			|	ЗаявкиВключениеВПланы.ПериодПланирования,
			|	ЗаявкиВключениеВПланы.Сценарий,
			|	ЗаявкиВключениеВПланы.Номенклатура,
			|	ЗаявкиВключениеВПланы.Характеристика,
			|	ЗаявкиВключениеВПланы.НоменклатураПлановая,
			|	ЗаявкиВключениеВПланы.Проект
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОстаткиЗаявок.Заявка,
			|	ОстаткиЗаявок.Организация,
			|	ОстаткиЗаявок.СтруктурноеПодразделение,
			|	ОстаткиЗаявок.Сценарий,
			|	ОстаткиЗаявок.Подразделение,
			|	ОстаткиЗаявок.Номенклатура,
			|	ОстаткиЗаявок.НоменклатураПлановая,
			|	ОстаткиЗаявок.Характеристика,
			|	ОстаткиЗаявок.ПериодПланирования,
			|	ОстаткиЗаявок.ЕдиницаИзмерения,
			|	ОстаткиЗаявок.Приоритет,
			|	СУММА(ОстаткиЗаявок.Количество) КАК Количество,
			|	СУММА(ОстаткиЗаявок.Сумма) КАК Сумма,
			|	СУММА(ОстаткиЗаявок.КоличествоБазовое) КАК КоличествоБазовое,
			|	СУММА(ОстаткиЗаявок.СуммаСценария) КАК СуммаСценария,
			|	СУММА(ОстаткиЗаявок.СуммаУпр) КАК СуммаУпр,
			|	ОстаткиЗаявок.Проект
			|ПОМЕСТИТЬ ИтогОстатков
			|ИЗ
			|	ОстаткиЗаявок КАК ОстаткиЗаявок
			|
			|СГРУППИРОВАТЬ ПО
			|	ОстаткиЗаявок.СтруктурноеПодразделение,
			|	ОстаткиЗаявок.Номенклатура,
			|	ОстаткиЗаявок.Подразделение,
			|	ОстаткиЗаявок.ПериодПланирования,
			|	ОстаткиЗаявок.Сценарий,
			|	ОстаткиЗаявок.Приоритет,
			|	ОстаткиЗаявок.НоменклатураПлановая,
			|	ОстаткиЗаявок.Организация,
			|	ОстаткиЗаявок.ЕдиницаИзмерения,
			|	ОстаткиЗаявок.Заявка,
			|	ОстаткиЗаявок.Характеристика,
			|	ОстаткиЗаявок.Проект
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИтогОстатков.Заявка,
			|	ИтогОстатков.Организация,
			|	ИтогОстатков.СтруктурноеПодразделение,
			|	ИтогОстатков.Сценарий,
			|	ИтогОстатков.Подразделение,
			|	ИтогОстатков.Номенклатура,
			|	ИтогОстатков.НоменклатураПлановая,
			|	ИтогОстатков.Характеристика,
			|	ИтогОстатков.ПериодПланирования,
			|	ИтогОстатков.ЕдиницаИзмерения,
			|	ИтогОстатков.Приоритет,
			|	ИтогОстатков.Количество,
			|	ИтогОстатков.Сумма,
			|	ИтогОстатков.КоличествоБазовое,
			|	ИтогОстатков.СуммаСценария,
			|	ИтогОстатков.СуммаУпр,
			|	ИтогОстатков.Проект
			|ИЗ
			|	ИтогОстатков КАК ИтогОстатков
			|ГДЕ
			|	(ИтогОстатков.Количество > 0
			|			ИЛИ ИтогОстатков.Сумма > 0
			|			ИЛИ ИтогОстатков.КоличествоБазовое > 0
			|			ИЛИ ИтогОстатков.СуммаСценария > 0
			|			ИЛИ ИтогОстатков.СуммаУпр > 0)";
		Запрос.УстановитьПараметр("Ссылка",Реквизиты.Ссылка);
 		Запрос.УстановитьПараметр("Организация",Реквизиты.Организация);
		Запрос.УстановитьПараметр("СтруктурноеПодразделение",Реквизиты.СтруктурноеПодразделение);
		Запрос.УстановитьПараметр("Сценарий",Реквизиты.Сценарий);
 		Запрос.УстановитьПараметр("ПериодПланирования",Реквизиты.ПериодПланирования);
		Запрос.УстановитьПараметр("ГоризонтПланирования",фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьГоризонтПланирования(Реквизиты.ПериодПланирования,Реквизиты.Сценарий));

		Результат = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Движение = Движения.узп_ЗаявкиМТС.Добавить();
			ЗаполнитьЗначенияСвойств(Движение,ВыборкаДетальныеЗаписи);
			Движение.ПриходРасход=Перечисления.узп_ВидыОборотовПоЗаказам.ЗапланированоКЗакупу;
			Движение.Период = Реквизиты.Дата;
		КонецЦикла;

	КонецЕсли;
КонецПроцедуры

Процедура ЗарегистрироватьДвиженияРегистрацияЦенПоставщиков(Реквизиты, Таблица, Движения, Отказ) Экспорт
	Движения.узп_ПереченьЦенПоставщиков.Записывать = Истина;
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		// планы закупок
		Движение = Движения.узп_ПереченьЦенПоставщиков.Добавить();
		ЗаполнитьЗначенияСвойств(Движение,СтрокаТаблицы);
		Движение.Период = Реквизиты.Дата;
		Движение.ТипЦен = Реквизиты.ТипЦен;
		Движение.Контрагент = Реквизиты.Контрагент;
	КонецЦикла;
КонецПроцедуры
