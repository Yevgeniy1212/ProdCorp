////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры, функции

Функция ПропуститьНастройкуПоДополнительномуУсловию(Настройка) Экспорт
	
	Если Настройка = ПланыВидовХарактеристик.НастройкиПользователей.ИспользоватьУправленческийРежимРабочегоСтола 
		ИЛИ Настройка = ПланыВидовХарактеристик.НастройкиПользователей.ОсновноеПодразделение Тогда
		//для пользователей, не использующий управленческий учет, 
		//скрываем настройку режима рабочего стола
		Возврат НЕ глЗначениеПеременной("глИспользоватьУправленческийУчетЗарплаты");
	КонецЕсли;	
	
	Возврат Ложь;
		
КонецФункции	

Процедура ДополнитьСоответствиеРолей(СоответствиеРолей) Экспорт
	
	МассивРолейИсполнителей = Новый Массив;
	МассивРолейИсполнителей.Добавить(Справочники.РолиИсполнителей.Расчетчик);
	СоответствиеРолей.Вставить(Метаданные.Роли.РасчетчикРегламентированнойЗарплаты, МассивРолейИсполнителей);
	
	МассивРолейИсполнителей = Новый Массив;
	МассивРолейИсполнителей.Добавить(Справочники.РолиИсполнителей.Кадровик);
	СоответствиеРолей.Вставить(Метаданные.Роли.КадровикРегламентированныхДанных, МассивРолейИсполнителей);

КонецПроцедуры

Процедура ПолучитьНастройкуПоУмолчаниюДополнительно(СтрокаНастройки, Пользователь) Экспорт
	
	// установим режим рабочего стола в зависимости от доступности управленческих ролей
	Если СтрокаНастройки.Настройка = ПланыВидовХарактеристик.НастройкиПользователей.ИспользоватьУправленческийРежимРабочегоСтола Тогда
		СтрокаНастройки.Значение = ПользователиДополнительный.ПользовательИмеетУправленческиеРоли(Пользователь.Код);
	КонецЕсли;

КонецПроцедуры

Процедура ДополнитьЗначенияПоУмолчанию(ЗначенияПоУмолчанию) Экспорт
	
	ЗначенияПоУмолчанию.Вставить(ПланыВидовХарактеристик.НастройкиПользователей.ОткрыватьПриЗапускеПанельФункций, Истина);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Дополнительные команды в форме списка

#Если ТолстыйКлиентОбычноеПриложение Тогда

Процедура ПередОткрытиемФормыСпискаДополнительно(Форма, СтруктураДляДополнительныхДействий, ДополнительныеДействия = Неопределено) Экспорт
	
	// В этой конфигурации дополнительных действий не предусмотрено
	
КонецПроцедуры

Процедура ПриЗакрытииФормыСпискаДополнительно(Форма, СтруктураДляДополнительныхДействий) Экспорт
	
	// В этой конфигурации дополнительных действий не предусмотрено
	
КонецПроцедуры

Процедура ВыполнитьДополнительныеДействия(Форма, СтруктураДляДополнительныхДействий, ИмяДействия) Экспорт
	
	// В этой конфигурации дополнительных действий не предусмотрено
	
КонецПроцедуры // ВыполнитьДополнительныеДействия

Процедура ОбработкаОжиданияДополнительногоДействия1(Форма, СтруктураДляДополнительныхДействий) Экспорт
	
	// В этой конфигурации дополнительных действий не предусмотрено
	
КонецПроцедуры // ВыполнитьДополнительныеДействия

Процедура ОбработкаОжиданияДополнительногоДействия2(Форма, СтруктураДляДополнительныхДействий) Экспорт
	
	// В этой конфигурации дополнительных действий не предусмотрено
	
КонецПроцедуры // ВыполнитьДополнительныеДействия

#КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// Процедуры, функции для работы со справочником Пользователи

Функция СписокДоступныхВидовРабочегоСтола() Экспорт
	
	СписокДоступныхВидовРабочегоСтола = Новый СписокЗначений;

	ПользователиДополнительный.СформироватьСписокДоступныхВидовРабочегоСтола(СписокДоступныхВидовРабочегоСтола);
	
	Возврат СписокДоступныхВидовРабочегоСтола;
	
КонецФункции

Процедура ДеревоНастроекПриНачалеРедактированияДополнительно(ТекущаяНастройка, ЭлементУправления, СписокДоступныхВидовРабочегоСтола) Экспорт
	
	ПользователиДополнительный.ДеревоНастроекПриНачалеРедактированияДополнительно(ТекущаяНастройка, ЭлементУправления, СписокДоступныхВидовРабочегоСтола);
	
КонецПроцедуры

Функция ПолучитьСоответствиеЗначенийНастроекПоУмолчанию() Экспорт

	ЗначенияПоУмолчанию = Новый Соответствие;
	ЗначенияПоУмолчанию.Вставить(ПланыВидовХарактеристик.НастройкиПользователей.ЗапрашиватьПодтверждениеПриЗакрытии, Истина);
	ЗначенияПоУмолчанию.Вставить(ПланыВидовХарактеристик.НастройкиПользователей.ОткрыватьПриЗапускеСписокТекущихЗадачПользователя, Истина);
	ЗначенияПоУмолчанию.Вставить(ПланыВидовХарактеристик.НастройкиПользователей.ИспользоватьНапоминания, Истина);

	ПользователиДополнительный.ДополнитьСоответствиеЗначенийПоУмолчанию(ЗначенияПоУмолчанию);
	
	Возврат ЗначенияПоУмолчанию;
	
КонецФункции

Процедура ФормаПередЗаписьюДополнительно(ВидРабочегоСтола, ДеревоНастроек, Отказ) Экспорт
	
	ПользователиДополнительный.ФормаПередЗаписьюДополнительно(ВидРабочегоСтола, ДеревоНастроек, Отказ);
	
КонецПроцедуры

Процедура ПрименитьНастройкиРабочегоСтола(ТекущаяФормаРабочегоСтола, ФормаНастроекПользователя) Экспорт

	ПользователиДополнительный.ПрименитьНастройкиРабочегоСтола(ТекущаяФормаРабочегоСтола, ФормаНастроекПользователя);
	
КонецПроцедуры

Функция ПолучитьПараметрыОповещения(ТекущийВидРабочегоСтола) Экспорт
	
	ПараметрыОповещения = Новый Структура();
	
	ПользователиДополнительный.ДополнитьПараметрыОповещения(ПараметрыОповещения, ТекущийВидРабочегоСтола);
	
	Возврат ПараметрыОповещения;
	
КонецФункции

Функция РазделятьЗадачиПоПодразделениям() Экспорт
	
	Возврат ПользователиДополнительный.РазделятьЗадачиПоПодразделениям();	
	
КонецФункции

Процедура ФормаПередОткрытиемДополнительно(ЭлементыФормы, ИсполняемыеФункцииВПредприятии, РазделятьЗадачиПоПодразделениям, РазделятьЗадачиПоРолямИсполнителей, ПользовательСсылка) Экспорт
	
	
	Если НЕ РазделятьЗадачиПоПодразделениям и НЕ РазделятьЗадачиПоРолямИсполнителей Тогда
		Возврат;
	КонецЕсли;
	
	ПользователиДополнительный.ФормаПередОткрытиемДополнительно(ЭлементыФормы, ИсполняемыеФункцииВПредприятии, РазделятьЗадачиПоПодразделениям, РазделятьЗадачиПоРолямИсполнителей, ПользовательСсылка);
	
КонецПроцедуры

Процедура ФормаПриЗаписиДополнительно(ИсполняемыеФункцииВПредприятии, РазделятьЗадачиПоПодразделениям, РазделятьЗадачиПоРолямИсполнителей, ПользовательСсылка, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПользователиДополнительный.ФормаПриЗаписиДополнительно(ИсполняемыеФункцииВПредприятии, РазделятьЗадачиПоПодразделениям, РазделятьЗадачиПоРолямИсполнителей, ПользовательСсылка);
	
КонецПроцедуры
