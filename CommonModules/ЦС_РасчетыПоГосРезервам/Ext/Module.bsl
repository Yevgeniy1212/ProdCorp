
Процедура ОтразитьВозмещенияГР(Док) Экспорт
	
	ДвиженияГР = Док.Движения.ЦС_ВозмещенияГосРезерва;	
	ДвиженияГР.Записывать = истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АО.Сумма,
		|	АО.СчетЗатратБУ КАК Счет,
		|	АО.СубконтоЗатратБУ1 КАК Субконто1,
		|	АО.СубконтоЗатратБУ2 КАК Субконто2,
		|	АО.СубконтоЗатратБУ3 КАК Субконто3,
		|	АО.Ссылка.Организация,
		|	АО.Ссылка.Дата КАК Период,
		|	АО.ПриниматьВЗачетПоГосрезервам КАК Отражение
		|ИЗ
		|	Документ.АвансовыйОтчет.Прочее КАК АО
		|ГДЕ
		|	АО.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПТУ.Сумма,
		|	ПТУ.СчетЗатратБУ,
		|	ПТУ.СубконтоЗатратБУ1,
		|	ПТУ.СубконтоЗатратБУ2,
		|	ПТУ.СубконтоЗатратБУ3,
		|	ПТУ.Ссылка.Организация,
		|	ПТУ.Ссылка.Дата,
		|	ПТУ.ПриниматьВЗачетПоГосрезервам
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПТУ
		|ГДЕ
		|	ПТУ.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", Док.Ссылка);  
	ДвиженияГР.Загрузить(Запрос.Выполнить().Выгрузить());	
	
КонецПроцедуры
 
Процедура ОтразитьВозмещенияОтражениеГРЗП(Док) Экспорт
	
	ДвиженияГР = Док.Движения.ЦС_ВозмещенияГосРезерва;	
	ДвиженияГР.Записывать = истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Отражение.Сумма,
		|	Отражение.Ссылка.Организация,
		|	Отражение.Ссылка.Дата КАК Период,
		|	Отражение.ПриниматьВЗачетПоГосрезервам КАК Отражение,
		|	Отражение.СчетДт КАК Счет,
		|	Отражение.СубконтоДт1 КАК Субконто1,
		|	Отражение.СубконтоДт2 КАК Субконто2,
		|	Отражение.СубконтоДт3 КАК Субконто3
		|ИЗ
		|	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК Отражение
		|ГДЕ
		|	Отражение.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", Док.Ссылка);  
	ДвиженияГР.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ОтразитьВозмещенияГРСписание(Док) Экспорт
	ДвиженияГР = Док.Движения.ЦС_ВозмещенияГосРезерва;	
	ДвиженияГР.Записывать = истина;
	ДвиженияГР.Очистить();
		
	ТабПроводки = док.движения.типовой.Выгрузить();	
	ТабПроводки.Колонки.Добавить("Номенклатура");	
	
	СубконтоНомен =планывидовхарактеристик.ВидыСубконтоТиповые.номенклатура; 
	пустаяномен = справочники.Номенклатура.ПустаяСсылка();
	Для Каждого строкаТЧ из ТабПроводки Цикл
		Если строкатч.видсубконтокт1 = СубконтоНомен тогда
			строкатч.номенклатура = строкатч.субконтокт1;
		ИначеЕсли строкатч.видсубконтокт2 = СубконтоНомен тогда
			строкатч.номенклатура = строкатч.субконтокт2;
		ИначеЕсли  строкатч.видсубконтокт3 = СубконтоНомен тогда
			строкатч.номенклатура = строкатч.субконтокт3;
		иначе 
			строкатч.номенклатура = пустаяномен;		
		КонецЕсли;
	КонецЦикла;
	
	 ТабПроводки.Колонки.Удалить("КоличествоДт");
	 ТабПроводки.Колонки.Удалить("КоличествоКт");

	 ТабПроводки.Колонки.Удалить("СубконтоКт1");
	 ТабПроводки.Колонки.Удалить("СубконтоКт2");
	 ТабПроводки.Колонки.Удалить("СубконтоКт3");
	 ТабПроводки.Колонки.Удалить("номерстроки");
	 табпроводки.свернуть("Номенклатура
	 |,ИсточникФинансирования
	 |,Организация
	 |,Период
	 |,СубконтоДт1
	 |,СубконтоДт2
	 |,СубконтоДт3
	 |,СубконтоДт4
	 |,СубконтоКт4
	 |,СчетДт
	 |,СчетКт","Сумма");
	Для Каждого строкатч из ТабПроводки Цикл
		
		Движение = ДвиженияГР.Добавить();
		ЗаполнитьЗначенияСвойств(Движение,СтрокаТЧ);
		Движение.Счет = СтрокаТЧ.СчетДт;
		Движение.Субконто1 = СтрокаТЧ.Субконтодт1;
		Движение.Субконто2 = СтрокаТЧ.Субконтодт2;
		Движение.Субконто3 = СтрокаТЧ.Субконтодт3;	
		СтрокаДокумента = док.товары.найти(СтрокаТЧ.номенклатура);
		Если СтрокаДокумента<>Неопределено тогда
		Движение.Отражение = строкадокумента.ПриниматьВЗачетПоГосрезервам;
		КонецЕсли;
		
	
		
	КонецЦикла;
	
КонецПроцедуры

