////////////////////////////////////////////////////////////////////////////////
// Подсистема "Префиксация объектов"
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Устанавливает префикс источника подписки в соответствии с префиксом информационной базы.
// Ограничения на реквизиты источника не накладываются
//
// Параметры:
//  Источник - Источник события подписки.
//             Любой объект из множества [Справочник, Документ, План видов характеристик, Бизнес процесс, Задача]
// СтандартнаяОбработка - Булево - флаг стандартной обработки подписки
// Префикс - Строка - префикс объекта, который нужно изменить
//
Процедура УстановитьПрефиксИнформационнойБазы(Источник, СтандартнаяОбработка, Префикс) Экспорт
	
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_РежимИнтеграцииСУчетнойСистемой")=Перечисления.фин_РежимыИнтеграцииСУчетнойСистемой.БухгалтерияДляКазахстана_3_0 Тогда
		Выполнить("ПрефиксацияОбъектовБКСобытия.УстановитьПрефиксИнформационнойБазы(Источник, СтандартнаяОбработка, Префикс)");
	Иначе                            
		УстановитьПрефикс(Источник, Префикс, Истина, Ложь);
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает префикс источника подписки в соответствии с префиксом информационной базы и префиксом организации.
// Источник подписки должен содержать
// обязательный реквизит шапки "Организация", тип: "СправочникСсылка.Организации"
//
// Параметры:
//  Источник - Источник события подписки.
//             Любой объект из множества [Справочник, Документ, План видов характеристик, Бизнес процесс, Задача]
// СтандартнаяОбработка - Булево - флаг стандартной обработки подписки
// Префикс - Строка - префикс объекта, который нужно изменить
//
Процедура УстановитьПрефиксИнформационнойБазыИОрганизации(Источник, СтандартнаяОбработка, Префикс) Экспорт
	
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_РежимИнтеграцииСУчетнойСистемой")=Перечисления.фин_РежимыИнтеграцииСУчетнойСистемой.БухгалтерияДляКазахстана_3_0 Тогда
		Выполнить("ПрефиксацияОбъектовБКСобытия.УстановитьПрефиксИнформационнойБазыИОрганизации(Источник, СтандартнаяОбработка, Префикс)");
	Иначе
		УстановитьПрефикс(Источник, Префикс, Истина, Истина);
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Для документов

// Выполняет проверку модифицированности Даты и Организации документа
// Если дата не входит в предыдущий период или изменен реквизит Организация, то номер документа обнуляется.
// Это необходимо для назначения нового номера документу
//
// Параметры:
//  Источник - ДокументОбъект - источник события подписки
//  Отказ    - Булево - флаг отказа
// 
Процедура ПроверитьНомерДокументаПоДатеИОрганизации(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	РежимИнтеграции = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_РежимИнтеграцииСУчетнойСистемой");
	
	Если РежимИнтеграции=Перечисления.фин_РежимыИнтеграцииСУчетнойСистемой.БухгалтерияДляКазахстана_3_0 Тогда
		Выполнить("ПрефиксацияОбъектовБКСобытия.ПроверитьНомерДокументаПоДатеИОрганизации(Источник, Отказ, РежимЗаписи, РежимПроведения)");
	//ИначеЕсли РежимИнтеграции=Перечисления.фин_РежимыИнтеграцииСУчетнойСистемой.БухгалтерияДляКазахстана Тогда
	//	Выполнить("ПрефиксацияОбъектовСобытия.ПроверитьНомерДокументаПоДатеИОрганизации(Источник, Отказ, РежимЗаписи, РежимПроведения)");
	ИначеЕсли РежимИнтеграции=Перечисления.фин_РежимыИнтеграцииСУчетнойСистемой.УправлениеТорговлейДляКазахстана_3 Тогда
		Если Источник.Метаданные().Реквизиты.Найти("Организация")<>Неопределено Тогда
			Выполнить("ПрефиксацияОбъектовСобытия.ПроверитьНомерДокументаПоДатеИОрганизации(Источник, Отказ, РежимЗаписи, РежимПроведения)");
		КонецЕсли;
	Иначе    
		ТаблицаИзмененныхРеквизитов = ПустаяТаблицаИзмененныхРеквизитов();
		ДобавитьСтрокуВТаблицуИзмененныхРеквизитов(ТаблицаИзмененныхРеквизитов, ИмяРеквизитаОрганизация(Источник), "Организация", ЗначениеРеквизитаОрганизация(Источник));
		
		ПроверитьНомерОбъектаПоДатеИПрефиксообразующимРеквизитам(Источник, ТаблицаИзмененныхРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура УстановитьПрефикс(Источник, 
							Префикс, 
							УстановитьПрефиксИнформационнойБазы, 
							УстановитьПрефиксОрганизации)
	
	ПрефиксИнформационнойБазы = "";
	ПрефиксОрганизации        = "";
	
	Реквизиты = Новый Структура;
	
	Если УстановитьПрефиксИнформационнойБазы Тогда
		
		ПрефиксИнформационнойБазы = Константы.ПрефиксУзлаРаспределеннойИнформационнойБазы.Получить();
		
	КонецЕсли;
	
	Если УстановитьПрефиксОрганизации Тогда
		
		Организация = ЗначениеРеквизитаОрганизация(Источник);
		
		Если ЗначениеЗаполнено(Организация) Тогда
			
			ПрефиксОрганизации = СокрЛП(Организация.Префикс);
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ПрефиксОрганизации) И НЕ ЗначениеЗаполнено(Префикс) Тогда 
			
			Префикс = "0";
			
		КонецЕсли;
		
	КонецЕсли;
	
	ШаблонПрефикса = "[ИБ][ОР][Префикс]";
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[ОР]", ПрефиксОрганизации);
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[ИБ]", ПрефиксИнформационнойБазы);
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[Префикс]", Префикс);
	
	Префикс = ШаблонПрефикса;
	
КонецПроцедуры

Процедура ПроверитьНомерОбъектаПоДатеИПрефиксообразующимРеквизитам(Объект, ТаблицаИзмененныхРеквизитов = Неопределено)
	
	Если Объект.ОбменДанными.Загрузка Тогда
		Возврат;
	ИначеЕсли Объект.ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	Если ДатаИлиПрефиксообразующиеРеквизитыИзменены(
			Объект.Ссылка,
			Объект.Дата,
			ТаблицаИзмененныхРеквизитов,
			Объект.Метаданные().ПолноеИмя())
		Тогда
		
		Объект.Номер = "";
		
	КонецЕсли;

КонецПроцедуры

Функция ПустаяТаблицаИзмененныхРеквизитов()
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("ПутьКРеквизиту");
	Результат.Колонки.Добавить("ПсевдонимРеквизита");
	Результат.Колонки.Добавить("ЗначениеРеквизита");
	
	Возврат Результат;
	
КонецФункции

Процедура ДобавитьСтрокуВТаблицуИзмененныхРеквизитов(Таблица, ПутьКРеквизиту, ПсевдонимРеквизита, ЗначениеРеквизита)
	
	Если НЕ ЗначениеЗаполнено(СокрЛП(ПутьКРеквизиту)) ИЛИ НЕ ЗначениеЗаполнено(ЗначениеРеквизита) Тогда 
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = Таблица.Добавить();
	
	НоваяСтрока.ПутьКРеквизиту     = ПутьКРеквизиту;
	НоваяСтрока.ПсевдонимРеквизита = ПсевдонимРеквизита;
	НоваяСтрока.ЗначениеРеквизита  = ЗначениеРеквизита;
	
КонецПроцедуры

// Определяет признак равенства двух дат для объекта метаданных.
// Даты считаются равными, если они принадлежат одному периоду времени: Год, Месяц, День и пр.
//
// Параметры:
// Дата1 – первая дата для сравнения;
// Дата2 – вторая дата для сравнения;
// МетаданныеОбъекта – метаданные объекта, для которого необходимо получить значение функции.
// 
//  Возвращаемое значение:
//  Тип: Булево. Истина – даты объекта одного периода; Ложь – даты объекта разных периодов.
//
Функция ДатыОбъектаОдногоПериода(Знач Дата1, Знач Дата2, Ссылка) Экспорт
	
	РазностьДат = НачалоГода(Дата1) - НачалоГода(Дата2);
	
	Возврат РазностьДат = 0;
	
КонецФункции

// Возвращает признак изменения префиксообразующих реквизитов и даты
// 
// Параметры:
//	Ссылка - ЛюбаяСсылка - ссылка на объект ИБ
// 	ТаблицаРеквизитовПослеИзменения - ТаблицаЗначений - таблица значений префиксообразующих реквизитов объекта, содержащая значения реквизитов
//
Функция ДатаИлиПрефиксообразующиеРеквизитыИзменены(Ссылка, Знач ДатаПослеИзменения, ТаблицаРеквизитовПослеИзменения, ПолноеИмяТаблицы) Экспорт 

	ТекстЗапроса = "ВЫБРАТЬ 
	|	ШапкаОбъекта.Дата КАК Дата";
	
	Если ТаблицаРеквизитовПослеИзменения <> Неопределено Тогда
		Для Каждого СтрокаТаблицы Из ТаблицаРеквизитовПослеИзменения Цикл 
			
			ТекстЗапроса = ТекстЗапроса + ",
			|	ЕСТЬNULL(ШапкаОбъекта." + СтрокаТаблицы.ПутьКРеквизиту + ".Префикс, """") КАК Префикс" + СтрокаТаблицы.ПсевдонимРеквизита + "ДоИзменения";
			
		КонецЦикла;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ИЗ
	|	" + ПолноеИмяТаблицы + " КАК ШапкаОбъекта
	|ГДЕ
	|	ШапкаОбъекта.Ссылка = &Ссылка
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	РеквизитыИзменены = Ложь;
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитовПослеИзменения Цикл 
		
		ПрефиксПослеИзменения = "";
		Если ЗначениеЗаполнено(СтрокаТаблицы.ЗначениеРеквизита) Тогда 
			ПрефиксПослеИзменения = СтрокаТаблицы.ЗначениеРеквизита.Префикс;
		КонецЕсли;
		
		Если Выборка["Префикс" + СтрокаТаблицы.ПсевдонимРеквизита + "ДоИзменения"] <> ПрефиксПослеИзменения Тогда 
			РеквизитыИзменены = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат РеквизитыИзменены
		ИЛИ Не ДатыОбъектаОдногоПериода(Выборка.Дата, ДатаПослеИзменения, Ссылка);

КонецФункции


// Определяет доступность указанного реквизита объекта для использования. Для документов проверяется 
// наличие в реквизитах реквизита с указанным именем. Для справочников и ПВХ дополнительно проверяется 
// установленный режим использования для реквизита, к примеру, реквизиты со свойством "Для элемента" 
// недоступны в ссылке на группу справочника или ПВХ
//
// Параметры:
//  Объект       - Ссылка, Объект - ссылка на объект, либо объект информационной базы
//  ИмяРеквизита - Строка         - имя реквизита, доступность которого необходимо проверить
// 
Функция РеквизитДоступен(Объект, ИмяРеквизита) Экспорт
	
	// возвращаемое значение функции
	Результат = Истина;
	
	МетаданныеОбъекта = Объект.Метаданные();
	
	Если   (ОбщегоНазначения.ЭтоСправочник(МетаданныеОбъекта)
		ИЛИ ОбщегоНазначения.ЭтоПланВидовХарактеристик(МетаданныеОбъекта))
		И МетаданныеОбъекта.Иерархический Тогда
		
		Реквизит = МетаданныеОбъекта.Реквизиты.Найти(ИмяРеквизита);
		
		Если Реквизит = Неопределено Тогда
			
			Если ОбщегоНазначения.ЭтоСтандартныйРеквизит(МетаданныеОбъекта.СтандартныеРеквизиты, ИмяРеквизита) Тогда
				
				// Стандартный реквизит всегда доступен и для элемента и для группы.
				Возврат Истина;
				
			КонецЕсли;
			
			Возврат Ложь;
			
		КонецЕсли;
		
		Если Реквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы И Не Объект.ЭтоГруппа Тогда
			
			Результат = Ложь;
			
		ИначеЕсли Реквизит.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента И Объект.ЭтоГруппа Тогда
			
			Результат = Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ОбщегоНазначения.ЭтоДокумент(МетаданныеОбъекта) Тогда 
		
		Результат = МетаданныеОбъекта.Реквизиты.Найти(ИмяРеквизита) <> Неопределено;
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция ИмяРеквизитаОрганизация(Объект) Экспорт
	
	Если РеквизитДоступен(Объект, "Организация") Тогда
		
		Возврат "Организация";
		
	ИначеЕсли РеквизитДоступен(Объект, "ОрганизацияОтправитель") Тогда 
		
		Возврат "ОрганизацияОтправитель";
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

Функция ЗначениеРеквизитаОрганизация(Объект) Экспорт
	
	Если РеквизитДоступен(Объект, "Организация") Тогда
		
		Возврат Объект.Организация;
		
	ИначеЕсли РеквизитДоступен(Объект, "ОрганизацияОтправитель") Тогда 
		
		Возврат Объект.ОрганизацияОтправитель;
		
	КонецЕсли;
	
	Возврат Справочники.Организации.ПустаяСсылка();
	
КонецФункции
