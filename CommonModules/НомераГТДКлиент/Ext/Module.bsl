
#Область ПрограммныйИнтерфейс

Процедура ТоварыНомерГТДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, ПараметрыВыбора) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Организация", ПараметрыВыбора.Организация);
	Отбор.Вставить("Товар", ПараметрыВыбора.Товар);
	Отбор.Вставить("СтруктурноеПодразделение", ПараметрыВыбора.СтруктурноеПодразделение);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ПараметрыФормы.Вставить("Дата", ПараметрыВыбора.Дата);
	ПараметрыФормы.Вставить("Регистратор", ПараметрыВыбора.Ссылка);
	ПараметрыФормы.Вставить("ПоказыватьТолькоОстатки", ПараметрыВыбора.ПоказыватьТолькоОстатки);	
	ПараметрыФормы.Вставить("ТекущаяСтрока", ПараметрыВыбора.НомерГТД);
	
	ОткрытьФорму("Справочник.НомераГТД.Форма.ФормаВыбораПоОстаткам", ПараметрыФормы, Элемент, , , , , РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

Процедура ОткрытьФормуРедактированияНомеровГТД(ПараметрыФормы, Владелец) Экспорт
	
	ОткрытьФорму("Справочник.НомераГТД.Форма.ФормаРедактированияНомеровГТД", ПараметрыФормы, Владелец);
	
КонецПроцедуры

Процедура УдалитьНомераГТДПриИзмененииТовара(Форма, ИмяТаблицы, ТекущиеДанные) Экспорт
	
	Товары = Форма[ИмяТаблицы];
	НомераГТД = Форма.НомераГТД;
		
	// При изменении номенклатуры удалить все связанные строки из таблицы НомераГТД,
	// если номенклатура в них отличается от новой установленной номенклатуры.
	Пока Истина Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("КлючСвязи", ТекущиеДанные.КлючСвязи);
		МассивСтрокНомераГТД = НомераГТД.НайтиСтроки(ПараметрыОтбора);
		
		Если МассивСтрокНомераГТД.Количество() > 0 Тогда
			
			Если МассивСтрокНомераГТД[0].Номенклатура <> ТекущиеДанные.Номенклатура Тогда
				НомераГТД.Удалить(МассивСтрокНомераГТД[0]);
			Иначе
				Прервать;
			КонецЕсли;
			
		Иначе
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПустыеПараметрыВыбораНомераГТД() Экспорт
	
	ПараметрыВыбора = Новый Структура;
	
	ПараметрыВыбора.Вставить("Ссылка");
	ПараметрыВыбора.Вставить("Дата");	
	ПараметрыВыбора.Вставить("Организация");
	ПараметрыВыбора.Вставить("СтруктурноеПодразделение");
	ПараметрыВыбора.Вставить("ПоказыватьТолькоОстатки");
	ПараметрыВыбора.Вставить("Товар");
	ПараметрыВыбора.Вставить("НомерГТД");
	
	Возврат ПараметрыВыбора;
	
КонецФункции

Функция ПараметрыВыбораНомераГТД(Объект, ТекущиеДанные, ИмяРеквизитаТовары = "Номенклатура", ИмяРеквизитаПодразделения = "СтруктурноеПодразделение") Экспорт
	
	ПараметрыВыбора = НомераГТДКлиент.ПустыеПараметрыВыбораНомераГТД();
	
	ПараметрыВыбора.Ссылка = Объект.Ссылка;
	ПараметрыВыбора.Дата = Объект.Дата;	
	ПараметрыВыбора.Организация = Объект.Организация;
	ПараметрыВыбора.СтруктурноеПодразделение = Объект[ИмяРеквизитаПодразделения];	
	ПараметрыВыбора.ПоказыватьТолькоОстатки = Ложь;
	
	ПараметрыВыбора.Товар = ТекущиеДанные[ИмяРеквизитаТовары]; 
	ПараметрыВыбора.НомерГТД = ТекущиеДанные.НомерГТД;
	
	Возврат ПараметрыВыбора;
	
КонецФункции

Процедура УстановитьВидимостьКнопкиНомераГТД(ДобавитьКолонку,КнопкиКоманднойПанели, ОбработчикОткрытьИсточникиПроисхождения = "ОткрытьИсточникиПроисхождения") Экспорт

	Если НЕ ДобавитьКолонку  Тогда
		Если КнопкиКоманднойПанели.Кнопки.Найти("ОткрытьИсточникиПроисхождения") <> Неопределено Тогда
			КнопкиКоманднойПанели.Кнопки.Удалить(КнопкиКоманднойПанели.Кнопки.ОткрытьИсточникиПроисхождения);
		КонецЕсли;
	Иначе
		Если КнопкиКоманднойПанели.Кнопки.Найти("ОткрытьИсточникиПроисхождения") = Неопределено Тогда
			Обработчик = Новый Действие(ОбработчикОткрытьИсточникиПроисхождения);
			КнопкиКоманднойПанели.Кнопки.Добавить("ОткрытьИсточникиПроисхождения", ТипКнопкиКоманднойПанели.Действие, "Источники происхождения", Обработчик);		
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры 

Процедура ИзменитьНомераГТДПриИзмененииКоличествоТовара(Товары, НомераГТД, ТекущиеДанные) Экспорт
		
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТребуемоеКоличество = ТекущиеДанные.Количество;
	НакопленноеКоличество = 0;
	
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("КлючСвязи", ТекущиеДанные.КлючСвязи);
	МассивСтрокНомераГТД = НомераГТД.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого СтрокаНомерГТД Из МассивСтрокНомераГТД Цикл
		
		НакопленноеКоличество = НакопленноеКоличество + СтрокаНомерГТД.Количество;
		
		Если ТребуемоеКоличество < НакопленноеКоличество Тогда
			УменьшениеКоличестваНомераГТД = НакопленноеКоличество - ТребуемоеКоличество;
			Если УменьшениеКоличестваНомераГТД < СтрокаНомерГТД.Количество Тогда 
				СтрокаНомерГТД.Количество = СтрокаНомерГТД.Количество - УменьшениеКоличестваНомераГТД;
			Иначе
				СтрокаНомерГТД.Количество = 0;	
			КонецЕсли;
		КонецЕсли;			
	КонецЦикла;	
	
	УдалитьНомераГТДСНулевымКоличеством(Товары, НомераГТД);
	
КонецПроцедуры

Процедура УдалитьНомераГТДСНулевымКоличеством(Товары, НомераГТД) Экспорт
	
	Пока Истина Цикл
		
		УдаленНомерГТД = Ложь;
		
		Для Каждого СтрокаНомерГТД Из НомераГТД Цикл
			Если СтрокаНомерГТД.Количество = 0 Тогда
				НомераГТД.Удалить(СтрокаНомерГТД);
				УдаленНомерГТД = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ УдаленНомерГТД Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьВидимостьКнопкиЗаполнитьПризнакПроисхождения(ДобавитьКнопки,Подменю, ОбработчикиКнопок = Неопределено) Экспорт
	
	Если ОбработчикиКнопок = Неопределено Тогда
		ОбработчикиКнопок = Новый Структура;
		ОбработчикиКнопок.Вставить("ЗаполнитьПризнакПроисхожденияДляПустыхСтрок","ЗаполнитьПризнакПроисхожденияДляПустыхСтрок");
		ОбработчикиКнопок.Вставить("ЗаполнитьПризнакПроисхожденияДляВсехСтрок","ЗаполнитьПризнакПроисхожденияДляВсехСтрок");
	КонецЕсли;
	
	Если НЕ ДобавитьКнопки  Тогда
		Если Подменю.Кнопки.Найти("ЗаполнитьПризнакПроисхождения") <> Неопределено Тогда
			Подменю.Кнопки.Удалить(Подменю.Кнопки.ЗаполнитьПризнакПроисхождения);
		КонецЕсли;
	Иначе
		Если Подменю.Кнопки.Найти("ЗаполнитьПризнакПроисхождения") = Неопределено Тогда
			ПодменюЗаполнитьПризнакПроисхождения =
				Подменю.Кнопки.Добавить("ЗаполнитьПризнакПроисхождения", ТипКнопкиКоманднойПанели.Подменю, "Заполнить признак происхождения");
			
			Обработчик = Новый Действие(ОбработчикиКнопок.ЗаполнитьПризнакПроисхожденияДляПустыхСтрок);
			ПодменюЗаполнитьПризнакПроисхождения.Кнопки.Добавить(
				"ЗаполнитьПризнакПроисхожденияДляПустыхСтрок", ТипКнопкиКоманднойПанели.Действие, "Для строк с пустым значением", Обработчик);
				
			Обработчик = Новый Действие(ОбработчикиКнопок.ЗаполнитьПризнакПроисхожденияДляВсехСтрок);
			ПодменюЗаполнитьПризнакПроисхождения.Кнопки.Добавить(
				"ЗаполнитьПризнакПроисхожденияДляВсехСтрок", ТипКнопкиКоманднойПанели.Действие, "Для всех строк", Обработчик);
			
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти