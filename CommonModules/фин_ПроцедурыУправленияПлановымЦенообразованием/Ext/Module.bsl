
// Устанавливает значение реквизита "Цена" на основании данных источника,
// указанного в элементе справочника "ФинансовыйПоказатель"
//
// Параметры: ТекущаяСтрока - строка, к которой применяется
//
Процедура УстановитьЦенуПоУмолчанию(ТекущаяСтрока,Сценарий,ВестиУчетПоПроектам,ПериодПланирования,БезПересчета=Ложь,ВиртуальнаяКолонкаСЦеной = Ложь,КЭШ_Цены = Неопределено) Экспорт
	
	ПостроительОтчета 	= Новый ПостроительОтчета;
	СпособРасчета 		= ТекущаяСтрока.ФинансовыйПоказатель.СпособЦенообразования;
	ИсточникДанных		= ТекущаяСтрока.ФинансовыйПоказатель.ИсточникДанныхДляЦены;
	ИзмеренияИсточника	= ИсточникДанных.ИзмеренияИсточника;
	Если СпособРасчета=Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.НеРассчитывать Тогда
		Возврат;
	ИначеЕсли СпособРасчета<>Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.Фиксированная Тогда
		Если ТипЗнч(ТекущаяСтрока.Номенклатура) <> Тип("СправочникСсылка.Номенклатура") 
			И ТипЗнч(ТекущаяСтрока.Номенклатура) <> Тип("СправочникСсылка.фин_ПлановаяНоменклатура") Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если КЭШ_Цены<>Неопределено Тогда
		Измерения=ИзмеренияИсточника.Найти(Перечисления.фин_ФактическиеПоказателиБюджетирования.Контрагент,"ИзмерениеБюджетирования");
		
		СтруктураПоискаЦены = Новый Структура("Сценарий,ФинансовыйПоказатель,ПериодПланирования,Номенклатура,ВалютаОперации",Сценарий,ТекущаяСтрока.ФинансовыйПоказатель,ПериодПланирования,ТекущаяСтрока.Номенклатура,ТекущаяСтрока.ВалютаОперации);
		Если СпособРасчета=Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоДаннымИсточникаРасчетов Тогда
			Если ИзмеренияИсточника.Найти(Перечисления.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение,"ИзмерениеБюджетирования")<>Неопределено Тогда
				СтруктураПоискаЦены.Вставить("УправленческоеПодразделение",ТекущаяСтрока.УправленческоеПодразделение);
			КонецЕсли;
			Если ИзмеренияИсточника.Найти(Перечисления.фин_ФактическиеПоказателиБюджетирования.Проект,"ИзмерениеБюджетирования")<>Неопределено Тогда
				СтруктураПоискаЦены.Вставить("Проект",ТекущаяСтрока.Проект);
			КонецЕсли;
			Если ИзмеренияИсточника.Найти(Перечисления.фин_ФактическиеПоказателиБюджетирования.Контрагент,"ИзмерениеБюджетирования")<>Неопределено Тогда
				СтруктураПоискаЦены.Вставить("Контрагент",ТекущаяСтрока.Контрагент);
			КонецЕсли;
		ИначеЕсли СпособРасчета=Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоЦенамПоставщиков Тогда
			СтруктураПоискаЦены.Вставить("Контрагент",?(ТипЗнч(ТекущаяСтрока)=Тип("Структура") И НЕ ТекущаяСтрока.Свойство("Контрагент"),Справочники.Контрагенты.ПустаяСсылка(),ТекущаяСтрока.Контрагент));
		КонецЕсли;
		
		
		ДанныеСценария = КЭШ_Цены.НайтиСтроки(СтруктураПоискаЦены);
		Если ДанныеСценария.Количество()>0 Тогда
			ДанныеЦены = ДанныеСценария[0].Цена;
			Если ВиртуальнаяКолонкаСЦеной Тогда
				Если (НЕ БезПересчета) И ДанныеЦены <>0 И ДанныеЦены<>NULL Тогда
					ТекущаяСтрока.Сумма=ТекущаяСтрока.Количество*ДанныеЦены;
				КонецЕсли;
			Иначе
				ТекущаяСтрока.Цена=ДанныеЦены;
				Если (НЕ БезПересчета) И ТекущаяСтрока.Количество <> 0 И ТекущаяСтрока.Цена <>0 И ТекущаяСтрока.Цена<>NULL Тогда
					ТекущаяСтрока.Сумма=ТекущаяСтрока.Количество*ТекущаяСтрока.Цена;
				КонецЕсли;
			КонецЕсли;
			
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если СпособРасчета=Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоДаннымИсточникаРасчетов Тогда
		Если ИсточникДанных.Пустая() Тогда
			Если ТекущаяСтрока.ФинансовыйПоказатель.УчетПоСумме Тогда
				Сообщить("Для статьи оборотов "+ТекущаяСтрока.ФинансовыйПоказатель+" не указан источник данных для цены!");
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		
		ПостроительОтчета.Текст=СтрЗаменить(ИсточникДанных.ТекстЗапроса,",День,",",,");// Убираем детализацию по периодам
		
		СохраненнаяНастройка=ИсточникДанных.НастройкиПостроителя.Получить();
		
		Если ТипЗнч(СохраненнаяНастройка.НастройкиПостроителя)=Тип("НастройкиПостроителяОтчета") Тогда
			
			Если ИсточникДанных.ПроизвольныйЗапрос Тогда
				
				ПостроительОтчета.ЗаполнитьНастройки();
				
			КонецЕсли;
			
			ПостроительОтчета.УстановитьНастройки(СохраненнаяНастройка.НастройкиПостроителя,Истина,Ложь,Истина,Истина);
			
			Для Каждого Параметр Из СохраненнаяНастройка.ПараметрыПостроителя Цикл
	//			ПостроительОтчета.Параметры.Вставить(Параметр.Ключ,Параметр.Значение);
				Для Каждого Параметр Из СохраненнаяНастройка.ПараметрыПостроителя Цикл
					УстанавливаемоеЗначение = Параметр.Значение;
					Если УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.ДокументРегистратор Тогда
	//					УстанавливаемоеЗначение = ДокументРасчета;
					ИначеЕсли УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.НачалоПлановогоПериода Тогда
						УстанавливаемоеЗначение = ПериодПланирования;
					ИначеЕсли УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.ОкончаниеПлановогоПериода Тогда
						УстанавливаемоеЗначение = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ПериодПланирования,Сценарий);
					ИначеЕсли УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.Организация Тогда
	//					УстанавливаемоеЗначение = Организация;
					ИначеЕсли УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.СценарийРасчета Тогда
						УстанавливаемоеЗначение = Сценарий;
					ИначеЕсли УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.ПроектРасчета Тогда
	//					УстанавливаемоеЗначение = ДокументРасчета.Проект;
					ИначеЕсли УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.ПодразделениеРасчета Тогда
	//					УстанавливаемоеЗначение = ДокументРасчета.УправленческоеПодразделение;
					ИначеЕсли УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.ДатаРасчета Тогда
						УстанавливаемоеЗначение = ТекущаяДата();
					КонецЕсли;
					ПостроительОтчета.Параметры.Вставить(Параметр.Ключ,УстанавливаемоеЗначение);
				КонецЦикла;
			КонецЦикла;
			
		КонецЕсли;
		
		Для каждого Граница Из ИсточникДанных.ДатыОтбораДанныхИсточника Цикл
			
			Если Граница.НачальнаяГраницаОтсчета=Перечисления.фин_ВидыГраницОтбораИсточникаПланирования.ФиксированнаяДата Тогда
				НачальнаяДатаГраницы=Граница.ДатаНачальнойГраницыОтсчета;
			ИначеЕсли Граница.НачальнаяГраницаОтсчета=Перечисления.фин_ВидыГраницОтбораИсточникаПланирования.НачалоПериода Тогда
				НачальнаяДатаГраницы=ПериодПланирования;
			ИначеЕсли Граница.НачальнаяГраницаОтсчета=Перечисления.фин_ВидыГраницОтбораИсточникаПланирования.КонецПериода Тогда
				НачальнаяДатаГраницы=фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ПериодПланирования,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(Сценарий));
			КонецЕсли;
			
			Если НЕ Граница.СдвигВПериодах=0 Тогда
				
				НачальнаяДатаГраницы=фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(НачальнаяДатаГраницы,Граница.ПериодСмещения,Граница.СдвигВПериодах);
				
			КонецЕсли;
			
			ПостроительОтчета.Параметры.Вставить(Граница.ИмяДатаГраницы,НачальнаяДатаГраницы);
			
		КонецЦикла;
		
		ПостроительОтчета.ВыбранныеПоля.Очистить();
		
		Если ИсточникДанных.ПроизвольныйЗапрос Тогда
			СтрокаПоказатель=ИсточникДанных.Показатели.Найти(ТекущаяСтрока.ФинансовыйПоказатель.ПоказательИсточникаДанныхДляЦены,"Имя");
			Если НЕ СтрокаПоказатель=Неопределено Тогда
				ПостроительОтчета.ВыбранныеПоля.Добавить(ТекущаяСтрока.ФинансовыйПоказатель.ПоказательИсточникаДанныхДляЦены);
			КонецЕсли;
		КонецЕсли;
		
		//Устанавливаем возможные отборы по аналитике документа
		
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.ВалютаОперации) Тогда
			УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта,ИзмеренияИсточника,ТекущаяСтрока.ВалютаОперации);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Сценарий) Тогда
			УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.фин_ФактическиеПоказателиБюджетирования.Сценарий,ИзмеренияИсточника,Сценарий);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.УправленческоеПодразделение) Тогда
			УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение,ИзмеренияИсточника,ТекущаяСтрока.УправленческоеПодразделение);
		КонецЕсли;
		
		Если (ВестиУчетПоПроектам) И ЗначениеЗаполнено(ТекущаяСтрока.Проект) Тогда
			УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.фин_ФактическиеПоказателиБюджетирования.Проект,ИзмеренияИсточника,ТекущаяСтрока.Проект);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.Контрагент) Тогда
			УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.фин_ФактическиеПоказателиБюджетирования.Контрагент,ИзмеренияИсточника,ТекущаяСтрока.Контрагент);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
			УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.фин_ФактическиеПоказателиБюджетирования.Номенклатура,ИзмеренияИсточника,ТекущаяСтрока.Номенклатура);
			//Иначе
			//	Возврат;
		КонецЕсли;
		
		ПостроительОтчета.Выполнить();
		ТабИсточника=ПостроительОтчета.Результат.Выгрузить();
		РезультатРасчетаЦены = 0;
	
		Если НЕ Табисточника.Колонки.Найти(ТекущаяСтрока.ФинансовыйПоказатель.ПоказательИсточникаДанныхДляЦены)=Неопределено Тогда
			РезультатРасчетаЦены = ТабИсточника[0][ТекущаяСтрока.ФинансовыйПоказатель.ПоказательИсточникаДанныхДляЦены];
			Если ТабИсточника.Количество()>0 Тогда
				Если ВиртуальнаяКолонкаСЦеной Тогда
					Если (НЕ БезПересчета) И РезультатРасчетаЦены <>0 И РезультатРасчетаЦены<>NULL Тогда
						ТекущаяСтрока.Сумма=ТекущаяСтрока.Количество*ТабИсточника[0][ТекущаяСтрока.ФинансовыйПоказатель.ПоказательИсточникаДанныхДляЦены];
					КонецЕсли;
				Иначе
					ТекущаяСтрока.Цена=РезультатРасчетаЦены;
					Если (НЕ БезПересчета) И ТекущаяСтрока.Количество <> 0 И ТекущаяСтрока.Цена <>0 И ТекущаяСтрока.Цена<>NULL Тогда
						ТекущаяСтрока.Сумма=ТекущаяСтрока.Количество*ТекущаяСтрока.Цена;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если РезультатРасчетаЦены = Null Тогда
				РезультатРасчетаЦены = 0;
			КонецЕсли;
		Иначе
			
			Сообщить("Неверно указаны параметры получения цены по источнику данных.");
			
		КонецЕсли;
	Иначе
		Цена = 0;
		ВалютаНастройки = Неопределено;
		Если СпособРасчета=Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.Фиксированная Тогда

		 	МассивФП	 = Новый Массив();
			
			МассивФП.Добавить(ТекущаяСтрока.ФинансовыйПоказатель);
			СписокГрупп = фин_ОбщегоНазначенияСервер.ПолучитьСписокВышестоящихГрупп(ТекущаяСтрока.ФинансовыйПоказатель);
			Для каждого Элемент Из СписокГрупп Цикл
				МассивФП.Добавить(Элемент);
			КонецЦикла;

			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ФиксированныеЦеныПоФинансовымПоказателямСрезПоследних.Цена,
				|	ФиксированныеЦеныПоФинансовымПоказателямСрезПоследних.ФинансовыйПоказатель
				|ИЗ
				|	РегистрСведений.фин_ФиксированныеЦеныПоФинансовымПоказателям.СрезПоследних(&Дата,) КАК ФиксированныеЦеныПоФинансовымПоказателямСрезПоследних
				|ГДЕ
				|	ФиксированныеЦеныПоФинансовымПоказателямСрезПоследних.ФинансовыйПоказатель В(&ФинансовыйПоказатель)";

			Запрос.УстановитьПараметр("ФинансовыйПоказатель", МассивФП);
 			Запрос.УстановитьПараметр("Дата", ПериодПланирования);

			Результат = Запрос.Выполнить().Выгрузить();
			Результат.Колонки.Добавить("Уровень");
			Для Каждого СтрокаРезультат Из Результат Цикл
				СтрокаРезультат.Уровень = ?(СтрокаРезультат.ФинансовыйПоказатель=ТекущаяСтрока.ФинансовыйПоказатель,1,СтрДлина(СтрокаРезультат.ФинансовыйПоказатель.ПолныйКод()));
			КонецЦикла;
	        Результат.Сортировать("Уровень ВОЗР");

			Если Результат.Количество()>0 Тогда
				Цена = Результат[0].Цена;
			Иначе
				Цена = 0;
			КонецЕсли;
			ВалютаНастройки = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
 		ИначеЕсли СпособРасчета=Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоБухгалтерскимЦенамНоменклатуры Тогда

			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЦеныНоменклатурыСрезПоследних.Цена,
				|	ЦеныНоменклатурыСрезПоследних.Валюта
				|ИЗ
				|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
				|			&Период,
				|			"+?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЭтоУТ3(),"ВидЦены","ТипЦен")+" = &ТипЦен
				|				И Номенклатура =&Номенклатура) КАК ЦеныНоменклатурыСрезПоследних";

			Запрос.УстановитьПараметр("Период", ПериодПланирования);
			Запрос.УстановитьПараметр("Номенклатура", ТекущаяСтрока.Номенклатура);
			Запрос.УстановитьПараметр("ТипЦен", ТекущаяСтрока.ФинансовыйПоказатель.ИспользуемыйТипЦен);
	 		Результат = Запрос.Выполнить();

			ВыборкаДетальныеЗаписи = Результат.Выбрать();
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				Цена = ВыборкаДетальныеЗаписи.Цена;
				ВалютаНастройки = ВыборкаДетальныеЗаписи.Валюта;
			Иначе
				Цена = 0;
				ВалютаНастройки = Неопределено;
			КонецЕсли;
				
 		ИначеЕсли СпособРасчета=Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоПрогнознымЦенамНоменклатуры Тогда

			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ПрогнозныеЦеныНоменклатурыСрезПоследних.Цена,
				|	ПрогнозныеЦеныНоменклатурыСрезПоследних.Валюта
				|ИЗ
				|	РегистрСведений.фин_ПрогнозныеЦеныНоменклатуры.СрезПоследних(
				|			&Период,
				|			ТипЦен = &ТипЦен
				|				И Номенклатура =&Номенклатура
				|				И Сценарий = &Сценарий) КАК ПрогнозныеЦеныНоменклатурыСрезПоследних";

			Запрос.УстановитьПараметр("Период", ПериодПланирования);
			Запрос.УстановитьПараметр("Номенклатура", ТекущаяСтрока.Номенклатура);
			Запрос.УстановитьПараметр("Сценарий", Сценарий);
			Запрос.УстановитьПараметр("ТипЦен", ТекущаяСтрока.ФинансовыйПоказатель.ИспользуемыйТипЦен);
	 		Результат = Запрос.Выполнить();

			ВыборкаДетальныеЗаписи = Результат.Выбрать();
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				Цена = ВыборкаДетальныеЗаписи.Цена;
				ВалютаНастройки = ВыборкаДетальныеЗаписи.Валюта;
			Иначе
				Цена = 0;
				ВалютаНастройки = ТекущаяСтрока.ВалютаОперации;
			КонецЕсли;
				
 		ИначеЕсли СпособРасчета=Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоЦенамПоставщиков Тогда

			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ПереченьЦенПоставщиковСрезПоследних.Цена,
				|	ПереченьЦенПоставщиковСрезПоследних.Валюта
				|ИЗ
				|	РегистрСведений.узп_ПереченьЦенПоставщиков.СрезПоследних(
				|			&Период,
				|			Номенклатура = &Номенклатура
				|				И ТипЦен = &ТипЦен
				|				И Контрагент = &Поставщик) КАК ПереченьЦенПоставщиковСрезПоследних";

			Запрос.УстановитьПараметр("Период", ПериодПланирования);
			Запрос.УстановитьПараметр("Номенклатура", ТекущаяСтрока.Номенклатура);
			Запрос.УстановитьПараметр("Поставщик", ?(ТипЗнч(ТекущаяСтрока)=Тип("Структура") И НЕ ТекущаяСтрока.Свойство("Контрагент"),Справочники.Контрагенты.ПустаяСсылка(),ТекущаяСтрока.Контрагент));
			Запрос.УстановитьПараметр("ТипЦен", ТекущаяСтрока.ФинансовыйПоказатель.ИспользуемыйТипЦен);
	 		Результат = Запрос.Выполнить();

			ВыборкаДетальныеЗаписи = Результат.Выбрать();
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				Цена = ВыборкаДетальныеЗаписи.Цена;
				ВалютаНастройки = ВыборкаДетальныеЗаписи.Валюта;
			Иначе
				Цена = 0;
				ВалютаНастройки = Неопределено;
			КонецЕсли;
				
		КонецЕсли;
		РезультатРасчетаЦены = Цена;
		Если НЕ ЗначениеЗаполнено(ВалютаНастройки) ИЛИ НЕ ЗначениеЗаполнено(ТекущаяСтрока.ВалютаОперации) Тогда
			Возврат;
		КонецЕсли;
		Если ВалютаНастройки<>ТекущаяСтрока.ВалютаОперации Тогда
			КурсНастройки 	= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ВалютаНастройки,ПериодПланирования,Сценарий);
			КурсОперации 	= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ТекущаяСтрока.ВалютаОперации,ПериодПланирования,Сценарий);
			РезультатРасчетаЦены = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Цена,ВалютаНастройки,ТекущаяСтрока.ВалютаОперации,КурсНастройки.Курс,КурсОперации.Курс,КурсНастройки.Кратность,КурсОперации.Кратность);
		КонецЕсли;
		Если ВиртуальнаяКолонкаСЦеной Тогда
			Если (НЕ БезПересчета) И РезультатРасчетаЦены <>0 И РезультатРасчетаЦены<>NULL Тогда
				ТекущаяСтрока.Сумма=ТекущаяСтрока.Количество*РезультатРасчетаЦены;
			КонецЕсли;
		Иначе
			ТекЦена=РезультатРасчетаЦены;
			ТекущаяСтрока.Цена = ТекЦена;
			Если (НЕ БезПересчета) И ТекущаяСтрока.Количество <> 0 И ТекЦена <>0 И ТекЦена<>NULL Тогда
				ТекущаяСтрока.Сумма=ТекущаяСтрока.Количество*ТекЦена;
			КонецЕсли;
		КонецЕсли;
		Если КЭШ_Цены<>Неопределено Тогда
			
			ДанныеСценария = КЭШ_Цены.Добавить();
			ЗаполнитьЗначенияСвойств(ДанныеСценария,СтруктураПоискаЦены);
			ДанныеСценария.Цена = РезультатРасчетаЦены;

		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры //УстановитьЦенуПоУмолчанию

// Устанавливает значение реквизита "Цена" на основании данных источника,
// указанного в элементе справочника "ФинансовыйПоказатель"
//
// Параметры: ТекущаяСтрока - строка, к которой применяется
//
Процедура ЗаполнитьКЭШ_ЦенНоменклатуры(ТекущаяСтрока,СписокНоменклатуры,Сценарий,ВестиУчетПоПроектам,ПериодПланирования,КЭШ_Цены) Экспорт
	
	Попытка
		ПостроительОтчета=Новый ПостроительОтчета;
		ИсточникДанных=ТекущаяСтрока.ИсточникДанныхДляЦены;
		
		Если ТекущаяСтрока.СпособЦенообразования=Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоДаннымИсточникаРасчетов И ИсточникДанных.Пустая() Тогда
			Возврат;
		КонецЕсли;
		СпособРасчета =  ТекущаяСтрока.СпособЦенообразования;
		
		Если КЭШ_Цены = Неопределено Тогда
			КЭШ_Цены = Новый ТаблицаЗначений;
			КЭШ_Цены.Колонки.Добавить("Сценарий",						Новый ОписаниеТипов("СправочникСсылка."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СценарииПланирования"));
			КЭШ_Цены.Колонки.Добавить("ФинансовыйПоказатель",			Новый ОписаниеТипов("СправочникСсылка.фин_ФинансовыеПоказатели"));
			КЭШ_Цены.Колонки.Добавить("Проект",							Новый ОписаниеТипов("СправочникСсылка."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПроектов()));
			КЭШ_Цены.Колонки.Добавить("Контрагент",						Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
			КЭШ_Цены.Колонки.Добавить("УправленческоеПодразделение",	фин_ОбщегоНазначенияВызовСервераПовтИсп.ОписаниеТиповУправленческоеПодразделение());
			КЭШ_Цены.Колонки.Добавить("ПериодПланирования",				Новый ОписаниеТипов("Дата"));
			КЭШ_Цены.Колонки.Добавить("Номенклатура");
			КЭШ_Цены.Колонки.Добавить("Цена",							Новый ОписаниеТипов("Число"));
			КЭШ_Цены.Колонки.Добавить("ВалютаОперации",					Новый ОписаниеТипов("СправочникСсылка.Валюты"));
		КонецЕсли;
		
		Если ТекущаяСтрока.СпособЦенообразования=Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоДаннымИсточникаРасчетов Тогда
			ПостроительОтчета.Текст=СтрЗаменить(ИсточникДанных.ТекстЗапроса,",День,",",,");// Убираем детализацию по периодам
			
			СохраненнаяНастройка=ИсточникДанных.НастройкиПостроителя.Получить();
			
			Если ТипЗнч(СохраненнаяНастройка.НастройкиПостроителя)=Тип("НастройкиПостроителяОтчета") Тогда
				
				Если ИсточникДанных.ПроизвольныйЗапрос Тогда
					
					ПостроительОтчета.ЗаполнитьНастройки();
					
				КонецЕсли;
				
				ПостроительОтчета.УстановитьНастройки(СохраненнаяНастройка.НастройкиПостроителя,Истина,Ложь,Истина,Истина);
				
				Для Каждого Параметр Из СохраненнаяНастройка.ПараметрыПостроителя Цикл
		//			ПостроительОтчета.Параметры.Вставить(Параметр.Ключ,Параметр.Значение);
					Для Каждого Параметр Из СохраненнаяНастройка.ПараметрыПостроителя Цикл
						УстанавливаемоеЗначение = Параметр.Значение;
						Если УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.ДокументРегистратор Тогда
		//					УстанавливаемоеЗначение = ДокументРасчета;
						ИначеЕсли УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.НачалоПлановогоПериода Тогда
							УстанавливаемоеЗначение = ПериодПланирования;
						ИначеЕсли УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.ОкончаниеПлановогоПериода Тогда
							УстанавливаемоеЗначение = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ПериодПланирования,Сценарий);
						ИначеЕсли УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.Организация Тогда
		//					УстанавливаемоеЗначение = Организация;
						ИначеЕсли УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.СценарийРасчета Тогда
							УстанавливаемоеЗначение = Сценарий;
						ИначеЕсли УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.ПроектРасчета Тогда
		//					УстанавливаемоеЗначение = ДокументРасчета.Проект;
						ИначеЕсли УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.ПодразделениеРасчета Тогда
		//					УстанавливаемоеЗначение = ДокументРасчета.УправленческоеПодразделение;
						ИначеЕсли УстанавливаемоеЗначение = Перечисления.фин_ПередаваемыеПараметрыИсточниковДанныхПриРасчетеМоделей.ДатаРасчета Тогда
							УстанавливаемоеЗначение = ТекущаяДата();
						КонецЕсли;
						ПостроительОтчета.Параметры.Вставить(Параметр.Ключ,УстанавливаемоеЗначение);
					КонецЦикла;
				КонецЦикла;
				
			КонецЕсли;
			
			Для каждого Граница Из ИсточникДанных.ДатыОтбораДанныхИсточника Цикл
				
				Если Граница.НачальнаяГраницаОтсчета=Перечисления.фин_ВидыГраницОтбораИсточникаПланирования.ФиксированнаяДата Тогда
					НачальнаяДатаГраницы=Граница.ДатаНачальнойГраницыОтсчета;
				ИначеЕсли Граница.НачальнаяГраницаОтсчета=Перечисления.фин_ВидыГраницОтбораИсточникаПланирования.НачалоПериода Тогда
					НачальнаяДатаГраницы=ПериодПланирования;
				ИначеЕсли Граница.НачальнаяГраницаОтсчета=Перечисления.фин_ВидыГраницОтбораИсточникаПланирования.КонецПериода Тогда
					НачальнаяДатаГраницы=фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ПериодПланирования,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(Сценарий));
				КонецЕсли;
				
				Если НЕ Граница.СдвигВПериодах=0 Тогда
					
					НачальнаяДатаГраницы=фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(НачальнаяДатаГраницы,Граница.ПериодСмещения,Граница.СдвигВПериодах);
					
				КонецЕсли;
				
				ПостроительОтчета.Параметры.Вставить(Граница.ИмяДатаГраницы,НачальнаяДатаГраницы);
				
			КонецЦикла;
			
			ПостроительОтчета.ВыбранныеПоля.Очистить();
			
			Если ИсточникДанных.ПроизвольныйЗапрос Тогда
				СтрокаПоказатель=ИсточникДанных.Показатели.Найти(ТекущаяСтрока.ФинансовыйПоказатель.ПоказательИсточникаДанныхДляЦены,"Имя");
				Если НЕ СтрокаПоказатель=Неопределено Тогда
					ПостроительОтчета.ВыбранныеПоля.Добавить(ТекущаяСтрока.ФинансовыйПоказатель.ПоказательИсточникаДанныхДляЦены);
				КонецЕсли;
			КонецЕсли;
			
			Если ПостроительОтчета.ДоступныеПоля.Найти("Номенклатура")=Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			//Устанавливаем возможные отборы по аналитике документа
			
			ИзмеренияИсточника=ИсточникДанных.ИзмеренияИсточника;
			
			Если ЗначениеЗаполнено(ТекущаяСтрока.ВалютаОперации) Тогда
				УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта,ИзмеренияИсточника,ТекущаяСтрока.ВалютаОперации);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Сценарий) Тогда
				УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.фин_ФактическиеПоказателиБюджетирования.Сценарий,ИзмеренияИсточника,Сценарий);
			КонецЕсли;
			
			ОтборПодразделение = Ложь;
			Если ЗначениеЗаполнено(ТекущаяСтрока.УправленческоеПодразделение) Тогда
				ОтборПодразделение = УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение,ИзмеренияИсточника,ТекущаяСтрока.УправленческоеПодразделение);
			КонецЕсли;
			
			ОтборПроект = Ложь;
			Если (ВестиУчетПоПроектам) И ЗначениеЗаполнено(ТекущаяСтрока.Проект) Тогда
				ОтборПроект = УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.фин_ФактическиеПоказателиБюджетирования.Проект,ИзмеренияИсточника,ТекущаяСтрока.Проект);
			КонецЕсли;
			
			ОтборКонтрагент = Ложь;
			Если ЗначениеЗаполнено(ТекущаяСтрока.Контрагент) Тогда
				ОтборКонтрагент = УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.фин_ФактическиеПоказателиБюджетирования.Контрагент,ИзмеренияИсточника,ТекущаяСтрока.Контрагент);
			КонецЕсли;
			
			Если НЕ (ОтборПодразделение ИЛИ ОтборПроект ИЛИ ОтборКонтрагент) Тогда
				УстановитьОтборДляЦены(ПостроительОтчета,Перечисления.фин_ФактическиеПоказателиБюджетирования.Номенклатура,ИзмеренияИсточника,СписокНоменклатуры);
			КонецЕсли;

			Если ПостроительОтчета.ДоступныеПоля.Найти("Номенклатура")=Неопределено Тогда
				Возврат;
			КонецЕсли;
			Если ПостроительОтчета.ДоступныеПоля.Номенклатура.Поле = Ложь Тогда
				Возврат;
			КонецЕсли;
			ПостроительОтчета.ВыбранныеПоля.Добавить("Номенклатура","Номенклатура");
			
			ПостроительОтчета.Выполнить();
			ТабИсточника=ПостроительОтчета.Результат.Выгрузить();
			
			СтруктураПоиска = Новый Структура("Сценарий,ФинансовыйПоказатель,ПериодПланирования,ВалютаОперации",Сценарий,ТекущаяСтрока.Финансовыйпоказатель,ПериодПланирования,ТекущаяСтрока.ВалютаОперации);
			Если ОтборПодразделение Тогда
				СтруктураПоиска.Вставить("УправленческоеПодразделение",ТекущаяСтрока.УправленческоеПодразделение);
			КонецЕсли;
			Если ОтборПроект Тогда
				СтруктураПоиска.Вставить("Проект",ТекущаяСтрока.Проект);
			КонецЕсли;
			Если ОтборКонтрагент Тогда
				СтруктураПоиска.Вставить("Контрагент",ТекущаяСтрока.Контрагент);
			КонецЕсли;
				
			Если НЕ Табисточника.Колонки.Найти(ТекущаяСтрока.ФинансовыйПоказатель.ПоказательИсточникаДанныхДляЦены)=Неопределено Тогда
				Для Каждого СтрокаПолучено Из ТабИсточника Цикл
					СтруктураПоиска.Вставить("Номенклатура",СтрокаПолучено.Номенклатура);
					ДанныеНоменклатуры = КЭШ_Цены.НайтиСтроки(СтруктураПоиска);
					Если ДанныеНоменклатуры.Количество()=0 Тогда
						СтрокаРез = КЭШ_Цены.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаРез,СтруктураПоиска);
					Иначе
						СтрокаРез = ДанныеНоменклатуры[0];
					КонецЕсли;
					СтрокаРез.Цена = СтрокаПолучено[ТекущаяСтрока.ФинансовыйПоказатель.ПоказательИсточникаДанныхДляЦены];
				КонецЦикла;
				Для Каждого Номенклатура Из СписокНоменклатуры Цикл
					СтруктураПоиска.Вставить("Номенклатура",Номенклатура.Значение);
					Если ТабИсточника.НайтиСтроки(Новый Структура("Номенклатура",Номенклатура.Значение)).Количество()>0 Тогда
						Продолжить;
					КонецЕсли;
					ДанныеНоменклатуры = КЭШ_Цены.НайтиСтроки(СтруктураПоиска);
					Если ДанныеНоменклатуры.Количество()=0 Тогда
						СтрокаРез = КЭШ_Цены.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаРез,СтруктураПоиска);
					Иначе
						СтрокаРез = ДанныеНоменклатуры[0];
					КонецЕсли;
					СтрокаРез.Цена = 0;
				КонецЦикла;
			КонецЕсли;
		Иначе
			Цена = 0;
			ВалютаНастройки = Неопределено;
			Если СпособРасчета=Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.Фиксированная Тогда

			 	МассивФП	 = Новый Массив();
				
				МассивФП.Добавить(ТекущаяСтрока.ФинансовыйПоказатель);
				СписокГрупп = фин_ОбщегоНазначенияСервер.ПолучитьСписокВышестоящихГрупп(ТекущаяСтрока.ФинансовыйПоказатель);
				Для каждого Элемент Из СписокГрупп Цикл
					МассивФП.Добавить(Элемент);
				КонецЦикла;

				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ФиксированныеЦеныПоФинансовымПоказателямСрезПоследних.Цена,
					|	ФиксированныеЦеныПоФинансовымПоказателямСрезПоследних.ФинансовыйПоказатель
					|ИЗ
					|	РегистрСведений.фин_ФиксированныеЦеныПоФинансовымПоказателям.СрезПоследних(&Дата,) КАК ФиксированныеЦеныПоФинансовымПоказателямСрезПоследних
					|ГДЕ
					|	ФиксированныеЦеныПоФинансовымПоказателямСрезПоследних.ФинансовыйПоказатель В(&ФинансовыйПоказатель)";

				Запрос.УстановитьПараметр("ФинансовыйПоказатель", МассивФП);
	 			Запрос.УстановитьПараметр("Дата", ПериодПланирования);

				Результат = Запрос.Выполнить().Выгрузить();
				Результат.Колонки.Добавить("Уровень");
				Для Каждого СтрокаРезультат Из Результат Цикл
					СтрокаРезультат.Уровень = ?(СтрокаРезультат.ФинансовыйПоказатель=ТекущаяСтрока.ФинансовыйПоказатель,1,СтрДлина(СтрокаРезультат.ФинансовыйПоказатель.ПолныйКод()));
				КонецЦикла;
		        Результат.Сортировать("Уровень ВОЗР");

				Если Результат.Количество()>0 Тогда
					Цена = Результат[0].Цена;
				Иначе
					Цена = 0;
				КонецЕсли;
				ВалютаНастройки = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
				РезультатРасчетаЦены = Цена;
				Если ВалютаНастройки<>ТекущаяСтрока.ВалютаОперации Тогда
					КурсНастройки 	= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ВалютаНастройки,ПериодПланирования,Сценарий);
					КурсОперации 	= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ТекущаяСтрока.ВалютаОперации,ПериодПланирования,Сценарий);
					РезультатРасчетаЦены = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Цена,ВалютаНастройки,ТекущаяСтрока.ВалютаОперации,КурсНастройки.Курс,КурсОперации.Курс,КурсНастройки.Кратность,КурсОперации.Кратность);
				КонецЕсли;
				
				СтруктураПоиска = Новый Структура("Сценарий,ФинансовыйПоказатель,ПериодПланирования,ВалютаОперации",Сценарий,ТекущаяСтрока.Финансовыйпоказатель,ПериодПланирования,ТекущаяСтрока.ВалютаОперации);
					
				Для Каждого СтрокаПолучено Из ТабИсточника Цикл
					ДанныеНоменклатуры = КЭШ_Цены.НайтиСтроки(СтруктураПоиска);
					Если ДанныеНоменклатуры.Количество()=0 Тогда
						СтрокаРез = КЭШ_Цены.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаРез,СтруктураПоиска);
					Иначе
						СтрокаРез = ДанныеНоменклатуры[0];
					КонецЕсли;
					СтрокаРез.Цена = РезультатРасчетаЦены;
				КонецЦикла;
					
	 		ИначеЕсли СпособРасчета=Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоБухгалтерскимЦенамНоменклатуры Тогда

				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ЦеныНоменклатурыСрезПоследних.Цена,
					|	ЦеныНоменклатурыСрезПоследних.Валюта,
					|	ЦеныНоменклатурыСрезПоследних.Номенклатура
					|ИЗ
					|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, "+?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЭтоУТ3(),"ВидЦены","ТипЦен")+" = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних";

				Запрос.УстановитьПараметр("Период", ПериодПланирования);
				Запрос.УстановитьПараметр("ТипЦен", ТекущаяСтрока.ФинансовыйПоказатель.ИспользуемыйТипЦен);
		 		Результат = Запрос.Выполнить();

				ВыборкаДетальныеЗаписи = Результат.Выбрать();
				СтруктураПоиска = Новый Структура("Сценарий,ФинансовыйПоказатель,ПериодПланирования,ВалютаОперации",Сценарий,ТекущаяСтрока.Финансовыйпоказатель,ПериодПланирования,ТекущаяСтрока.ВалютаОперации);
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Цена = ВыборкаДетальныеЗаписи.Цена;
					ВалютаНастройки = ВыборкаДетальныеЗаписи.Валюта;
					РезультатРасчетаЦены = Цена;
					Если ВалютаНастройки<>ТекущаяСтрока.ВалютаОперации Тогда
						КурсНастройки 	= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ВалютаНастройки,ПериодПланирования,Сценарий);
						КурсОперации 	= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ТекущаяСтрока.ВалютаОперации,ПериодПланирования,Сценарий);
						РезультатРасчетаЦены = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Цена,ВалютаНастройки,ТекущаяСтрока.ВалютаОперации,КурсНастройки.Курс,КурсОперации.Курс,КурсНастройки.Кратность,КурсОперации.Кратность);
					КонецЕсли;
			
					СтруктураПоиска.Вставить("Номенклатура",ВыборкаДетальныеЗаписи.Номенклатура);
					ДанныеНоменклатуры = КЭШ_Цены.НайтиСтроки(СтруктураПоиска);
					Если ДанныеНоменклатуры.Количество()=0 Тогда
						СтрокаРез = КЭШ_Цены.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаРез,СтруктураПоиска);
					Иначе
						СтрокаРез = ДанныеНоменклатуры[0];
					КонецЕсли;
					СтрокаРез.Цена = РезультатРасчетаЦены;
				КонецЦикла;
				Для Каждого Номенклатура Из СписокНоменклатуры Цикл
					СтруктураПоиска.Вставить("Номенклатура",Номенклатура.Значение);
					Если ТабИсточника.НайтиСтроки(Новый Структура("Номенклатура",Номенклатура.Значение)).Количество()>0 Тогда
						Продолжить;
					КонецЕсли;
					ДанныеНоменклатуры = КЭШ_Цены.НайтиСтроки(СтруктураПоиска);
					Если ДанныеНоменклатуры.Количество()=0 Тогда
						СтрокаРез = КЭШ_Цены.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаРез,СтруктураПоиска);
					Иначе
						СтрокаРез = ДанныеНоменклатуры[0];
					КонецЕсли;
					СтрокаРез.Цена = 0;
				КонецЦикла;
					
	 		ИначеЕсли СпособРасчета=Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоПрогнознымЦенамНоменклатуры Тогда

				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ПрогнозныеЦеныНоменклатурыСрезПоследних.Цена,
					|	ПрогнозныеЦеныНоменклатурыСрезПоследних.Валюта,
					|	ПрогнозныеЦеныНоменклатурыСрезПоследних.Номенклатура
					|ИЗ
					|	РегистрСведений.фин_ПрогнозныеЦеныНоменклатуры.СрезПоследних(
					|			&Период,
					|			ТипЦен = &ТипЦен
					//|				И Номенклатура = &Номенклатура
					|				И Сценарий = &Сценарий) КАК ПрогнозныеЦеныНоменклатурыСрезПоследних";

				Запрос.УстановитьПараметр("Период", ПериодПланирования);
				//Запрос.УстановитьПараметр("Номенклатура", ТекущаяСтрока.Номенклатура);
				Запрос.УстановитьПараметр("Сценарий", Сценарий);
				Запрос.УстановитьПараметр("ТипЦен", ТекущаяСтрока.ФинансовыйПоказатель.ИспользуемыйТипЦен);
		 		Результат = Запрос.Выполнить();

				ВыборкаДетальныеЗаписи = Результат.Выбрать();
				СтруктураПоиска = Новый Структура("Сценарий,ФинансовыйПоказатель,ПериодПланирования,ВалютаОперации",Сценарий,ТекущаяСтрока.Финансовыйпоказатель,ПериодПланирования,ТекущаяСтрока.ВалютаОперации);
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Цена = ВыборкаДетальныеЗаписи.Цена;
					ВалютаНастройки = ВыборкаДетальныеЗаписи.Валюта;
					РезультатРасчетаЦены = Цена;
					Если ВалютаНастройки<>ТекущаяСтрока.ВалютаОперации Тогда
						КурсНастройки 	= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ВалютаНастройки,ПериодПланирования,Сценарий);
						КурсОперации 	= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ТекущаяСтрока.ВалютаОперации,ПериодПланирования,Сценарий);
						РезультатРасчетаЦены = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Цена,ВалютаНастройки,ТекущаяСтрока.ВалютаОперации,КурсНастройки.Курс,КурсОперации.Курс,КурсНастройки.Кратность,КурсОперации.Кратность);
					КонецЕсли;
			
					СтруктураПоиска.Вставить("Номенклатура",ВыборкаДетальныеЗаписи.Номенклатура);
					ДанныеНоменклатуры = КЭШ_Цены.НайтиСтроки(СтруктураПоиска);
					Если ДанныеНоменклатуры.Количество()=0 Тогда
						СтрокаРез = КЭШ_Цены.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаРез,СтруктураПоиска);
					Иначе
						СтрокаРез = ДанныеНоменклатуры[0];
					КонецЕсли;
					СтрокаРез.Цена = РезультатРасчетаЦены;
				КонецЦикла;
				Для Каждого Номенклатура Из СписокНоменклатуры Цикл
					СтруктураПоиска.Вставить("Номенклатура",Номенклатура.Значение);
					Если ТабИсточника.НайтиСтроки(Новый Структура("Номенклатура",Номенклатура.Значение)).Количество()>0 Тогда
						Продолжить;
					КонецЕсли;
					ДанныеНоменклатуры = КЭШ_Цены.НайтиСтроки(СтруктураПоиска);
					Если ДанныеНоменклатуры.Количество()=0 Тогда
						СтрокаРез = КЭШ_Цены.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаРез,СтруктураПоиска);
					Иначе
						СтрокаРез = ДанныеНоменклатуры[0];
					КонецЕсли;
					СтрокаРез.Цена = 0;
				КонецЦикла;
					
	 		ИначеЕсли СпособРасчета=Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоЦенамПоставщиков Тогда

				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ПереченьЦенПоставщиковСрезПоследних.Цена,
					|	ПереченьЦенПоставщиковСрезПоследних.Валюта,
					|	ПереченьЦенПоставщиковСрезПоследних.Номенклатура
					|ИЗ
					|	РегистрСведений.узп_ПереченьЦенПоставщиков.СрезПоследних(
					|			&Период,
					|			Номенклатура = &Номенклатура
					|				И ТипЦен = &ТипЦен
					|				И Контрагент = &Поставщик) КАК ПереченьЦенПоставщиковСрезПоследних";

				Запрос.УстановитьПараметр("Период", ПериодПланирования);
				Запрос.УстановитьПараметр("Номенклатура", ТекущаяСтрока.Номенклатура);
				Запрос.УстановитьПараметр("Поставщик", ТекущаяСтрока.Контрагент);
				Запрос.УстановитьПараметр("ТипЦен", ТекущаяСтрока.ФинансовыйПоказатель.ИспользуемыйТипЦен);
		 		Результат = Запрос.Выполнить();


				ВыборкаДетальныеЗаписи = Результат.Выбрать();
				СтруктураПоиска = Новый Структура("Сценарий,ФинансовыйПоказатель,ПериодПланирования,ВалютаОперации",Сценарий,ТекущаяСтрока.Финансовыйпоказатель,ПериодПланирования,ТекущаяСтрока.ВалютаОперации);
				СтруктураПоиска.Вставить("Контрагент",ТекущаяСтрока.Контрагент);
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Цена = ВыборкаДетальныеЗаписи.Цена;
					ВалютаНастройки = ВыборкаДетальныеЗаписи.Валюта;
					РезультатРасчетаЦены = Цена;
					Если ВалютаНастройки<>ТекущаяСтрока.ВалютаОперации Тогда
						КурсНастройки 	= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ВалютаНастройки,ПериодПланирования,Сценарий);
						КурсОперации 	= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ТекущаяСтрока.ВалютаОперации,ПериодПланирования,Сценарий);
						РезультатРасчетаЦены = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Цена,ВалютаНастройки,ТекущаяСтрока.ВалютаОперации,КурсНастройки.Курс,КурсОперации.Курс,КурсНастройки.Кратность,КурсОперации.Кратность);
					КонецЕсли;
			
					СтруктураПоиска.Вставить("Номенклатура",ВыборкаДетальныеЗаписи.Номенклатура);
					ДанныеНоменклатуры = КЭШ_Цены.НайтиСтроки(СтруктураПоиска);
					Если ДанныеНоменклатуры.Количество()=0 Тогда
						СтрокаРез = КЭШ_Цены.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаРез,СтруктураПоиска);
					Иначе
						СтрокаРез = ДанныеНоменклатуры[0];
					КонецЕсли;
					СтрокаРез.Цена = РезультатРасчетаЦены;
				КонецЦикла;
				Для Каждого Номенклатура Из СписокНоменклатуры Цикл
					СтруктураПоиска.Вставить("Номенклатура",Номенклатура.Значение);
					Если ТабИсточника.НайтиСтроки(Новый Структура("Номенклатура",Номенклатура.Значение)).Количество()>0 Тогда
						Продолжить;
					КонецЕсли;
					ДанныеНоменклатуры = КЭШ_Цены.НайтиСтроки(СтруктураПоиска);
					Если ДанныеНоменклатуры.Количество()=0 Тогда
						СтрокаРез = КЭШ_Цены.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаРез,СтруктураПоиска);
					Иначе
						СтрокаРез = ДанныеНоменклатуры[0];
					КонецЕсли;
					СтрокаРез.Цена = 0;
				КонецЦикла;
					
			КонецЕсли;
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры //УстановитьЦенуПоУмолчанию


//Процедура УстановитьОтборДляЦены
//
Функция УстановитьОтборДляЦены(ПостроительОтчета,ИзмерениеБюджетирования,ИзмеренияИсточника,ЗначениеИзмерения)
	
	СтрокаИзмерение=ИзмеренияИсточника.Найти(ИзмерениеБюджетирования,"ИзмерениеБюджетирования");
	
	Если (Не СтрокаИзмерение=Неопределено) И ПостроительОтчета.Отбор.Найти(СтрокаИзмерение.ИмяПоляИсточника)=Неопределено Тогда //Добавляем в построитель отбор по измерению
		
		НовыйОтбор=ПостроительОтчета.Отбор.Добавить(СтрокаИзмерение.ПутьКДанным,СтрокаИзмерение.ИмяПоляИсточника);
		НовыйОтбор.ВидСравнения=?(ТипЗнч(ЗначениеИзмерения)=Тип("СписокЗначений"),ВидСравнения.ВСписке,ВидСравнения.Равно);
		НовыйОтбор.Значение=ЗначениеИзмерения;
		НовыйОтбор.Использование=Истина;
		
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции // УстановитьОтборДляЦены()


Функция СписокСпособов() Экспорт
	Список = Новый СписокЗначений;
	Список.Добавить(Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.НеРассчитывать);
	Список.Добавить(Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоПрогнознымЦенамНоменклатуры);
	Если Метаданные.РегистрыСведений.Найти("ЦеныНоменклатуры")<>Неопределено Тогда
		Список.Добавить(Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоБухгалтерскимЦенамНоменклатуры);
	КонецЕсли;
	Список.Добавить(Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоДаннымИсточникаРасчетов);
	Если Метаданные.РегистрыСведений.Найти("узп_ПереченьЦенПоставщиков")<>Неопределено Тогда
		Список.Добавить(Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.ПоЦенамПоставщиков);
	КонецЕсли;
	Список.Добавить(Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.Фиксированная);
	Возврат Список;
КонецФункции

Процедура фин_ПередЗаписьюНоменклатурнойПозицииПередЗаписью(Источник, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Если НЕ фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ИспользоватьРеквизитПлановаяЕдиницаИзмеренияПриПланировании") Тогда
		Возврат;
	КонецЕсли;

	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Источник.ЭтоГруппа Тогда

		Если Источник.ПлановаяЕдиницаИзмерения.Пустая() Тогда
			Источник.ПлановаяЕдиницаИзмерения = Источник.БазоваяЕдиницаИзмерения;
		КонецЕсли;
		
	КонецЕсли;

	
КонецПроцедуры
