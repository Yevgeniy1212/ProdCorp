/////////////////////////////////////////////////////////////////////////////////
// РАЗДЕЛ ДЛЯ РАБОТЫ С НАЛОГАМИ, ВЗНОСАМИ И ОТЧИСЛЕНИЯМ С ЗАРПЛАТЫ

// Получить данные для расчета ИПН
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей ИПН
//
// Возвращаемое значение:
//  Таблица значений
//
Функция ПолучитьДанныеДляРасчетаИПН(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация, Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамНалогоплательщик", Налогоплательщик);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	
	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ИПНСведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|
		|ГДЕ
		|	ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|	И ИПНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);
		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);
		КонецЕсли;

	КонецЕсли;
	
	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИПНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ИПНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	ТаблицаРезультата = Новый ТаблицаЗначений;
	ТаблицаРезультата.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаРезультата.Колонки.Добавить("Период", ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.Дата));
	ТаблицаРезультата.Колонки.Добавить("НалогИсчисленный", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
	ТаблицаРезультата.Колонки.Добавить("ПримененныйВычет", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
	ТаблицаРезультата.Колонки.Добавить("ПримененнаяЛьгота", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));

	Если ПериодРегистрации >= '20190101' Тогда
		// расчет только по фиксированной ставке
		ТаблицаРезультата = ПолучитьДанныеДляРасчетаИПНПосле2019(	ПервыйМесяцНалоговогоПериода, 
																	ПоследнийМесяцНалоговогоПериода, 
																	ПериодРегистрации, 
																	Налогоплательщик, 
																	ГоловнаяОрганизация,
																	Регистратор, 
																	СписокФизЛицТекст, 
																	ДополнительныеПараметрыЗапроса,
																	ЭтоРасчетПервойПоловиныМесяца);
	ИначеЕсли ПериодРегистрации >= '20180101' Тогда
		// расчет только по фиксированной ставке
		ТаблицаРезультата = ПолучитьДанныеДляРасчетаИПНПосле2018(	ПервыйМесяцНалоговогоПериода, 
																	ПоследнийМесяцНалоговогоПериода, 
																	ПериодРегистрации, 
																	Налогоплательщик, 
																	ГоловнаяОрганизация,
																	Регистратор, 
																	СписокФизЛицТекст, 
																	ДополнительныеПараметрыЗапроса,
																	ЭтоРасчетПервойПоловиныМесяца);
	ИначеЕсли ПериодРегистрации >= '20170701' Тогда
		// расчет только по фиксированной ставке
		ТаблицаРезультата = ПолучитьДанныеДляРасчетаИПНПосле2017(	ПервыйМесяцНалоговогоПериода, 
																	ПоследнийМесяцНалоговогоПериода, 
																	ПериодРегистрации, 
																	Налогоплательщик, 
																	ГоловнаяОрганизация,
																	Регистратор, 
																	СписокФизЛицТекст, 
																	ДополнительныеПараметрыЗапроса,
																	ЭтоРасчетПервойПоловиныМесяца);
	ИначеЕсли ПервыйМесяцНалоговогоПериода >= '20090101' Тогда
		// расчет только по фиксированной ставке
		ТаблицаРезультата = ПолучитьДанныеДляРасчетаИПНПосле2009(	ПервыйМесяцНалоговогоПериода, 
																	ПоследнийМесяцНалоговогоПериода, 
																	ПериодРегистрации, 
																	Налогоплательщик, 
																	ГоловнаяОрганизация,
																	Регистратор, 
																	СписокФизЛицТекст, 
																	ДополнительныеПараметрыЗапроса,
																	ЭтоРасчетПервойПоловиныМесяца);
	ИначеЕсли ПервыйМесяцНалоговогоПериода >= '20070101'Тогда
		// расчет только по фиксированной ставке
		ТаблицаРезультата = ПолучитьДанныеДляРасчетаИПНПосле2007(	ПервыйМесяцНалоговогоПериода, 
																	ПоследнийМесяцНалоговогоПериода, 
																	ПериодРегистрации, 
																	Налогоплательщик, 
																	ГоловнаяОрганизация,
																	Регистратор, 
																	СписокФизЛицТекст, 
																	ДополнительныеПараметрыЗапроса,
																	ЭтоРасчетПервойПоловиныМесяца);
	ИначеЕсли ПоследнийМесяцНалоговогоПериода < '20070101' Тогда
		// расчет только по шкале
		ТаблицаРезультата = ПолучитьДанныеДляРасчетаИПНДо2007(	ПервыйМесяцНалоговогоПериода, 
																ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик, 
																ГоловнаяОрганизация,
																Регистратор, 
																СписокФизЛицТекст, 
																ДополнительныеПараметрыЗапроса,
																ЭтоРасчетПервойПоловиныМесяца);
	Иначе
		// оба способа расчета
		ВрмТаблица = ПолучитьДанныеДляРасчетаИПНДо2007(	ПервыйМесяцНалоговогоПериода, 
														ПоследнийМесяцНалоговогоПериода, 
														ПериодРегистрации, 
														Налогоплательщик, 
														ГоловнаяОрганизация,
														Регистратор, 
														СписокФизЛицТекст, 
														ДополнительныеПараметрыЗапроса,
														ЭтоРасчетПервойПоловиныМесяца);
		Для Каждого СтрокаТЗ Из ВрмТаблица Цикл
			НоваяСтрока = ТаблицаРезультата.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
		КонецЦикла;
		
		ВрмТаблица = ПолучитьДанныеДляРасчетаИПНПосле2007(	ПервыйМесяцНалоговогоПериода, 
															ПоследнийМесяцНалоговогоПериода, 
															ПериодРегистрации, 
															Налогоплательщик, 
															ГоловнаяОрганизация,
															Регистратор, 
															СписокФизЛицТекст, 
															ДополнительныеПараметрыЗапроса,
															ЭтоРасчетПервойПоловиныМесяца);
		Для Каждого СтрокаТЗ Из ВрмТаблица Цикл
			НоваяСтрока = ТаблицаРезультата.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
		КонецЦикла;
		ТаблицаРезультата.Свернуть("ФизЛицо, Период", "НалогИсчисленный, ПримененныйВычет, ПримененнаяЛьгота");
		ТаблицаРезультата.Сортировать("ФизЛицо, Период");
	КонецЕсли;
	
	Возврат ТаблицаРезультата;
									
КонецФункции // ПолучитьДанныеДляРасчетаИПН

// Получить данные для расчета ИПН по прогрессивной шкале
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей ИПН
//
// Возвращаемое значение:
//  Выборка из результата запроса
//
Функция ПолучитьДанныеДляРасчетаИПНДо2007(ПервыйМесяцНалоговогоПериода, ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
											Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамНалогоплательщик",			   Налогоплательщик);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация",		   ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 		   НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамРегистратор", 				   Регистратор);
	Запрос.УстановитьПараметр("парамПриход",					   ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  				   Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамИнвалид",				   	   Перечисления.ОтношениеКИнвалидности.Инвалид);
	Запрос.УстановитьПараметр("парамТретьяГруппа",				   "III");
	Запрос.УстановитьПараметр("парамВидПлатежа", 				   Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	Запрос.УстановитьПараметр("парамВнутреннееСовместительство",   Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	Запрос.УстановитьПараметр("парамПринят", 		   			   Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	Запрос.УстановитьПараметр("парамУволен", 		   			   Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("парамПоИсчислениюИПН",			   Перечисления.ВидыСтавокИПНиСН.ПоИсчислениюИПН);
	Запрос.УстановитьПараметр("парамКонецМесяцаНалоговогоПериода", Мин(КонецМесяца(ПоследнийМесяцНалоговогоПериода), '20061231235959'));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	   КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачалоГода",				   Мин(НачалоГода(ПервыйМесяцНалоговогоПериода), '20060101'));
	Запрос.УстановитьПараметр("парамКонецГода",   				   Мин(КонецГода(ПоследнийМесяцНалоговогоПериода), '20061231235959'));
	Запрос.УстановитьПараметр("парамНеОблагаетсяЦеликом",		   Справочники.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом);
	Запрос.УстановитьПараметр("парамДатаНачалаРасчетаПоФиксСтавке",	'20070101');

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	// Периоды
	// Таблица список периодов-физлиц по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.Период КАК Период,
	|	Периоды.ФизЛицо КАК Физлицо
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		ИПНСведенияОДоходах.ФизЛицо КАК Физлицо
	|	ИЗ
	|		РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО Работники.Физлицо = ИПНСведенияОДоходах.ФизЛицо
	|
	|	ГДЕ
	|		ИПНСведенияОДоходах.ПериодРегистрации >= &парамНачалоГода И
	|		ИПНСведенияОДоходах.ПериодРегистрации <= &парамПериодРегистрации И
	|		ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик И
	|		ИПНСведенияОДоходах.Период < &парамДатаНачалаРасчетаПоФиксСтавке
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(СведенияПредыдущегоМеста.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
	|		СведенияПредыдущегоМеста.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМеста
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО Работники.Физлицо = СведенияПредыдущегоМеста.ФизЛицо
	|
	|	ГДЕ
	|		СведенияПредыдущегоМеста.МесяцНалоговогоПериода >= &парамНачалоГода И
	|		СведенияПредыдущегоМеста.МесяцНалоговогоПериода <= &парамПериодРегистрации И
	|		СведенияПредыдущегоМеста.Налогоплательщик = &парамНалогоплательщик И
	|		СведенияПредыдущегоМеста.МесяцНалоговогоПериода < &парамДатаНачалаРасчетаПоФиксСтавке) КАК Периоды";

	Запрос.Текст = ПериодыТекст;

	// Составим текст запроса для вычисления всех месяцев периода
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Периоды.Период
	|ИЗ
	|	(" + ПериодыТекст + ") КАК Периоды
	|
	|УПОРЯДОЧИТЬ ПО
	|	Периоды.Период
	|";

	Выборка = Запрос.Выполнить().Выбрать();

	ДатыПериодовГодаТекст = "";
	
	Пока Выборка.Следующий() Цикл
		Если ДатыПериодовГодаТекст <> "" Тогда
			ДатыПериодовГодаТекст = ДатыПериодовГодаТекст + ", ";
		КонецЕсли;
					
		ДатыПериодовГодаТекст = ДатыПериодовГодаТекст + " ДАТАВРЕМЯ(" + Формат(Выборка.Период, "ДФ=гггг,ММ,дд") + ")";
	КонецЦикла;
	
	Если ДатыПериодовГодаТекст = "" Тогда
		ДатыПериодовГодаТекст = "ДАТАВРЕМЯ(" + Формат(Мин(ПериодРегистрации, '20061201'), "ДФ=гггг,ММ,дд") + ")";
	КонецЕсли;
	
	ДатыПериодовГодаТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РеглПроизводныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РеглПроизводныйКалендарь
	|ГДЕ
	|	РеглПроизводныйКалендарь.ДатаКалендаря В (" + ДатыПериодовГодаТекст + ")
	|";
	
	Запрос.Текст = ДатыПериодовГодаТекст;
	
	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-нерезидентов
	ФизлицаНеРезидентыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонецГода, ФизЛицо В (" + СписокФизЛицТекст + ")) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК)";

	Запрос.Текст = ФизлицаНеРезидентыТекст;
	Запрос.УстановитьПараметр("парамФизлицаНеРезиденты", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо"));

	// РасчетныеПоказатели
	//	Поля:
	//		Период
	//		РазмерМРП
	//		РазмерМЗП
	//
	//	Описание:
	// Выбирает размер месячного расчетного показателя по периодам
	РасчетныеПоказателиТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП, 0) КАК РазмерМРП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		(" + ДатыПериодовГодаТекст + ") КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|";

	Запрос.Текст = РасчетныеПоказателиТекст;

	// ПрименяемыеЛьготы
	//	Поля:
	//		Физлицо
	//		Период
	//		ПрименяетсяЛьготаУчастникаВОВ
	//		ПрименяетсяЛьготаПоИнвалидности
	//		ЛьготаПоДоходу
	//
	//	Описание:
	//	Выбирает по всем периодам года льготы на которые имеет право физлицо
	ПрименяемыеЛьготыТекст = 
	"ВЫБРАТЬ
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период,
	|
	|	ВЫБОР
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > 0 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПрименяетсяЛьготаУчастникаВОВ,
	|
	|	ВЫБОР
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаПоИнвалидности > 0 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПрименяетсяЛьготаПоИнвалидности,
	|
	|	ВЫБОР 
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
	|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ 
	|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
	|	КОНЕЦ КАК ЛьготаПоДоходу
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИПНЛьготыФизлицСрезПоследних.Физлицо КАК Физлицо,
	|		ИПНЛьготыФизлицСрезПоследних.Период КАК Период,
	|		ВЫБОР 
	|			КОГДА (ЛьготыФизлицПоИнвалидности.Физлицо) ЕСТЬ NULL 
	|				ТОГДА 0 
	|			ИНАЧЕ ВЫБОР 
	|					КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|							И (ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности) = &парамТретьяГруппа 
	|						ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
	|					ИНАЧЕ 99999999 
	|				  КОНЕЦ 
	|		КОНЕЦ КАК ЛьготаПоИнвалидности,
	|		ВЫБОР 
	|			КОГДА (ЛьготыФизлицУчастниковВОВ.Физлицо) ЕСТЬ NULL 
	|				ТОГДА 0 
	|			ИНАЧЕ 99999999 
	|		КОНЕЦ КАК ЛьготаУчастникаВОВ
	|		
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МАКСИМУМ(ЛьготыФизлицПоИнвалидности.Период) КАК ПериодСрезаИнвалидность,
	|			МАКСИМУМ(ЛьготыФизлицУчастниковВОВ.Период) КАК ПериодСрезаУчастникиВОВ,
	|			Периоды.Физлицо КАК Физлицо,
	|			Периоды.Период КАК Период
	|		ИЗ
	|			(" + ПериодыТекст + ") КАК Периоды
	|
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|				ПО ЛьготыФизлицПоИнвалидности.Период <= Периоды.Период 
	|					И ЛьготыФизлицПоИнвалидности.Физлицо = Периоды.Физлицо
	|					И (ЛьготыФизЛицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	|						ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизЛицПоИнвалидности.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
	|
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|				ПО ЛьготыФизлицУчастниковВОВ.Период <= Периоды.Период 
	|					И ЛьготыФизлицУчастниковВОВ.Физлицо = Периоды.Физлицо
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Физлицо,
	|			Периоды.Период) КАК ИПНЛьготыФизлицСрезПоследних
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|			ПО ЛьготыФизлицПоИнвалидности.Период = ИПНЛьготыФизлицСрезПоследних.ПериодСрезаИнвалидность 
	|				И ЛьготыФизлицПоИнвалидности.Физлицо = ИПНЛьготыФизлицСрезПоследних.Физлицо
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|			ПО ЛьготыФизлицУчастниковВОВ.Период = ИПНЛьготыФизлицСрезПоследних.ПериодСрезаУчастникиВОВ 
	|				И ЛьготыФизлицУчастниковВОВ.Физлицо = ИПНЛьготыФизлицСрезПоследних.Физлицо
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ (" + РасчетныеПоказателиТекст + ") КАК РасчетныеПоказатели
	|			ПО РасчетныеПоказатели.Период = ИПНЛьготыФизлицСрезПоследних.Период) КАК ИПНЛьготыФизлиц
	|";
	
	Запрос.Текст = ПрименяемыеЛьготыТекст;
	
	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		РегистрировалсяДоходЗаПериод
	//		СуммаДоходаВсего
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//		СуммаПримененныйВычетОборот
	//		СуммаПримененнаяЛьготаОборот
	//
	//	Описание:
	// Выбирает общую сумму доходов и облагаемые налогом доходы за весь год по физлицам из СписокФизлиц
	ДоходыТекст = 
	"ВЫБРАТЬ
	|	ИПНОбороты.Физлицо КАК ФизЛицо,
	|	ИПНОбороты.Период КАК Период,
	|	ВЫБОР КОГДА СУММА(ИПНОбороты.СуммаДоходаВсего)  ЕСТЬ NULL ТОГДА 0 ИНАЧЕ 1 КОНЕЦ КАК РегистрировалсяДоходЗаПериод,
	|	СУММА(ИПНОбороты.СуммаДоходаВсего) КАК СуммаДоходаВсего,
	|	СУММА(ИПНОбороты.СуммаДоходаОборот) КАК СуммаДоходаОборот,
	|	СУММА(ИПНОбороты.СуммаВычетаОборот) КАК СуммаВычетаОборот,
	|	СУММА(ИПНОбороты.ПримененныйВычетОборот) КАК ПримененныйВычетОборот,
	|	СУММА(ИПНОбороты.ПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаОборот
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
	|		ИПНСведенияОДоходах.СуммаДоходаОборот КАК СуммаДоходаВсего,
	|		ВЫБОР 
	|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения <> &парамНеОблагаетсяЦеликом 
	|				ТОГДА ИПНСведенияОДоходах.СуммаДоходаОборот 
	|			ИНАЧЕ 0 
	|		КОНЕЦ КАК СуммаДоходаОборот,
	|		ИПНСведенияОДоходах.СуммаВычетаОборот КАК СуммаВычетаОборот,
	|		ИПНСведенияОДоходах.ПримененныйВычетОборот КАК ПримененныйВычетОборот,
	|		ИПНСведенияОДоходах.ПримененнаяЛьготаОборот КАК ПримененнаяЛьготаОборот
	|	ИЗ
	|		РегистрНакопления.ИПНСведенияОДоходах.Обороты(
	|							&парамНачалоГода,
	|							&парамКонецМесяцаНалоговогоПериода,
	|							МЕСЯЦ,
	|							Налогоплательщик = &парамНалогоплательщик
	|							И ПериодРегистрации <= &парамПериодРегистрации
	|							И ФизЛицо В (" + СписокФизЛицТекст + ")) КАК ИПНСведенияОДоходах
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
	|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо,
	|       СУММА(ИПНСведенияПредыдущегоМестаРаботы.Доход),
	|		СУММА(ИПНСведенияПредыдущегоМестаРаботы.Доход - ИПНСведенияПредыдущегоМестаРаботы.ДоходНеОблагаемыйИПН),
	|		0,
	|		СУММА(ИПНСведенияПредыдущегоМестаРаботы.ПримененныйВычет),
	|		СУММА(ИПНСведенияПредыдущегоМестаРаботы.ПримененнаяЛьгота)
	|	ИЗ
	|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК ИПНСведенияПредыдущегоМестаРаботы
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО Работники.Физлицо = ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо
	|	
	|	ГДЕ
	|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода И
	|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации И
	|		ИПНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик И
	|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода < &парамДатаНачалаРасчетаПоФиксСтавке
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
	|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо) КАК ИПНОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНОбороты.Физлицо,
	|	ИПНОбороты.Период";

	Запрос.Текст = ДоходыТекст;

	ТипЗначенияИПНТекст = "ЧИСЛО(10, 2)";
	
	// ДоходыЗаГод 
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоходЗаГод
	//		ПримененныйВычетЗаГод
	//		ПримененнаяЛьготаЗаГод
	//		ОблагаемыйДоходЗаГодДляЛьготыУчастникаВОВ
	//		ОблагаемыйДоходЗаГодДляЛьготыПоИнвалидности
	//
	//	Описание:
	//	Выбирает по всем периодам с начала года сумму дохода нарастающим итогом за год
	ДоходыЗаГодТекст = "
	|ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	Периоды.Физлицо КАК ФизЛицо,
	|	СУММА(ИПНОбороты.СуммаДоходаОборот - ИПНОбороты.СуммаВычетаОборот) КАК ОблагаемыйДоходЗаГод,
	|	СУММА(ИПНОбороты.ПримененныйВычетОборот) КАК ПримененныйВычетЗаГод,
	|	СУММА(ИПНОбороты.ПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаЗаГод,
	|	СУММА(ВЫБОР
	|			КОГДА ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ
	|					ИЛИ ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности
	|				ТОГДА ИПНОбороты.СуммаДоходаОборот - ИПНОбороты.СуммаВычетаОборот
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ЛьготируемыйОблагаемыйДоходЗаГод,
	|	МАКСИМУМ(ПрименяемыеЛьготы.ЛьготаПоДоходу) КАК ЛьготаПоДоходу
	|		
	|ИЗ
	|	(" + ПериодыТекст + ") КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ДоходыТекст + ") КАК ИПНОбороты
	|		ПО Периоды.Период >= ИПНОбороты.Период 
	|			И ИПНОбороты.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
	|			И Периоды.Физлицо = ИПНОбороты.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименяемыеЛьготыТекст + ") КАК ПрименяемыеЛьготы
	|		ПО ИПНОбороты.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
	|			И ИПНОбороты.Период = ПрименяемыеЛьготы.Период
    |
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	Периоды.ФизЛицо";

	Запрос.Текст = ДоходыЗаГодТекст;

	// ДоходыЗаКвартал
	//	Поля:
	//		ФизЛицо
	//		Период
	//		РегистрировалсяДоходЗаПериод
	//		ПолученныйДоходЗаКвартал
	//		РазмерМЗПЗаКвартал
	//
	//	Описание:
	//	Выбирает суммы среднеквартального дохода
	ДоходыЗаКварталТекст = "
	|ВЫБРАТЬ
	|	ИПНОбороты.Период КАК Период,
	|	ИПНОбороты.ФизЛицо КАК ФизЛицо,
	|	СУММА(ИПНОбороты.РегистрировалсяДоходЗаПериод) КАК РегистрировалсяДоходЗаПериод,
	|	СУММА(ИПНОбороты.ПолученныйДоходЗаКвартал) КАК ПолученныйДоходЗаКвартал,
	|	СУММА(РасчетныеПоказатели.РазмерМЗП) КАК РазмерМЗПЗаКвартал,
	|	МАКСИМУМ(РасчетныеПоказатели.РазмерМЗП) КАК РазмерМЗП
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		Периоды.Физлицо КАК ФизЛицо,
	|		ИПНОбороты.РегистрировалсяДоходЗаПериод КАК РегистрировалсяДоходЗаПериод,
	|		ИПНОбороты.СуммаДоходаВсего КАК ПолученныйДоходЗаКвартал
	|	ИЗ
	|		(" + ПериодыТекст + ") КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ (" + ДоходыТекст + ") КАК ИПНОбороты
	|			ПО ИПНОбороты.Период <= Периоды.Период 
	|				И ИПНОбороты.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, КВАРТАЛ) 
	|				И Периоды.Физлицо = ИПНОбороты.Физлицо) КАК ИПНОбороты
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + РасчетныеПоказателиТекст + ") КАК РасчетныеПоказатели
	|		ПО ИПНОбороты.Период = РасчетныеПоказатели.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНОбороты.Период,
	|	ИПНОбороты.ФизЛицо";
	
	Запрос.Текст = ДоходыЗаКварталТекст;
	
	// ИПНРасчетыСБюджетом
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныйНалог
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом и данные регистра
	//  СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
	ИПНРасчетыСБюджетомТекст = "
	|ВЫБРАТЬ
	|	ИПНРасчеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ИПНРасчеты.ФизЛицо КАК ФизЛицо,
	|	СУММА(ИПНРасчеты.ИсчисленныйНалог) КАК ИсчисленныйНалог
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИПНРасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		ИПНРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|		СУММА(ИПНРасчетыСБюджетом.Налог) КАК ИсчисленныйНалог
	|	ИЗ
	|		РегистрНакопления.ИПНРасчетыСБюджетом КАК ИПНРасчетыСБюджетом
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ("+СписокФизлицТекст+") КАК РаботникиОрганизации
	|			ПО РаботникиОрганизации.Физлицо = ИПНРасчетыСБюджетом.ФизЛицо
	|
	|	ГДЕ
	|		ИПНРасчетыСБюджетом.МесяцНалоговогоПериода >= &парамНачалоГода И
	|		ИПНРасчетыСБюджетом.МесяцНалоговогоПериода <= &парамКонецМесяцаНалоговогоПериода И
	|		ИПНРасчетыСБюджетом.Налогоплательщик = &парамНалогоплательщик И
	|		" + ?(НЕ ЭтоРасчетПервойПоловиныМесяца, "ИПНРасчетыСБюджетом.Регистратор <> &парамРегистратор И", "") + "
	|		ИПНРасчетыСБюджетом.Период <= &парамКонецПериодаРегистрации И
	|		ИПНРасчетыСБюджетом.ВидДвижения = &парамПриход И 
	|		ИПНРасчетыСБюджетом.ВидСтроки = &парамВидСтроки
	|
	|	СГРУППИРОВАТЬ ПО
	|		ИПНРасчетыСБюджетом.МесяцНалоговогоПериода,
	|		ИПНРасчетыСБюджетом.ФизЛицо
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
	|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо,
	|		СУММА(ИПНСведенияПредыдущегоМестаРаботы.ИПН)
	|	ИЗ
	|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК ИПНСведенияПредыдущегоМестаРаботы
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО Работники.Физлицо = ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо
	|	
	|	ГДЕ
	|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода И
	|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации И
	|		ИПНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик И
	|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода < &парамДатаНачалаРасчетаПоФиксСтавке
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
	|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо) КАК ИПНРасчеты
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНРасчеты.МесяцНалоговогоПериода,
	|	ИПНРасчеты.ФизЛицо";

    Запрос.Текст = ИПНРасчетыСБюджетомТекст;
	
	// ИПНРасчетыСБюджетомЗаГод
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныйНалогЗаГод
	//
	//	Описание:
	//	Выбирает исчисленные налоги нарастающим итогом за год
	ИПНРасчетыСБюджетомЗаГодТекст = 
	"ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	ИПНРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|	СУММА(ИПНРасчетыСБюджетом.ИсчисленныйНалог) КАК ИсчисленныйНалогЗаГод
	|ИЗ
	|	(" + ДатыПериодовГодаТекст + ") КАК Периоды
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + ИПНРасчетыСБюджетомТекст + ") КАК ИПНРасчетыСБюджетом
	|		ПО Периоды.Период >= ИПНРасчетыСБюджетом.МесяцНалоговогоПериода 
	|			И ИПНРасчетыСБюджетом.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(Периоды.Период, Год)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	ИПНРасчетыСБюджетом.ФизЛицо";
	
	Запрос.Текст = ИПНРасчетыСБюджетомЗаГодТекст;
	
	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами и 
	//  данные регистра СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ОПВРасчеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ОПВРасчеты.ФизЛицо КАК ФизЛицо,
	|	СУММА(ОПВРасчеты.ИсчисленныеВзносы) КАК ИсчисленныеВзносы
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|		ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|		СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныеВзносы
	|	ИЗ
	|		РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ("+СписокФизлицТекст+") КАК РаботникиОрганизации
	|			ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо
	|
	|	ГДЕ
	|		ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачалоГода И
	|		ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонецМесяцаНалоговогоПериода И
	|		ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|		ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|		ОПВРасчетыСФондами.ВидДвижения = &парамПриход И
	|		ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И
	|		ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|	СГРУППИРОВАТЬ ПО
	|		ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|		ОПВРасчетыСФондами.ФизЛицо
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
	|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо,
	|		СУММА(ИПНСведенияПредыдущегоМестаРаботы.ОПВ)
	|	ИЗ
	|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК ИПНСведенияПредыдущегоМестаРаботы
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО Работники.Физлицо = ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо
	|	
	|	ГДЕ
	|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода И
	|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации И
	|		ИПНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик И
	|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода < &парамДатаНачалаРасчетаПоФиксСтавке
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
	|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо) КАК ОПВРасчеты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчеты.МесяцНалоговогоПериода,
	|	ОПВРасчеты.ФизЛицо";

	Запрос.Текст = ОПВРасчетыСФондамиТекст;

	// ОПВРасчетыСФондамиЗаГод
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносыЗаГод
	//		ИсчисленныеВзносыЗаГодДляЛьготыУчастникаВОВ
	//		ИсчисленныеВзносыЗаГодДляЛьготыПоИнвалидности
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы нарастающим итогом за год
	ОПВРасчетыСФондамиЗаГодТекст = 
	"ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ОПВРасчетыСФондами.ИсчисленныеВзносы) КАК ИсчисленныеВзносыЗаГод,
	|	СУММА(ВЫБОР
	|			КОГДА ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ
	|					ИЛИ ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности
	|				ТОГДА ОПВРасчетыСФондами.ИсчисленныеВзносы
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ЛьготируемыеИсчисленныеВзносыЗаГод
	|	
	|ИЗ
	|	(" + ДатыПериодовГодаТекст + ") КАК Периоды
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + ОПВРасчетыСФондамиТекст + ") КАК ОПВРасчетыСФондами
	|		ПО Периоды.Период >= ОПВРасчетыСФондами.МесяцНалоговогоПериода 
	|			И ОПВРасчетыСФондами.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименяемыеЛьготыТекст + ") КАК ПрименяемыеЛьготы
	|			ПО ОПВРасчетыСФондами.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
	|				И ОПВРасчетыСФондами.МесяцНалоговогоПериода = ПрименяемыеЛьготы.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	ОПВРасчетыСФондами.ФизЛицо";
	
	Запрос.Текст = ОПВРасчетыСФондамиЗаГодТекст;
	
	// ПрименениеВычетовВОрганизации
	//	Поля:
	//		Физлицо,
	//		Период
	//
	// Описание:
	//	Выбирает список физлиц + периоды в которые применяются налоговые вычеты по 
	//	заданной организации
	ПрименениеВычетовВОрганизацииТекст = 
	"ВЫБРАТЬ
	|	ИПНПрименениеВычетовСрезПоследних.Физлицо КАК Физлицо,
	|	ИПНПрименениеВычетовСрезПоследних.Период КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ИПНПрименениеВычетов.Период) КАК ПериодСреза,
	|		Периоды.Физлицо КАК Физлицо,
	|		Периоды.Период КАК Период
	|	ИЗ
	|		("+ПериодыТекст+") КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|			ПО Периоды.Период >= ИПНПрименениеВычетов.Период 
	|				И ИПНПрименениеВычетов.Физлицо = Периоды.Физлицо
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Физлицо,
	|		Периоды.Период) КАК ИПНПрименениеВычетовСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|		ПО ИПНПрименениеВычетов.Период = ИПНПрименениеВычетовСрезПоследних.ПериодСреза 
	|			И ИПНПрименениеВычетов.Физлицо = ИПНПрименениеВычетовСрезПоследних.Физлицо
	|
	|ГДЕ
	|	ИПНПрименениеВычетов.Налогоплательщик = &парамНалогоплательщик";
	
	Запрос.Текст = ПрименениеВычетовВОрганизацииТекст;
	
	// ОтработанноеВремя
	//	Поля:
	//		Физлицо,
	//		Период,
	//		ПредоставлятьВычет
	//
	// Описание:
	//	Список физлиц-периодов с правом применения налоговых вычетов по отработанному времени
	//	
	Если Метаданные.РегистрыРасчета.Найти("ОсновныеНачисленияРаботниковОрганизаций") <> Неопределено Тогда
		// определяем по норме отработанноого времени, которая включается в зачет отработанного времени 
		// при предоставлении вычета
		ОтработанноеВремяТекст = 
		"ВЫБРАТЬ
		|	ОтработанноеВремя.ПериодДействия КАК Период,
		|	ОтработанноеВремя.ФизЛицо КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА СУММА(ОтработанноеВремя.НормаДнейПоПятидневке) >= МАКСИМУМ(ДанныеНормыВремени.Норма) / 2
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПредоставлятьВычет
		|ИЗ
		|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОтработанноеВремя
		|		ПО СписокФизЛиц.ФизЛицо = ОтработанноеВремя.ФизЛицо 
		|			И ОтработанноеВремя.Организация = &парамГоловнаяОрганизация
		|			И (ОтработанноеВремя.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство)
		|			И ОтработанноеВремя.ВидРасчета.ЗачетОтработанногоВремениДляВычета
		|			И ОтработанноеВремя.ПериодДействия МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период,
		|							СУММА(РегламентированныйПроизводственныйКалендарь.Пятидневка) КАК Норма
		|						ИЗ
		|							РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
		|						ГДЕ
		|							РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
		|						СГРУППИРОВАТЬ ПО
		|							НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ)) КАК ДанныеНормыВремени
		|		ПО ОтработанноеВремя.ПериодДействия = ДанныеНормыВремени.Период
		|
		|СГРУППИРОВАТЬ ПО 
		|	ОтработанноеВремя.ПериодДействия,
		|	ОтработанноеВремя.ФизЛицо";
	Иначе
		// определяем по датам приема и увольнения
		ОтработанноеВремяТекст = 
		"ВЫБРАТЬ
		|	ОтработанноеВремя.Период,
		|	ОтработанноеВремя.ФизЛицо,
		|	ВЫБОР
		|		КОГДА СУММА(ВЫБОР 
		|						КОГДА ПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтработанноеВремя.ДатаС И ОтработанноеВремя.ДатаПо 
		|							ТОГДА ПроизводственныйКалендарь.Пятидневка 
		|						ИНАЧЕ 0 
		|			  		КОНЕЦ) >= СУММА(ПроизводственныйКалендарь.Пятидневка) / 2
		|		ТОГДА ИСТИНА
		|	ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПредоставлятьВычет
		|
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОтработанноеВремя.Период,
		|		ОтработанноеВремя.ФизЛицо,
		|
		|		ВЫБОР 
		|			// вообще не был принят в штат - не считаем отработанное время
		|			КОГДА ОтработанноеВремя.ДатаПриема = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
		|			// принят в штат в предыдущих месяцах - считаем с первого числа месяца
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаПриема, МЕСЯЦ) < ОтработанноеВремя.Период 
		|				ТОГДА ОтработанноеВремя.Период
		|			// принят в штат в текущем месяце - считаем с даты приема
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаПриема, МЕСЯЦ) = ОтработанноеВремя.Период
		|				ТОГДА ОтработанноеВремя.ДатаПриема
		|			// сюда попасть не должны - не считаем 
		|			ИНАЧЕ
		|				ДАТАВРЕМЯ(3999, 12, 31)
		|		КОНЕЦ КАК ДатаС,
		|
		|		ВЫБОР 
		|			// повторный прием в ту же организацию и еще не уволен 
		|			// или еще не уволен после первого приема - считаем до конца месяца
		|			КОГДА ОтработанноеВремя.ДатаПриема > ОтработанноеВремя.ДатаУвольнения 
		|				  ИЛИ ГОД(ОтработанноеВремя.ДатаУвольнения) = 1
		|				ТОГДА КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
		|			// уволен до начала месяца - не считаем
		|			КОГДА ОтработанноеВремя.ДатаУвольнения < ОтработанноеВремя.Период
		|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|			// уволен в текущем месяце - считаем до даты увольнения
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаУвольнения, МЕСЯЦ) = ОтработанноеВремя.Период
		|               ТОГДА ОтработанноеВремя.ДатаУвольнения
		|			// еще не уволен - считаем до конца месяца
		|			ИНАЧЕ
		|				КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
		|		КОНЕЦ КАК ДатаПо
		|
		|	ИЗ			
		|		(ВЫБРАТЬ
		|			Периоды.Период КАК Период,
		|			Периоды.ФизЛицо КАК ФизЛицо,
		|			МАКСИМУМ(ВЫБОР 
		|						КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &парамПринят 
		|							ТОГДА РаботникиОрганизации.Период
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				 	 КОНЕЦ) КАК ДатаПриема,
		|			МАКСИМУМ(ВЫБОР 
		|						КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &парамУволен
		|							ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				 	 КОНЕЦ) КАК ДатаУвольнения
		|		ИЗ
		|			(" + ПериодыТекст + ") КАК Периоды
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|				ПО Периоды.ФизЛицо = РаботникиОрганизации.Сотрудник.ФизЛицо
		|			   	   И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
		|			   	   И РаботникиОрганизации.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство 
		|			  	   И РаботникиОрганизации.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
		|				   И РаботникиОрганизации.ПричинаИзмененияСостояния В (&парамПринят, &парамУволен)
		|
		|		СГРУППИРОВАТЬ ПО 
		|			Периоды.Период,
		|			Периоды.ФизЛицо) КАК ОтработанноеВремя) КАК ОтработанноеВремя
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК ПроизводственныйКалендарь
		|		ПО ПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтработанноеВремя.Период И КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтработанноеВремя.Период,
		|	ОтработанноеВремя.ФизЛицо
		|";
	КонецЕсли;
	
	Запрос.Текст = ОтработанноеВремяТекст;
	
	// ПрименяемыеВычетыТекст
	//	Поля:
	//		Физлицо
	//		Период
	//		НалоговыйВычетЛичный
	//		НалоговыйВычетИждивенцев
	//		НалоговыйВычетПредыдущегоМестаРаботы
	//
	//	Описание:
	//	Выбирает по всем периодам года налоговын вычеты на которые имеет право физлицо
	ПрименяемыеВычетыТекст = 
	"ВЫБРАТЬ
	|	ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо КАК Физлицо,
	|	ИПННалоговыеВычетыФизлицСрезПоследних.Период КАК Период,
	|	ВЫБОР 
	|		КОГДА (ПрименениеВычетов.Физлицо) ЕСТЬ NULL 
	|				ИЛИ ПрименениеВычетов.Физлицо В (&парамФизЛицаНеРезиденты) 
	|				ИЛИ НЕ ЕСТЬNULL(ОтработанноеВремя.ПредоставлятьВычет, ЛОЖЬ)
	|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
	|			ТОГДА 0 
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП, 0)
	|	КОНЕЦ КАК НалоговыйВычетЛичный,
	|	ВЫБОР 
	|		КОГДА (ПрименениеВычетов.Физлицо) ЕСТЬ NULL 
	|				ИЛИ ПрименениеВычетов.Физлицо В (&парамФизЛицаНеРезиденты) 
	|				ИЛИ НЕ ЕСТЬNULL(ОтработанноеВремя.ПредоставлятьВычет, ЛОЖЬ) 
	|			ТОГДА 0 
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП, 0) * ЕСТЬNULL(ВычетыФизлиц.КоличествоИждивенцев, 0)
	|	КОНЕЦ КАК НалоговыйВычетИждивенцев,
	|	ЕСТЬNULL(СведенияПредыдущегоМестаРаботы.ПримененныйВычет, 0) КАК НалоговыйВычетПредыдущегоМестаРаботы
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ВычетыФизлиц.Период) КАК ПериодСреза,
	|		Периоды.Физлицо КАК Физлицо,
	|		Периоды.Период КАК Период
	|	ИЗ
	|		(" + ПериодыТекст + ") КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
	|			ПО ВычетыФизлиц.Период <= Периоды.Период 
	|				И ВычетыФизлиц.Физлицо = Периоды.Физлицо
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Физлицо,
	|		Периоды.Период) КАК ИПННалоговыеВычетыФизлицСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
	|		ПО ВычетыФизлиц.Период = ИПННалоговыеВычетыФизлицСрезПоследних.ПериодСреза 
	|			И ВычетыФизлиц.Физлицо = ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + РасчетныеПоказателиТекст + ") КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименениеВычетовВОрганизацииТекст + ") КАК ПрименениеВычетов
	|		ПО ПрименениеВычетов.Физлицо = ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо 
	|				И ПрименениеВычетов.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботы
	|		ПО СведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик 
	|				И СведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода = ИПННалоговыеВычетыФизлицСрезПоследних.Период 
	|				И СведенияПредыдущегоМестаРаботы.ФизЛицо = ИПННалоговыеВычетыФизлицСрезПоследних.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ОтработанноеВремяТекст + ") КАК ОтработанноеВремя
	|		ПО ОтработанноеВремя.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период 
	|			И ОтработанноеВремя.ФизЛицо = ИПННалоговыеВычетыФизлицСрезПоследних.ФизЛицо";

	Запрос.Текст = ПрименяемыеВычетыТекст;

	// ПрименяемыеВычетыЗаГод
	//	Поля:
	//		Физлицо
	//		Период
	//		ВычетЛичныйЗаГод
	//		ВычетИждивенцевЗаГод
	//		ВычетПредыдущегоМестаРаботыЗаГод
	//		НалоговыйВычетЗаГодДляЛьготыУчастникаВОВ
	//		НалоговыйВычетЗаГодДляЛьготыПоИнвалидности
	//
	//	Описание:
	//	Выбирает по всем периодам года применяемые налоговые вычеты нарастающим итогом за год
	//
 	ПрименяемыеВычетыЗаГодТекст = 
	"ВЫБРАТЬ
	|	ВычетыПоПериодам.Физлицо КАК Физлицо,
	|	Периоды.Период КАК Период,
	|	СУММА(ВычетыПоПериодам.НалоговыйВычетЛичный) + СУММА(ВычетыПоПериодам.НалоговыйВычетИждивенцев) + СУММА(ВычетыПоПериодам.НалоговыйВычетПредыдущегоМестаРаботы) КАК НалоговыйВычетЗаГод,
	|	СУММА(ВЫБОР
	|			КОГДА ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ
	|					ИЛИ ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности
	|				ТОГДА ВычетыПоПериодам.НалоговыйВычетЛичный + ВычетыПоПериодам.НалоговыйВычетИждивенцев + ВычетыПоПериодам.НалоговыйВычетПредыдущегоМестаРаботы
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ЛьготируемыйНалоговыйВычетЗаГод
	|
	|ИЗ
	|	(" + ДатыПериодовГодаТекст + ") КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименяемыеВычетыТекст + ") КАК ВычетыПоПериодам
	|		ПО ВычетыПоПериодам.Период <= Периоды.Период 
	|			И ВычетыПоПериодам.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименяемыеЛьготыТекст + ") КАК ПрименяемыеЛьготы
	|			ПО ВычетыПоПериодам.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
	|				И ВычетыПоПериодам.Период = ПрименяемыеЛьготы.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВычетыПоПериодам.Физлицо,
	|	Периоды.Период";

	Запрос.Текст = ПрименяемыеВычетыЗаГодТекст;
	
	// ПериодыНачалаНалоговогоГодаФизЛиц
	//	Поля:
	//		Физлицо
	//		Период
	//		МесяцНачалаНалоговогоГода
	//
	//	Описание:
	//	Получает по всем периодам месяц начала налогового года для физлиц
	ПериодыНачалаНалоговогоГодаФизЛицТекст = 
	"ВЫБРАТЬ
	|	Периоды.ФизЛицо,
	|	Периоды.Период,
	|	МИНИМУМ(ПериодыНачалаНалоговогоГода.НачалоНалоговогоГода) КАК МесяцНачалаНалоговогоГода
	|
	|ИЗ
	|	(" + ПериодыТекст + ") КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				МИНИМУМ(СведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода) КАК НачалоНалоговогоГода,
	|				НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, ГОД) КАК НачалоКалендарногоГода,
	|				СведенияПредыдущегоМестаРаботы.ФизЛицо КАК ФизЛицо
	|			ИЗ
	|				РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботы
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|					ПО Работники.Физлицо = СведенияПредыдущегоМестаРаботы.ФизЛицо
	|			ГДЕ
	|				СведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик 
	|				И СведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
	|
	|			СГРУППИРОВАТЬ ПО
	|				НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, ГОД),
	|				СведенияПредыдущегоМестаРаботы.ФизЛицо
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|
	|			ВЫБРАТЬ
	|				МАКСИМУМ(РаботникиОрганизацийСрезПоследних.Период) КАК НачалоНалоговогоГода,
	|				&парамНачалоГода КАК НачалоКалендарногоГода,
	|				РаботникиОрганизацийСрезПоследних.Сотрудник.ФизЛицо КАК ФизЛицо
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|						&парамНачалоГода,
	|						Организация = &парамГоловнаяОрганизация
	|						И Сотрудник.ФизЛицо В (" + СписокФизЛицТекст + ")) КАК РаботникиОрганизацийСрезПоследних
	|			ГДЕ
	|				РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния <> &парамУволен
	|				И РаботникиОрганизацийСрезПоследних.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
	|
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиОрганизацийСрезПоследних.Сотрудник.ФизЛицо
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|
	|			ВЫБРАТЬ
	|				МИНИМУМ(РаботникиОрганизаций.Период) КАК НачалоНалоговогоГода,
	|				НАЧАЛОПЕРИОДА(РаботникиОрганизаций.Период, ГОД) КАК НачалоКалендарногоГода,
	|				РаботникиОрганизаций.Сотрудник.ФизЛицо
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|					ПО Работники.Физлицо = РаботникиОрганизаций.Сотрудник.ФизЛицо
	|			ГДЕ
	|				РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация
	|				И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
	|				И РаботникиОрганизаций.Период МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
	|				И РаботникиОрганизаций.ПричинаИзмененияСостояния = &парамПринят
	|
	|			СГРУППИРОВАТЬ ПО
	|				НАЧАЛОПЕРИОДА(РаботникиОрганизаций.Период, ГОД),
	|				РаботникиОрганизаций.Сотрудник.ФизЛицо
	|				
	|	) КАК ПериодыНачалаНалоговогоГода
	|		ПО Периоды.ФизЛицо = ПериодыНачалаНалоговогоГода.ФизЛицо
	|			И Периоды.Период МЕЖДУ ПериодыНачалаНалоговогоГода.НачалоКалендарногоГода И КОНЕЦПЕРИОДА(ПериодыНачалаНалоговогоГода.НачалоКалендарногоГода, ГОД)
	|			 И Периоды.Период >= НАЧАЛОПЕРИОДА(ПериодыНачалаНалоговогоГода.НачалоНалоговогоГода, МЕСЯЦ)
	|
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.ФизЛицо,
	|	Периоды.Период
	|";

	Запрос.Текст = ПериодыНачалаНалоговогоГодаФизЛицТекст;

	ТипЗначенияКоэффициентаПересчетаТекст = "ЧИСЛО(10, 2)";
	
	// ПрименяемыйКоэффициентПересчета
	//	Поля:
	//		Физлицо
	//		Период
	//		ЛьготаПоДоходу
	//
	//	Описание:
	//	Выбирает по всем периодам года льготы на которые имеет право физлицо
	ПрименяемыйКоэффициентПересчетаТекст = 
	"ВЫБРАТЬ
	|	Периоды.Период,
	|	Периоды.ФизЛицо,
	|	ВЫБОР 
	|		КОГДА Периоды.МесяцНачалаНалоговогоГода ЕСТЬ NULL 
	|			ТОГДА 1 
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА НЕ(РаботникиОрганизаций.Сотрудник ЕСТЬ NULL)
	|						И РаботникиОрганизаций.ПричинаИзмененияСостояния <> &парамУволен
	|					ТОГДА ВЫБОР 
	|							КОГДА Периоды.МесяцНачалаНалоговогоГода <= НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) 
	|								ТОГДА 12 / МЕСЯЦ(Периоды.Период) 
	|							ИНАЧЕ (13 - МЕСЯЦ(Периоды.МесяцНачалаНалоговогоГода)) / (МЕСЯЦ(Периоды.Период) - МЕСЯЦ(Периоды.МесяцНачалаНалоговогоГода) + 1) 
	|						  КОНЕЦ 
	|				ИНАЧЕ 1 
	|			  КОНЕЦ 
	|	КОНЕЦ КАК КоэффициентПересчета,
	|	РаботникиОрганизаций.ПричинаИзмененияСостояния,
	|	РаботникиОрганизаций.Период КАК ДатаПоследнегоДвижения
	|ИЗ
	|	(" + ПериодыНачалаНалоговогоГодаФизЛицТекст + ") КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				Периоды.Период,
	|				РаботникиОрганизаций.Сотрудник.ФизЛицо КАК ФизЛицо,
	|				МАКСИМУМ(ВЫБОР
	|							КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = &парамУволен 
	|								ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1)
	|							ИНАЧЕ РаботникиОрганизаций.Период
	|						 КОНЕЦ) КАК ДатаПоследнегоДвижения
	|       	ИЗ 
	|				(" + ДатыПериодовГодаТекст + ") КАК Периоды
	|
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|					ПО РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация
	|						И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
	|						И ВЫБОР
	|							КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = &парамУволен 
	|								ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1)
	|							ИНАЧЕ РаботникиОрганизаций.Период
	|						  КОНЕЦ <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|
	|			СГРУППИРОВАТЬ ПО
	|				Периоды.Период,
	|				РаботникиОрганизаций.Сотрудник.ФизЛицо) КАК ДатыПоследнихДвижений
	|		ПО Периоды.ФизЛицо = ДатыПоследнихДвижений.ФизЛицо
	|			И Периоды.Период = ДатыПоследнихДвижений.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ПО ДатыПоследнихДвижений.ФизЛицо = РаботникиОрганизаций.Сотрудник.ФизЛицо
	|			И РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация
	|			И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
	|			И ДатыПоследнихДвижений.ДатаПоследнегоДвижения = ВЫБОР
	|																КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = &парамУволен
	|																	ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1)
	|																ИНАЧЕ РаботникиОрганизаций.Период
	|			 								 				 КОНЕЦ 
	|";
	
	Запрос.Текст = ПрименяемыйКоэффициентПересчетаТекст;
	
	// облагаемый доход с начала года
	ПолеОблагаемыйДоходЗаГод = "ЕСТЬNULL(ДоходыЗаГод.ОблагаемыйДоходЗаГод, 0)";
	
	// право на налоговый вычет за год
	ПолеНалоговыйВычетЗаГод = "ЕСТЬNULL(ПрименяемыеВычетыЗаГод.НалоговыйВычетЗаГод, 0)";
	
	// сумма ранее примененных налоговых вычетов
	ПолеРанееПримененныйНалоговыйВычет = "ЕСТЬNULL(ДоходыЗаГод.ПримененныйВычетЗаГод, 0)";
	
	// право на льготу за год
	ПолеПрименяемаяЛьготаЗаГод = "ЕСТЬNULL(ДоходыЗаГод.ЛьготаПоДоходу, 0)";
	
	// сумма ранее примененной льготы
	ПолеРанееПримененнаяЛьгота = "ЕСТЬNULL(ДоходыЗаГод.ПримененнаяЛьготаЗаГод, 0)";
	
	// сумма исчисленных пенсионных взносов за год
	ПолеПенсионныеВзносыЗаГод = "ЕСТЬNULL(ОПВРасчетыСФондамиЗаГод.ИсчисленныеВзносыЗаГод, 0)";
	
	// облагаемая база по ИПН
	ПолеБазаДляИсчисленияИПН = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаГод + " - " + ПолеНалоговыйВычетЗаГод + " - " + ПолеПенсионныеВзносыЗаГод + " > 0
	|		ТОГДА " + ПолеОблагаемыйДоходЗаГод + " - " + ПолеНалоговыйВычетЗаГод + " - " + ПолеПенсионныеВзносыЗаГод + "
	|	ИНАЧЕ 0
	|КОНЕЦ";
	
	// льготируемый облагаемый доход с начала года
	ПолеЛьготируемыйОблагаемыйДоходЗаГод = "ЕСТЬNULL(ДоходыЗаГод.ЛьготируемыйОблагаемыйДоходЗаГод, 0)";

	// налоговый вычет за год, учитываемый при предоставлении льготы
	ПолеЛьготируемыйНалоговыйВычетЗаГод = "ЕСТЬNULL(ПрименяемыеВычетыЗаГод.ЛьготируемыйНалоговыйВычетЗаГод, 0)";

	// сумма исчисленных пенсионных взносов за год, учитываемая при предоставлении льготы
	ПолеЛьготируемыеПенсионныеВзносыЗаГод = "ЕСТЬNULL(ОПВРасчетыСФондамиЗаГод.ЛьготируемыеИсчисленныеВзносыЗаГод, 0)";
	
	// льготируемая облагаемая база по ИПН
	ПолеЛьготируемаяБазаДляИсчисленияИПН = 
	"ВЫБОР
	|	КОГДА " + ПолеЛьготируемыйОблагаемыйДоходЗаГод + " - " + ПолеЛьготируемыйНалоговыйВычетЗаГод + " - " + ПолеЛьготируемыеПенсионныеВзносыЗаГод + " > 0
	|	ТОГДА " + ПолеЛьготируемыйОблагаемыйДоходЗаГод + " - " + ПолеЛьготируемыйНалоговыйВычетЗаГод + " - " + ПолеЛьготируемыеПенсионныеВзносыЗаГод + "
	|	ИНАЧЕ 0
	|КОНЕЦ";
	
	// примененная льгота за год
	ПолеПримененнаяЛьгота = 
	"ВЫБОР
	|	КОГДА " + ПолеПрименяемаяЛьготаЗаГод + " > " + ПолеЛьготируемаяБазаДляИсчисленияИПН + " 
	|		ТОГДА " + ПолеЛьготируемаяБазаДляИсчисленияИПН + " 
	|	ИНАЧЕ ВЫБОР 
	|			КОГДА " + ПолеЛьготируемаяБазаДляИсчисленияИПН + " > 0 
	|				ТОГДА " + ПолеПрименяемаяЛьготаЗаГод + " 
	|			ИНАЧЕ 0 
	|		  КОНЕЦ 
	|КОНЕЦ";
		
	// сумма ранее исчисленного налога
	ПолеРанееНалогИсчисленный = "ЕСТЬNULL(ИПНРасчетыСБюджетомЗаГод.ИсчисленныйНалогЗаГод, 0)";
	
	// коэффициент пересчета
	ПолеКоэффициентПересчета = "(ВЫРАЗИТЬ(ЕСТЬNULL(ПрименяемыйКоэффициентПересчета.КоэффициентПересчета, 1) КАК " + ТипЗначенияКоэффициентаПересчетаТекст + "))";
	
	// среднемесячный доход за квартал
	ПолеСреднемесячныйДоходЗаКвартал =
	"ВЫБОР
	|	КОГДА (ДоходыЗаКвартал.РегистрировалсяДоходЗаПериод) ЕСТЬ NULL
	|	ТОГДА 0
	|	ИНАЧЕ ДоходыЗаКвартал.ПолученныйДоходЗаКвартал / ДоходыЗаКвартал.РегистрировалсяДоходЗаПериод
	|КОНЕЦ";
	
	// среднемесячный размер минимальной заработной платы
	ПолеСреднемесячныйРазмерМЗПЗаКвартал =
	"ВЫБОР
	|	КОГДА (ДоходыЗаКвартал.РегистрировалсяДоходЗаПериод) ЕСТЬ NULL
	|	ТОГДА 0
	|	ИНАЧЕ ДоходыЗаКвартал.РазмерМЗПЗаКвартал / ДоходыЗаКвартал.РегистрировалсяДоходЗаПериод
	|КОНЕЦ";
	
	// облагаемая сумма 
	ПолеОблагаемаяСумма = 
	"(ВЫБОР
	|		КОГДА МАКСИМУМ(БазаДляИсчисленияИПН.ПримененнаяЛьгота) > СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОблагаемаяСумма ИНАЧЕ 0 КОНЕЦ)
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОблагаемаяСумма ИНАЧЕ 0 КОНЕЦ) - МАКСИМУМ(БазаДляИсчисленияИПН.ПримененнаяЛьгота)
	|КОНЕЦ) * " + ПолеКоэффициентПересчета;
	
	// применение ставки "0"
	ПолеПрименятьНулевуюСтавку = 
	"ВЫБОР 
	|	КОГДА " + ПолеОблагаемаяСумма + " <= ДоходыЗаКвартал.РазмерМЗП * 12 И " + ПолеСреднемесячныйДоходЗаКвартал + " <= " + ПолеСреднемесячныйРазмерМЗПЗаКвартал + "
	|	ТОГДА 1
	|	ИНАЧЕ 0
	|КОНЕЦ";
	
	// БазаДляИсчисленияИПН
	//	Поля:
	//		Период
	//		ФизЛицо
	//      ОблагаемаяСумма
	//      ПримененнаяЛьгота
	//
	//	Описание:
	//	Получает облагаемую базу для исчисления ИПН с начала года для каждого месяца периода и примененную льготу 
	БазаДляИсчисленияИПНТекст = 
	"ВЫБРАТЬ 
	|	ДоходыЗаГод.Период,
	|	ДоходыЗаГод.ФизЛицо,
	|	" + ПолеБазаДляИсчисленияИПН + " КАК ОблагаемаяСумма,
	|	" + ПолеПримененнаяЛьгота + " КАК ПримененнаяЛьгота,
	|	" + ПолеНалоговыйВычетЗаГод + " КАК ПримененныйВычет
	|ИЗ
	|	(" + ДоходыЗаГодТекст + ") КАК ДоходыЗаГод
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименяемыеВычетыЗаГодТекст + ") КАК ПрименяемыеВычетыЗаГод
	|		ПО ДоходыЗаГод.Период = ПрименяемыеВычетыЗаГод.Период 
	|			И ДоходыЗаГод.ФизЛицо = ПрименяемыеВычетыЗаГод.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ОПВРасчетыСФондамиЗаГодТекст + ") КАК ОПВРасчетыСФондамиЗаГод
	|		ПО ДоходыЗаГод.Период = ОПВРасчетыСФондамиЗаГод.Период 
	|			И ДоходыЗаГод.ФизЛицо = ОПВРасчетыСФондамиЗаГод.ФизЛицо
	|";

	Запрос.Текст = БазаДляИсчисленияИПНТекст;

	// БазаДляИсчисленияИПН
	//	Поля:
	//		Период
	//		ФизЛицо
	//      ОблагаемаяСумма
	//      ПримененнаяЛьгота
	//
	//	Описание:
	//	Получает облагаемую базу для исчисления ИПН с учетом коэффициента пересчета
	БазаДляИсчисленияИПНТекст = 
	"ВЫБРАТЬ 
	|	Периоды.Период,
	|	Периоды.ФизЛицо,
	|	" + ПолеОблагаемаяСумма + " КАК ОблагаемаяСумма,
	|	" + ПолеКоэффициентПересчета + " КАК КоэффициентПересчета,	
	|	ВЫБОР // применяем нулевую ставку только для работников
	|		КОГДА ПрименяемыйКоэффициентПересчета.ПричинаИзмененияСостояния ЕСТЬ NULL
	|				ИЛИ (ПрименяемыйКоэффициентПересчета.ПричинаИзмененияСостояния = &парамУволен
	|						И ДОБАВИТЬКДАТЕ(ПрименяемыйКоэффициентПересчета.ДатаПоследнегоДвижения, ДЕНЬ, -1) < Периоды.Период)
	|			ТОГДА 0
	|		ИНАЧЕ " + ПолеПрименятьНулевуюСтавку + " 
	|	КОНЕЦ КАК ПрименятьНулевуюСтавку,
	|	МАКСИМУМ(БазаДляИсчисленияИПН.ПримененнаяЛьгота) КАК ПримененнаяЛьгота,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ПримененныйВычет ИНАЧЕ 0 КОНЕЦ) КАК ПримененныйВычет
	|ИЗ
	|	(" + ПериодыТекст + ") КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + БазаДляИсчисленияИПНТекст + ") КАК БазаДляИсчисленияИПН
	|		ПО БазаДляИсчисленияИПН.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, ГОД)
	|			И БазаДляИсчисленияИПН.Период <= Периоды.Период
	|			И Периоды.ФизЛицо = БазаДляИсчисленияИПН.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименяемыйКоэффициентПересчетаТекст + ") КАК ПрименяемыйКоэффициентПересчета
	|		ПО Периоды.ФизЛицо = ПрименяемыйКоэффициентПересчета.ФизЛицо
	|			И Периоды.Период = ПрименяемыйКоэффициентПересчета.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ДоходыЗаКварталТекст + ") КАК ДоходыЗаКвартал
	|		ПО Периоды.Период = ДоходыЗаКвартал.Период 
	|			И Периоды.ФизЛицо = ДоходыЗаКвартал.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	Периоды.ФизЛицо,
	|	ПрименяемыйКоэффициентПересчета.ФизЛицо,
	|	ПрименяемыйКоэффициентПересчета.ПричинаИзмененияСостояния,
	|	ПрименяемыйКоэффициентПересчета.ДатаПоследнегоДвижения,
	|	ПрименяемыйКоэффициентПересчета.КоэффициентПересчета,
	|	ДоходыЗаКвартал.РегистрировалсяДоходЗаПериод,
	|	ДоходыЗаКвартал.ПолученныйДоходЗаКвартал,
	|	ДоходыЗаКвартал.РазмерМЗПЗаКвартал,
	|	ДоходыЗаКвартал.РазмерМЗП
	|";	
	
	Запрос.Текст = БазаДляИсчисленияИПНТекст;
	
	// БазаДляИсчисленияИПН
	//	Поля:
	//		Период
	//		ФизЛицо
	//      ОблагаемаяСумма
	//      ПримененнаяЛьгота
	//
	//	Описание:
	//	Получает облагаемую базу для исчисления ИПН с учетом применения нулевой ставки в предыдущих кварталах
	БазаДляИсчисленияИПНТекст = 
	"ВЫБРАТЬ 
	|	Периоды.Период,
	|	БазаДляИсчисленияИПН.ФизЛицо,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОблагаемаяСумма ИНАЧЕ 0 КОНЕЦ) КАК ОблагаемаяСумма,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.КоэффициентПересчета ИНАЧЕ 0 КОНЕЦ) КАК КоэффициентПересчета,
	|
	|	ВЫБОР // если во всех предыдущих кварталах применяли нулевую ставку
	|		КОГДА СУММА(ВЫБОР // применение нулевой ставки в последних месяца каждого предшествующего квартала
	|						КОГДА КОНЕЦПЕРИОДА(БазаДляИсчисленияИПН.Период, КВАРТАЛ) < Периоды.Период
	|								И БазаДляИсчисленияИПН.Период = НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(БазаДляИсчисленияИПН.Период, КВАРТАЛ), МЕСЯЦ) 
	|							ТОГДА БазаДляИсчисленияИПН.ПрименятьНулевуюСтавку
	|						ИНАЧЕ 0
	|					КОНЕЦ) = СУММА(ВЫБОР // количество предшествующих кварталов
	|										КОГДА КОНЕЦПЕРИОДА(БазаДляИсчисленияИПН.Период, КВАРТАЛ) < Периоды.Период 
	|												И БазаДляИсчисленияИПН.Период = НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(БазаДляИсчисленияИПН.Период, КВАРТАЛ), МЕСЯЦ)
	|											ТОГДА 1
	|										ИНАЧЕ 0
	|									КОНЕЦ) 
	|			ТОГДА СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ПрименятьНулевуюСтавку ИНАЧЕ 0 КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПрименятьНулевуюСтавку,
	|	МАКСИМУМ(БазаДляИсчисленияИПН.ПримененнаяЛьгота) КАК ПримененнаяЛьгота,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ПримененныйВычет ИНАЧЕ 0 КОНЕЦ) КАК ПримененныйВычет
	|ИЗ
	|	(" + ДатыПериодовГодаТекст + ") КАК Периоды
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + БазаДляИсчисленияИПНТекст + ") КАК БазаДляИсчисленияИПН
	|		ПО БазаДляИсчисленияИПН.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, ГОД)
	|			И БазаДляИсчисленияИПН.Период <= Периоды.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	БазаДляИсчисленияИПН.ФизЛицо
	|
	|ИМЕЮЩИЕ Периоды.Период <= МАКСИМУМ(БазаДляИсчисленияИПН.Период)
	|";	
	
	Запрос.Текст = БазаДляИсчисленияИПНТекст;
	
	// ШкалаСтавокИПНПоПериодам
	//	Поля:
	//		Период
	//		СуммаДоходаС
	//      СуммаДоходаПо
	//      Ставка
	//      СуммаНалогаПредыдущегоПредела
	//
	//	Описание:
	//	Выбирает по всем периодам года шкалы ставок для исчисления ИПН
	ШкалаСтавокИПНПоПериодамТекст = 
	"ВЫБРАТЬ
	|	ИПНШкалаСтавокСрезПоследних.Период,
	|	СведенияОСтавкахИПНиСН.СуммаДоходаС,
	|	СведенияОСтавкахИПНиСН.СуммаДоходаПо,
	|	СведенияОСтавкахИПНиСН.Ставка,
	|	СведенияОСтавкахИПНиСН.СуммаНалогаПредыдущегоПредела
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(СтавкиИПН.Период) КАК ПериодСреза,
	|		Периоды.Период КАК Период
	|	ИЗ
	|		(" + ДатыПериодовГодаТекст + ") КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахИПНиСН КАК СтавкиИПН
	|		ПО СтавкиИПН.Период <= Периоды.Период 
	|			И СтавкиИПН.ВидСтавокИПНиСН = &парамПоИсчислениюИПН
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК ИПНШкалаСтавокСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахИПНиСН КАК СведенияОСтавкахИПНиСН
	|		ПО СведенияОСтавкахИПНиСН.Период = ИПНШкалаСтавокСрезПоследних.ПериодСреза 
	|			И СведенияОСтавкахИПНиСН.ВидСтавокИПНиСН = &парамПоИсчислениюИПН";
	
	Запрос.Текст = ШкалаСтавокИПНПоПериодамТекст;
	
	// ИсчисленныйИПН	
	//	Поля:
	//		Физлицо
	//		Период
	//		НалогИсчисленный
	//		НалогУжеИсчисленный
	//		ПримененныйВычет
	//		ПримененняЛьгота
	//	
	//	Описание:
	//	Выбирает применяемые вычеты нарастающим итогом, доход нарастающим итогом и 
	//	исчисленный налог нарастающим итогом и производит расчет налога и примененных вычетов
	ИсчисленныйИПНТекст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БазаДляИсчисленияИПН.ФизЛицо,
	|	БазаДляИсчисленияИПН.Период,
	|	ВЫРАЗИТЬ((ЕСТЬNULL(СтавкиИПН.СуммаНалогаПредыдущегоПредела, 0) + (БазаДляИсчисленияИПН.ОблагаемаяСумма - ЕСТЬNULL(СтавкиИПН.СуммаДоходаС, 0)) * ВЫБОР КОГДА БазаДляИсчисленияИПН.ПрименятьНулевуюСтавку > 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(СтавкиИПН.Ставка, 0) КОНЕЦ / 100) / БазаДляИсчисленияИПН.КоэффициентПересчета КАК " + ТипЗначенияИПНТекст + ") КАК НалогИсчисленный,
	|	" + ПолеРанееНалогИсчисленный + " КАК РанееНалогИсчисленный,
	|   БазаДляИсчисленияИПН.ПримененныйВычет - " + ПолеРанееПримененныйНалоговыйВычет + " КАК ПримененныйВычет,
	|	БазаДляИсчисленияИПН.ПримененнаяЛьгота - " + ПолеРанееПримененнаяЛьгота + " КАК ПримененнаяЛьгота
	|ИЗ
	|	(" + БазаДляИсчисленияИПНТекст + ") КАК БазаДляИсчисленияИПН
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ШкалаСтавокИПНПоПериодамТекст + ") КАК СтавкиИПН
	|		ПО БазаДляИсчисленияИПН.Период = СтавкиИПН.Период 
	|			И БазаДляИсчисленияИПН.ОблагаемаяСумма > СтавкиИПН.СуммаДоходаС 
	|			И БазаДляИсчисленияИПН.ОблагаемаяСумма <= СтавкиИПН.СуммаДоходаПо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ИПНРасчетыСБюджетомЗаГодТекст + ") КАК ИПНРасчетыСБюджетомЗаГод
	|		ПО БазаДляИсчисленияИПН.Период = ИПНРасчетыСБюджетомЗаГод.Период 
	|			И БазаДляИсчисленияИПН.ФизЛицо = ИПНРасчетыСБюджетомЗаГод.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ДоходыЗаГодТекст + ") КАК ДоходыЗаГод
	|		ПО БазаДляИсчисленияИПН.Период = ДоходыЗаГод.Период 
	|			И БазаДляИсчисленияИПН.ФизЛицо = ДоходыЗаГод.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	БазаДляИсчисленияИПН.ФизЛицо, 
	|	БазаДляИсчисленияИПН.Период
	|";
	
	Запрос.Текст = ИсчисленныйИПНТекст;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеДляРасчетаИПНДо2007()

// Получить данные для расчета ИПН по фиксированной ставке
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей ИПН
//
// Возвращаемое значение:
//  Выборка из результата запроса
//
Функция ПолучитьДанныеДляРасчетаИПНПосле2007(ПервыйМесяцНалоговогоПериода, ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, Знач СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНалогоплательщик", 			   Налогоплательщик);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", 		   ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 		   НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамРегистратор", 				   Регистратор);
	Запрос.УстановитьПараметр("парамПриход",					   ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  				   Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамИнвалид",				   	   Перечисления.ОтношениеКИнвалидности.Инвалид);
	Запрос.УстановитьПараметр("парамТретьяГруппа",				   "III");
	Запрос.УстановитьПараметр("парамВидПлатежа", 				   Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	Запрос.УстановитьПараметр("парамВнутреннееСовместительство",   Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	Запрос.УстановитьПараметр("парамПринят", 		   			   Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	Запрос.УстановитьПараметр("парамУволен", 		   			   Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("парамПоИсчислениюИПН",			   Перечисления.ВидыСтавокИПНиСН.ПоИсчислениюИПН);
	Запрос.УстановитьПараметр("парамКонецМесяцаНалоговогоПериода", Макс(КонецМесяца(ПоследнийМесяцНалоговогоПериода), '20070101235959'));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	   КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачалоГода",				   Макс(НачалоГода(ПервыйМесяцНалоговогоПериода), '20070101'));
	Запрос.УстановитьПараметр("парамКонецГода",   				   Макс(КонецГода(ПоследнийМесяцНалоговогоПериода), '20071231235959'));
	Запрос.УстановитьПараметр("парамНеОблагаетсяЦеликом",		   Справочники.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом);
	Запрос.УстановитьПараметр("парамДатаНачалаРасчетаПоФиксСтавке",	'20070101');

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛицо
	| 
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
	
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";
	
	
	// Периоды
	// Таблица список периодов-физлиц по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.Период КАК Период,
	|	Периоды.ФизЛицо КАК Физлицо
	|
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		ИПНСведенияОДоходах.ФизЛицо КАК Физлицо
	|	ИЗ
	|		РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК Работники
	|			ПО Работники.Физлицо = ИПНСведенияОДоходах.ФизЛицо
	|
	|	ГДЕ
	|		ИПНСведенияОДоходах.ПериодРегистрации >= &парамНачалоГода И
	|		ИПНСведенияОДоходах.ПериодРегистрации <= &парамПериодРегистрации И
	|		ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик И
	|		ИПНСведенияОДоходах.Период >= &парамДатаНачалаРасчетаПоФиксСтавке
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(СведенияПредыдущегоМеста.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
	|		СведенияПредыдущегоМеста.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМеста
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК Работники
	|			ПО Работники.Физлицо = СведенияПредыдущегоМеста.ФизЛицо
	|
	|	ГДЕ
	|		СведенияПредыдущегоМеста.МесяцНалоговогоПериода >= &парамНачалоГода И
	|		СведенияПредыдущегоМеста.МесяцНалоговогоПериода <= &парамПериодРегистрации И
	|		СведенияПредыдущегоМеста.Налогоплательщик = &парамНалогоплательщик И
	|		СведенияПредыдущегоМеста.МесяцНалоговогоПериода >= &парамДатаНачалаРасчетаПоФиксСтавке) КАК Периоды
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.Период,
	|	Периоды.ФизЛицо
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТПериоды";

	// Составим текст запроса для вычисления всех месяцев периода
	ДатыПериодовГодаТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.Период
	|
	|ПОМЕСТИТЬ ВТДатыПериодовГода
	|ИЗ
	|	" + ПериодыТекст + " КАК Периоды
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|";
	
	Запрос.Текст = ДатыПериодовГодаТекст;
	Запрос.Выполнить();
	ДатыПериодовГодаТекст = "ВТДатыПериодовГода";

	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-нерезидентов
	ФизлицаНеРезидентыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонецГода, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК)";

	Запрос.Текст = ФизлицаНеРезидентыТекст;
	Запрос.УстановитьПараметр("парамФизлицаНеРезиденты", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо"));

	// РасчетныеПоказатели
	//	Поля:
	//		Период
	//		РазмерМРП
	//		РазмерМЗП
	//
	//	Описание:
	// Выбирает размер месячного расчетного показателя по периодам
	РасчетныеПоказателиТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП, 0) КАК РазмерМРП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
	|
	|ПОМЕСТИТЬ ВТРасчетныеПоказатели
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ДатыПериодовГодаТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РасчетныеПоказателиТекст;
	Запрос.Выполнить();
	РасчетныеПоказателиТекст = "ВТРасчетныеПоказатели";

	// ПрименяемыеЛьготы
	//	Поля:
	//		Физлицо
	//		Период
	//		ПрименяетсяЛьготаУчастникаВОВ
	//		ПрименяетсяЛьготаПоИнвалидности
	//		ЛьготаПоДоходу
	//
	//	Описание:
	//	Выбирает по всем периодам года льготы на которые имеет право физлицо
	ПрименяемыеЛьготыТекст = 
	"ВЫБРАТЬ
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период,
	|
	|	ВЫБОР
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > 0 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПрименяетсяЛьготаУчастникаВОВ,
	|
	|	ВЫБОР
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаПоИнвалидности > 0 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПрименяетсяЛьготаПоИнвалидности,
	|
	|	ВЫБОР 
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
	|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ 
	|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
	|	КОНЕЦ КАК ЛьготаПоДоходу
	|
	|ПОМЕСТИТЬ ВТПрименяемыеЛьготы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИПНЛьготыФизлицСрезПоследних.Физлицо КАК Физлицо,
	|		ИПНЛьготыФизлицСрезПоследних.Период КАК Период,
	|		ВЫБОР 
	|			КОГДА (ЛьготыФизлицПоИнвалидности.Физлицо) ЕСТЬ NULL 
	|				ТОГДА 0 
	|			ИНАЧЕ ВЫБОР 
	|					КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|							И (ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности) = &парамТретьяГруппа 
	|						ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
	|					ИНАЧЕ 99999999 
	|				  КОНЕЦ 
	|		КОНЕЦ КАК ЛьготаПоИнвалидности,
	|		ВЫБОР 
	|			КОГДА (ЛьготыФизлицУчастниковВОВ.Физлицо) ЕСТЬ NULL 
	|				ТОГДА 0 
	|			ИНАЧЕ 99999999 
	|		КОНЕЦ КАК ЛьготаУчастникаВОВ
	|		
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МАКСИМУМ(ЛьготыФизлицПоИнвалидности.Период) КАК ПериодСрезаИнвалидность,
	|			МАКСИМУМ(ЛьготыФизлицУчастниковВОВ.Период) КАК ПериодСрезаУчастникиВОВ,
	|			Периоды.Физлицо КАК Физлицо,
	|			Периоды.Период КАК Период
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|				ПО ЛьготыФизлицПоИнвалидности.Период <= Периоды.Период 
	|					И ЛьготыФизлицПоИнвалидности.Физлицо = Периоды.Физлицо
	|					И (ЛьготыФизЛицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	|						ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизЛицПоИнвалидности.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|				ПО ЛьготыФизлицУчастниковВОВ.Период <= Периоды.Период 
	|					И ЛьготыФизлицУчастниковВОВ.Физлицо = Периоды.Физлицо
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Физлицо,
	|			Периоды.Период) КАК ИПНЛьготыФизлицСрезПоследних
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|			ПО ЛьготыФизлицПоИнвалидности.Период = ИПНЛьготыФизлицСрезПоследних.ПериодСрезаИнвалидность 
	|				И ЛьготыФизлицПоИнвалидности.Физлицо = ИПНЛьготыФизлицСрезПоследних.Физлицо
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|			ПО ЛьготыФизлицУчастниковВОВ.Период = ИПНЛьготыФизлицСрезПоследних.ПериодСрезаУчастникиВОВ 
	|				И ЛьготыФизлицУчастниковВОВ.Физлицо = ИПНЛьготыФизлицСрезПоследних.Физлицо
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
	|			ПО РасчетныеПоказатели.Период = ИПНЛьготыФизлицСрезПоследних.Период) КАК ИПНЛьготыФизлиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период
	|";
	
	Запрос.Текст = ПрименяемыеЛьготыТекст;
	Запрос.Выполнить();
	ПрименяемыеЛьготыТекст = "ВТПрименяемыеЛьготы";	
	
	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//		ПримененныйВычетОборот
	//		ПримененнаяЛьготаОборот
	//
	//	Описание:
	// Выбирает общую сумму доходов, облагаемые налогом доходы, примененые вычеты и льготы за весь год по физлицам из СписокФизлиц
	ДоходыТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	СУММА(ИПНСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	СУММА(ВЫБОР
	|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения = &парамНеОблагаетсяЦеликом
	|				ТОГДА ИПНСведенияОДоходах.СуммаДоходаОборот
	|			КОГДА НЕ ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН
	|				ТОГДА ИПНСведенияОДоходах.СуммаВычетаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНеоблагаемогоДохода,
	|	СУММА(ВЫБОР
	|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения <> &парамНеОблагаетсяЦеликом
	|				ТОГДА ИПНСведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	СУММА(ИПНСведенияОДоходах.СуммаВычетаОборот) КАК СуммаВычетаОборот,
	|	СУММА(ИПНСведенияОДоходах.ПримененныйВычетОборот) КАК ПримененныйВычетОборот,
	|	СУММА(ИПНСведенияОДоходах.ПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаОборот,
	|	0 КАК ПримененнаяЛьготаНаПредыдущемМестеРаботыОборот
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах.Обороты(
	|			&парамНачалоГода,
	|			&парамКонецМесяцаНалоговогоПериода,
	|			МЕСЯЦ,
	|			Налогоплательщик = &парамНалогоплательщик
	|				И ПериодРегистрации <= &парамПериодРегистрации
	|				И ФизЛицо В
	|					(ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНСведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, МЕСЯЦ),
	|	СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	СУММА(СведенияПредыдущегоМестаРаботыФизЛиц.ПримененнаяЛьгота),
	|	СУММА(СведенияПредыдущегоМестаРаботыФизЛиц.ПримененнаяЛьгота)
	|ИЗ
	|	РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период";

	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТДоходы";	

	ТипЗначенияИПНТекст = "ЧИСЛО(10, 2)";
	
	// ДоходыЗаГод 
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//		ОблагаемыйДоходЗаГод
	//		ЛьготируемыйОблагаемыйДоходЗаГод
	//		ЛьготаПоДоходу
	//
	//	Описание:
	//	Выбирает по всем периодам с начала года сумму дохода нарастающим итогом за год
	ДоходыЗаГодТекст = "
	|ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	Периоды.Физлицо КАК ФизЛицо,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = ИПНОбороты.Период ТОГДА ИПНОбороты.СуммаДоходаВсего ИНАЧЕ 0 КОНЕЦ) КАК СуммаДоходаВсего,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = ИПНОбороты.Период ТОГДА ИПНОбороты.СуммаНеоблагаемогоДохода ИНАЧЕ 0 КОНЕЦ) КАК СуммаНеоблагаемогоДохода,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = ИПНОбороты.Период ТОГДА ИПНОбороты.СуммаДоходаОборот - ИПНОбороты.СуммаВычетаОборот ИНАЧЕ 0 КОНЕЦ) КАК ОблагаемыйДоход,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = ИПНОбороты.Период ТОГДА ИПНОбороты.ПримененныйВычетОборот ИНАЧЕ 0 КОНЕЦ) КАК ПримененныйВычет,
	|	СУММА(ИПНОбороты.ПримененныйВычетОборот) КАК ПримененныйВычетЗаГод,
	|	СУММА(ИПНОбороты.ПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаЗаГод,
	|	СУММА(ИПНОбороты.ПримененнаяЛьготаОборот - ИПНОбороты.ПримененнаяЛьготаНаПредыдущемМестеРаботыОборот) КАК ЛьготаПримененнаяВПредыдущихМесяцах,
	|	СУММА(ИПНОбороты.ПримененнаяЛьготаНаПредыдущемМестеРаботыОборот) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = ПрименяемыеЛьготы.Период И (ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ ИЛИ ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ПрименяетсяЛьготаВМесяце,
	|	СУММА(ИПНОбороты.СуммаДоходаОборот - ИПНОбороты.СуммаВычетаОборот) КАК ОблагаемыйДоходЗаГод,
	|	СУММА(ВЫБОР
	|			КОГДА ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ
	|					ИЛИ ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности
	|				ТОГДА ИПНОбороты.СуммаДоходаОборот - ИПНОбороты.СуммаВычетаОборот
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ЛьготируемыйОблагаемыйДоходЗаГод,
	|	МАКСИМУМ(ПрименяемыеЛьготы.ЛьготаПоДоходу) КАК ЛьготаПоДоходу,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = ПрименяемыеЛьготы.Период И ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ПризнакЛьготаУчастникаВОВ,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = ПрименяемыеЛьготы.Период И ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК ПризнакЛьготаПоИнвалидности
	|		
	|ПОМЕСТИТЬ ВТДоходыЗаГод
	|ИЗ
	|	" + ПериодыТекст + " КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыТекст + " КАК ИПНОбороты
	|		ПО Периоды.Период >= ИПНОбороты.Период 
	|			И ИПНОбороты.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
	|			И Периоды.Физлицо = ИПНОбороты.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеЛьготыТекст + " КАК ПрименяемыеЛьготы
	|		ПО ИПНОбороты.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
	|			И ИПНОбороты.Период = ПрименяемыеЛьготы.Период
    |
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	Периоды.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.Период,
	|	Периоды.Физлицо";

	Запрос.Текст = ДоходыЗаГодТекст;
	Запрос.Выполнить();
	ДоходыЗаГодТекст = "ВТДоходыЗаГод";

	// ИПНРасчетыСБюджетом
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныйНалог
	//		ПримененныеВычетыЛичные - уже примененные личные налоговые вычеты по ИПН
	//		ПримененнаяЛьгота - уже примененная льгота по ИПН
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом и данные регистра
	//  СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
	ИПНРасчетыСБюджетомТекст = "
	|ВЫБРАТЬ
	|	ИПНРасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ИПНРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|	СУММА(ИПНРасчетыСБюджетом.Налог) КАК ИсчисленныйНалог,
	|	ИПНРасчетыСБюджетом.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТИПНРасчетыСБюджетом
	|ИЗ
	|	РегистрНакопления.ИПНРасчетыСБюджетом КАК ИПНРасчетыСБюджетом
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ИПНРасчетыСБюджетом.ФизЛицо
	|
	|ГДЕ
	|	ИПНРасчетыСБюджетом.МесяцНалоговогоПериода >= &парамНачалоГода И
	|	ИПНРасчетыСБюджетом.МесяцНалоговогоПериода <= &парамКонецМесяцаНалоговогоПериода И
	|	ИПНРасчетыСБюджетом.Налогоплательщик = &парамНалогоплательщик И
	|	" + ?(НЕ ЭтоРасчетПервойПоловиныМесяца, "ИПНРасчетыСБюджетом.Регистратор <> &парамРегистратор И", "") + "
	|	ИПНРасчетыСБюджетом.Период <= &парамКонецПериодаРегистрации И
	|	ИПНРасчетыСБюджетом.ВидДвижения = &парамПриход И 
	|	ИПНРасчетыСБюджетом.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНРасчетыСБюджетом.МесяцНалоговогоПериода,
	|	ИПНРасчетыСБюджетом.ФизЛицо,
	|	ИПНРасчетыСБюджетом.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцНалоговогоПериода,
	|	ФизЛицо
	|";

	Запрос.Текст = ИПНРасчетыСБюджетомТекст;
	Запрос.Выполнить();
	ИПНРасчетыСБюджетомТекст = "ВТИПНРасчетыСБюджетом";

	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы для СписокФизлиц
	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныеВзносы
	|
	|ПОМЕСТИТЬ ВТОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачалоГода И
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонецМесяцаНалоговогоПериода И
	|	ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ОПВРасчетыСФондами.ВидДвижения = &парамПриход И
	|	ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И
	|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ОПВРасчетыСФондами.ФизЛицо
	|";

	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТОПВРасчетыСФондами";

	// ОПВРасчетыСФондамиЗаГод
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносы
	//		ИсчисленныеВзносыЗаГод
	//		ЛьготируемыеИсчисленныеВзносыЗаГод
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы нарастающим итогом за год
	ОПВРасчетыСФондамиЗаГодТекст = 
	"ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = ОПВРасчетыСФондами.МесяцНалоговогоПериода ТОГДА ОПВРасчетыСФондами.ИсчисленныеВзносы ИНАЧЕ 0 КОНЕЦ) КАК ИсчисленныеВзносы,
	|	СУММА(ОПВРасчетыСФондами.ИсчисленныеВзносы) КАК ИсчисленныеВзносыЗаГод,
	|	СУММА(ВЫБОР
	|			КОГДА ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ
	|					ИЛИ ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности
	|				ТОГДА ОПВРасчетыСФондами.ИсчисленныеВзносы
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ЛьготируемыеИсчисленныеВзносыЗаГод
	|	
	|ПОМЕСТИТЬ ВТОПВРасчетыСФондамиЗаГод
	|ИЗ
	|	" + ДатыПериодовГодаТекст + " КАК Периоды
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ОПВРасчетыСФондамиТекст + " КАК ОПВРасчетыСФондами
	|		ПО Периоды.Период >= ОПВРасчетыСФондами.МесяцНалоговогоПериода 
	|			И ОПВРасчетыСФондами.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеЛьготыТекст + " КАК ПрименяемыеЛьготы
	|			ПО ОПВРасчетыСФондами.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
	|				И ОПВРасчетыСФондами.МесяцНалоговогоПериода = ПрименяемыеЛьготы.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.Период,
	|	ОПВРасчетыСФондами.ФизЛицо
	|";
	
	Запрос.Текст = ОПВРасчетыСФондамиЗаГодТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиЗаГодТекст = "ВТОПВРасчетыСФондамиЗаГод";	
	
	// ПрименениеВычетовВОрганизации
	//	Поля:
	//		Физлицо,
	//		Период
	//
	// Описание:
	//	Выбирает список физлиц + периоды в которые применяются налоговые вычеты по 
	//	заданной организации
	ПрименениеВычетовВОрганизацииТекст = 
	"ВЫБРАТЬ
	|	ИПНПрименениеВычетовСрезПоследних.Физлицо КАК Физлицо,
	|	ИПНПрименениеВычетовСрезПоследних.Период КАК Период
	|
	|ПОМЕСТИТЬ ВТПрименениеВычетовВОрганизации
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ИПНПрименениеВычетов.Период) КАК ПериодСреза,
	|		Периоды.Физлицо КАК Физлицо,
	|		Периоды.Период КАК Период
	|	ИЗ
	|		"+ПериодыТекст+" КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|			ПО Периоды.Период >= ИПНПрименениеВычетов.Период 
	|				И ИПНПрименениеВычетов.Физлицо = Периоды.Физлицо
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Физлицо,
	|		Периоды.Период) КАК ИПНПрименениеВычетовСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|		ПО ИПНПрименениеВычетов.Период = ИПНПрименениеВычетовСрезПоследних.ПериодСреза 
	|			И ИПНПрименениеВычетов.Физлицо = ИПНПрименениеВычетовСрезПоследних.Физлицо
	|
	|ГДЕ
	|	ИПНПрименениеВычетов.Налогоплательщик = &парамНалогоплательщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНПрименениеВычетовСрезПоследних.Физлицо,
	|	ИПНПрименениеВычетовСрезПоследних.Период
	|";
	
	Запрос.Текст = ПрименениеВычетовВОрганизацииТекст;
	Запрос.Выполнить();
	ПрименениеВычетовВОрганизацииТекст = "ВТПрименениеВычетовВОрганизации";	
	
	// ОтработанноеВремя
	//	Поля:
	//		Физлицо,
	//		Период,
	//		ПредоставлятьВычет
	//
	// Описание:
	//	Список физлиц-периодов с правом применения налоговых вычетов по отработанному времени
	//	
	Если Метаданные.РегистрыРасчета.Найти("ОсновныеНачисленияРаботниковОрганизаций") <> Неопределено Тогда
		// определяем по норме отработанноого времени, которая включается в зачет отработанного времени 
		// при предоставлении вычета
		ОтработанноеВремяТекст = 
		"ВЫБРАТЬ
		|	ОтработанноеВремя.ПериодДействия КАК Период,
		|	ОтработанноеВремя.ФизЛицо КАК ФизЛицо,
		|	СУММА(ОтработанноеВремя.НормаДнейПоПятидневке) КАК НормаДнейПоПятидневке,
		|	МАКСИМУМ(ДанныеНормыВремени.Норма) КАК НормаДнейПоПроизводственномуКалендарю,
		|	ВЫБОР
		|		КОГДА СУММА(ОтработанноеВремя.НормаДнейПоПятидневке) >= МАКСИМУМ(ДанныеНормыВремени.Норма) / 2
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПредоставлятьВычет
		|
		|ПОМЕСТИТЬ ВТОтработанноеВремя
		|ИЗ
		|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОтработанноеВремя
		|		ПО СписокФизЛиц.ФизЛицо = ОтработанноеВремя.ФизЛицо 
		|			И ОтработанноеВремя.Организация = &парамГоловнаяОрганизация
		|			И ОтработанноеВремя.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
		|			И ОтработанноеВремя.ВидРасчета.ЗачетОтработанногоВремениДляВычета
		|			И ОтработанноеВремя.ПериодДействия МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период,
		|							СУММА(РегламентированныйПроизводственныйКалендарь.Пятидневка) КАК Норма
		|						ИЗ
		|							РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
		|						ГДЕ
		|							РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
		|						СГРУППИРОВАТЬ ПО
		|							НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ)) КАК ДанныеНормыВремени
		|		ПО ОтработанноеВремя.ПериодДействия = ДанныеНормыВремени.Период
		|
		|СГРУППИРОВАТЬ ПО 
		|	ОтработанноеВремя.ПериодДействия,
		|	ОтработанноеВремя.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОтработанноеВремя.ПериодДействия,
		|	ОтработанноеВремя.ФизЛицо
		|";
	Иначе
		// определяем по датам приема и увольнения
		ОтработанноеВремяТекст = 
		"ВЫБРАТЬ
		|	ОтработанноеВремя.Период,
		|	ОтработанноеВремя.ФизЛицо,
		|	СУММА(ВЫБОР
		|			КОГДА ПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтработанноеВремя.ДатаС И ОтработанноеВремя.ДатаПо 
		|				ТОГДА ПроизводственныйКалендарь.Пятидневка
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НормаДнейПоПятидневке,
		|	СУММА(ПроизводственныйКалендарь.Пятидневка) КАК НормаДнейПоПроизводственномуКалендарю,
		|	ВЫБОР
		|		КОГДА СУММА(ВЫБОР 
		|						КОГДА ПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтработанноеВремя.ДатаС И ОтработанноеВремя.ДатаПо 
		|							ТОГДА ПроизводственныйКалендарь.Пятидневка 
		|						ИНАЧЕ 0 
		|			  		КОНЕЦ) >= СУММА(ПроизводственныйКалендарь.Пятидневка) / 2
		|		ТОГДА ИСТИНА
		|	ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПредоставлятьВычет
		|
		|ПОМЕСТИТЬ ВТОтработанноеВремя
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОтработанноеВремя.Период,
		|		ОтработанноеВремя.ФизЛицо,
		|
		|		ВЫБОР 
		|			// вообще не был принят в штат - не считаем отработанное время
		|			КОГДА ОтработанноеВремя.ДатаПриема = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
		|			// принят в штат в предыдущих месяцах - считаем с первого числа месяца
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаПриема, МЕСЯЦ) < ОтработанноеВремя.Период 
		|				ТОГДА ОтработанноеВремя.Период
		|			// принят в штат в текущем месяце - считаем с даты приема
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаПриема, МЕСЯЦ) = ОтработанноеВремя.Период
		|				ТОГДА ОтработанноеВремя.ДатаПриема
		|			// сюда попасть не должны - не считаем 
		|			ИНАЧЕ
		|				ДАТАВРЕМЯ(3999, 12, 31)
		|		КОНЕЦ КАК ДатаС,
		|
		|		ВЫБОР 
		|			// повторный прием в ту же организацию и еще не уволен 
		|			// или еще не уволен после первого приема - считаем до конца месяца
		|			КОГДА ОтработанноеВремя.ДатаПриема > ОтработанноеВремя.ДатаУвольнения 
		|				  ИЛИ ГОД(ОтработанноеВремя.ДатаУвольнения) = 1
		|				ТОГДА КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
		|			// уволен до начала месяца - не считаем
		|			КОГДА ОтработанноеВремя.ДатаУвольнения < ОтработанноеВремя.Период
		|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|			// уволен в текущем месяце - считаем до даты увольнения
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаУвольнения, МЕСЯЦ) = ОтработанноеВремя.Период
		|               ТОГДА ОтработанноеВремя.ДатаУвольнения
		|			// еще не уволен - считаем до конца месяца
		|			ИНАЧЕ
		|				КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
		|		КОНЕЦ КАК ДатаПо
		|
		|	ИЗ			
		|		(ВЫБРАТЬ
		|			Периоды.Период КАК Период,
		|			Периоды.ФизЛицо КАК ФизЛицо,
		|			МАКСИМУМ(ВЫБОР 
		|						КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &парамПринят 
		|							ТОГДА РаботникиОрганизации.Период
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				 	 КОНЕЦ) КАК ДатаПриема,
		|			МАКСИМУМ(ВЫБОР 
		|						КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &парамУволен
		|							ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				 	 КОНЕЦ) КАК ДатаУвольнения
		|		ИЗ
		|			" + ПериодыТекст + " КАК Периоды
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|				ПО Периоды.ФизЛицо = РаботникиОрганизации.Сотрудник.ФизЛицо
		|			   	   И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
		|			   	   И РаботникиОрганизации.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство 
		|			  	   И РаботникиОрганизации.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
		|				   И РаботникиОрганизации.ПричинаИзмененияСостояния В (&парамПринят, &парамУволен)
		|
		|		СГРУППИРОВАТЬ ПО 
		|			Периоды.Период,
		|			Периоды.ФизЛицо) КАК ОтработанноеВремя) КАК ОтработанноеВремя
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК ПроизводственныйКалендарь
		|		ПО ПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтработанноеВремя.Период И КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтработанноеВремя.Период,
		|	ОтработанноеВремя.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОтработанноеВремя.Период,
		|	ОтработанноеВремя.ФизЛицо
		|";
	КонецЕсли;
	
	Запрос.Текст = ОтработанноеВремяТекст;
	Запрос.Выполнить();
	ОтработанноеВремяТекст = "ВТОтработанноеВремя";
	
	// ПрименяемыеВычетыТекст
	//	Поля:
	//		Физлицо
	//		Период
	//		НалоговыйВычетЛичный
	//
	//	Описание:
	//	Выбирает по всем периодам года налоговые вычеты на которые имеет право физлицо
	ПрименяемыеВычетыТекст = 
	"ВЫБРАТЬ
	|	ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо КАК Физлицо,
	|	ИПННалоговыеВычетыФизлицСрезПоследних.Период КАК Период,
	|	ВЫБОР
	|		КОГДА (ПрименениеВычетов.Физлицо) ЕСТЬ NULL
	|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизЛиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПризнакПрименениеВычета,
	|	ВЫБОР
	|		КОГДА ПрименениеВычетов.Физлицо В (&парамФизЛицаНеРезиденты) 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицоНеРезидент,
	|	ЕСТЬNULL(ОтработанноеВремя.НормаДнейПоПроизводственномуКалендарю, 0) КАК НормаДнейПоПроизводственномуКалендарю,
	|	ЕСТЬNULL(ОтработанноеВремя.НормаДнейПоПятидневке, 0) КАК НормаДнейПоПятидневке,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП,
	|	ВЫБОР 
	|		КОГДА (ПрименениеВычетов.Физлицо) ЕСТЬ NULL 
	|				ИЛИ ПрименениеВычетов.Физлицо В (&парамФизЛицаНеРезиденты) 
	|				ИЛИ НЕ ЕСТЬNULL(ОтработанноеВремя.ПредоставлятьВычет, ЛОЖЬ)
	|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
	|			ТОГДА 0 
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
	|	КОНЕЦ КАК НалоговыйВычетЛичный
	|
	|ПОМЕСТИТЬ ВТПрименяемыеВычеты
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ВычетыФизлиц.Период) КАК ПериодСреза,
	|		Периоды.Физлицо КАК Физлицо,
	|		Периоды.Период КАК Период
	|	ИЗ
	|		" + ПериодыТекст + " КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
	|			ПО ВычетыФизлиц.Период <= Периоды.Период 
	|				И ВычетыФизлиц.Физлицо = Периоды.Физлицо
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Физлицо,
	|		Периоды.Период) КАК ИПННалоговыеВычетыФизлицСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
	|		ПО ВычетыФизлиц.Период = ИПННалоговыеВычетыФизлицСрезПоследних.ПериодСреза 
	|			И ВычетыФизлиц.Физлицо = ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименениеВычетовВОрганизацииТекст + " КАК ПрименениеВычетов
	|		ПО ПрименениеВычетов.Физлицо = ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо 
	|				И ПрименениеВычетов.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОтработанноеВремяТекст + " КАК ОтработанноеВремя
	|		ПО ОтработанноеВремя.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период 
	|			И ОтработанноеВремя.ФизЛицо = ИПННалоговыеВычетыФизлицСрезПоследних.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо,
	|	ИПННалоговыеВычетыФизлицСрезПоследних.Период
	|";

	Запрос.Текст = ПрименяемыеВычетыТекст;
	Запрос.Выполнить();
	ПрименяемыеВычетыТекст = "ВТПрименяемыеВычеты";

	// ПрименяемыеВычетыЗаГод
	//	Поля:
	//		Физлицо
	//		Период
	//		ВычетЛичный
	//		ВычетЛичныйЗаГод
	//		ЛьготируемыйНалоговыйВычетЗаГод
	//
	//	Описание:
	//	Выбирает по всем периодам года применяемые налоговые вычеты нарастающим итогом за год
	//
 	ПрименяемыеВычетыЗаГодТекст = 
	"ВЫБРАТЬ
	|	ВычетыПоПериодам.Физлицо КАК Физлицо,
	|	Периоды.Период КАК Период,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = ВычетыПоПериодам.Период ТОГДА ВычетыПоПериодам.ПризнакПрименениеВычета ИНАЧЕ 0 КОНЕЦ) КАК ПризнакПрименениеВычета,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = ВычетыПоПериодам.Период ТОГДА ВычетыПоПериодам.ПризнакФизЛицоНеРезидент ИНАЧЕ 0 КОНЕЦ) КАК ПризнакФизЛицоНеРезидент,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = ВычетыПоПериодам.Период ТОГДА ВычетыПоПериодам.НормаДнейПоПроизводственномуКалендарю ИНАЧЕ 0 КОНЕЦ) КАК НормаДнейПоПроизводственномуКалендарю,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = ВычетыПоПериодам.Период ТОГДА ВычетыПоПериодам.НормаДнейПоПятидневке ИНАЧЕ 0 КОНЕЦ) КАК НормаДнейПоПятидневке,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = ВычетыПоПериодам.Период ТОГДА ВычетыПоПериодам.РазмерМЗП ИНАЧЕ 0 КОНЕЦ) КАК РазмерМЗП,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = ВычетыПоПериодам.Период ТОГДА ВычетыПоПериодам.НалоговыйВычетЛичный ИНАЧЕ 0 КОНЕЦ) КАК НалоговыйВычет,
	|	СУММА(ВычетыПоПериодам.НалоговыйВычетЛичный) КАК НалоговыйВычетЗаГод,
	|	СУММА(ВЫБОР
	|			КОГДА ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ
	|					ИЛИ ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности
	|				ТОГДА ВычетыПоПериодам.НалоговыйВычетЛичный
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ЛьготируемыйНалоговыйВычетЗаГод
	|
	|ПОМЕСТИТЬ ВТПрименяемыеВычетыЗаГод
	|ИЗ
	|	" + ДатыПериодовГодаТекст + " КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеВычетыТекст + " КАК ВычетыПоПериодам
	|		ПО ВычетыПоПериодам.Период <= Периоды.Период 
	|			И ВычетыПоПериодам.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеЛьготыТекст + " КАК ПрименяемыеЛьготы
	|		ПО ВычетыПоПериодам.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
	|			И ВычетыПоПериодам.Период = ПрименяемыеЛьготы.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВычетыПоПериодам.Физлицо,
	|	Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВычетыПоПериодам.Физлицо,
	|	Периоды.Период
	|";
	
	Запрос.Текст = ПрименяемыеВычетыЗаГодТекст;
	Запрос.Выполнить();
	ПрименяемыеВычетыЗаГодТекст = "ВТПрименяемыеВычетыЗаГод";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаГод.ОблагаемыйДоход, 0)";
	
	// облагаемый доход с начала года
	ПолеОблагаемыйДоходЗаГод = "ЕСТЬNULL(ДоходыЗаГод.ОблагаемыйДоходЗаГод, 0)";

	// право на налоговый вычет за месяц
	ПолеНалоговыйВычетЗаМесяц = "ЕСТЬNULL(ПрименяемыеВычетыЗаГод.НалоговыйВычет, 0)";
	
	// право на налоговый вычет за год
	ПолеНалоговыйВычетЗаГод = "ЕСТЬNULL(ПрименяемыеВычетыЗаГод.НалоговыйВычетЗаГод, 0)";

	// сумма ранее примененных налоговых вычетов за месяц
	ПолеРанееПримененныйНалоговыйВычет = "ЕСТЬNULL(ДоходыЗаГод.ПримененныйВычет, 0)";
	
	// право на льготу за год (остаток того, что не успел использовать на предыдущем месте работы)
	ПолеПрименяемаяЛьготаЗаГод = "
	|ВЫБОР
	|	КОГДА ЕСТЬNULL(ДоходыЗаГод.ЛьготаПоДоходу, 0) - ЕСТЬNULL(ДоходыЗаГод.ПримененнаяЛьготаНаПредыдущемМестеРаботы, 0) > 0
	|		ТОГДА ЕСТЬNULL(ДоходыЗаГод.ЛьготаПоДоходу, 0) - ЕСТЬNULL(ДоходыЗаГод.ПримененнаяЛьготаНаПредыдущемМестеРаботы, 0)
	|	ИНАЧЕ 0
	|КОНЕЦ";
	                                                                       
	// сумма ранее примененной льготы
	ПолеРанееПримененнаяЛьгота = "ЕСТЬNULL(ДоходыЗаГод.ПримененнаяЛьготаЗаГод, 0) - ЕСТЬNULL(ДоходыЗаГод.ПримененнаяЛьготаНаПредыдущемМестеРаботы, 0)";
	ПолеЛьготаПримененнаяВПредыдущихМесяцах = "ЕСТЬNULL(ДоходыЗаГод.ЛьготаПримененнаяВПредыдущихМесяцах, 0)";

	// сумма исчисленных пенсионных взносов за месяц
	ПолеПенсионныеВзносыЗаМесяц = "ЕСТЬNULL(ОПВРасчетыСФондамиЗаГод.ИсчисленныеВзносы, 0)";
	
	// сумма исчисленных пенсионных взносов за год
	ПолеПенсионныеВзносыЗаГод = "ЕСТЬNULL(ОПВРасчетыСФондамиЗаГод.ИсчисленныеВзносыЗаГод, 0)";
	
	// облагаемая база по ИПН за месяц
	ПолеБазаДляИсчисленияИПНЗаМесяц = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеНалоговыйВычетЗаМесяц + " - " + ПолеПенсионныеВзносыЗаМесяц + " > 0
	|		ТОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеНалоговыйВычетЗаМесяц + " - " + ПолеПенсионныеВзносыЗаМесяц + "
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// облагаемая база по ИПН за год
	ПолеБазаДляИсчисленияИПНЗаГод = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаГод + " - " + ПолеНалоговыйВычетЗаГод + " - " + ПолеПенсионныеВзносыЗаГод + " > 0
	|		ТОГДА " + ПолеОблагаемыйДоходЗаГод + " - " + ПолеНалоговыйВычетЗаГод + " - " + ПолеПенсионныеВзносыЗаГод + "
	|	ИНАЧЕ 0
	|КОНЕЦ";
	
	// льготируемый облагаемый доход с начала года
	ПолеЛьготируемыйОблагаемыйДоходЗаГод = "ЕСТЬNULL(ДоходыЗаГод.ЛьготируемыйОблагаемыйДоходЗаГод, 0)";

	// налоговый вычет за год, учитываемый при предоставлении льготы
	ПолеЛьготируемыйНалоговыйВычетЗаГод = "ЕСТЬNULL(ПрименяемыеВычетыЗаГод.ЛьготируемыйНалоговыйВычетЗаГод, 0)";

	// сумма исчисленных пенсионных взносов за год, учитываемая при предоставлении льготы
	ПолеЛьготируемыеПенсионныеВзносыЗаГод = "ЕСТЬNULL(ОПВРасчетыСФондамиЗаГод.ЛьготируемыеИсчисленныеВзносыЗаГод, 0)";
	
	// льготируемая облагаемая база по ИПН за год
	ПолеЛьготируемаяБазаДляИсчисленияИПНЗаГод = 
	"ВЫБОР
	|	КОГДА " + ПолеЛьготируемыйОблагаемыйДоходЗаГод + " - " + ПолеЛьготируемыйНалоговыйВычетЗаГод + " - " + ПолеЛьготируемыеПенсионныеВзносыЗаГод + " > 0
	|	ТОГДА " + ПолеЛьготируемыйОблагаемыйДоходЗаГод + " - " + ПолеЛьготируемыйНалоговыйВычетЗаГод + " - " + ПолеЛьготируемыеПенсионныеВзносыЗаГод + "
	|	ИНАЧЕ 0
	|КОНЕЦ";
	
	// примененная льгота за год   
	ПолеПримененнаяЛьгота = 
	"ВЫБОР
	|	КОГДА " + ПолеПрименяемаяЛьготаЗаГод + " > " + ПолеЛьготируемаяБазаДляИсчисленияИПНЗаГод + " 
	|		ТОГДА " + ПолеЛьготируемаяБазаДляИсчисленияИПНЗаГод + " 
	|	ИНАЧЕ ВЫБОР 
	|			КОГДА " + ПолеЛьготируемаяБазаДляИсчисленияИПНЗаГод + " > 0 
	|				ТОГДА " + ПолеПрименяемаяЛьготаЗаГод + " 
	|			ИНАЧЕ 0 
	|		  КОНЕЦ 
	|КОНЕЦ";
	
	// если размер льготы изменяется в середине года, то надо еще проверить чтобы общий размер льготы с учетом текущего месяца
	// не превышал фактического дохода, который подпадает под льготу
	ПолеПримененнаяЛьгота = 
	"ВЫБОР
	|	КОГДА " + ПолеПримененнаяЛьгота + " > " + ПолеБазаДляИсчисленияИПНЗаМесяц + " + " + ПолеЛьготаПримененнаяВПредыдущихМесяцах + "
	|		ТОГДА " + ПолеБазаДляИсчисленияИПНЗаМесяц + " + " + ПолеЛьготаПримененнаяВПредыдущихМесяцах + "
	|	ИНАЧЕ " + ПолеПримененнаяЛьгота + "
	|КОНЕЦ";
		
	// сумма ранее исчисленного налога за месяц
	ПолеРанееНалогИсчисленный = "ЕСТЬNULL(ИПНРасчетыСБюджетом.ИсчисленныйНалог, 0)";
	
	// облагаемая сумма за месяц
	ПолеОблагаемаяСуммаЗаМесяц = 
	"ВЫБОР
	|	КОГДА СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ЛьготируемаяОблагаемаяСуммаЗаГод ИНАЧЕ 0 КОНЕЦ) = 0
	|			ИЛИ СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ПрименяетсяЛьготаВМесяце ИНАЧЕ 0 КОНЕЦ) = 0
	|		ТОГДА СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОблагаемаяСумма ИНАЧЕ 0 КОНЕЦ)
	|	КОГДА МАКСИМУМ(БазаДляИсчисленияИПН.ПримененнаяЛьгота) >= СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ЛьготируемаяОблагаемаяСуммаЗаГод ИНАЧЕ 0 КОНЕЦ)
	|		ТОГДА 0
	|	ИНАЧЕ ВЫБОР
	|			КОГДА СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОблагаемаяСумма ИНАЧЕ 0 КОНЕЦ) >
	|					СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ЛьготируемаяОблагаемаяСуммаЗаГод ИНАЧЕ 0 КОНЕЦ) - МАКСИМУМ(БазаДляИсчисленияИПН.ПримененнаяЛьгота)
	|				ТОГДА СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ЛьготируемаяОблагаемаяСуммаЗаГод ИНАЧЕ 0 КОНЕЦ) - МАКСИМУМ(БазаДляИсчисленияИПН.ПримененнаяЛьгота)
	|
	|			КОГДА СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ЛьготаПримененнаяВПредыдущихМесяцах ИНАЧЕ 0 КОНЕЦ) <
	|					МАКСИМУМ(БазаДляИсчисленияИПН.ПримененнаяЛьгота)
	|				ТОГДА СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОблагаемаяСумма ИНАЧЕ 0 КОНЕЦ) - 
	|						(МАКСИМУМ(БазаДляИсчисленияИПН.ПримененнаяЛьгота) - СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ЛьготаПримененнаяВПредыдущихМесяцах ИНАЧЕ 0 КОНЕЦ))
	|
	|			ИНАЧЕ СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОблагаемаяСумма ИНАЧЕ 0 КОНЕЦ)
	|		  КОНЕЦ
	|КОНЕЦ";
	
	// БазаДляИсчисленияИПН
	//	Поля:
	//		Период
	//		ФизЛицо
	//      ОблагаемаяСумма
	//      ОблагаемаяСуммаЗаГод
	//      ПримененнаяЛьгота
	//      ПримененныйВычет
	//
	//	Описание:
	//	Получает облагаемую базу для исчисления ИПН с начала года для каждого месяца периода и примененную льготу 
	БазаДляИсчисленияИПНТекст = 
	"ВЫБРАТЬ 
	|	ДоходыЗаГод.Период,
	|	ДоходыЗаГод.ФизЛицо,
	|	ДоходыЗаГод.ПрименяетсяЛьготаВМесяце,	
	|	ДоходыЗаГод.ПризнакЛьготаПоИнвалидности,
	|	ДоходыЗаГод.ПризнакЛьготаУчастникаВОВ,
	|	ДоходыЗаГод.СуммаДоходаВсего,
	|	ДоходыЗаГод.СуммаНеоблагаемогоДохода,
	|	" + ПолеПрименяемаяЛьготаЗаГод  + " КАК ПрименяемаяЛьготаЗаГод,
	|	" + ПолеПенсионныеВзносыЗаМесяц + " КАК ОПВЗаМесяц,
	|	ЕСТЬNULL(ПрименяемыеВычетыЗаГод.ПризнакПрименениеВычета, 0) КАК ПризнакПрименениеВычета,
	|	ЕСТЬNULL(ПрименяемыеВычетыЗаГод.ПризнакФизЛицоНеРезидент, 0) КАК ПризнакФизЛицоНеРезидент,
	|	ЕСТЬNULL(ПрименяемыеВычетыЗаГод.НормаДнейПоПятидневке, 0) КАК НормаДнейПоПятидневке,
	|	ЕСТЬNULL(ПрименяемыеВычетыЗаГод.НормаДнейПоПроизводственномуКалендарю, 0) КАК НормаДнейПоПроизводственномуКалендарю,
	|	ЕСТЬNULL(ПрименяемыеВычетыЗаГод.РазмерМЗП, 0) КАК РазмерМЗП,
	|	" + ПолеБазаДляИсчисленияИПНЗаМесяц + " КАК ОблагаемаяСумма,
	|	" + ПолеБазаДляИсчисленияИПНЗаГод + " КАК ОблагаемаяСуммаЗаГод,
	|	" + ПолеЛьготируемаяБазаДляИсчисленияИПНЗаГод + " КАК ЛьготируемаяОблагаемаяСуммаЗаГод,
	|	" + ПолеПримененнаяЛьгота + " КАК ПримененнаяЛьгота,
	|	" + ПолеНалоговыйВычетЗаМесяц + " КАК ПримененныйВычет,
	|	" + ПолеРанееПримененныйНалоговыйВычет + " КАК РанееПримененныйНалоговыйВычет,
	|	" + ПолеРанееПримененнаяЛьгота + " КАК РанееПримененнаяЛьгота,
	|	" + ПолеЛьготаПримененнаяВПредыдущихМесяцах + " КАК ЛьготаПримененнаяВПредыдущихМесяцах,
	|	" + ПолеРанееНалогИсчисленный + " КАК РанееНалогИсчисленный
	|
	|ПОМЕСТИТЬ ВТБазаДляИсчисленияИПН
	|ИЗ
	|	" + ДоходыЗаГодТекст + " КАК ДоходыЗаГод
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеВычетыЗаГодТекст + " КАК ПрименяемыеВычетыЗаГод
	|		ПО ДоходыЗаГод.Период = ПрименяемыеВычетыЗаГод.Период 
	|			И ДоходыЗаГод.ФизЛицо = ПрименяемыеВычетыЗаГод.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОПВРасчетыСФондамиЗаГодТекст + " КАК ОПВРасчетыСФондамиЗаГод
	|		ПО ДоходыЗаГод.Период = ОПВРасчетыСФондамиЗаГод.Период 
	|			И ДоходыЗаГод.ФизЛицо = ОПВРасчетыСФондамиЗаГод.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНРасчетыСБюджетомТекст + " КАК ИПНРасчетыСБюджетом
	|		ПО ДоходыЗаГод.Период = ИПНРасчетыСБюджетом.МесяцНалоговогоПериода
	|			И ДоходыЗаГод.ФизЛицо = ИПНРасчетыСБюджетом.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДоходыЗаГод.Период,
	|	ДоходыЗаГод.ФизЛицо
	|";

	Запрос.Текст = БазаДляИсчисленияИПНТекст;
	Запрос.Выполнить();
	БазаДляИсчисленияИПНТекст = "ВТБазаДляИсчисленияИПН";
	
	Запрос.Текст = "ВЫБРАТЬ * ИЗ " + БазаДляИсчисленияИПНТекст;
	
	// БазаДляИсчисленияИПН
	//	Поля:
	//		Период
	//		ФизЛицо
	//      ОблагаемаяСумма
	//      ПримененнаяЛьгота
	//
	//	Описание:
	//	Получает облагаемую базу для исчисления ИПН с учетом льготы
	БазаДляИсчисленияИПНТекст = 
	"ВЫБРАТЬ 
	|	Периоды.Период,
	|	Периоды.ФизЛицо,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ПризнакЛьготаПоИнвалидности ИНАЧЕ 0 КОНЕЦ) КАК ПризнакЛьготаПоИнвалидности,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ПризнакЛьготаУчастникаВОВ ИНАЧЕ 0 КОНЕЦ) КАК ПризнакЛьготаУчастникаВОВ,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.СуммаДоходаВсего ИНАЧЕ 0 КОНЕЦ) КАК СуммаДоходаВсего,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.СуммаНеоблагаемогоДохода ИНАЧЕ 0 КОНЕЦ) КАК СуммаНеоблагаемогоДохода,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ПрименяемаяЛьготаЗаГод ИНАЧЕ 0 КОНЕЦ) КАК ПрименяемаяЛьготаЗаГод,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОПВЗаМесяц ИНАЧЕ 0 КОНЕЦ) КАК ОПВЗаМесяц,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ПризнакПрименениеВычета ИНАЧЕ 0 КОНЕЦ) КАК ПризнакПрименениеВычета,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ПризнакФизЛицоНеРезидент ИНАЧЕ 0 КОНЕЦ) КАК ПризнакФизЛицоНеРезидент,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.НормаДнейПоПятидневке ИНАЧЕ 0 КОНЕЦ) КАК НормаДнейПоПятидневке,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.НормаДнейПоПроизводственномуКалендарю ИНАЧЕ 0 КОНЕЦ) КАК НормаДнейПоПроизводственномуКалендарю,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.РазмерМЗП ИНАЧЕ 0 КОНЕЦ) КАК РазмерМЗП,
	|	" + ПолеОблагаемаяСуммаЗаМесяц + " КАК ОблагаемаяСумма,
	|	МАКСИМУМ(БазаДляИсчисленияИПН.ПримененнаяЛьгота) КАК ПримененнаяЛьгота,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ПримененныйВычет ИНАЧЕ 0 КОНЕЦ) КАК ПримененныйВычет,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.РанееПримененныйНалоговыйВычет ИНАЧЕ 0 КОНЕЦ) КАК РанееПримененныйНалоговыйВычет,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.РанееПримененнаяЛьгота ИНАЧЕ 0 КОНЕЦ) КАК РанееПримененнаяЛьгота,
	|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.РанееНалогИсчисленный ИНАЧЕ 0 КОНЕЦ) КАК РанееНалогИсчисленный
	|ИЗ
	|	" + ПериодыТекст + " КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + БазаДляИсчисленияИПНТекст + " КАК БазаДляИсчисленияИПН
	|		ПО БазаДляИсчисленияИПН.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, ГОД)
	|			И БазаДляИсчисленияИПН.Период <= Периоды.Период
	|			И Периоды.ФизЛицо = БазаДляИсчисленияИПН.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	Периоды.ФизЛицо
	|";	
	
	Запрос.Текст = БазаДляИсчисленияИПНТекст;
	
	// ШкалаСтавокИПНПоПериодам
	//	Поля:
	//		Период
	//		СуммаДоходаС
	//      СуммаДоходаПо
	//      Ставка
	//      СуммаНалогаПредыдущегоПредела
	//
	//	Описание:
	//	Выбирает по всем периодам года шкалы ставок для исчисления ИПН
	ШкалаСтавокИПНПоПериодамТекст = 
	"ВЫБРАТЬ
	|	ИПНШкалаСтавокСрезПоследних.Период,
	|	СведенияОСтавкахИПНиСН.СуммаДоходаС,
	|	СведенияОСтавкахИПНиСН.СуммаДоходаПо,
	|	СведенияОСтавкахИПНиСН.Ставка,
	|	СведенияОСтавкахИПНиСН.СуммаНалогаПредыдущегоПредела
	|
	|ПОМЕСТИТЬ ВТШкалаСтавокИПНПоПериодам
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(СтавкиИПН.Период) КАК ПериодСреза,
	|		Периоды.Период КАК Период
	|	ИЗ
	|		" + ДатыПериодовГодаТекст + " КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахИПНиСН КАК СтавкиИПН
	|		ПО СтавкиИПН.Период <= Периоды.Период 
	|			И СтавкиИПН.ВидСтавокИПНиСН = &парамПоИсчислениюИПН
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК ИПНШкалаСтавокСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахИПНиСН КАК СведенияОСтавкахИПНиСН
	|		ПО СведенияОСтавкахИПНиСН.Период = ИПНШкалаСтавокСрезПоследних.ПериодСреза 
	|			И СведенияОСтавкахИПНиСН.ВидСтавокИПНиСН = &парамПоИсчислениюИПН
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНШкалаСтавокСрезПоследних.Период
	|";
	
	Запрос.Текст = ШкалаСтавокИПНПоПериодамТекст;
	Запрос.Выполнить();
	ШкалаСтавокИПНПоПериодамТекст = "ВТШкалаСтавокИПНПоПериодам";
	
	// ИсчисленныйИПН	
	//	Поля:
	//		Физлицо
	//		Период
	//		НалогИсчисленный
	//		НалогУжеИсчисленный
	//		ПримененныйВычет
	//		ПримененняЛьгота
	//	
	//	Описание:
	//	Выбирает применяемые вычеты, доход и исчисленный налог 
	//	и производит расчет налога и примененных вычетов
	ИсчисленныйИПНТекст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БазаДляИсчисленияИПН.ФизЛицо,
	|	БазаДляИсчисленияИПН.Период,
	|	БазаДляИсчисленияИПН.ПризнакЛьготаПоИнвалидности,
	|	БазаДляИсчисленияИПН.ПризнакЛьготаУчастникаВОВ,
	|	БазаДляИсчисленияИПН.СуммаДоходаВсего,
	|	БазаДляИсчисленияИПН.СуммаНеоблагаемогоДохода,
	|	БазаДляИсчисленияИПН.ОПВЗаМесяц,
	|	БазаДляИсчисленияИПН.ПризнакПрименениеВычета,
	|	БазаДляИсчисленияИПН.ПризнакФизЛицоНеРезидент,
	|	БазаДляИсчисленияИПН.НормаДнейПоПятидневке,
	|	БазаДляИсчисленияИПН.НормаДнейПоПроизводственномуКалендарю,
	|	БазаДляИсчисленияИПН.РазмерМЗП,
	|	БазаДляИсчисленияИПН.ПрименяемаяЛьготаЗаГод КАК ЛьготаЗаГод,
	|	БазаДляИсчисленияИПН.ОблагаемаяСумма,
	|	ВЫРАЗИТЬ((ЕСТЬNULL(СтавкиИПН.СуммаНалогаПредыдущегоПредела, 0) + (БазаДляИсчисленияИПН.ОблагаемаяСумма - ЕСТЬNULL(СтавкиИПН.СуммаДоходаС, 0)) * ЕСТЬNULL(СтавкиИПН.Ставка, 0) / 100) КАК " + ТипЗначенияИПНТекст + ") КАК ИПНЗаМесяц,
	|	ЕСТЬNULL(БазаДляИсчисленияИПН.РанееНалогИсчисленный, 0) КАК РанееНалогИсчисленный,
	|	ЕСТЬNULL(БазаДляИсчисленияИПН.ПримененныйВычет, 0) КАК ПримененныйВычетЗаМесяц,
	|	ЕСТЬNULL(БазаДляИсчисленияИПН.РанееПримененныйНалоговыйВычет, 0) КАК РанееПримененныйНалоговыйВычет,
	|	ЕСТЬNULL(БазаДляИсчисленияИПН.РанееПримененнаяЛьгота, 0) КАК РанееПримененнаяЛьгота,
	|	СтавкиИПН.Ставка КАК ПроцентСтавки,
	|
	|	ВЫРАЗИТЬ((ЕСТЬNULL(СтавкиИПН.СуммаНалогаПредыдущегоПредела, 0) + (БазаДляИсчисленияИПН.ОблагаемаяСумма - ЕСТЬNULL(СтавкиИПН.СуммаДоходаС, 0)) * ЕСТЬNULL(СтавкиИПН.Ставка, 0) / 100) КАК " + ТипЗначенияИПНТекст + ") КАК НалогИсчисленный,
	|   ЕСТЬNULL(БазаДляИсчисленияИПН.ПримененныйВычет, 0) - ЕСТЬNULL(БазаДляИсчисленияИПН.РанееПримененныйНалоговыйВычет, 0) КАК ПримененныйВычет,
	|	ЕСТЬNULL(БазаДляИсчисленияИПН.ПримененнаяЛьгота, 0) - ЕСТЬNULL(БазаДляИсчисленияИПН.РанееПримененнаяЛьгота, 0) КАК ПримененнаяЛьгота
	|ИЗ
	|	(" + БазаДляИсчисленияИПНТекст + ") КАК БазаДляИсчисленияИПН
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ШкалаСтавокИПНПоПериодамТекст + " КАК СтавкиИПН
	|		ПО БазаДляИсчисленияИПН.Период = СтавкиИПН.Период 
	|			И БазаДляИсчисленияИПН.ОблагаемаяСумма > СтавкиИПН.СуммаДоходаС 
	|			И БазаДляИсчисленияИПН.ОблагаемаяСумма <= СтавкиИПН.СуммаДоходаПо
	|
	|УПОРЯДОЧИТЬ ПО
	|	БазаДляИсчисленияИПН.ФизЛицо, 
	|	БазаДляИсчисленияИПН.Период
	|";
	
	Запрос.Текст = ИсчисленныйИПНТекст;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеДляРасчетаИПНПосле2007()

// Получить данные для расчета ИПН по фиксированной ставке, начиная с 2009 года
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей ИПН
//
// Возвращаемое значение:
//  Выборка из результата запроса
//
Функция ПолучитьДанныеДляРасчетаИПНПосле2009(ПервыйМесяцНалоговогоПериода, ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, Знач СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	
	Запрос.УстановитьПараметр("парамНалогоплательщик", 			   Налогоплательщик);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", 		   ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 		   НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамРегистратор", 				   Регистратор);
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	   КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачалоГода",				   Макс(НачалоГода(ПервыйМесяцНалоговогоПериода), '20090101'));
	Запрос.УстановитьПараметр("парамДатаНачалаРасчетаПоФиксСтавке",	'20070101');
	Запрос.УстановитьПараметр("парамНачало", 	 			 	   Макс(НачалоМесяца(ПервыйМесяцНалоговогоПериода), '20090101'));
	Запрос.УстановитьПараметр("парамКонец", 	 			  	   Макс(КонецМесяца(ПоследнийМесяцНалоговогоПериода), '20090101235959'));

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛицо
	| 
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
	
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";
	
	// Периоды
	// Таблица список периодов-физлиц по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо
	|
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК Работники
	|		ПО Работники.Физлицо = ИПНСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации И
	|	ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик И
	|	ИПНСведенияОДоходах.Период >= &парамДатаНачалаРасчетаПоФиксСтавке
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТ_Периоды";

	// Составим текст запроса для вычисления всех месяцев периода
	ДатыПериодовГодаТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период
	|
	|ПОМЕСТИТЬ ВТ_ДатыПериодовГода
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК ПроизводственныйКалендарь
	|
	|ГДЕ
	|	ПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &парамНачалоГода И &парамКонец
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ)
	|";

	Запрос.Текст = ДатыПериодовГодаТекст;
	Запрос.Выполнить();
	ДатыПериодовГодаТекст = "ВТ_ДатыПериодовГода";
	
	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-нерезидентов
	ГражданствоФизЛицТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	Периоды.ФизЛицо,
	|	Периоды.Период,
	|	ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) КАК НеЯвляетсяНалоговымРезидентомРК
	|
	|ПОМЕСТИТЬ ВТ_ГражданствоФизЛиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.ФизЛицо,
	|		Периоды.Период,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодГражданства
	|	ИЗ
	|		" + ПериодыТекст + " КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО ВЫБОР
	|					КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|						ТОГДА Периоды.ФизЛицо.ФизЛицо 
	|					ИНАЧЕ Периоды.ФизЛицо 
	|				КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|				И ГражданствоФизЛиц.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.ФизЛицо,
	|		Периоды.Период) КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВЫБОР 
	|				КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|			И Периоды.ПериодГражданства = ГражданствоФизЛиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.ФизЛицо,
	|	Периоды.Период";

	Запрос.Текст = ГражданствоФизЛицТекст;
	Запрос.Выполнить();
	ГражданствоФизЛицТекст = "ВТ_ГражданствоФизЛиц";

	// РасчетныеПоказатели
	//	Поля:
	//		Период
	//		РазмерМРП
	//		РазмерМЗП
	//
	//	Описание:
	// Выбирает размер месячного расчетного показателя по периодам
	РасчетныеПоказателиТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМРПДляЦелейНалогообложения, 0) КАК РазмерМРП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗПДляЦелейНалогообложения, 0) КАК РазмерМЗП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
	|
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказатели
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ДатыПериодовГодаТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РасчетныеПоказателиТекст;
	Запрос.Выполнить();
	РасчетныеПоказателиТекст = "ВТ_РасчетныеПоказатели";

	// ПрименяемыеЛьготы
	//	Поля:
	//		Физлицо
	//		Период
	//		ПрименяетсяЛьготаУчастникаВОВ
	//		ПрименяетсяЛьготаПоИнвалидности
	//		ЛьготаПоДоходу
	//
	//	Описание:
	//	Выбирает по всем периодам года льготы на которые имеет право физлицо
	ПрименяемыеЛьготыТекст = 
	"ВЫБРАТЬ
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период,
	|	
	|	ИПНЛьготыФизлиц.ОтношениеКИнвалидности,
	|	ИПНЛьготыФизлиц.ГруппаИнвалидности,
	|
	|	ВЫБОР
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > 0 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПрименяетсяЛьготаУчастникаВОВ,
	|
	|	ВЫБОР
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаПоИнвалидности > 0 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПрименяетсяЛьготаПоИнвалидности,
	|
	|	ВЫБОР 
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
	|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ 
	|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
	|	КОНЕЦ КАК ЛьготаПоДоходу
	|
	|ПОМЕСТИТЬ ВТ_ПрименяемыеЛьготы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИПНЛьготыФизлицСрезПоследних.Физлицо КАК Физлицо,
	|		ИПНЛьготыФизлицСрезПоследних.Период КАК Период,
	|		ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности,
	|		ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности,
	|		ВЫБОР 
	|			КОГДА (ЛьготыФизлицПоИнвалидности.Физлицо) ЕСТЬ NULL 
	|				ТОГДА 0 
	|			ИНАЧЕ ВЫБОР 
	|					КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|							И ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности = ""III"" 
	|						ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
	|					ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
	|				  КОНЕЦ 
	|		КОНЕЦ КАК ЛьготаПоИнвалидности,
	|		ВЫБОР 
	|			КОГДА (ЛьготыФизлицУчастниковВОВ.Физлицо) ЕСТЬ NULL 
	|				ТОГДА 0 
	|			ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) 
	|		КОНЕЦ КАК ЛьготаУчастникаВОВ
	|		
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МАКСИМУМ(ЛьготыФизлицПоИнвалидности.Период) КАК ПериодСрезаИнвалидность,
	|			МАКСИМУМ(ЛьготыФизлицУчастниковВОВ.Период) КАК ПериодСрезаУчастникиВОВ,
	|			Периоды.Физлицо КАК Физлицо,
	|			Периоды.Период КАК Период
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|				ПО ЛьготыФизлицПоИнвалидности.Период <= Периоды.Период 
	|					И ЛьготыФизлицПоИнвалидности.Физлицо = ВЫБОР 
	|																КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|																	ТОГДА Периоды.Физлицо.Физлицо
	|																ИНАЧЕ Периоды.Физлицо
	|															КОНЕЦ
	|					И (ЛьготыФизЛицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	|						ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизЛицПоИнвалидности.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
	|
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|				ПО ЛьготыФизлицУчастниковВОВ.Период <= Периоды.Период 
	|					И ЛьготыФизлицУчастниковВОВ.Физлицо = ВЫБОР 
	|																КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|																	ТОГДА Периоды.Физлицо.Физлицо
	|																ИНАЧЕ Периоды.Физлицо
	|															КОНЕЦ
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Физлицо,
	|			Периоды.Период) КАК ИПНЛьготыФизлицСрезПоследних
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|			ПО ЛьготыФизлицПоИнвалидности.Период = ИПНЛьготыФизлицСрезПоследних.ПериодСрезаИнвалидность 
	|				И ЛьготыФизлицПоИнвалидности.Физлицо = ВЫБОР 
	|															КОГДА ИПНЛьготыФизлицСрезПоследних.Физлицо ССЫЛКА Справочник.Контрагенты
	|																ТОГДА ИПНЛьготыФизлицСрезПоследних.Физлицо.Физлицо
	|															ИНАЧЕ ИПНЛьготыФизлицСрезПоследних.Физлицо
	|														КОНЕЦ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|			ПО ЛьготыФизлицУчастниковВОВ.Период = ИПНЛьготыФизлицСрезПоследних.ПериодСрезаУчастникиВОВ 
	|				И ЛьготыФизлицУчастниковВОВ.Физлицо = ВЫБОР 
	|															КОГДА ИПНЛьготыФизлицСрезПоследних.Физлицо ССЫЛКА Справочник.Контрагенты
	|																ТОГДА ИПНЛьготыФизлицСрезПоследних.Физлицо.Физлицо
	|															ИНАЧЕ ИПНЛьготыФизлицСрезПоследних.Физлицо
	|														КОНЕЦ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
	|			ПО РасчетныеПоказатели.Период = ИПНЛьготыФизлицСрезПоследних.Период) КАК ИПНЛьготыФизлиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период
	|";
	
	Запрос.Текст = ПрименяемыеЛьготыТекст;
	Запрос.Выполнить();
	ПрименяемыеЛьготыТекст = "ВТ_ПрименяемыеЛьготы";	
	
	// КадровыеПериодыРаботников
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ДатаПриема
	//		ДатаУвольнения
	//
	//	Описание:
	// Выбирает актуальные даты приема и увольнения по физлицам для дальнейшего ограничения предоставления вычетов
	КадровыеПериодыРаботниковТекст = "
	|ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	Периоды.ФизЛицо КАК ФизЛицо,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|				ТОГДА РаботникиОрганизации.Период
	|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|		КОНЕЦ) КАК ДатаПриема,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|				ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
	|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|		КОНЕЦ) КАК ДатаУвольнения
	|ПОМЕСТИТЬ ВТ_КадровыеПериодыРаботников
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		ПО Периоды.ФизЛицо = РаботникиОрганизации.Сотрудник.Физлицо
	|			И (РаботникиОрганизации.Организация = &парамГоловнаяОрганизация)
	|			И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|			И (РаботникиОрганизации.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
	|			И (РаботникиОрганизации.ПричинаИзмененияСостояния В (ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу), ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)))
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	Периоды.ФизЛицо
	|";
	
	Запрос.Текст = КадровыеПериодыРаботниковТекст;
	Запрос.Выполнить();
	КадровыеПериодыРаботниковТекст = "ВТ_КадровыеПериодыРаботников";
	
	// ДоходыВычетыЛьготы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		СуммаДоходаВсего
	//		СуммаНеоблагаемогоДохода
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//		ПрочиеВычетыОборот
	//		ИсчисленнаяОблагаемаяБазаОборот
	//		ПримененныйВычетОборот
	//		ПримененнаяЛьготаОборот
	//		РазрешенныйВычетОборот
	//		ПримененнаяЛьготаНаПредыдущемМестеРаботыОборот
	//
	//	Описание:
	// Выбирает общую сумму доходов, облагаемые налогом доходы, объект исчисления, а также льготы и вычеты за весь год по физлицам из СписокФизлиц
	ДоходыВычетыЛьготыТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ИПНСведенияОДоходах.ВидДохода КАК ВидДохода,
	|	СУММА(ИПНСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	СУММА(ВЫБОР
	|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ИПНСведенияОДоходах.СуммаДоходаОборот
	|			КОГДА НЕ(ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН)
	|				ТОГДА ИПНСведенияОДоходах.СуммаВычетаОборот
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаНеоблагаемогоДохода,
	|	СУММА(ВЫБОР 
	|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА ИПНСведенияОДоходах.СуммаДоходаОборот 
	|			ИНАЧЕ 0 
	|		  КОНЕЦ) КАК СуммаДоходаОборот,
	|	СУММА(ВЫБОР 
	|			КОГДА ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН 
	|				ТОГДА 0
	|			ИНАЧЕ ИПНСведенияОДоходах.СуммаВычетаОборот
	|		  КОНЕЦ) КАК СуммаВычетаОборот,
	|	СУММА(ВЫБОР 
	|			КОГДА ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН 
	|				ТОГДА ИПНСведенияОДоходах.СуммаВычетаОборот
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ПрочиеВычетыОборот,
	|	СУММА(ИПНСведенияОДоходах.ОблагаемаяБазаОборот) КАК ИсчисленнаяОблагаемаяБазаОборот,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДанныеРаботников.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА ИПНСведенияОДоходах.ПримененныйВычетОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетОборот,
	|	СУММА(ИПНСведенияОДоходах.ПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаОборот,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДанныеРаботников.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА ИПНСведенияОДоходах.РазрешенныйВычетОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РазрешенныйВычетОборот,
	|	0 КАК ПримененнаяЛьготаНаПредыдущемМестеРаботыОборот
	|
	|ПОМЕСТИТЬ ВТ_ДоходыВычетыЛьготы
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах.Обороты(
	|							&парамНачалоГода,
	|							&парамКонец,
	|							МЕСЯЦ,
	|							Налогоплательщик = &парамНалогоплательщик
	|							И ПериодРегистрации <= &парамПериодРегистрации
	|							И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНСведенияОДоходах
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КадровыеПериодыРаботников.ФизЛицо КАК ФизЛицо,
	|			КадровыеПериодыРаботников.ДатаПриема КАК ДатаПриема
	|		ИЗ
	|			ВТ_КадровыеПериодыРаботников КАК КадровыеПериодыРаботников
	|		
	|		СГРУППИРОВАТЬ ПО
	|			КадровыеПериодыРаботников.ФизЛицо,
	|			КадровыеПериодыРаботников.ДатаПриема) КАК ДанныеРаботников
	|		ПО ИПНСведенияОДоходах.ФизЛицо = ДанныеРаботников.ФизЛицо
	|			И (НАЧАЛОПЕРИОДА(ДанныеРаботников.ДатаПриема, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.Физлицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ),
	|	ИПНСведенияОДоходах.ВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя),
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ИПНСведенияПредыдущегоМестаРаботы.ПримененнаяЛьгота
	|ИЗ
	|	РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК ИПНСведенияПредыдущегоМестаРаботы
	|ГДЕ
	|	ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода
	|	И ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации
	|	И ИПНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик
	|	И ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамДатаНачалаРасчетаПоФиксСтавке
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|";

	Запрос.Текст = ДоходыВычетыЛьготыТекст;
	Запрос.Выполнить();
	ДоходыВычетыЛьготыТекст = "ВТ_ДоходыВычетыЛьготы";	
	
	// ДоходыВычетыЛьготыЗаГод
	//	Поля:
	//		ФизЛицо
	//		Период
	//		СуммаДоходаВсего
	//		СуммаНеоблагаемогоДохода
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//		ПрочиеВычетыОборот
	//		ИсчисленнаяОблагаемаяБазаОборот
	//		ПримененныйВычетОборот
	//		ПримененнаяЛьготаОборот
	//		РазрешенныйВычетОборот
	//		ПримененнаяЛьготаНаПредыдущемМестеРаботыОборот
	//
	//	Описание:
	// Группирует общую сумму доходов, облагаемые налогом доходы, объект исчисления, а также льготы и вычеты 
	ДоходыВычетыЛьготыЗаГодТекст = 
		"ВЫБРАТЬ
		|	Периоды.Период КАК Период,
		|	ДоходыВычетыЛьготы.Физлицо КАК Физлицо,
		|	ДоходыВычетыЛьготы.ВидДохода КАК ВидДохода,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.СуммаДоходаВсего
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаДоходаВсего,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.СуммаНеоблагаемогоДохода
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаНеоблагаемогоДохода,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.СуммаДоходаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаДоходаОборот,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.СуммаВычетаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаВычетаОборот,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.ПрочиеВычетыОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПрочиеВычетыОборот,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.ИсчисленнаяОблагаемаяБазаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ИсчисленнаяОблагаемаяБазаОборот,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетЗаМесяц,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.ПримененнаяЛьготаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененнаяЛьготаЗаМесяц,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетЗаМесяц,
		|	СУММА(ДоходыВычетыЛьготы.ПримененныйВычетОборот) КАК ПримененныйВычетЗаГод,
		|	СУММА(ДоходыВычетыЛьготы.РазрешенныйВычетОборот) КАК РазрешенныйВычетЗаГод,
		|	СУММА(ДоходыВычетыЛьготы.ПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаЗаГод,
		|	СУММА(ДоходыВычетыЛьготы.ПримененнаяЛьготаНаПредыдущемМестеРаботыОборот) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы
		|ПОМЕСТИТЬ ВТ_ДоходыВычетыЛьготыЗаГод
		|ИЗ
		|	" + ДатыПериодовГодаТекст + " КАК Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ДоходыВычетыЛьготыТекст + " КАК ДоходыВычетыЛьготы
		|		ПО Периоды.Период >= ДоходыВычетыЛьготы.Период
		|			И ДоходыВычетыЛьготы.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, Год)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоходыВычетыЛьготы.Физлицо,
		|	Периоды.Период,
		|	ДоходыВычетыЛьготы.ВидДохода
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период,
		|	Физлицо,
		|	ВидДохода";

	Запрос.Текст = ДоходыВычетыЛьготыЗаГодТекст;
	Запрос.Выполнить();
	ДоходыВычетыЛьготыЗаГодТекст = "ВТ_ДоходыВычетыЛьготыЗаГод";	
		
	// ДоходыВычетыЛьготыПоПериодам
	//	Поля:
	//		ФизЛицо
	//		Период
	//		СуммаДоходаВсего
	//		СуммаНеоблагаемогоДохода
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//		ПрочиеВычетыОборот
	//		ИсчисленнаяОблагаемаяБазаОборот
	//		ПримененныйВычетОборот
	//		ПримененнаяЛьготаОборот
	//		РазрешенныйВычетОборот
	//		ПримененнаяЛьготаНаПредыдущемМестеРаботыОборот
	//
	//	Описание:
	// Ограничивает выбранные данные по рассчитываемым периодам  
	ДоходыВычетыЛьготыПоПериодамТекст = 
		"ВЫБРАТЬ
		|	ДоходыВычетыЛьготыЗаГод.Период,
		|	ДоходыВычетыЛьготыЗаГод.ФизЛицо,
		|	ДоходыВычетыЛьготыЗаГод.ВидДохода,
		|	ДоходыВычетыЛьготыЗаГод.СуммаДоходаВсего,
		|	ДоходыВычетыЛьготыЗаГод.СуммаНеоблагаемогоДохода,
		|	ДоходыВычетыЛьготыЗаГод.СуммаДоходаОборот,
		|	ДоходыВычетыЛьготыЗаГод.СуммаВычетаОборот,
		|	ДоходыВычетыЛьготыЗаГод.ПрочиеВычетыОборот,
		|	ДоходыВычетыЛьготыЗаГод.ИсчисленнаяОблагаемаяБазаОборот,
		|	ДоходыВычетыЛьготыЗаГод.ПримененныйВычетЗаМесяц,
		|	ДоходыВычетыЛьготыЗаГод.ПримененнаяЛьготаЗаМесяц,
		|	ДоходыВычетыЛьготыЗаГод.РазрешенныйВычетЗаМесяц,
		|	ДоходыВычетыЛьготыЗаГод.ПримененныйВычетЗаГод,
		|	ДоходыВычетыЛьготыЗаГод.РазрешенныйВычетЗаГод,
		|	ДоходыВычетыЛьготыЗаГод.ПримененнаяЛьготаЗаГод,
		|	ДоходыВычетыЛьготыЗаГод.ПримененнаяЛьготаНаПредыдущемМестеРаботы
		|ПОМЕСТИТЬ ВТ_ДоходыВычетыЛьготыПоПериодам
		|ИЗ
		|	" + ДоходыВычетыЛьготыЗаГодТекст + " КАК ДоходыВычетыЛьготыЗаГод
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Периоды
		|		ПО ДоходыВычетыЛьготыЗаГод.Период = Периоды.Период
		|			И ДоходыВычетыЛьготыЗаГод.ФизЛицо = Периоды.ФизЛицо";
	
	Запрос.Текст = ДоходыВычетыЛьготыПоПериодамТекст;
	Запрос.Выполнить();
	ДоходыВычетыЛьготыПоПериодамТекст = "ВТ_ДоходыВычетыЛьготыПоПериодам";	

	// ИПНИсчисленный
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ВидДохода
	//		ИсчисленныйНалог
	//		Регистратор
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом) для СписокФизлиц
	ИПНИсчисленныйТекст = 
		"ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ИПНИсчисленный.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|		ИПНИсчисленный.ФизЛицо КАК ФизЛицо,
		|		ИПНИсчисленный.ВидДохода КАК ВидДохода,
		|		СУММА(ИПНИсчисленный.Налог) КАК ИсчисленныйНалогЗаМесяц
		|ПОМЕСТИТЬ ВТ_ИПНИсчисленный
		|	ИЗ
		|		РегистрНакопления.ИПНИсчисленный КАК ИПНИсчисленный
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК РаботникиОрганизации
		|			ПО (РаботникиОрганизации.Физлицо = ИПНИсчисленный.ФизЛицо)
		|	ГДЕ
		|		ИПНИсчисленный.МесяцНалоговогоПериода >= &парамНачалоГода
		|		И ИПНИсчисленный.МесяцНалоговогоПериода <= &парамКонец
		|		И ИПНИсчисленный.Налогоплательщик = &парамНалогоплательщик
		|		" + ?(НЕ ЭтоРасчетПервойПоловиныМесяца, "И ИПНИсчисленный.Регистратор <> &парамРегистратор", "") + "
		|		И ИПНИсчисленный.Период <= &парамКонецПериодаРегистрации
		|		И ИПНИсчисленный.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ИПНИсчисленный.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ИПНИсчисленный.ФизЛицо,
		|		ИПНИсчисленный.ВидДохода";

	Запрос.Текст = ИПНИсчисленныйТекст;
	Запрос.Выполнить();
	ИПНИсчисленныйТекст = "ВТ_ИПНИсчисленный";

	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы для СписокФизлиц
	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныеВзносы
	|
	|ПОМЕСТИТЬ ВТ_ОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало
	|	И ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец
	|	И ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик
	|	И ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации
	|	И ОПВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ОПВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ОПВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|";

	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТ_ОПВРасчетыСФондами";

	// ПрименениеВычетовВОрганизации
	//	Поля:
	//		Физлицо,
	//		Период
	//
	// Описание:
	//	Выбирает список физлиц + периоды в которые применяются налоговые вычеты по 
	//	заданной организации
	ПрименениеВычетовВОрганизацииТекст = 
	"ВЫБРАТЬ
	|	ИПНПрименениеВычетовСрезПоследних.Физлицо КАК Физлицо,
	|	ИПНПрименениеВычетовСрезПоследних.Период КАК Период
	|
	|ПОМЕСТИТЬ ВТ_ПрименениеВычетовВОрганизации
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ИПНПрименениеВычетов.Период) КАК ПериодСреза,
	|		Периоды.Физлицо КАК Физлицо,
	|		Периоды.Период КАК Период
	|	ИЗ
	|		"+ПериодыТекст+" КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|			ПО Периоды.Период >= ИПНПрименениеВычетов.Период 
	|				И ИПНПрименениеВычетов.Физлицо = Периоды.Физлицо
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Физлицо,
	|		Периоды.Период) КАК ИПНПрименениеВычетовСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|		ПО ИПНПрименениеВычетов.Период = ИПНПрименениеВычетовСрезПоследних.ПериодСреза 
	|			И ИПНПрименениеВычетов.Физлицо = ИПНПрименениеВычетовСрезПоследних.Физлицо
	|
	|ГДЕ
	|	ИПНПрименениеВычетов.Налогоплательщик = &парамНалогоплательщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНПрименениеВычетовСрезПоследних.Физлицо,
	|	ИПНПрименениеВычетовСрезПоследних.Период
	|";
	
	Запрос.Текст = ПрименениеВычетовВОрганизацииТекст;
	Запрос.Выполнить();
	ПрименениеВычетовВОрганизацииТекст = "ВТ_ПрименениеВычетовВОрганизации";	
	
	// ОтработанноеВремя
	//	Поля:
	//		Физлицо,
	//		Период,
	//		ПредоставлятьВычет
	//
	// Описание:
	//	Список физлиц-периодов с правом применения налоговых вычетов по отработанному времени
	//	
	// определяем по датам приема и увольнения
	ОтработанноеВремяТекст = 
	"ВЫБРАТЬ
	|	ОтработанноеВремя.Период,
	|	ОтработанноеВремя.ФизЛицо,
	|	ВЫБОР
	|		КОГДА ОтработанноеВремя.ДатаС <= ОтработанноеВремя.ДатаПо
	|			ТОГДА РАЗНОСТЬДАТ(ОтработанноеВремя.ДатаС, ОтработанноеВремя.ДатаПо, ДЕНЬ) + 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КалендарныхДнейРаботы,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА ОтработанноеВремя.ДатаС <= ОтработанноеВремя.ДатаПо
	|					ТОГДА РАЗНОСТЬДАТ(ОтработанноеВремя.ДатаС, ОтработанноеВремя.ДатаПо, ДЕНЬ) + 1
	|				ИНАЧЕ 0
	|			КОНЕЦ >= 16
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПредоставлятьВычет
	|
	|ПОМЕСТИТЬ ВТ_ОтработанноеВремя
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтработанноеВремя.Период,
	|		ОтработанноеВремя.ФизЛицо,
	|
	|		ВЫБОР 
	|			// вообще не был принят в штат - не считаем отработанное время
	|			КОГДА ОтработанноеВремя.ДатаПриема = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
	|			// принят в штат в предыдущих месяцах - считаем с первого числа месяца
	|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаПриема, МЕСЯЦ) < ОтработанноеВремя.Период 
	|				ТОГДА ОтработанноеВремя.Период
	|			// принят в штат в текущем месяце - считаем с даты приема
	|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаПриема, МЕСЯЦ) = ОтработанноеВремя.Период
	|				ТОГДА ОтработанноеВремя.ДатаПриема
	|			// сюда попасть не должны - не считаем 
	|			ИНАЧЕ
	|				ДАТАВРЕМЯ(3999, 12, 31)
	|		КОНЕЦ КАК ДатаС,
	|
	|		ВЫБОР 
	|			// повторный прием в ту же организацию и еще не уволен 
	|			// или еще не уволен после первого приема - считаем до конца месяца
	|			КОГДА ОтработанноеВремя.ДатаПриема > ОтработанноеВремя.ДатаУвольнения 
	|				  ИЛИ ГОД(ОтработанноеВремя.ДатаУвольнения) = 1
	|				ТОГДА КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
	|			// уволен до начала месяца - не считаем
	|			КОГДА ОтработанноеВремя.ДатаУвольнения < ОтработанноеВремя.Период
	|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|			// уволен в текущем месяце - считаем до даты увольнения
	|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаУвольнения, МЕСЯЦ) = ОтработанноеВремя.Период
	|               ТОГДА ОтработанноеВремя.ДатаУвольнения
	|			// еще не уволен - считаем до конца месяца
	|			ИНАЧЕ
	|				КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
	|		КОНЕЦ КАК ДатаПо
	|
	|	ИЗ			
	|		"+КадровыеПериодыРаботниковТекст+" КАК ОтработанноеВремя) КАК ОтработанноеВремя
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОтработанноеВремя.ФизЛицо,
	|	ОтработанноеВремя.Период
	|";
	
	Запрос.Текст = ОтработанноеВремяТекст;
	Запрос.Выполнить();
	ОтработанноеВремяТекст = "ВТ_ОтработанноеВремя";
	
	// ПрименяемыеВычетыТекст
	//	Поля:
	//		Физлицо
	//		Период
	//		НалоговыйВычетЛичный
	//
	//	Описание:
	//	Выбирает по всем периодам года налоговые вычеты на которые имеет право физлицо
	ПрименяемыеВычетыТекст = 
	"ВЫБРАТЬ
	|	ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо КАК Физлицо,
	|	ИПННалоговыеВычетыФизлицСрезПоследних.Период КАК Период,
	|	ВЫБОР
	|		КОГДА (ПрименениеВычетов.Физлицо) ЕСТЬ NULL
	|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизЛиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПризнакПрименениеВычета,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицоНеРезидент,
	|	ЕСТЬNULL(ОтработанноеВремя.КалендарныхДнейРаботы, 0) КАК КалендарныхДнейРаботы,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП,
	|	ВЫБОР 
	|		КОГДА (ПрименениеВычетов.Физлицо) ЕСТЬ NULL 
	|				ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|				ИЛИ НЕ ЕСТЬNULL(ОтработанноеВремя.ПредоставлятьВычет, ЛОЖЬ)
	|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
	|			ТОГДА 0 
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
	|	КОНЕЦ КАК НалоговыйВычетЛичный
	|
	|ПОМЕСТИТЬ ВТ_ПрименяемыеВычеты
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ВычетыФизлиц.Период) КАК ПериодСреза,
	|		Периоды.Физлицо КАК Физлицо,
	|		Периоды.Период КАК Период
	|	ИЗ
	|		" + ПериодыТекст + " КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
	|			ПО ВычетыФизлиц.Период <= Периоды.Период 
	|				И ВычетыФизлиц.Физлицо = Периоды.Физлицо
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Физлицо,
	|		Периоды.Период) КАК ИПННалоговыеВычетыФизлицСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
	|		ПО ВычетыФизлиц.Период = ИПННалоговыеВычетыФизлицСрезПоследних.ПериодСреза 
	|			И ВычетыФизлиц.Физлицо = ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименениеВычетовВОрганизацииТекст + " КАК ПрименениеВычетов
	|		ПО ПрименениеВычетов.Физлицо = ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо 
	|				И ПрименениеВычетов.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОтработанноеВремяТекст + " КАК ОтработанноеВремя
	|		ПО ОтработанноеВремя.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период 
	|			И ОтработанноеВремя.ФизЛицо = ИПННалоговыеВычетыФизлицСрезПоследних.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
	|		ПО ГражданствоФизЛиц.ФизЛицо = ИПННалоговыеВычетыФизлицСрезПоследних.ФизЛицо
	|			И ГражданствоФизЛиц.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо,
	|	ИПННалоговыеВычетыФизлицСрезПоследних.Период
	|";

	Запрос.Текст = ПрименяемыеВычетыТекст;
	Запрос.Выполнить();
	ПрименяемыеВычетыТекст = "ВТ_ПрименяемыеВычеты";

	// ИсчисленныйИПН	
	//	Поля:
	//		Физлицо
	//		Период
	//		НалогИсчисленный
	//		НалогУжеИсчисленный
	//		ПримененныйВычет
	//		ПримененняЛьгота
	//	
	//	Описание:
	//	Выбирает применяемые вычеты, доход и исчисленный налог 
	//	и производит расчет налога и примененных вычетов
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Доходы.ФизЛицо,
	|	Доходы.Период,
	|	Доходы.ВидДохода,
	|	Доходы.СуммаДоходаВсего,
	|	Доходы.СуммаНеоблагаемогоДохода,
	|	Доходы.СуммаДоходаОборот - Доходы.СуммаВычетаОборот КАК ОблагаемыйДоход,
	|	Доходы.ИсчисленнаяОблагаемаяБазаОборот КАК РанееИсчисленнаяОблагаемаяБаза,
	|	Доходы.ПрочиеВычетыОборот КАК ПрочиеВычеты,
	|	
	|	ЕСТЬNULL(ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ, ЛОЖЬ) КАК ПрименяетсяЛьготаУчастникаВОВ,
	|	ЕСТЬNULL(ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности, ЛОЖЬ) КАК ПрименяетсяЛьготаПоИнвалидности,
	|	ПрименяемыеЛьготы.ОтношениеКИнвалидности,
	|	ПрименяемыеЛьготы.ГруппаИнвалидности,
	|	ЕСТЬNULL(ПрименяемыеЛьготы.ЛьготаПоДоходу, 0) КАК ЛьготаПоДоходу,
	|
	|	ЕСТЬNULL(ИПНИсчисленный.ИсчисленныйНалогЗаМесяц, 0) КАК РанееИсчисленныйНалог,
	|	ЕСТЬNULL(Доходы.ПримененныйВычетЗаМесяц, 0) КАК ПримененныйВычетЗаМесяц,
	|	ЕСТЬNULL(Доходы.ПримененныйВычетЗаГод, 0) КАК ПримененныйВычетЗаГод,
	|	ЕСТЬNULL(Доходы.ПримененнаяЛьготаЗаМесяц, 0) КАК ПримененнаяЛьготаЗаМесяц,
	|	ЕСТЬNULL(Доходы.ПримененнаяЛьготаЗаГод, 0) КАК ПримененнаяЛьготаЗаГод,
	|	ЕСТЬNULL(Доходы.РазрешенныйВычетЗаМесяц, 0) КАК РазрешенныйВычетЗаМесяц,
	|	ЕСТЬNULL(Доходы.РазрешенныйВычетЗаГод, 0) КАК РазрешенныйВычетЗаГод,
	|	ЕСТЬNULL(Доходы.ПримененнаяЛьготаНаПредыдущемМестеРаботы, 0) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
	|
	|	ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныеВзносы, 0) КАК ИсчисленныеВзносы,
	|
	|	ЕСТЬNULL(ПрименяемыеВычеты.ПризнакПрименениеВычета, 0) КАК ПризнакПрименениеВычета,
	|	ЕСТЬNULL(ПрименяемыеВычеты.ПризнакФизЛицоНеРезидент, 0) КАК ПризнакФизЛицоНеРезидент,
	|	ЕСТЬNULL(ПрименяемыеВычеты.КалендарныхДнейРаботы, 0) КАК КалендарныхДнейРаботы,
	|	ЕСТЬNULL(ПрименяемыеВычеты.РазмерМЗП, 0) КАК РазмерМЗП,
	|	ЕСТЬNULL(ПрименяемыеВычеты.НалоговыйВычетЛичный, 0) КАК НалоговыйВычетЛичный
	|
	|ИЗ
	|	" + ДоходыВычетыЛьготыПоПериодамТекст + " КАК Доходы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеЛьготыТекст + " КАК ПрименяемыеЛьготы
	|		ПО Доходы.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
	|			И Доходы.Период = ПрименяемыеЛьготы.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНИсчисленныйТекст + " КАК ИПНИсчисленный
	|		ПО Доходы.ФизЛицо = ИПНИсчисленный.ФизЛицо
	|			И Доходы.Период = ИПНИсчисленный.МесяцНалоговогоПериода
	|			И Доходы.ВидДохода = ИПНИсчисленный.ВидДохода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОПВРасчетыСФондамиТекст + " КАК ОПВРасчетыСФондами
	|		ПО Доходы.ФизЛицо = ОПВРасчетыСФондами.ФизЛицо
	|			И Доходы.Период = ОПВРасчетыСФондами.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеВычетыТекст + " КАК ПрименяемыеВычеты
	|		ПО Доходы.ФизЛицо = ПрименяемыеВычеты.ФизЛицо
	|			И Доходы.Период = ПрименяемыеВычеты.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Доходы.ФизЛицо, 
	|	Доходы.Период,
	|	Доходы.ВидДохода
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеДляРасчетаИПНПосле2009()

// Получить данные для расчета ИПН по фиксированной ставке, начиная с 2017 года
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей ИПН
//
// Возвращаемое значение:
//  Выборка из результата запроса
//
Функция ПолучитьДанныеДляРасчетаИПНПосле2017(ПервыйМесяцНалоговогоПериода, ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, Знач СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	
	Запрос.УстановитьПараметр("парамНалогоплательщик", 			   Налогоплательщик);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", 		   ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 		   НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамРегистратор", 				   Регистратор);
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	   КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачалоГода",				   Макс(НачалоГода(ПервыйМесяцНалоговогоПериода), '20170101'));
	Запрос.УстановитьПараметр("парамДатаНачалаРасчетаПоФиксСтавке",	'20070101');
	Запрос.УстановитьПараметр("парамНачало", 	 			 	   Макс(НачалоМесяца(ПервыйМесяцНалоговогоПериода), '20170101'));
	Запрос.УстановитьПараметр("парамКонец", 	 			  	   Макс(КонецМесяца(ПоследнийМесяцНалоговогоПериода), '20170101235959'));

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛицо
	| 
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
	
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";
	
	// Периоды
	// Таблица список периодов-физлиц по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо
	|
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК Работники
	|		ПО Работники.Физлицо = ИПНСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации И
	|	ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик И
	|	ИПНСведенияОДоходах.Период >= &парамДатаНачалаРасчетаПоФиксСтавке
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТ_Периоды";

	// Составим текст запроса для вычисления всех месяцев периода
	ДатыПериодовГодаТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период
	|
	|ПОМЕСТИТЬ ВТ_ДатыПериодовГода
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК ПроизводственныйКалендарь
	|
	|ГДЕ
	|	ПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &парамНачалоГода И &парамКонец
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ)
	|";

	Запрос.Текст = ДатыПериодовГодаТекст;
	Запрос.Выполнить();
	ДатыПериодовГодаТекст = "ВТ_ДатыПериодовГода";
	
	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-нерезидентов
	ГражданствоФизЛицТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	Периоды.ФизЛицо,
	|	Периоды.Период,
	|	ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) КАК НеЯвляетсяНалоговымРезидентомРК
	|
	|ПОМЕСТИТЬ ВТ_ГражданствоФизЛиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.ФизЛицо,
	|		Периоды.Период,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодГражданства
	|	ИЗ
	|		" + ПериодыТекст + " КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО ВЫБОР
	|					КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|						ТОГДА Периоды.ФизЛицо.ФизЛицо 
	|					ИНАЧЕ Периоды.ФизЛицо 
	|				КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|				И ГражданствоФизЛиц.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.ФизЛицо,
	|		Периоды.Период) КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВЫБОР 
	|				КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|			И Периоды.ПериодГражданства = ГражданствоФизЛиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.ФизЛицо,
	|	Периоды.Период";

	Запрос.Текст = ГражданствоФизЛицТекст;
	Запрос.Выполнить();
	ГражданствоФизЛицТекст = "ВТ_ГражданствоФизЛиц";

	// РасчетныеПоказатели
	//	Поля:
	//		Период
	//		РазмерМРП
	//		РазмерМЗП
	//
	//	Описание:
	// Выбирает размер месячного расчетного показателя по периодам
	РасчетныеПоказателиТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМРПДляЦелейНалогообложения, 0) КАК РазмерМРП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗПДляЦелейНалогообложения, 0) КАК РазмерМЗП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
	|
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказатели
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ДатыПериодовГодаТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РасчетныеПоказателиТекст;
	Запрос.Выполнить();
	РасчетныеПоказателиТекст = "ВТ_РасчетныеПоказатели";

	// ПрименяемыеЛьготы
	//	Поля:
	//		Физлицо
	//		Период
	//		ПрименяетсяЛьготаУчастникаВОВ
	//		ПрименяетсяЛьготаПоИнвалидности
	//		ЛьготаПоДоходу
	//
	//	Описание:
	//	Выбирает по всем периодам года льготы на которые имеет право физлицо
	ПрименяемыеЛьготыТекст = 
	"ВЫБРАТЬ
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период,
	|	
	|	ИПНЛьготыФизлиц.ОтношениеКИнвалидности,
	|	ИПНЛьготыФизлиц.ГруппаИнвалидности,
	|
	|	ВЫБОР
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > 0 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПрименяетсяЛьготаУчастникаВОВ,
	|
	|	ВЫБОР
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаПоИнвалидности > 0 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПрименяетсяЛьготаПоИнвалидности,
	|
	|	ВЫБОР 
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
	|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ 
	|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
	|	КОНЕЦ КАК ЛьготаПоДоходу
	|
	|ПОМЕСТИТЬ ВТ_ПрименяемыеЛьготы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИПНЛьготыФизлицСрезПоследних.Физлицо КАК Физлицо,
	|		ИПНЛьготыФизлицСрезПоследних.Период КАК Период,
	|		ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности,
	|		ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности,
	|		ВЫБОР 
	|			КОГДА (ЛьготыФизлицПоИнвалидности.Физлицо) ЕСТЬ NULL 
	|				ТОГДА 0 
	|			ИНАЧЕ ВЫБОР 
	|					КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|							И ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности = ""III"" 
	|						ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
	|					ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
	|				  КОНЕЦ 
	|		КОНЕЦ КАК ЛьготаПоИнвалидности,
	|		ВЫБОР 
	|			КОГДА (ЛьготыФизлицУчастниковВОВ.Физлицо) ЕСТЬ NULL 
	|				ТОГДА 0 
	|			ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) 
	|		КОНЕЦ КАК ЛьготаУчастникаВОВ
	|		
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МАКСИМУМ(ЛьготыФизлицПоИнвалидности.Период) КАК ПериодСрезаИнвалидность,
	|			МАКСИМУМ(ЛьготыФизлицУчастниковВОВ.Период) КАК ПериодСрезаУчастникиВОВ,
	|			Периоды.Физлицо КАК Физлицо,
	|			Периоды.Период КАК Период
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|				ПО ЛьготыФизлицПоИнвалидности.Период <= Периоды.Период 
	|					И ЛьготыФизлицПоИнвалидности.Физлицо = ВЫБОР 
	|																КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|																	ТОГДА Периоды.Физлицо.Физлицо
	|																ИНАЧЕ Периоды.Физлицо
	|															КОНЕЦ
	|					И (ЛьготыФизЛицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	|						ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизЛицПоИнвалидности.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
	|
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|				ПО ЛьготыФизлицУчастниковВОВ.Период <= Периоды.Период 
	|					И ЛьготыФизлицУчастниковВОВ.Физлицо = ВЫБОР 
	|																КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|																	ТОГДА Периоды.Физлицо.Физлицо
	|																ИНАЧЕ Периоды.Физлицо
	|															КОНЕЦ
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Физлицо,
	|			Периоды.Период) КАК ИПНЛьготыФизлицСрезПоследних
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|			ПО ЛьготыФизлицПоИнвалидности.Период = ИПНЛьготыФизлицСрезПоследних.ПериодСрезаИнвалидность 
	|				И ЛьготыФизлицПоИнвалидности.Физлицо = ВЫБОР 
	|															КОГДА ИПНЛьготыФизлицСрезПоследних.Физлицо ССЫЛКА Справочник.Контрагенты
	|																ТОГДА ИПНЛьготыФизлицСрезПоследних.Физлицо.Физлицо
	|															ИНАЧЕ ИПНЛьготыФизлицСрезПоследних.Физлицо
	|														КОНЕЦ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|			ПО ЛьготыФизлицУчастниковВОВ.Период = ИПНЛьготыФизлицСрезПоследних.ПериодСрезаУчастникиВОВ 
	|				И ЛьготыФизлицУчастниковВОВ.Физлицо = ВЫБОР 
	|															КОГДА ИПНЛьготыФизлицСрезПоследних.Физлицо ССЫЛКА Справочник.Контрагенты
	|																ТОГДА ИПНЛьготыФизлицСрезПоследних.Физлицо.Физлицо
	|															ИНАЧЕ ИПНЛьготыФизлицСрезПоследних.Физлицо
	|														КОНЕЦ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
	|			ПО РасчетныеПоказатели.Период = ИПНЛьготыФизлицСрезПоследних.Период) КАК ИПНЛьготыФизлиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период
	|";
	
	Запрос.Текст = ПрименяемыеЛьготыТекст;
	Запрос.Выполнить();
	ПрименяемыеЛьготыТекст = "ВТ_ПрименяемыеЛьготы";	
	
	// КадровыеПериодыРаботников
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ДатаПриема
	//		ДатаУвольнения
	//
	//	Описание:
	// Выбирает актуальные даты приема и увольнения по физлицам для дальнейшего ограничения предоставления вычетов
	КадровыеПериодыРаботниковТекст = "
	|ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	Периоды.ФизЛицо КАК ФизЛицо,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|				ТОГДА РаботникиОрганизации.Период
	|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|		КОНЕЦ) КАК ДатаПриема,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|				ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
	|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|		КОНЕЦ) КАК ДатаУвольнения
	|ПОМЕСТИТЬ ВТ_КадровыеПериодыРаботников
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		ПО Периоды.ФизЛицо = РаботникиОрганизации.Сотрудник.Физлицо
	|			И (РаботникиОрганизации.Организация = &парамГоловнаяОрганизация)
	|			И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|			И (РаботникиОрганизации.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
	|			И (РаботникиОрганизации.ПричинаИзмененияСостояния В (ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу), ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)))
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	Периоды.ФизЛицо
	|";
	
	Запрос.Текст = КадровыеПериодыРаботниковТекст;
	Запрос.Выполнить();
	КадровыеПериодыРаботниковТекст = "ВТ_КадровыеПериодыРаботников";
	
	// ДоходыВычетыЛьготы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		СуммаДоходаВсего
	//		СуммаНеоблагаемогоДохода
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//		ПрочиеВычетыОборот
	//		ИсчисленнаяОблагаемаяБазаОборот
	//		ПримененныйВычетОборот
	//		ПримененнаяЛьготаОборот
	//		РазрешенныйВычетОборот
	//		ПримененнаяЛьготаНаПредыдущемМестеРаботыОборот
	//
	//	Описание:
	// Выбирает общую сумму доходов, облагаемые налогом доходы, объект исчисления, а также льготы и вычеты за весь год по физлицам из СписокФизлиц
	ДоходыВычетыЛьготыТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ИПНСведенияОДоходах.ВидДохода КАК ВидДохода,
	|	СУММА(ИПНСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	СУММА(ВЫБОР
	|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ИПНСведенияОДоходах.СуммаДоходаОборот
	|			КОГДА НЕ(ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН)
	|				ТОГДА ИПНСведенияОДоходах.СуммаВычетаОборот
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаНеоблагаемогоДохода,
	|	СУММА(ВЫБОР 
	|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА ИПНСведенияОДоходах.СуммаДоходаОборот 
	|			ИНАЧЕ 0 
	|		  КОНЕЦ) КАК СуммаДоходаОборот,
	|	СУММА(ВЫБОР 
	|			КОГДА ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН 
	|				ТОГДА 0
	|			ИНАЧЕ ИПНСведенияОДоходах.СуммаВычетаОборот
	|		  КОНЕЦ) КАК СуммаВычетаОборот,
	|	СУММА(ВЫБОР 
	|			КОГДА ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН 
	|				ТОГДА ИПНСведенияОДоходах.СуммаВычетаОборот
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ПрочиеВычетыОборот,
	|	СУММА(ИПНСведенияОДоходах.ОблагаемаяБазаОборот) КАК ИсчисленнаяОблагаемаяБазаОборот,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДанныеРаботников.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА ИПНСведенияОДоходах.ПримененныйВычетОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныйВычетОборот,
	|	СУММА(ИПНСведенияОДоходах.ПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаОборот,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДанныеРаботников.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА ИПНСведенияОДоходах.РазрешенныйВычетОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК РазрешенныйВычетОборот,
	|	0 КАК ПримененнаяЛьготаНаПредыдущемМестеРаботыОборот
	|
	|ПОМЕСТИТЬ ВТ_ДоходыВычетыЛьготы
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах.Обороты(
	|							&парамНачалоГода,
	|							&парамКонец,
	|							МЕСЯЦ,
	|							Налогоплательщик = &парамНалогоплательщик
	|							И ПериодРегистрации <= &парамПериодРегистрации
	|							И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНСведенияОДоходах
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КадровыеПериодыРаботников.ФизЛицо КАК ФизЛицо,
	|			КадровыеПериодыРаботников.ДатаПриема КАК ДатаПриема
	|		ИЗ
	|			ВТ_КадровыеПериодыРаботников КАК КадровыеПериодыРаботников
	|		
	|		СГРУППИРОВАТЬ ПО
	|			КадровыеПериодыРаботников.ФизЛицо,
	|			КадровыеПериодыРаботников.ДатаПриема) КАК ДанныеРаботников
	|		ПО ИПНСведенияОДоходах.ФизЛицо = ДанныеРаботников.ФизЛицо
	|			И (НАЧАЛОПЕРИОДА(ДанныеРаботников.ДатаПриема, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.Физлицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ),
	|	ИПНСведенияОДоходах.ВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя),
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ИПНСведенияПредыдущегоМестаРаботы.ПримененнаяЛьгота
	|ИЗ
	|	РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК ИПНСведенияПредыдущегоМестаРаботы
	|ГДЕ
	|	ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода
	|	И ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации
	|	И ИПНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик
	|	И ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамДатаНачалаРасчетаПоФиксСтавке
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|";

	Запрос.Текст = ДоходыВычетыЛьготыТекст;
	Запрос.Выполнить();
	ДоходыВычетыЛьготыТекст = "ВТ_ДоходыВычетыЛьготы";	
	
	// ДоходыВычетыЛьготыЗаГод
	//	Поля:
	//		ФизЛицо
	//		Период
	//		СуммаДоходаВсего
	//		СуммаНеоблагаемогоДохода
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//		ПрочиеВычетыОборот
	//		ИсчисленнаяОблагаемаяБазаОборот
	//		ПримененныйВычетОборот
	//		ПримененнаяЛьготаОборот
	//		РазрешенныйВычетОборот
	//		ПримененнаяЛьготаНаПредыдущемМестеРаботыОборот
	//
	//	Описание:
	// Группирует общую сумму доходов, облагаемые налогом доходы, объект исчисления, а также льготы и вычеты 
	ДоходыВычетыЛьготыЗаГодТекст = 
		"ВЫБРАТЬ
		|	Периоды.Период КАК Период,
		|	ДоходыВычетыЛьготы.Физлицо КАК Физлицо,
		|	ДоходыВычетыЛьготы.ВидДохода КАК ВидДохода,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.СуммаДоходаВсего
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаДоходаВсего,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.СуммаНеоблагаемогоДохода
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаНеоблагаемогоДохода,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.СуммаДоходаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаДоходаОборот,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.СуммаВычетаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаВычетаОборот,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.ПрочиеВычетыОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПрочиеВычетыОборот,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.ИсчисленнаяОблагаемаяБазаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ИсчисленнаяОблагаемаяБазаОборот,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетЗаМесяц,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.ПримененнаяЛьготаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененнаяЛьготаЗаМесяц,
		|	СУММА(ВЫБОР
		|			КОГДА Периоды.Период = ДоходыВычетыЛьготы.Период
		|				ТОГДА ДоходыВычетыЛьготы.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетЗаМесяц,
		|	СУММА(ДоходыВычетыЛьготы.ПримененныйВычетОборот) КАК ПримененныйВычетЗаГод,
		|	СУММА(ДоходыВычетыЛьготы.РазрешенныйВычетОборот) КАК РазрешенныйВычетЗаГод,
		|	СУММА(ДоходыВычетыЛьготы.ПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаЗаГод,
		|	СУММА(ДоходыВычетыЛьготы.ПримененнаяЛьготаНаПредыдущемМестеРаботыОборот) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы
		|ПОМЕСТИТЬ ВТ_ДоходыВычетыЛьготыЗаГод
		|ИЗ
		|	" + ДатыПериодовГодаТекст + " КАК Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ДоходыВычетыЛьготыТекст + " КАК ДоходыВычетыЛьготы
		|		ПО Периоды.Период >= ДоходыВычетыЛьготы.Период
		|			И ДоходыВычетыЛьготы.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, Год)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоходыВычетыЛьготы.Физлицо,
		|	Периоды.Период,
		|	ДоходыВычетыЛьготы.ВидДохода
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период,
		|	Физлицо,
		|	ВидДохода";

	Запрос.Текст = ДоходыВычетыЛьготыЗаГодТекст;
	Запрос.Выполнить();
	ДоходыВычетыЛьготыЗаГодТекст = "ВТ_ДоходыВычетыЛьготыЗаГод";	
		
	// ДоходыВычетыЛьготыПоПериодам
	//	Поля:
	//		ФизЛицо
	//		Период
	//		СуммаДоходаВсего
	//		СуммаНеоблагаемогоДохода
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//		ПрочиеВычетыОборот
	//		ИсчисленнаяОблагаемаяБазаОборот
	//		ПримененныйВычетОборот
	//		ПримененнаяЛьготаОборот
	//		РазрешенныйВычетОборот
	//		ПримененнаяЛьготаНаПредыдущемМестеРаботыОборот
	//
	//	Описание:
	// Ограничивает выбранные данные по рассчитываемым периодам  
	ДоходыВычетыЛьготыПоПериодамТекст = 
		"ВЫБРАТЬ
		|	ДоходыВычетыЛьготыЗаГод.Период,
		|	ДоходыВычетыЛьготыЗаГод.ФизЛицо,
		|	ДоходыВычетыЛьготыЗаГод.ВидДохода,
		|	ДоходыВычетыЛьготыЗаГод.СуммаДоходаВсего,
		|	ДоходыВычетыЛьготыЗаГод.СуммаНеоблагаемогоДохода,
		|	ДоходыВычетыЛьготыЗаГод.СуммаДоходаОборот,
		|	ДоходыВычетыЛьготыЗаГод.СуммаВычетаОборот,
		|	ДоходыВычетыЛьготыЗаГод.ПрочиеВычетыОборот,
		|	ДоходыВычетыЛьготыЗаГод.ИсчисленнаяОблагаемаяБазаОборот,
		|	ДоходыВычетыЛьготыЗаГод.ПримененныйВычетЗаМесяц,
		|	ДоходыВычетыЛьготыЗаГод.ПримененнаяЛьготаЗаМесяц,
		|	ДоходыВычетыЛьготыЗаГод.РазрешенныйВычетЗаМесяц,
		|	ДоходыВычетыЛьготыЗаГод.ПримененныйВычетЗаГод,
		|	ДоходыВычетыЛьготыЗаГод.РазрешенныйВычетЗаГод,
		|	ДоходыВычетыЛьготыЗаГод.ПримененнаяЛьготаЗаГод,
		|	ДоходыВычетыЛьготыЗаГод.ПримененнаяЛьготаНаПредыдущемМестеРаботы
		|ПОМЕСТИТЬ ВТ_ДоходыВычетыЛьготыПоПериодам
		|ИЗ
		|	" + ДоходыВычетыЛьготыЗаГодТекст + " КАК ДоходыВычетыЛьготыЗаГод
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Периоды
		|		ПО ДоходыВычетыЛьготыЗаГод.Период = Периоды.Период
		|			И ДоходыВычетыЛьготыЗаГод.ФизЛицо = Периоды.ФизЛицо";
	
	Запрос.Текст = ДоходыВычетыЛьготыПоПериодамТекст;
	Запрос.Выполнить();
	ДоходыВычетыЛьготыПоПериодамТекст = "ВТ_ДоходыВычетыЛьготыПоПериодам";	

	// ИПНИсчисленный
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ВидДохода
	//		ИсчисленныйНалог
	//		Регистратор
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом) для СписокФизлиц
	ИПНИсчисленныйТекст = 
		"ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ИПНИсчисленный.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|		ИПНИсчисленный.ФизЛицо КАК ФизЛицо,
		|		ИПНИсчисленный.ВидДохода КАК ВидДохода,
		|		СУММА(ИПНИсчисленный.Налог) КАК ИсчисленныйНалогЗаМесяц
		|ПОМЕСТИТЬ ВТ_ИПНИсчисленный
		|	ИЗ
		|		РегистрНакопления.ИПНИсчисленный КАК ИПНИсчисленный
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК РаботникиОрганизации
		|			ПО (РаботникиОрганизации.Физлицо = ИПНИсчисленный.ФизЛицо)
		|	ГДЕ
		|		ИПНИсчисленный.МесяцНалоговогоПериода >= &парамНачалоГода
		|		И ИПНИсчисленный.МесяцНалоговогоПериода <= &парамКонец
		|		И ИПНИсчисленный.Налогоплательщик = &парамНалогоплательщик
		|		" + ?(НЕ ЭтоРасчетПервойПоловиныМесяца, "И ИПНИсчисленный.Регистратор <> &парамРегистратор", "") + "
		|		И ИПНИсчисленный.Период <= &парамКонецПериодаРегистрации
		|		И ИПНИсчисленный.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ИПНИсчисленный.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ИПНИсчисленный.ФизЛицо,
		|		ИПНИсчисленный.ВидДохода";

	Запрос.Текст = ИПНИсчисленныйТекст;
	Запрос.Выполнить();
	ИПНИсчисленныйТекст = "ВТ_ИПНИсчисленный";

	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы для СписокФизлиц
	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныеВзносы
	|
	|ПОМЕСТИТЬ ВТ_ОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало
	|	И ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец
	|	И ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик
	|	И ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации
	|	И ОПВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ОПВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ОПВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|";

	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТ_ОПВРасчетыСФондами";

	// ВОСМСИсчисленные
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные взносы ОСМС для СписокФизлиц
	ВОСМСИсчисленныеТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВОСМСИсчисленные.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ВОСМСИсчисленные.ФизЛицо КАК ФизЛицо,
	|   ВОСМСИсчисленные.ВидДохода КАК ВидДохода,
	|	СУММА(ВОСМСИсчисленные.Взнос) КАК ИсчисленныеВзносы
	|
	|ПОМЕСТИТЬ ВТ_ВОСМСИсчисленные
	|ИЗ
	|	РегистрНакопления.ВОСМСИсчисленные КАК ВОСМСИсчисленные
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ВОСМСИсчисленные.ФизЛицо
	|
	|ГДЕ
	|	ВОСМСИсчисленные.МесяцНалоговогоПериода >= &парамНачало
	|	И ВОСМСИсчисленные.МесяцНалоговогоПериода <= &парамКонец
	|	И ВОСМСИсчисленные.Налогоплательщик = &парамНалогоплательщик
	|	И ВОСМСИсчисленные.Период <= &парамКонецПериодаРегистрации
	|	И ВОСМСИсчисленные.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ВОСМСИсчисленные.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|	И ВОСМСИсчисленные.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВОСМСИсчисленные.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ВОСМСИсчисленные.ФизЛицо,
	|   ВОСМСИсчисленные.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВОСМСИсчисленные.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ВОСМСИсчисленные.МесяцНалоговогоПериода, МЕСЯЦ),
	|   ВОСМСИсчисленные.ВидДохода
	|";

	Запрос.Текст = ВОСМСИсчисленныеТекст;
	Запрос.Выполнить();
	ВОСМСИсчисленныеТекст = "ВТ_ВОСМСИсчисленные";


	// ПрименениеВычетовВОрганизации
	//	Поля:
	//		Физлицо,
	//		Период
	//
	// Описание:
	//	Выбирает список физлиц + периоды в которые применяются налоговые вычеты по 
	//	заданной организации
	ПрименениеВычетовВОрганизацииТекст = 
	"ВЫБРАТЬ
	|	ИПНПрименениеВычетовСрезПоследних.Физлицо КАК Физлицо,
	|	ИПНПрименениеВычетовСрезПоследних.Период КАК Период
	|
	|ПОМЕСТИТЬ ВТ_ПрименениеВычетовВОрганизации
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ИПНПрименениеВычетов.Период) КАК ПериодСреза,
	|		Периоды.Физлицо КАК Физлицо,
	|		Периоды.Период КАК Период
	|	ИЗ
	|		"+ПериодыТекст+" КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|			ПО Периоды.Период >= ИПНПрименениеВычетов.Период 
	|				И ИПНПрименениеВычетов.Физлицо = Периоды.Физлицо
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Физлицо,
	|		Периоды.Период) КАК ИПНПрименениеВычетовСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|		ПО ИПНПрименениеВычетов.Период = ИПНПрименениеВычетовСрезПоследних.ПериодСреза 
	|			И ИПНПрименениеВычетов.Физлицо = ИПНПрименениеВычетовСрезПоследних.Физлицо
	|
	|ГДЕ
	|	ИПНПрименениеВычетов.Налогоплательщик = &парамНалогоплательщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНПрименениеВычетовСрезПоследних.Физлицо,
	|	ИПНПрименениеВычетовСрезПоследних.Период
	|";
	
	Запрос.Текст = ПрименениеВычетовВОрганизацииТекст;
	Запрос.Выполнить();
	ПрименениеВычетовВОрганизацииТекст = "ВТ_ПрименениеВычетовВОрганизации";	
	
	// ОтработанноеВремя
	//	Поля:
	//		Физлицо,
	//		Период,
	//		ПредоставлятьВычет
	//
	// Описание:
	//	Список физлиц-периодов с правом применения налоговых вычетов по отработанному времени
	//	
	// определяем по датам приема и увольнения
	ОтработанноеВремяТекст = 
	"ВЫБРАТЬ
	|	ОтработанноеВремя.Период,
	|	ОтработанноеВремя.ФизЛицо,
	|	ВЫБОР
	|		КОГДА ОтработанноеВремя.ДатаС <= ОтработанноеВремя.ДатаПо
	|			ТОГДА РАЗНОСТЬДАТ(ОтработанноеВремя.ДатаС, ОтработанноеВремя.ДатаПо, ДЕНЬ) + 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КалендарныхДнейРаботы,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА ОтработанноеВремя.ДатаС <= ОтработанноеВремя.ДатаПо
	|					ТОГДА РАЗНОСТЬДАТ(ОтработанноеВремя.ДатаС, ОтработанноеВремя.ДатаПо, ДЕНЬ) + 1
	|				ИНАЧЕ 0
	|			КОНЕЦ >= 16
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПредоставлятьВычет
	|
	|ПОМЕСТИТЬ ВТ_ОтработанноеВремя
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтработанноеВремя.Период,
	|		ОтработанноеВремя.ФизЛицо,
	|
	|		ВЫБОР 
	|			// вообще не был принят в штат - не считаем отработанное время
	|			КОГДА ОтработанноеВремя.ДатаПриема = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
	|			// принят в штат в предыдущих месяцах - считаем с первого числа месяца
	|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаПриема, МЕСЯЦ) < ОтработанноеВремя.Период 
	|				ТОГДА ОтработанноеВремя.Период
	|			// принят в штат в текущем месяце - считаем с даты приема
	|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаПриема, МЕСЯЦ) = ОтработанноеВремя.Период
	|				ТОГДА ОтработанноеВремя.ДатаПриема
	|			// сюда попасть не должны - не считаем 
	|			ИНАЧЕ
	|				ДАТАВРЕМЯ(3999, 12, 31)
	|		КОНЕЦ КАК ДатаС,
	|
	|		ВЫБОР 
	|			// повторный прием в ту же организацию и еще не уволен 
	|			// или еще не уволен после первого приема - считаем до конца месяца
	|			КОГДА ОтработанноеВремя.ДатаПриема > ОтработанноеВремя.ДатаУвольнения 
	|				  ИЛИ ГОД(ОтработанноеВремя.ДатаУвольнения) = 1
	|				ТОГДА КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
	|			// уволен до начала месяца - не считаем
	|			КОГДА ОтработанноеВремя.ДатаУвольнения < ОтработанноеВремя.Период
	|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|			// уволен в текущем месяце - считаем до даты увольнения
	|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаУвольнения, МЕСЯЦ) = ОтработанноеВремя.Период
	|               ТОГДА ОтработанноеВремя.ДатаУвольнения
	|			// еще не уволен - считаем до конца месяца
	|			ИНАЧЕ
	|				КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
	|		КОНЕЦ КАК ДатаПо
	|
	|	ИЗ			
	|		"+КадровыеПериодыРаботниковТекст+" КАК ОтработанноеВремя) КАК ОтработанноеВремя
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОтработанноеВремя.ФизЛицо,
	|	ОтработанноеВремя.Период
	|";
	
	Запрос.Текст = ОтработанноеВремяТекст;
	Запрос.Выполнить();
	ОтработанноеВремяТекст = "ВТ_ОтработанноеВремя";
	
	// ПрименяемыеВычетыТекст
	//	Поля:
	//		Физлицо
	//		Период
	//		НалоговыйВычетЛичный
	//
	//	Описание:
	//	Выбирает по всем периодам года налоговые вычеты на которые имеет право физлицо
	ПрименяемыеВычетыТекст = 
	"ВЫБРАТЬ
	|	ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо КАК Физлицо,
	|	ИПННалоговыеВычетыФизлицСрезПоследних.Период КАК Период,
	|	ВЫБОР
	|		КОГДА (ПрименениеВычетов.Физлицо) ЕСТЬ NULL
	|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизЛиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПризнакПрименениеВычета,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицоНеРезидент,
	|	ЕСТЬNULL(ОтработанноеВремя.КалендарныхДнейРаботы, 0) КАК КалендарныхДнейРаботы,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП,
	|	ВЫБОР 
	|		КОГДА (ПрименениеВычетов.Физлицо) ЕСТЬ NULL 
	|				ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|				ИЛИ НЕ ЕСТЬNULL(ОтработанноеВремя.ПредоставлятьВычет, ЛОЖЬ)
	|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
	|			ТОГДА 0 
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
	|	КОНЕЦ КАК НалоговыйВычетЛичный
	|
	|ПОМЕСТИТЬ ВТ_ПрименяемыеВычеты
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ВычетыФизлиц.Период) КАК ПериодСреза,
	|		Периоды.Физлицо КАК Физлицо,
	|		Периоды.Период КАК Период
	|	ИЗ
	|		" + ПериодыТекст + " КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
	|			ПО ВычетыФизлиц.Период <= Периоды.Период 
	|				И ВычетыФизлиц.Физлицо = Периоды.Физлицо
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Физлицо,
	|		Периоды.Период) КАК ИПННалоговыеВычетыФизлицСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
	|		ПО ВычетыФизлиц.Период = ИПННалоговыеВычетыФизлицСрезПоследних.ПериодСреза 
	|			И ВычетыФизлиц.Физлицо = ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименениеВычетовВОрганизацииТекст + " КАК ПрименениеВычетов
	|		ПО ПрименениеВычетов.Физлицо = ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо 
	|				И ПрименениеВычетов.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОтработанноеВремяТекст + " КАК ОтработанноеВремя
	|		ПО ОтработанноеВремя.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период 
	|			И ОтработанноеВремя.ФизЛицо = ИПННалоговыеВычетыФизлицСрезПоследних.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
	|		ПО ГражданствоФизЛиц.ФизЛицо = ИПННалоговыеВычетыФизлицСрезПоследних.ФизЛицо
	|			И ГражданствоФизЛиц.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо,
	|	ИПННалоговыеВычетыФизлицСрезПоследних.Период
	|";

	Запрос.Текст = ПрименяемыеВычетыТекст;
	Запрос.Выполнить();
	ПрименяемыеВычетыТекст = "ВТ_ПрименяемыеВычеты";

	// ИсчисленныйИПН	
	//	Поля:
	//		Физлицо
	//		Период
	//		НалогИсчисленный
	//		НалогУжеИсчисленный
	//		ПримененныйВычет
	//		ПримененняЛьгота
	//	
	//	Описание:
	//	Выбирает применяемые вычеты, доход и исчисленный налог 
	//	и производит расчет налога и примененных вычетов
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Доходы.ФизЛицо,
	|	Доходы.Период,
	|	Доходы.ВидДохода,
	|	Доходы.СуммаДоходаВсего,
	|	Доходы.СуммаНеоблагаемогоДохода,
	|	Доходы.СуммаДоходаОборот - Доходы.СуммаВычетаОборот КАК ОблагаемыйДоход,
	|	Доходы.ИсчисленнаяОблагаемаяБазаОборот КАК РанееИсчисленнаяОблагаемаяБаза,
	|	Доходы.ПрочиеВычетыОборот КАК ПрочиеВычеты,
	|	
	|	ЕСТЬNULL(ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ, ЛОЖЬ) КАК ПрименяетсяЛьготаУчастникаВОВ,
	|	ЕСТЬNULL(ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности, ЛОЖЬ) КАК ПрименяетсяЛьготаПоИнвалидности,
	|	ПрименяемыеЛьготы.ОтношениеКИнвалидности,
	|	ПрименяемыеЛьготы.ГруппаИнвалидности,
	|	ЕСТЬNULL(ПрименяемыеЛьготы.ЛьготаПоДоходу, 0) КАК ЛьготаПоДоходу,
	|
	|	ЕСТЬNULL(ИПНИсчисленный.ИсчисленныйНалогЗаМесяц, 0) КАК РанееИсчисленныйНалог,
	|	ЕСТЬNULL(Доходы.ПримененныйВычетЗаМесяц, 0) КАК ПримененныйВычетЗаМесяц,
	|	ЕСТЬNULL(Доходы.ПримененныйВычетЗаГод, 0) КАК ПримененныйВычетЗаГод,
	|	ЕСТЬNULL(Доходы.ПримененнаяЛьготаЗаМесяц, 0) КАК ПримененнаяЛьготаЗаМесяц,
	|	ЕСТЬNULL(Доходы.ПримененнаяЛьготаЗаГод, 0) КАК ПримененнаяЛьготаЗаГод,
	|	ЕСТЬNULL(Доходы.РазрешенныйВычетЗаМесяц, 0) КАК РазрешенныйВычетЗаМесяц,
	|	ЕСТЬNULL(Доходы.РазрешенныйВычетЗаГод, 0) КАК РазрешенныйВычетЗаГод,
	|	ЕСТЬNULL(Доходы.ПримененнаяЛьготаНаПредыдущемМестеРаботы, 0) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
	|
	|	ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныеВзносы, 0) КАК ИсчисленныеВзносы,
	|	ЕСТЬNULL(ВОСМСИсчисленные.ИсчисленныеВзносы, 0) КАК ИсчисленныеВзносыОСМС,
	|
	|	ЕСТЬNULL(ПрименяемыеВычеты.ПризнакПрименениеВычета, 0) КАК ПризнакПрименениеВычета,
	|	ЕСТЬNULL(ПрименяемыеВычеты.ПризнакФизЛицоНеРезидент, 0) КАК ПризнакФизЛицоНеРезидент,
	|	ЕСТЬNULL(ПрименяемыеВычеты.КалендарныхДнейРаботы, 0) КАК КалендарныхДнейРаботы,
	|	ЕСТЬNULL(ПрименяемыеВычеты.РазмерМЗП, 0) КАК РазмерМЗП,
	|	ЕСТЬNULL(ПрименяемыеВычеты.НалоговыйВычетЛичный, 0) КАК НалоговыйВычетЛичный
	|
	|ИЗ
	|	" + ДоходыВычетыЛьготыПоПериодамТекст + " КАК Доходы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеЛьготыТекст + " КАК ПрименяемыеЛьготы
	|		ПО Доходы.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
	|			И Доходы.Период = ПрименяемыеЛьготы.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНИсчисленныйТекст + " КАК ИПНИсчисленный
	|		ПО Доходы.ФизЛицо = ИПНИсчисленный.ФизЛицо
	|			И Доходы.Период = ИПНИсчисленный.МесяцНалоговогоПериода
	|			И Доходы.ВидДохода = ИПНИсчисленный.ВидДохода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОПВРасчетыСФондамиТекст + " КАК ОПВРасчетыСФондами
	|		ПО Доходы.ФизЛицо = ОПВРасчетыСФондами.ФизЛицо
	|			И Доходы.Период = ОПВРасчетыСФондами.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ВОСМСИсчисленныеТекст + " КАК ВОСМСИсчисленные
	|		ПО Доходы.ФизЛицо = ВОСМСИсчисленные.ФизЛицо
	|			И Доходы.Период = ВОСМСИсчисленные.МесяцНалоговогоПериода
	|			И Доходы.ВидДохода = ВОСМСИсчисленные.ВидДохода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеВычетыТекст + " КАК ПрименяемыеВычеты
	|		ПО Доходы.ФизЛицо = ПрименяемыеВычеты.ФизЛицо
	|			И Доходы.Период = ПрименяемыеВычеты.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Доходы.ФизЛицо, 
	|	Доходы.Период,
	|	Доходы.ВидДохода
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеДляРасчетаИПНПосле2017()

// Получить данные для расчета ИПН по фиксированной ставке, начиная с 2018 года
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей ИПН
//
// Возвращаемое значение:
//  Выборка из результата запроса
//
Функция ПолучитьДанныеДляРасчетаИПНПосле2018(ПервыйМесяцНалоговогоПериода, ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, Знач СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	
	Запрос.УстановитьПараметр("Налогоплательщик",				 Налогоплательщик);
	Запрос.УстановитьПараметр("ПериодРегистрации",				 НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериодаРегистрации", 		 КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамРегистратор",				 Регистратор);
	Запрос.УстановитьПараметр("ДатаНачалаРасчета",				 '20180101');
	Запрос.УстановитьПараметр("ПервыйМесяцНалоговогоПериода",	 Макс(НачалоМесяца(ПервыйМесяцНалоговогоПериода), '20180101'));
	Запрос.УстановитьПараметр("ПоследнийМесяцНалоговогоПериода", Макс(КонецМесяца(ПоследнийМесяцНалоговогоПериода), '20180101235959'));

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛицо
	| 
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
	
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";
	
	// Периоды
	// Таблица список периодов-физлиц по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо
	|
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК Работники
	|		ПО Работники.Физлицо = ИПНСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации И
	|	ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик И
	|	ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета И
	|	ИПНСведенияОДоходах.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТ_Периоды";
	
	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-нерезидентов
	ГражданствоФизЛицТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	Периоды.ФизЛицо,
	|	Периоды.Период,
	|	ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) КАК НеЯвляетсяНалоговымРезидентомРК
	|
	|ПОМЕСТИТЬ ВТ_ГражданствоФизЛиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.ФизЛицо,
	|		Периоды.Период,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодГражданства
	|	ИЗ
	|		" + ПериодыТекст + " КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО ВЫБОР
	|					КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|						ТОГДА Периоды.ФизЛицо.ФизЛицо 
	|					ИНАЧЕ Периоды.ФизЛицо 
	|				КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|				И ГражданствоФизЛиц.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.ФизЛицо,
	|		Периоды.Период) КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВЫБОР 
	|				КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|			И Периоды.ПериодГражданства = ГражданствоФизЛиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.ФизЛицо,
	|	Периоды.Период";

	Запрос.Текст = ГражданствоФизЛицТекст;
	Запрос.Выполнить();
	ГражданствоФизЛицТекст = "ВТ_ГражданствоФизЛиц";
	
	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//		СуммаДоходаВсего
	//		СуммаНеоблагаемогоДохода
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//		ИсчисленнаяОблагаемаяБазаОборот
	//
	//	Описание:
	// Выбирает общую сумму доходов, облагаемые налогом доходы, объект исчисления по физлицам из СписокФизлиц
	ДоходыТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	СУММА(ВЫБОР
	|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом)
	|				ТОГДА ИПНСведенияОДоходах.СуммаДоходаОборот
	|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА 0
	|			ИНАЧЕ ИПНСведенияОДоходах.СуммаДоходаОборот - ИПНСведенияОДоходах.СуммаВычетаОборот
	|		КОНЕЦ) КАК ОблагаемыйДоход,
	|	ИПНСведенияОДоходах.ВидДохода КАК ВидДохода,
	|	СУММА(ИПНСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	СУММА(ВЫБОР 
	|			КОГДА ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН 
	|				ТОГДА 0
	|			ИНАЧЕ ИПНСведенияОДоходах.СуммаВычетаОборот
	|		  КОНЕЦ) КАК СуммаВычетаОборот,
	|	СУММА(ИПНСведенияОДоходах.ОблагаемаяБазаОборот) КАК ИсчисленнаяОблагаемаяБазаОборот
	|
	|ПОМЕСТИТЬ ВТ_Доходы
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах.Обороты(
	|							&ПервыйМесяцНалоговогоПериода,
	|							&ПоследнийМесяцНалоговогоПериода,
	|							МЕСЯЦ,
	|							Налогоплательщик = &Налогоплательщик
	|							И ПериодРегистрации <= &ПериодРегистрации
	|							И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНСведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.Физлицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ),
	|	ИПНСведенияОДоходах.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ВидДохода
	|";

	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТ_Доходы";
	
	// ИПНИсчисленный
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ВидДохода
	//		ИсчисленныйНалог
	//		Регистратор
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом) для СписокФизлиц
	ИПНИсчисленныйТекст = 
		"ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ИПНИсчисленный.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|		ИПНИсчисленный.ФизЛицо КАК ФизЛицо,
		|		ИПНИсчисленный.ВидДохода КАК ВидДохода,
		|		СУММА(ИПНИсчисленный.Налог) КАК ИсчисленныйНалогЗаМесяц
		|ПОМЕСТИТЬ ВТ_ИПНИсчисленный
		|	ИЗ
		|		РегистрНакопления.ИПНИсчисленный КАК ИПНИсчисленный
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК РаботникиОрганизации
		|			ПО (РаботникиОрганизации.Физлицо = ИПНИсчисленный.ФизЛицо)
		|	ГДЕ
		|		ИПНИсчисленный.МесяцНалоговогоПериода >= &ПервыйМесяцНалоговогоПериода
		|		И ИПНИсчисленный.МесяцНалоговогоПериода <= &ПоследнийМесяцНалоговогоПериода
		|		И ИПНИсчисленный.Налогоплательщик = &Налогоплательщик
		|		" + ?(НЕ ЭтоРасчетПервойПоловиныМесяца, "И ИПНИсчисленный.Регистратор <> &парамРегистратор", "") + "
		|		И ИПНИсчисленный.Период <= &КонецПериодаРегистрации
		|		И ИПНИсчисленный.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
		|		И ИПНИсчисленный.Активность
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ИПНИсчисленный.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ИПНИсчисленный.ФизЛицо,
		|		ИПНИсчисленный.ВидДохода
		|	
		|	ИНДЕКСИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ИПНИсчисленный.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ИПНИсчисленный.ФизЛицо,
		|		ИПНИсчисленный.ВидДохода";

	Запрос.Текст = ИПНИсчисленныйТекст;
	Запрос.Выполнить();
	ИПНИсчисленныйТекст = "ВТ_ИПНИсчисленный";
	
	// ПрименяемыеВычетыИПНТекст
	//	Поля:
	//		Физлицо
	//		Период
	//		ПримененныйВычет
	//
	//	Описание:
	//	Выбирает примененные вычеты за период
	ПримененныеВычетыИПНТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ) КАК Период,
	|	СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо КАК ФизЛицо,
	|	СУММА(СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот) КАК ПримененныеВычеты,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОбИсчисленииВычетовИПНОбороты.Регистратор = &парамРегистратор
	|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныеВычетыВТекущемРасчете,
	|	СведенияОбИсчисленииВычетовИПНОбороты.ВидДохода
	|ПОМЕСТИТЬ ВТ_ПримененныеВычетыИПН
	|ИЗ
	|	РегистрНакопления.СведенияОбИсчисленииВычетовИПН.Обороты(
	|			&ПервыйМесяцНалоговогоПериода,
	|			&ПоследнийМесяцНалоговогоПериода,
	|			Регистратор,
	|			Налогоплательщик = &Налогоплательщик
	|				И ПериодРегистрации <= &ПериодРегистрации) КАК СведенияОбИсчисленииВычетовИПНОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ),
	|	СведенияОбИсчисленииВычетовИПНОбороты.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ВидДохода";
	
	Запрос.Текст = ПримененныеВычетыИПНТекст;
	Запрос.Выполнить();
	ПримененныеВычетыИПНТекст = "ВТ_ПримененныеВычетыИПН";
	
	// ИсчисленныйИПН	
	//	Поля:
	//		Физлицо
	//		Период
	//		ОблагаемыйДоход
	//		СуммаДоходаВсего
	//		СуммаНеоблагаемогоДохода
	//		ОблагаемыйДоход
	//		РанееИсчисленнаяОблагаемаяБаза
	//		РанееИсчисленныйНалог
	//	
	//	Описание:
	//	Выбирает примененные вычеты, доход и исчисленный налог 
	//	и производит расчет налога
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Доходы.ФизЛицо,
	|	Доходы.Период,
	|	Доходы.ВидДохода,
	|	Доходы.ОблагаемыйДоход,
	|	Доходы.СуммаДоходаВсего,
	|	Доходы.ИсчисленнаяОблагаемаяБазаОборот КАК РанееИсчисленнаяОблагаемаяБаза,
	|	ЕСТЬNULL(ИПНИсчисленный.ИсчисленныйНалогЗаМесяц, 0) КАК РанееИсчисленныйНалог,
	|	ЕСТЬNULL(ПримененныеВычетыИПН.ПримененныеВычеты, 0) КАК ПримененныеВычеты,
	|	ЕСТЬNULL(ПримененныеВычетыИПН.ПримененныеВычетыВТекущемРасчете, 0) КАК ПримененныеВычетыВТекущемРасчете,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицоНеРезидент
	|
	|ИЗ
	|	" + ДоходыТекст + " КАК Доходы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНИсчисленныйТекст + " КАК ИПНИсчисленный
	|		ПО Доходы.ФизЛицо = ИПНИсчисленный.ФизЛицо
	|			И Доходы.Период = ИПНИсчисленный.МесяцНалоговогоПериода
	|			И Доходы.ВидДохода = ИПНИсчисленный.ВидДохода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПримененныеВычетыИПНТекст + " КАК ПримененныеВычетыИПН
	|		ПО Доходы.ФизЛицо = ПримененныеВычетыИПН.ФизЛицо
	|			И Доходы.Период = ПримененныеВычетыИПН.Период
	|			И Доходы.ВидДохода = ПримененныеВычетыИПН.ВидДохода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
	|		ПО ГражданствоФизЛиц.ФизЛицо = Доходы.ФизЛицо
	|			И ГражданствоФизЛиц.Период = Доходы.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Доходы.ФизЛицо, 
	|	Доходы.Период,
	|	Доходы.ВидДохода
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеДляРасчетаИПНПосле2018()

// Получить данные для расчета ИПН по фиксированной ставке, начиная с 2019 года
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей ИПН
//
// Возвращаемое значение:
//  Выборка из результата запроса
//
Функция ПолучитьДанныеДляРасчетаИПНПосле2019(ПервыйМесяцНалоговогоПериода, ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, Знач СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	
	Запрос.УстановитьПараметр("Налогоплательщик",				 Налогоплательщик);
	Запрос.УстановитьПараметр("ПериодРегистрации",				 НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериодаРегистрации", 		 КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамРегистратор",				 Регистратор);
	Запрос.УстановитьПараметр("ДатаНачалаРасчета",				 '20180101');
	Запрос.УстановитьПараметр("ПервыйМесяцНалоговогоПериода",	 Макс(НачалоМесяца(ПервыйМесяцНалоговогоПериода), '20180101'));
	Запрос.УстановитьПараметр("ПоследнийМесяцНалоговогоПериода", Макс(КонецМесяца(ПоследнийМесяцНалоговогоПериода), '20180101235959'));

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛицо
	| 
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
	
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";
	
	// Периоды
	// Таблица список периодов-физлиц по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо
	|
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК Работники
	|		ПО Работники.Физлицо = ИПНСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации И
	|	ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик И
	|	ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета И
	|	ИПНСведенияОДоходах.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТ_Периоды";
	
	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-нерезидентов
	ГражданствоФизЛицТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	Периоды.ФизЛицо,
	|	Периоды.Период,
	|	ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) КАК НеЯвляетсяНалоговымРезидентомРК
	|
	|ПОМЕСТИТЬ ВТ_ГражданствоФизЛиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.ФизЛицо,
	|		Периоды.Период,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодГражданства
	|	ИЗ
	|		" + ПериодыТекст + " КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО ВЫБОР
	|					КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|						ТОГДА Периоды.ФизЛицо.ФизЛицо 
	|					ИНАЧЕ Периоды.ФизЛицо 
	|				КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|				И ГражданствоФизЛиц.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.ФизЛицо,
	|		Периоды.Период) КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВЫБОР 
	|				КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|			И Периоды.ПериодГражданства = ГражданствоФизЛиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.ФизЛицо,
	|	Периоды.Период";

	Запрос.Текст = ГражданствоФизЛицТекст;
	Запрос.Выполнить();
	ГражданствоФизЛицТекст = "ВТ_ГражданствоФизЛиц";
	
	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//		СуммаДоходаВсего
	//		СуммаНеоблагаемогоДохода
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//		ИсчисленнаяОблагаемаяБазаОборот
	//
	//	Описание:
	// Выбирает общую сумму доходов, облагаемые налогом доходы, объект исчисления по физлицам из СписокФизлиц
	ДоходыТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	СУММА(ВЫБОР
	|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом)
	|				ТОГДА ИПНСведенияОДоходах.СуммаДоходаОборот
	|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА 0
	|			ИНАЧЕ ИПНСведенияОДоходах.СуммаДоходаОборот - ИПНСведенияОДоходах.СуммаВычетаОборот
	|		КОНЕЦ) КАК ОблагаемыйДоход,
	|	ИПНСведенияОДоходах.ВидДохода КАК ВидДохода,
	|	СУММА(ИПНСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	СУММА(ВЫБОР 
	|			КОГДА ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН 
	|				ТОГДА 0
	|			ИНАЧЕ ИПНСведенияОДоходах.СуммаВычетаОборот
	|		  КОНЕЦ) КАК СуммаВычетаОборот,
	|	СУММА(ИПНСведенияОДоходах.ОблагаемаяБазаОборот) КАК ИсчисленнаяОблагаемаяБазаОборот,
	|	СУММА(ИПНСведенияОДоходах.ПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаОборот
	|
	|ПОМЕСТИТЬ ВТ_Доходы
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах.Обороты(
	|							&ПервыйМесяцНалоговогоПериода,
	|							&ПоследнийМесяцНалоговогоПериода,
	|							МЕСЯЦ,
	|							Налогоплательщик = &Налогоплательщик
	|							И ПериодРегистрации <= &ПериодРегистрации
	|							И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНСведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.Физлицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ),
	|	ИПНСведенияОДоходах.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ВидДохода
	|";

	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТ_Доходы";
	
	// ИПНИсчисленный
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ВидДохода
	//		ИсчисленныйНалог
	//		Регистратор
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом) для СписокФизлиц
	ИПНИсчисленныйТекст = 
		"ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ИПНИсчисленный.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|		ИПНИсчисленный.ФизЛицо КАК ФизЛицо,
		|		ИПНИсчисленный.ВидДохода КАК ВидДохода,
		|		СУММА(ИПНИсчисленный.Налог) КАК ИсчисленныйНалогЗаМесяц
		|ПОМЕСТИТЬ ВТ_ИПНИсчисленный
		|	ИЗ
		|		РегистрНакопления.ИПНИсчисленный КАК ИПНИсчисленный
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК РаботникиОрганизации
		|			ПО (РаботникиОрганизации.Физлицо = ИПНИсчисленный.ФизЛицо)
		|	ГДЕ
		|		ИПНИсчисленный.МесяцНалоговогоПериода >= &ПервыйМесяцНалоговогоПериода
		|		И ИПНИсчисленный.МесяцНалоговогоПериода <= &ПоследнийМесяцНалоговогоПериода
		|		И ИПНИсчисленный.Налогоплательщик = &Налогоплательщик
		|		" + ?(НЕ ЭтоРасчетПервойПоловиныМесяца, "И ИПНИсчисленный.Регистратор <> &парамРегистратор", "") + "
		|		И ИПНИсчисленный.Период <= &КонецПериодаРегистрации
		|		И ИПНИсчисленный.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
		|		И ИПНИсчисленный.Активность
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ИПНИсчисленный.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ИПНИсчисленный.ФизЛицо,
		|		ИПНИсчисленный.ВидДохода
		|	
		|	ИНДЕКСИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ИПНИсчисленный.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ИПНИсчисленный.ФизЛицо,
		|		ИПНИсчисленный.ВидДохода";

	Запрос.Текст = ИПНИсчисленныйТекст;
	Запрос.Выполнить();
	ИПНИсчисленныйТекст = "ВТ_ИПНИсчисленный";
	
	// ПрименяемыеВычетыИПНТекст
	//	Поля:
	//		Физлицо
	//		Период
	//		ПримененныйВычет
	//
	//	Описание:
	//	Выбирает примененные вычеты за период
	ПримененныеВычетыИПНТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ) КАК Период,
	|	СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо КАК ФизЛицо,
	|	СУММА(СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот) КАК ПримененныеВычеты,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОбИсчисленииВычетовИПНОбороты.Регистратор = &парамРегистратор
	|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныеВычетыВТекущемРасчете,
	|	СведенияОбИсчисленииВычетовИПНОбороты.ВидДохода
	|ПОМЕСТИТЬ ВТ_ПримененныеВычетыИПН
	|ИЗ
	|	РегистрНакопления.СведенияОбИсчисленииВычетовИПН.Обороты(
	|			&ПервыйМесяцНалоговогоПериода,
	|			&ПоследнийМесяцНалоговогоПериода,
	|			Регистратор,
	|			Налогоплательщик = &Налогоплательщик
	|				И ПериодРегистрации <= &ПериодРегистрации) КАК СведенияОбИсчисленииВычетовИПНОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ),
	|	СведенияОбИсчисленииВычетовИПНОбороты.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ВидДохода";
	
	Запрос.Текст = ПримененныеВычетыИПНТекст;
	Запрос.Выполнить();
	ПримененныеВычетыИПНТекст = "ВТ_ПримененныеВычетыИПН";
	
	// ИсчисленныйИПН	
	//	Поля:
	//		Физлицо
	//		Период
	//		ОблагаемыйДоход
	//		СуммаДоходаВсего
	//		СуммаНеоблагаемогоДохода
	//		ОблагаемыйДоход
	//		РанееИсчисленнаяОблагаемаяБаза
	//		РанееИсчисленныйНалог
	//	
	//	Описание:
	//	Выбирает примененные вычеты, доход и исчисленный налог 
	//	и производит расчет налога
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Доходы.ФизЛицо,
	|	Доходы.Период,
	|	Доходы.ВидДохода,
	|	Доходы.ОблагаемыйДоход,
	|	Доходы.СуммаДоходаВсего,
	|	Доходы.ИсчисленнаяОблагаемаяБазаОборот КАК РанееИсчисленнаяОблагаемаяБаза,
	|	Доходы.ПримененнаяЛьготаОборот КАК РанееПримененнаяЛьгота,
	|	ЕСТЬNULL(ИПНИсчисленный.ИсчисленныйНалогЗаМесяц, 0) КАК РанееИсчисленныйНалог,
	|	ЕСТЬNULL(ПримененныеВычетыИПН.ПримененныеВычеты, 0) КАК ПримененныеВычеты,
	|	ЕСТЬNULL(ПримененныеВычетыИПН.ПримененныеВычетыВТекущемРасчете, 0) КАК ПримененныеВычетыВТекущемРасчете,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицоНеРезидент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|			ИЛИ ТИПЗНАЧЕНИЯ(Доходы.ФизЛицо) = ТИП(Справочник.Контрагенты)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НеПрименятьКорректировкуПоПрочимПризнакам
	|
	|ИЗ
	|	" + ДоходыТекст + " КАК Доходы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНИсчисленныйТекст + " КАК ИПНИсчисленный
	|		ПО Доходы.ФизЛицо = ИПНИсчисленный.ФизЛицо
	|			И Доходы.Период = ИПНИсчисленный.МесяцНалоговогоПериода
	|			И Доходы.ВидДохода = ИПНИсчисленный.ВидДохода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПримененныеВычетыИПНТекст + " КАК ПримененныеВычетыИПН
	|		ПО Доходы.ФизЛицо = ПримененныеВычетыИПН.ФизЛицо
	|			И Доходы.Период = ПримененныеВычетыИПН.Период
	|			И Доходы.ВидДохода = ПримененныеВычетыИПН.ВидДохода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
	|		ПО ГражданствоФизЛиц.ФизЛицо = Доходы.ФизЛицо
	|			И ГражданствоФизЛиц.Период = Доходы.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Доходы.ФизЛицо, 
	|	Доходы.Период,
	|	Доходы.ВидДохода
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеДляРасчетаИПНПосле2018()

// Получить данные для расчета ИПН по фиксированной ставке, начиная с 2020 года
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей ИПН
//
// Возвращаемое значение:
//  Выборка из результата запроса
//
Функция ПолучитьДанныеДляРасчетаИПНПосле2020(ПервыйМесяцНалоговогоПериода, ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, Знач СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	
	Запрос.УстановитьПараметр("Налогоплательщик",				 Налогоплательщик);
	Запрос.УстановитьПараметр("ПериодРегистрации",				 НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериодаРегистрации", 		 КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамРегистратор",				 Регистратор);
	Запрос.УстановитьПараметр("ДатаНачалаРасчета",				 '20180101');
	Запрос.УстановитьПараметр("ПервыйМесяцНалоговогоПериода",	 Макс(НачалоМесяца(ПервыйМесяцНалоговогоПериода), '20180101'));
	Запрос.УстановитьПараметр("ПоследнийМесяцНалоговогоПериода", Макс(КонецМесяца(ПоследнийМесяцНалоговогоПериода), '20180101235959'));

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛицо
	| 
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
	
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";
	
	// Периоды
	// Таблица список периодов-физлиц по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо
	|
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК Работники
	|		ПО Работники.Физлицо = ИПНСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации И
	|	ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик И
	|	ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета И
	|	ИПНСведенияОДоходах.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТ_Периоды";
	
	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-нерезидентов
	ГражданствоФизЛицТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	Периоды.ФизЛицо,
	|	Периоды.Период,
	|	ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) КАК НеЯвляетсяНалоговымРезидентомРК
	|
	|ПОМЕСТИТЬ ВТ_ГражданствоФизЛиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.ФизЛицо,
	|		Периоды.Период,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодГражданства
	|	ИЗ
	|		" + ПериодыТекст + " КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО ВЫБОР
	|					КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|						ТОГДА Периоды.ФизЛицо.ФизЛицо 
	|					ИНАЧЕ Периоды.ФизЛицо 
	|				КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|				И ГражданствоФизЛиц.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.ФизЛицо,
	|		Периоды.Период) КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВЫБОР 
	|				КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|			И Периоды.ПериодГражданства = ГражданствоФизЛиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.ФизЛицо,
	|	Периоды.Период";

	Запрос.Текст = ГражданствоФизЛицТекст;
	Запрос.Выполнить();
	ГражданствоФизЛицТекст = "ВТ_ГражданствоФизЛиц";
	
	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//		СуммаДоходаВсего
	//		СуммаНеоблагаемогоДохода
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//		ИсчисленнаяОблагаемаяБазаОборот
	//
	//	Описание:
	// Выбирает общую сумму доходов, облагаемые налогом доходы, объект исчисления по физлицам из СписокФизлиц
	ДоходыТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	СУММА(ВЫБОР
	|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом)
	|				ТОГДА ИПНСведенияОДоходах.СуммаДоходаОборот
	|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА 0
	|			ИНАЧЕ ИПНСведенияОДоходах.СуммаДоходаОборот - ИПНСведенияОДоходах.СуммаВычетаОборот
	|		КОНЕЦ) КАК ОблагаемыйДоход,
	|	ИПНСведенияОДоходах.ВидДохода КАК ВидДохода,
	|	СУММА(ИПНСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	СУММА(ВЫБОР 
	|			КОГДА ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН 
	|				ТОГДА 0
	|			ИНАЧЕ ИПНСведенияОДоходах.СуммаВычетаОборот
	|		  КОНЕЦ) КАК СуммаВычетаОборот,
	|	СУММА(ИПНСведенияОДоходах.ОблагаемаяБазаОборот) КАК ИсчисленнаяОблагаемаяБазаОборот,
	|	СУММА(ИПНСведенияОДоходах.ПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаОборот
	|
	|ПОМЕСТИТЬ ВТ_Доходы
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах.Обороты(
	|							&ПервыйМесяцНалоговогоПериода,
	|							&ПоследнийМесяцНалоговогоПериода,
	|							МЕСЯЦ,
	|							Налогоплательщик = &Налогоплательщик
	|							И ПериодРегистрации <= &ПериодРегистрации
	|							И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНСведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.Физлицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ),
	|	ИПНСведенияОДоходах.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ВидДохода
	|";

	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТ_Доходы";
	
	// ИПНИсчисленный
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ВидДохода
	//		ИсчисленныйНалог
	//		Регистратор
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом) для СписокФизлиц
	ИПНИсчисленныйТекст = 
		"ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(ИПНИсчисленный.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|		ИПНИсчисленный.ФизЛицо КАК ФизЛицо,
		|		ИПНИсчисленный.ВидДохода КАК ВидДохода,
		|		СУММА(ИПНИсчисленный.Налог) КАК ИсчисленныйНалогЗаМесяц
		|ПОМЕСТИТЬ ВТ_ИПНИсчисленный
		|	ИЗ
		|		РегистрНакопления.ИПНИсчисленный КАК ИПНИсчисленный
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК РаботникиОрганизации
		|			ПО (РаботникиОрганизации.Физлицо = ИПНИсчисленный.ФизЛицо)
		|	ГДЕ
		|		ИПНИсчисленный.МесяцНалоговогоПериода >= &ПервыйМесяцНалоговогоПериода
		|		И ИПНИсчисленный.МесяцНалоговогоПериода <= &ПоследнийМесяцНалоговогоПериода
		|		И ИПНИсчисленный.Налогоплательщик = &Налогоплательщик
		|		" + ?(НЕ ЭтоРасчетПервойПоловиныМесяца, "И ИПНИсчисленный.Регистратор <> &парамРегистратор", "") + "
		|		И ИПНИсчисленный.Период <= &КонецПериодаРегистрации
		|		И ИПНИсчисленный.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
		|		И ИПНИсчисленный.Активность
		|	
		|	СГРУППИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ИПНИсчисленный.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ИПНИсчисленный.ФизЛицо,
		|		ИПНИсчисленный.ВидДохода
		|	
		|	ИНДЕКСИРОВАТЬ ПО
		|		НАЧАЛОПЕРИОДА(ИПНИсчисленный.МесяцНалоговогоПериода, МЕСЯЦ),
		|		ИПНИсчисленный.ФизЛицо,
		|		ИПНИсчисленный.ВидДохода";

	Запрос.Текст = ИПНИсчисленныйТекст;
	Запрос.Выполнить();
	ИПНИсчисленныйТекст = "ВТ_ИПНИсчисленный";
	
	// ПрименяемыеВычетыИПНТекст
	//	Поля:
	//		Физлицо
	//		Период
	//		ПримененныйВычет
	//
	//	Описание:
	//	Выбирает примененные вычеты за период
	ПримененныеВычетыИПНТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ) КАК Период,
	|	СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо КАК ФизЛицо,
	|	СУММА(СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот) КАК ПримененныеВычеты,
	|	СУММА(ВЫБОР
	|			КОГДА СведенияОбИсчисленииВычетовИПНОбороты.Регистратор = &парамРегистратор
	|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПримененныеВычетыВТекущемРасчете,
	|	СведенияОбИсчисленииВычетовИПНОбороты.ВидДохода
	|ПОМЕСТИТЬ ВТ_ПримененныеВычетыИПН
	|ИЗ
	|	РегистрНакопления.СведенияОбИсчисленииВычетовИПН.Обороты(
	|			&ПервыйМесяцНалоговогоПериода,
	|			&ПоследнийМесяцНалоговогоПериода,
	|			Регистратор,
	|			Налогоплательщик = &Налогоплательщик
	|				И ПериодРегистрации <= &ПериодРегистрации) КАК СведенияОбИсчисленииВычетовИПНОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ),
	|	СведенияОбИсчисленииВычетовИПНОбороты.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период,
	|	ВидДохода";
	
	Запрос.Текст = ПримененныеВычетыИПНТекст;
	Запрос.Выполнить();
	ПримененныеВычетыИПНТекст = "ВТ_ПримененныеВычетыИПН";
	
	// ИсчисленныйИПН	
	//	Поля:
	//		Физлицо
	//		Период
	//		ОблагаемыйДоход
	//		СуммаДоходаВсего
	//		СуммаНеоблагаемогоДохода
	//		ОблагаемыйДоход
	//		РанееИсчисленнаяОблагаемаяБаза
	//		РанееИсчисленныйНалог
	//	
	//	Описание:
	//	Выбирает примененные вычеты, доход и исчисленный налог 
	//	и производит расчет налога
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Доходы.ФизЛицо,
	|	Доходы.Период,
	|	Доходы.ВидДохода,
	|	Доходы.ОблагаемыйДоход,
	|	Доходы.СуммаДоходаВсего,
	|	Доходы.ИсчисленнаяОблагаемаяБазаОборот КАК РанееИсчисленнаяОблагаемаяБаза,
	|	Доходы.ПримененнаяЛьготаОборот КАК РанееПримененнаяЛьгота,
	|	ЕСТЬNULL(ИПНИсчисленный.ИсчисленныйНалогЗаМесяц, 0) КАК РанееИсчисленныйНалог,
	|	ЕСТЬNULL(ПримененныеВычетыИПН.ПримененныеВычеты, 0) КАК ПримененныеВычеты,
	|	ЕСТЬNULL(ПримененныеВычетыИПН.ПримененныеВычетыВТекущемРасчете, 0) КАК ПримененныеВычетыВТекущемРасчете,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицоНеРезидент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|			ИЛИ ТИПЗНАЧЕНИЯ(Доходы.ФизЛицо) = ТИП(Справочник.Контрагенты)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НеПрименятьКорректировкуПоПрочимПризнакам
	|
	|ИЗ
	|	" + ДоходыТекст + " КАК Доходы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНИсчисленныйТекст + " КАК ИПНИсчисленный
	|		ПО Доходы.ФизЛицо = ИПНИсчисленный.ФизЛицо
	|			И Доходы.Период = ИПНИсчисленный.МесяцНалоговогоПериода
	|			И Доходы.ВидДохода = ИПНИсчисленный.ВидДохода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПримененныеВычетыИПНТекст + " КАК ПримененныеВычетыИПН
	|		ПО Доходы.ФизЛицо = ПримененныеВычетыИПН.ФизЛицо
	|			И Доходы.Период = ПримененныеВычетыИПН.Период
	|			И Доходы.ВидДохода = ПримененныеВычетыИПН.ВидДохода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
	|		ПО ГражданствоФизЛиц.ФизЛицо = Доходы.ФизЛицо
	|			И ГражданствоФизЛиц.Период = Доходы.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Доходы.ФизЛицо, 
	|	Доходы.Период,
	|	Доходы.ВидДохода
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьДанныеДляРасчетаИПНПосле2018()

// Получить данные для о Вычетах ИПН, по правилам 2018 года:
Функция ПолучитьДанныеДляРасчетаВычетовИПН(ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, Знач СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
	Если ПериодРегистрации >= '20220101' Тогда
		Возврат ПолучитьДанныеДляРасчетаВычетовИПНПосле2022(ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса, ЭтоРасчетПервойПоловиныМесяца);
												
	ИначеЕсли ПериодРегистрации >= '20210101' Тогда
		Возврат ПолучитьДанныеДляРасчетаВычетовИПНПосле2021(ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса, ЭтоРасчетПервойПоловиныМесяца);
												
	ИначеЕсли ПериодРегистрации >= '20200101' Тогда
		Возврат ПолучитьДанныеДляРасчетаВычетовИПНПосле2020(ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса, ЭтоРасчетПервойПоловиныМесяца);
												
	ИначеЕсли ПериодРегистрации >= '20190101' Тогда
		Возврат ПолучитьДанныеДляРасчетаВычетовИПНПосле2019(ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса, ЭтоРасчетПервойПоловиныМесяца);
	Иначе
		Возврат ПолучитьДанныеДляРасчетаВычетовИПНДо2019(ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса, ЭтоРасчетПервойПоловиныМесяца);
	КонецЕсли;
											
КонецФункции

// Получить данные для о Вычетах ИПН, по правилам 2018 года:
Функция ПолучитьДанныеДляРасчетаВычетовИПНДо2019(ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, Знач СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
												
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамРегистратор"	, Регистратор);
	Запрос.УстановитьПараметр("ПериодРегистрации"	, ПериодРегистрации);
	Запрос.УстановитьПараметр("КонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Налогоплательщик"	, Налогоплательщик);
	Запрос.УстановитьПараметр("ДатаНачалаРасчета"	, '20180101');
	Запрос.УстановитьПараметр("ПустаяДата"			, '00010101');
	Запрос.УстановитьПараметр("ГоловнаяОрганизация"	, ГоловнаяОрганизация);
	
	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИПНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик 
	|	И ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
	|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
	|	И ИПНСведенияОДоходах.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	// получим ПоследнийМесяцНалоговогоПериода
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИПНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик
	|	И ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
	|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
	|	И ИПНСведенияОДоходах.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);
	КонецЕсли;

	Запрос.УстановитьПараметр("ПервыйМесяцНалоговогоПериода"	, ПервыйМесяцНалоговогоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяцНалоговогоПериода"	, ПоследнийМесяцНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоГода"						, НачалоГода(ПервыйМесяцНалоговогоПериода));

	Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФизЛицо
		|ПОМЕСТИТЬ ВТ_СписокФизЛиц
		|ИЗ
		|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";

	// Периоды
	// Таблица список периодов-физлиц по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
		|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо
		|ПОМЕСТИТЬ ВТ_Периоды
		|ИЗ
		|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокФизЛиц КАК Работники
		|		ПО (Работники.Физлицо = ИПНСведенияОДоходах.ФизЛицо)
		|ГДЕ
		|	ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
		|	И ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик
		|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
		|	И ИПНСведенияОДоходах.Активность
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИПНСведенияОДоходах.ФизЛицо,
		|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)";
		
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-нерезидентов
	ГражданствоФизЛицТекст = "ВЫБРАТЬ
	|		Периоды.ФизЛицо,
	|		Периоды.Период,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодГражданства
	|ПОМЕСТИТЬ ВТ_ПериодыГражданствоФизЛиц
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО ВЫБОР
	|					КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|						ТОГДА Периоды.ФизЛицо.ФизЛицо 
	|					ИНАЧЕ Периоды.ФизЛицо 
	|				КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|				И ГражданствоФизЛиц.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.ФизЛицо,
	|		Периоды.Период 
	|
	|;
	| ///////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.ФизЛицо,
	|	Периоды.Период,
	|	ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) КАК НеЯвляетсяНалоговымРезидентомРК
	|
	|ПОМЕСТИТЬ ВТ_ГражданствоФизЛиц
	|ИЗ
	|	ВТ_ПериодыГражданствоФизЛиц КАК Периоды 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВЫБОР 
	|				КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|			И Периоды.ПериодГражданства = ГражданствоФизЛиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.ФизЛицо,
	|	Периоды.Период";

	Запрос.Текст = ГражданствоФизЛицТекст;
	Запрос.Выполнить();
	
	// РасчетныеПоказатели
	//	Поля:
	//		Период
	//		РазмерМРП
	//		РазмерМЗП
	//
	//	Описание:
	// Выбирает размер месячного расчетного показателя по периодам
	РасчетныеПоказателиТекст = "ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказателиСрезПоследних
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) >= РасчетныеПоказатели.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодСреза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМРПДляЦелейНалогообложения, 0) КАК РазмерМРП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗПДляЦелейНалогообложения, 0) КАК РазмерМЗП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказатели
	|ИЗ
	|	ВТ_РасчетныеПоказателиСрезПоследних КАК РасчетныеПоказателиСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период";

	Запрос.Текст = РасчетныеПоказателиТекст;
	Запрос.Выполнить();
	
	ПриминениеВычетаОПВ = "ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК СуммаВзносов,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ) КАК ВидВычетаИПН
	|ПОМЕСТИТЬ ВТ_ВычетОПВ
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокФизЛиц КАК РаботникиОрганизации
	|		ПО (РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо)
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &ПервыйМесяцНалоговогоПериода
	|	И ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &ПоследнийМесяцНалоговогоПериода
	|	И ОПВРасчетыСФондами.Налогоплательщик = &Налогоплательщик
	|	И ОПВРасчетыСФондами.Период <= &КонецПериодаРегистрации
	|	И ОПВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ОПВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ОПВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|	И ОПВРасчетыСФондами.Взнос <> 0
	|	И (ОПВРасчетыСФондами.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица
	|	И ОПВРасчетыСФондами.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2018, 1, 1)
	|	ИЛИ ОПВРасчетыСФондами.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2018, 1, 1))
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";
	
	Запрос.Текст = ПриминениеВычетаОПВ;
	Запрос.Выполнить();
	
	// Применение стандартного вычета
	ПрименениеСтандартногоВычета = 
	
	"ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	МАКСИМУМ(ИПНПрименениеВычетов.Период) КАК Период,
	|	ВТ_Периоды.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ПериодыПримененияВычетовМаксимум
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|		ПО (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ИПНПрименениеВычетов.Физлицо)
	|			И ВТ_Периоды.Период >= ИПНПрименениеВычетов.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период,
	|	ВТ_Периоды.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыМаксимум.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПериодыМаксимум.Физлицо КАК ФизЛицо,
	|	ИПНПрименениеВычетов.Налогоплательщик КАК Налогоплательщик
	|ПОМЕСТИТЬ ВТ_ПериодыПримененияВычетов
	|ИЗ
	|	ВТ_ПериодыПримененияВычетовМаксимум КАК ПериодыМаксимум
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|		ПО (ВЫБОР
	|				КОГДА ПериодыМаксимум.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ПериодыМаксимум.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ПериодыМаксимум.ФизЛицо
	|			КОНЕЦ = ИПНПрименениеВычетов.Физлицо)
	|			И ПериодыМаксимум.Период = ИПНПрименениеВычетов.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ВЫБОР
	|				КОГДА ПериодыМаксимум.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ПериодыМаксимум.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ПериодыМаксимум.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо)
	|			И ПериодыМаксимум.МесяцНалоговогоПериода = ГражданствоФизЛиц.Период
	|ГДЕ
	|	ИПНПрименениеВычетов.Налогоплательщик = &Налогоплательщик
	|   И НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, Ложь)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	МАКСИМУМ(ИПННалоговыеВычетыФизлиц.Период) КАК Период,
	|	ИПННалоговыеВычетыФизлиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ИПННалоговыеВычетыФизлицМаксимум
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ИПННалоговыеВычетыФизлиц
	|		ПО (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ИПННалоговыеВычетыФизлиц.Физлицо)
	|			И ВТ_Периоды.Период >= ИПННалоговыеВычетыФизлиц.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период,
	|	ИПННалоговыеВычетыФизлиц.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыМаксимум.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПериодыМаксимум.Физлицо КАК ФизЛицо,
	|	ИПННалоговыеВычетыФизлиц.ПредоставлятьЛичныйВычет КАК ПредоставлятьЛичныйВычет
	|ПОМЕСТИТЬ ВТ_ИПННалоговыеВычетыФизлиц
	|ИЗ
	|	ВТ_ИПННалоговыеВычетыФизлицМаксимум КАК ПериодыМаксимум
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ИПННалоговыеВычетыФизлиц
	|		ПО ПериодыМаксимум.ФизЛицо = ИПННалоговыеВычетыФизлиц.Физлицо
	|			И ПериодыМаксимум.Период = ИПННалоговыеВычетыФизлиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	ВТ_Периоды.ФизЛицо КАК Физлицо,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП) КАК ВидВычетаИПН,
	|	ВЫБОР
	|		КОГДА ПериодыПримененияВычетов.ФизЛицо ЕСТЬ NULL 
	|				ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
	|	КОНЕЦ КАК РазрешенныйВычет
	|ПОМЕСТИТЬ ВТ_ВычетСтандартный1МЗП
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ПериодыПримененияВычетов
	|		ПО ВТ_Периоды.Период = ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ПериодыПримененияВычетов.ФизЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
	|		ПО ВТ_Периоды.Период = ВычетыФизлиц.МесяцНалоговогоПериода
	|			И (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ВычетыФизлиц.ФизЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВТ_Периоды.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
	|			И ВТ_Периоды.Период = ГражданствоФизЛиц.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО ВТ_Периоды.Период = РасчетныеПоказатели.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцНалоговогоПериода,
	|	Физлицо,
	|	ВидВычетаИПН";
	
	Запрос.Текст = ПрименениеСтандартноговычета;
	Запрос.Выполнить();
	
	ПрименяемыеЛьготыТекст = "ВЫБРАТЬ
	|	МАКСИМУМ(ЛьготыФизлицПоИнвалидности.Период) КАК ПериодСрезаИнвалидность,
	|	МАКСИМУМ(ЛьготыФизлицУчастниковВОВ.Период) КАК ПериодСрезаУчастникиВОВ,
	|	Периоды.Физлицо КАК Физлицо,
	|	Периоды.Период КАК Период
	|ПОМЕСТИТЬ ВТ_ПериодыЛьготФизлиц
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|		ПО (ЛьготыФизлицПоИнвалидности.Период <= Периоды.Период)
	|			И (ЛьготыФизлицПоИнвалидности.Физлицо = ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.Физлицо.Физлицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ)
	|			И (ЛьготыФизлицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизлицПоИнвалидности.СрокДействияСправки, ГОД) >= КОНЕЦПЕРИОДА(Периоды.Период, ГОД))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|		ПО (ЛьготыФизлицУчастниковВОВ.Период <= Периоды.Период)
	|			И (ЛьготыФизлицУчастниковВОВ.Физлицо = ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.Физлицо.Физлицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Физлицо,
	|	Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодСрезаИнвалидность,
	|	ПериодСрезаУчастникиВОВ,
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыЛьготФизлиц.Физлицо КАК Физлицо,
	|	ВТ_ПериодыЛьготФизлиц.Период КАК Период,
	|	ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности,
	|	ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности,
	|	ВЫБОР
	|		КОГДА ЛьготыФизлицПоИнвалидности.Физлицо ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|						И ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности = ""III""
	|					ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
	|				ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК ЛьготаПоИнвалидности,
	|	ВЫБОР
	|		КОГДА ЛьготыФизлицУчастниковВОВ.Физлицо ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
	|	КОНЕЦ КАК ЛьготаУчастникаВОВ
	|ПОМЕСТИТЬ ВТ_ИПНЛьготыФизлиц
	|ИЗ
	|	ВТ_ПериодыЛьготФизлиц КАК ВТ_ПериодыЛьготФизлиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ВТ_ПериодыПримененияВычетов
	|		ПО ВТ_ПериодыЛьготФизлиц.Период = ВТ_ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И ВТ_ПериодыЛьготФизлиц.Физлицо = ВТ_ПериодыПримененияВычетов.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|		ПО (ЛьготыФизлицПоИнвалидности.Период = ВТ_ПериодыЛьготФизлиц.ПериодСрезаИнвалидность)
	|			И (ЛьготыФизлицПоИнвалидности.Физлицо = ВЫБОР
	|				КОГДА ВТ_ПериодыЛьготФизлиц.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВЫРАЗИТЬ(ВТ_ПериодыЛьготФизлиц.Физлицо КАК Справочник.Контрагенты).ФизЛицо
	|				ИНАЧЕ ВТ_ПериодыЛьготФизлиц.Физлицо
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|		ПО (ЛьготыФизлицУчастниковВОВ.Период = ВТ_ПериодыЛьготФизлиц.ПериодСрезаУчастникиВОВ)
	|			И (ЛьготыФизлицУчастниковВОВ.Физлицо = ВЫБОР
	|				КОГДА ВТ_ПериодыЛьготФизлиц.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВЫРАЗИТЬ(ВТ_ПериодыЛьготФизлиц.Физлицо КАК Справочник.Контрагенты).ФизЛицо
	|				ИНАЧЕ ВТ_ПериодыЛьготФизлиц.Физлицо
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (РасчетныеПоказатели.Период = ВТ_ПериодыЛьготФизлиц.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды) КАК ВидВычетаИПН,
	|	ВЫБОР
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности
	|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ
	|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности
	|	КОНЕЦ КАК РазрешенныйВычет
	|ПОМЕСТИТЬ ВТ_ВычетСтандартный75МЗПИнвалиды
	|ИЗ
	|	ВТ_ИПНЛьготыФизлиц КАК ИПНЛьготыФизлиц
	|ГДЕ
	|	НЕ(ИПНЛьготыФизлиц.ЛьготаПоИнвалидности = 0
	|				И ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ = 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период";
	
	Запрос.Текст = ПрименяемыеЛьготыТекст;
	Запрос.Выполнить();
	
	//Прочие вычеты
	НалоговыеВычетыТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИПНПлановыеВычеты.Физлицо КАК Физлицо,
	|	Периоды.Период КАК МесяцНалоговогоПериода,
	|	ИПНПлановыеВычеты.ВычетИПН КАК ВычетИПН,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Периоды.Период = ИПНПлановыеВычеты.МесяцНалоговогоПериода
	|				ТОГДА ЕСТЬNULL(ИПНПлановыеВычеты.СуммаВычета, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВычета,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ИПНПлановыеВычеты.ВычетИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
	|				ТОГДА ВЫБОР
	|						КОГДА Периоды.Период >= ДАТАВРЕМЯ(2019, 1, 1)
	|							ТОГДА 94 * ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП, 0)
	|						ИНАЧЕ 8 * ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммовойПределВычета
	|ПОМЕСТИТЬ ВТ_ПрочиеВычеты
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ВТ_ПериодыПримененияВычетов
	|		ПО Периоды.Период = ВТ_ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И Периоды.Физлицо = ВТ_ПериодыПримененияВычетов.Физлицо
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПлановыеНалоговыеВычетыФизлиц.СрезПоследних(КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), Налогоплательщик = &Налогоплательщик) КАК ИПНПлановыеВычеты
	|		ПО (ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ = ИПНПлановыеВычеты.Физлицо)
	|			И (ИПНПлановыеВычеты.СуммаВычета <> 0)
	|			И Периоды.Период >= ИПНПлановыеВычеты.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (РасчетныеПоказатели.Период = Периоды.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	ИПНПлановыеВычеты.ВычетИПН,
	|	ИПНПлановыеВычеты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	МесяцНалоговогоПериода,
	|	ВычетИПН";
	
	Запрос.Текст = НалоговыеВычетыТекст;
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТ_ПрочиеВычеты";
	
	//Получим единую таблицу вычетов
	ВычетыИПН = 
	"ВЫБРАТЬ
	|	ВТ_ВычетСтандартный1МЗП.Физлицо КАК ФизическоеЛицо,
	|	ВТ_ВычетСтандартный1МЗП.МесяцНалоговогоПериода КАК Период,
	|	ВТ_ВычетСтандартный1МЗП.ВидВычетаИПН КАК ВидВычета,
	|	ВТ_ВычетСтандартный1МЗП.РазрешенныйВычет КАК РазмерВычета,
	|	ВТ_ВычетСтандартный1МЗП.РазрешенныйВычет КАК СуммовойПределВычета,
	|	""2"" КАК Приоритет
	|ПОМЕСТИТЬ ВТ_ИтогВычетыИПН
	|ИЗ
	|	ВТ_ВычетСтандартный1МЗП КАК ВТ_ВычетСтандартный1МЗП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.Физлицо,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.Период,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.ВидВычетаИПН,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.РазрешенныйВычет,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.РазрешенныйВычет,
	|	""3""
	|ИЗ
	|	ВТ_ВычетСтандартный75МЗПИнвалиды КАК ВТ_ВычетСтандартный75МЗПИнвалиды
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ПрочиеВычеты.Физлицо,
	|	ВТ_ПрочиеВычеты.МесяцНалоговогоПериода,
	|	ВТ_ПрочиеВычеты.ВычетИПН,
	|	ВТ_ПрочиеВычеты.СуммаВычета,
	|	ВТ_ПрочиеВычеты.СуммовойПределВычета, 
	|	""4""
	|ИЗ
	|	ВТ_ПрочиеВычеты КАК ВТ_ПрочиеВычеты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВычетОПВ.Физлицо,
	|	ВТ_ВычетОПВ.МесяцНалоговогоПериода,
	|	ВТ_ВычетОПВ.ВидВычетаИПН,
	|	ВТ_ВычетОПВ.СуммаВзносов,
	|	0,
	|	""1""
	|ИЗ
	|	ВТ_ВычетОПВ КАК ВТ_ВычетОПВ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ВидВычета,
	|	ФизическоеЛицо,
	|	Приоритет";
	
	Запрос.Текст = ВычетыИПН;
	Запрос.Выполнить();
	
	НакопленныеДанныеПоВычетамТекст = 
		"ВЫБРАТЬ
		|	Периоды.Период КАК Период,
		|	Периоды.ФизЛицо КАК ФизЛицо,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
		|				ТОГДА РаботникиОрганизации.Период
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК ДатаПриема
		|ПОМЕСТИТЬ ВТ_КадровыеПериодыРаботников
		|ИЗ
		|	ВТ_Периоды КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		ПО Периоды.ФизЛицо = РаботникиОрганизации.Сотрудник.Физлицо
		|			И (РаботникиОрганизации.Организация = &ГоловнаяОрганизация)
		|			И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
		|			И (РаботникиОрганизации.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
		|			И (РаботникиОрганизации.ПричинаИзмененияСостояния В (ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу), ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)))
		|
		|СГРУППИРОВАТЬ ПО
		|	Периоды.Период,
		|	Периоды.ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
		|	ВТ_Периоды.Физлицо КАК Физлицо,
		|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета КАК ВидВычета,
		|	СУММА(ВЫБОР
		|			КОГДА НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетВТекущемПериоде,
		|	СУММА(ВЫБОР
		|			КОГДА НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетВТекущемПериоде,
		|	СУММА(ВЫБОР
		|			КОГДА НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетСНачалаГода,
		|	СУММА(ВЫБОР
		|			КОГДА НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетСНачалаГода,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо <> СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|					И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам
		|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетамИтогРегистров
		|ИЗ
		|	ВТ_КадровыеПериодыРаботников КАК ВТ_Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОбИсчисленииВычетовИПН.Обороты(&НачалоГода, &ПоследнийМесяцНалоговогоПериода, Месяц, ПериодРегистрации <= &КонецПериодаРегистрации) КАК СведенияОбИсчисленииВычетовИПНОбороты
		|		ПО (ВЫБОР
		|				КОГДА ВТ_Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ВТ_Периоды.Физлицо.ФизЛицо
		|				ИНАЧЕ ВТ_Периоды.Физлицо
		|			КОНЕЦ = ВЫБОР
		|				КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо.ФизЛицо
		|				ИНАЧЕ СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|			КОНЕЦ)
		|			И ВТ_Периоды.Период >= СведенияОбИсчисленииВычетовИПНОбороты.Период
		|			И (НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД))
		|			И (ВЫБОР
		|				КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ НАЧАЛОПЕРИОДА(ВТ_Периоды.ДатаПриема, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|			КОНЕЦ)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.Налогоплательщик = &Налогоплательщик
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды),
		|	0,
		|	0,
		|	0,
		|	СведенияПредыдущегоМестаРаботыФизЛиц.ПримененнаяЛьгота,
		|	0
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
		|		ПО ВТ_Периоды.Период >= СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода
		|			И (ВЫБОР
		|				КОГДА ВТ_Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ВТ_Периоды.Физлицо.ФизЛицо
		|				ИНАЧЕ ВТ_Периоды.Физлицо
		|			КОНЕЦ = СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо)
		|			И (НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, ГОД))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	МесяцНалоговогоПериода,
		|	Физлицо,
		|	ВидВычета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетВТекущемПериоде) КАК РазрешенныйВычетВТекущемПериоде,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетВТекущемПериоде) КАК ПримененныйВычетВТекущемПериоде,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетСНачалаГода) КАК РазрешенныйВычетСНачалаГода,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетСНачалаГода) КАК ПримененныйВычетСНачалаГода,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетВТекущемПериодеПоДругимДоходам) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам
		|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетам
		|ИЗ
		|	ВТ_НакопленныеДанныеПоВычетамИтогРегистров КАК ВТ_НакопленныеДанныеПоВычетамИтог
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета";
		
	Запрос.Текст = НакопленныеДанныеПоВычетамТекст;
	Запрос.Выполнить();
		
	СведенияОДоходахИПНТекст = 
		"ВЫБРАТЬ
		|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
		|	ВТ_Периоды.Физлицо КАК Физлицо,
		|	СУММА(ВЫБОР
		|			КОГДА ИПНСведенияОДоходахОбороты.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом)
		|				ТОГДА ИПНСведенияОДоходахОбороты.СуммаДоходаОборот
		|			КОГДА ИПНСведенияОДоходахОбороты.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА 0
		|			ИНАЧЕ ИПНСведенияОДоходахОбороты.СуммаДоходаОборот - ИПНСведенияОДоходахОбороты.СуммаВычетаОборот
		|		КОНЕЦ) КАК ОблагаемыйДоход,
		|	ИПНСведенияОДоходахОбороты.ВидДохода КАК ВидДохода
		|ПОМЕСТИТЬ ВТ_СведенияОДоходахИПН
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИПНСведенияОДоходах.Обороты(&ПервыйМесяцНалоговогоПериода, &ПоследнийМесяцНалоговогоПериода, Месяц, Налогоплательщик = &Налогоплательщик И ПериодРегистрации <= &ПериодРегистрации) КАК ИПНСведенияОДоходахОбороты
		|		ПО ВТ_Периоды.Физлицо = ИПНСведенияОДоходахОбороты.ФизЛицо
		|			И ВТ_Периоды.Период = ИПНСведенияОДоходахОбороты.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	ИПНСведенияОДоходахОбороты.ВидДохода
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	МесяцНалоговогоПериода,
		|	Физлицо,
		|	ВидДохода";
		
	Запрос.Текст = СведенияОДоходахИПНТекст;
	Запрос.Выполнить();
		
	ТекстЗапроса = 	
		"ВЫБРАТЬ
		|	СведенияОДоходахИПН.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	СведенияОДоходахИПН.Физлицо КАК ФизЛицо,
		|	ИтогВычетыИПН.ВидВычета,
		|	ИтогВычетыИПН.Приоритет КАК Приоритет,
		|	ИтогВычетыИПН.РазмерВычета,
		|	ИтогВычетыИПН.СуммовойПределВычета,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетВТекущемПериоде, 0) КАК РазрешенныйВычетВТекущемПериоде,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетВТекущемПериоде, 0) КАК ПримененныйВычетВТекущемПериоде,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) КАК РазрешенныйВычетСНачалаГода,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода, 0) КАК ПримененныйВычетСНачалаГода,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетВТекущемПериодеПоДругимДоходам, 0) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам,
		|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП,
		|	СведенияОДоходахИПН.ОблагаемыйДоход,
		|	СведенияОДоходахИПН.ВидДохода
		|ИЗ
		|	ВТ_СведенияОДоходахИПН КАК СведенияОДоходахИПН
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИтогВычетыИПН КАК ИтогВычетыИПН
		|		ПО СведенияОДоходахИПН.МесяцНалоговогоПериода = ИтогВычетыИПН.Период
		|			И СведенияОДоходахИПН.Физлицо = ИтогВычетыИПН.ФизическоеЛицо
		|			И (ВЫБОР
		|				КОГДА СведенияОДоходахИПН.Физлицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ИтогВычетыИПН.ВидВычета В (ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды),
		|							ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ))
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА СведенияОДоходахИПН.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
		|					ТОГДА ИСТИНА
		|				КОГДА СведенияОДоходахИПН.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента) 
		|						И СведенияОДоходахИПН.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2018, 1, 1)
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ИтогВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НакопленныеДанныеПоВычетам КАК НакопленныеДанныеПоВычетам
		|		ПО СведенияОДоходахИПН.Физлицо = НакопленныеДанныеПоВычетам.Физлицо
		|			И СведенияОДоходахИПН.МесяцНалоговогоПериода = НакопленныеДанныеПоВычетам.МесяцНалоговогоПериода
		|			И (ИтогВычетыИПН.ВидВычета = НакопленныеДанныеПоВычетам.ВидВычета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
		|		ПО (РасчетныеПоказатели.Период = ИтогВычетыИПН.Период)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СведенияОДоходахИПН.Физлицо,
		|	СведенияОДоходахИПН.ВидДохода,
		|	МесяцНалоговогоПериода,
		|	Приоритет";
		
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат;
КонецФункции

// Получить данные для о Вычетах ИПН, по правилам 2020 года:
Функция ПолучитьДанныеДляРасчетаВычетовИПНПосле2019(ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, Знач СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
												
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамРегистратор"	, Регистратор);
	Запрос.УстановитьПараметр("ПериодРегистрации"	, ПериодРегистрации);
	Запрос.УстановитьПараметр("КонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Налогоплательщик"	, Налогоплательщик);
	Запрос.УстановитьПараметр("ДатаНачалаРасчета"	, '20180101');
	Запрос.УстановитьПараметр("ПустаяДата"			, '00010101');
	Запрос.УстановитьПараметр("ГоловнаяОрганизация"	, ГоловнаяОрганизация);
	
	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИПНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик 
	|	И ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
	|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
	|	И ИПНСведенияОДоходах.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	// получим ПоследнийМесяцНалоговогоПериода
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИПНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик
	|	И ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
	|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
	|	И ИПНСведенияОДоходах.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);
	КонецЕсли;

	Запрос.УстановитьПараметр("ПервыйМесяцНалоговогоПериода"	, ПервыйМесяцНалоговогоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяцНалоговогоПериода"	, ПоследнийМесяцНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоГода"						, НачалоГода(ПервыйМесяцНалоговогоПериода));

	Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФизЛицо
		|ПОМЕСТИТЬ ВТ_СписокФизЛиц
		|ИЗ
		|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";

	// Периоды
	// Таблица список периодов-физлиц по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
		|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо
		|ПОМЕСТИТЬ ВТ_Периоды
		|ИЗ
		|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокФизЛиц КАК Работники
		|		ПО (Работники.Физлицо = ИПНСведенияОДоходах.ФизЛицо)
		|ГДЕ
		|	ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
		|	И ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик
		|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
		|	И ИПНСведенияОДоходах.Активность
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИПНСведенияОДоходах.ФизЛицо,
		|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)";
		
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-нерезидентов
	ГражданствоФизЛицТекст = "ВЫБРАТЬ
	|		Периоды.ФизЛицо,
	|		Периоды.Период,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодГражданства
	|ПОМЕСТИТЬ ВТ_ПериодыГражданствоФизЛиц
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО ВЫБОР
	|					КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|						ТОГДА Периоды.ФизЛицо.ФизЛицо 
	|					ИНАЧЕ Периоды.ФизЛицо 
	|				КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|				И ГражданствоФизЛиц.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.ФизЛицо,
	|		Периоды.Период 
	|
	|;
	| ///////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.ФизЛицо,
	|	Периоды.Период,
	|	ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) КАК НеЯвляетсяНалоговымРезидентомРК
	|
	|ПОМЕСТИТЬ ВТ_ГражданствоФизЛиц
	|ИЗ
	|	ВТ_ПериодыГражданствоФизЛиц КАК Периоды 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВЫБОР 
	|				КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|			И Периоды.ПериодГражданства = ГражданствоФизЛиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.ФизЛицо,
	|	Периоды.Период";

	Запрос.Текст = ГражданствоФизЛицТекст;
	Запрос.Выполнить();
	
	// РасчетныеПоказатели
	//	Поля:
	//		Период
	//		РазмерМРП
	//		РазмерМЗП
	//
	//	Описание:
	// Выбирает размер месячного расчетного показателя по периодам
	РасчетныеПоказателиТекст = "ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказателиСрезПоследних
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) >= РасчетныеПоказатели.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодСреза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМРПДляЦелейНалогообложения, 0) КАК РазмерМРП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗПДляЦелейНалогообложения, 0) КАК РазмерМЗП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказатели
	|ИЗ
	|	ВТ_РасчетныеПоказателиСрезПоследних КАК РасчетныеПоказателиСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период";

	Запрос.Текст = РасчетныеПоказателиТекст;
	Запрос.Выполнить();
	
	ПриминениеВычетаОПВ = "ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
   	|	СУММА(ВЫБОР
	|		    КОГДА  ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|			    ТОГДА 0
	|		    ИНАЧЕ ОПВРасчетыСФондами.Взнос
	|         КОНЕЦ) КАК СуммаВзносов,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ) КАК ВидВычетаИПН
	|ПОМЕСТИТЬ ВТ_ВычетОПВ
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокФизЛиц КАК РаботникиОрганизации
	|		ПО (РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо)
    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ГражданствоФизЛиц.Физлицо = ОПВРасчетыСФондами.Физлицо
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &ПервыйМесяцНалоговогоПериода
	|	И ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &ПоследнийМесяцНалоговогоПериода
	|	И ОПВРасчетыСФондами.Налогоплательщик = &Налогоплательщик
	|	И ОПВРасчетыСФондами.Период <= &КонецПериодаРегистрации
	|	И ОПВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ОПВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ОПВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|	И ОПВРасчетыСФондами.Взнос <> 0
	|	И (ОПВРасчетыСФондами.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица
	|	И ОПВРасчетыСФондами.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2018, 1, 1)
	|	ИЛИ ОПВРасчетыСФондами.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2018, 1, 1))
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";
	
	Запрос.Текст = ПриминениеВычетаОПВ;
	Запрос.Выполнить();
	
	// Применение стандартного вычета
	ПрименениеСтандартногоВычета = 
	
	"ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	МАКСИМУМ(ИПНПрименениеВычетов.Период) КАК Период,
	|	ВТ_Периоды.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ПериодыПримененияВычетовМаксимум
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|		ПО (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ИПНПрименениеВычетов.Физлицо)
	|			И ВТ_Периоды.Период >= ИПНПрименениеВычетов.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период,
	|	ВТ_Периоды.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыМаксимум.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПериодыМаксимум.Физлицо КАК ФизЛицо,
	|	ИПНПрименениеВычетов.Налогоплательщик КАК Налогоплательщик
	|ПОМЕСТИТЬ ВТ_ПериодыПримененияВычетов
	|ИЗ
	|	ВТ_ПериодыПримененияВычетовМаксимум КАК ПериодыМаксимум
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|		ПО (ВЫБОР
	|				КОГДА ПериодыМаксимум.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ПериодыМаксимум.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ПериодыМаксимум.ФизЛицо
	|			КОНЕЦ = ИПНПрименениеВычетов.Физлицо)
	|			И ПериодыМаксимум.Период = ИПНПрименениеВычетов.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ВЫБОР
	|				КОГДА ПериодыМаксимум.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ПериодыМаксимум.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ПериодыМаксимум.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо)
	|			И ПериодыМаксимум.МесяцНалоговогоПериода = ГражданствоФизЛиц.Период
	|ГДЕ
	|	ИПНПрименениеВычетов.Налогоплательщик = &Налогоплательщик
	|   И НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, Ложь)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	МАКСИМУМ(ИПННалоговыеВычетыФизлиц.Период) КАК Период,
	|	ИПННалоговыеВычетыФизлиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ИПННалоговыеВычетыФизлицМаксимум
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ИПННалоговыеВычетыФизлиц
	|		ПО (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ИПННалоговыеВычетыФизлиц.Физлицо)
	|			И ВТ_Периоды.Период >= ИПННалоговыеВычетыФизлиц.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период,
	|	ИПННалоговыеВычетыФизлиц.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыМаксимум.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПериодыМаксимум.Физлицо КАК ФизЛицо,
	|	ИПННалоговыеВычетыФизлиц.ПредоставлятьЛичныйВычет КАК ПредоставлятьЛичныйВычет
	|ПОМЕСТИТЬ ВТ_ИПННалоговыеВычетыФизлиц
	|ИЗ
	|	ВТ_ИПННалоговыеВычетыФизлицМаксимум КАК ПериодыМаксимум
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ИПННалоговыеВычетыФизлиц
	|		ПО ПериодыМаксимум.ФизЛицо = ИПННалоговыеВычетыФизлиц.Физлицо
	|			И ПериодыМаксимум.Период = ИПННалоговыеВычетыФизлиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	ВТ_Периоды.ФизЛицо КАК Физлицо,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП) КАК ВидВычетаИПН,
	|	ВЫБОР
	|		КОГДА ПериодыПримененияВычетов.ФизЛицо ЕСТЬ NULL 
	|				ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
	|	КОНЕЦ КАК РазрешенныйВычет
	|ПОМЕСТИТЬ ВТ_ВычетСтандартный1МЗП
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ПериодыПримененияВычетов
	|		ПО ВТ_Периоды.Период = ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ПериодыПримененияВычетов.ФизЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
	|		ПО ВТ_Периоды.Период = ВычетыФизлиц.МесяцНалоговогоПериода
	|			И (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ВычетыФизлиц.ФизЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВТ_Периоды.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
	|			И ВТ_Периоды.Период = ГражданствоФизЛиц.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО ВТ_Периоды.Период = РасчетныеПоказатели.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцНалоговогоПериода,
	|	Физлицо,
	|	ВидВычетаИПН";
	
	Запрос.Текст = ПрименениеСтандартноговычета;
	Запрос.Выполнить();
	
	ПрименяемыеЛьготыТекст = "ВЫБРАТЬ
	|	МАКСИМУМ(ЛьготыФизлицПоИнвалидности.Период) КАК ПериодСрезаИнвалидность,
	|	МАКСИМУМ(ЛьготыФизлицУчастниковВОВ.Период) КАК ПериодСрезаУчастникиВОВ,
	|	Периоды.Физлицо КАК Физлицо,
	|	Периоды.Период КАК Период
	|ПОМЕСТИТЬ ВТ_ПериодыЛьготФизлиц
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|		ПО (ЛьготыФизлицПоИнвалидности.Период <= Периоды.Период)
	|			И (ЛьготыФизлицПоИнвалидности.Физлицо = ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.Физлицо.Физлицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ)
	|			И (ЛьготыФизлицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизлицПоИнвалидности.СрокДействияСправки, ГОД) >= КОНЕЦПЕРИОДА(Периоды.Период, ГОД))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|		ПО (ЛьготыФизлицУчастниковВОВ.Период <= Периоды.Период)
	|			И (ЛьготыФизлицУчастниковВОВ.Физлицо = ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.Физлицо.Физлицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Физлицо,
	|	Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодСрезаИнвалидность,
	|	ПериодСрезаУчастникиВОВ,
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыЛьготФизлиц.Физлицо КАК Физлицо,
	|	ВТ_ПериодыЛьготФизлиц.Период КАК Период,
	|	ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности,
	|	ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности,
	|	ВЫБОР
	|		КОГДА ЛьготыФизлицПоИнвалидности.Физлицо ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|						И ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности = ""III""
	|					ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
	|				ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК ЛьготаПоИнвалидности,
	|	ВЫБОР
	|		КОГДА ЛьготыФизлицУчастниковВОВ.Физлицо ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
	|	КОНЕЦ КАК ЛьготаУчастникаВОВ
	|ПОМЕСТИТЬ ВТ_ИПНЛьготыФизлиц
	|ИЗ
	|	ВТ_ПериодыЛьготФизлиц КАК ВТ_ПериодыЛьготФизлиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ВТ_ПериодыПримененияВычетов
	|		ПО ВТ_ПериодыЛьготФизлиц.Период = ВТ_ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И ВТ_ПериодыЛьготФизлиц.Физлицо = ВТ_ПериодыПримененияВычетов.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|		ПО (ЛьготыФизлицПоИнвалидности.Период = ВТ_ПериодыЛьготФизлиц.ПериодСрезаИнвалидность)
	|			И (ЛьготыФизлицПоИнвалидности.Физлицо = ВЫБОР
	|				КОГДА ВТ_ПериодыЛьготФизлиц.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВЫРАЗИТЬ(ВТ_ПериодыЛьготФизлиц.Физлицо КАК Справочник.Контрагенты).ФизЛицо
	|				ИНАЧЕ ВТ_ПериодыЛьготФизлиц.Физлицо
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|		ПО (ЛьготыФизлицУчастниковВОВ.Период = ВТ_ПериодыЛьготФизлиц.ПериодСрезаУчастникиВОВ)
	|			И (ЛьготыФизлицУчастниковВОВ.Физлицо = ВЫБОР
	|				КОГДА ВТ_ПериодыЛьготФизлиц.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВЫРАЗИТЬ(ВТ_ПериодыЛьготФизлиц.Физлицо КАК Справочник.Контрагенты).ФизЛицо
	|				ИНАЧЕ ВТ_ПериодыЛьготФизлиц.Физлицо
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (РасчетныеПоказатели.Период = ВТ_ПериодыЛьготФизлиц.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды) КАК ВидВычетаИПН,
	|	ВЫБОР
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности
	|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ
	|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности
	|	КОНЕЦ КАК РазрешенныйВычет
	|ПОМЕСТИТЬ ВТ_ВычетСтандартный75МЗПИнвалиды
	|ИЗ
	|	ВТ_ИПНЛьготыФизлиц КАК ИПНЛьготыФизлиц
	|ГДЕ
	|	НЕ(ИПНЛьготыФизлиц.ЛьготаПоИнвалидности = 0
	|				И ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ = 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период";
	
	Запрос.Текст = ПрименяемыеЛьготыТекст;
	Запрос.Выполнить();
	
	//Прочие вычеты
	НалоговыеВычетыТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИПНПлановыеВычеты.Физлицо КАК Физлицо,
	|	Периоды.Период КАК МесяцНалоговогоПериода,
	|	ИПНПлановыеВычеты.ВычетИПН КАК ВычетИПН,
	|	МАКСИМУМ(ВЫБОР
	|		    КОГДА  ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|			    ТОГДА 0
	|		    ИНАЧЕ ВЫБОР
	|			        КОГДА Периоды.Период = ИПНПлановыеВычеты.МесяцНалоговогоПериода
	|				        ТОГДА ЕСТЬNULL(ИПНПлановыеВычеты.СуммаВычета, 0)
	|			        ИНАЧЕ 0
    |                 КОНЕЦ
	|		    КОНЕЦ) КАК СуммаВычета,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ИПНПлановыеВычеты.ВычетИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
	|				ТОГДА ВЫБОР
	|						КОГДА Периоды.Период >= ДАТАВРЕМЯ(2019, 1, 1)
	|							ТОГДА 94 * ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП, 0)
	|						ИНАЧЕ 8 * ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммовойПределВычета
	|ПОМЕСТИТЬ ВТ_ПрочиеВычеты
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ВТ_ПериодыПримененияВычетов
	|		ПО Периоды.Период = ВТ_ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И Периоды.Физлицо = ВТ_ПериодыПримененияВычетов.Физлицо
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПлановыеНалоговыеВычетыФизлиц.СрезПоследних(КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), Налогоплательщик = &Налогоплательщик) КАК ИПНПлановыеВычеты
	|		ПО (ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ = ИПНПлановыеВычеты.Физлицо)
	|			И (ИПНПлановыеВычеты.СуммаВычета <> 0)
	|			И Периоды.Период >= ИПНПлановыеВычеты.МесяцНалоговогоПериода
    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ГражданствоФизЛиц.Физлицо = ВЫБОР
	|			КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|				ТОГДА Периоды.Физлицо.Физлицо
	|			ИНАЧЕ Периоды.Физлицо
	|		КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (РасчетныеПоказатели.Период = Периоды.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	ИПНПлановыеВычеты.ВычетИПН,
	|	ИПНПлановыеВычеты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	МесяцНалоговогоПериода,
	|	ВычетИПН";
	
	Запрос.Текст = НалоговыеВычетыТекст;
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТ_ПрочиеВычеты";
	
	//Получим единую таблицу вычетов
	ВычетыИПН = 
	"ВЫБРАТЬ
	|	ВТ_ВычетСтандартный1МЗП.Физлицо КАК ФизическоеЛицо,
	|	ВТ_ВычетСтандартный1МЗП.МесяцНалоговогоПериода КАК Период,
	|	ВТ_ВычетСтандартный1МЗП.ВидВычетаИПН КАК ВидВычета,
	|	ВТ_ВычетСтандартный1МЗП.РазрешенныйВычет КАК РазмерВычета,
	|	ВТ_ВычетСтандартный1МЗП.РазрешенныйВычет КАК СуммовойПределВычета,
	|	""2"" КАК Приоритет
	|ПОМЕСТИТЬ ВТ_ИтогВычетыИПН
	|ИЗ
	|	ВТ_ВычетСтандартный1МЗП КАК ВТ_ВычетСтандартный1МЗП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.Физлицо,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.Период,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.ВидВычетаИПН,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.РазрешенныйВычет,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.РазрешенныйВычет,
	|	""3""
	|ИЗ
	|	ВТ_ВычетСтандартный75МЗПИнвалиды КАК ВТ_ВычетСтандартный75МЗПИнвалиды
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ПрочиеВычеты.Физлицо,
	|	ВТ_ПрочиеВычеты.МесяцНалоговогоПериода,
	|	ВТ_ПрочиеВычеты.ВычетИПН,
	|	ВТ_ПрочиеВычеты.СуммаВычета,
	|	ВТ_ПрочиеВычеты.СуммовойПределВычета, 
	|	""4""
	|ИЗ
	|	ВТ_ПрочиеВычеты КАК ВТ_ПрочиеВычеты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВычетОПВ.Физлицо,
	|	ВТ_ВычетОПВ.МесяцНалоговогоПериода,
	|	ВТ_ВычетОПВ.ВидВычетаИПН,
	|	ВТ_ВычетОПВ.СуммаВзносов,
	|	0,
	|	""1""
	|ИЗ
	|	ВТ_ВычетОПВ КАК ВТ_ВычетОПВ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ВидВычета,
	|	ФизическоеЛицо,
	|	Приоритет";
	
	Запрос.Текст = ВычетыИПН;
	Запрос.Выполнить();
	
	НакопленныеДанныеПоВычетамТекст = 
		"ВЫБРАТЬ
		|	Периоды.Период КАК Период,
		|	Периоды.ФизЛицо КАК ФизЛицо,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
		|				ТОГДА РаботникиОрганизации.Период
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК ДатаПриема
		|ПОМЕСТИТЬ ВТ_КадровыеПериодыРаботников
		|ИЗ
		|	ВТ_Периоды КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		ПО Периоды.ФизЛицо = РаботникиОрганизации.Сотрудник.Физлицо
		|			И (РаботникиОрганизации.Организация = &ГоловнаяОрганизация)
		|			И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
		|			И (РаботникиОрганизации.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
		|			И (РаботникиОрганизации.ПричинаИзмененияСостояния В (ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу), ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)))
		|
		|СГРУППИРОВАТЬ ПО
		|	Периоды.Период,
		|	Периоды.ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
		|	ВТ_Периоды.Физлицо КАК Физлицо,
		|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета КАК ВидВычета,
		|	СУММА(ВЫБОР
		|			КОГДА НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетВТекущемПериоде,
		|	СУММА(ВЫБОР
		|			КОГДА НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетВТекущемПериоде,
		|	СУММА(ВЫБОР
		|			КОГДА НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетСНачалаГода,
		|	СУММА(ВЫБОР
		|			КОГДА НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетСНачалаГода,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо <> СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|					И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам
		|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетамИтогРегистров
		|ИЗ
		|	ВТ_КадровыеПериодыРаботников КАК ВТ_Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОбИсчисленииВычетовИПН.Обороты(&НачалоГода, &ПоследнийМесяцНалоговогоПериода, Месяц, ПериодРегистрации <= &КонецПериодаРегистрации) КАК СведенияОбИсчисленииВычетовИПНОбороты
		|		ПО (ВЫБОР
		|				КОГДА ВТ_Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ВТ_Периоды.Физлицо.ФизЛицо
		|				ИНАЧЕ ВТ_Периоды.Физлицо
		|			КОНЕЦ = ВЫБОР
		|				КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо.ФизЛицо
		|				ИНАЧЕ СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|			КОНЕЦ)
		|			И ВТ_Периоды.Период >= СведенияОбИсчисленииВычетовИПНОбороты.Период
		|			И (НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД))
		|			И (ВЫБОР
		|				КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ НАЧАЛОПЕРИОДА(ВТ_Периоды.ДатаПриема, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|			КОНЕЦ)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.Налогоплательщик = &Налогоплательщик
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды),
		|	0,
		|	0,
		|	0,
		|	СведенияПредыдущегоМестаРаботыФизЛиц.ПримененнаяЛьгота,
		|	0
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
		|		ПО ВТ_Периоды.Период >= СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода
		|			И (ВЫБОР
		|				КОГДА ВТ_Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ВТ_Периоды.Физлицо.ФизЛицо
		|				ИНАЧЕ ВТ_Периоды.Физлицо
		|			КОНЕЦ = СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо)
		|			И (НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, ГОД))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	МесяцНалоговогоПериода,
		|	Физлицо,
		|	ВидВычета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетВТекущемПериоде) КАК РазрешенныйВычетВТекущемПериоде,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетВТекущемПериоде) КАК ПримененныйВычетВТекущемПериоде,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетСНачалаГода) КАК РазрешенныйВычетСНачалаГода,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетСНачалаГода) КАК ПримененныйВычетСНачалаГода,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетВТекущемПериодеПоДругимДоходам) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам
		|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетам
		|ИЗ
		|	ВТ_НакопленныеДанныеПоВычетамИтогРегистров КАК ВТ_НакопленныеДанныеПоВычетамИтог
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета";
		
	Запрос.Текст = НакопленныеДанныеПоВычетамТекст;
	Запрос.Выполнить();
		
	СведенияОДоходахИПНТекст = 
		"ВЫБРАТЬ
		|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
		|	ВТ_Периоды.Физлицо КАК Физлицо,
		|	СУММА(ВЫБОР
		|			КОГДА ИПНСведенияОДоходахОбороты.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом)
		|				ТОГДА ИПНСведенияОДоходахОбороты.СуммаДоходаОборот
		|			КОГДА ИПНСведенияОДоходахОбороты.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА 0
		|			ИНАЧЕ ИПНСведенияОДоходахОбороты.СуммаДоходаОборот - ИПНСведенияОДоходахОбороты.СуммаВычетаОборот
		|		КОНЕЦ) КАК ОблагаемыйДоход,
		|	ИПНСведенияОДоходахОбороты.ВидДохода КАК ВидДохода
		|ПОМЕСТИТЬ ВТ_СведенияОДоходахИПН
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИПНСведенияОДоходах.Обороты(&ПервыйМесяцНалоговогоПериода, &ПоследнийМесяцНалоговогоПериода, Месяц, Налогоплательщик = &Налогоплательщик И ПериодРегистрации <= &ПериодРегистрации) КАК ИПНСведенияОДоходахОбороты
		|		ПО ВТ_Периоды.Физлицо = ИПНСведенияОДоходахОбороты.ФизЛицо
		|			И ВТ_Периоды.Период = ИПНСведенияОДоходахОбороты.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	ИПНСведенияОДоходахОбороты.ВидДохода
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	МесяцНалоговогоПериода,
		|	Физлицо,
		|	ВидДохода";
		
	Запрос.Текст = СведенияОДоходахИПНТекст;
	Запрос.Выполнить();
		
	ТекстЗапроса = 	
		"ВЫБРАТЬ
		|	СведенияОДоходахИПН.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	СведенияОДоходахИПН.Физлицо КАК ФизЛицо,
		|	ИтогВычетыИПН.ВидВычета,
		|	ИтогВычетыИПН.Приоритет КАК Приоритет,
		|	ИтогВычетыИПН.РазмерВычета,
		|	ИтогВычетыИПН.СуммовойПределВычета,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетВТекущемПериоде, 0) КАК РазрешенныйВычетВТекущемПериоде,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетВТекущемПериоде, 0) КАК ПримененныйВычетВТекущемПериоде,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) КАК РазрешенныйВычетСНачалаГода,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода, 0) КАК ПримененныйВычетСНачалаГода,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетВТекущемПериодеПоДругимДоходам, 0) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам,
		|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП,
		|	СведенияОДоходахИПН.ОблагаемыйДоход,
		|	СведенияОДоходахИПН.ВидДохода
		|ИЗ
		|	ВТ_СведенияОДоходахИПН КАК СведенияОДоходахИПН
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИтогВычетыИПН КАК ИтогВычетыИПН
		|		ПО СведенияОДоходахИПН.МесяцНалоговогоПериода = ИтогВычетыИПН.Период
		|			И СведенияОДоходахИПН.Физлицо = ИтогВычетыИПН.ФизическоеЛицо
		|			И (ВЫБОР
		|				КОГДА СведенияОДоходахИПН.Физлицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ИтогВычетыИПН.ВидВычета В (ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды),
		|							ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ))
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА СведенияОДоходахИПН.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
		|					ТОГДА ИСТИНА
		|				КОГДА СведенияОДоходахИПН.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента) 
		|						И СведенияОДоходахИПН.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2019, 1, 1)
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ИтогВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НакопленныеДанныеПоВычетам КАК НакопленныеДанныеПоВычетам
		|		ПО СведенияОДоходахИПН.Физлицо = НакопленныеДанныеПоВычетам.Физлицо
		|			И СведенияОДоходахИПН.МесяцНалоговогоПериода = НакопленныеДанныеПоВычетам.МесяцНалоговогоПериода
		|			И (ИтогВычетыИПН.ВидВычета = НакопленныеДанныеПоВычетам.ВидВычета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
		|		ПО (РасчетныеПоказатели.Период = ИтогВычетыИПН.Период)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СведенияОДоходахИПН.Физлицо,
		|	СведенияОДоходахИПН.ВидДохода,
		|	МесяцНалоговогоПериода,
		|	Приоритет";

	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат;
КонецФункции

// Получить данные для о Вычетах ИПН, по правилам 2020 года:
Функция ПолучитьДанныеДляРасчетаВычетовИПНПосле2020(ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, Знач СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
												
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамРегистратор"	, Регистратор);
	Запрос.УстановитьПараметр("ПериодРегистрации"	, ПериодРегистрации);
	Запрос.УстановитьПараметр("КонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Налогоплательщик"	, Налогоплательщик);
	Запрос.УстановитьПараметр("ДатаНачалаРасчета"	, '20180101');
	Запрос.УстановитьПараметр("ПустаяДата"			, '00010101');
	Запрос.УстановитьПараметр("ГоловнаяОрганизация"	, ГоловнаяОрганизация);
	
	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	ПрименятьВычетВОСМС = ПрименятьВычетВОСМСДляФизическихЛицИГПХ(Налогоплательщик, ПериодРегистрации);
	ПрименятьОПВиВОСМСДляГПХ = Истина;
	
	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИПНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик 
	|	И ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
	|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
	|	И ИПНСведенияОДоходах.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	// получим ПоследнийМесяцНалоговогоПериода
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИПНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик
	|	И ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
	|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
	|	И ИПНСведенияОДоходах.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);
	КонецЕсли;

	Запрос.УстановитьПараметр("ПервыйМесяцНалоговогоПериода"	, ПервыйМесяцНалоговогоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяцНалоговогоПериода"	, ПоследнийМесяцНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоГода"						, НачалоГода(ПервыйМесяцНалоговогоПериода));

	Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФизЛицо
		|ПОМЕСТИТЬ ВТ_СписокФизЛиц
		|ИЗ
		|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";

	// Периоды
	// Таблица список периодов-физлиц по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
		|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо
		|ПОМЕСТИТЬ ВТ_Периоды
		|ИЗ
		|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокФизЛиц КАК Работники
		|		ПО (Работники.Физлицо = ИПНСведенияОДоходах.ФизЛицо)
		|ГДЕ
		|	ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
		|	И ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик
		|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
		|	И ИПНСведенияОДоходах.Активность
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИПНСведенияОДоходах.ФизЛицо,
		|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)";
		
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-нерезидентов
	ГражданствоФизЛицТекст = "ВЫБРАТЬ
	|		Периоды.ФизЛицо,
	|		Периоды.Период,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодГражданства
	|ПОМЕСТИТЬ ВТ_ПериодыГражданствоФизЛиц
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО ВЫБОР
	|					КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|						ТОГДА Периоды.ФизЛицо.ФизЛицо 
	|					ИНАЧЕ Периоды.ФизЛицо 
	|				КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|				И ГражданствоФизЛиц.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.ФизЛицо,
	|		Периоды.Период 
	|
	|;
	| ///////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.ФизЛицо,
	|	Периоды.Период,
	|	ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) КАК НеЯвляетсяНалоговымРезидентомРК
	|
	|ПОМЕСТИТЬ ВТ_ГражданствоФизЛиц
	|ИЗ
	|	ВТ_ПериодыГражданствоФизЛиц КАК Периоды 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВЫБОР 
	|				КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|			И Периоды.ПериодГражданства = ГражданствоФизЛиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.ФизЛицо,
	|	Периоды.Период";

	Запрос.Текст = ГражданствоФизЛицТекст;
	Запрос.Выполнить();
	
	// РасчетныеПоказатели
	//	Поля:
	//		Период
	//		РазмерМРП
	//		РазмерМЗП
	//
	//	Описание:
	// Выбирает размер месячного расчетного показателя по периодам
	РасчетныеПоказателиТекст = "ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказателиСрезПоследних
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) >= РасчетныеПоказатели.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодСреза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМРПДляЦелейНалогообложения, 0) КАК РазмерМРП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗПДляЦелейНалогообложения, 0) КАК РазмерМЗП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказатели
	|ИЗ
	|	ВТ_РасчетныеПоказателиСрезПоследних КАК РасчетныеПоказателиСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период";

	Запрос.Текст = РасчетныеПоказателиТекст;
	Запрос.Выполнить();
	
	ПриминениеВычетаОПВ = "ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
   	|	СУММА(ВЫБОР
	|		    КОГДА  ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|			    ТОГДА 0
	|		    ИНАЧЕ ОПВРасчетыСФондами.Взнос
	|         КОНЕЦ) КАК СуммаВзносов,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ) КАК ВидВычетаИПН
	|ПОМЕСТИТЬ ВТ_ВычетОПВ
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокФизЛиц КАК РаботникиОрганизации
	|		ПО (РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо)
    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ГражданствоФизЛиц.Физлицо = ОПВРасчетыСФондами.Физлицо)
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &ПервыйМесяцНалоговогоПериода
	|	И ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &ПоследнийМесяцНалоговогоПериода
	|	И ОПВРасчетыСФондами.Налогоплательщик = &Налогоплательщик
	|	И ОПВРасчетыСФондами.Период <= &КонецПериодаРегистрации
	|	И ОПВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ОПВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ОПВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|	И ОПВРасчетыСФондами.Взнос <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";
	
	Запрос.Текст = ПриминениеВычетаОПВ;
	Запрос.Выполнить();
	
	Если ПрименятьВычетВОСМС ИЛИ ПрименятьОПВиВОСМСДляГПХ Тогда
		
		ПриминениеВычетаВОСМС = "ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
        |	ВОСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
        |	СУММА(ВЫБОР
        |		    КОГДА  ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
        |			    ТОГДА 0
        |		    ИНАЧЕ ВОСМСРасчетыСФондами.Взнос
        |         КОНЕЦ) КАК СуммаВзносов,
		|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетВОСМС) КАК ВидВычетаИПН
		|ПОМЕСТИТЬ ВТ_ВычетВОСМС
		|ИЗ
		|	РегистрНакопления.ВОСМСИсчисленные КАК ВОСМСРасчетыСФондами
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокФизЛиц КАК РаботникиОрганизации
		|		ПО (РаботникиОрганизации.Физлицо = ВОСМСРасчетыСФондами.ФизЛицо)
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
        |		ПО (ГражданствоФизЛиц.Физлицо = ВОСМСРасчетыСФондами.Физлицо)
        |ГДЕ
		|	ВОСМСРасчетыСФондами.МесяцНалоговогоПериода >= &ПервыйМесяцНалоговогоПериода
		|	И ВОСМСРасчетыСФондами.МесяцНалоговогоПериода <= &ПоследнийМесяцНалоговогоПериода
		|	И ВОСМСРасчетыСФондами.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2020, 1, 1)
		|	И ВОСМСРасчетыСФондами.Налогоплательщик = &Налогоплательщик
		|	И ВОСМСРасчетыСФондами.Период <= &КонецПериодаРегистрации
		|	И ВОСМСРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
		|	И ВОСМСРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
		|	И ВОСМСРасчетыСФондами.Взнос <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
		|	ВОСМСРасчетыСФондами.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВОСМСРасчетыСФондами.ФизЛицо,
		|	НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";
	
		Запрос.Текст = ПриминениеВычетаВОСМС;
		Запрос.Выполнить();
		
	КонецЕсли;
		
	// Применение стандартного вычета
	ПрименениеСтандартногоВычета = 
	
	"ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	МАКСИМУМ(ИПНПрименениеВычетов.Период) КАК Период,
	|	ВТ_Периоды.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ПериодыПримененияВычетовМаксимум
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|		ПО (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ИПНПрименениеВычетов.Физлицо)
	|			И ВТ_Периоды.Период >= ИПНПрименениеВычетов.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период,
	|	ВТ_Периоды.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыМаксимум.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПериодыМаксимум.Физлицо КАК ФизЛицо,
	|	ИПНПрименениеВычетов.Налогоплательщик КАК Налогоплательщик
	|ПОМЕСТИТЬ ВТ_ПериодыПримененияВычетов
	|ИЗ
	|	ВТ_ПериодыПримененияВычетовМаксимум КАК ПериодыМаксимум
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|		ПО (ВЫБОР
	|				КОГДА ПериодыМаксимум.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ПериодыМаксимум.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ПериодыМаксимум.ФизЛицо
	|			КОНЕЦ = ИПНПрименениеВычетов.Физлицо)
	|			И ПериодыМаксимум.Период = ИПНПрименениеВычетов.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ВЫБОР
	|				КОГДА ПериодыМаксимум.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ПериодыМаксимум.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ПериодыМаксимум.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо)
	|			И ПериодыМаксимум.МесяцНалоговогоПериода = ГражданствоФизЛиц.Период
	|ГДЕ
	|	ИПНПрименениеВычетов.Налогоплательщик = &Налогоплательщик
	|   И НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, Ложь)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	МАКСИМУМ(ИПННалоговыеВычетыФизлиц.Период) КАК Период,
	|	ИПННалоговыеВычетыФизлиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ИПННалоговыеВычетыФизлицМаксимум
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ИПННалоговыеВычетыФизлиц
	|		ПО (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ИПННалоговыеВычетыФизлиц.Физлицо)
	|			И ВТ_Периоды.Период >= ИПННалоговыеВычетыФизлиц.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период,
	|	ИПННалоговыеВычетыФизлиц.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыМаксимум.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПериодыМаксимум.Физлицо КАК ФизЛицо,
	|	ИПННалоговыеВычетыФизлиц.ПредоставлятьЛичныйВычет КАК ПредоставлятьЛичныйВычет
	|ПОМЕСТИТЬ ВТ_ИПННалоговыеВычетыФизлиц
	|ИЗ
	|	ВТ_ИПННалоговыеВычетыФизлицМаксимум КАК ПериодыМаксимум
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ИПННалоговыеВычетыФизлиц
	|		ПО ПериодыМаксимум.ФизЛицо = ИПННалоговыеВычетыФизлиц.Физлицо
	|			И ПериодыМаксимум.Период = ИПННалоговыеВычетыФизлиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	ВТ_Периоды.ФизЛицо КАК Физлицо,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП) КАК ВидВычетаИПН,
	|	ВЫБОР
	|		КОГДА ПериодыПримененияВычетов.ФизЛицо ЕСТЬ NULL 
	|				ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
	|	КОНЕЦ КАК РазрешенныйВычет
	|ПОМЕСТИТЬ ВТ_ВычетСтандартный1МЗП
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ПериодыПримененияВычетов
	|		ПО ВТ_Периоды.Период = ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ПериодыПримененияВычетов.ФизЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
	|		ПО ВТ_Периоды.Период = ВычетыФизлиц.МесяцНалоговогоПериода
	|			И (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ВычетыФизлиц.ФизЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВТ_Периоды.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
	|			И ВТ_Периоды.Период = ГражданствоФизЛиц.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО ВТ_Периоды.Период = РасчетныеПоказатели.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцНалоговогоПериода,
	|	Физлицо,
	|	ВидВычетаИПН";
	
	Запрос.Текст = ПрименениеСтандартноговычета;
	Запрос.Выполнить();
	
	ПрименяемыеЛьготыТекст = "ВЫБРАТЬ
	|	МАКСИМУМ(ЛьготыФизлицПоИнвалидности.Период) КАК ПериодСрезаИнвалидность,
	|	МАКСИМУМ(ЛьготыФизлицУчастниковВОВ.Период) КАК ПериодСрезаУчастникиВОВ,
	|	Периоды.Физлицо КАК Физлицо,
	|	Периоды.Период КАК Период
	|ПОМЕСТИТЬ ВТ_ПериодыЛьготФизлиц
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|		ПО (ЛьготыФизлицПоИнвалидности.Период <= Периоды.Период)
	|			И (ЛьготыФизлицПоИнвалидности.Физлицо = ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.Физлицо.Физлицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ)
	|			И (ЛьготыФизлицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизлицПоИнвалидности.СрокДействияСправки, ГОД) >= КОНЕЦПЕРИОДА(Периоды.Период, ГОД))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|		ПО (ЛьготыФизлицУчастниковВОВ.Период <= Периоды.Период)
	|			И (ЛьготыФизлицУчастниковВОВ.Физлицо = ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.Физлицо.Физлицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Физлицо,
	|	Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодСрезаИнвалидность,
	|	ПериодСрезаУчастникиВОВ,
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыЛьготФизлиц.Физлицо КАК Физлицо,
	|	ВТ_ПериодыЛьготФизлиц.Период КАК Период,
	|	ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности,
	|	ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности,
	|	ВЫБОР
	|		КОГДА ЛьготыФизлицПоИнвалидности.Физлицо ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|						И ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности = ""III""
	|					ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
	|				ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК ЛьготаПоИнвалидности,
	|	ВЫБОР
	|		КОГДА ЛьготыФизлицУчастниковВОВ.Физлицо ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
	|	КОНЕЦ КАК ЛьготаУчастникаВОВ
	|ПОМЕСТИТЬ ВТ_ИПНЛьготыФизлиц
	|ИЗ
	|	ВТ_ПериодыЛьготФизлиц КАК ВТ_ПериодыЛьготФизлиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ВТ_ПериодыПримененияВычетов
	|		ПО ВТ_ПериодыЛьготФизлиц.Период = ВТ_ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И ВТ_ПериодыЛьготФизлиц.Физлицо = ВТ_ПериодыПримененияВычетов.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|		ПО (ЛьготыФизлицПоИнвалидности.Период = ВТ_ПериодыЛьготФизлиц.ПериодСрезаИнвалидность)
	|			И (ЛьготыФизлицПоИнвалидности.Физлицо = ВЫБОР
	|				КОГДА ВТ_ПериодыЛьготФизлиц.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВЫРАЗИТЬ(ВТ_ПериодыЛьготФизлиц.Физлицо КАК Справочник.Контрагенты).ФизЛицо
	|				ИНАЧЕ ВТ_ПериодыЛьготФизлиц.Физлицо
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|		ПО (ЛьготыФизлицУчастниковВОВ.Период = ВТ_ПериодыЛьготФизлиц.ПериодСрезаУчастникиВОВ)
	|			И (ЛьготыФизлицУчастниковВОВ.Физлицо = ВЫБОР
	|				КОГДА ВТ_ПериодыЛьготФизлиц.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВЫРАЗИТЬ(ВТ_ПериодыЛьготФизлиц.Физлицо КАК Справочник.Контрагенты).ФизЛицо
	|				ИНАЧЕ ВТ_ПериодыЛьготФизлиц.Физлицо
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (РасчетныеПоказатели.Период = ВТ_ПериодыЛьготФизлиц.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды) КАК ВидВычетаИПН,
	|	ВЫБОР
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности
	|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ
	|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности
	|	КОНЕЦ КАК РазрешенныйВычет
	|ПОМЕСТИТЬ ВТ_ВычетСтандартный75МЗПИнвалиды
	|ИЗ
	|	ВТ_ИПНЛьготыФизлиц КАК ИПНЛьготыФизлиц
	|ГДЕ
	|	НЕ(ИПНЛьготыФизлиц.ЛьготаПоИнвалидности = 0
	|				И ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ = 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период";
	
	Запрос.Текст = ПрименяемыеЛьготыТекст;
	Запрос.Выполнить();
	
	//Прочие вычеты
	НалоговыеВычетыТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИПНПлановыеВычеты.Физлицо КАК Физлицо,
	|	Периоды.Период КАК МесяцНалоговогоПериода,
	|	ИПНПлановыеВычеты.ВычетИПН КАК ВычетИПН,
	|	МАКСИМУМ(ВЫБОР
	|		    КОГДА  ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|			    ТОГДА 0
	|		    ИНАЧЕ ВЫБОР
	|			        КОГДА Периоды.Период = ИПНПлановыеВычеты.МесяцНалоговогоПериода
	|				        ТОГДА ЕСТЬNULL(ИПНПлановыеВычеты.СуммаВычета, 0)
	|			        ИНАЧЕ 0
    |                 КОНЕЦ
	|		    КОНЕЦ) КАК СуммаВычета,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ИПНПлановыеВычеты.ВычетИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
	|				ТОГДА ВЫБОР
	|						КОГДА Периоды.Период >= ДАТАВРЕМЯ(2019, 1, 1)
	|							ТОГДА 94 * ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП, 0)
	|						ИНАЧЕ 8 * ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммовойПределВычета
	|ПОМЕСТИТЬ ВТ_ПрочиеВычеты
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ВТ_ПериодыПримененияВычетов
	|		ПО Периоды.Период = ВТ_ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И Периоды.Физлицо = ВТ_ПериодыПримененияВычетов.Физлицо
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПлановыеНалоговыеВычетыФизлиц.СрезПоследних(КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), Налогоплательщик = &Налогоплательщик) КАК ИПНПлановыеВычеты
	|		ПО (ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ = ИПНПлановыеВычеты.Физлицо)
	|			И (ИПНПлановыеВычеты.СуммаВычета <> 0)
	|			И Периоды.Период >= ИПНПлановыеВычеты.МесяцНалоговогоПериода
    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
    |		ПО (РасчетныеПоказатели.Период = Периоды.Период)
    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
    |		ПО (ГражданствоФизЛиц.Физлицо = ВЫБОР
    |			КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
    |				ТОГДА Периоды.Физлицо.Физлицо
    |			ИНАЧЕ Периоды.Физлицо
    |		КОНЕЦ)
    |
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	ИПНПлановыеВычеты.ВычетИПН,
	|	ИПНПлановыеВычеты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	МесяцНалоговогоПериода,
	|	ВычетИПН";
	
	Запрос.Текст = НалоговыеВычетыТекст;
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТ_ПрочиеВычеты";
	
	//Получим единую таблицу вычетов
	ВычетыИПН = 
	"ВЫБРАТЬ
	|	ВТ_ВычетСтандартный1МЗП.Физлицо КАК ФизическоеЛицо,
	|	ВТ_ВычетСтандартный1МЗП.МесяцНалоговогоПериода КАК Период,
	|	ВТ_ВычетСтандартный1МЗП.ВидВычетаИПН КАК ВидВычета,
	|	ВТ_ВычетСтандартный1МЗП.РазрешенныйВычет КАК РазмерВычета,
	|	ВТ_ВычетСтандартный1МЗП.РазрешенныйВычет КАК СуммовойПределВычета,
	|	""3"" КАК Приоритет
	|ПОМЕСТИТЬ ВТ_ИтогВычетыИПН
	|ИЗ
	|	ВТ_ВычетСтандартный1МЗП КАК ВТ_ВычетСтандартный1МЗП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.Физлицо,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.Период,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.ВидВычетаИПН,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.РазрешенныйВычет,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.РазрешенныйВычет,
	|	""4""
	|ИЗ
	|	ВТ_ВычетСтандартный75МЗПИнвалиды КАК ВТ_ВычетСтандартный75МЗПИнвалиды
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ПрочиеВычеты.Физлицо,
	|	ВТ_ПрочиеВычеты.МесяцНалоговогоПериода,
	|	ВТ_ПрочиеВычеты.ВычетИПН,
	|	ВТ_ПрочиеВычеты.СуммаВычета,
	|	ВТ_ПрочиеВычеты.СуммовойПределВычета, 
	|	""5""
	|ИЗ
	|	ВТ_ПрочиеВычеты КАК ВТ_ПрочиеВычеты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВычетОПВ.Физлицо,
	|	ВТ_ВычетОПВ.МесяцНалоговогоПериода,
	|	ВТ_ВычетОПВ.ВидВычетаИПН,
	|	ВТ_ВычетОПВ.СуммаВзносов,
	|	0,
	|	""1""
	|ИЗ
	|	ВТ_ВычетОПВ КАК ВТ_ВычетОПВ
	|" + ?(ПрименятьВычетВОСМС ИЛИ ПрименятьОПВиВОСМСДляГПХ, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВычетВОСМС.Физлицо,
	|	ВТ_ВычетВОСМС.МесяцНалоговогоПериода,
	|	ВТ_ВычетВОСМС.ВидВычетаИПН,
	|	ВТ_ВычетВОСМС.СуммаВзносов,
	|	0,
	|	""2""
	|ИЗ
	|	ВТ_ВычетВОСМС КАК ВТ_ВычетВОСМС
	|ГДЕ
	|	ВТ_ВычетВОСМС.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2020, 1, 1)
	|	" + ?(НЕ ПрименятьВычетВОСМС И ПрименятьОПВиВОСМСДляГПХ, "И ВТ_ВычетВОСМС.ФизЛицо ССЫЛКА Справочник.Контрагенты", "") + "
	|	" + ?(НЕ ПрименятьОПВиВОСМСДляГПХ И ПрименятьВычетВОСМС, "И ВТ_ВычетВОСМС.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица", ""), "") + "
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ВидВычета,
	|	ФизическоеЛицо,
	|	Приоритет";
	
	Запрос.Текст = ВычетыИПН;
	Запрос.Выполнить();
	
	НакопленныеДанныеПоВычетамТекст = 
		"ВЫБРАТЬ
		|	Периоды.Период КАК Период,
		|	Периоды.ФизЛицо КАК ФизЛицо,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
		|				ТОГДА РаботникиОрганизации.Период
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК ДатаПриема
		|ПОМЕСТИТЬ ВТ_КадровыеПериодыРаботников
		|ИЗ
		|	ВТ_Периоды КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		ПО Периоды.ФизЛицо = РаботникиОрганизации.Сотрудник.Физлицо
		|			И (РаботникиОрганизации.Организация = &ГоловнаяОрганизация)
		|			И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
		|			И (РаботникиОрганизации.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
		|			И (РаботникиОрганизации.ПричинаИзмененияСостояния В (ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу), ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)))
		|
		|СГРУППИРОВАТЬ ПО
		|	Периоды.Период,
		|	Периоды.ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
		|	ВТ_Периоды.Физлицо КАК Физлицо,
		|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета КАК ВидВычета,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо = СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|					И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетВТекущемПериоде,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо = СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|					И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетВТекущемПериоде,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо = СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|				И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетСНачалаГода,
		|	СУММА(ВЫБОР
		|			КОГДА  ВТ_Периоды.Физлицо = СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|				И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетСНачалаГода,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо <> СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|				И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетСНачалаГодаПоДругимДоходам,
		|	СУММА(ВЫБОР
		|			КОГДА  ВТ_Периоды.Физлицо <> СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|				И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетСНачалаГодаПоДругимДоходам,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо <> СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|					И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетВТекущемПериодеПоДругимДоходам,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо <> СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|					И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам
		|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетамИтогРегистров
		|ИЗ
		|	ВТ_КадровыеПериодыРаботников КАК ВТ_Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОбИсчисленииВычетовИПН.Обороты(&НачалоГода, &ПоследнийМесяцНалоговогоПериода, Месяц, ПериодРегистрации <= &КонецПериодаРегистрации) КАК СведенияОбИсчисленииВычетовИПНОбороты
		|		ПО (ВЫБОР
		|				КОГДА ВТ_Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ВТ_Периоды.Физлицо.ФизЛицо
		|				ИНАЧЕ ВТ_Периоды.Физлицо
		|			КОНЕЦ = ВЫБОР
		|				КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо.ФизЛицо
		|				ИНАЧЕ СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|			КОНЕЦ)
		|			И ВТ_Периоды.Период >= СведенияОбИсчисленииВычетовИПНОбороты.Период
		|			И (НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД))
		|			И (ВЫБОР
		|				КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ НАЧАЛОПЕРИОДА(ВТ_Периоды.ДатаПриема, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|			КОНЕЦ)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ)
		|				ИЛИ СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетВОСМС)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.Налогоплательщик = &Налогоплательщик
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды),
		|	0,
		|	0,
		|	0,
		|	СведенияПредыдущегоМестаРаботыФизЛиц.ПримененнаяЛьгота,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
		|		ПО ВТ_Периоды.Период >= СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода
		|			И (ВЫБОР
		|				КОГДА ВТ_Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ВТ_Периоды.Физлицо.ФизЛицо
		|				ИНАЧЕ ВТ_Периоды.Физлицо
		|			КОНЕЦ = СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо)
		|			И (НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, ГОД))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	МесяцНалоговогоПериода,
		|	Физлицо,
		|	ВидВычета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетВТекущемПериоде) КАК РазрешенныйВычетВТекущемПериоде,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетВТекущемПериоде) КАК ПримененныйВычетВТекущемПериоде,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетСНачалаГода) КАК РазрешенныйВычетСНачалаГода,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетСНачалаГода) КАК ПримененныйВычетСНачалаГода,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетСНачалаГодаПоДругимДоходам) КАК РазрешенныйВычетСНачалаГодаПоДругимДоходам,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетСНачалаГодаПоДругимДоходам) КАК ПримененныйВычетСНачалаГодаПоДругимДоходам,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетВТекущемПериодеПоДругимДоходам) КАК РазрешенныйВычетВТекущемПериодеПоДругимДоходам,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетВТекущемПериодеПоДругимДоходам) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам
		|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетам
		|ИЗ
		|	ВТ_НакопленныеДанныеПоВычетамИтогРегистров КАК ВТ_НакопленныеДанныеПоВычетамИтог
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета";
		
	Запрос.Текст = НакопленныеДанныеПоВычетамТекст;
	Запрос.Выполнить();
		
	СведенияОДоходахИПНТекст = 
		"ВЫБРАТЬ
		|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
		|	ВТ_Периоды.Физлицо КАК Физлицо,
		|	СУММА(ВЫБОР
		|			КОГДА ИПНСведенияОДоходахОбороты.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом)
		|				ТОГДА ИПНСведенияОДоходахОбороты.СуммаДоходаОборот
		|			КОГДА ИПНСведенияОДоходахОбороты.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА 0
		|			ИНАЧЕ ИПНСведенияОДоходахОбороты.СуммаДоходаОборот - ИПНСведенияОДоходахОбороты.СуммаВычетаОборот
		|		КОНЕЦ) КАК ОблагаемыйДоход,
		|	ИПНСведенияОДоходахОбороты.ВидДохода КАК ВидДохода
		|ПОМЕСТИТЬ ВТ_СведенияОДоходахИПН
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИПНСведенияОДоходах.Обороты(&ПервыйМесяцНалоговогоПериода, &ПоследнийМесяцНалоговогоПериода, Месяц, Налогоплательщик = &Налогоплательщик И ПериодРегистрации <= &ПериодРегистрации) КАК ИПНСведенияОДоходахОбороты
		|		ПО ВТ_Периоды.Физлицо = ИПНСведенияОДоходахОбороты.ФизЛицо
		|			И ВТ_Периоды.Период = ИПНСведенияОДоходахОбороты.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	ИПНСведенияОДоходахОбороты.ВидДохода
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	МесяцНалоговогоПериода,
		|	Физлицо,
		|	ВидДохода";
		
	Запрос.Текст = СведенияОДоходахИПНТекст;
	Запрос.Выполнить();
		
	ТекстЗапроса = 	
		"ВЫБРАТЬ
		|	СведенияОДоходахИПН.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	СведенияОДоходахИПН.Физлицо КАК ФизЛицо,
		|	ИтогВычетыИПН.ВидВычета,
		|	ИтогВычетыИПН.Приоритет КАК Приоритет,
		|	ИтогВычетыИПН.РазмерВычета,
		|	ИтогВычетыИПН.СуммовойПределВычета,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетВТекущемПериоде, 0) КАК РазрешенныйВычетВТекущемПериоде,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетВТекущемПериоде, 0) КАК ПримененныйВычетВТекущемПериоде,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) КАК РазрешенныйВычетСНачалаГода,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода, 0) КАК ПримененныйВычетСНачалаГода,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГодаПоДругимДоходам, 0) КАК РазрешенныйВычетСНачалаГодаПоДругимДоходам,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГодаПоДругимДоходам, 0) КАК ПримененныйВычетСНачалаГодаПоДругимДоходам,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетВТекущемПериодеПоДругимДоходам, 0) КАК РазрешенныйВычетВТекущемПериодеПоДругимДоходам,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетВТекущемПериодеПоДругимДоходам, 0) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам,
		|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП,
		|	СведенияОДоходахИПН.ОблагаемыйДоход,
		|	СведенияОДоходахИПН.ВидДохода
		|ИЗ
		|	ВТ_СведенияОДоходахИПН КАК СведенияОДоходахИПН
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИтогВычетыИПН КАК ИтогВычетыИПН
		|		ПО СведенияОДоходахИПН.МесяцНалоговогоПериода = ИтогВычетыИПН.Период
		|			И СведенияОДоходахИПН.Физлицо = ИтогВычетыИПН.ФизическоеЛицо
		|			И (ВЫБОР
		|				КОГДА СведенияОДоходахИПН.Физлицо ССЫЛКА Справочник.Контрагенты
		|" + ?(ПрименятьОПВиВОСМСДляГПХ, "
		|					ТОГДА ИтогВычетыИПН.ВидВычета В (ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды),
		|					 		ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетВОСМС),
		|							ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ))","
		|					ТОГДА ИтогВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)") + "
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА СведенияОДоходахИПН.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
		|					ТОГДА ИСТИНА
		|" + ?(ПрименятьОПВиВОСМСДляГПХ, "
		|				КОГДА СведенияОДоходахИПН.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента) 
		|						И СведенияОДоходахИПН.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2020, 1, 1)
		|					ТОГДА ИСТИНА
		|", "") + "
		|				ИНАЧЕ ИтогВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НакопленныеДанныеПоВычетам КАК НакопленныеДанныеПоВычетам
		|		ПО СведенияОДоходахИПН.Физлицо = НакопленныеДанныеПоВычетам.Физлицо
		|			И СведенияОДоходахИПН.МесяцНалоговогоПериода = НакопленныеДанныеПоВычетам.МесяцНалоговогоПериода
		|			И (ИтогВычетыИПН.ВидВычета = НакопленныеДанныеПоВычетам.ВидВычета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
		|		ПО (РасчетныеПоказатели.Период = ИтогВычетыИПН.Период)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СведенияОДоходахИПН.Физлицо,
		|	СведенияОДоходахИПН.ВидДохода,
		|	МесяцНалоговогоПериода,
		|	Приоритет";
		
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат;
КонецФункции

// Получить данные для о Вычетах ИПН, по правилам 2021 года:
Функция ПолучитьДанныеДляРасчетаВычетовИПНПосле2021(ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, Знач СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
												
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамРегистратор"	, Регистратор);
	Запрос.УстановитьПараметр("ПериодРегистрации"	, ПериодРегистрации);
	Запрос.УстановитьПараметр("КонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Налогоплательщик"	, Налогоплательщик);
	Запрос.УстановитьПараметр("ДатаНачалаРасчета"	, '20180101');
	Запрос.УстановитьПараметр("ПустаяДата"			, '00010101');
	Запрос.УстановитьПараметр("ГоловнаяОрганизация"	, ГоловнаяОрганизация);
	
	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИПНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик 
	|	И ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
	|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
	|	И ИПНСведенияОДоходах.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	// получим ПоследнийМесяцНалоговогоПериода
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИПНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик
	|	И ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
	|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
	|	И ИПНСведенияОДоходах.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);
	КонецЕсли;

	Запрос.УстановитьПараметр("ПервыйМесяцНалоговогоПериода"	, ПервыйМесяцНалоговогоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяцНалоговогоПериода"	, ПоследнийМесяцНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоГода"						, НачалоГода(ПервыйМесяцНалоговогоПериода));

	Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФизЛицо
		|ПОМЕСТИТЬ ВТ_СписокФизЛиц
		|ИЗ
		|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";

	// Периоды
	// Таблица список периодов-физлиц по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
		|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо
		|ПОМЕСТИТЬ ВТ_Периоды
		|ИЗ
		|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокФизЛиц КАК Работники
		|		ПО (Работники.Физлицо = ИПНСведенияОДоходах.ФизЛицо)
		|ГДЕ
		|	ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
		|	И ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик
		|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
		|	И ИПНСведенияОДоходах.Активность
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИПНСведенияОДоходах.ФизЛицо,
		|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)";
		
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-нерезидентов
	ГражданствоФизЛицТекст = "ВЫБРАТЬ
	|		Периоды.ФизЛицо,
	|		Периоды.Период,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодГражданства
	|ПОМЕСТИТЬ ВТ_ПериодыГражданствоФизЛиц
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО ВЫБОР
	|					КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|						ТОГДА Периоды.ФизЛицо.ФизЛицо 
	|					ИНАЧЕ Периоды.ФизЛицо 
	|				КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|				И ГражданствоФизЛиц.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.ФизЛицо,
	|		Периоды.Период 
	|
	|;
	| ///////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.ФизЛицо,
	|	Периоды.Период,
	|	ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) КАК НеЯвляетсяНалоговымРезидентомРК,
	// при изменили признаков прошлым периодом необходимо учитывать значение данных признаков при сторнировании периода
	|	ЕСТЬNULL(ГражданствоФизЛиц.НеИмеетПравоНаПенсию, ЛОЖЬ) КАК НеИмеетПравоНаПенсию,
	|	ЕСТЬNULL(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию, ЛОЖЬ) КАК НеПодлежитСоциальномуМедицинскомуСтрахованию
	|
	|ПОМЕСТИТЬ ВТ_ГражданствоФизЛиц
	|ИЗ
	|	ВТ_ПериодыГражданствоФизЛиц КАК Периоды 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВЫБОР 
	|				КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|			И Периоды.ПериодГражданства = ГражданствоФизЛиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.ФизЛицо,
	|	Периоды.Период";

	Запрос.Текст = ГражданствоФизЛицТекст;
	Запрос.Выполнить();
	
	// РасчетныеПоказатели
	//	Поля:
	//		Период
	//		РазмерМРП
	//		РазмерМЗП
	//
	//	Описание:
	// Выбирает размер месячного расчетного показателя по периодам
	РасчетныеПоказателиТекст = "ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказателиСрезПоследних
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) >= РасчетныеПоказатели.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодСреза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМРПДляЦелейНалогообложения, 0) КАК РазмерМРП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗПДляЦелейНалогообложения, 0) КАК РазмерМЗП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказатели
	|ИЗ
	|	ВТ_РасчетныеПоказателиСрезПоследних КАК РасчетныеПоказателиСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период";

	Запрос.Текст = РасчетныеПоказателиТекст;
	Запрос.Выполнить();
	
	ПриминениеВычетаОПВ = "ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
   	|	СУММА(ВЫБОР
	|		    КОГДА ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|		    	ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|			    ТОГДА 0
	|		    ИНАЧЕ ОПВРасчетыСФондами.Взнос
	|         КОНЕЦ) КАК СуммаВзносов,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ) КАК ВидВычетаИПН
	|ПОМЕСТИТЬ ВТ_ВычетОПВ
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокФизЛиц КАК РаботникиОрганизации
	|		ПО (РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо)
    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ГражданствоФизЛиц.Физлицо = ОПВРасчетыСФондами.Физлицо
	|			И ОПВРасчетыСФондами.МесяцНалоговогоПериода = ГражданствоФизЛиц.Период)
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &ПервыйМесяцНалоговогоПериода
	|	И ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &ПоследнийМесяцНалоговогоПериода
	|	И ОПВРасчетыСФондами.Налогоплательщик = &Налогоплательщик
	|	И ОПВРасчетыСФондами.Период <= &КонецПериодаРегистрации
	|	И ОПВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ОПВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ОПВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|	И ОПВРасчетыСФондами.Взнос <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";
	
	Запрос.Текст = ПриминениеВычетаОПВ;
	Запрос.Выполнить();
	
	ПриминениеВычетаВОСМС = "ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ВОСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
   	|	СУММА(ВЫБОР
	|		    КОГДА ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|		    	ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию, ЛОЖЬ)
	|			    ТОГДА 0
	|		    ИНАЧЕ ВОСМСРасчетыСФондами.Взнос
	|         КОНЕЦ) КАК СуммаВзносов,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетВОСМС) КАК ВидВычетаИПН
	|ПОМЕСТИТЬ ВТ_ВычетВОСМС
	|ИЗ
	|	РегистрНакопления.ВОСМСИсчисленные КАК ВОСМСРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокФизЛиц КАК РаботникиОрганизации
	|		ПО (РаботникиОрганизации.Физлицо = ВОСМСРасчетыСФондами.ФизЛицо)
    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ГражданствоФизЛиц.Физлицо = ВОСМСРасчетыСФондами.Физлицо
	|			И ВОСМСРасчетыСФондами.МесяцНалоговогоПериода = ГражданствоФизЛиц.Период)
	|ГДЕ
	|	ВОСМСРасчетыСФондами.МесяцНалоговогоПериода >= &ПервыйМесяцНалоговогоПериода
	|	И ВОСМСРасчетыСФондами.МесяцНалоговогоПериода <= &ПоследнийМесяцНалоговогоПериода
	|	И ВОСМСРасчетыСФондами.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2020, 1, 1)
	|	И ВОСМСРасчетыСФондами.Налогоплательщик = &Налогоплательщик
	|	И ВОСМСРасчетыСФондами.Период <= &КонецПериодаРегистрации
	|	И ВОСМСРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ВОСМСРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|	И ВОСМСРасчетыСФондами.Взнос <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ВОСМСРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВОСМСРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";
	
	Запрос.Текст = ПриминениеВычетаВОСМС;
	Запрос.Выполнить();
		
	// Применение стандартного вычета
	ПрименениеСтандартногоВычета = 
	
	"ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	МАКСИМУМ(ИПНПрименениеВычетов.Период) КАК Период,
	|	ВТ_Периоды.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ПериодыПримененияВычетовМаксимум
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|		ПО (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ИПНПрименениеВычетов.Физлицо)
	|			И ВТ_Периоды.Период >= ИПНПрименениеВычетов.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период,
	|	ВТ_Периоды.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыМаксимум.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПериодыМаксимум.Физлицо КАК ФизЛицо,
	|	ИПНПрименениеВычетов.Налогоплательщик КАК Налогоплательщик
	|ПОМЕСТИТЬ ВТ_ПериодыПримененияВычетов
	|ИЗ
	|	ВТ_ПериодыПримененияВычетовМаксимум КАК ПериодыМаксимум
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|		ПО (ВЫБОР
	|				КОГДА ПериодыМаксимум.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ПериодыМаксимум.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ПериодыМаксимум.ФизЛицо
	|			КОНЕЦ = ИПНПрименениеВычетов.Физлицо)
	|			И ПериодыМаксимум.Период = ИПНПрименениеВычетов.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ВЫБОР
	|				КОГДА ПериодыМаксимум.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ПериодыМаксимум.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ПериодыМаксимум.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо)
	|			И ПериодыМаксимум.МесяцНалоговогоПериода = ГражданствоФизЛиц.Период
	|ГДЕ
	|	ИПНПрименениеВычетов.Налогоплательщик = &Налогоплательщик
	|   И НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, Ложь)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	МАКСИМУМ(ИПННалоговыеВычетыФизлиц.Период) КАК Период,
	|	ИПННалоговыеВычетыФизлиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ИПННалоговыеВычетыФизлицМаксимум
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ИПННалоговыеВычетыФизлиц
	|		ПО (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ИПННалоговыеВычетыФизлиц.Физлицо)
	|			И ВТ_Периоды.Период >= ИПННалоговыеВычетыФизлиц.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период,
	|	ИПННалоговыеВычетыФизлиц.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыМаксимум.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПериодыМаксимум.Физлицо КАК ФизЛицо,
	|	ИПННалоговыеВычетыФизлиц.ПредоставлятьЛичныйВычет КАК ПредоставлятьЛичныйВычет
	|ПОМЕСТИТЬ ВТ_ИПННалоговыеВычетыФизлиц
	|ИЗ
	|	ВТ_ИПННалоговыеВычетыФизлицМаксимум КАК ПериодыМаксимум
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ИПННалоговыеВычетыФизлиц
	|		ПО ПериодыМаксимум.ФизЛицо = ИПННалоговыеВычетыФизлиц.Физлицо
	|			И ПериодыМаксимум.Период = ИПННалоговыеВычетыФизлиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	ВТ_Периоды.ФизЛицо КАК Физлицо,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП) КАК ВидВычетаИПН,
	|	ВЫБОР
	|		КОГДА ПериодыПримененияВычетов.ФизЛицо ЕСТЬ NULL 
	|				ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
	|	КОНЕЦ КАК РазрешенныйВычет
	|ПОМЕСТИТЬ ВТ_ВычетСтандартный1МЗП
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ПериодыПримененияВычетов
	|		ПО ВТ_Периоды.Период = ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ПериодыПримененияВычетов.ФизЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
	|		ПО ВТ_Периоды.Период = ВычетыФизлиц.МесяцНалоговогоПериода
	|			И (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ВычетыФизлиц.ФизЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВТ_Периоды.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
	|			И ВТ_Периоды.Период = ГражданствоФизЛиц.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО ВТ_Периоды.Период = РасчетныеПоказатели.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцНалоговогоПериода,
	|	Физлицо,
	|	ВидВычетаИПН";
	
	Запрос.Текст = ПрименениеСтандартноговычета;
	Запрос.Выполнить();
	
	ПрименяемыеЛьготыТекст = "ВЫБРАТЬ
	|	МАКСИМУМ(ЛьготыФизлицПоИнвалидности.Период) КАК ПериодСрезаИнвалидность,
	|	МАКСИМУМ(ЛьготыФизлицУчастниковВОВ.Период) КАК ПериодСрезаУчастникиВОВ,
	|	Периоды.Физлицо КАК Физлицо,
	|	Периоды.Период КАК Период
	|ПОМЕСТИТЬ ВТ_ПериодыЛьготФизлиц
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|		ПО (ЛьготыФизлицПоИнвалидности.Период <= Периоды.Период)
	|			И (ЛьготыФизлицПоИнвалидности.Физлицо = ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.Физлицо.Физлицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ)
	|			И (ЛьготыФизлицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизлицПоИнвалидности.СрокДействияСправки, ГОД) >= КОНЕЦПЕРИОДА(Периоды.Период, ГОД))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|		ПО (ЛьготыФизлицУчастниковВОВ.Период <= Периоды.Период)
	|			И (ЛьготыФизлицУчастниковВОВ.Физлицо = ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.Физлицо.Физлицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Физлицо,
	|	Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодСрезаИнвалидность,
	|	ПериодСрезаУчастникиВОВ,
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыЛьготФизлиц.Физлицо КАК Физлицо,
	|	ВТ_ПериодыЛьготФизлиц.Период КАК Период,
	|	ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности,
	|	ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности,
	|	ВЫБОР
	|		КОГДА ЛьготыФизлицПоИнвалидности.Физлицо ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|						И ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности = ""III""
	|					ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
	|				ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК ЛьготаПоИнвалидности,
	|	ВЫБОР
	|		КОГДА ЛьготыФизлицУчастниковВОВ.Физлицо ЕСТЬ NULL
	|			ИЛИ ЛьготыФизлицУчастниковВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.ВетераныТруда)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
	|	КОНЕЦ КАК ЛьготаУчастникаВОВ
	|ПОМЕСТИТЬ ВТ_ИПНЛьготыФизлиц
	|ИЗ
	|	ВТ_ПериодыЛьготФизлиц КАК ВТ_ПериодыЛьготФизлиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ВТ_ПериодыПримененияВычетов
	|		ПО ВТ_ПериодыЛьготФизлиц.Период = ВТ_ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И ВТ_ПериодыЛьготФизлиц.Физлицо = ВТ_ПериодыПримененияВычетов.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|		ПО (ЛьготыФизлицПоИнвалидности.Период = ВТ_ПериодыЛьготФизлиц.ПериодСрезаИнвалидность)
	|			И (ЛьготыФизлицПоИнвалидности.Физлицо = ВЫБОР
	|				КОГДА ВТ_ПериодыЛьготФизлиц.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВЫРАЗИТЬ(ВТ_ПериодыЛьготФизлиц.Физлицо КАК Справочник.Контрагенты).ФизЛицо
	|				ИНАЧЕ ВТ_ПериодыЛьготФизлиц.Физлицо
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|		ПО (ЛьготыФизлицУчастниковВОВ.Период = ВТ_ПериодыЛьготФизлиц.ПериодСрезаУчастникиВОВ)
	|			И (ЛьготыФизлицУчастниковВОВ.Физлицо = ВЫБОР
	|				КОГДА ВТ_ПериодыЛьготФизлиц.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВЫРАЗИТЬ(ВТ_ПериодыЛьготФизлиц.Физлицо КАК Справочник.Контрагенты).ФизЛицо
	|				ИНАЧЕ ВТ_ПериодыЛьготФизлиц.Физлицо
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (РасчетныеПоказатели.Период = ВТ_ПериодыЛьготФизлиц.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды) КАК ВидВычетаИПН,
	|	ВЫБОР
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности
	|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ
	|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности
	|	КОНЕЦ КАК РазрешенныйВычет
	|ПОМЕСТИТЬ ВТ_ВычетСтандартный75МЗПИнвалиды
	|ИЗ
	|	ВТ_ИПНЛьготыФизлиц КАК ИПНЛьготыФизлиц
	|ГДЕ
	|	НЕ(ИПНЛьготыФизлиц.ЛьготаПоИнвалидности = 0
	|				И ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ = 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период";
	
	Запрос.Текст = ПрименяемыеЛьготыТекст;
	Запрос.Выполнить();
	
	//Прочие вычеты
	НалоговыеВычетыТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИПНПлановыеВычеты.Физлицо КАК Физлицо,
	|	Периоды.Период КАК МесяцНалоговогоПериода,
	|	ИПНПлановыеВычеты.ВычетИПН КАК ВычетИПН,
	|	МАКСИМУМ(ВЫБОР
	|		    КОГДА  ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|			    ТОГДА 0
	|		    ИНАЧЕ ВЫБОР
	|			        КОГДА Периоды.Период = ИПНПлановыеВычеты.МесяцНалоговогоПериода
	|				        ТОГДА ЕСТЬNULL(ИПНПлановыеВычеты.СуммаВычета, 0)
	|			        ИНАЧЕ 0
    |                 КОНЕЦ
	|		    КОНЕЦ) КАК СуммаВычета,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ИПНПлановыеВычеты.ВычетИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
	|				ТОГДА ВЫБОР
	|						КОГДА Периоды.Период >= ДАТАВРЕМЯ(2019, 1, 1)
	|							ТОГДА 94 * ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП, 0)
	|						ИНАЧЕ 8 * ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммовойПределВычета
	|ПОМЕСТИТЬ ВТ_ПрочиеВычеты
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ВТ_ПериодыПримененияВычетов
	|		ПО Периоды.Период = ВТ_ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И Периоды.Физлицо = ВТ_ПериодыПримененияВычетов.Физлицо
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПлановыеНалоговыеВычетыФизлиц.СрезПоследних(КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), Налогоплательщик = &Налогоплательщик) КАК ИПНПлановыеВычеты
	|		ПО (ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ = ИПНПлановыеВычеты.Физлицо)
	|			И (ИПНПлановыеВычеты.СуммаВычета <> 0)
	|			И Периоды.Период >= ИПНПлановыеВычеты.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (РасчетныеПоказатели.Период = Периоды.Период)
    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ГражданствоФизЛиц.Физлицо = ВЫБОР
	|			КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|				ТОГДА Периоды.Физлицо.Физлицо
	|			ИНАЧЕ Периоды.Физлицо
	|		КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	ИПНПлановыеВычеты.ВычетИПН,
	|	ИПНПлановыеВычеты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	МесяцНалоговогоПериода,
	|	ВычетИПН";
	
	Запрос.Текст = НалоговыеВычетыТекст;
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТ_ПрочиеВычеты";
	
	//Получим единую таблицу вычетов
	ВычетыИПН = 
	"ВЫБРАТЬ
	|	ВТ_ВычетСтандартный1МЗП.Физлицо КАК ФизическоеЛицо,
	|	ВТ_ВычетСтандартный1МЗП.МесяцНалоговогоПериода КАК Период,
	|	ВТ_ВычетСтандартный1МЗП.ВидВычетаИПН КАК ВидВычета,
	|	ВТ_ВычетСтандартный1МЗП.РазрешенныйВычет КАК РазмерВычета,
	|	ВТ_ВычетСтандартный1МЗП.РазрешенныйВычет КАК СуммовойПределВычета,
	|	""3"" КАК Приоритет
	|ПОМЕСТИТЬ ВТ_ИтогВычетыИПН
	|ИЗ
	|	ВТ_ВычетСтандартный1МЗП КАК ВТ_ВычетСтандартный1МЗП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.Физлицо,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.Период,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.ВидВычетаИПН,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.РазрешенныйВычет,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.РазрешенныйВычет,
	|	""4""
	|ИЗ
	|	ВТ_ВычетСтандартный75МЗПИнвалиды КАК ВТ_ВычетСтандартный75МЗПИнвалиды
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ПрочиеВычеты.Физлицо,
	|	ВТ_ПрочиеВычеты.МесяцНалоговогоПериода,
	|	ВТ_ПрочиеВычеты.ВычетИПН,
	|	ВТ_ПрочиеВычеты.СуммаВычета,
	|	ВТ_ПрочиеВычеты.СуммовойПределВычета, 
	|	""5""
	|ИЗ
	|	ВТ_ПрочиеВычеты КАК ВТ_ПрочиеВычеты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВычетОПВ.Физлицо,
	|	ВТ_ВычетОПВ.МесяцНалоговогоПериода,
	|	ВТ_ВычетОПВ.ВидВычетаИПН,
	|	ВТ_ВычетОПВ.СуммаВзносов,
	|	0,
	|	""1""
	|ИЗ
	|	ВТ_ВычетОПВ КАК ВТ_ВычетОПВ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВычетВОСМС.Физлицо,
	|	ВТ_ВычетВОСМС.МесяцНалоговогоПериода,
	|	ВТ_ВычетВОСМС.ВидВычетаИПН,
	|	ВТ_ВычетВОСМС.СуммаВзносов,
	|	0,
	|	""2""
	|ИЗ
	|	ВТ_ВычетВОСМС КАК ВТ_ВычетВОСМС
	|ГДЕ
	|	ВТ_ВычетВОСМС.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2020, 1, 1)
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ВидВычета,
	|	ФизическоеЛицо,
	|	Приоритет";
	
	Запрос.Текст = ВычетыИПН;
	Запрос.Выполнить();
	
	НакопленныеДанныеПоВычетамТекст = 
		"ВЫБРАТЬ
		|	Периоды.Период КАК Период,
		|	Периоды.ФизЛицо КАК ФизЛицо,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
		|				ТОГДА РаботникиОрганизации.Период
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК ДатаПриема
		|ПОМЕСТИТЬ ВТ_КадровыеПериодыРаботников
		|ИЗ
		|	ВТ_Периоды КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		ПО Периоды.ФизЛицо = РаботникиОрганизации.Сотрудник.Физлицо
		|			И (РаботникиОрганизации.Организация = &ГоловнаяОрганизация)
		|			И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
		|			И (РаботникиОрганизации.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
		|			И (РаботникиОрганизации.ПричинаИзмененияСостояния В (ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу), ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)))
		|
		|СГРУППИРОВАТЬ ПО
		|	Периоды.Период,
		|	Периоды.ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
		|	ВТ_Периоды.Физлицо КАК Физлицо,
		|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета КАК ВидВычета,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо = СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|					И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетВТекущемПериоде,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо = СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|					И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетВТекущемПериоде,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо = СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|				И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетСНачалаГода,
		|	СУММА(ВЫБОР
		|			КОГДА  ВТ_Периоды.Физлицо = СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|				И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетСНачалаГода,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо <> СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|				И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетСНачалаГодаПоДругимДоходам,
		|	СУММА(ВЫБОР
		|			КОГДА  ВТ_Периоды.Физлицо <> СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|				И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетСНачалаГодаПоДругимДоходам,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо <> СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|					И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетВТекущемПериодеПоДругимДоходам,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо <> СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|					И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам
		|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетамИтогРегистров
		|ИЗ
		|	ВТ_КадровыеПериодыРаботников КАК ВТ_Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОбИсчисленииВычетовИПН.Обороты(&НачалоГода, &ПоследнийМесяцНалоговогоПериода, Месяц, ПериодРегистрации <= &КонецПериодаРегистрации) КАК СведенияОбИсчисленииВычетовИПНОбороты
		|		ПО (ВЫБОР
		|				КОГДА ВТ_Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ВТ_Периоды.Физлицо.ФизЛицо
		|				ИНАЧЕ ВТ_Периоды.Физлицо
		|			КОНЕЦ = ВЫБОР
		|				КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо.ФизЛицо
		|				ИНАЧЕ СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|			КОНЕЦ)
		|			И ВТ_Периоды.Период >= СведенияОбИсчисленииВычетовИПНОбороты.Период
		|			И (НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД))
		|			И (ВЫБОР
		|				КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ НАЧАЛОПЕРИОДА(ВТ_Периоды.ДатаПриема, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|			КОНЕЦ)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ)
		|				ИЛИ СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетВОСМС)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.Налогоплательщик = &Налогоплательщик
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды),
		|	0,
		|	0,
		|	0,
		|	СведенияПредыдущегоМестаРаботыФизЛиц.ПримененнаяЛьгота,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
		|		ПО ВТ_Периоды.Период >= СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода
		|			И (ВЫБОР
		|				КОГДА ВТ_Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ВТ_Периоды.Физлицо.ФизЛицо
		|				ИНАЧЕ ВТ_Периоды.Физлицо
		|			КОНЕЦ = СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо)
		|			И (НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, ГОД))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	МесяцНалоговогоПериода,
		|	Физлицо,
		|	ВидВычета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетВТекущемПериоде) КАК РазрешенныйВычетВТекущемПериоде,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетВТекущемПериоде) КАК ПримененныйВычетВТекущемПериоде,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетСНачалаГода) КАК РазрешенныйВычетСНачалаГода,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетСНачалаГода) КАК ПримененныйВычетСНачалаГода,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетСНачалаГодаПоДругимДоходам) КАК РазрешенныйВычетСНачалаГодаПоДругимДоходам,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетСНачалаГодаПоДругимДоходам) КАК ПримененныйВычетСНачалаГодаПоДругимДоходам,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетВТекущемПериодеПоДругимДоходам) КАК РазрешенныйВычетВТекущемПериодеПоДругимДоходам,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетВТекущемПериодеПоДругимДоходам) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам
		|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетам
		|ИЗ
		|	ВТ_НакопленныеДанныеПоВычетамИтогРегистров КАК ВТ_НакопленныеДанныеПоВычетамИтог
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета";
		
	Запрос.Текст = НакопленныеДанныеПоВычетамТекст;
	Запрос.Выполнить();
		
	СведенияОДоходахИПНТекст = 
		"ВЫБРАТЬ
		|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
		|	ВТ_Периоды.Физлицо КАК Физлицо,
		|	СУММА(ВЫБОР
		|			КОГДА ИПНСведенияОДоходахОбороты.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом)
		|				ТОГДА ИПНСведенияОДоходахОбороты.СуммаДоходаОборот
		|			КОГДА ИПНСведенияОДоходахОбороты.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА 0
		|			ИНАЧЕ ИПНСведенияОДоходахОбороты.СуммаДоходаОборот - ИПНСведенияОДоходахОбороты.СуммаВычетаОборот
		|		КОНЕЦ) КАК ОблагаемыйДоход,
		|	ИПНСведенияОДоходахОбороты.ВидДохода КАК ВидДохода
		|ПОМЕСТИТЬ ВТ_СведенияОДоходахИПН
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИПНСведенияОДоходах.Обороты(&ПервыйМесяцНалоговогоПериода, &ПоследнийМесяцНалоговогоПериода, Месяц, Налогоплательщик = &Налогоплательщик И ПериодРегистрации <= &ПериодРегистрации) КАК ИПНСведенияОДоходахОбороты
		|		ПО ВТ_Периоды.Физлицо = ИПНСведенияОДоходахОбороты.ФизЛицо
		|			И ВТ_Периоды.Период = ИПНСведенияОДоходахОбороты.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	ИПНСведенияОДоходахОбороты.ВидДохода
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	МесяцНалоговогоПериода,
		|	Физлицо,
		|	ВидДохода";
		
	Запрос.Текст = СведенияОДоходахИПНТекст;
	Запрос.Выполнить();
		
	ТекстЗапроса = 	
		"ВЫБРАТЬ
		|	СведенияОДоходахИПН.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	СведенияОДоходахИПН.Физлицо КАК ФизЛицо,
		|	ИтогВычетыИПН.ВидВычета,
		|	ИтогВычетыИПН.Приоритет КАК Приоритет,
		|	ИтогВычетыИПН.РазмерВычета,
		|	ИтогВычетыИПН.СуммовойПределВычета,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетВТекущемПериоде, 0) КАК РазрешенныйВычетВТекущемПериоде,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетВТекущемПериоде, 0) КАК ПримененныйВычетВТекущемПериоде,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) КАК РазрешенныйВычетСНачалаГода,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода, 0) КАК ПримененныйВычетСНачалаГода,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГодаПоДругимДоходам, 0) КАК РазрешенныйВычетСНачалаГодаПоДругимДоходам,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГодаПоДругимДоходам, 0) КАК ПримененныйВычетСНачалаГодаПоДругимДоходам,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетВТекущемПериодеПоДругимДоходам, 0) КАК РазрешенныйВычетВТекущемПериодеПоДругимДоходам,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетВТекущемПериодеПоДругимДоходам, 0) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам,
		|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП,
		|	СведенияОДоходахИПН.ОблагаемыйДоход,
		|	СведенияОДоходахИПН.ВидДохода
		|ИЗ
		|	ВТ_СведенияОДоходахИПН КАК СведенияОДоходахИПН
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИтогВычетыИПН КАК ИтогВычетыИПН
		|		ПО СведенияОДоходахИПН.МесяцНалоговогоПериода = ИтогВычетыИПН.Период
		|			И СведенияОДоходахИПН.Физлицо = ИтогВычетыИПН.ФизическоеЛицо
		|			И (ВЫБОР
		|				КОГДА СведенияОДоходахИПН.Физлицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ИтогВычетыИПН.ВидВычета В (ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды),
		|					 		ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетВОСМС),
		|							ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ))
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА СведенияОДоходахИПН.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
		|					ТОГДА ИСТИНА
		|				КОГДА СведенияОДоходахИПН.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента) 
		|						И СведенияОДоходахИПН.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2020, 1, 1)
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ИтогВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НакопленныеДанныеПоВычетам КАК НакопленныеДанныеПоВычетам
		|		ПО СведенияОДоходахИПН.Физлицо = НакопленныеДанныеПоВычетам.Физлицо
		|			И СведенияОДоходахИПН.МесяцНалоговогоПериода = НакопленныеДанныеПоВычетам.МесяцНалоговогоПериода
		|			И (ИтогВычетыИПН.ВидВычета = НакопленныеДанныеПоВычетам.ВидВычета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
		|		ПО (РасчетныеПоказатели.Период = ИтогВычетыИПН.Период)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СведенияОДоходахИПН.Физлицо,
		|	СведенияОДоходахИПН.ВидДохода,
		|	МесяцНалоговогоПериода,
		|	Приоритет";
		
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат;
КонецФункции

// Получить данные для о Вычетах ИПН, по правилам 2022 года:
Функция ПолучитьДанныеДляРасчетаВычетовИПНПосле2022(ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
												Регистратор, Знач СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
												
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамРегистратор"	, Регистратор);
	Запрос.УстановитьПараметр("ПериодРегистрации"	, ПериодРегистрации);
	Запрос.УстановитьПараметр("КонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Налогоплательщик"	, Налогоплательщик);
	Запрос.УстановитьПараметр("ДатаНачалаРасчета"	, '20180101');
	Запрос.УстановитьПараметр("ПустаяДата"			, '00010101');
	Запрос.УстановитьПараметр("ГоловнаяОрганизация"	, ГоловнаяОрганизация);
	
	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИПНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик 
	|	И ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
	|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
	|	И ИПНСведенияОДоходах.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	// получим ПоследнийМесяцНалоговогоПериода
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИПНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|
	|ГДЕ
	|	ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик
	|	И ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
	|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
	|	И ИПНСведенияОДоходах.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);
	КонецЕсли;

	Запрос.УстановитьПараметр("ПервыйМесяцНалоговогоПериода"	, ПервыйМесяцНалоговогоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяцНалоговогоПериода"	, ПоследнийМесяцНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоГода"						, НачалоГода(ПервыйМесяцНалоговогоПериода));

	Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФизЛицо
		|ПОМЕСТИТЬ ВТ_СписокФизЛиц
		|ИЗ
		|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";

	// Периоды
	// Таблица список периодов-физлиц по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
		|	ИПНСведенияОДоходах.ФизЛицо КАК Физлицо
		|ПОМЕСТИТЬ ВТ_Периоды
		|ИЗ
		|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокФизЛиц КАК Работники
		|		ПО (Работники.Физлицо = ИПНСведенияОДоходах.ФизЛицо)
		|ГДЕ
		|	ИПНСведенияОДоходах.ПериодРегистрации = &ПериодРегистрации
		|	И ИПНСведенияОДоходах.Налогоплательщик = &Налогоплательщик
		|	И ИПНСведенияОДоходах.Период >= &ДатаНачалаРасчета
		|	И ИПНСведенияОДоходах.Активность
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИПНСведенияОДоходах.ФизЛицо,
		|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)";
		
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	
	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-нерезидентов
	ГражданствоФизЛицТекст = "ВЫБРАТЬ
	|		Периоды.ФизЛицо,
	|		Периоды.Период,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодГражданства
	|ПОМЕСТИТЬ ВТ_ПериодыГражданствоФизЛиц
	|	ИЗ
	|		ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО ВЫБОР
	|					КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|						ТОГДА Периоды.ФизЛицо.ФизЛицо 
	|					ИНАЧЕ Периоды.ФизЛицо 
	|				КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|				И ГражданствоФизЛиц.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.ФизЛицо,
	|		Периоды.Период 
	|
	|;
	| ///////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.ФизЛицо,
	|	Периоды.Период,
	|	ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) КАК НеЯвляетсяНалоговымРезидентомРК,
	// при изменили признаков прошлым периодом необходимо учитывать значение данных признаков при сторнировании периода
	|	ЕСТЬNULL(ГражданствоФизЛиц.НеИмеетПравоНаПенсию, ЛОЖЬ) КАК НеИмеетПравоНаПенсию,
	|	ЕСТЬNULL(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию, ЛОЖЬ) КАК НеПодлежитСоциальномуМедицинскомуСтрахованию
	|
	|ПОМЕСТИТЬ ВТ_ГражданствоФизЛиц
	|ИЗ
	|	ВТ_ПериодыГражданствоФизЛиц КАК Периоды 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВЫБОР 
	|				КОГДА Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо
	|			И Периоды.ПериодГражданства = ГражданствоФизЛиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.ФизЛицо,
	|	Периоды.Период";

	Запрос.Текст = ГражданствоФизЛицТекст;
	Запрос.Выполнить();
	
	// РасчетныеПоказатели
	//	Поля:
	//		Период
	//		РазмерМРП
	//		РазмерМЗП
	//
	//	Описание:
	// Выбирает размер месячного расчетного показателя по периодам
	РасчетныеПоказателиТекст = "ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказателиСрезПоследних
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) >= РасчетныеПоказатели.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодСреза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМРПДляЦелейНалогообложения, 0) КАК РазмерМРП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗПДляЦелейНалогообложения, 0) КАК РазмерМЗП,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказатели
	|ИЗ
	|	ВТ_РасчетныеПоказателиСрезПоследних КАК РасчетныеПоказателиСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период";

	Запрос.Текст = РасчетныеПоказателиТекст;
	Запрос.Выполнить();
	
	ПриминениеВычетаОПВ = "ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
   	|	СУММА(ВЫБОР
	|		    КОГДА ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|		    	ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеИмеетПравоНаПенсию, ЛОЖЬ)
	|			    ТОГДА 0
	|		    ИНАЧЕ ОПВРасчетыСФондами.Взнос
	|         КОНЕЦ) КАК СуммаВзносов,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ) КАК ВидВычетаИПН
	|ПОМЕСТИТЬ ВТ_ВычетОПВ
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокФизЛиц КАК РаботникиОрганизации
	|		ПО (РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо)
    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ГражданствоФизЛиц.Физлицо = ОПВРасчетыСФондами.Физлицо
	|			И ОПВРасчетыСФондами.МесяцНалоговогоПериода = ГражданствоФизЛиц.Период)
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &ПервыйМесяцНалоговогоПериода
	|	И ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &ПоследнийМесяцНалоговогоПериода
	|	И ОПВРасчетыСФондами.Налогоплательщик = &Налогоплательщик
	|	И ОПВРасчетыСФондами.Период <= &КонецПериодаРегистрации
	|	И ОПВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ОПВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ОПВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|	И ОПВРасчетыСФондами.Взнос <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";
	
	Запрос.Текст = ПриминениеВычетаОПВ;
	Запрос.Выполнить();
	
	ПриминениеВычетаВОСМС = "ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ВОСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
   	|	СУММА(ВЫБОР
	|		    КОГДА ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|		    	ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию, ЛОЖЬ)
	|			    ТОГДА 0
	|		    ИНАЧЕ ВОСМСРасчетыСФондами.Взнос
	|         КОНЕЦ) КАК СуммаВзносов,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетВОСМС) КАК ВидВычетаИПН
	|ПОМЕСТИТЬ ВТ_ВычетВОСМС
	|ИЗ
	|	РегистрНакопления.ВОСМСИсчисленные КАК ВОСМСРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокФизЛиц КАК РаботникиОрганизации
	|		ПО (РаботникиОрганизации.Физлицо = ВОСМСРасчетыСФондами.ФизЛицо)
    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ГражданствоФизЛиц.Физлицо = ВОСМСРасчетыСФондами.Физлицо
	|			И ВОСМСРасчетыСФондами.МесяцНалоговогоПериода = ГражданствоФизЛиц.Период)
	|ГДЕ
	|	ВОСМСРасчетыСФондами.МесяцНалоговогоПериода >= &ПервыйМесяцНалоговогоПериода
	|	И ВОСМСРасчетыСФондами.МесяцНалоговогоПериода <= &ПоследнийМесяцНалоговогоПериода
	|	И ВОСМСРасчетыСФондами.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2020, 1, 1)
	|	И ВОСМСРасчетыСФондами.Налогоплательщик = &Налогоплательщик
	|	И ВОСМСРасчетыСФондами.Период <= &КонецПериодаРегистрации
	|	И ВОСМСРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ВОСМСРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|	И ВОСМСРасчетыСФондами.Взнос <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ВОСМСРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВОСМСРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";
	
	Запрос.Текст = ПриминениеВычетаВОСМС;
	Запрос.Выполнить();
		
	// Применение стандартного вычета
	ПрименениеСтандартногоВычета = 
	
	"ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	МАКСИМУМ(ИПНПрименениеВычетов.Период) КАК Период,
	|	ВТ_Периоды.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ПериодыПримененияВычетовМаксимум
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|		ПО (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ИПНПрименениеВычетов.Физлицо)
	|			И ВТ_Периоды.Период >= ИПНПрименениеВычетов.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период,
	|	ВТ_Периоды.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыМаксимум.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПериодыМаксимум.Физлицо КАК ФизЛицо,
	|	ИПНПрименениеВычетов.Налогоплательщик КАК Налогоплательщик
	|ПОМЕСТИТЬ ВТ_ПериодыПримененияВычетов
	|ИЗ
	|	ВТ_ПериодыПримененияВычетовМаксимум КАК ПериодыМаксимум
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
	|		ПО (ВЫБОР
	|				КОГДА ПериодыМаксимум.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ПериодыМаксимум.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ПериодыМаксимум.ФизЛицо
	|			КОНЕЦ = ИПНПрименениеВычетов.Физлицо)
	|			И ПериодыМаксимум.Период = ИПНПрименениеВычетов.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ВЫБОР
	|				КОГДА ПериодыМаксимум.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ПериодыМаксимум.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ПериодыМаксимум.ФизЛицо
	|			КОНЕЦ = ГражданствоФизЛиц.ФизЛицо)
	|			И ПериодыМаксимум.МесяцНалоговогоПериода = ГражданствоФизЛиц.Период
	|ГДЕ
	|	ИПНПрименениеВычетов.Налогоплательщик = &Налогоплательщик
	|   И НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, Ложь)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	МАКСИМУМ(ИПННалоговыеВычетыФизлиц.Период) КАК Период,
	|	ИПННалоговыеВычетыФизлиц.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТ_ИПННалоговыеВычетыФизлицМаксимум
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ИПННалоговыеВычетыФизлиц
	|		ПО (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ИПННалоговыеВычетыФизлиц.Физлицо)
	|			И ВТ_Периоды.Период >= ИПННалоговыеВычетыФизлиц.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Периоды.Период,
	|	ИПННалоговыеВычетыФизлиц.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыМаксимум.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ПериодыМаксимум.Физлицо КАК ФизЛицо,
	|	ИПННалоговыеВычетыФизлиц.ПредоставлятьЛичныйВычет КАК ПредоставлятьЛичныйВычет
	|ПОМЕСТИТЬ ВТ_ИПННалоговыеВычетыФизлиц
	|ИЗ
	|	ВТ_ИПННалоговыеВычетыФизлицМаксимум КАК ПериодыМаксимум
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ИПННалоговыеВычетыФизлиц
	|		ПО ПериодыМаксимум.ФизЛицо = ИПННалоговыеВычетыФизлиц.Физлицо
	|			И ПериодыМаксимум.Период = ИПННалоговыеВычетыФизлиц.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
	|	ВТ_Периоды.ФизЛицо КАК Физлицо,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП) КАК ВидВычетаИПН,
	|	ВЫБОР
	|		КОГДА ПериодыПримененияВычетов.ФизЛицо ЕСТЬ NULL 
	|				ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП * 14, 0)
	|	КОНЕЦ КАК РазрешенныйВычет
	|ПОМЕСТИТЬ ВТ_ВычетСтандартный1МЗП
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ПериодыПримененияВычетов
	|		ПО ВТ_Периоды.Период = ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ПериодыПримененияВычетов.ФизЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
	|		ПО ВТ_Периоды.Период = ВычетыФизлиц.МесяцНалоговогоПериода
	|			И (ВЫБОР
	|				КОГДА ВТ_Периоды.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВТ_Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ ВТ_Периоды.ФизЛицо
	|			КОНЕЦ = ВычетыФизлиц.ФизЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО ВТ_Периоды.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
	|			И ВТ_Периоды.Период = ГражданствоФизЛиц.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО ВТ_Периоды.Период = РасчетныеПоказатели.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцНалоговогоПериода,
	|	Физлицо,
	|	ВидВычетаИПН";
	
	Запрос.Текст = ПрименениеСтандартноговычета;
	Запрос.Выполнить();
	
	ПрименяемыеЛьготыТекст = "ВЫБРАТЬ
	|	МАКСИМУМ(ЛьготыФизлицПоИнвалидности.Период) КАК ПериодСрезаИнвалидность,
	|	МАКСИМУМ(ЛьготыФизлицУчастниковВОВ.Период) КАК ПериодСрезаУчастникиВОВ,
	|	Периоды.Физлицо КАК Физлицо,
	|	Периоды.Период КАК Период
	|ПОМЕСТИТЬ ВТ_ПериодыЛьготФизлиц
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|		ПО (ЛьготыФизлицПоИнвалидности.Период <= Периоды.Период)
	|			И (ЛьготыФизлицПоИнвалидности.Физлицо = ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.Физлицо.Физлицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ)
	|			И (ЛьготыФизлицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизлицПоИнвалидности.СрокДействияСправки, ГОД) >= КОНЕЦПЕРИОДА(Периоды.Период, ГОД))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|		ПО (ЛьготыФизлицУчастниковВОВ.Период <= Периоды.Период)
	|			И (ЛьготыФизлицУчастниковВОВ.Физлицо = ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.Физлицо.Физлицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Физлицо,
	|	Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодСрезаИнвалидность,
	|	ПериодСрезаУчастникиВОВ,
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыЛьготФизлиц.Физлицо КАК Физлицо,
	|	ВТ_ПериодыЛьготФизлиц.Период КАК Период,
	|	ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности,
	|	ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности,
	|	ВЫБОР
	|		КОГДА ЛьготыФизлицПоИнвалидности.Физлицо ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|						И ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности = ""III""
	|					ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
	|				ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК ЛьготаПоИнвалидности,
	|	ВЫБОР
	|		КОГДА ЛьготыФизлицУчастниковВОВ.Физлицо ЕСТЬ NULL
	|			ИЛИ ЛьготыФизлицУчастниковВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.ВетераныТруда)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
	|	КОНЕЦ КАК ЛьготаУчастникаВОВ
	|ПОМЕСТИТЬ ВТ_ИПНЛьготыФизлиц
	|ИЗ
	|	ВТ_ПериодыЛьготФизлиц КАК ВТ_ПериодыЛьготФизлиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ВТ_ПериодыПримененияВычетов
	|		ПО ВТ_ПериодыЛьготФизлиц.Период = ВТ_ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И ВТ_ПериодыЛьготФизлиц.Физлицо = ВТ_ПериодыПримененияВычетов.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
	|		ПО (ЛьготыФизлицПоИнвалидности.Период = ВТ_ПериодыЛьготФизлиц.ПериодСрезаИнвалидность)
	|			И (ЛьготыФизлицПоИнвалидности.Физлицо = ВЫБОР
	|				КОГДА ВТ_ПериодыЛьготФизлиц.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВЫРАЗИТЬ(ВТ_ПериодыЛьготФизлиц.Физлицо КАК Справочник.Контрагенты).ФизЛицо
	|				ИНАЧЕ ВТ_ПериодыЛьготФизлиц.Физлицо
	|			КОНЕЦ)
	|			И НЕ ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.ПустаяСсылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
	|		ПО (ЛьготыФизлицУчастниковВОВ.Период = ВТ_ПериодыЛьготФизлиц.ПериодСрезаУчастникиВОВ)
	|			И (ЛьготыФизлицУчастниковВОВ.Физлицо = ВЫБОР
	|				КОГДА ВТ_ПериодыЛьготФизлиц.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА ВЫРАЗИТЬ(ВТ_ПериодыЛьготФизлиц.Физлицо КАК Справочник.Контрагенты).ФизЛицо
	|				ИНАЧЕ ВТ_ПериодыЛьготФизлиц.Физлицо
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (РасчетныеПоказатели.Период = ВТ_ПериодыЛьготФизлиц.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период,
	|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды) КАК ВидВычетаИПН,
	|	ВЫБОР
	|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности
	|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ
	|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности
	|	КОНЕЦ КАК РазрешенныйВычет
	|ПОМЕСТИТЬ ВТ_ВычетСтандартный75МЗПИнвалиды
	|ИЗ
	|	ВТ_ИПНЛьготыФизлиц КАК ИПНЛьготыФизлиц
	|ГДЕ
	|	НЕ(ИПНЛьготыФизлиц.ЛьготаПоИнвалидности = 0
	|				И ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ = 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНЛьготыФизлиц.Физлицо,
	|	ИПНЛьготыФизлиц.Период";
	
	Запрос.Текст = ПрименяемыеЛьготыТекст;
	Запрос.Выполнить();
	
	//Прочие вычеты
	НалоговыеВычетыТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИПНПлановыеВычеты.Физлицо КАК Физлицо,
	|	Периоды.Период КАК МесяцНалоговогоПериода,
	|	ИПНПлановыеВычеты.ВычетИПН КАК ВычетИПН,
	|	МАКСИМУМ(ВЫБОР
	|		    КОГДА  ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
	|			    ТОГДА 0
	|		    ИНАЧЕ ВЫБОР
	|			        КОГДА Периоды.Период = ИПНПлановыеВычеты.МесяцНалоговогоПериода
	|				        ТОГДА ЕСТЬNULL(ИПНПлановыеВычеты.СуммаВычета, 0)
	|			        ИНАЧЕ 0
    |                 КОНЕЦ
	|		    КОНЕЦ) КАК СуммаВычета,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ИПНПлановыеВычеты.ВычетИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
	|				ТОГДА ВЫБОР
	|						КОГДА Периоды.Период >= ДАТАВРЕМЯ(2019, 1, 1)
	|							ТОГДА 94 * ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП, 0)
	|						ИНАЧЕ 8 * ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммовойПределВычета
	|ПОМЕСТИТЬ ВТ_ПрочиеВычеты
	|ИЗ
	|	ВТ_Периоды КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПримененияВычетов КАК ВТ_ПериодыПримененияВычетов
	|		ПО Периоды.Период = ВТ_ПериодыПримененияВычетов.МесяцНалоговогоПериода
	|			И Периоды.Физлицо = ВТ_ПериодыПримененияВычетов.Физлицо
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПлановыеНалоговыеВычетыФизлиц.СрезПоследних(КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ), Налогоплательщик = &Налогоплательщик) КАК ИПНПлановыеВычеты
	|		ПО (ВЫБОР
	|				КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА Периоды.ФизЛицо.ФизЛицо
	|				ИНАЧЕ Периоды.Физлицо
	|			КОНЕЦ = ИПНПлановыеВычеты.Физлицо)
	|			И (ИПНПлановыеВычеты.СуммаВычета <> 0)
	|			И Периоды.Период >= ИПНПлановыеВычеты.МесяцНалоговогоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО (РасчетныеПоказатели.Период = Периоды.Период)
    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО (ГражданствоФизЛиц.Физлицо = ВЫБОР
	|			КОГДА Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
	|				ТОГДА Периоды.Физлицо.Физлицо
	|			ИНАЧЕ Периоды.Физлицо
	|		КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	ИПНПлановыеВычеты.ВычетИПН,
	|	ИПНПлановыеВычеты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	МесяцНалоговогоПериода,
	|	ВычетИПН";
	
	Запрос.Текст = НалоговыеВычетыТекст;
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТ_ПрочиеВычеты";
	
	//Получим единую таблицу вычетов
	ВычетыИПН = 
	"ВЫБРАТЬ
	|	ВТ_ВычетСтандартный1МЗП.Физлицо КАК ФизическоеЛицо,
	|	ВТ_ВычетСтандартный1МЗП.МесяцНалоговогоПериода КАК Период,
	|	ВТ_ВычетСтандартный1МЗП.ВидВычетаИПН КАК ВидВычета,
	|	ВТ_ВычетСтандартный1МЗП.РазрешенныйВычет КАК РазмерВычета,
	|	ВТ_ВычетСтандартный1МЗП.РазрешенныйВычет КАК СуммовойПределВычета,
	|	""3"" КАК Приоритет
	|ПОМЕСТИТЬ ВТ_ИтогВычетыИПН
	|ИЗ
	|	ВТ_ВычетСтандартный1МЗП КАК ВТ_ВычетСтандартный1МЗП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.Физлицо,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.Период,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.ВидВычетаИПН,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.РазрешенныйВычет,
	|	ВТ_ВычетСтандартный75МЗПИнвалиды.РазрешенныйВычет,
	|	""4""
	|ИЗ
	|	ВТ_ВычетСтандартный75МЗПИнвалиды КАК ВТ_ВычетСтандартный75МЗПИнвалиды
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ПрочиеВычеты.Физлицо,
	|	ВТ_ПрочиеВычеты.МесяцНалоговогоПериода,
	|	ВТ_ПрочиеВычеты.ВычетИПН,
	|	ВТ_ПрочиеВычеты.СуммаВычета,
	|	ВТ_ПрочиеВычеты.СуммовойПределВычета, 
	|	""5""
	|ИЗ
	|	ВТ_ПрочиеВычеты КАК ВТ_ПрочиеВычеты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВычетОПВ.Физлицо,
	|	ВТ_ВычетОПВ.МесяцНалоговогоПериода,
	|	ВТ_ВычетОПВ.ВидВычетаИПН,
	|	ВТ_ВычетОПВ.СуммаВзносов,
	|	0,
	|	""1""
	|ИЗ
	|	ВТ_ВычетОПВ КАК ВТ_ВычетОПВ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ВычетВОСМС.Физлицо,
	|	ВТ_ВычетВОСМС.МесяцНалоговогоПериода,
	|	ВТ_ВычетВОСМС.ВидВычетаИПН,
	|	ВТ_ВычетВОСМС.СуммаВзносов,
	|	0,
	|	""2""
	|ИЗ
	|	ВТ_ВычетВОСМС КАК ВТ_ВычетВОСМС
	|ГДЕ
	|	ВТ_ВычетВОСМС.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2020, 1, 1)
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ВидВычета,
	|	ФизическоеЛицо,
	|	Приоритет";
	
	Запрос.Текст = ВычетыИПН;
	Запрос.Выполнить();
	
	НакопленныеДанныеПоВычетамТекст = 
		"ВЫБРАТЬ
		|	Периоды.Период КАК Период,
		|	Периоды.ФизЛицо КАК ФизЛицо,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
		|				ТОГДА РаботникиОрганизации.Период
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ) КАК ДатаПриема
		|ПОМЕСТИТЬ ВТ_КадровыеПериодыРаботников
		|ИЗ
		|	ВТ_Периоды КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		ПО Периоды.ФизЛицо = РаботникиОрганизации.Сотрудник.Физлицо
		|			И (РаботникиОрганизации.Организация = &ГоловнаяОрганизация)
		|			И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
		|			И (РаботникиОрганизации.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
		|			И (РаботникиОрганизации.ПричинаИзмененияСостояния В (ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу), ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)))
		|
		|СГРУППИРОВАТЬ ПО
		|	Периоды.Период,
		|	Периоды.ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
		|	ВТ_Периоды.Физлицо КАК Физлицо,
		|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета КАК ВидВычета,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо = СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|					И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетВТекущемПериоде,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо = СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|					И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетВТекущемПериоде,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо = СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|				И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетСНачалаГода,
		|	СУММА(ВЫБОР
		|			КОГДА  ВТ_Периоды.Физлицо = СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|				И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетСНачалаГода,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо <> СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|				И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетСНачалаГодаПоДругимДоходам,
		|	СУММА(ВЫБОР
		|			КОГДА  ВТ_Периоды.Физлицо <> СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|				И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетСНачалаГодаПоДругимДоходам,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо <> СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|					И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК РазрешенныйВычетВТекущемПериодеПоДругимДоходам,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Периоды.Физлицо <> СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|					И НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам
		|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетамИтогРегистров
		|ИЗ
		|	ВТ_КадровыеПериодыРаботников КАК ВТ_Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОбИсчисленииВычетовИПН.Обороты(&НачалоГода, &ПоследнийМесяцНалоговогоПериода, Месяц, ПериодРегистрации <= &КонецПериодаРегистрации) КАК СведенияОбИсчисленииВычетовИПНОбороты
		|		ПО (ВЫБОР
		|				КОГДА ВТ_Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ВТ_Периоды.Физлицо.ФизЛицо
		|				ИНАЧЕ ВТ_Периоды.Физлицо
		|			КОНЕЦ = ВЫБОР
		|				КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо.ФизЛицо
		|				ИНАЧЕ СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
		|			КОНЕЦ)
		|			И ВТ_Периоды.Период >= СведенияОбИсчисленииВычетовИПНОбороты.Период
		|			И (НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД))
		|			И (ВЫБОР
		|				КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ НАЧАЛОПЕРИОДА(ВТ_Периоды.ДатаПриема, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, МЕСЯЦ)
		|			КОНЕЦ)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ)
		|				ИЛИ СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетВОСМС)
		|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.Налогоплательщик = &Налогоплательщик
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды),
		|	0,
		|	0,
		|	0,
		|	СведенияПредыдущегоМестаРаботыФизЛиц.ПримененнаяЛьгота,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
		|		ПО ВТ_Периоды.Период >= СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода
		|			И (ВЫБОР
		|				КОГДА ВТ_Периоды.Физлицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ВТ_Периоды.Физлицо.ФизЛицо
		|				ИНАЧЕ ВТ_Периоды.Физлицо
		|			КОНЕЦ = СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо)
		|			И (НАЧАЛОПЕРИОДА(ВТ_Периоды.Период, ГОД) = НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, ГОД))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	МесяцНалоговогоПериода,
		|	Физлицо,
		|	ВидВычета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетВТекущемПериоде) КАК РазрешенныйВычетВТекущемПериоде,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетВТекущемПериоде) КАК ПримененныйВычетВТекущемПериоде,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетСНачалаГода) КАК РазрешенныйВычетСНачалаГода,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетСНачалаГода) КАК ПримененныйВычетСНачалаГода,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетСНачалаГодаПоДругимДоходам) КАК РазрешенныйВычетСНачалаГодаПоДругимДоходам,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетСНачалаГодаПоДругимДоходам) КАК ПримененныйВычетСНачалаГодаПоДругимДоходам,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.РазрешенныйВычетВТекущемПериодеПоДругимДоходам) КАК РазрешенныйВычетВТекущемПериодеПоДругимДоходам,
		|	СУММА(ВТ_НакопленныеДанныеПоВычетамИтог.ПримененныйВычетВТекущемПериодеПоДругимДоходам) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам
		|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетам
		|ИЗ
		|	ВТ_НакопленныеДанныеПоВычетамИтогРегистров КАК ВТ_НакопленныеДанныеПоВычетамИтог
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВТ_НакопленныеДанныеПоВычетамИтог.МесяцНалоговогоПериода,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.Физлицо,
		|	ВТ_НакопленныеДанныеПоВычетамИтог.ВидВычета";
		
	Запрос.Текст = НакопленныеДанныеПоВычетамТекст;
	Запрос.Выполнить();
		
	СведенияОДоходахИПНТекст = 
		"ВЫБРАТЬ
		|	ВТ_Периоды.Период КАК МесяцНалоговогоПериода,
		|	ВТ_Периоды.Физлицо КАК Физлицо,
		|	СУММА(ВЫБОР
		|			КОГДА ИПНСведенияОДоходахОбороты.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом)
		|				ТОГДА ИПНСведенияОДоходахОбороты.СуммаДоходаОборот
		|			КОГДА ИПНСведенияОДоходахОбороты.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА 0
		|			ИНАЧЕ ИПНСведенияОДоходахОбороты.СуммаДоходаОборот - ИПНСведенияОДоходахОбороты.СуммаВычетаОборот
		|		КОНЕЦ) КАК ОблагаемыйДоход,
		|	ИПНСведенияОДоходахОбороты.ВидДохода КАК ВидДохода
		|ПОМЕСТИТЬ ВТ_СведенияОДоходахИПН
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИПНСведенияОДоходах.Обороты(&ПервыйМесяцНалоговогоПериода, &ПоследнийМесяцНалоговогоПериода, Месяц, Налогоплательщик = &Налогоплательщик И ПериодРегистрации <= &ПериодРегистрации) КАК ИПНСведенияОДоходахОбороты
		|		ПО ВТ_Периоды.Физлицо = ИПНСведенияОДоходахОбороты.ФизЛицо
		|			И ВТ_Периоды.Период = ИПНСведенияОДоходахОбороты.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.Период,
		|	ВТ_Периоды.Физлицо,
		|	ИПНСведенияОДоходахОбороты.ВидДохода
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	МесяцНалоговогоПериода,
		|	Физлицо,
		|	ВидДохода";
		
	Запрос.Текст = СведенияОДоходахИПНТекст;
	Запрос.Выполнить();
		
	ТекстЗапроса = 	
		"ВЫБРАТЬ
		|	СведенияОДоходахИПН.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	СведенияОДоходахИПН.Физлицо КАК ФизЛицо,
		|	ИтогВычетыИПН.ВидВычета,
		|	ИтогВычетыИПН.Приоритет КАК Приоритет,
		|	ИтогВычетыИПН.РазмерВычета,
		|	ИтогВычетыИПН.СуммовойПределВычета,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетВТекущемПериоде, 0) КАК РазрешенныйВычетВТекущемПериоде,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетВТекущемПериоде, 0) КАК ПримененныйВычетВТекущемПериоде,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) КАК РазрешенныйВычетСНачалаГода,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода, 0) КАК ПримененныйВычетСНачалаГода,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГодаПоДругимДоходам, 0) КАК РазрешенныйВычетСНачалаГодаПоДругимДоходам,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГодаПоДругимДоходам, 0) КАК ПримененныйВычетСНачалаГодаПоДругимДоходам,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетВТекущемПериодеПоДругимДоходам, 0) КАК РазрешенныйВычетВТекущемПериодеПоДругимДоходам,
		|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетВТекущемПериодеПоДругимДоходам, 0) КАК ПримененныйВычетВТекущемПериодеПоДругимДоходам,
		|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП,
		|	СведенияОДоходахИПН.ОблагаемыйДоход,
		|	СведенияОДоходахИПН.ВидДохода
		|ИЗ
		|	ВТ_СведенияОДоходахИПН КАК СведенияОДоходахИПН
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИтогВычетыИПН КАК ИтогВычетыИПН
		|		ПО СведенияОДоходахИПН.МесяцНалоговогоПериода = ИтогВычетыИПН.Период
		|			И СведенияОДоходахИПН.Физлицо = ИтогВычетыИПН.ФизическоеЛицо
		|			И (ВЫБОР
		|				КОГДА СведенияОДоходахИПН.Физлицо ССЫЛКА Справочник.Контрагенты
		|					ТОГДА ИтогВычетыИПН.ВидВычета В (ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды),
		|					 		ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетВОСМС),
		|							ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ))
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА СведенияОДоходахИПН.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
		|					ТОГДА ИСТИНА
		|				КОГДА СведенияОДоходахИПН.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента) 
		|						И СведенияОДоходахИПН.МесяцНалоговогоПериода >= ДАТАВРЕМЯ(2020, 1, 1)
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ИтогВычетыИПН.ВидВычета = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НакопленныеДанныеПоВычетам КАК НакопленныеДанныеПоВычетам
		|		ПО СведенияОДоходахИПН.Физлицо = НакопленныеДанныеПоВычетам.Физлицо
		|			И СведенияОДоходахИПН.МесяцНалоговогоПериода = НакопленныеДанныеПоВычетам.МесяцНалоговогоПериода
		|			И (ИтогВычетыИПН.ВидВычета = НакопленныеДанныеПоВычетам.ВидВычета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеПоказатели КАК РасчетныеПоказатели
		|		ПО (РасчетныеПоказатели.Период = ИтогВычетыИПН.Период)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СведенияОДоходахИПН.Физлицо,
		|	СведенияОДоходахИПН.ВидДохода,
		|	МесяцНалоговогоПериода,
		|	Приоритет";
		
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат;
КонецФункции

// Получить данные для расчета ОПВ по ставке 10%
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные взносы 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ОПВ
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаОПВ(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
	
	Если ПериодРегистрации >= '20200101' Тогда
		// Расчет ОПВ с ограничением на мин. объект исчисления
		Возврат ПолучитьДанныеДляРасчетаОПВПосле2020(ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса, ЭтоРасчетПервойПоловиныМесяца);
 	ИначеЕсли ПериодРегистрации >= '20190101' Тогда
		// Расчет ОПВ с ограничением на мин. объект исчисления
		Возврат ПолучитьДанныеДляРасчетаОПВПосле2019(ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса, ЭтоРасчетПервойПоловиныМесяца);
	ИначеЕсли ПериодРегистрации < '20190101' Тогда
		// Расчет ОПВ с ограничением на мин. объект исчисления
		Возврат ПолучитьДанныеДляРасчетаОПВДо2019(ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса, ЭтоРасчетПервойПоловиныМесяца); 
	КонецЕсли;
		
КонецФункции // ПолучитьДанныеДляРасчетаОПВ()

// Получить данные для расчета ОПВ по ставке 10%
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные взносы 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ОПВ
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаОПВДо2019(ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса, ЭтоРасчетПервойПоловиныМесяца) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидОПВ", 			Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для Каждого ПараметрЗапроса Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(ПараметрЗапроса.Ключ, ПараметрЗапроса.Значение);
		КонецЦикла;
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОПВСведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = ОПВСведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И ОПВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОПВСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ОПВСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ОПВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);

	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	
	СписокГруппИнвалидности = Новый СписокЗначений;
	СписокГруппИнвалидности.Добавить("I");
	СписокГруппИнвалидности.Добавить("II");

	Запрос.УстановитьПараметр("парамИнвалид", Перечисления.ОтношениеКИнвалидности.Инвалид);
	Запрос.УстановитьПараметр("парамСписокГруппИнвалидности",  СписокГруппИнвалидности);
	Запрос.УстановитьПараметр("парамПустаяДата", '00010101');

	// ФизлицаБезПраваНаПенсию
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц не имеющих право на пенсионное обеспечение
	ФизлицаБезПраваНаПенсиюТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизЛицаБезПраваНаПенсию
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезПраваНаПенсиюТекст;
	Запрос.Выполнить();
	ФизлицаБезПраваНаПенсиюТекст = "ВТФизЛицаБезПраваНаПенсию";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизЛицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";

	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТФизЛицаПенсионеры";

	// ФизлицаИнвалидыБессрочно
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-инвалидов I и II группы, у которых инвалидность установлена бессрочно
	ФизлицаИнвалидыБессрочноТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОбИнвалидностиФизлиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаИнвалидыБессрочно
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамКонец) КАК СведенияОбИнвалидностиФизлиц
	|
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = &парамИнвалид И
	|	СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности В (&парамСписокГруппИнвалидности) И
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки = &парамПустаяДата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
	
	Запрос.Текст = ФизлицаИнвалидыБессрочноТекст;
	Запрос.Выполнить();
	ФизлицаИнвалидыБессрочноТекст = "ВТФизлицаИнвалидыБессрочно";
	
	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет взносов
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ОПВСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаБезПраваНаПенсию.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезПраваНаПенсию,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаИнвалидыБессрочно.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаИнвалида
	|
	|ПОМЕСТИТЬ ВТПериоды	
	|ИЗ
	|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ОПВСведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезПраваНаПенсиюТекст + " КАК ФизлицаБезПраваНаПенсию
	|		ПО ВЫБОР
	|			КОГДА ОПВСведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ОПВСведенияОДоходах.ФизЛицо.ФизЛицо 
	|			ИНАЧЕ ОПВСведенияОДоходах.ФизЛицо КОНЕЦ = ФизлицаБезПраваНаПенсию.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО ВЫБОР
	|			КОГДА ОПВСведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ОПВСведенияОДоходах.ФизЛицо.ФизЛицо 
	|			ИНАЧЕ ОПВСведенияОДоходах.ФизЛицо КОНЕЦ = ФизлицаПенсионеры.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаИнвалидыБессрочноТекст + " КАК ФизлицаИнвалидыБессрочно
	|		ПО ВЫБОР
	|			КОГДА ОПВСведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ОПВСведенияОДоходах.ФизЛицо.ФизЛицо 
	|			ИНАЧЕ ОПВСведенияОДоходах.ФизЛицо КОНЕЦ = ФизлицаИнвалидыБессрочно.ФизЛицо 
	|
	|ГДЕ
	|	ОПВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ)
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТПериоды";

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые взносами доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	ОПВОбороты.ФизЛицо КАК ФизЛицо,
	|	ОПВОбороты.Период КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВОбороты.СуммаДоходаОборот) -	СУММА(ОПВОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВОбороты.ОблагаемаяБазаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаБезПраваНаПенсию) КАК ПризнакФизЛицаБезПраваНаПенсию,
	|	МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаИнвалида) КАК ПризнакФизЛицаИнвалида
	|
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОПВСведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СУММА(ВЫБОР 
	|				КОГДА ОПВСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|					ТОГДА ОПВСведенияОДоходах.СуммаДоходаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаДоходаОборот,
	|	 	СУММА(ВЫБОР 
	|				КОГДА ОПВСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|					ТОГДА ОПВСведенияОДоходах.СуммаВычетаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаВычетаОборот,
	|	 	СУММА(ОПВСведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезПраваНаПенсию) КАК ПризнакФизЛицаБезПраваНаПенсию,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаИнвалида) КАК ПризнакФизЛицаИнвалида
	|	ИЗ
	|		РегистрНакопления.ОПВСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					Налогоплательщик = &парамНалогоплательщик
	|					И ПериодРегистрации <= &парамКонецПериодаРегистрации) КАК ОПВСведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
 	|			ПО Работники.Физлицо = ОПВСведенияОДоходах.ФизЛицо 
 	|				И Работники.Период = НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ)
 	|
	|	СГРУППИРОВАТЬ ПО
	|		ОПВСведенияОДоходах.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ)) КАК ОПВОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВОбороты.Период,
	|	ОПВОбороты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТДоходы";
	
	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  для СписокФизлиц

	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВРасчетыСФондами.Взнос)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленныйВзнос
	|
	|ПОМЕСТИТЬ ВТОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	" + ?(НЕ ЭтоРасчетПервойПоловиныМесяца, "ОПВРасчетыСФондами.Регистратор <> &парамРегистратор И", "") + "
	|	ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ОПВРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";

	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТОПВРасчетыСФондами";

	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления взносов
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 75, 0) КАК ОграничениеПоДоходам
	|
	|ПОМЕСТИТЬ ВТРазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТРазмерОграниченияПоДоходам";

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОПВ для каждого периода исчисления взносов с учетом приоритетов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОПВ для каждого периода исчисления взносов с наивысшим приоритетом
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахНалоговСборовОтчислений.Период,
	|			МИНИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахНалоговСборовОтчислений.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Приоритет = СведенияОСтавкахНалоговСборовОтчислений.Приоритет
	|";
	
	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	
	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОПВ для каждого периода исчисления взносов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТСведенияОСтавкахНалоговСборовОтчислений
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			МАКСИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|				ПО СведенияОСтавкахНалоговСборовОтчислений.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	Запрос.Выполнить();
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "ВТСведенияОСтавкахНалоговСборовОтчислений";

	ТипЗначенияОПВТекст  = "ЧИСЛО(15, 2)";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";

	// облагаемый доход за месяц
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// облагаемая база
	ПолеОблагаемаяБазаЗаМесяц = 
	"ВЫБОР 
	|				КОГДА (" + ПолеОблагаемыйДоходЗаМесяц +" < 0)
	|					ТОГДА 0
	|				КОГДА (" + ПолеОблагаемыйДоходЗаМесяц +" < "+ ПолеРазмерОграниченияПоДоходам + ")
	|					ТОГДА " + ПолеОблагаемыйДоходЗаМесяц +"
	|				ИНАЧЕ " + ПолеРазмерОграниченияПоДоходам +"
	|		   КОНЕЦ";
	
	// сумма взносов исчисленная
	ПолеВзносыИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеОблагаемыйДоходЗаМесяц +" < 0)
	|					ТОГДА 0
	|				КОГДА (" + ПолеОблагаемыйДоходЗаМесяц +" < "+ ПолеРазмерОграниченияПоДоходам + ")
	|					ТОГДА " + ПолеОблагаемыйДоходЗаМесяц +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|				ИНАЧЕ " + ПолеРазмерОграниченияПоДоходам +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|		   КОНЕЦ КАК " + ТипЗначенияОПВТекст + "))";
	
	// сумма ранее исчисленных взносов
	ПолеРанееВзносыИсчисленные = "ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныйВзнос, 0)";

	// ИсчисленныйОПВ
	//	Поля:
	//		Физлицо
	//		ВзносыИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее взносы за месяц и производит расчет взносов

	ИсчисленныйОПВТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезПраваНаПенсию,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	ДоходыЗаМесяц.ПризнакФизЛицаИнвалида,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеОблагаемаяБазаЗаМесяц + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеОблагаемаяБазаЗаМесяц + " - " + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК ОблагаемаяБаза,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходам,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	" + ПолеВзносыИсчисленные + " КАК ВзносЗаПериод,
	|	" + ПолеРанееВзносыИсчисленные + " КАК РанееИсчисленныйВзнос,
	|	" + ПолеВзносыИсчисленные + "-" + ПолеРанееВзносыИсчисленные + " КАК ВзносИсчисленный
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ОПВРасчетыСФондамиТекст+" КАК ОПВРасчетыСФондами
	|		ПО ОПВРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ОПВРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахНалоговСборовОтчисленийТекст+" КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период
	|";

	Запрос.Текст = ИсчисленныйОПВТекст;	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаОПВ()

// Получить данные для расчета ОПВ по ставке 10%
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные взносы 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ОПВ
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаОПВПосле2019(ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса, ЭтоРасчетПервойПоловиныМесяца) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидОПВ", 			Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	РеквизитыНалогоплательщика = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Налогоплательщик, "ЮрФизЛицо,ИндивидуальныйПредприниматель");
	Запрос.УстановитьПараметр("парамИндивидуальныйПредприниматель", РеквизитыНалогоплательщика.ИндивидуальныйПредприниматель);

	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для Каждого ПараметрЗапроса Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(ПараметрЗапроса.Ключ, ПараметрЗапроса.Значение);
		КонецЦикла;
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОПВСведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = ОПВСведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И ОПВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОПВСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ОПВСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ОПВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);

	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	
	СписокГруппИнвалидности = Новый СписокЗначений;
	СписокГруппИнвалидности.Добавить("I");
	СписокГруппИнвалидности.Добавить("II");

	Запрос.УстановитьПараметр("парамИнвалид", Перечисления.ОтношениеКИнвалидности.Инвалид);
	Запрос.УстановитьПараметр("парамСписокГруппИнвалидности",  СписокГруппИнвалидности);
	Запрос.УстановитьПараметр("парамПустаяДата", '00010101');

	// ФизлицаБезПраваНаПенсию
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц не имеющих право на пенсионное обеспечение
	ФизлицаБезПраваНаПенсиюТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизЛицаБезПраваНаПенсию
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезПраваНаПенсиюТекст;
	Запрос.Выполнить();
	ФизлицаБезПраваНаПенсиюТекст = "ВТФизЛицаБезПраваНаПенсию";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизЛицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";

	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТФизЛицаПенсионеры";

	// ФизлицаИнвалидыБессрочно
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-инвалидов I и II группы, у которых инвалидность установлена бессрочно
	ФизлицаИнвалидыБессрочноТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОбИнвалидностиФизлиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаИнвалидыБессрочно
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамКонец) КАК СведенияОбИнвалидностиФизлиц
	|
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = &парамИнвалид И
	|	СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности В (&парамСписокГруппИнвалидности) И
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки = &парамПустаяДата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
	
	Запрос.Текст = ФизлицаИнвалидыБессрочноТекст;
	Запрос.Выполнить();
	ФизлицаИнвалидыБессрочноТекст = "ВТФизлицаИнвалидыБессрочно";
	
	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет взносов
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ОПВСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаБезПраваНаПенсию.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезПраваНаПенсию,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаИнвалидыБессрочно.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаИнвалида
	|
	|ПОМЕСТИТЬ ВТПериоды	
	|ИЗ
	|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ОПВСведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезПраваНаПенсиюТекст + " КАК ФизлицаБезПраваНаПенсию
	|		ПО ВЫБОР
	|			КОГДА ОПВСведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ОПВСведенияОДоходах.ФизЛицо.ФизЛицо 
	|			ИНАЧЕ ОПВСведенияОДоходах.ФизЛицо КОНЕЦ = ФизлицаБезПраваНаПенсию.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО ВЫБОР
	|			КОГДА ОПВСведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ОПВСведенияОДоходах.ФизЛицо.ФизЛицо 
	|			ИНАЧЕ ОПВСведенияОДоходах.ФизЛицо КОНЕЦ = ФизлицаПенсионеры.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаИнвалидыБессрочноТекст + " КАК ФизлицаИнвалидыБессрочно
	|		ПО ВЫБОР
	|			КОГДА ОПВСведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ОПВСведенияОДоходах.ФизЛицо.ФизЛицо 
	|			ИНАЧЕ ОПВСведенияОДоходах.ФизЛицо КОНЕЦ = ФизлицаИнвалидыБессрочно.ФизЛицо 
	|
	|ГДЕ
	|	ОПВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ)
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТПериоды";

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые взносами доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	ОПВОбороты.ФизЛицо КАК ФизЛицо,
	|	ОПВОбороты.Период КАК Период,
	|	СУММА(ОПВОбороты.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВОбороты.СуммаДоходаОборотНеОблагаетсяЦеликом) -	СУММА(ОПВОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВОбороты.ОблагаемаяБазаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаБезПраваНаПенсию) КАК ПризнакФизЛицаБезПраваНаПенсию,
	|	МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаИнвалида) КАК ПризнакФизЛицаИнвалида
	|
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОПВСведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СУММА(ОПВСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаОборот,
	|		СУММА(ВЫБОР 
	|				КОГДА ОПВСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|					ТОГДА ОПВСведенияОДоходах.СуммаДоходаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаДоходаОборотНеОблагаетсяЦеликом,
	|	 	СУММА(ВЫБОР 
	|				КОГДА ОПВСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|					ТОГДА ОПВСведенияОДоходах.СуммаВычетаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаВычетаОборот,
	|	 	СУММА(ОПВСведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезПраваНаПенсию) КАК ПризнакФизЛицаБезПраваНаПенсию,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаИнвалида) КАК ПризнакФизЛицаИнвалида
	|	ИЗ
	|		РегистрНакопления.ОПВСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					Налогоплательщик = &парамНалогоплательщик
	|					И ПериодРегистрации <= &парамКонецПериодаРегистрации) КАК ОПВСведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
 	|			ПО Работники.Физлицо = ОПВСведенияОДоходах.ФизЛицо 
 	|				И Работники.Период = НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ)
 	|
	|	СГРУППИРОВАТЬ ПО
	|		ОПВСведенияОДоходах.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ)) КАК ОПВОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВОбороты.Период,
	|	ОПВОбороты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТДоходы";
	
	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  для СписокФизлиц

	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВРасчетыСФондами.Взнос)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленныйВзнос
	|
	|ПОМЕСТИТЬ ВТОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	" + ?(НЕ ЭтоРасчетПервойПоловиныМесяца, "ОПВРасчетыСФондами.Регистратор <> &парамРегистратор И", "") + "
	|	ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ОПВРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";

	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТОПВРасчетыСФондами";

	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления взносов
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК МинимальноеОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 50, 0) КАК ОграничениеПоДоходам
	|
	|ПОМЕСТИТЬ ВТРазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТРазмерОграниченияПоДоходам";

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОПВ для каждого периода исчисления взносов с учетом приоритетов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОПВ для каждого периода исчисления взносов с наивысшим приоритетом
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахНалоговСборовОтчислений.Период,
	|			МИНИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахНалоговСборовОтчислений.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Приоритет = СведенияОСтавкахНалоговСборовОтчислений.Приоритет
	|";
	
	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	
	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОПВ для каждого периода исчисления взносов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТСведенияОСтавкахНалоговСборовОтчислений
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			МАКСИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|				ПО СведенияОСтавкахНалоговСборовОтчислений.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	Запрос.Выполнить();
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "ВТСведенияОСтавкахНалоговСборовОтчислений";

	ТипЗначенияОПВТекст  = "ЧИСЛО(15, 2)";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";

	// облагаемый доход за месяц
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	// минимальное ограничение по доходам
	ПолеРазмерМинимальногоОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.МинимальноеОграничениеПоДоходам, 0)";
	
	// облагаемая база
	ПолеОблагаемаяБазаЗаМесяц = 
	"ВЫБОР 
	|				КОГДА (" + ПолеОблагаемыйДоходЗаМесяц +" <= 0)
	|					ТОГДА 0
	|				КОГДА ДоходыЗаМесяц.Физлицо ССЫЛКА Справочник.Контрагенты И (" + ПолеОблагаемыйДоходЗаМесяц + " < "+ ПолеРазмерМинимальногоОграниченияПоДоходам+ ")
	|					ТОГДА " + ПолеРазмерМинимальногоОграниченияПоДоходам + "
	|				КОГДА (" + ПолеОблагаемыйДоходЗаМесяц +" < "+ ПолеРазмерОграниченияПоДоходам + ")
	|					ТОГДА " + ПолеОблагаемыйДоходЗаМесяц +"
	|				ИНАЧЕ " + ПолеРазмерОграниченияПоДоходам +"
	|		   КОНЕЦ";
	
	// сумма взносов исчисленная
	ПолеВзносыИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеОблагаемыйДоходЗаМесяц +" <= 0)
	|					ТОГДА 0
	|				КОГДА ДоходыЗаМесяц.Физлицо ССЫЛКА Справочник.Контрагенты И (" + ПолеОблагаемыйДоходЗаМесяц + " < "+ ПолеРазмерМинимальногоОграниченияПоДоходам+ ")
	|					ТОГДА " + ПолеРазмерМинимальногоОграниченияПоДоходам + " * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|				КОГДА (" + ПолеОблагаемыйДоходЗаМесяц + " < "+ ПолеРазмерОграниченияПоДоходам + ")
	|					ТОГДА (" + ПолеОблагаемыйДоходЗаМесяц + ") * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|				ИНАЧЕ " + ПолеРазмерОграниченияПоДоходам +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|		   КОНЕЦ КАК " + ТипЗначенияОПВТекст + "))";
	
	// сумма ранее исчисленных взносов
	ПолеРанееВзносыИсчисленные = "ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныйВзнос, 0)";

	// ИсчисленныйОПВ
	//	Поля:
	//		Физлицо
	//		ВзносыИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее взносы за месяц и производит расчет взносов

	ИсчисленныйОПВТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезПраваНаПенсию,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	ДоходыЗаМесяц.ПризнакФизЛицаИнвалида,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеОблагаемаяБазаЗаМесяц + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеОблагаемаяБазаЗаМесяц + " - " + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК ОблагаемаяБаза,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходам,
	|	" + ПолеРазмерМинимальногоОграниченияПоДоходам + " КАК РазмерМинимальногоОграниченияПоДоходам,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	" + ПолеВзносыИсчисленные + " КАК ВзносЗаПериод,
	|	" + ПолеРанееВзносыИсчисленные + " КАК РанееИсчисленныйВзнос,
	|	" + ПолеВзносыИсчисленные + "-" + ПолеРанееВзносыИсчисленные + " КАК ВзносИсчисленный
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ОПВРасчетыСФондамиТекст+" КАК ОПВРасчетыСФондами
	|		ПО ОПВРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ОПВРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахНалоговСборовОтчисленийТекст+" КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период
	|";

	Запрос.Текст = ИсчисленныйОПВТекст;	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаОПВ()

// Получить данные для расчета ОПВ по ставке 10%
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные взносы 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ОПВ
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаОПВПосле2020(ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса, ЭтоРасчетПервойПоловиныМесяца) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидОПВ", 			Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамПустойВидДохода", Справочники.ВидыДоходов.ПустаяСсылка());

	РеквизитыНалогоплательщика = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Налогоплательщик, "ЮрФизЛицо,ИндивидуальныйПредприниматель");
	Запрос.УстановитьПараметр("парамИндивидуальныйПредприниматель", РеквизитыНалогоплательщика.ИндивидуальныйПредприниматель);

	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для Каждого ПараметрЗапроса Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(ПараметрЗапроса.Ключ, ПараметрЗапроса.Значение);
		КонецЦикла;
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОПВСведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = ОПВСведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И ОПВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОПВСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ОПВСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ОПВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);

	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	
	СписокГруппИнвалидности = Новый СписокЗначений;
	СписокГруппИнвалидности.Добавить("I");
	СписокГруппИнвалидности.Добавить("II");

	Запрос.УстановитьПараметр("парамИнвалид", Перечисления.ОтношениеКИнвалидности.Инвалид);
	Запрос.УстановитьПараметр("парамСписокГруппИнвалидности",  СписокГруппИнвалидности);
	Запрос.УстановитьПараметр("парамПустаяДата", '00010101');

	// ФизлицаБезПраваНаПенсию
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц не имеющих право на пенсионное обеспечение
	ФизлицаБезПраваНаПенсиюТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизЛицаБезПраваНаПенсию
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезПраваНаПенсиюТекст;
	Запрос.Выполнить();
	ФизлицаБезПраваНаПенсиюТекст = "ВТФизЛицаБезПраваНаПенсию";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизЛицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";

	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТФизЛицаПенсионеры";

	// ФизлицаИнвалидыБессрочно
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-инвалидов I и II группы, у которых инвалидность установлена бессрочно
	ФизлицаИнвалидыБессрочноТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОбИнвалидностиФизлиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаИнвалидыБессрочно
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамКонец) КАК СведенияОбИнвалидностиФизлиц
	|
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = &парамИнвалид И
	|	СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности В (&парамСписокГруппИнвалидности) И
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки = &парамПустаяДата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
	
	Запрос.Текст = ФизлицаИнвалидыБессрочноТекст;
	Запрос.Выполнить();
	ФизлицаИнвалидыБессрочноТекст = "ВТФизлицаИнвалидыБессрочно";
	
	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет взносов
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ОПВСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаБезПраваНаПенсию.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезПраваНаПенсию,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаИнвалидыБессрочно.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаИнвалида
	|
	|ПОМЕСТИТЬ ВТПериоды	
	|ИЗ
	|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ОПВСведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезПраваНаПенсиюТекст + " КАК ФизлицаБезПраваНаПенсию
	|		ПО ВЫБОР
	|			КОГДА ОПВСведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ОПВСведенияОДоходах.ФизЛицо.ФизЛицо 
	|			ИНАЧЕ ОПВСведенияОДоходах.ФизЛицо КОНЕЦ = ФизлицаБезПраваНаПенсию.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО ВЫБОР
	|			КОГДА ОПВСведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ОПВСведенияОДоходах.ФизЛицо.ФизЛицо 
	|			ИНАЧЕ ОПВСведенияОДоходах.ФизЛицо КОНЕЦ = ФизлицаПенсионеры.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаИнвалидыБессрочноТекст + " КАК ФизлицаИнвалидыБессрочно
	|		ПО ВЫБОР
	|			КОГДА ОПВСведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ОПВСведенияОДоходах.ФизЛицо.ФизЛицо 
	|			ИНАЧЕ ОПВСведенияОДоходах.ФизЛицо КОНЕЦ = ФизлицаИнвалидыБессрочно.ФизЛицо 
	|
	|ГДЕ
	|	ОПВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ)
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТПериоды";

	// получим физлиц и контрагентов в виде соответствия для определения дохода по другому виду
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокФизЛиц.ФизЛицо КАК ФизЛицо,
	|	Контрагенты.Ссылка КАК КонтрагентФизЛицо,
	|	СписокФизЛиц.Период КАК Период,
	|	СписокФизЛиц.ПризнакФизЛицаБезПраваНаПенсию,
	|	СписокФизЛиц.ПризнакФизЛицаПенсионера,
	|	СписокФизЛиц.ПризнакФизЛицаИнвалида
	|ПОМЕСТИТЬ ВТ_СоответствиеКонтрагентовИФизЛиц
	|ИЗ
	|	ВТПериоды КАК СписокФизЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО Контрагенты.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|ГДЕ
	|	СписокФизЛиц.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	СписокФизЛиц.ФизЛицо,
	|	Контрагенты.ФизЛицо,
	|	СписокФизЛиц.Период КАК Период,
	|	СписокФизЛиц.ПризнакФизЛицаБезПраваНаПенсию,
	|	СписокФизЛиц.ПризнакФизЛицаПенсионера,
	|	СписокФизЛиц.ПризнакФизЛицаИнвалида
	|ИЗ
	|	ВТПериоды КАК СписокФизЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО Контрагенты.Ссылка = СписокФизЛиц.ФизЛицо
	|
	|ГДЕ
	|	СписокФизЛиц.ФизЛицо ССЫЛКА Справочник.Контрагенты 
	|";
	Запрос.Выполнить();

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые взносами доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	ОПВОбороты.ФизЛицо КАК ФизЛицо,
	|	ОПВОбороты.Период КАК Период,
	|	СУММА(ОПВОбороты.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВОбороты.СуммаДоходаОборотНеОблагаетсяЦеликом) -	СУММА(ОПВОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВОбороты.ОблагаемаяБазаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаБезПраваНаПенсию) КАК ПризнакФизЛицаБезПраваНаПенсию,
	|	МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаИнвалида) КАК ПризнакФизЛицаИнвалида
	|
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОПВСведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СУММА(ОПВСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаОборот,
	|		СУММА(ВЫБОР 
	|				КОГДА ОПВСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|					ТОГДА ОПВСведенияОДоходах.СуммаДоходаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаДоходаОборотНеОблагаетсяЦеликом,
	|	 	СУММА(ВЫБОР 
	|				КОГДА ОПВСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|					ТОГДА ОПВСведенияОДоходах.СуммаВычетаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаВычетаОборот,
	|	 	СУММА(ОПВСведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезПраваНаПенсию) КАК ПризнакФизЛицаБезПраваНаПенсию,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаИнвалида) КАК ПризнакФизЛицаИнвалида
	|	ИЗ
	|		РегистрНакопления.ОПВСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					Регистратор,
	|					Налогоплательщик = &парамНалогоплательщик
	|					И ПериодРегистрации <= &парамКонецПериодаРегистрации) КАК ОПВСведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
 	|			ПО Работники.Физлицо = ОПВСведенияОДоходах.ФизЛицо 
 	|				И Работники.Период = НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ)
 	|
	|	СГРУППИРОВАТЬ ПО
	|		ОПВСведенияОДоходах.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ)) КАК ОПВОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВОбороты.Период,
	|	ОПВОбороты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТДоходы";
	
	// ДоходыПоДругимВидамТекст
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые взносами доходы за периоды по физлицам
	ДоходыПоДругимВидамТекст = "
	|ВЫБРАТЬ
	|	ОПВОбороты.ФизЛицо КАК ФизЛицо,
	|	ОПВОбороты.Период КАК Период,
	|	СУММА(ОПВОбороты.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВОбороты.СуммаДоходаОборотНеОблагаетсяЦеликом) - СУММА(ОПВОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(ОПВОбороты.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВОбороты.ОблагаемаяБазаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза
	|
	|ПОМЕСТИТЬ ВТДоходыПоДругимВидам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Работники.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СУММА(ОПВСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаОборот,
	|		СУММА(ВЫБОР 
	|				КОГДА ОПВСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|					ТОГДА ОПВСведенияОДоходах.СуммаДоходаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаДоходаОборотНеОблагаетсяЦеликом,
	|	 	СУММА(ВЫБОР 
	|				КОГДА ОПВСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|					ТОГДА ОПВСведенияОДоходах.СуммаВычетаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаВычетаОборот,
	|	 	СУММА(ОПВСведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезПраваНаПенсию) КАК ПризнакФизЛицаБезПраваНаПенсию,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаИнвалида) КАК ПризнакФизЛицаИнвалида
	|	ИЗ
	|		РегистрНакопления.ОПВСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					Регистратор,
	|					Налогоплательщик = &парамНалогоплательщик
	|					И ПериодРегистрации <= &парамКонецПериодаРегистрации) КАК ОПВСведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СоответствиеКонтрагентовИФизЛиц КАК Работники
 	|			ПО Работники.КонтрагентФизЛицо = ОПВСведенияОДоходах.ФизЛицо 
 	|				И Работники.Период = НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ)
 	|
	|	СГРУППИРОВАТЬ ПО
	|		Работники.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ)) КАК ОПВОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВОбороты.Период,
	|	ОПВОбороты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период";
	
	Запрос.Текст = ДоходыПоДругимВидамТекст;
	Запрос.Выполнить();
	ДоходыПоДругимВидамТекст = "ВТДоходыПоДругимВидам";

	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  для СписокФизлиц

	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВРасчетыСФондами.Взнос)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленныйВзнос
	|
	|ПОМЕСТИТЬ ВТОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	" + ?(НЕ ЭтоРасчетПервойПоловиныМесяца, "ОПВРасчетыСФондами.Регистратор <> &парамРегистратор И", "") + "
	|	ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ОПВРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";

	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТОПВРасчетыСФондами";


	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  для СписокФизлиц

	ОПВРасчетыСФондамиПоДругимВидамТекст = "
	|ВЫБРАТЬ
	|	РаботникиОрганизации.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВРасчетыСФондами.Взнос)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленныйВзнос
	|ПОМЕСТИТЬ ВТОПВРасчетыСФондамиПоДругимВидам
	|
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СоответствиеКонтрагентовИФизЛиц КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.КонтрагентФизЛицо = ОПВРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	" + ?(НЕ ЭтоРасчетПервойПоловиныМесяца, "ОПВРасчетыСФондами.Регистратор <> &парамРегистратор И", "") + "
	|	ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ОПВРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки И
	|	ОПВРасчетыСФондами.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|	РаботникиОрганизации.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";

	Запрос.Текст = ОПВРасчетыСФондамиПоДругимВидамТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиПоДругимВидамТекст = "ВТОПВРасчетыСФондамиПоДругимВидам";
	
	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления взносов
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК МинимальноеОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 50, 0) КАК ОграничениеПоДоходам
	|
	|ПОМЕСТИТЬ ВТРазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТРазмерОграниченияПоДоходам";

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОПВ для каждого периода исчисления взносов с учетом приоритетов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидДохода КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода <> &парамПустойВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Вознаграждения) КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Выигрыши) КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Дивиденды) КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента) КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя) КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ПрочиеДоходы) КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидДохода КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода <> &парамПустойВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Вознаграждения) КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Выигрыши) КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Дивиденды) КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента) КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя) КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ПрочиеДоходы) КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОПВ для каждого периода исчисления взносов с наивысшим приоритетом
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ВидДохода КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахНалоговСборовОтчислений.Период,
	|			СведенияОСтавкахНалоговСборовОтчислений.ВидДохода,
	|			МИНИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахНалоговСборовОтчислений.Период,
	|			СведенияОСтавкахНалоговСборовОтчислений.ВидДохода) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Приоритет = СведенияОСтавкахНалоговСборовОтчислений.Приоритет
	|			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ВидДохода = СведенияОСтавкахНалоговСборовОтчислений.ВидДохода
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УчетнаяПолитика.Период КАК Период,
	|	ВЫРАЗИТЬ(""ИП"" КАК СТРОКА(2)) КАК ВидДохода,
	|	ЕСТЬNULL(УчетнаяПолитика.СтавкаОПВДляИП, 0) КАК Ставка
	|ИЗ 
	|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитика
	|ГДЕ
	|	УчетнаяПолитика.Период >= ДАТАВРЕМЯ(2020, 1, 1)
	|	И УчетнаяПолитика.Организация = &парамНалогоплательщик
	|";
	
	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	
	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОПВ для каждого периода исчисления взносов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидДохода КАК ВидДохода,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТСведенияОСтавкахНалоговСборовОтчислений
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			СведенияОСтавкахНалоговСборовОтчислений.ВидДохода,
	|			МАКСИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|				ПО СведенияОСтавкахНалоговСборовОтчислений.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период,
	|			СведенияОСтавкахНалоговСборовОтчислений.ВидДохода) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ВидДохода = СведенияОСтавкахНалоговСборовОтчислений.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	Запрос.Выполнить();
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "ВТСведенияОСтавкахНалоговСборовОтчислений";

	ТипЗначенияОПВТекст  = "ЧИСЛО(15, 2)";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";

	// облагаемый доход за месяц
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	// облагаемый доход за месяц по другим видам
	ПолеРанееИсчисленнаяОблагаемаяБазаПоДругимВидам = "ЕСТЬNULL(ДоходыЗаМесяцПоДругимВидам.ИсчисленнаяОблагаемаяБаза, 0)";	
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "(ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0) - " + ПолеРанееИсчисленнаяОблагаемаяБазаПоДругимВидам + ")";
	// минимальное ограничение по доходам
	ПолеРазмерМинимальногоОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.МинимальноеОграничениеПоДоходам, 0)";	
	
	// облагаемая база
	ПолеОблагаемаяБазаЗаМесяц = 
	"ВЫБОР 
	|				КОГДА (" + ПолеОблагаемыйДоходЗаМесяц +" <= 0)
	|					ТОГДА 0
	|				КОГДА (" + ПолеОблагаемыйДоходЗаМесяц +" < "+ ПолеРазмерОграниченияПоДоходам + ")
	|					ТОГДА " + ПолеОблагаемыйДоходЗаМесяц +"
	|				ИНАЧЕ " + ПолеРазмерОграниченияПоДоходам +"
	|		   КОНЕЦ";
	
	// сумма взносов исчисленная
	ПолеВзносыИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеОблагаемыйДоходЗаМесяц +" <= 0)
	|					ТОГДА 0
	|				КОГДА (" + ПолеОблагаемыйДоходЗаМесяц + " < "+ ПолеРазмерОграниченияПоДоходам + ")
	|					ТОГДА (" + ПолеОблагаемыйДоходЗаМесяц + ") * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|				ИНАЧЕ " + ПолеРазмерОграниченияПоДоходам +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|		   КОНЕЦ КАК " + ТипЗначенияОПВТекст + "))";
	
	// сумма ранее исчисленных взносов
	ПолеРанееВзносыИсчисленные = "ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныйВзнос, 0)";

	// сумма ранее исчисленных взносов по дргуим видам
	ПолеРанееВзносыИсчисленныеПоДругимВидам = "ЕСТЬNULL(ОПВРасчетыСФондамиПоДругимВидам.ИсчисленныйВзнос, 0)";

	// ИсчисленныйОПВ
	//	Поля:
	//		Физлицо
	//		ВзносыИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее взносы за месяц и производит расчет взносов

	ИсчисленныйОПВТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо КАК Физлицо,
	|	ВЫБОР КОГДА ДоходыЗаМесяц.Физлицо ССЫЛКА Справочник.Контрагенты ТОГДА ДоходыЗаМесяц.Физлицо.ФизЛицо ИНАЧЕ ДоходыЗаМесяц.Физлицо КОНЕЦ КАК ФизЛицоДохода,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезПраваНаПенсию,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	ДоходыЗаМесяц.ПризнакФизЛицаИнвалида,
	|	" + ПолеРазмерМинимальногоОграниченияПоДоходам + " КАК РазмерМинимальногоОграниченияПоДоходам,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеОблагаемаяБазаЗаМесяц + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБазаПоДругимВидам + " КАК РанееИсчисленнаяОблагаемаяБазаПоДругимВидам,
	|	" + ПолеРазмерОграниченияПоДоходам + "+" + ПолеРанееИсчисленнаяОблагаемаяБазаПоДругимВидам +" КАК РазмерОграниченияПоДоходам,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) КАК Ставка,
	|	" + ПолеВзносыИсчисленные + " КАК ВзносЗаПериод,
	|	" + ПолеРанееВзносыИсчисленные + " КАК РанееИсчисленныйВзнос,
	|	" + ПолеРанееВзносыИсчисленныеПоДругимВидам + " КАК РанееИсчисленныйВзносПоДругимВидам
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ДоходыПоДругимВидамТекст+" КАК ДоходыЗаМесяцПоДругимВидам
	|		ПО ДоходыЗаМесяц.Период = ДоходыЗаМесяцПоДругимВидам.Период 
	|			И ДоходыЗаМесяц.ФизЛицо = ДоходыЗаМесяцПоДругимВидам.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ОПВРасчетыСФондамиТекст+" КАК ОПВРасчетыСФондами
	|		ПО ОПВРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ОПВРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ОПВРасчетыСФондамиПоДругимВидамТекст+" КАК ОПВРасчетыСФондамиПоДругимВидам
	|		ПО ОПВРасчетыСФондамиПоДругимВидам.Период = ДоходыЗаМесяц.Период 
	|			И ОПВРасчетыСФондамиПоДругимВидам.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахНалоговСборовОтчисленийТекст+" КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И ВЫБОР 
	|				КОГДА ДоходыЗаМесяц.Физлицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента)
	|				КОГДА ДоходыЗаМесяц.Физлицо = &парамИндивидуальныйПредприниматель
	|					ТОГДА СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = ""ИП""
	|				ИНАЧЕ СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период
	|";

	Запрос.Текст = ИсчисленныйОПВТекст;	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаОПВ()

// Получить данные для расчета СО
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные отчисления 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей СО
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаСО (Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено) Экспорт
									
	Если ПериодРегистрации >= '20200101' Тогда
		// Расчет СО с ограничением на мин. объект исчисления
		РезультатЗапроса = ПолучитьДанныеДляРасчетаСОПосле2020(ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик, 
																Регистратор, 
																СписокФизЛицТекст,
																ОтражениеПоПериодуРегистрации,
																ДополнительныеПараметрыЗапроса);
																
	ИначеЕсли ПериодРегистрации >= '20190101' Тогда
		// Расчет СО с ограничением на мин. объект исчисления
		РезультатЗапроса = ПолучитьДанныеДляРасчетаСОПосле2019(ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик, 
																Регистратор, 
																СписокФизЛицТекст,
																ОтражениеПоПериодуРегистрации,
																ДополнительныеПараметрыЗапроса);
																
	ИначеЕсли ПериодРегистрации >= '20140101' Тогда
		// Расчет СО с ограничением на мин. объект исчисления
		РезультатЗапроса = ПолучитьДанныеДляРасчетаСОПосле2014(ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик, 
																Регистратор, 
																СписокФизЛицТекст,
																ОтражениеПоПериодуРегистрации,
																ДополнительныеПараметрыЗапроса);
	ИначеЕсли ПериодРегистрации >= '20130201' Тогда
		// Расчет СО с ограничением на мин. сумму дохода
		РезультатЗапроса = ПолучитьДанныеДляРасчетаСОПосле2013(ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик, 
																Регистратор, 
																СписокФизЛицТекст,
																ОтражениеПоПериодуРегистрации,
																ДополнительныеПараметрыЗапроса);
		
	Иначе
		// Расчет СО без ограничения на мин. сумму дохода
		РезультатЗапроса = ПолучитьДанныеДляРасчетаСОДо2013(ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик, 
																Регистратор, 
																СписокФизЛицТекст, 
																ДополнительныеПараметрыЗапроса);
	КонецЕсли;
									
	Возврат РезультатЗапроса;
	
КонецФункции
								
// Получить данные для расчета СО
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные отчисления 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей СО
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаСОДо2013(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидСО", 			Справочники.НалогиСборыОтчисления.ОбязательныеСоциальныеОтчисления);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	СОСведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.СОСведенияОДоходах КАК СОСведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = СОСведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	СОСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И СОСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СОСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.СОСведенияОДоходах КАК СОСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = СОСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	СОСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И СОСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);

	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	
	// ФизлицаБезСоциальногоСтрахования
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц не подлежащих социальному страхованию
	ФизлицаБезСоциальногоСтрахованияТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаБезСоциальногоСтрахования
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеПодлежитСоциальномуСтрахованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезСоциальногоСтрахованияТекст;
	Запрос.Выполнить();
	ФизлицаБезСоциальногоСтрахованияТекст = "ВТФизлицаБезСоциальногоСтрахования";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТФизлицаПенсионеры";
	
	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет отчислений
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(СОСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	СОСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаБезСоциальногоСтрахования.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезСоциальногоСтрахования,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера
	|
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	РегистрНакопления.СОСведенияОДоходах КАК СОСведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = СОСведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезСоциальногоСтрахованияТекст + " КАК ФизлицаБезСоциальногоСтрахования
	|		ПО СОСведенияОДоходах.ФизЛицо = ФизлицаБезСоциальногоСтрахования.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО СОСведенияОДоходах.ФизЛицо = ФизлицаПенсионеры.ФизЛицо
	|
	|ГДЕ
	|	СОСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И СОСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(СОСведенияОДоходах.Период, МЕСЯЦ),
	|	СОСведенияОДоходах.ФизЛицо
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТПериоды";

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые отчислениями доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	СООбороты.ФизЛицо КАК ФизЛицо,
	|	СООбороты.Период КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) = 0 
	|				И МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) = 0 
	|			ТОГДА СУММА(СООбороты.СуммаДоходаОборот) - СУММА(СООбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) = 0 
	|				И МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) = 0 
	|			ТОГДА СУММА(СООбороты.ОблагаемаяБазаОборот) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) КАК ПризнакФизЛицаБезСоциальногоСтрахования,
	|	МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера
	|
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		СОСведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(СОСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СУММА(ВЫБОР 
	|			КОГДА СОСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА СОСведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	 	СУММА(СОСведенияОДоходах.СуммаВычетаОборот) КАК СуммаВычетаОборот,
	|		СУММА(СОСведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезСоциальногоСтрахования) КАК ПризнакФизЛицаБезСоциальногоСтрахования,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера
	|	ИЗ
	|		РегистрНакопления.СОСведенияОДоходах.Обороты(
	|				&парамНачало,
	|				&парамКонец,
	|				МЕСЯЦ,
	|				ПериодРегистрации <= &парамКонецПериодаРегистрации
	|				И Налогоплательщик = &парамНалогоплательщик) КАК СОСведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
	|			ПО Работники.Физлицо = СОСведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(СОСведенияОДоходах.Период, МЕСЯЦ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СОСведенияОДоходах.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(СОСведенияОДоходах.Период, МЕСЯЦ)) КАК СООбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	СООбороты.Период,
	|	СООбороты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СООбороты.ФизЛицо,
	|	СООбороты.Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТДоходы";
		
	// СОРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленноеОтчисление
	//
	//	Описание:
	//	Выбирает исчисленные социальные отчисления (приходы по регистру СОРасчетыСФондами)
	//  для СписокФизлиц
	СОРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	СОРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СОРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезСоциальногоСтрахования) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|			ТОГДА СУММА(СОРасчетыСФондами.Отчисление)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленноеОтчисление
	|
	|ПОМЕСТИТЬ ВТСОРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = СОРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	СОРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	СОРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	СОРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	СОРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	СОРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	СОРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	СОРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	СОРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	СОРасчетыСФондами.МесяцНалоговогоПериода,
	|	СОРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СОРасчетыСФондами.ФизЛицо,
	|	СОРасчетыСФондами.МесяцНалоговогоПериода";

	Запрос.Текст = СОРасчетыСФондамиТекст;
	Запрос.Выполнить();
	СОРасчетыСФондамиТекст = "ВТСОРасчетыСФондами";

	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  для СписокФизлиц
	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныйВзнос
	|
	|ПОМЕСТИТЬ ВТОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ("+СписокФизЛицТекст+") КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо 
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ОПВРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ОПВРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода";
	
	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТОПВРасчетыСФондами";
	
	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления отчислений
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 10, 0) КАК ОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП
	|
	|ПОМЕСТИТЬ ВТРазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТРазмерОграниченияПоДоходам";

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений с учетом приоритетов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидСО
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидСО
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений с наивысшим приоритетом
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахНалоговСборовОтчислений.Период,
	|			МИНИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахНалоговСборовОтчислений.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Приоритет = СведенияОСтавкахНалоговСборовОтчислений.Приоритет
	|";
	
	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	
	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТСведенияОСтавкахНалоговСборовОтчислений
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			МАКСИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|				ПО СведенияОСтавкахНалоговСборовОтчислений.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	Запрос.Выполнить();
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "ВТСведенияОСтавкахНалоговСборовОтчислений";	

	ТипЗначенияСОТекст  = "ЧИСЛО(15, 2)";
	
	// сумма исчисленных пенсионных взносов за период
	ПолеПенсионныеВзносы = "ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныйВзнос, 0)";

	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";

	// облагаемая база по СО
	ПолеБазаДляИсчисленияСО = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + " > 0
	|	ТОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + "
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// Ранее исчисленная облагаемая база
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// минимальное ограчение соц.отчислений по ИП на упрощенке за самого себя
	ПолеРазмерМинОграниченияСОпоИП = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0) * СведенияОСтавкахНалоговСборовОтчислений.Ставка";
	
	// размер МЗП
	ПолеРазмерМЗП = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0)";
	
	// сумма отчислений исчисленная
	ПолеОтчисленияИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеБазаДляИсчисленияСО +" > 0) 
	|				ТОГДА 
	|					ВЫБОР 
	|						КОГДА (" + ПолеБазаДляИсчисленияСО +" < "+ ПолеРазмерОграниченияПоДоходам + ")
	|						ТОГДА " + ПолеБазаДляИсчисленияСО +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|						ИНАЧЕ " + ПолеРазмерОграниченияПоДоходам +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|					КОНЕЦ
	|				ИНАЧЕ 0
	|				КОНЕЦ КАК " + ТипЗначенияСОТекст + "))";
	
	// сумма ранее исчисленных отчислений
	ПолеРанееОтчисленияИсчисленные = "ЕСТЬNULL(СОРасчетыСФондами.ИсчисленноеОтчисление, 0)";

	// ИсчисленныеСО
	//	Поля:
	//		Физлицо
	//		ОтчисленияИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее отчисления за месяц и производит расчет отчислений

	ИсчисленныеСОТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезСоциальногоСтрахования,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеБазаДляИсчисленияСО + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходах,
	|	" + ПолеПенсионныеВзносы + " КАК ОПВЗаМесяц,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	" + ПолеРазмерМЗП + " КАК РазмерМЗП,
	|	" + ПолеРазмерМинОграниченияСОпоИП + " КАК МинОграничениеСОпоИП,
	|	" + ПолеОтчисленияИсчисленные + " КАК СОЗаМесяц,
	|	" + ПолеРанееОтчисленияИсчисленные + " КАК РанееОтчисленияИсчисленные,
	|	" + ПолеОтчисленияИсчисленные + "-" + ПолеРанееОтчисленияИсчисленные + " КАК ОтчислениеИсчисленное
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СОРасчетыСФондамиТекст+" КАК СОРасчетыСФондами
	|		ПО СОРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И СОРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ОПВРасчетыСФондамиТекст+" КАК ОПВРасчетыСФондами
	|		ПО ОПВРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ОПВРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахНалоговСборовОтчисленийТекст+" КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо, 
	|	ДоходыЗаМесяц.Период";

	Запрос.Текст = ИсчисленныеСОТекст;	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаСО()

// Получить данные для расчета СО с мин. ограничением на общую сумму дохода
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные отчисления 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей СО
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаСОПосле2013(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено)
									
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидСО", 			Справочники.НалогиСборыОтчисления.ОбязательныеСоциальныеОтчисления);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	// ФизлицаБезСоциальногоСтрахования
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц не подлежащих социальному страхованию
	ФизлицаБезСоциальногоСтрахованияТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ФизлицаБезСоциальногоСтрахования
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонецПериодаРегистрации) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеПодлежитСоциальномуСтрахованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезСоциальногоСтрахованияТекст;
	Запрос.Выполнить();
	ФизлицаБезСоциальногоСтрахованияТекст = "ВТ_ФизлицаБезСоциальногоСтрахования";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ФизлицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонецПериодаРегистрации) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТ_ФизлицаПенсионеры";


	ПериодыТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыФизЛиц.Период КАК Период,
	|	ПериодыФизЛиц.Физлицо КАК Физлицо,
	|	ПериодыФизЛиц.ПризнакФизЛицаБезСоциальногоСтрахования,
	|	ПериодыФизЛиц.ПризнакФизЛицаПенсионера
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(СОСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СОСведенияОДоходах.ФизЛицо КАК Физлицо,
	|		ВЫБОР
	|			КОГДА НЕ ФизлицаБезСоциальногоСтрахования.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПризнакФизЛицаБезСоциальногоСтрахования,
	|		ВЫБОР
	|			КОГДА НЕ ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПризнакФизЛицаПенсионера
	|	ИЗ
	|		РегистрНакопления.СОСведенияОДоходах КАК СОСведенияОДоходах
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО (Работники.Физлицо = СОСведенияОДоходах.ФизЛицо)
	|			ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезСоциальногоСтрахованияТекст + " КАК ФизлицаБезСоциальногоСтрахования
	|			ПО СОСведенияОДоходах.ФизЛицо = ФизлицаБезСоциальногоСтрахования.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|			ПО СОСведенияОДоходах.ФизЛицо = ФизлицаПенсионеры.ФизЛицо
	|	ГДЕ
	|		СОСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|		И СОСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|	
	|) КАК ПериодыФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|";
		
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТ_Периоды";	
	
	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПериодыФизЛиц.Период КАК Период
		|ИЗ
		|	" + ПериодыТекст + " КАК ПериодыФизЛиц
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПериодыФизЛиц.Период КАК Период
		|ИЗ
		|	" + ПериодыТекст + " КАК ПериодыФизЛиц
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);

	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамПустаяДата", 			  Дата(1,1,1));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	
	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые отчислениями доходы за периоды по физлицам
	ДоходыТекст = "
		|ВЫБРАТЬ
		|	СООбороты.ФизЛицо КАК ФизЛицо,
		|	СООбороты.Период КАК Период,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) = 0 
		|				И МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) = 0 
		|			ТОГДА СУММА(СООбороты.СуммаДоходаОборот) - СУММА(СООбороты.СуммаВычетаОборот)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОблагаемыйДоход,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) = 0
		|				И МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) = 0
		|			ТОГДА СУММА(СООбороты.СуммаНачислений) 
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаНачислений,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) = 0
		|				И МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) = 0
		|			ТОГДА СУММА(СООбороты.ОблагаемаяБаза) 
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
		|	МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) КАК ПризнакФизЛицаБезСоциальногоСтрахования,
		|	МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера
		|
		|ПОМЕСТИТЬ ВТ_Доходы
		|ИЗ
		|	(ВЫБРАТЬ
		|		Работники.Физлицо КАК Физлицо,
		|		НАЧАЛОПЕРИОДА(Работники.Период, МЕСЯЦ) КАК Период,
		|		СУММА(ЕСТЬNULL(ВЫБОР
		|							КОГДА СОСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|								ТОГДА СОСведенияОДоходах.СуммаДоходаОборот
		|							ИНАЧЕ 0
		|						КОНЕЦ, 0)) КАК СуммаДоходаОборот,
		|		СУММА(ЕСТЬNULL(СОСведенияОДоходах.СуммаВычетаОборот, 0)) КАК СуммаВычетаОборот,
		|		СУММА(ЕСТЬNULL(СОСведенияОДоходах.ОблагаемаяБазаОборот, 0)) КАК ОблагаемаяБаза,
		|		СУММА(ЕСТЬNULL(СОСведенияОДоходах.СуммаДоходаОборот, 0)) КАК СуммаНачислений,
		|		МАКСИМУМ(Работники.ПризнакФизЛицаБезСоциальногоСтрахования) КАК ПризнакФизЛицаБезСоциальногоСтрахования,
		|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера
		|	ИЗ
		|		" + ПериодыТекст + " КАК Работники 
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СОСведенияОДоходах.Обороты(
		|				&парамНачало,
		|				&парамКонец,
		|				МЕСЯЦ,
		|				ПериодРегистрации <= &парамКонецПериодаРегистрации
		|				И Налогоплательщик = &парамНалогоплательщик) КАК СОСведенияОДоходах
		|			ПО Работники.Физлицо = СОСведенияОДоходах.ФизЛицо 
		|				И Работники.Период = НАЧАЛОПЕРИОДА(СОСведенияОДоходах.Период, МЕСЯЦ)
		|
		|	СГРУППИРОВАТЬ ПО
		|		Работники.ФизЛицо,
		|		НАЧАЛОПЕРИОДА(Работники.Период, МЕСЯЦ)) КАК СООбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	СООбороты.Период,
		|	СООбороты.Физлицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СООбороты.ФизЛицо,
		|	СООбороты.Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТ_Доходы";
		
	// СОРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленноеОтчисление
	//
	//	Описание:
	//	Выбирает исчисленные социальные отчисления (приходы по регистру СОРасчетыСФондами)
	//  для СписокФизлиц
	СОРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	СОРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СОРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезСоциальногоСтрахования) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|			ТОГДА СУММА(СОРасчетыСФондами.Отчисление)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленноеОтчисление
	|
	|ПОМЕСТИТЬ ВТ_СОРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = СОРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	СОРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	СОРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	СОРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	СОРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	СОРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	СОРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	СОРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	СОРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	СОРасчетыСФондами.МесяцНалоговогоПериода,
	|	СОРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СОРасчетыСФондами.ФизЛицо,
	|	СОРасчетыСФондами.МесяцНалоговогоПериода";

	Запрос.Текст = СОРасчетыСФондамиТекст;
	Запрос.Выполнить();
	СОРасчетыСФондамиТекст = "ВТ_СОРасчетыСФондами";

	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  для СписокФизлиц
	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныйВзнос
	|
	|ПОМЕСТИТЬ ВТ_ОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ("+СписокФизЛицТекст+") КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо 
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ОПВРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ОПВРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода";
	
	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТ_ОПВРасчетыСФондами";
	
	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления отчислений
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 10, 0) КАК ОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП
	|
	|ПОМЕСТИТЬ ВТ_РазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТ_РазмерОграниченияПоДоходам";

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений с учетом приоритетов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидСО
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидСО
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений с наивысшим приоритетом
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахНалоговСборовОтчислений.Период,
	|			МИНИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахНалоговСборовОтчислений.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Приоритет = СведенияОСтавкахНалоговСборовОтчислений.Приоритет
	|";
	
	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	
	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТ_СведенияОСтавкахНалоговСборовОтчислений
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			МАКСИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|				ПО СведенияОСтавкахНалоговСборовОтчислений.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	Запрос.Выполнить();
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "ВТ_СведенияОСтавкахНалоговСборовОтчислений";	

	ТипЗначенияСОТекст  = "ЧИСЛО(15, 2)";
	
	// Общая сумма начислений за месяц
	ПолеСуммаНачислений = "ЕСТЬNULL(ДоходыЗаМесяц.СуммаНачислений, 0)";
	
	// Ограничение на объект исчисления 
	ПолеОграничениеНаМинОбъектИсчисления = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0)";
	
	// сумма исчисленных пенсионных взносов за период
	ПолеПенсионныеВзносы = "ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныйВзнос, 0)";

	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";

	// облагаемая база по СО
	ПолеБазаДляИсчисленияСО = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > 0 
	|		И " + ПолеСуммаНачислений + " > 0
	|		И " + ПолеСуммаНачислений + " < " + ПолеОграничениеНаМинОбъектИсчисления + "
	|	ТОГДА " + ПолеОграничениеНаМинОбъектИсчисления + "
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + " > 0
	|	ТОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + "
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// Ранее исчисленная облагаемая база
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// минимальное ограчение соц.отчислений по ИП на упрощенке за самого себя
	ПолеРазмерМинОграниченияСОпоИП = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0) * СведенияОСтавкахНалоговСборовОтчислений.Ставка";
	
	// сумма отчислений исчисленная
	ПолеОтчисленияИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеБазаДляИсчисленияСО +" > 0) 
	|				ТОГДА 
	|					ВЫБОР 
	|						КОГДА (" + ПолеБазаДляИсчисленияСО +" < "+ ПолеРазмерОграниченияПоДоходам + ")
	|						ТОГДА " + ПолеБазаДляИсчисленияСО +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|						ИНАЧЕ " + ПолеРазмерОграниченияПоДоходам +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|					КОНЕЦ
	|				ИНАЧЕ 0
	|				КОНЕЦ КАК " + ТипЗначенияСОТекст + "))";
	
	// сумма ранее исчисленных отчислений
	ПолеРанееОтчисленияИсчисленные = "ЕСТЬNULL(СОРасчетыСФондами.ИсчисленноеОтчисление, 0)";

	// ИсчисленныеСО
	//	Поля:
	//		Физлицо
	//		ОтчисленияИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее отчисления за месяц и производит расчет отчислений

	ИсчисленныеСОТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезСоциальногоСтрахования,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеБазаДляИсчисленияСО + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеСуммаНачислений + " КАК ОбщаяСуммаНачислений,
	|	" + ПолеОграничениеНаМинОбъектИсчисления + " КАК МинОбъектИсчисления,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходах,
	|	" + ПолеПенсионныеВзносы + " КАК ОПВЗаМесяц,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	" + ПолеРазмерМинОграниченияСОпоИП + " КАК МинОграничениеСОпоИП,
	|	" + ПолеОтчисленияИсчисленные + " КАК СОЗаМесяц,
	|	" + ПолеРанееОтчисленияИсчисленные + " КАК РанееОтчисленияИсчисленные,
	|	" + ПолеОтчисленияИсчисленные + "-" + ПолеРанееОтчисленияИсчисленные + " КАК ОтчислениеИсчисленное
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СОРасчетыСФондамиТекст+" КАК СОРасчетыСФондами
	|		ПО СОРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И СОРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ОПВРасчетыСФондамиТекст+" КАК ОПВРасчетыСФондами
	|		ПО ОПВРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ОПВРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахНалоговСборовОтчисленийТекст+" КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо, 
	|	ДоходыЗаМесяц.Период";

	Запрос.Текст = ИсчисленныеСОТекст;	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаСО()

// Получить данные для расчета СО с мин. ограничением на объект исчисления
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные отчисления 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей СО
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаСОПосле2014(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено)
									
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидСО", 			Справочники.НалогиСборыОтчисления.ОбязательныеСоциальныеОтчисления);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	// ФизлицаБезСоциальногоСтрахования
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц не подлежащих социальному страхованию
	ФизлицаБезСоциальногоСтрахованияТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ФизлицаБезСоциальногоСтрахования
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонецПериодаРегистрации) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеПодлежитСоциальномуСтрахованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезСоциальногоСтрахованияТекст;
	Запрос.Выполнить();
	ФизлицаБезСоциальногоСтрахованияТекст = "ВТ_ФизлицаБезСоциальногоСтрахования";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ФизлицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонецПериодаРегистрации) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТ_ФизлицаПенсионеры";


	ПериодыТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыФизЛиц.Период КАК Период,
	|	ПериодыФизЛиц.Физлицо КАК Физлицо,
	|	ПериодыФизЛиц.ПризнакФизЛицаБезСоциальногоСтрахования,
	|	ПериодыФизЛиц.ПризнакФизЛицаПенсионера
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(СОСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СОСведенияОДоходах.ФизЛицо КАК Физлицо,
	|		ВЫБОР
	|			КОГДА НЕ ФизлицаБезСоциальногоСтрахования.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПризнакФизЛицаБезСоциальногоСтрахования,
	|		ВЫБОР
	|			КОГДА НЕ ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПризнакФизЛицаПенсионера
	|	ИЗ
	|		РегистрНакопления.СОСведенияОДоходах КАК СОСведенияОДоходах
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО (Работники.Физлицо = СОСведенияОДоходах.ФизЛицо)
	|			ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезСоциальногоСтрахованияТекст + " КАК ФизлицаБезСоциальногоСтрахования
	|			ПО СОСведенияОДоходах.ФизЛицо = ФизлицаБезСоциальногоСтрахования.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|			ПО СОСведенияОДоходах.ФизЛицо = ФизлицаПенсионеры.ФизЛицо
	|	ГДЕ
	|		СОСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|		И СОСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|	
	|) КАК ПериодыФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|";
		
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТ_Периоды";	
	
	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПериодыФизЛиц.Период КАК Период
		|ИЗ
		|	" + ПериодыТекст + " КАК ПериодыФизЛиц
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПериодыФизЛиц.Период КАК Период
		|ИЗ
		|	" + ПериодыТекст + " КАК ПериодыФизЛиц
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);

	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамПустаяДата", 			  Дата(1,1,1));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	
	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые отчислениями доходы за периоды по физлицам
	ДоходыТекст = "
		|ВЫБРАТЬ
		|	СООбороты.ФизЛицо КАК ФизЛицо,
		|	СООбороты.Период КАК Период,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) = 0 
		|				И МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) = 0 
		|			ТОГДА СУММА(СООбороты.СуммаДоходаОборот) - СУММА(СООбороты.СуммаВычетаОборот)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОблагаемыйДоход,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) = 0
		|				И МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) = 0
		|			ТОГДА СУММА(СООбороты.ОблагаемаяБаза) 
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
		|	МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) КАК ПризнакФизЛицаБезСоциальногоСтрахования,
		|	МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера
		|
		|ПОМЕСТИТЬ ВТ_Доходы
		|ИЗ
		|	(ВЫБРАТЬ
		|		Работники.Физлицо КАК Физлицо,
		|		НАЧАЛОПЕРИОДА(Работники.Период, МЕСЯЦ) КАК Период,
		|		СУММА(ЕСТЬNULL(ВЫБОР
		|							КОГДА СОСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|								ТОГДА СОСведенияОДоходах.СуммаДоходаОборот
		|							ИНАЧЕ 0
		|						КОНЕЦ, 0)) КАК СуммаДоходаОборот,
		|		СУММА(ЕСТЬNULL(СОСведенияОДоходах.СуммаВычетаОборот, 0)) КАК СуммаВычетаОборот,
		|		СУММА(ЕСТЬNULL(СОСведенияОДоходах.ОблагаемаяБазаОборот, 0)) КАК ОблагаемаяБаза,
		|		СУММА(ЕСТЬNULL(СОСведенияОДоходах.СуммаДоходаОборот, 0)) КАК СуммаНачислений,
		|		МАКСИМУМ(Работники.ПризнакФизЛицаБезСоциальногоСтрахования) КАК ПризнакФизЛицаБезСоциальногоСтрахования,
		|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера
		|	ИЗ
		|		" + ПериодыТекст + " КАК Работники 
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СОСведенияОДоходах.Обороты(
		|				&парамНачало,
		|				&парамКонец,
		|				МЕСЯЦ,
		|				ПериодРегистрации <= &парамКонецПериодаРегистрации
		|				И Налогоплательщик = &парамНалогоплательщик) КАК СОСведенияОДоходах
		|			ПО Работники.Физлицо = СОСведенияОДоходах.ФизЛицо 
		|				И Работники.Период = НАЧАЛОПЕРИОДА(СОСведенияОДоходах.Период, МЕСЯЦ)
		|
		|	СГРУППИРОВАТЬ ПО
		|		Работники.ФизЛицо,
		|		НАЧАЛОПЕРИОДА(Работники.Период, МЕСЯЦ)) КАК СООбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	СООбороты.Период,
		|	СООбороты.Физлицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СООбороты.ФизЛицо,
		|	СООбороты.Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТ_Доходы";
		
	// СОРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленноеОтчисление
	//
	//	Описание:
	//	Выбирает исчисленные социальные отчисления (приходы по регистру СОРасчетыСФондами)
	//  для СписокФизлиц
	СОРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	СОРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СОРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезСоциальногоСтрахования) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|			ТОГДА СУММА(СОРасчетыСФондами.Отчисление)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленноеОтчисление
	|
	|ПОМЕСТИТЬ ВТ_СОРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = СОРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	СОРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	СОРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	СОРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	СОРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	СОРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	СОРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	СОРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	СОРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	СОРасчетыСФондами.МесяцНалоговогоПериода,
	|	СОРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СОРасчетыСФондами.ФизЛицо,
	|	СОРасчетыСФондами.МесяцНалоговогоПериода";

	Запрос.Текст = СОРасчетыСФондамиТекст;
	Запрос.Выполнить();
	СОРасчетыСФондамиТекст = "ВТ_СОРасчетыСФондами";

	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  для СписокФизлиц
	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныйВзнос
	|
	|ПОМЕСТИТЬ ВТ_ОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ("+СписокФизЛицТекст+") КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо 
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ОПВРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ОПВРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода";
	
	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТ_ОПВРасчетыСФондами";
	
	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления отчислений
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 10, 0) КАК ОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП
	|
	|ПОМЕСТИТЬ ВТ_РазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТ_РазмерОграниченияПоДоходам";

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений с учетом приоритетов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидСО
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидСО
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений с наивысшим приоритетом
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахНалоговСборовОтчислений.Период,
	|			МИНИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахНалоговСборовОтчислений.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Приоритет = СведенияОСтавкахНалоговСборовОтчислений.Приоритет
	|";
	
	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	
	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТ_СведенияОСтавкахНалоговСборовОтчислений
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			МАКСИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|				ПО СведенияОСтавкахНалоговСборовОтчислений.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	Запрос.Выполнить();
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "ВТ_СведенияОСтавкахНалоговСборовОтчислений";	

	ТипЗначенияСОТекст  = "ЧИСЛО(15, 2)";
	
	// Ограничение на объект исчисления 
	ПолеОграничениеНаМинОбъектИсчисления = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0)";
	
	// сумма исчисленных пенсионных взносов за период
	ПолеПенсионныеВзносы = "ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныйВзнос, 0)";

	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";

	// облагаемая база по СО
	ПолеБазаДляИсчисленияСО = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + " > 0 
	|		И " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + " < " + ПолеОграничениеНаМинОбъектИсчисления + "
	|	ТОГДА " + ПолеОграничениеНаМинОбъектИсчисления + "
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + " > 0
	|	ТОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + "
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// Ранее исчисленная облагаемая база
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// минимальное ограчение соц.отчислений по ИП на упрощенке за самого себя
	ПолеРазмерМинОграниченияСОпоИП = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0) * СведенияОСтавкахНалоговСборовОтчислений.Ставка";
	
	// сумма отчислений исчисленная
	ПолеОтчисленияИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеБазаДляИсчисленияСО +" > 0) 
	|				ТОГДА 
	|					ВЫБОР 
	|						КОГДА (" + ПолеБазаДляИсчисленияСО +" < "+ ПолеРазмерОграниченияПоДоходам + ")
	|						ТОГДА " + ПолеБазаДляИсчисленияСО +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|						ИНАЧЕ " + ПолеРазмерОграниченияПоДоходам +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|					КОНЕЦ
	|				ИНАЧЕ 0
	|				КОНЕЦ КАК " + ТипЗначенияСОТекст + "))";
	
	// сумма ранее исчисленных отчислений
	ПолеРанееОтчисленияИсчисленные = "ЕСТЬNULL(СОРасчетыСФондами.ИсчисленноеОтчисление, 0)";

	// ИсчисленныеСО
	//	Поля:
	//		Физлицо
	//		ОтчисленияИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее отчисления за месяц и производит расчет отчислений

	ИсчисленныеСОТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезСоциальногоСтрахования,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеБазаДляИсчисленияСО + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеОграничениеНаМинОбъектИсчисления + " КАК МинОбъектИсчисления,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходах,
	|	" + ПолеПенсионныеВзносы + " КАК ОПВЗаМесяц,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	" + ПолеРазмерМинОграниченияСОпоИП + " КАК МинОграничениеСОпоИП,
	|	" + ПолеОтчисленияИсчисленные + " КАК СОЗаМесяц,
	|	" + ПолеРанееОтчисленияИсчисленные + " КАК РанееОтчисленияИсчисленные,
	|	" + ПолеОтчисленияИсчисленные + "-" + ПолеРанееОтчисленияИсчисленные + " КАК ОтчислениеИсчисленное
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СОРасчетыСФондамиТекст+" КАК СОРасчетыСФондами
	|		ПО СОРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И СОРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ОПВРасчетыСФондамиТекст+" КАК ОПВРасчетыСФондами
	|		ПО ОПВРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ОПВРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахНалоговСборовОтчисленийТекст+" КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо, 
	|	ДоходыЗаМесяц.Период";

	Запрос.Текст = ИсчисленныеСОТекст;	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаСО()

// Получить данные для расчета СО с мин. ограничением на объект исчисления
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные отчисления 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей СО
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаСОПосле2019(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено)
									
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидСО", 			Справочники.НалогиСборыОтчисления.ОбязательныеСоциальныеОтчисления);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПериодРегистрации));
	
	РеквизитыНалогоплательщика = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Налогоплательщик, "ЮрФизЛицо,ИндивидуальныйПредприниматель");
	Запрос.УстановитьПараметр("парамИндивидуальныйПредприниматель", РеквизитыНалогоплательщика.ИндивидуальныйПредприниматель);

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	// ФизлицаБезСоциальногоСтрахования
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц не подлежащих социальному страхованию
	ФизлицаБезСоциальногоСтрахованияТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ФизлицаБезСоциальногоСтрахования
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонецПериодаРегистрации) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеПодлежитСоциальномуСтрахованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезСоциальногоСтрахованияТекст;
	Запрос.Выполнить();
	ФизлицаБезСоциальногоСтрахованияТекст = "ВТ_ФизлицаБезСоциальногоСтрахования";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ФизлицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонецПериодаРегистрации) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТ_ФизлицаПенсионеры";


	ПериодыТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыФизЛиц.Период КАК Период,
	|	ПериодыФизЛиц.Физлицо КАК Физлицо,
	|	ПериодыФизЛиц.ПризнакФизЛицаБезСоциальногоСтрахования,
	|	ПериодыФизЛиц.ПризнакФизЛицаПенсионера
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(СОСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СОСведенияОДоходах.ФизЛицо КАК Физлицо,
	|		ВЫБОР
	|			КОГДА НЕ ФизлицаБезСоциальногоСтрахования.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПризнакФизЛицаБезСоциальногоСтрахования,
	|		ВЫБОР
	|			КОГДА НЕ ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПризнакФизЛицаПенсионера
	|	ИЗ
	|		РегистрНакопления.СОСведенияОДоходах КАК СОСведенияОДоходах
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО (Работники.Физлицо = СОСведенияОДоходах.ФизЛицо)
	|			ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезСоциальногоСтрахованияТекст + " КАК ФизлицаБезСоциальногоСтрахования
	|			ПО СОСведенияОДоходах.ФизЛицо = ФизлицаБезСоциальногоСтрахования.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|			ПО СОСведенияОДоходах.ФизЛицо = ФизлицаПенсионеры.ФизЛицо
	|	ГДЕ
	|		СОСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|		И СОСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|	
	|) КАК ПериодыФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|";
		
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТ_Периоды";	
	
	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПериодыФизЛиц.Период КАК Период
		|ИЗ
		|	" + ПериодыТекст + " КАК ПериодыФизЛиц
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПериодыФизЛиц.Период КАК Период
		|ИЗ
		|	" + ПериодыТекст + " КАК ПериодыФизЛиц
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);

	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамПустаяДата", 			  Дата(1,1,1));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	
	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые отчислениями доходы за периоды по физлицам
	ДоходыТекст = "
		|ВЫБРАТЬ
		|	СООбороты.ФизЛицо КАК ФизЛицо,
		|	СООбороты.Период КАК Период,
		|	СУММА(СООбороты.СуммаДоходаОборот) КАК СуммаДоходаВсего,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) = 0 
		|				И МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) = 0 
		|			ТОГДА СУММА(СООбороты.СуммаДоходаОборотНеОблагаетсяЦеликом) - СУММА(СООбороты.СуммаВычетаОборот)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОблагаемыйДоход,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) = 0
		|				И МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) = 0
		|			ТОГДА СУММА(СООбороты.ОблагаемаяБаза) 
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
		|	МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) КАК ПризнакФизЛицаБезСоциальногоСтрахования,
		|	МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера
		|
		|ПОМЕСТИТЬ ВТ_Доходы
		|ИЗ
		|	(ВЫБРАТЬ
		|		Работники.Физлицо КАК Физлицо,
		|		НАЧАЛОПЕРИОДА(Работники.Период, МЕСЯЦ) КАК Период,
		|		СУММА(ЕСТЬNULL(СОСведенияОДоходах.СуммаДоходаОборот, 0)) КАК СуммаДоходаОборот,
		|		СУММА(ЕСТЬNULL(ВЫБОР
		|							КОГДА СОСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|								ТОГДА СОСведенияОДоходах.СуммаДоходаОборот
		|							ИНАЧЕ 0
		|						КОНЕЦ, 0)) КАК СуммаДоходаОборотНеОблагаетсяЦеликом,
		|		СУММА(ЕСТЬNULL(СОСведенияОДоходах.СуммаВычетаОборот, 0)) КАК СуммаВычетаОборот,
		|		СУММА(ЕСТЬNULL(СОСведенияОДоходах.ОблагаемаяБазаОборот, 0)) КАК ОблагаемаяБаза,
		|		СУММА(ЕСТЬNULL(СОСведенияОДоходах.СуммаДоходаОборот, 0)) КАК СуммаНачислений,
		|		МАКСИМУМ(Работники.ПризнакФизЛицаБезСоциальногоСтрахования) КАК ПризнакФизЛицаБезСоциальногоСтрахования,
		|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера
		|	ИЗ
		|		" + ПериодыТекст + " КАК Работники 
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СОСведенияОДоходах.Обороты(
		|				&парамНачало,
		|				&парамКонец,
		|				МЕСЯЦ,
		|				ПериодРегистрации <= &парамКонецПериодаРегистрации
		|				И Налогоплательщик = &парамНалогоплательщик) КАК СОСведенияОДоходах
		|			ПО Работники.Физлицо = СОСведенияОДоходах.ФизЛицо 
		|				И Работники.Период = НАЧАЛОПЕРИОДА(СОСведенияОДоходах.Период, МЕСЯЦ)
		|
		|	СГРУППИРОВАТЬ ПО
		|		Работники.ФизЛицо,
		|		НАЧАЛОПЕРИОДА(Работники.Период, МЕСЯЦ)) КАК СООбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	СООбороты.Период,
		|	СООбороты.Физлицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СООбороты.ФизЛицо,
		|	СООбороты.Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТ_Доходы";
		
	// СОРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленноеОтчисление
	//
	//	Описание:
	//	Выбирает исчисленные социальные отчисления (приходы по регистру СОРасчетыСФондами)
	//  для СписокФизлиц
	СОРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	СОРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СОРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезСоциальногоСтрахования) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|			ТОГДА СУММА(СОРасчетыСФондами.Отчисление)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленноеОтчисление
	|
	|ПОМЕСТИТЬ ВТ_СОРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = СОРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	СОРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	СОРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	СОРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	СОРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	СОРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	СОРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	СОРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	СОРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	СОРасчетыСФондами.МесяцНалоговогоПериода,
	|	СОРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СОРасчетыСФондами.ФизЛицо,
	|	СОРасчетыСФондами.МесяцНалоговогоПериода";

	Запрос.Текст = СОРасчетыСФондамиТекст;
	Запрос.Выполнить();
	СОРасчетыСФондамиТекст = "ВТ_СОРасчетыСФондами";

	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  для СписокФизлиц
	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныйВзнос
	|
	|ПОМЕСТИТЬ ВТ_ОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ("+СписокФизЛицТекст+") КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо 
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ОПВРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ОПВРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода";
	
	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТ_ОПВРасчетыСФондами";
	
	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления отчислений
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 7, 0) КАК ОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП
	|
	|ПОМЕСТИТЬ ВТ_РазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТ_РазмерОграниченияПоДоходам";
	
	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений с учетом приоритетов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидСО
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидСО
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений с наивысшим приоритетом
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахНалоговСборовОтчислений.Период,
	|			МИНИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахНалоговСборовОтчислений.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Приоритет = СведенияОСтавкахНалоговСборовОтчислений.Приоритет
	|";
	
	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	
	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТ_СведенияОСтавкахНалоговСборовОтчислений
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			МАКСИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|				ПО СведенияОСтавкахНалоговСборовОтчислений.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	Запрос.Выполнить();
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "ВТ_СведенияОСтавкахНалоговСборовОтчислений";	

	ТипЗначенияСОТекст  = "ЧИСЛО(15, 2)";
	
	// Ограничение на объект исчисления 
	ПолеОграничениеНаМинОбъектИсчисления = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0)";
	
	// сумма исчисленных пенсионных взносов за период
	ПолеПенсионныеВзносы = "ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныйВзнос, 0)";

	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";

	// облагаемая база по СО
	ПолеБазаДляИсчисленияСО = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + " > 0 
	|		И " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + " < " + ПолеОграничениеНаМинОбъектИсчисления + "
	|	ТОГДА " + ПолеОграничениеНаМинОбъектИсчисления + "
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + " > 0
	|	ТОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + "
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// Ранее исчисленная облагаемая база
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// минимальное ограчение соц.отчислений по ИП на упрощенке за самого себя
	ПолеРазмерМинОграниченияСОпоИП = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0) * СведенияОСтавкахНалоговСборовОтчислений.Ставка";
	
	// сумма отчислений исчисленная
	ПолеОтчисленияИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеБазаДляИсчисленияСО +" > 0) 
	|				ТОГДА 
	|					ВЫБОР 
	|						КОГДА (" + ПолеБазаДляИсчисленияСО +" < "+ ПолеРазмерОграниченияПоДоходам + ")
	|						ТОГДА " + ПолеБазаДляИсчисленияСО +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|						ИНАЧЕ " + ПолеРазмерОграниченияПоДоходам +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|					КОНЕЦ
	|				ИНАЧЕ 0
	|				КОНЕЦ КАК " + ТипЗначенияСОТекст + "))";
	
	// сумма ранее исчисленных отчислений
	ПолеРанееОтчисленияИсчисленные = "ЕСТЬNULL(СОРасчетыСФондами.ИсчисленноеОтчисление, 0)";

	// ИсчисленныеСО
	//	Поля:
	//		Физлицо
	//		ОтчисленияИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее отчисления за месяц и производит расчет отчислений

	ИсчисленныеСОТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезСоциальногоСтрахования,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	ДоходыЗаМесяц.СуммаДоходаВсего,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеБазаДляИсчисленияСО + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеОграничениеНаМинОбъектИсчисления + " КАК МинОбъектИсчисления,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходах,
	|	" + ПолеПенсионныеВзносы + " КАК ОПВЗаМесяц,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	" + ПолеРазмерМинОграниченияСОпоИП + " КАК МинОграничениеСОпоИП,
	|	" + ПолеОтчисленияИсчисленные + " КАК СОЗаМесяц,
	|	" + ПолеРанееОтчисленияИсчисленные + " КАК РанееОтчисленияИсчисленные,
	|	" + ПолеОтчисленияИсчисленные + "-" + ПолеРанееОтчисленияИсчисленные + " КАК ОтчислениеИсчисленное
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СОРасчетыСФондамиТекст+" КАК СОРасчетыСФондами
	|		ПО СОРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И СОРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ОПВРасчетыСФондамиТекст+" КАК ОПВРасчетыСФондами
	|		ПО ОПВРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ОПВРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахНалоговСборовОтчисленийТекст+" КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо, 
	|	ДоходыЗаМесяц.Период";

	Запрос.Текст = ИсчисленныеСОТекст;	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаСОПосле2019()

// Получить данные для расчета СО с мин. ограничением на объект исчисления
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные отчисления 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей СО
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаСОПосле2020(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено)
									
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидСО", 			Справочники.НалогиСборыОтчисления.ОбязательныеСоциальныеОтчисления);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПериодРегистрации));
	
	РеквизитыНалогоплательщика = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Налогоплательщик, "ЮрФизЛицо,ИндивидуальныйПредприниматель");
	Запрос.УстановитьПараметр("парамИндивидуальныйПредприниматель", РеквизитыНалогоплательщика.ИндивидуальныйПредприниматель);

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	// ФизлицаБезСоциальногоСтрахования
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц не подлежащих социальному страхованию
	ФизлицаБезСоциальногоСтрахованияТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ФизлицаБезСоциальногоСтрахования
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонецПериодаРегистрации) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеПодлежитСоциальномуСтрахованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезСоциальногоСтрахованияТекст;
	Запрос.Выполнить();
	ФизлицаБезСоциальногоСтрахованияТекст = "ВТ_ФизлицаБезСоциальногоСтрахования";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ФизлицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонецПериодаРегистрации) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТ_ФизлицаПенсионеры";


	ПериодыТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыФизЛиц.Период КАК Период,
	|	ПериодыФизЛиц.Физлицо КАК Физлицо,
	|	ПериодыФизЛиц.ПризнакФизЛицаБезСоциальногоСтрахования,
	|	ПериодыФизЛиц.ПризнакФизЛицаПенсионера
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(СОСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СОСведенияОДоходах.ФизЛицо КАК Физлицо,
	|		ВЫБОР
	|			КОГДА НЕ ФизлицаБезСоциальногоСтрахования.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПризнакФизЛицаБезСоциальногоСтрахования,
	|		ВЫБОР
	|			КОГДА НЕ ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ПризнакФизЛицаПенсионера
	|	ИЗ
	|		РегистрНакопления.СОСведенияОДоходах КАК СОСведенияОДоходах
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО (Работники.Физлицо = СОСведенияОДоходах.ФизЛицо)
	|			ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезСоциальногоСтрахованияТекст + " КАК ФизлицаБезСоциальногоСтрахования
	//|			ПО СОСведенияОДоходах.ФизЛицо = ФизлицаБезСоциальногоСтрахования.ФизЛицо //-=-=
	//-=-=
	|			ПО ВЫБОР
	|					КОГДА СОСведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|						ТОГДА СОСведенияОДоходах.ФизЛицо.ФизЛицо 
	|					ИНАЧЕ СОСведенияОДоходах.ФизЛицо  КОНЕЦ  = ФизлицаБезСоциальногоСтрахования.ФизЛицо
	//-=-=
	|			ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	//|			ПО СОСведенияОДоходах.ФизЛицо = ФизлицаПенсионеры.ФизЛицо //-=-=
	//-=-=
	|			ПО ВЫБОР
	|					КОГДА СОСведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|						ТОГДА СОСведенияОДоходах.ФизЛицо.ФизЛицо 
	|					ИНАЧЕ СОСведенияОДоходах.ФизЛицо  КОНЕЦ = ФизлицаПенсионеры.ФизЛицо
	//-=-=
	|	ГДЕ
	|		СОСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|		И СОСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|	
	|) КАК ПериодыФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|";
		
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТ_Периоды";	
	
	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПериодыФизЛиц.Период КАК Период
		|ИЗ
		|	" + ПериодыТекст + " КАК ПериодыФизЛиц
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПериодыФизЛиц.Период КАК Период
		|ИЗ
		|	" + ПериодыТекст + " КАК ПериодыФизЛиц
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);

	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамПустаяДата", 			  Дата(1,1,1));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	
	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые отчислениями доходы за периоды по физлицам
	ДоходыТекст = "
		|ВЫБРАТЬ
		|	СООбороты.ФизЛицо КАК ФизЛицо,
		|	СООбороты.Период КАК Период,
		|	СУММА(СООбороты.СуммаДоходаОборот) КАК СуммаДоходаВсего,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) = 0 
		|				И МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) = 0 
		|			ТОГДА СУММА(СООбороты.СуммаДоходаОборотНеОблагаетсяЦеликом) - СУММА(СООбороты.СуммаВычетаОборот)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОблагаемыйДоход,
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) = 0
		|				И МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) = 0
		|			ТОГДА СУММА(СООбороты.ОблагаемаяБаза) 
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
		|	МАКСИМУМ(СООбороты.ПризнакФизЛицаБезСоциальногоСтрахования) КАК ПризнакФизЛицаБезСоциальногоСтрахования,
		|	МАКСИМУМ(СООбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера
		|
		|ПОМЕСТИТЬ ВТ_Доходы
		|ИЗ
		|	(ВЫБРАТЬ
		|		Работники.Физлицо КАК Физлицо,
		|		НАЧАЛОПЕРИОДА(Работники.Период, МЕСЯЦ) КАК Период,
		|		СУММА(ЕСТЬNULL(СОСведенияОДоходах.СуммаДоходаОборот, 0)) КАК СуммаДоходаОборот,
		|		СУММА(ЕСТЬNULL(ВЫБОР
		|							КОГДА СОСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|								ТОГДА СОСведенияОДоходах.СуммаДоходаОборот
		|							ИНАЧЕ 0
		|						КОНЕЦ, 0)) КАК СуммаДоходаОборотНеОблагаетсяЦеликом,
		|		СУММА(ЕСТЬNULL(СОСведенияОДоходах.СуммаВычетаОборот, 0)) КАК СуммаВычетаОборот,
		|		СУММА(ЕСТЬNULL(СОСведенияОДоходах.ОблагаемаяБазаОборот, 0)) КАК ОблагаемаяБаза,
		|		СУММА(ЕСТЬNULL(СОСведенияОДоходах.СуммаДоходаОборот, 0)) КАК СуммаНачислений,
		|		МАКСИМУМ(Работники.ПризнакФизЛицаБезСоциальногоСтрахования) КАК ПризнакФизЛицаБезСоциальногоСтрахования,
		|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера
		|	ИЗ
		|		" + ПериодыТекст + " КАК Работники 
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СОСведенияОДоходах.Обороты(
		|				&парамНачало,
		|				&парамКонец,
		|				МЕСЯЦ,
		|				ПериодРегистрации <= &парамКонецПериодаРегистрации
		|				И Налогоплательщик = &парамНалогоплательщик) КАК СОСведенияОДоходах
		|			ПО Работники.Физлицо = СОСведенияОДоходах.ФизЛицо 
		|				И Работники.Период = НАЧАЛОПЕРИОДА(СОСведенияОДоходах.Период, МЕСЯЦ)
		|
		|	СГРУППИРОВАТЬ ПО
		|		Работники.ФизЛицо,
		|		НАЧАЛОПЕРИОДА(Работники.Период, МЕСЯЦ)) КАК СООбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	СООбороты.Период,
		|	СООбороты.Физлицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СООбороты.ФизЛицо,
		|	СООбороты.Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТ_Доходы";
		
	// СОРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленноеОтчисление
	//
	//	Описание:
	//	Выбирает исчисленные социальные отчисления (приходы по регистру СОРасчетыСФондами)
	//  для СписокФизлиц
	СОРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	СОРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СОРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезСоциальногоСтрахования) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|			ТОГДА СУММА(СОРасчетыСФондами.Отчисление)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленноеОтчисление
	|
	|ПОМЕСТИТЬ ВТ_СОРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = СОРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	СОРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	СОРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	СОРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	СОРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	СОРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	СОРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	СОРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	СОРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	СОРасчетыСФондами.МесяцНалоговогоПериода,
	|	СОРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СОРасчетыСФондами.ФизЛицо,
	|	СОРасчетыСФондами.МесяцНалоговогоПериода";

	Запрос.Текст = СОРасчетыСФондамиТекст;
	Запрос.Выполнить();
	СОРасчетыСФондамиТекст = "ВТ_СОРасчетыСФондами";

	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  для СписокФизлиц
	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныйВзнос
	|
	|ПОМЕСТИТЬ ВТ_ОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ("+СписокФизЛицТекст+") КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо 
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	//++Аксиома 19.02.2025
	|   ВЫБОР 
	|      КОГДА ОПВРасчетыСФондами.Регистратор ССЫЛКА Документ.РасчетНалоговПриПоступленииАктивовУслуг
	|         ТОГДА ИСТИНА
	|	ИНАЧЕ ОПВРасчетыСФондами.Регистратор <> &парамРегистратор 
	|	КОНЕЦ И
	//--Аксиома 19.02.2025
	|	ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ОПВРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода";
	
	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТ_ОПВРасчетыСФондами";
	
	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления отчислений
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 7, 0) КАК ОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП
	|
	|ПОМЕСТИТЬ ВТ_РазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТ_РазмерОграниченияПоДоходам";
	
	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений с учетом приоритетов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидСО
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидСО
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений с наивысшим приоритетом
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ПустаяСсылка) КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахНалоговСборовОтчислений.Период,
	|			МИНИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахНалоговСборовОтчислений.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Приоритет = СведенияОСтавкахНалоговСборовОтчислений.Приоритет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УчетнаяПолитика.Период КАК Период,
	|	ВЫРАЗИТЬ(""ИП"" КАК СТРОКА(2)) КАК ВидДохода,
	|	ЕСТЬNULL(УчетнаяПолитика.СтавкаСОДляИП, 0) КАК Ставка
	|ИЗ 
	|РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитика
	|ГДЕ
	|	УчетнаяПолитика.Организация = &парамНалогоплательщик
	|	И УчетнаяПолитика.Период >= ДАТАВРЕМЯ(2020, 1, 1)
	|";
	
	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	
	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку СО для каждого периода исчисления отчислений
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидДохода КАК ВидДохода,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТ_СведенияОСтавкахНалоговСборовОтчислений
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			СведенияОСтавкахНалоговСборовОтчислений.ВидДохода,
	|			МАКСИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|				ПО СведенияОСтавкахНалоговСборовОтчислений.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период,
	|			СведенияОСтавкахНалоговСборовОтчислений.ВидДохода) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахНалоговСборовОтчислений.Период
	|	      	И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ВидДохода = СведенияОСтавкахНалоговСборовОтчислений.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	Запрос.Выполнить();
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "ВТ_СведенияОСтавкахНалоговСборовОтчислений";	

	ТипЗначенияСОТекст  = "ЧИСЛО(15, 3)";
	
	// Ограничение на объект исчисления 
	ПолеОграничениеНаМинОбъектИсчисления = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0)";
	
	// сумма исчисленных пенсионных взносов за период
	ПолеПенсионныеВзносы = "ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныйВзнос, 0)";

	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";

	// облагаемая база по СО
	ПолеБазаДляИсчисленияСО = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + " > 0 
	|		И " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + " < " + ПолеОграничениеНаМинОбъектИсчисления + "
	|	ТОГДА " + ПолеОграничениеНаМинОбъектИсчисления + "
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + " > 0
	|	ТОГДА " + ПолеОблагаемыйДоходЗаМесяц + " - " + ПолеПенсионныеВзносы + "
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// Ранее исчисленная облагаемая база
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// минимальное ограчение соц.отчислений по ИП на упрощенке за самого себя
	ПолеРазмерМинОграниченияСОпоИП = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0) * СведенияОСтавкахНалоговСборовОтчислений.Ставка";
	
	// сумма отчислений исчисленная
	ПолеОтчисленияИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеБазаДляИсчисленияСО +" > 0) 
	|				ТОГДА 
	|					ВЫБОР 
	|						КОГДА (" + ПолеБазаДляИсчисленияСО +" < "+ ПолеРазмерОграниченияПоДоходам + ")
	|						ТОГДА " + ПолеБазаДляИсчисленияСО +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|						ИНАЧЕ " + ПолеРазмерОграниченияПоДоходам +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|					КОНЕЦ
	|				ИНАЧЕ 0
	|				КОНЕЦ КАК " + ТипЗначенияСОТекст + "))";
	
	// сумма ранее исчисленных отчислений
	ПолеРанееОтчисленияИсчисленные = "ЕСТЬNULL(СОРасчетыСФондами.ИсчисленноеОтчисление, 0)";

	// ИсчисленныеСО
	//	Поля:
	//		Физлицо
	//		ОтчисленияИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее отчисления за месяц и производит расчет отчислений

	ИсчисленныеСОТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезСоциальногоСтрахования,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	ДоходыЗаМесяц.СуммаДоходаВсего,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеБазаДляИсчисленияСО + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеОграничениеНаМинОбъектИсчисления + " КАК МинОбъектИсчисления,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходах,
	|	" + ПолеПенсионныеВзносы + " КАК ОПВЗаМесяц,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	" + ПолеРазмерМинОграниченияСОпоИП + " КАК МинОграничениеСОпоИП,
	|	" + ПолеОтчисленияИсчисленные + " КАК СОЗаМесяц,
	|	" + ПолеРанееОтчисленияИсчисленные + " КАК РанееОтчисленияИсчисленные,
	|	" + ПолеОтчисленияИсчисленные + "-" + ПолеРанееОтчисленияИсчисленные + " КАК ОтчислениеИсчисленное
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СОРасчетыСФондамиТекст+" КАК СОРасчетыСФондами
	|		ПО СОРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И СОРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ОПВРасчетыСФондамиТекст+" КАК ОПВРасчетыСФондами
	|		ПО ОПВРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ОПВРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахНалоговСборовОтчисленийТекст+" КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И ВЫБОР 
	|				КОГДА ДоходыЗаМесяц.Физлицо = &парамИндивидуальныйПредприниматель
	|					ТОГДА СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = ""ИП""
	|				ИНАЧЕ СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ПустаяСсылка)
	|			КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо, 
	|	ДоходыЗаМесяц.Период";

	Запрос.Текст = ИсчисленныеСОТекст;	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаСОПосле2019()

// Получить данные для расчета СН.
// 
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей СН
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаСН(	Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, ГоловнаяОрганизация,
									Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено) Экспорт
									
	Если Налогоплательщик.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
	
		РезультатЗапроса = ПолучитьДанныеДляРасчетаСНИндивидуальныйПредприниматель(ПериодРегистрации, Налогоплательщик, Регистратор, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса);
	
	Иначе
	
		Если ПериодРегистрации >= '20220101' Тогда
			// расчет соц. налога по фикс. ставке
			РезультатЗапроса = ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокПосле2022(ПоследнийМесяцНалоговогоПериода, 
																	ПериодРегистрации,
																	Налогоплательщик, 
																	ГоловнаяОрганизация,
																	Регистратор, 
																	СписокФизЛицТекст, 
																	ДополнительныеПараметрыЗапроса);

		ИначеЕсли ПериодРегистрации >= '20200101' Тогда
			// расчет соц. налога по фикс. ставке
			РезультатЗапроса = ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокПосле2020(ПоследнийМесяцНалоговогоПериода, 
																	ПериодРегистрации,
																	Налогоплательщик, 
																	ГоловнаяОрганизация,
																	Регистратор, 
																	СписокФизЛицТекст, 
																	ДополнительныеПараметрыЗапроса);

		ИначеЕсли ПериодРегистрации >= '20190101' Тогда
			// расчет соц. налога по фикс. ставке
			РезультатЗапроса = ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокПосле2019(ПоследнийМесяцНалоговогоПериода, 
																	ПериодРегистрации,
																	Налогоплательщик, 
																	ГоловнаяОрганизация,
																	Регистратор, 
																	СписокФизЛицТекст, 
																	ДополнительныеПараметрыЗапроса);
		
		ИначеЕсли ПериодРегистрации >= '20090101' Тогда
			// расчет соц. налога по фикс. ставке
			РезультатЗапроса = ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокПосле2009(ПоследнийМесяцНалоговогоПериода, 
																	ПериодРегистрации,
																	Налогоплательщик, 
																	ГоловнаяОрганизация,
																	Регистратор, 
																	СписокФизЛицТекст, 
																	ДополнительныеПараметрыЗапроса);
		
		Иначе
			// расчет соц. налога по шкале
			РезультатЗапроса = ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокДо2009(ПоследнийМесяцНалоговогоПериода, 
																	ПериодРегистрации,
																	Налогоплательщик, 
																	ГоловнаяОрганизация,
																	Регистратор, 
																	СписокФизЛицТекст, 
																	ДополнительныеПараметрыЗапроса);
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат РезультатЗапроса;								
	
КонецФункции // ПолучитьДанныеДляРасчетаСН()

// Получить данные для расчета СН по регрессивной шкале
//
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей СН
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокДо2009(Знач ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик,
																ГоловнаяОрганизация,
																Регистратор, 
																СписокФизЛицТекст, 
																ДополнительныеПараметрыЗапроса = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНалогоплательщик", 		Налогоплательщик);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация",	ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 	НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамРегистратор", 			Регистратор);
	
	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	СНСведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
		|
		|ГДЕ
		|	СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|	И СНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);
		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);
		КонецЕсли;

	КонецЕсли;
	
	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
	|
	|ГДЕ
	|	СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И СНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	// массив видов ставок для исчисления СН
	МассивВидовСтавокСН = Новый Массив();
	МассивВидовСтавокСН.Добавить(Перечисления.ВидыСтавокИПНиСН.ПоИсчислениюСНДляГражданРК);
	МассивВидовСтавокСН.Добавить(Перечисления.ВидыСтавокИПНиСН.ПоИсчислениюСНДляИностранныхСпециалистов);
	
	Запрос.УстановитьПараметр("парамПриход",					   ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  				   Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 				   Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	Запрос.УстановитьПараметр("парамВнутреннееСовместительство",   Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	Запрос.УстановитьПараметр("парамПринят", 		   			   Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	Запрос.УстановитьПараметр("парамУволен", 		   			   Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("парамКонецМесяцаНалоговогоПериода", КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	   КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачалоГода",				   НачалоГода(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецГода",   				   КонецГода(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамНеОблагаетсяЦеликом",		   Справочники.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом);
	Запрос.УстановитьПараметр("парамВидыСтавокСН",				   МассивВидовСтавокСН);
	Запрос.УстановитьПараметр("парамПоИсчислениюСНДляГражданРК",   Перечисления.ВидыСтавокИПНиСН.ПоИсчислениюСНДляГражданРК);
	Запрос.УстановитьПараметр("парамПоИсчислениюСНДляИностранныхСпециалистов", Перечисления.ВидыСтавокИПНиСН.ПоИсчислениюСНДляИностранныхСпециалистов);

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	// Периоды
	// Таблица список периодов-физлиц по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.Период КАК Период,
	|	Периоды.ФизЛицо КАК Физлицо
	|
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СНСведенияОДоходах.ФизЛицо КАК Физлицо
	|	ИЗ
	|		РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО Работники.Физлицо = СНСведенияОДоходах.ФизЛицо
	|
	|	ГДЕ
	|		СНСведенияОДоходах.ПериодРегистрации >= &парамНачалоГода И
	|		СНСведенияОДоходах.ПериодРегистрации <= &парамПериодРегистрации И
	|		СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(СведенияПредыдущегоМеста.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
	|		СведенияПредыдущегоМеста.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМеста
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО Работники.Физлицо = СведенияПредыдущегоМеста.ФизЛицо
	|
	|	ГДЕ
	|		СведенияПредыдущегоМеста.МесяцНалоговогоПериода >= &парамНачалоГода И
	|		СведенияПредыдущегоМеста.МесяцНалоговогоПериода <= &парамПериодРегистрации И
	|		СведенияПредыдущегоМеста.Налогоплательщик = &парамНалогоплательщик) КАК Периоды
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.Период,
	|	Периоды.ФизЛицо";
	
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТПериоды";	
	
	// ФизлицаИностранныеСпециалисты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-иностранных специалистов
	ФизлицаИностранныеСпециалистыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаИностранныеСпециалисты
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонецГода) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.ИностранныйСпециалист)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";

	Запрос.Текст = ФизлицаИностранныеСпециалистыТекст;
	Запрос.Выполнить();
	ФизлицаИностранныеСпециалистыТекст = "ВТФизлицаИностранныеСпециалисты";	

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//
	//	Описание:
	// Выбирает облагаемые налогом доходы за весь год по физлицам из СписокФизлиц
	ДоходыТекст = 
	"ВЫБРАТЬ
	|	СНОбороты.Физлицо КАК ФизЛицо,
	|	СНОбороты.Период КАК Период,
	|	СУММА(СНОбороты.СуммаДоходаВсего) КАК СуммаДоходаВсего,
	|	СУММА(СНОбороты.СуммаНеОблагаемогоДохода) КАК СуммаНеОблагаемогоДохода,
	|	СУММА(СНОбороты.СуммаДоходаОборот) КАК СуммаДоходаОборот,
	|	СУММА(СНОбороты.СуммаВычетаОборот) КАК СуммаВычетаОборот
	|
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СНСведенияОДоходах.ФизЛицо КАК Физлицо,
	|		СУММА(СНСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|		СУММА(ВЫБОР
	|				КОГДА СНСведенияОДоходах.СпособНалогообложения = &парамНеОблагаетсяЦеликом
	|					ТОГДА СНСведенияОДоходах.СуммаДоходаОборот
	|				ИНАЧЕ СНСведенияОДоходах.СуммаВычетаОборот
	|			КОНЕЦ) КАК СуммаНеОблагаемогоДохода,
	|		СУММА(ВЫБОР
	|				КОГДА СНСведенияОДоходах.СпособНалогообложения <> &парамНеОблагаетсяЦеликом
	|					ТОГДА СНСведенияОДоходах.СуммаДоходаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаДоходаОборот,
	|		СУММА(ВЫБОР
	|				КОГДА СНСведенияОДоходах.СпособНалогообложения <> &парамНеОблагаетсяЦеликом
	|					ТОГДА СНСведенияОДоходах.СуммаВычетаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаВычетаОборот
	|	ИЗ
	|		РегистрНакопления.СНСведенияОДоходах.Обороты(
	|					&парамНачалоГода,
	|					&парамКонецМесяцаНалоговогоПериода,
	|					МЕСЯЦ,
	|					ПериодРегистрации <= &парамПериодРегистрации
	|					И Налогоплательщик = &парамНалогоплательщик) КАК СНСведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО Работники.Физлицо = СНСведенияОДоходах.ФизЛицо
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ),
	|		СНСведенияОДоходах.ФизЛицо
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(СНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
	|		СНСведенияПредыдущегоМестаРаботы.ФизЛицо,
	|		СУММА(СНСведенияПредыдущегоМестаРаботы.Доход) КАК СуммаДоходаВсего,
	|		СУММА(СНСведенияПредыдущегоМестаРаботы.Доход - СНСведенияПредыдущегоМестаРаботы.ДоходОблагаемыйСН) КАК СуммаНеОблагаемогоДохода,
	|		СУММА(СНСведенияПредыдущегоМестаРаботы.ДоходОблагаемыйСН) КАК СуммаДоходаОборот,
	|		0 КАК СуммаВычетаОборот
	|	ИЗ
	|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СНСведенияПредыдущегоМестаРаботы
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО Работники.Физлицо = СНСведенияПредыдущегоМестаРаботы.ФизЛицо
	|	
	|	ГДЕ
	|		СНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода И
	|		СНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации И
	|		СНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(СНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
	|		СНСведенияПредыдущегоМестаРаботы.ФизЛицо) КАК СНОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	СНОбороты.Физлицо,
	|	СНОбороты.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СНОбороты.Физлицо,
	|	СНОбороты.Период";

	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТДоходы";

	ТипЗначенияСНТекст = "ЧИСЛО(15, 2)";
	
	// ДоходыЗаГод 
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоходЗаГод
	//
	//	Описание:
	//	Выбирает по всем периодам с начала года сумму дохода нарастающим итогом за год
	ДоходыЗаГодТекст = "
	|ВЫБРАТЬ
	|	СНОбороты.Период КАК Период,
	|	СНОбороты.ФизЛицо КАК ФизЛицо,
	|	СУММА(СНОбороты.СуммаДоходаВсего) КАК СуммаДоходаВсего,
	|	СУММА(СНОбороты.СуммаНеОблагаемогоДохода) КАК СуммаНеОблагаемогоДохода,
	|	СУММА(СНОбороты.ОблагаемыйДоходЗаГод) КАК ОблагаемыйДоходЗаГод
	|
	|ПОМЕСТИТЬ ВТДоходыЗаГод
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период КАК Период,
	|		Периоды.Физлицо КАК ФизЛицо,
	|		СНОбороты.СуммаДоходаВсего,
	|		СНОбороты.СуммаНеОблагаемогоДохода,
	|		СНОбороты.СуммаДоходаОборот - СНОбороты.СуммаВычетаОборот КАК ОблагаемыйДоходЗаГод
	|	ИЗ
	|		" + ПериодыТекст + " КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыТекст + " КАК СНОбороты
	|			ПО Периоды.Период >= СНОбороты.Период 
	|				И СНОбороты.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) 
	|				И Периоды.Физлицо = СНОбороты.Физлицо) КАК СНОбороты
    |
	|СГРУППИРОВАТЬ ПО
	|	СНОбороты.Период,
	|	СНОбороты.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СНОбороты.Период,
	|	СНОбороты.ФизЛицо";

	Запрос.Текст = ДоходыЗаГодТекст;
	Запрос.Выполнить();
	ДоходыЗаГодТекст = "ВТДоходыЗаГод";	

	// СНИсчисленный
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныйНалог
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру СНИсчисленный и данные регистра
	//  СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
	СНИсчисленныйТекст = "
	|ВЫБРАТЬ
	|	СНИсчисленный.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СНИсчисленный.ФизЛицо КАК ФизЛицо,
	|	СУММА(СНИсчисленный.ИсчисленныйНалог) КАК ИсчисленныйНалог
	|
	|ПОМЕСТИТЬ ВТСНИсчисленный
	|ИЗ
	|	(ВЫБРАТЬ
	|		СНИсчисленный.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|		СНИсчисленный.ФизЛицо КАК ФизЛицо,
	|		СУММА(СНИсчисленный.Налог) КАК ИсчисленныйНалог
	|	ИЗ
	|		РегистрНакопления.СНИсчисленный КАК СНИсчисленный
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ("+СписокФизлицТекст+") КАК РаботникиОрганизации
	|			ПО РаботникиОрганизации.Физлицо = СНИсчисленный.ФизЛицо
	|
	|	ГДЕ
	|		СНИсчисленный.МесяцНалоговогоПериода >= &парамНачалоГода И
	|		СНИсчисленный.МесяцНалоговогоПериода <= &парамКонецМесяцаНалоговогоПериода И
	|		СНИсчисленный.Налогоплательщик = &парамНалогоплательщик И
	|		СНИсчисленный.Регистратор <> &парамРегистратор И
	|		СНИсчисленный.Период <= &парамКонецПериодаРегистрации
	|
	|	СГРУППИРОВАТЬ ПО
	|		СНИсчисленный.МесяцНалоговогоПериода,
	|		СНИсчисленный.ФизЛицо
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(СНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
	|		СНСведенияПредыдущегоМестаРаботы.ФизЛицо,
	|		СУММА(СНСведенияПредыдущегоМестаРаботы.СН)
	|	ИЗ
	|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СНСведенияПредыдущегоМестаРаботы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО Работники.Физлицо = СНСведенияПредыдущегоМестаРаботы.ФизЛицо
	|	
	|	ГДЕ
	|		СНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода И
	|		СНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации И
	|		СНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(СНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
	|		СНСведенияПредыдущегоМестаРаботы.ФизЛицо) КАК СНИсчисленный
	|
	|СГРУППИРОВАТЬ ПО
	|	СНИсчисленный.МесяцНалоговогоПериода,
	|	СНИсчисленный.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СНИсчисленный.МесяцНалоговогоПериода,
	|	СНИсчисленный.ФизЛицо";

	Запрос.Текст = СНИсчисленныйТекст;
	Запрос.Выполнить();
	СНИсчисленныйТекст = "ВТСНИсчисленный";

	// СНИсчисленныйЗаГод
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныйНалогЗаГод
	//
	//	Описание:
	//	Выбирает исчисленные налоги нарастающим итогом за год
	СНИсчисленныйЗаГодТекст = 
	"ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	СНИсчисленный.ФизЛицо КАК ФизЛицо,
	|	СУММА(СНИсчисленный.ИсчисленныйНалог) КАК ИсчисленныйНалогЗаГод
	|
	|ПОМЕСТИТЬ ВТСНИсчисленныйЗаГод
	|ИЗ
	|	" + ПериодыТекст + " КАК Периоды
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СНИсчисленныйТекст + " КАК СНИсчисленный
	|		ПО Периоды.Период >= СНИсчисленный.МесяцНалоговогоПериода 
	|			И СНИсчисленный.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
	|			И Периоды.Физлицо = СНИсчисленный.Физлицо
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	СНИсчисленный.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.Период,
	|	СНИсчисленный.ФизЛицо";
	
	Запрос.Текст = СНИсчисленныйЗаГодТекст;
	Запрос.Выполнить();
	СНИсчисленныйЗаГодТекст = "ВТСНИсчисленныйЗаГод";
	
	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  
	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныеВзносы
	|
	|ПОМЕСТИТЬ ВТОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ("+СписокФизлицТекст+") КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачалоГода И
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонецМесяцаНалоговогоПериода И
	|	ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ОПВРасчетыСФондами.ВидДвижения = &парамПриход И
	|	ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И
	|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ОПВРасчетыСФондами.ФизЛицо";
	
	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТОПВРасчетыСФондами";
	
	// ОПВРасчетыСФондамиЗаГод
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносыЗаГод
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы нарастающим итогом за год
	ОПВРасчетыСФондамиЗаГодТекст = 
	"ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ОПВРасчетыСФондами.ИсчисленныеВзносы) КАК ИсчисленныеВзносыЗаГод
	|
	|ПОМЕСТИТЬ ВТОПВРасчетыСФондамиЗаГод
	|ИЗ
	|	" + ПериодыТекст + " КАК Периоды
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ОПВРасчетыСФондамиТекст + " КАК ОПВРасчетыСФондами
	|		ПО Периоды.Период >= ОПВРасчетыСФондами.МесяцНалоговогоПериода 
	|			И ОПВРасчетыСФондами.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
	|			И Периоды.Физлицо = ОПВРасчетыСФондами.Физлицо
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.Период,
	|	ОПВРасчетыСФондами.ФизЛицо";
	
	Запрос.Текст = ОПВРасчетыСФондамиЗаГодТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиЗаГодТекст = "ВТОПВРасчетыСФондамиЗаГод";
	
	// СОРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеОтчисления
	//
	//	Описание:
	//	Выбирает исчисленные социальные отчисления (приходы по регистру СОРасчетыСФондами и 
	//  данные регистра СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
	СОРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	СОРасчеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СОРасчеты.ФизЛицо КАК ФизЛицо,
	|	СУММА(СОРасчеты.ИсчисленныеОтчисления) КАК ИсчисленныеОтчисления
	|
	|ПОМЕСТИТЬ ВТСОРасчетыСФондами
	|ИЗ
	|	(ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|		СОРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|		СУММА(СОРасчетыСФондами.Отчисление) КАК ИсчисленныеОтчисления
	|	ИЗ
	|		РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ("+СписокФизлицТекст+") КАК РаботникиОрганизации
	|			ПО РаботникиОрганизации.Физлицо = СОРасчетыСФондами.ФизЛицо
	|
	|	ГДЕ
	|		СОРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачалоГода И
	|		СОРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонецМесяцаНалоговогоПериода И
	|		СОРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|		СОРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|		СОРасчетыСФондами.ВидДвижения = &парамПриход И
	|		СОРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И
	|		СОРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|	СГРУППИРОВАТЬ ПО
	|		СОРасчетыСФондами.МесяцНалоговогоПериода,
	|		СОРасчетыСФондами.ФизЛицо
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(CНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
	|		CНСведенияПредыдущегоМестаРаботы.ФизЛицо,
	|		СУММА(CНСведенияПредыдущегоМестаРаботы.СО)
	|	ИЗ
	|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК CНСведенияПредыдущегоМестаРаботы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|			ПО Работники.Физлицо = CНСведенияПредыдущегоМестаРаботы.ФизЛицо
	|	
	|	ГДЕ
	|		CНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода И
	|		CНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации И
	|		CНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(CНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
	|		CНСведенияПредыдущегоМестаРаботы.ФизЛицо) КАК СОРасчеты
	|
	|СГРУППИРОВАТЬ ПО
	|	СОРасчеты.МесяцНалоговогоПериода,
	|	СОРасчеты.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СОРасчеты.МесяцНалоговогоПериода,
	|	СОРасчеты.ФизЛицо";

	Запрос.Текст = СОРасчетыСФондамиТекст;
	Запрос.Выполнить();
	СОРасчетыСФондамиТекст = "ВТСОРасчетыСФондами";

	// СОРасчетыСФондамиЗаГод
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеОтчисленияЗаГод
	//
	//	Описание:
	//	Выбирает исчисленные социальные отчисления нарастающим итогом за год
	СОРасчетыСФондамиЗаГодТекст = 
	"ВЫБРАТЬ
	|	Периоды.Период КАК Период,
	|	СОРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(СОРасчетыСФондами.ИсчисленныеОтчисления) КАК ИсчисленныеОтчисленияЗаГод
	|
	|ПОМЕСТИТЬ ВТСОРасчетыСФондамиЗаГод
	|ИЗ
	|	" + ПериодыТекст + " КАК Периоды
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СОРасчетыСФондамиТекст + " КАК СОРасчетыСФондами
	|		ПО Периоды.Период >= СОРасчетыСФондами.МесяцНалоговогоПериода 
	|			И СОРасчетыСФондами.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
	|			И Периоды.Физлицо = СОРасчетыСФондами.Физлицо
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.Период,
	|	СОРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.Период,
	|	СОРасчетыСФондами.ФизЛицо";

	Запрос.Текст = СОРасчетыСФондамиЗаГодТекст;
	Запрос.Выполнить();
	СОРасчетыСФондамиЗаГодТекст = "ВТСОРасчетыСФондамиЗаГод";

	// ПериодыНачалаНалоговогоГодаФизЛиц
	//	Поля:
	//		Физлицо
	//		Период
	//		МесяцНачалаНалоговогоГода
	//
	//	Описание:
	//	Получает по всем периодам месяц начала налогового года для физлиц
	ПериодыНачалаНалоговогоГодаФизЛицТекст = 
	"ВЫБРАТЬ
	|	Периоды.ФизЛицо,
	|	Периоды.Период,
	|	МИНИМУМ(ПериодыНачалаНалоговогоГода.НачалоНалоговогоГода) КАК МесяцНачалаНалоговогоГода
	|
	|ПОМЕСТИТЬ ВТПериодыНачалаНалоговогоГодаФизЛиц
	|ИЗ
	|	" + ПериодыТекст + " КАК Периоды
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				МИНИМУМ(СведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода) КАК НачалоНалоговогоГода,
	|				НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, ГОД) КАК НачалоКалендарногоГода,
	|				СведенияПредыдущегоМестаРаботы.ФизЛицо КАК ФизЛицо
	|			ИЗ
	|				РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботы
	|			ГДЕ
	|				СведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик 
	|				И СведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
	|				И СведенияПредыдущегоМестаРаботы.Физлицо В (" + СписокФизлицТекст + ")
	|
	|			СГРУППИРОВАТЬ ПО
	|				НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, ГОД),
	|				СведенияПредыдущегоМестаРаботы.ФизЛицо
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|
	|			ВЫБРАТЬ
	|				МАКСИМУМ(РаботникиОрганизацийСрезПоследних.Период) КАК НачалоНалоговогоГода,
	|				&парамНачалоГода КАК НачалоКалендарногоГода,
	|				РаботникиОрганизацийСрезПоследних.Сотрудник.ФизЛицо КАК ФизЛицо
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|						&парамНачалоГода,
	|						Организация = &парамГоловнаяОрганизация
	|						И Сотрудник.ФизЛицо В (" + СписокФизлицТекст + ")) КАК РаботникиОрганизацийСрезПоследних
	|			ГДЕ
	|				РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния <> &парамУволен
	|				И РаботникиОрганизацийСрезПоследних.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
	|
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиОрганизацийСрезПоследних.Сотрудник.ФизЛицо
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|
	|			ВЫБРАТЬ
	|				МИНИМУМ(РаботникиОрганизаций.Период) КАК НачалоНалоговогоГода,
	|				НАЧАЛОПЕРИОДА(РаботникиОрганизаций.Период, ГОД) КАК НачалоКалендарногоГода,
	|				РаботникиОрганизаций.Сотрудник.ФизЛицо КАК ФизЛицо
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|			ГДЕ
	|				РаботникиОрганизаций.Сотрудник.ФизЛицо В (" + СписокФизлицТекст + ")
	|				И РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация
	|				И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
	|				И РаботникиОрганизаций.Период МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
	|				И РаботникиОрганизаций.ПричинаИзмененияСостояния = &парамПринят
	|
	|			СГРУППИРОВАТЬ ПО
	|				НАЧАЛОПЕРИОДА(РаботникиОрганизаций.Период, ГОД),
	|				РаботникиОрганизаций.Сотрудник.ФизЛицо
	|				
	|	) КАК ПериодыНачалаНалоговогоГода
	|		ПО Периоды.ФизЛицо = ПериодыНачалаНалоговогоГода.ФизЛицо
	|			И Периоды.Период МЕЖДУ ПериодыНачалаНалоговогоГода.НачалоКалендарногоГода И КОНЕЦПЕРИОДА(ПериодыНачалаНалоговогоГода.НачалоКалендарногоГода, ГОД)
	|			 И Периоды.Период >= НАЧАЛОПЕРИОДА(ПериодыНачалаНалоговогоГода.НачалоНалоговогоГода, МЕСЯЦ)
	|
	|
	|СГРУППИРОВАТЬ ПО
	|	Периоды.ФизЛицо,
	|	Периоды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.ФизЛицо,
	|	Периоды.Период
	|";
	
	Запрос.Текст = ПериодыНачалаНалоговогоГодаФизЛицТекст;
	Запрос.Выполнить();
	ПериодыНачалаНалоговогоГодаФизЛицТекст = "ВТПериодыНачалаНалоговогоГодаФизЛиц";

	ТипЗначенияКоэффициентаПересчетаТекст = "ЧИСЛО(10, 2)";
	
	// ПрименяемыйКоэффициентПересчета
	//	Поля:
	//		Физлицо
	//		Период
	//		КоэффициентПересчета
	//
	//	Описание:
	//	Получает применяемый коэффициент пересчета по периодам
	ПрименяемыйКоэффициентПересчетаТекст = 
	"ВЫБРАТЬ
	|	Периоды.Период,
	|	Периоды.ФизЛицо,
	|	Периоды.МесяцНачалаНалоговогоГода,
	|	ВЫБОР 
	|		КОГДА Периоды.МесяцНачалаНалоговогоГода ЕСТЬ NULL 
	|			ТОГДА 1 
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА (НЕ(РаботникиОрганизаций.Сотрудник ЕСТЬ NULL)
	|							И РаботникиОрганизаций.ПричинаИзмененияСостояния <> &парамУволен)
	|						ИЛИ Периоды.Период < ДАТАВРЕМЯ(2007, 1, 1)
	|					ТОГДА ВЫБОР 
	|							КОГДА Периоды.МесяцНачалаНалоговогоГода <= НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) 
	|								ТОГДА 12 / МЕСЯЦ(Периоды.Период) 
	|							ИНАЧЕ (13 - МЕСЯЦ(Периоды.МесяцНачалаНалоговогоГода)) / (МЕСЯЦ(Периоды.Период) - МЕСЯЦ(Периоды.МесяцНачалаНалоговогоГода) + 1) 
	|						  КОНЕЦ 
	|				ИНАЧЕ 1 
	|			  КОНЕЦ 
	|	КОНЕЦ КАК КоэффициентПересчета,
	|	РаботникиОрганизаций.ПричинаИзмененияСостояния,
	|	РаботникиОрганизаций.Период КАК ДатаПоследнегоДвижения
	|
	|ПОМЕСТИТЬ ВТПрименяемыйКоэффициентПересчета
	|ИЗ
	|	" + ПериодыНачалаНалоговогоГодаФизЛицТекст + " КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				Периоды.Период,
	|				Периоды.ФизЛицо,
	|				МАКСИМУМ(ВЫБОР
	|							КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = &парамУволен 
	|								ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1)
	|							ИНАЧЕ РаботникиОрганизаций.Период
	|						 КОНЕЦ) КАК ДатаПоследнегоДвижения
	|       	ИЗ 
	|				" + ПериодыТекст + " КАК Периоды
	|
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|					ПО РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация
	|						И Периоды.ФизЛицо = РаботникиОрганизаций.Сотрудник.ФизЛицо
	|						И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
	|						И ВЫБОР
	|							КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = &парамУволен 
	|								ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1)
	|							ИНАЧЕ РаботникиОрганизаций.Период
	|						  КОНЕЦ <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|
	|			СГРУППИРОВАТЬ ПО
	|				Периоды.Период,
	|				Периоды.ФизЛицо) КАК ДатыПоследнихДвижений
	|		ПО Периоды.ФизЛицо = ДатыПоследнихДвижений.ФизЛицо
	|			И Периоды.Период = ДатыПоследнихДвижений.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ПО ДатыПоследнихДвижений.ФизЛицо = РаботникиОрганизаций.Сотрудник.ФизЛицо
	|			И РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация
	|			И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
	|			И ДатыПоследнихДвижений.ДатаПоследнегоДвижения = ВЫБОР
	|																КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = &парамУволен
	|																	ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1)
	|																ИНАЧЕ РаботникиОрганизаций.Период
	|			 								 				 КОНЕЦ 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.Период,
	|	Периоды.ФизЛицо
	|";
	
	Запрос.Текст = ПрименяемыйКоэффициентПересчетаТекст;
	Запрос.Выполнить();
	ПрименяемыйКоэффициентПересчетаТекст = "ВТПрименяемыйКоэффициентПересчета";
	
	// облагаемый доход с начала года
	ПолеОблагаемыйДоходЗаГод = "ЕСТЬNULL(ДоходыЗаГод.ОблагаемыйДоходЗаГод, 0)";
	
	// сумма исчисленных пенсионных взносов за год
	ПолеПенсионныеВзносыЗаГод = "ЕСТЬNULL(ОПВРасчетыСФондамиЗаГод.ИсчисленныеВзносыЗаГод, 0)";
	
	// сумма исчисленных социальных отчислений за год
	ПолеСоциальныеОтчисленияЗаГод = "ЕСТЬNULL(СОРасчетыСФондамиЗаГод.ИсчисленныеОтчисленияЗаГод, 0)";
	
	// облагаемая база по СН
	ПолеБазаДляИсчисленияСН = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаГод + " - " + ПолеПенсионныеВзносыЗаГод + " > 0
	|	ТОГДА " + ПолеОблагаемыйДоходЗаГод + " - " + ПолеПенсионныеВзносыЗаГод + "
	|	ИНАЧЕ 0
	|КОНЕЦ";
	
	// сумма ранее исчисленного налога
	ПолеРанееНалогИсчисленный = "ЕСТЬNULL(СНИсчисленныйЗаГод.ИсчисленныйНалогЗаГод, 0)";
	
	// коэффициент пересчета
	ПолеКоэффициентПересчета = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (ПрименяемыйКоэффициентПересчета.КоэффициентПересчета) ЕСТЬ NULL 
	|				ТОГДА 1 
	|				ИНАЧЕ ПрименяемыйКоэффициентПересчета.КоэффициентПересчета 
	|			КОНЕЦ КАК " + ТипЗначенияКоэффициентаПересчетаТекст + "))";
	
	// БазаДляИсчисленияСН
	//	Поля:
	//		Период
	//		ФизЛицо
	//		ШкалаСтавокСН
	//      ОблагаемаяСумма
	//
	//	Описание:
	//	Получает облагаемую базу для исчисления СН с учетом коэффициента пересчета
	БазаДляИсчисленияСНТекст = 
	"ВЫБРАТЬ 
	|	ДоходыЗаГод.Период,
	|	ДоходыЗаГод.ФизЛицо,
	|	ДоходыЗаГод.СуммаДоходаВсего,
	|	ДоходыЗаГод.СуммаНеОблагаемогоДохода,
	|	" + ПолеПенсионныеВзносыЗаГод + " ОПВЗаГод,
	|	ВЫБОР
	|		КОГДА ИностранныеСпециалисты.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПризнакИностранногоСпециалиста,
	|	" + ПолеКоэффициентПересчета + " КАК КоэффициентПересчета,
	|	ПрименяемыйКоэффициентПересчета.МесяцНачалаНалоговогоГода,
	|	ВЫБОР 
	|		КОГДА ИностранныеСпециалисты.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА &парамПоИсчислениюСНДляГражданРК 
	|		ИНАЧЕ &парамПоИсчислениюСНДляИностранныхСпециалистов 
	|	КОНЕЦ КАК ШкалаСтавокСН,
	|	" + ПолеБазаДляИсчисленияСН + " * " + ПолеКоэффициентПересчета + " КАК ОблагаемаяСумма
	|
	|ПОМЕСТИТЬ ВТБазаДляИсчисленияСН
	|ИЗ
	|	" + ДоходыЗаГодТекст + " КАК ДоходыЗаГод
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОПВРасчетыСФондамиЗаГодТекст + " КАК ОПВРасчетыСФондамиЗаГод
	|		ПО ДоходыЗаГод.Период = ОПВРасчетыСФондамиЗаГод.Период 
	|			И ДоходыЗаГод.ФизЛицо = ОПВРасчетыСФондамиЗаГод.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыйКоэффициентПересчетаТекст + " КАК ПрименяемыйКоэффициентПересчета
	|		ПО ДоходыЗаГод.Период = ПрименяемыйКоэффициентПересчета.Период 
	|			И ДоходыЗаГод.ФизЛицо = ПрименяемыйКоэффициентПересчета.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаИностранныеСпециалистыТекст + " КАК ИностранныеСпециалисты
	|		ПО ДоходыЗаГод.ФизЛицо = ИностранныеСпециалисты.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДоходыЗаГод.Период,
	|	ДоходыЗаГод.ФизЛицо";
	
	Запрос.Текст = БазаДляИсчисленияСНТекст;
	Запрос.Выполнить();
	БазаДляИсчисленияСНТекст = "ВТБазаДляИсчисленияСН";
	
	// ШкалаСтавокСНПоПериодам
	//	Поля:
	//		Период
	//		ШкалаСтавокСН
	//		СуммаДоходаС
	//      СуммаДоходаПо
	//      Ставка
	//      СуммаНалогаПредыдущегоПредела
	//
	//	Описание:
	//	Выбирает по всем периодам года шкалы ставок для исчисления СН
	ШкалаСтавокСНПоПериодамТекст = 
	"ВЫБРАТЬ
	|	СНШкалаСтавокСрезПоследних.Период,
	|	СведенияОСтавкахИПНиСН.ВидСтавокИПНиСН КАК ШкалаСтавокСН,
	|	СведенияОСтавкахИПНиСН.СуммаДоходаС,
	|	СведенияОСтавкахИПНиСН.СуммаДоходаПо,
	|	СведенияОСтавкахИПНиСН.Ставка,
	|	СведенияОСтавкахИПНиСН.СуммаНалогаПредыдущегоПредела
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(СтавкиСН.Период) КАК ПериодСреза,
	|		Периоды.Период КАК Период
	|	ИЗ
	|		" + ПериодыТекст + " КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахИПНиСН КАК СтавкиСН
	|			ПО СтавкиСН.Период <= Периоды.Период 
	|				И СтавкиСН.ВидСтавокИПНиСН В (&парамВидыСтавокСН)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК СНШкалаСтавокСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахИПНиСН КАК СведенияОСтавкахИПНиСН
	|		ПО СведенияОСтавкахИПНиСН.Период = СНШкалаСтавокСрезПоследних.ПериодСреза 
	|			И СведенияОСтавкахИПНиСН.ВидСтавокИПНиСН В (&парамВидыСтавокСН)";

	Запрос.Текст = ШкалаСтавокСНПоПериодамТекст;

	// ИсчисленныйСН	
	//	Поля:
	//		Физлицо
	//		Период
	//		НалогИсчисленный
	//	
	//	Описание:
	//	Выбирает доход нарастающим итогом, исчисленный налог нарастающим итогом и производит расчет налога
	ИсчисленныйСНТекст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БазаДляИсчисленияСН.ФизЛицо,
	|	БазаДляИсчисленияСН.Период,
	|	БазаДляИсчисленияСН.СуммаДоходаВсего,
	|	БазаДляИсчисленияСН.СуммаНеОблагаемогоДохода,
	|	БазаДляИсчисленияСН.ОПВЗаГод,
	|	БазаДляИсчисленияСН.ПризнакИностранногоСпециалиста,
	|   БазаДляИсчисленияСН.КоэффициентПересчета,
	|	БазаДляИсчисленияСН.ОблагаемаяСумма,
	|	БазаДляИсчисленияСН.МесяцНачалаНалоговогоГода,
	|	ЕСТЬNULL(СтавкиСН.СуммаНалогаПредыдущегоПредела, 0) КАК СуммаНалогаПредыдущегоПредела,
	|	ЕСТЬNULL(СтавкиСН.СуммаДоходаС, 0) КАК СуммаДоходаС,
	|	ЕСТЬNULL(СтавкиСН.СуммаДоходаПо, 0) КАК СуммаДоходаПо,
	|	ЕСТЬNULL(СтавкиСН.Ставка, 0) КАК ПроцентСтавки,
	|	БазаДляИсчисленияСН.ШкалаСтавокСН,
	|	" + ПолеРанееНалогИсчисленный + " КАК РанееНалогИсчисленный,
	|	" + ПолеСоциальныеОтчисленияЗаГод + " КАК СОЗаГод,
	|	ВЫРАЗИТЬ((ЕСТЬNULL(СтавкиСН.СуммаНалогаПредыдущегоПредела, 0) + (БазаДляИсчисленияСН.ОблагаемаяСумма - ЕСТЬNULL(СтавкиСН.СуммаДоходаС, 0)) * ЕСТЬNULL(СтавкиСН.Ставка, 0) / 100) КАК " + ТипЗначенияСНТекст + ") КАК СНЗаГод,
	|	ВЫРАЗИТЬ((ЕСТЬNULL(СтавкиСН.СуммаНалогаПредыдущегоПредела, 0) + (БазаДляИсчисленияСН.ОблагаемаяСумма - ЕСТЬNULL(СтавкиСН.СуммаДоходаС, 0)) * ЕСТЬNULL(СтавкиСН.Ставка, 0) / 100) / БазаДляИсчисленияСН.КоэффициентПересчета КАК " + ТипЗначенияСНТекст + ") - " + ПолеРанееНалогИсчисленный + " - " + ПолеСоциальныеОтчисленияЗаГод + " КАК НалогИсчисленный
	|ИЗ
	|	" + БазаДляИсчисленияСНТекст + " КАК БазаДляИсчисленияСН
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ШкалаСтавокСНПоПериодамТекст + ") КАК СтавкиСН
	|		ПО БазаДляИсчисленияСН.Период = СтавкиСН.Период 
	|			И БазаДляИсчисленияСН.ОблагаемаяСумма > СтавкиСН.СуммаДоходаС 
	|			И БазаДляИсчисленияСН.ОблагаемаяСумма <= СтавкиСН.СуммаДоходаПо 
	|			И БазаДляИсчисленияСН.ШкалаСтавокСН = СтавкиСН.ШкалаСтавокСН
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + СНИсчисленныйЗаГодТекст + " КАК СНИсчисленныйЗаГод
	|		ПО БазаДляИсчисленияСН.Период = СНИсчисленныйЗаГод.Период 
	|			И БазаДляИсчисленияСН.ФизЛицо = СНИсчисленныйЗаГод.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + СОРасчетыСФондамиЗаГодТекст + " КАК СОРасчетыСФондамиЗаГод
	|		ПО БазаДляИсчисленияСН.Период = СОРасчетыСФондамиЗаГод.Период 
	|			И БазаДляИсчисленияСН.ФизЛицо = СОРасчетыСФондамиЗаГод.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	БазаДляИсчисленияСН.ФизЛицо, 
	|	БазаДляИсчисленияСН.Период
	|";
	
	Запрос.Текст = ИсчисленныйСНТекст;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокДо2009()

// Получить данные для расчета СН по фиксированной ставке
//
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей СН
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокПосле2009(Знач ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик,
																ГоловнаяОрганизация,
																Регистратор, 
																СписокФизЛицТекст, 
																ДополнительныеПараметрыЗапроса = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНалогоплательщик", 		Налогоплательщик);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 	НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамРегистратор", 			Регистратор);
	
	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	СНСведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
		|
		|ГДЕ
		|	СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|	И СНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);
		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);
		КонецЕсли;

	КонецЕсли;
	
	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
	|
	|ГДЕ
	|	СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И СНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	   КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачало",				   	   Макс(НачалоМесяца(ПервыйМесяцНалоговогоПериода), '20090101'));
	Запрос.УстановитьПараметр("парамКонец",   				   	   Макс(КонецМесяца(ПоследнийМесяцНалоговогоПериода), '20090131235959'));

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛицо
	| 
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
	
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";
	
	// Периоды
	// Таблица список периодов, по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыГодаТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|   СНСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ПериодыГода
	|ИЗ
	|	РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК Работники
	|			ПО Работники.Физлицо = СНСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	СНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ)";
	
	Запрос.Текст = ПериодыГодаТекст;
	Запрос.Выполнить();
	ПериодыГодаТекст = "ВТ_ПериодыГода";	
	
	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//
	//	Описание:
	// Выбирает облагаемые налогом доходы за весь год по физлицам из СписокФизлиц
	ДоходыТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	СНСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	СУММА(СНСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	СУММА(ВЫБОР
	|			КОГДА СНСведенияОДоходах.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА СНСведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ СНСведенияОДоходах.СуммаВычетаОборот
	|		КОНЕЦ) КАК СуммаНеОблагаемогоДохода,
	|	СУММА(ВЫБОР
	|			КОГДА СНСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА СНСведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	СУММА(ВЫБОР
	|			КОГДА СНСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА СНСведенияОДоходах.СуммаВычетаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВычетаОборот,
	|	СУММА(СНСведенияОДоходах.ОблагаемаяБазаОборот) КАК ИсчисленнаяОблагаемаяБаза
	|
	|ПОМЕСТИТЬ ВТ_Доходы
	|ИЗ
	|	РегистрНакопления.СНСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					ПериодРегистрации <= &парамПериодРегистрации
	|					И Налогоплательщик = &парамНалогоплательщик
	|					И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СНСведенияОДоходах
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыГодаТекст+" КАК Периоды
	|		ПО (Периоды.Период = НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ))
	|			И (Периоды.ФизЛицо = СНСведенияОДоходах.ФизЛицо)
	|	
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ),
	|	СНСведенияОДоходах.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СНСведенияОДоходах.Физлицо,
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ)";

	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТ_Доходы";

	// СНИсчисленный
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныйНалог
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру СНИсчисленный и данные регистра
	//  СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
	СНИсчисленныйТекст = "
	|ВЫБРАТЬ
	|	СНИсчисленный.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СНИсчисленный.ФизЛицо КАК ФизЛицо,
	|	СУММА(СНИсчисленный.Налог) КАК ИсчисленныйНалог
	|
	|ПОМЕСТИТЬ ВТ_СНИсчисленный
	|ИЗ
	|	РегистрНакопления.СНИсчисленный КАК СНИсчисленный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|			ПО РаботникиОрганизации.Физлицо = СНИсчисленный.ФизЛицо
	|
	|ГДЕ
	|	СНИсчисленный.МесяцНалоговогоПериода >= &парамНачало И
	|	СНИсчисленный.МесяцНалоговогоПериода <= &парамКонец И
	|	СНИсчисленный.Налогоплательщик = &парамНалогоплательщик И
	|	СНИсчисленный.Регистратор <> &парамРегистратор И
	|	СНИсчисленный.Период <= &парамКонецПериодаРегистрации
	|
	|СГРУППИРОВАТЬ ПО
	|	СНИсчисленный.МесяцНалоговогоПериода,
	|	СНИсчисленный.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СНИсчисленный.ФизЛицо,
	|	СНИсчисленный.МесяцНалоговогоПериода";

	Запрос.Текст = СНИсчисленныйТекст;
	Запрос.Выполнить();
	СНИсчисленныйТекст = "ВТ_СНИсчисленный";

	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  
	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныеВзносы
	|
	|ПОМЕСТИТЬ ВТ_ОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало
	|	И ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец
	|	И ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик
	|	И ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации
	|	И ОПВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ОПВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ОПВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";
	
	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТ_ОПВРасчетыСФондами";
	
	// СОРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеОтчисления
	//
	//	Описание:
	//	Выбирает исчисленные социальные отчисления (приходы по регистру СОРасчетыСФондами и 
	//  данные регистра СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
	СОРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	СОРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(СОРасчетыСФондами.Отчисление) КАК ИсчисленныеОтчисления
	|
	|ПОМЕСТИТЬ ВТ_СОРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|			ПО РаботникиОрганизации.Физлицо = СОРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	СОРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало
	|	И СОРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец
	|	И СОРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик
	|	И СОРасчетыСФондами.Период <= &парамКонецПериодаРегистрации
	|	И СОРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И СОРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И СОРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	СОРасчетыСФондами.МесяцНалоговогоПериода,
	|	СОРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СОРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";

	Запрос.Текст = СОРасчетыСФондамиТекст;
	Запрос.Выполнить();
	СОРасчетыСФондамиТекст = "ВТ_СОРасчетыСФондами";

	// определим учетную политику и размеры регламентированных показателей за каждый из месяцев
	РасчетныеПоказателиТекст = "
	|ВЫБРАТЬ
	|	Периоды.Период,
	|	ЕСТЬNULL(УчетнаяПолитика.ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога, ЛОЖЬ) КАК ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗПДляЦелейНалогообложения, 0) КАК РазмерМЗП
	|	
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказатели
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодУчетнойПолитики,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодРасчетныхПоказателей
	|	ИЗ
	|		" + ПериодыГодаТекст + " КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитика
	|			ПО УчетнаяПолитика.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|				И УчетнаяПолитика.Организация = &парамНалогоплательщик
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО РасчетныеПоказатели.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитика
	|		ПО Периоды.ПериодУчетнойПолитики = УчетнаяПолитика.Период
	|			И УчетнаяПолитика.Организация = &парамНалогоплательщик
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО Периоды.ПериодРасчетныхПоказателей = РасчетныеПоказатели.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.Период
	|";

	Запрос.Текст = РасчетныеПоказателиТекст;
	Запрос.Выполнить();
	РасчетныеПоказателиТекст = "ВТ_РасчетныеПоказатели";

	// Основной текст запроса
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Доходы.ФизЛицо,
	|	Доходы.Период,
	|	Доходы.СуммаДоходаВсего,
	|	Доходы.СуммаНеОблагаемогоДохода,
	|	Доходы.СуммаДоходаОборот - Доходы.СуммаВычетаОборот КАК ОблагаемыйДоход,
	|	Доходы.ИсчисленнаяОблагаемаяБаза КАК РанееИсчисленнаяОблагаемаяБаза,
	|
	|	ЕСТЬNULL(СНИсчисленный.ИсчисленныйНалог, 0) КАК РанееИсчисленныйНалог,
	|
	|	ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныеВзносы, 0) КАК ИсчисленныеВзносы,
	|
	|	ЕСТЬNULL(СОРасчетыСФондами.ИсчисленныеОтчисления, 0) КАК ИсчисленныеОтчисления,
	|
	|	ЕСТЬNULL(РасчетныеПоказатели.ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога, ЛОЖЬ) КАК ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога,
	|
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП
	|
	|ИЗ
	|	" + ДоходыТекст + " КАК Доходы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + СНИсчисленныйТекст + " КАК СНИсчисленный
	|		ПО Доходы.ФизЛицо = СНИсчисленный.ФизЛицо
	|			И Доходы.Период = СНИсчисленный.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОПВРасчетыСФондамиТекст + " КАК ОПВРасчетыСФондами
	|		ПО Доходы.ФизЛицо = ОПВРасчетыСФондами.ФизЛицо
	|			И Доходы.Период = ОПВРасчетыСФондами.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + СОРасчетыСФондамиТекст + " КАК СОРасчетыСФондами
	|		ПО Доходы.ФизЛицо = СОРасчетыСФондами.ФизЛицо
	|			И Доходы.Период = СОРасчетыСФондами.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
	|		ПО Доходы.Период = РасчетныеПоказатели.Период
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Доходы.ФизЛицо, 
	|	Доходы.Период
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокПосле2009()

// Получить данные для расчета СН по фиксированной ставке
//
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей СН
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокПосле2019(Знач ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик,
																ГоловнаяОрганизация,
																Регистратор, 
																СписокФизЛицТекст, 
																ДополнительныеПараметрыЗапроса = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНалогоплательщик", 		Налогоплательщик);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 	НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамРегистратор", 			Регистратор);
	
	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	СНСведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
		|
		|ГДЕ
		|	СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|	И СНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);
		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);
		КонецЕсли;

	КонецЕсли;
	
	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
	|
	|ГДЕ
	|	СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И СНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	   КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачало",				   	   Макс(НачалоМесяца(ПервыйМесяцНалоговогоПериода), '20090101'));
	Запрос.УстановитьПараметр("парамКонец",   				   	   Макс(КонецМесяца(ПоследнийМесяцНалоговогоПериода), '20090131235959'));

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛицо
	| 
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
	
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";
		
	// Периоды
	// Таблица список периодов, по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыГодаТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|   СНСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ПериодыГода
	|ИЗ
	|	РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК Работники
	|			ПО Работники.Физлицо = СНСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	СНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ),
	|	СНСведенияОДоходах.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|";
	
	Запрос.Текст = ПериодыГодаТекст;
	Запрос.Выполнить();
	ПериодыГодаТекст = "ВТ_ПериодыГода";	
	
	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//
	//	Описание:
	// Выбирает облагаемые налогом доходы за весь год по физлицам из СписокФизлиц
	ДоходыТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	СНСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	СУММА(СНСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	СУММА(ВЫБОР
	|			КОГДА СНСведенияОДоходах.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА СНСведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ СНСведенияОДоходах.СуммаВычетаОборот
	|		КОНЕЦ) КАК СуммаНеОблагаемогоДохода,
	|	СУММА(ВЫБОР
	|			КОГДА СНСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА СНСведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	СУММА(ВЫБОР
	|			КОГДА СНСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА СНСведенияОДоходах.СуммаВычетаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВычетаОборот,
	|	СУММА(СНСведенияОДоходах.ОблагаемаяБазаОборот) КАК ИсчисленнаяОблагаемаяБаза
	|
	|ПОМЕСТИТЬ ВТ_Доходы
	|ИЗ
	|	РегистрНакопления.СНСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					ПериодРегистрации <= &парамПериодРегистрации
	|					И Налогоплательщик = &парамНалогоплательщик
	|					И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СНСведенияОДоходах
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыГодаТекст+" КАК Периоды
	|		ПО (Периоды.Период = НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ))
	|			И (Периоды.ФизЛицо = СНСведенияОДоходах.ФизЛицо)
	|	
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ),
	|	СНСведенияОДоходах.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СНСведенияОДоходах.Физлицо,
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ)";

	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТ_Доходы";

	// СНИсчисленный
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныйНалог
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру СНИсчисленный и данные регистра
	//  СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
	СНИсчисленныйТекст = "
	|ВЫБРАТЬ
	|	СНИсчисленный.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СНИсчисленный.ФизЛицо КАК ФизЛицо,
	|	СУММА(СНИсчисленный.Налог) КАК ИсчисленныйНалог
	|
	|ПОМЕСТИТЬ ВТ_СНИсчисленный
	|ИЗ
	|	РегистрНакопления.СНИсчисленный КАК СНИсчисленный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|			ПО РаботникиОрганизации.Физлицо = СНИсчисленный.ФизЛицо
	|
	|ГДЕ
	|	СНИсчисленный.МесяцНалоговогоПериода >= &парамНачало И
	|	СНИсчисленный.МесяцНалоговогоПериода <= &парамКонец И
	|	СНИсчисленный.Налогоплательщик = &парамНалогоплательщик И
	|	СНИсчисленный.Регистратор <> &парамРегистратор И
	|	СНИсчисленный.Период <= &парамКонецПериодаРегистрации
	|
	|СГРУППИРОВАТЬ ПО
	|	СНИсчисленный.МесяцНалоговогоПериода,
	|	СНИсчисленный.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СНИсчисленный.ФизЛицо,
	|	СНИсчисленный.МесяцНалоговогоПериода";

	Запрос.Текст = СНИсчисленныйТекст;
	Запрос.Выполнить();
	СНИсчисленныйТекст = "ВТ_СНИсчисленный";

	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  
	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныеВзносы
	|
	|ПОМЕСТИТЬ ВТ_ОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало
	|	И ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец
	|	И ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик
	|	И ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации
	|	И ОПВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ОПВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ОПВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";
	
	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТ_ОПВРасчетыСФондами";
	
	// ИПНРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		КорректировкаДохода
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  
	ИПНСведенияОДоходах = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СУММА(ИПНСведенияОДоходах.ПримененнаяЛьготаОборот) КАК КорректировкаДохода
	|
	|ПОМЕСТИТЬ ВТ_ИПНСведенияОДоходах
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					Налогоплательщик = &парамНалогоплательщик
	|					И ПериодРегистрации <= &парамКонецПериодаРегистрации) КАК ИПНСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ИПНСведенияОДоходах.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ПериодРегистрации,
	|	ИПНСведенияОДоходах.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ)";
	
	Запрос.Текст = ИПНСведенияОДоходах;
	Запрос.Выполнить();
	ИПНСведенияОДоходах = "ВТ_ИПНСведенияОДоходах";

	// СОРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеОтчисления
	//
	//	Описание:
	//	Выбирает исчисленные социальные отчисления (приходы по регистру СОРасчетыСФондами и 
	//  данные регистра СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
	СОРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	СОРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(СОРасчетыСФондами.Отчисление) КАК ИсчисленныеОтчисления
	|
	|ПОМЕСТИТЬ ВТ_СОРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|			ПО РаботникиОрганизации.Физлицо = СОРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	СОРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало
	|	И СОРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец
	|	И СОРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик
	|	И СОРасчетыСФондами.Период <= &парамКонецПериодаРегистрации
	|	И СОРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И СОРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И СОРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	СОРасчетыСФондами.МесяцНалоговогоПериода,
	|	СОРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СОРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";

	Запрос.Текст = СОРасчетыСФондамиТекст;
	Запрос.Выполнить();
	СОРасчетыСФондамиТекст = "ВТ_СОРасчетыСФондами";

	// определим учетную политику и размеры регламентированных показателей за каждый из месяцев
	РасчетныеПоказателиТекст = "
	|ВЫБРАТЬ
	|	Периоды.Период,
	|	ЕСТЬNULL(УчетнаяПолитика.ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога, ЛОЖЬ) КАК ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗПДляЦелейНалогообложения, 0) КАК РазмерМЗП
	|	
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказатели
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодУчетнойПолитики,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодРасчетныхПоказателей
	|	ИЗ
	|		" + ПериодыГодаТекст + " КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитика
	|			ПО УчетнаяПолитика.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|				И УчетнаяПолитика.Организация = &парамНалогоплательщик
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО РасчетныеПоказатели.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитика
	|		ПО Периоды.ПериодУчетнойПолитики = УчетнаяПолитика.Период
	|			И УчетнаяПолитика.Организация = &парамНалогоплательщик
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО Периоды.ПериодРасчетныхПоказателей = РасчетныеПоказатели.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.Период
	|";

	Запрос.Текст = РасчетныеПоказателиТекст;
	Запрос.Выполнить();
	РасчетныеПоказателиТекст = "ВТ_РасчетныеПоказатели";
	
	// Основной текст запроса
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Доходы.ФизЛицо,
	|	Доходы.Период,
	|	Доходы.СуммаДоходаВсего,
	|	Доходы.СуммаНеОблагаемогоДохода,
	|	Доходы.СуммаДоходаОборот - Доходы.СуммаВычетаОборот КАК ОблагаемыйДоход,
	|	Доходы.ИсчисленнаяОблагаемаяБаза КАК РанееИсчисленнаяОблагаемаяБаза,
	|
	|	ЕСТЬNULL(СНИсчисленный.ИсчисленныйНалог, 0) КАК РанееИсчисленныйНалог,
	|
	|	ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныеВзносы, 0) КАК ИсчисленныеВзносы,
	|
	|	ЕСТЬNULL(СОРасчетыСФондами.ИсчисленныеОтчисления, 0) КАК ИсчисленныеОтчисления,
	|
	|	ЕСТЬNULL(РасчетныеПоказатели.ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога, ЛОЖЬ) КАК ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога,
	|
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП,
	|
	|	ЕСТЬNULL(РазмерПрименяемойКорректировки.КорректировкаДохода, 0) КАК СуммаКорректировкиДохода
	|
	|ИЗ
	|	" + ДоходыТекст + " КАК Доходы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + СНИсчисленныйТекст + " КАК СНИсчисленный
	|		ПО Доходы.ФизЛицо = СНИсчисленный.ФизЛицо
	|			И Доходы.Период = СНИсчисленный.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОПВРасчетыСФондамиТекст + " КАК ОПВРасчетыСФондами
	|		ПО Доходы.ФизЛицо = ОПВРасчетыСФондами.ФизЛицо
	|			И Доходы.Период = ОПВРасчетыСФондами.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + СОРасчетыСФондамиТекст + " КАК СОРасчетыСФондами
	|		ПО Доходы.ФизЛицо = СОРасчетыСФондами.ФизЛицо
	|			И Доходы.Период = СОРасчетыСФондами.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНСведенияОДоходах + " КАК РазмерПрименяемойКорректировки
	|		ПО Доходы.Период = РазмерПрименяемойКорректировки.Период
	|			И Доходы.ФизЛицо = РазмерПрименяемойКорректировки.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
	|		ПО Доходы.Период = РасчетныеПоказатели.Период
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Доходы.ФизЛицо, 
	|	Доходы.Период
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокПосле2019()

// Получить данные для расчета СН по фиксированной ставке
//
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей СН
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокПосле2020(Знач ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик,
																ГоловнаяОрганизация,
																Регистратор, 
																СписокФизЛицТекст, 
																ДополнительныеПараметрыЗапроса = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНалогоплательщик", 		Налогоплательщик);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 	НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамРегистратор", 			Регистратор);
	
	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	СНСведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
		|
		|ГДЕ
		|	СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|	И СНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);
		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);
		КонецЕсли;

	КонецЕсли;
	
	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
	|
	|ГДЕ
	|	СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И СНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	   КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачало",				   	   Макс(НачалоМесяца(ПервыйМесяцНалоговогоПериода), '20090101'));
	Запрос.УстановитьПараметр("парамКонец",   				   	   Макс(КонецМесяца(ПоследнийМесяцНалоговогоПериода), '20090131235959'));

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛицо
	| 
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
	
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";
		
	// Периоды
	// Таблица список периодов, по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыГодаТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|   СНСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ПериодыГода
	|ИЗ
	|	РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК Работники
	|			ПО Работники.Физлицо = СНСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	СНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ),
	|	СНСведенияОДоходах.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|";
	
	Запрос.Текст = ПериодыГодаТекст;
	Запрос.Выполнить();
	ПериодыГодаТекст = "ВТ_ПериодыГода";	
	
	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//
	//	Описание:
	// Выбирает облагаемые налогом доходы за весь год по физлицам из СписокФизлиц
	ДоходыТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	СНСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	СУММА(СНСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	СУММА(ВЫБОР
	|			КОГДА СНСведенияОДоходах.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА СНСведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ СНСведенияОДоходах.СуммаВычетаОборот
	|		КОНЕЦ) КАК СуммаНеОблагаемогоДохода,
	|	СУММА(ВЫБОР
	|			КОГДА СНСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА СНСведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	СУММА(ВЫБОР
	|			КОГДА СНСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА СНСведенияОДоходах.СуммаВычетаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВычетаОборот,
	|	СУММА(СНСведенияОДоходах.ОблагаемаяБазаОборот) КАК ИсчисленнаяОблагаемаяБаза
	|
	|ПОМЕСТИТЬ ВТ_Доходы
	|ИЗ
	|	РегистрНакопления.СНСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					ПериодРегистрации <= &парамПериодРегистрации
	|					И Налогоплательщик = &парамНалогоплательщик
	|					И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СНСведенияОДоходах
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыГодаТекст+" КАК Периоды
	|		ПО (Периоды.Период = НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ))
	|			И (Периоды.ФизЛицо = СНСведенияОДоходах.ФизЛицо)
	|	
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ),
	|	СНСведенияОДоходах.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СНСведенияОДоходах.Физлицо,
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ)";

	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТ_Доходы";

	// СНИсчисленный
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныйНалог
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру СНИсчисленный и данные регистра
	//  СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
	СНИсчисленныйТекст = "
	|ВЫБРАТЬ
	|	СНИсчисленный.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СНИсчисленный.ФизЛицо КАК ФизЛицо,
	|	СУММА(СНИсчисленный.Налог) КАК ИсчисленныйНалог
	|
	|ПОМЕСТИТЬ ВТ_СНИсчисленный
	|ИЗ
	|	РегистрНакопления.СНИсчисленный КАК СНИсчисленный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|			ПО РаботникиОрганизации.Физлицо = СНИсчисленный.ФизЛицо
	|
	|ГДЕ
	|	СНИсчисленный.МесяцНалоговогоПериода >= &парамНачало И
	|	СНИсчисленный.МесяцНалоговогоПериода <= &парамКонец И
	|	СНИсчисленный.Налогоплательщик = &парамНалогоплательщик И
	|	СНИсчисленный.Регистратор <> &парамРегистратор И
	|	СНИсчисленный.Период <= &парамКонецПериодаРегистрации
	|
	|СГРУППИРОВАТЬ ПО
	|	СНИсчисленный.МесяцНалоговогоПериода,
	|	СНИсчисленный.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СНИсчисленный.ФизЛицо,
	|	СНИсчисленный.МесяцНалоговогоПериода";

	Запрос.Текст = СНИсчисленныйТекст;
	Запрос.Выполнить();
	СНИсчисленныйТекст = "ВТ_СНИсчисленный";

	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  
	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныеОПВ
	|
	|ПОМЕСТИТЬ ВТ_ОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало
	|	И ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец
	|	И ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик
	|	И ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации
	|	И ОПВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ОПВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ОПВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";
	
	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТ_ОПВРасчетыСФондами";
	
	ВОСМСРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ВОСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ВОСМСРасчетыСФондами.Взнос) КАК ИсчисленныеВОСМС
	|
	|ПОМЕСТИТЬ ВТ_ВОСМСРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ВОСМСРасчетыСФондами КАК ВОСМСРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ВОСМСРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	ВОСМСРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало
	|	И ВОСМСРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец
	|	И ВОСМСРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик
	|	И ВОСМСРасчетыСФондами.Период <= &парамКонецПериодаРегистрации
	|	И ВОСМСРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ВОСМСРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ВОСМСРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВОСМСРасчетыСФондами.МесяцНалоговогоПериода,
	|	ВОСМСРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВОСМСРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";
	
	Запрос.Текст = ВОСМСРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ВОСМСРасчетыСФондамиТекст = "ВТ_ВОСМСРасчетыСФондами";
	
	// ИПНРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		КорректировкаДохода
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  
	ИПНСведенияОДоходах = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СУММА(ИПНСведенияОДоходах.ПримененнаяЛьготаОборот) КАК КорректировкаДохода
	|
	|ПОМЕСТИТЬ ВТ_ИПНСведенияОДоходах
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					Налогоплательщик = &парамНалогоплательщик
	|					И ПериодРегистрации <= &парамКонецПериодаРегистрации) КАК ИПНСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ИПНСведенияОДоходах.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ПериодРегистрации,
	|	ИПНСведенияОДоходах.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ)";
	
	Запрос.Текст = ИПНСведенияОДоходах;
	Запрос.Выполнить();
	ИПНСведенияОДоходах = "ВТ_ИПНСведенияОДоходах";

	// СОРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеОтчисления
	//
	//	Описание:
	//	Выбирает исчисленные социальные отчисления (приходы по регистру СОРасчетыСФондами и 
	//  данные регистра СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
	СОРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	СОРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(СОРасчетыСФондами.Отчисление) КАК ИсчисленныеОтчисления
	|
	|ПОМЕСТИТЬ ВТ_СОРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|			ПО РаботникиОрганизации.Физлицо = СОРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	СОРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало
	|	И СОРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец
	|	И СОРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик
	|	И СОРасчетыСФондами.Период <= &парамКонецПериодаРегистрации
	|	И СОРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И СОРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И СОРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	СОРасчетыСФондами.МесяцНалоговогоПериода,
	|	СОРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СОРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";

	Запрос.Текст = СОРасчетыСФондамиТекст;
	Запрос.Выполнить();
	СОРасчетыСФондамиТекст = "ВТ_СОРасчетыСФондами";

	// определим учетную политику и размеры регламентированных показателей за каждый из месяцев
	РасчетныеПоказателиТекст = "
	|ВЫБРАТЬ
	|	Периоды.Период,
	|	ЕСТЬNULL(УчетнаяПолитика.ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога, ЛОЖЬ) КАК ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗПДляЦелейНалогообложения, 0) КАК РазмерМЗП
	|	
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказатели
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодУчетнойПолитики,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодРасчетныхПоказателей
	|	ИЗ
	|		" + ПериодыГодаТекст + " КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитика
	|			ПО УчетнаяПолитика.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|				И УчетнаяПолитика.Организация = &парамНалогоплательщик
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО РасчетныеПоказатели.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитика
	|		ПО Периоды.ПериодУчетнойПолитики = УчетнаяПолитика.Период
	|			И УчетнаяПолитика.Организация = &парамНалогоплательщик
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО Периоды.ПериодРасчетныхПоказателей = РасчетныеПоказатели.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.Период
	|";

	Запрос.Текст = РасчетныеПоказателиТекст;
	Запрос.Выполнить();
	РасчетныеПоказателиТекст = "ВТ_РасчетныеПоказатели";
	
	// Основной текст запроса
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Доходы.ФизЛицо,
	|	Доходы.Период,
	|	Доходы.СуммаДоходаВсего,
	|	Доходы.СуммаНеОблагаемогоДохода,
	|	Доходы.СуммаДоходаОборот - Доходы.СуммаВычетаОборот КАК ОблагаемыйДоход,
	|	Доходы.ИсчисленнаяОблагаемаяБаза КАК РанееИсчисленнаяОблагаемаяБаза,
	|
	|	ЕСТЬNULL(СНИсчисленный.ИсчисленныйНалог, 0) КАК РанееИсчисленныйНалог,
	|
	|	ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныеОПВ, 0) КАК ИсчисленныеОПВ,
	|
	|	ЕСТЬNULL(ВОСМСРасчетыСФондами.ИсчисленныеВОСМС, 0) КАК ИсчисленныеВОСМС,
	|
	|	ЕСТЬNULL(СОРасчетыСФондами.ИсчисленныеОтчисления, 0) КАК ИсчисленныеОтчисления,
	|
	|	ЕСТЬNULL(РасчетныеПоказатели.ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога, ЛОЖЬ) КАК ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога,
	|
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП,
	|
	|	ЕСТЬNULL(РазмерПрименяемойКорректировки.КорректировкаДохода, 0) КАК СуммаКорректировкиДохода
	|
	|ИЗ
	|	" + ДоходыТекст + " КАК Доходы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + СНИсчисленныйТекст + " КАК СНИсчисленный
	|		ПО Доходы.ФизЛицо = СНИсчисленный.ФизЛицо
	|			И Доходы.Период = СНИсчисленный.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОПВРасчетыСФондамиТекст + " КАК ОПВРасчетыСФондами
	|		ПО Доходы.ФизЛицо = ОПВРасчетыСФондами.ФизЛицо
	|			И Доходы.Период = ОПВРасчетыСФондами.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ВОСМСРасчетыСФондамиТекст + " КАК ВОСМСРасчетыСФондами
	|		ПО Доходы.ФизЛицо = ВОСМСРасчетыСФондами.ФизЛицо
	|			И Доходы.Период = ВОСМСРасчетыСФондами.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + СОРасчетыСФондамиТекст + " КАК СОРасчетыСФондами
	|		ПО Доходы.ФизЛицо = СОРасчетыСФондами.ФизЛицо
	|			И Доходы.Период = СОРасчетыСФондами.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНСведенияОДоходах + " КАК РазмерПрименяемойКорректировки
	|		ПО Доходы.Период = РазмерПрименяемойКорректировки.Период
	|			И Доходы.ФизЛицо = РазмерПрименяемойКорректировки.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
	|		ПО Доходы.Период = РасчетныеПоказатели.Период
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Доходы.ФизЛицо, 
	|	Доходы.Период
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокПосле2019()

// Получить данные для расчета СН по фиксированной ставке
//
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей СН
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокПосле2022(Знач ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик,
																ГоловнаяОрганизация,
																Регистратор, 
																СписокФизЛицТекст, 
																ДополнительныеПараметрыЗапроса = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНалогоплательщик", 		Налогоплательщик);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 	НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамРегистратор", 			Регистратор);
	
	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	СНСведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
		|
		|ГДЕ
		|	СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|	И СНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);
		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);
		КонецЕсли;

	КонецЕсли;
	
	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СНСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
	|
	|ГДЕ
	|	СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И СНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	   КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачало",				   	   Макс(НачалоМесяца(ПервыйМесяцНалоговогоПериода), '20090101'));
	Запрос.УстановитьПараметр("парамКонец",   				   	   Макс(КонецМесяца(ПоследнийМесяцНалоговогоПериода), '20090131235959'));

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛицо
	| 
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	(" + СписокФизЛицТекст + ") КАК СписокФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
	
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";
		
	// Периоды
	// Таблица список периодов, по которым необходимо выполнить расчет налога
	// Поля:
	//		Период
	//		Физлицо
	ПериодыГодаТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|   СНСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ПериодыГода
	|ИЗ
	|	РегистрНакопления.СНСведенияОДоходах КАК СНСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК Работники
	|			ПО Работники.Физлицо = СНСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	СНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И СНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ),
	|	СНСведенияОДоходах.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Период
	|";
	
	Запрос.Текст = ПериодыГодаТекст;
	Запрос.Выполнить();
	ПериодыГодаТекст = "ВТ_ПериодыГода";	
	
	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		СуммаДоходаОборот
	//		СуммаВычетаОборот
	//
	//	Описание:
	// Выбирает облагаемые налогом доходы за весь год по физлицам из СписокФизлиц
	ДоходыТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	СНСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	СУММА(СНСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	СУММА(ВЫБОР
	|			КОГДА СНСведенияОДоходах.СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА СНСведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ СНСведенияОДоходах.СуммаВычетаОборот
	|		КОНЕЦ) КАК СуммаНеОблагаемогоДохода,
	|	СУММА(ВЫБОР
	|			КОГДА СНСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА СНСведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	СУММА(ВЫБОР
	|			КОГДА СНСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА СНСведенияОДоходах.СуммаВычетаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВычетаОборот,
	|	СУММА(СНСведенияОДоходах.ОблагаемаяБазаОборот) КАК ИсчисленнаяОблагаемаяБаза
	|
	|ПОМЕСТИТЬ ВТ_Доходы
	|ИЗ
	|	РегистрНакопления.СНСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					ПериодРегистрации <= &парамПериодРегистрации
	|					И Налогоплательщик = &парамНалогоплательщик
	|					И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СНСведенияОДоходах
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыГодаТекст+" КАК Периоды
	|		ПО (Периоды.Период = НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ))
	|			И (Периоды.ФизЛицо = СНСведенияОДоходах.ФизЛицо)
	|	
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ),
	|	СНСведенияОДоходах.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СНСведенияОДоходах.Физлицо,
	|	НАЧАЛОПЕРИОДА(СНСведенияОДоходах.Период, МЕСЯЦ)";

	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТ_Доходы";

	// СНИсчисленный
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныйНалог
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру СНИсчисленный и данные регистра
	//  СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
	СНИсчисленныйТекст = "
	|ВЫБРАТЬ
	|	СНИсчисленный.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СНИсчисленный.ФизЛицо КАК ФизЛицо,
	|	СУММА(СНИсчисленный.Налог) КАК ИсчисленныйНалог
	|
	|ПОМЕСТИТЬ ВТ_СНИсчисленный
	|ИЗ
	|	РегистрНакопления.СНИсчисленный КАК СНИсчисленный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|			ПО РаботникиОрганизации.Физлицо = СНИсчисленный.ФизЛицо
	|
	|ГДЕ
	|	СНИсчисленный.МесяцНалоговогоПериода >= &парамНачало И
	|	СНИсчисленный.МесяцНалоговогоПериода <= &парамКонец И
	|	СНИсчисленный.Налогоплательщик = &парамНалогоплательщик И
	|	СНИсчисленный.Регистратор <> &парамРегистратор И
	|	СНИсчисленный.Период <= &парамКонецПериодаРегистрации
	|
	|СГРУППИРОВАТЬ ПО
	|	СНИсчисленный.МесяцНалоговогоПериода,
	|	СНИсчисленный.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СНИсчисленный.ФизЛицо,
	|	СНИсчисленный.МесяцНалоговогоПериода";

	Запрос.Текст = СНИсчисленныйТекст;
	Запрос.Выполнить();
	СНИсчисленныйТекст = "ВТ_СНИсчисленный";

	// ОПВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  
	ОПВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныеОПВ
	|
	|ПОМЕСТИТЬ ВТ_ОПВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало
	|	И ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец
	|	И ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик
	|	И ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации
	|	И ОПВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ОПВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ОПВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОПВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";
	
	Запрос.Текст = ОПВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРасчетыСФондамиТекст = "ВТ_ОПВРасчетыСФондами";
	
	ВОСМСРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ВОСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ВОСМСРасчетыСФондами.Взнос) КАК ИсчисленныеВОСМС
	|
	|ПОМЕСТИТЬ ВТ_ВОСМСРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ВОСМСРасчетыСФондами КАК ВОСМСРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ВОСМСРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	ВОСМСРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало
	|	И ВОСМСРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец
	|	И ВОСМСРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик
	|	И ВОСМСРасчетыСФондами.Период <= &парамКонецПериодаРегистрации
	|	И ВОСМСРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ВОСМСРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И ВОСМСРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВОСМСРасчетыСФондами.МесяцНалоговогоПериода,
	|	ВОСМСРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВОСМСРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ВОСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";
	
	Запрос.Текст = ВОСМСРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ВОСМСРасчетыСФондамиТекст = "ВТ_ВОСМСРасчетыСФондами";
	
	// ИПНРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		КорректировкаДохода
	//
	//	Описание:
	//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
	//  
	ИПНСведенияОДоходах = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СУММА(ИПНСведенияОДоходах.ПримененнаяЛьготаОборот) КАК КорректировкаДохода
	|
	|ПОМЕСТИТЬ ВТ_ИПНСведенияОДоходах
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					Налогоплательщик = &парамНалогоплательщик
	|					И ПериодРегистрации <= &парамКонецПериодаРегистрации) КАК ИПНСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ИПНСведенияОДоходах.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ПериодРегистрации,
	|	ИПНСведенияОДоходах.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ)";
	
	Запрос.Текст = ИПНСведенияОДоходах;
	Запрос.Выполнить();
	ИПНСведенияОДоходах = "ВТ_ИПНСведенияОДоходах";

	// СОРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ИсчисленныеОтчисления
	//
	//	Описание:
	//	Выбирает исчисленные социальные отчисления (приходы по регистру СОРасчетыСФондами и 
	//  данные регистра СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
	СОРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	СОРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(СОРасчетыСФондами.Отчисление) КАК ИсчисленныеОтчисления
	|
	|ПОМЕСТИТЬ ВТ_СОРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+СписокФизлицТекст+" КАК РаботникиОрганизации
	|			ПО РаботникиОрганизации.Физлицо = СОРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	СОРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало
	|	И СОРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец
	|	И СОРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик
	|	И СОРасчетыСФондами.Период <= &парамКонецПериодаРегистрации
	|	И СОРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И СОРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	И СОРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	СОРасчетыСФондами.МесяцНалоговогоПериода,
	|	СОРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СОРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";

	Запрос.Текст = СОРасчетыСФондамиТекст;
	Запрос.Выполнить();
	СОРасчетыСФондамиТекст = "ВТ_СОРасчетыСФондами";

	// определим учетную политику и размеры регламентированных показателей за каждый из месяцев
	РасчетныеПоказателиТекст = "
	|ВЫБРАТЬ
	|	Периоды.Период,
	|	ЕСТЬNULL(УчетнаяПолитика.ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога, ЛОЖЬ) КАК ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП, 0) КАК РазмерМРП
	|	
	|ПОМЕСТИТЬ ВТ_РасчетныеПоказатели
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(УчетнаяПолитика.Период) КАК ПериодУчетнойПолитики,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодРасчетныхПоказателей
	|	ИЗ
	|		" + ПериодыГодаТекст + " КАК Периоды
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитика
	|			ПО УчетнаяПолитика.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|				И УчетнаяПолитика.Организация = &парамНалогоплательщик
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО РасчетныеПоказатели.Период <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК Периоды
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитика
	|		ПО Периоды.ПериодУчетнойПолитики = УчетнаяПолитика.Период
	|			И УчетнаяПолитика.Организация = &парамНалогоплательщик
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО Периоды.ПериодРасчетныхПоказателей = РасчетныеПоказатели.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Периоды.Период
	|";

	Запрос.Текст = РасчетныеПоказателиТекст;
	Запрос.Выполнить();
	РасчетныеПоказателиТекст = "ВТ_РасчетныеПоказатели";
	
	// Основной текст запроса
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Доходы.ФизЛицо,
	|	Доходы.Период,
	|	Доходы.СуммаДоходаВсего,
	|	Доходы.СуммаНеОблагаемогоДохода,
	|	Доходы.СуммаДоходаОборот - Доходы.СуммаВычетаОборот КАК ОблагаемыйДоход,
	|	Доходы.ИсчисленнаяОблагаемаяБаза КАК РанееИсчисленнаяОблагаемаяБаза,
	|
	|	ЕСТЬNULL(СНИсчисленный.ИсчисленныйНалог, 0) КАК РанееИсчисленныйНалог,
	|
	|	ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныеОПВ, 0) КАК ИсчисленныеОПВ,
	|
	|	ЕСТЬNULL(ВОСМСРасчетыСФондами.ИсчисленныеВОСМС, 0) КАК ИсчисленныеВОСМС,
	|
	|	ЕСТЬNULL(СОРасчетыСФондами.ИсчисленныеОтчисления, 0) КАК ИсчисленныеОтчисления,
	|
	|	ЕСТЬNULL(РасчетныеПоказатели.ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога, ЛОЖЬ) КАК ПрименятьОграничениеНаМинимальнуюБазуСоциальногоНалога,
	|
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП, 0) КАК РазмерМРП,
	|
	|	ЕСТЬNULL(РазмерПрименяемойКорректировки.КорректировкаДохода, 0) КАК СуммаКорректировкиДохода
	|
	|ИЗ
	|	" + ДоходыТекст + " КАК Доходы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + СНИсчисленныйТекст + " КАК СНИсчисленный
	|		ПО Доходы.ФизЛицо = СНИсчисленный.ФизЛицо
	|			И Доходы.Период = СНИсчисленный.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОПВРасчетыСФондамиТекст + " КАК ОПВРасчетыСФондами
	|		ПО Доходы.ФизЛицо = ОПВРасчетыСФондами.ФизЛицо
	|			И Доходы.Период = ОПВРасчетыСФондами.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ВОСМСРасчетыСФондамиТекст + " КАК ВОСМСРасчетыСФондами
	|		ПО Доходы.ФизЛицо = ВОСМСРасчетыСФондами.ФизЛицо
	|			И Доходы.Период = ВОСМСРасчетыСФондами.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + СОРасчетыСФондамиТекст + " КАК СОРасчетыСФондами
	|		ПО Доходы.ФизЛицо = СОРасчетыСФондами.ФизЛицо
	|			И Доходы.Период = СОРасчетыСФондами.МесяцНалоговогоПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНСведенияОДоходах + " КАК РазмерПрименяемойКорректировки
	|		ПО Доходы.Период = РазмерПрименяемойКорректировки.Период
	|			И Доходы.ФизЛицо = РазмерПрименяемойКорректировки.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
	|		ПО Доходы.Период = РасчетныеПоказатели.Период
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Доходы.ФизЛицо, 
	|	Доходы.Период
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаСНОбщеустановленныйПорядокПосле2022()

// Получить данные для расчета СН по правилам расчета для индивидуального предпринимателя.
//
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные налоги 
//  Налогоплательщик - ссылка на организацию-налогоплательщика
//  ГоловнаяОрганизация - ссылка на головную организацию, по которой осуществляется расчет
//  Регистратор - ссылка на регистратор записей СН
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаСНИндивидуальныйПредприниматель(ПериодРегистрации, 
																Налогоплательщик,
																Регистратор, 
																СписокФизЛицТекст, 
																ДополнительныеПараметрыЗапроса = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамНалогоплательщик", 		Налогоплательщик);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 	НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамРегистратор", 			Регистратор);
	
	Запрос.УстановитьПараметр("парамПриход",					   ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  				   Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 				   Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	   КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамЮрФизЛицо_ФизЛицо",			   Перечисления.ЮрФизЛицо.ФизЛицо);

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	// СНИсчисленный
	//	Поля:
	//		ФизЛицо
	//		ИсчисленныйНалог
	//
	//	Описание:
	//	Выбирает уже ранее исчисленные налоги за месяц для СписокФизлиц
	СНИсчисленныйТекст = "
	|ВЫБРАТЬ
	|	СНИсчисленный.ФизЛицо КАК ФизЛицо,
	|	СУММА(СНИсчисленный.Налог) КАК ИсчисленныйНалог
	|
	|ПОМЕСТИТЬ ВТСНИсчисленный
	|ИЗ
	|	РегистрНакопления.СНИсчисленный КАК СНИсчисленный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ("+СписокФизлицТекст+") КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = СНИсчисленный.ФизЛицо
	|
	|ГДЕ
	|	СНИсчисленный.МесяцНалоговогоПериода = &парамПериодРегистрации И
	|	СНИсчисленный.Налогоплательщик = &парамНалогоплательщик И
	|	СНИсчисленный.Регистратор <> &парамРегистратор И
	|	СНИсчисленный.Период <= &парамКонецПериодаРегистрации
	|
	|СГРУППИРОВАТЬ ПО
	|	СНИсчисленный.МесяцНалоговогоПериода,
	|	СНИсчисленный.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СНИсчисленный.ФизЛицо
	|";

	Запрос.Текст = СНИсчисленныйТекст;
	Запрос.Выполнить();
	СНИсчисленныйТекст = "ВТСНИсчисленный";

	// СОРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		ИсчисленныеОтчисления
	//
	//	Описание:
	//	Выбирает исчисленные социальные отчисления  для СписокФизлиц
	СОРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	СОРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(СОРасчетыСФондами.Отчисление) КАК ИсчисленныеОтчисления
	|
	|ПОМЕСТИТЬ ВТСОРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ("+СписокФизлицТекст+") КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = СОРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	СОРасчетыСФондами.МесяцНалоговогоПериода = &парамПериодРегистрации И
	|	СОРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	СОРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	СОРасчетыСФондами.ВидДвижения = &парамПриход И
	|	СОРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И
	|	СОРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	СОРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СОРасчетыСФондами.ФизЛицо
	|";

	Запрос.Текст = СОРасчетыСФондамиТекст;
	Запрос.Выполнить();
	СОРасчетыСФондамиТекст = "ВТСОРасчетыСФондами";

	// сумма исчисленных социальных отчислений за год
	ПолеСоциальныеОтчисления = "ЕСТЬNULL(СОРасчетыСФондами.ИсчисленныеОтчисления, 0)";
	
	// сумма ранее исчисленного налога
	ПолеРанееНалогИсчисленный = "ЕСТЬNULL(СНИсчисленный.ИсчисленныйНалог, 0)";
	
	// сумма исчисленного налога
	ПолеНалогИсчисленный = 
	"ВЫБОР
	|	КОГДА РаботникиОрганизации.ФизЛицо = Организации.ИндивидуальныйПредприниматель
	|		ТОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.КоэффициентМРПДляРасчетаСНЗаИндивидуальногоПредпринимателя, 0)
	|	ИНАЧЕ ЕСТЬNULL(УчетнаяПолитикаНУ.КоэффициентМРПДляРасчетаСНЗаНаемногоРаботника, 0)
	|КОНЕЦ * ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП, 0) - " + ПолеСоциальныеОтчисления;
	
	// ИсчисленныйСН	
	//	Поля:
	//		Физлицо
	//		Период
	//		НалогИсчисленный
	ИсчисленныйСНТекст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Налогоплательщик,
	|	РаботникиОрганизации.ФизЛицо,
	|	&парамПериодРегистрации КАК Период,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.ФизЛицо = Организации.ИндивидуальныйПредприниматель
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакИндивидуальногоПредпринимателя,
	|	ЕСТЬNULL(УчетнаяПолитикаНУ.КоэффициентМРПДляРасчетаСНЗаИндивидуальногоПредпринимателя, 0) КАК КоэффициентМРПДляРасчетаСНЗаИндивидуальногоПредпринимателя,
	|	ЕСТЬNULL(УчетнаяПолитикаНУ.КоэффициентМРПДляРасчетаСНЗаНаемногоРаботника, 0) КАК КоэффициентМРПДляРасчетаСНЗаНаемногоРаботника,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП, 0) КАК РазмерМРП,
	|	" + ПолеРанееНалогИсчисленный + " КАК РанееНалогИсчисленный,
	|	" + ПолеСоциальныеОтчисления + " КАК СОЗаМесяц,
	|	ВЫБОР
	|		КОГДА " + ПолеНалогИсчисленный + " > 0
	|			ТОГДА " + ПолеНалогИсчисленный + "
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СНЗаМесяц,
	|	ВЫБОР
	|		КОГДА " + ПолеНалогИсчисленный + " > 0
	|			ТОГДА " + ПолеНалогИсчисленный + "
	|		ИНАЧЕ 0
	|	КОНЕЦ - " + ПолеРанееНалогИсчисленный + " КАК НалогИсчисленный
	|ИЗ
	|	(" + СписокФизЛицТекст + ") КАК РаботникиОрганизации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(
	|				&парамКонецПериодаРегистрации,
	|				Организация = &парамНалогоплательщик) КАК УчетнаяПолитикаНУ
	|		ПО ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказатели
	|		ПО ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО Организации.Ссылка = &парамНалогоплательщик
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + СНИсчисленныйТекст + " КАК СНИсчисленный
	|		ПО РаботникиОрганизации.ФизЛицо = СНИсчисленный.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + СОРасчетыСФондамиТекст + " КАК СОРасчетыСФондами
	|		ПО РаботникиОрганизации.ФизЛицо = СОРасчетыСФондами.ФизЛицо
	|
	|
	|УПОРЯДОЧИТЬ ПО
	|	РаботникиОрганизации.ФизЛицо
	|";
	
	Запрос.Текст = ИсчисленныйСНТекст;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаСНИндивидуальныйПредприниматель()

// Получить данные для расчета ОППВ
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные взносы 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ОППВ
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаОППВ(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено) Экспорт
	Если ПериодРегистрации >= '20190101' Тогда
		Возврат ПолучитьДанныеДляРасчетаОППВПосле2019(ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса);
									
	ИначеЕсли ПериодРегистрации < '20190101' Тогда
		Возврат ПолучитьДанныеДляРасчетаОППВДо2019(ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса);
	КонецЕсли;

	
КонецФункции // ПолучитьДанныеДляРасчетаОППВ()

// Получить данные для расчета ОППВ
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные взносы 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ОППВ
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаОППВДо2019(ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса) Экспорт
									
	Если ПериодРегистрации < '20140101' Тогда
		Сообщить("Расчет ОППВ до 2014 года не предусмотрен.");
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для Каждого ПараметрЗапроса Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(ПараметрЗапроса.Ключ, ПараметрЗапроса.Значение);
		КонецЦикла;
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОППВСведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ОППВСведенияОДоходах КАК ОППВСведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = ОППВСведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	ОППВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И ОППВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОППВСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ОППВСведенияОДоходах КАК ОППВСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ОППВСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ОППВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ОППВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;

	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	
	// ФизлицаБезПраваНаПенсию
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц не имеющих право на пенсионное обеспечение
	ФизлицаБезПраваНаПенсиюТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ФизЛицаБезПраваНаПенсию
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезПраваНаПенсиюТекст;
	Запрос.Выполнить();
	ФизлицаБезПраваНаПенсиюТекст = "ВТ_ФизЛицаБезПраваНаПенсию";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ФизЛицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";

	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТ_ФизЛицаПенсионеры";

	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет взносов
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ОППВСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ОППВСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаБезПраваНаПенсию.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезПраваНаПенсию,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера
	|
	|ПОМЕСТИТЬ ВТ_Периоды	
	|ИЗ
	|	РегистрНакопления.ОППВСведенияОДоходах КАК ОППВСведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ОППВСведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезПраваНаПенсиюТекст + " КАК ФизлицаБезПраваНаПенсию
	|		ПО ОППВСведенияОДоходах.ФизЛицо = ФизлицаБезПраваНаПенсию.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО ОППВСведенияОДоходах.ФизЛицо = ФизлицаПенсионеры.ФизЛицо
	|
	|ГДЕ
	|	ОППВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ОППВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОППВСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОППВСведенияОДоходах.Период, МЕСЯЦ)
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТ_Периоды";

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые взносами доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	ОППВОбороты.ФизЛицо КАК ФизЛицо,
	|	ОППВОбороты.Период КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ОППВОбороты.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(ОППВОбороты.ПризнакФизЛицаПенсионера) = 0
	|			ТОГДА СУММА(ОППВОбороты.СуммаДоходаОборот) - СУММА(ОППВОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ОППВОбороты.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(ОППВОбороты.ПризнакФизЛицаПенсионера) = 0
	|			ТОГДА СУММА(ОППВОбороты.ОблагаемаяБазаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	МАКСИМУМ(ОППВОбороты.ПризнакФизЛицаБезПраваНаПенсию) КАК ПризнакФизЛицаБезПраваНаПенсию,
	|	МАКСИМУМ(ОППВОбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера
	|
	|ПОМЕСТИТЬ ВТ_Доходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОППВСведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ОППВСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СУММА(ВЫБОР 
	|				КОГДА ОППВСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|					ТОГДА ОППВСведенияОДоходах.СуммаДоходаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаДоходаОборот,
	|	 	СУММА(ВЫБОР 
	|				КОГДА ОППВСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|					ТОГДА ОППВСведенияОДоходах.СуммаВычетаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаВычетаОборот,
	|	 	СУММА(ОППВСведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезПраваНаПенсию) КАК ПризнакФизЛицаБезПраваНаПенсию,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера
	|	ИЗ
	|		РегистрНакопления.ОППВСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					Налогоплательщик = &парамНалогоплательщик
	|					И ПериодРегистрации <= &парамКонецПериодаРегистрации) КАК ОППВСведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
	|			ПО Работники.Физлицо = ОППВСведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ОППВСведенияОДоходах.Период, МЕСЯЦ)
	|
	|	СГРУППИРОВАТЬ ПО
	|		ОППВСведенияОДоходах.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ОППВСведенияОДоходах.Период, МЕСЯЦ)) КАК ОППВОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОППВОбороты.Период,
	|	ОППВОбороты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТ_Доходы";
	
	// ОППВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные профессиональные пенсионные взносы (приходы по регистру ОППВРасчетыСФондами)
	//  для СписокФизлиц

	ОППВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ОППВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|			ТОГДА СУММА(ОППВРасчетыСФондами.Взнос)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленныйВзнос
	|
	|ПОМЕСТИТЬ ВТ_ОППВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОППВРасчетыСФондами КАК ОППВРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОППВРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	ОППВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ОППВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ОППВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ОППВРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	ОППВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ОППВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И 
	|	ОППВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) И 
	|	ОППВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОППВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОППВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОППВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";

	Запрос.Текст = ОППВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОППВРасчетыСФондамиТекст = "ВТ_ОППВРасчетыСФондами";


	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОППВ для каждого периода исчисления взносов с учетом приоритетов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПрофессиональныеПенсионныеВзносы)
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПрофессиональныеПенсионныеВзносы)
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОППВ для каждого периода исчисления взносов с наивысшим приоритетом
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахНалоговСборовОтчислений.Период,
	|			МИНИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахНалоговСборовОтчислений.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Приоритет = СведенияОСтавкахНалоговСборовОтчислений.Приоритет
	|";
	
	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	
	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОППВ для каждого периода исчисления взносов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТ_СведенияОСтавкахНалоговСборовОтчислений
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			МАКСИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|				ПО СведенияОСтавкахНалоговСборовОтчислений.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	Запрос.Выполнить();
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "ВТ_СведенияОСтавкахНалоговСборовОтчислений";

	ТипЗначенияОППВТекст  = "ЧИСЛО(15, 2)";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";

	// облагаемая база за месяц
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// облагаемая база
	ПолеОблагаемаяБазаЗаМесяц = ПолеОблагаемыйДоходЗаМесяц;
	
	// сумма взносов исчисленная
	ПолеВзносыИсчисленные = 
	"(ВЫРАЗИТЬ(" + ПолеОблагаемыйДоходЗаМесяц +" * СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК " + ТипЗначенияОППВТекст + "))";
	
	// сумма ранее исчисленных взносов
	ПолеРанееВзносыИсчисленные = "ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныйВзнос, 0)";    

	// ИсчисленныйОППВ
	//	Поля:
	//		Физлицо
	//		ВзносыИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее взносы за месяц и производит расчет взносов

	ИсчисленныйОППВТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезПраваНаПенсию,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеОблагаемаяБазаЗаМесяц + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеОблагаемаяБазаЗаМесяц + " - " + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК ОблагаемаяБаза,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	" + ПолеВзносыИсчисленные + " КАК ВзносЗаПериод,
	|	" + ПолеРанееВзносыИсчисленные + " КАК РанееИсчисленныйВзнос,
	|	" + ПолеВзносыИсчисленные + "-" + ПолеРанееВзносыИсчисленные + " КАК ВзносИсчисленный
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ОППВРасчетыСФондамиТекст+" КАК ОПВРасчетыСФондами
	|		ПО ОПВРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ОПВРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахНалоговСборовОтчисленийТекст+" КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период
	|";

	Запрос.Текст = ИсчисленныйОППВТекст;	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаОППВ()

// Получить данные для расчета ОППВ
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные взносы 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ОППВ
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаОППВПосле2019(ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса) Экспорт
										
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для Каждого ПараметрЗапроса Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(ПараметрЗапроса.Ключ, ПараметрЗапроса.Значение);
		КонецЦикла;
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОППВСведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ОППВСведенияОДоходах КАК ОППВСведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = ОППВСведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	ОППВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И ОППВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОППВСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ОППВСведенияОДоходах КАК ОППВСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ОППВСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ОППВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ОППВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;

	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	
	// ФизлицаБезПраваНаПенсию
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц не имеющих право на пенсионное обеспечение
	ФизлицаБезПраваНаПенсиюТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ФизЛицаБезПраваНаПенсию
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезПраваНаПенсиюТекст;
	Запрос.Выполнить();
	ФизлицаБезПраваНаПенсиюТекст = "ВТ_ФизЛицаБезПраваНаПенсию";
		
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ФизЛицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";

	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТ_ФизЛицаПенсионеры";

	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет взносов
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ОППВСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ОППВСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаБезПраваНаПенсию.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезПраваНаПенсию,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера
	|
	|ПОМЕСТИТЬ ВТ_Периоды	
	|ИЗ
	|	РегистрНакопления.ОППВСведенияОДоходах КАК ОППВСведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ОППВСведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезПраваНаПенсиюТекст + " КАК ФизлицаБезПраваНаПенсию
	|		ПО ОППВСведенияОДоходах.ФизЛицо = ФизлицаБезПраваНаПенсию.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО ОППВСведенияОДоходах.ФизЛицо = ФизлицаПенсионеры.ФизЛицо
	|
	|ГДЕ
	|	ОППВСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ОППВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОППВСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОППВСведенияОДоходах.Период, МЕСЯЦ)
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТ_Периоды";

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые взносами доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	ОППВОбороты.ФизЛицо КАК ФизЛицо,
	|	ОППВОбороты.Период КАК Период,
	|	СУММА(ОППВОбороты.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ОППВОбороты.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(ОППВОбороты.ПризнакФизЛицаПенсионера) = 0
	|			ТОГДА СУММА(ОППВОбороты.СуммаДоходаОборотНеОблагаетсяЦеликом) - СУММА(ОППВОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ОППВОбороты.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(ОППВОбороты.ПризнакФизЛицаПенсионера) = 0
	|			ТОГДА СУММА(ОППВОбороты.ОблагаемаяБазаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	МАКСИМУМ(ОППВОбороты.ПризнакФизЛицаБезПраваНаПенсию) КАК ПризнакФизЛицаБезПраваНаПенсию,
	|	МАКСИМУМ(ОППВОбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера
	|
	|ПОМЕСТИТЬ ВТ_Доходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОППВСведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ОППВСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СУММА(ОППВСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаОборот,
	|		СУММА(ВЫБОР 
	|				КОГДА ОППВСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|					ТОГДА ОППВСведенияОДоходах.СуммаДоходаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаДоходаОборотНеОблагаетсяЦеликом,
	|	 	СУММА(ВЫБОР 
	|				КОГДА ОППВСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|					ТОГДА ОППВСведенияОДоходах.СуммаВычетаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаВычетаОборот,
	|	 	СУММА(ОППВСведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезПраваНаПенсию) КАК ПризнакФизЛицаБезПраваНаПенсию,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера
	|	ИЗ
	|		РегистрНакопления.ОППВСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					Налогоплательщик = &парамНалогоплательщик
	|					И ПериодРегистрации <= &парамКонецПериодаРегистрации) КАК ОППВСведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
	|			ПО Работники.Физлицо = ОППВСведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ОППВСведенияОДоходах.Период, МЕСЯЦ)
	|
	|	СГРУППИРОВАТЬ ПО
	|		ОППВСведенияОДоходах.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ОППВСведенияОДоходах.Период, МЕСЯЦ)) КАК ОППВОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОППВОбороты.Период,
	|	ОППВОбороты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТ_Доходы";
	
	// ОППВРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные профессиональные пенсионные взносы (приходы по регистру ОППВРасчетыСФондами)
	//  для СписокФизлиц

	ОППВРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ОППВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|			ТОГДА СУММА(ОППВРасчетыСФондами.Взнос)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленныйВзнос
	|
	|ПОМЕСТИТЬ ВТ_ОППВРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОППВРасчетыСФондами КАК ОППВРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОППВРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	ОППВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ОППВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ОППВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ОППВРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	ОППВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ОППВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И 
	|	ОППВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) И 
	|	ОППВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОППВРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОППВРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОППВРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";

	Запрос.Текст = ОППВРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОППВРасчетыСФондамиТекст = "ВТ_ОППВРасчетыСФондами";

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОППВ для каждого периода исчисления взносов с учетом приоритетов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПрофессиональныеПенсионныеВзносы)
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПрофессиональныеПенсионныеВзносы)
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОППВ для каждого периода исчисления взносов с наивысшим приоритетом
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахНалоговСборовОтчислений.Период,
	|			МИНИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахНалоговСборовОтчислений.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Приоритет = СведенияОСтавкахНалоговСборовОтчислений.Приоритет
	|";
	
	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	
	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОППВ для каждого периода исчисления взносов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТ_СведенияОСтавкахНалоговСборовОтчислений
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			МАКСИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|				ПО СведенияОСтавкахНалоговСборовОтчислений.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	Запрос.Выполнить();
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "ВТ_СведенияОСтавкахНалоговСборовОтчислений";

	ТипЗначенияОППВТекст  = "ЧИСЛО(15, 2)";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";

	// облагаемая база за месяц
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// облагаемая база
	ПолеОблагаемаяБазаЗаМесяц = ПолеОблагаемыйДоходЗаМесяц;
	
	// сумма взносов исчисленная
	ПолеВзносыИсчисленные = 
	"(ВЫРАЗИТЬ((" + ПолеОблагаемыйДоходЗаМесяц + ") * СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК " + ТипЗначенияОППВТекст + "))";
	
	// сумма ранее исчисленных взносов
	ПолеРанееВзносыИсчисленные = "ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныйВзнос, 0)";    

	// ИсчисленныйОППВ
	//	Поля:
	//		Физлицо
	//		ВзносыИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее взносы за месяц и производит расчет взносов

	ИсчисленныйОППВТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезПраваНаПенсию,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеОблагаемаяБазаЗаМесяц + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеОблагаемаяБазаЗаМесяц + " - " + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК ОблагаемаяБаза,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	" + ПолеВзносыИсчисленные + " КАК ВзносЗаПериод,
	|	" + ПолеРанееВзносыИсчисленные + " КАК РанееИсчисленныйВзнос,
	|	" + ПолеВзносыИсчисленные + "-" + ПолеРанееВзносыИсчисленные + " КАК ВзносИсчисленный
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ОППВРасчетыСФондамиТекст+" КАК ОПВРасчетыСФондами
	|		ПО ОПВРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ОПВРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахНалоговСборовОтчисленийТекст+" КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период
	|";

	Запрос.Текст = ИсчисленныйОППВТекст;	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаОППВ()

// Получить данные для расчета ОПВР
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные взносы 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ОПВР
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаОПВР(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено) Экспорт
	Возврат ПолучитьДанныеДляРасчетаОПВРПосле2024(ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса);
	
КонецФункции // ПолучитьДанныеДляРасчетаОПВР()

// Получить данные для расчета ОПВР
// Параметры: 
//  ПериодРегистрации - дата периода, за который учитываются зарегистрированные доходы и исчисленные взносы 
//  Организация - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ОПВР
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаОПВРПосле2024(ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса) Экспорт
										
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	
	РеквизитыНалогоплательщика = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Налогоплательщик, "ИндивидуальныйПредприниматель");
	Запрос.УстановитьПараметр("парамИндивидуальныйПредприниматель", РеквизитыНалогоплательщика.ИндивидуальныйПредприниматель);
	
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для Каждого ПараметрЗапроса Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(ПараметрЗапроса.Ключ, ПараметрЗапроса.Значение);
		КонецЦикла;
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОПВРСведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ОПВРСведенияОДоходах КАК ОПВРСведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = ОПВРСведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	ОПВРСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И ОПВРСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОПВРСведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ОПВРСведенияОДоходах КАК ОПВРСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ОПВРСведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ОПВРСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ОПВРСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;

	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	
	// ФизлицаБезПраваНаПенсию
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц не имеющих право на пенсионное обеспечение
	ФизлицаБезПраваНаПенсиюТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ФизЛицаБезПраваНаПенсию
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезПраваНаПенсиюТекст;
	Запрос.Выполнить();
	ФизлицаБезПраваНаПенсиюТекст = "ВТ_ФизЛицаБезПраваНаПенсию";
		
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_ФизЛицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";

	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТ_ФизЛицаПенсионеры";
	
	СписокГруппИнвалидности = Новый СписокЗначений;
	СписокГруппИнвалидности.Добавить("I");
	СписокГруппИнвалидности.Добавить("II");

	Запрос.УстановитьПараметр("парамИнвалид", Перечисления.ОтношениеКИнвалидности.Инвалид);
	Запрос.УстановитьПараметр("парамСписокГруппИнвалидности",  СписокГруппИнвалидности);
	Запрос.УстановитьПараметр("парамПустаяДата", '00010101');
	
	// ФизлицаИнвалидыБессрочно
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-инвалидов I и II группы, у которых инвалидность установлена бессрочно
	ФизлицаИнвалидыБессрочноТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОбИнвалидностиФизлиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаИнвалидыБессрочно
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамКонец) КАК СведенияОбИнвалидностиФизлиц
	|
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = &парамИнвалид И
	|	СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности В (&парамСписокГруппИнвалидности) И
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки = &парамПустаяДата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
	
	Запрос.Текст = ФизлицаИнвалидыБессрочноТекст;
	Запрос.Выполнить();
	ФизлицаИнвалидыБессрочноТекст = "ВТФизлицаИнвалидыБессрочно";

	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет взносов
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ОПВРСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ОПВРСведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаБезПраваНаПенсию.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезПраваНаПенсию,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера,
	|	ВЫБОР
	|		КОГДА НЕ (ФизлицаИнвалидыБессрочно.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаИнвалида
	|
	|ПОМЕСТИТЬ ВТ_Периоды	
	|ИЗ
	|	РегистрНакопления.ОПВРСведенияОДоходах КАК ОПВРСведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ОПВРСведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезПраваНаПенсиюТекст + " КАК ФизлицаБезПраваНаПенсию
	|		ПО ОПВРСведенияОДоходах.ФизЛицо = ФизлицаБезПраваНаПенсию.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО ОПВРСведенияОДоходах.ФизЛицо = ФизлицаПенсионеры.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаИнвалидыБессрочноТекст + " КАК ФизлицаИнвалидыБессрочно
	|		ПО ОПВРСведенияОДоходах.ФизЛицо = ФизлицаИнвалидыБессрочно.ФизЛицо
	|
	|ГДЕ
	|	ОПВРСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ОПВРСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРСведенияОДоходах.Период, МЕСЯЦ)
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТ_Периоды";

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые взносами доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	ОПВРОбороты.ФизЛицо КАК ФизЛицо,
	|	ОПВРОбороты.Период КАК Период,
	|	СУММА(ОПВРОбороты.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ОПВРОбороты.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(ОПВРОбороты.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(ОПВРОбороты.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВРОбороты.СуммаДоходаОборотНеОблагаетсяЦеликом) - СУММА(ОПВРОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ОПВРОбороты.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(ОПВРОбороты.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(ОПВРОбороты.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВРОбороты.ОблагаемаяБазаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	МАКСИМУМ(ОПВРОбороты.ПризнакФизЛицаБезПраваНаПенсию) КАК ПризнакФизЛицаБезПраваНаПенсию,
	|	МАКСИМУМ(ОПВРОбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ОПВРОбороты.ПризнакФизЛицаИнвалида) КАК ПризнакФизЛицаИнвалида
	|ПОМЕСТИТЬ ВТ_Доходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОПВРСведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ОПВРСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СУММА(ОПВРСведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаОборот,
	|		СУММА(ВЫБОР 
	|				КОГДА ОПВРСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|					ТОГДА ОПВРСведенияОДоходах.СуммаДоходаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаДоходаОборотНеОблагаетсяЦеликом,
	|	 	СУММА(ВЫБОР 
	|				КОГДА ОПВРСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|					ТОГДА ОПВРСведенияОДоходах.СуммаВычетаОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СуммаВычетаОборот,
	|	 	СУММА(ОПВРСведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезПраваНаПенсию) КАК ПризнакФизЛицаБезПраваНаПенсию,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаИнвалида) КАК ПризнакФизЛицаИнвалида
	|	ИЗ
	|		РегистрНакопления.ОПВРСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					Налогоплательщик = &парамНалогоплательщик
	|					И ПериодРегистрации <= &парамКонецПериодаРегистрации) КАК ОПВРСведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
	|			ПО Работники.Физлицо = ОПВРСведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ОПВРСведенияОДоходах.Период, МЕСЯЦ)
	|
	|	СГРУППИРОВАТЬ ПО
	|		ОПВРСведенияОДоходах.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ОПВРСведенияОДоходах.Период, МЕСЯЦ)) КАК ОПВРОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРОбороты.Период,
	|	ОПВРОбороты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТ_Доходы";
	
	// ОПВРРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленныеВзносы
	//
	//	Описание:
	//	Выбирает исчисленные профессиональные пенсионные взносы (приходы по регистру ОПВРРасчетыСФондами)
	//  для СписокФизлиц

	ОПВРРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ОПВРРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезПраваНаПенсию) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаИнвалида) = 0
	|			ТОГДА СУММА(ОПВРРасчетыСФондами.Взнос)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленныйВзнос
	|
	|ПОМЕСТИТЬ ВТ_ОПВРРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ОПВРРасчетыСФондами КАК ОПВРРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ОПВРРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	ОПВРРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ОПВРРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ОПВРРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ОПВРРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	ОПВРРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ОПВРРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И 
	|	ОПВРРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог) И 
	|	ОПВРРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРРасчетыСФондами.МесяцНалоговогоПериода,
	|	ОПВРРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОПВРРасчетыСФондами.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ОПВРРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)";

	Запрос.Текст = ОПВРРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ОПВРРасчетыСФондамиТекст = "ВТ_ОПВРРасчетыСФондами";
	
	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления взносов
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК МинимальноеОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 50, 0) КАК ОграничениеПоДоходам
	|
	|ПОМЕСТИТЬ ВТРазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТРазмерОграниченияПоДоходам";
 
	 //СведенияОбИндивидуальномПредпринимателе
	 
	 СведенияОбИндивидуальномПредпринимателеТекст = 
	 "ВЫБРАТЬ
	 |	ЕСТЬNULL(Организации.ИндивидуальныйПредприниматель, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ИндивидуальныйПредприниматель
	 |ПОМЕСТИТЬ ВТСведенияОбИндивидуальномПредпринимателе
	 |ИЗ
	 |	РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамПериодРегистрации, ) КАК УчетнаяПолитикаНалоговыйУчетСрезПервых
	 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	 |		ПО УчетнаяПолитикаНалоговыйУчетСрезПервых.Организация = Организации.Ссылка
	 |ГДЕ
	 |	Организации.Ссылка = &парамНалогоплательщик";
	 
	 Запрос.Текст = СведенияОбИндивидуальномПредпринимателеТекст;
	 Запрос.Выполнить();
	 СведенияОбИндивидуальномПредпринимателеТекст = "ВТСведенияОбИндивидуальномПредпринимателе";

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОПВР для каждого периода исчисления взносов с учетом приоритетов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидДохода КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносыРаботодателя)
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидДохода КАК ВидДохода,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|ГДЕ
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносыРаботодателя)
	|	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И СведенияОСтавкахНалоговСборовОтчислений.Период <= &парамКонец
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;

	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОПВР для каждого периода исчисления взносов с наивысшим приоритетом
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
	|	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка,
	|	СведенияОСтавкахНалоговСборовОтчислений.ВидДохода
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахНалоговСборовОтчислений.Период,
	|			СведенияОСтавкахНалоговСборовОтчислений.ВидДохода,
	|			МИНИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахНалоговСборовОтчислений.ВидДохода,
	|			СведенияОСтавкахНалоговСборовОтчислений.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Приоритет = СведенияОСтавкахНалоговСборовОтчислений.Приоритет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УчетнаяПолитика.Период КАК Период,
	|	ЕСТЬNULL(УчетнаяПолитика.СтавкаОПВРдляИП, 0) КАК Ставка,
	|	ВЫРАЗИТЬ(""ИП"" КАК СТРОКА(2)) КАК ВидДохода
	|ИЗ 
	|РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитика
	|			
	|ГДЕ
	|	УчетнаяПолитика.Организация = &парамНалогоплательщик
	|	И УчетнаяПолитика.Период >= ДАТАВРЕМЯ(2024, 1, 1)
	|";
	
	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	
	// СведенияОСтавкахНалоговСборовОтчислений
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ОПВР для каждого периода исчисления взносов
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период,
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ВидДохода,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТ_СведенияОСтавкахНалоговСборовОтчислений
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			СведенияОСтавкахНалоговСборовОтчислений.ВидДохода,
	|			МАКСИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|				ПО СведенияОСтавкахНалоговСборовОтчислений.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахНалоговСборовОтчислений.ВидДохода,
	|			Периоды.Период) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахНалоговСборовОтчисленийТекст + ") КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			 И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ВидДохода = СведенияОСтавкахНалоговСборовОтчислений.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахНалоговСборовОтчисленийТекст;
	Запрос.Выполнить();
	СведенияОСтавкахНалоговСборовОтчисленийТекст = "ВТ_СведенияОСтавкахНалоговСборовОтчислений";

	ТипЗначенияОПВРТекст  = "ЧИСЛО(15, 2)";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";

	// облагаемая база за месяц
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// облагаемая база
	ПолеОблагаемаяБазаЗаМесяц = ПолеОблагаемыйДоходЗаМесяц;
	
	// сумма ранее исчисленных взносов
	ПолеРанееВзносыИсчисленные = "ЕСТЬNULL(ОПВРасчетыСФондами.ИсчисленныйВзнос, 0)";    

	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// минимальное ограничение по доходам
	ПолеРазмерМинимальногоОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.МинимальноеОграничениеПоДоходам, 0)";
	
	// облагаемый доход за месяц
	ПолеБазаДляИсчисленияОПВР = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " >= " + ПолеРазмерОграниченияПоДоходам + "
	|		ТОГДА " + ПолеРазмерОграниченияПоДоходам + "
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > 0
	|		ТОГДА ВЫБОР
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " < " + ПолеРазмерМинимальногоОграниченияПоДоходам + "
	|				ТОГДА " + ПолеРазмерМинимальногоОграниченияПоДоходам + "
	|			ИНАЧЕ " + ПолеОблагаемыйДоходЗаМесяц + "
	|		КОНЕЦ
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// сумма отчислений исчисленная
	ПолеВзносыИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеБазаДляИсчисленияОПВР +" > 0) 
	|					ТОГДА " + ПолеБазаДляИсчисленияОПВР + " * СведенияОСтавкахНалоговСборовОтчислений.Ставка
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК " + ТипЗначенияОПВРТекст + "))";

	// ИсчисленныйОПВР
	//	Поля:
	//		Физлицо
	//		ВзносыИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее взносы за месяц и производит расчет взносов

	ИсчисленныйОПВРТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезПраваНаПенсию,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	ДоходыЗаМесяц.ПризнакФизЛицаИнвалида,
	|	ЕСТЬNULL(СведенияОбИндивидуальномПредпринимателе.ИндивидуальныйПредприниматель, ЛОЖЬ) КАК ИндивидуальныйПредприниматель,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеБазаДляИсчисленияОПВР + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеБазаДляИсчисленияОПВР + " - " + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК ОблагаемаяБаза,
	|	ЕСТЬNULL(СведенияОСтавкахНалоговСборовОтчислений.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	ЕСТЬNULL(" + ПолеВзносыИсчисленные + ", 0) КАК ВзносЗаПериод,
	|	ЕСТЬNULL(" + ПолеРанееВзносыИсчисленные + ", 0) КАК РанееИсчисленныйВзнос,
	|	ЕСТЬNULL(" + ПолеВзносыИсчисленные + ", 0) -" + ПолеРанееВзносыИсчисленные + " КАК ВзносИсчисленный,
	|	" + ПолеРазмерМинимальногоОграниченияПоДоходам + " КАК РазмерМинимальногоОграниченияПоДоходам,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходам,
	|	(ФизическиеЛица.ДатаРождения < ДАТАВРЕМЯ(1975, 1, 1) И НЕ ФизическиеЛица.ДатаРождения = ДАТАВРЕМЯ(1, 1, 1)) КАК ВозрастНеПодходит,
	|	(ФизическиеЛица.ДатаРождения = ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаРожденияНеУказана
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ОПВРРасчетыСФондамиТекст+" КАК ОПВРасчетыСФондами
	|		ПО ОПВРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ОПВРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахНалоговСборовОтчисленийТекст+" КАК СведенияОСтавкахНалоговСборовОтчислений
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
	|			И ВЫБОР 
	|				КОГДА ДоходыЗаМесяц.Физлицо = &парамИндивидуальныйПредприниматель
	|					ТОГДА СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = ""ИП""
	|				ИНАЧЕ СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ПустаяСсылка)
	|			КОНЕЦ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|	ПО ДоходыЗаМесяц.ФизЛицо = ФизическиеЛица.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОбИндивидуальномПредпринимателеТекст+" КАК СведенияОбИндивидуальномПредпринимателе
	|		ПО ДоходыЗаМесяц.Физлицо = СведенияОбИндивидуальномПредпринимателе.ИндивидуальныйПредприниматель
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период
	|";

	Запрос.Текст = ИсчисленныйОПВРТекст;	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаОПВР()

// Получить данные для расчета ВОСМС
// Параметры: 
//  ПоследнийМесяцНалоговогоПериода - максимальный налоговый период, за который расчитываются зарегистрированные доходы и исчисленные отчисления 
//  ПериодРегистрации - дата периода, в котором учитываются зарегистрированные доходы и исчисленные отчисления 
//  Налогоплательщик - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ООСМС
//	ОтражениеПоПериодуРегистрации - булево
//	ДополнительныеПараметрыЗапроса - Структура, дополнительные отборы
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаВОСМС(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь) Экспорт
	
	Если ПериодРегистрации >= '20210101' Тогда
		// Расчет ВОСМС с 2020 года
		РезультатЗапроса = ПолучитьДанныеДляРасчетаВОСМСПосле2021(ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик, 
																Регистратор, 
																СписокФизЛицТекст,
																ОтражениеПоПериодуРегистрации,
																ДополнительныеПараметрыЗапроса,
																ЭтоРасчетПервойПоловиныМесяца);
		                                                          
    ИначеЕсли ПериодРегистрации >= '20200101' Тогда
		// Расчет ВОСМС с 2020 года
		РезультатЗапроса = ПолучитьДанныеДляРасчетаВОСМСПосле2020(ПоследнийМесяцНалоговогоПериода,
																ПериодРегистрации,
																Налогоплательщик,
																Регистратор,
																СписокФизЛицТекст,
																ОтражениеПоПериодуРегистрации,
																ДополнительныеПараметрыЗапроса,
																ЭтоРасчетПервойПоловиныМесяца);
		
	ИначеЕсли ПериодРегистрации >= '20180101' Тогда
		// Расчет ВОСМС с 2018 года не производится
		РезультатЗапроса = Неопределено;
		
	Иначе
		// Расчет ВОСМС с ограничением на мин. сумму объекта исчисления 1 МЗП
		РезультатЗапроса = ПолучитьДанныеДляРасчетаВОСМСДо2018(ПоследнийМесяцНалоговогоПериода,
																ПериодРегистрации,
																Налогоплательщик,
																Регистратор,
																СписокФизЛицТекст,
																ОтражениеПоПериодуРегистрации,
																ДополнительныеПараметрыЗапроса,
																ЭтоРасчетПервойПоловиныМесяца);
		
	КонецЕсли;
	
	Возврат РезультатЗапроса;
	
КонецФункции

// Получить данные для расчета ВОСМС по правилам 2017 года
// Параметры: 
//  ПоследнийМесяцНалоговогоПериода - максимальный налоговый период, за который расчитываются зарегистрированные доходы и исчисленные отчисления 
//  ПериодРегистрации - дата периода, в котором учитываются зарегистрированные доходы и исчисленные отчисления 
//  Налогоплательщик - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ООСМС
//	ОтражениеПоПериодуРегистрации - булево
//	ДополнительныеПараметрыЗапроса - Структура, дополнительные отборы
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаВОСМСДо2018(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь)
	
	Если ОтражениеПоПериодуРегистрации И ПериодРегистрации < '20170701' Тогда
		Сообщить("Расчет Взносов ОСМС до июля 2017 года не предусмотрен.");
		Возврат Неопределено;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидВОСМС", 			Справочники.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	Запрос.УстановитьПараметр("парамИндивидуальныйПредприниматель", Налогоплательщик.ИндивидуальныйПредприниматель);

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВОСМССведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ВОСМССведенияОДоходах КАК ВОСМССведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = ВОСМССведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	ВОСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И ВОСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|	И ВОСМССведенияОДоходах.Активность
		|	И ВОСМССведенияОДоходах.Период >= ДАТАВРЕМЯ(2017, 7, 1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВОСМССведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ВОСМССведенияОДоходах КАК ВОСМССведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ВОСМССведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ВОСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ВОСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ВОСМССведенияОДоходах.Активность
	|	И ВОСМССведенияОДоходах.Период >= ДАТАВРЕМЯ(2017, 7, 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);

	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	Запрос.УстановитьПараметр("парамНачалоГода",			  НачалоГода(ПериодРегистрации));

	// ФизлицаБезМедицинскогоСтрахования
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц не подлежащих социальному медицинскому страхованию
	ФизлицаБезМедицинскогоСтрахованияТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаБезМедицинскогоСтрахования
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезМедицинскогоСтрахованияТекст;
	Запрос.Выполнить();
	ФизлицаБезМедицинскогоСтрахованияТекст = "ВТФизлицаБезМедицинскогоСтрахования";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТФизлицаПенсионеры";
	
	// ФизлицаИнвалиды
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-инвалидов
	ФизлицаИнвалидыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОбИнвалидностиФизлиц.Физлицо,
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки
	|ПОМЕСТИТЬ ВТ_ФизлицаИнвалиды
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамКонец) КАК СведенияОбИнвалидностиФизлиц
	|
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|";
	Запрос.Текст = ФизлицаИнвалидыТекст;
	Запрос.Выполнить();
	ФизлицаИнвалидыТекст = "ВТ_ФизлицаИнвалиды";

	// ФизлицаУчастникиВОВ
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц участников и инвалидов ВОВ
	ФизлицаУчастникиВОВТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОФизлицахУчастникахВОВ.ФизЛицо
	|ПОМЕСТИТЬ ВТ_ФизлицаУчастникиВОВ
	|ИЗ
	|	РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(&парамКонец) КАК СведенияОФизлицахУчастникахВОВ
	|
	|ГДЕ
	|	СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.УчастникВОВ)
	|	ИЛИ СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.ИнвалидВОВ)
	|";
	Запрос.Текст = ФизлицаУчастникиВОВТекст;
	Запрос.Выполнить();
	ФизлицаУчастникиВОВТекст = "ВТ_ФизлицаУчастникиВОВ";
	
	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет отчислений
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ВОСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВОСМССведенияОДоходах.ВидДохода КАК ВидДохода,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаБезМедицинскогоСтрахования.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаИнвалиды.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаИнвалида,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаУчастникиВОВ.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТПериодыФизЛиц
	|ИЗ
	|	РегистрНакопления.ВОСМССведенияОДоходах КАК ВОСМССведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ВОСМССведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезМедицинскогоСтрахованияТекст + " КАК ФизлицаБезМедицинскогоСтрахования
	|		ПО (ВЫБОР 
	|				КОГДА Работники.Физлицо ССЫЛКА Справочник.Контрагенты 
	|					ТОГДА Работники.Физлицо.Физлицо 
	|				ИНАЧЕ Работники.Физлицо
	|			КОНЕЦ) = ФизлицаБезМедицинскогоСтрахования.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО (ВЫБОР 
	|				КОГДА Работники.Физлицо ССЫЛКА Справочник.Контрагенты 
	|					ТОГДА Работники.Физлицо.Физлицо 
	|				ИНАЧЕ Работники.Физлицо
	|			КОНЕЦ) = ФизлицаПенсионеры.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаИнвалидыТекст + " КАК ФизлицаИнвалиды
	|		ПО (ВЫБОР 
	|				КОГДА Работники.Физлицо ССЫЛКА Справочник.Контрагенты 
	|					ТОГДА Работники.Физлицо.Физлицо 
	|				ИНАЧЕ Работники.Физлицо
	|			КОНЕЦ) = ФизлицаИнвалиды.ФизЛицо
	|			И (ФизлицаИнвалиды.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	| 				ИЛИ КОНЕЦПЕРИОДА(ФизлицаИнвалиды.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаУчастникиВОВТекст + " КАК ФизлицаУчастникиВОВ
	|		ПО (ВЫБОР 
	|				КОГДА Работники.Физлицо ССЫЛКА Справочник.Контрагенты 
	|					ТОГДА Работники.Физлицо.Физлицо 
	|				ИНАЧЕ Работники.Физлицо
	|			КОНЕЦ) = ФизлицаУчастникиВОВ.ФизЛицо
	|
	|ГДЕ
	|	ВОСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ВОСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|	И ВОСМССведенияОДоходах.Активность
	|" + ?(Налогоплательщик.ИндивидуальныйПредприниматель <> Справочники.ФизическиеЛица.ПустаяСсылка() И ПериодРегистрации >= Дата(2017,7,1), "
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&парамПериодРегистрации,
	|	&парамИндивидуальныйПредприниматель,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя),
	|	ВЫБОР
	|		КОГДА &парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаБезМедицинскогоСтрахованияТекст + " КАК ФизлицаБезМедицинскогоСтрахования) 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры) 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаИнвалидыТекст + " КАК ФизлицаИнвалиды
	|														ГДЕ
	|														ФизлицаИнвалиды.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	| 															ИЛИ КОНЕЦПЕРИОДА(ФизлицаИнвалиды.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)) 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаУчастникиВОВТекст + " КАК ФизлицаУчастникиВОВ) 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ГДЕ
	|	&парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ (" + СписокФизЛицТекст + ") КАК Работники)
	|" , "") + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ),
	|	ВОСМССведенияОДоходах.ФизЛицо,
	|	ВОСМССведенияОДоходах.ВидДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыФизЛиц.Период,
	|	ПериодыФизЛиц.ФизЛицо,
	|	ПериодыФизЛиц.ВидДохода КАК ВидДохода,
	|	МАКСИМУМ(ПериодыФизЛиц.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	МАКСИМУМ(ПериодыФизЛиц.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ПериодыФизЛиц.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|	МАКСИМУМ(ПериодыФизЛиц.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	ВТПериодыФизЛиц КАК ПериодыФизЛиц
	|СГРУППИРОВАТЬ ПО
	|	ПериодыФизЛиц.Период,
	|   ПериодыФизЛиц.ФизЛицо,
	|   ПериодыФизЛиц.ВидДохода
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТПериоды";

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые взносами доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	ВОСМСОбороты.ФизЛицо КАК ФизЛицо,
	|	ВОСМСОбороты.Период КАК Период,
	|	ВОСМСОбороты.ВидДохода Как ВидДохода,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ВОСМСОбороты.СуммаДоходаОборот) - СУММА(ВОСМСОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ВОСМСОбороты.ОблагаемаяБазаОборот) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|	МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТДоходыФизЛиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВОСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		ВОСМССведенияОДоходах.ВидДохода,
	|		СУММА(ВЫБОР 
	|			КОГДА ВОСМССведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА ВОСМССведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	 	СУММА(ВОСМССведенияОДоходах.СуммаВычетаОборот) КАК СуммаВычетаОборот,
	|		СУММА(ВОСМССведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|		МАКСИМУМ(Работники.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|	ИЗ
	|		РегистрНакопления.ВОСМССведенияОДоходах.Обороты(
	|				&парамНачало,
	|				&парамКонец,
	|				МЕСЯЦ,
	|				ПериодРегистрации <= &парамКонецПериодаРегистрации
	|				И Налогоплательщик = &парамНалогоплательщик) КАК ВОСМССведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
	|			ПО Работники.Физлицо = ВОСМССведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ)
	|				И Работники.ВидДохода = ВОСМССведенияОДоходах.ВидДохода
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВОСМССведенияОДоходах.ФизЛицо,
	|		ВОСМССведенияОДоходах.ВидДохода,
	|		НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ)) КАК ВОСМСОбороты
	|
	|ГДЕ 
	|	 ВОСМСОбороты.ФизЛицо <> &парамИндивидуальныйПредприниматель
	|
	|СГРУППИРОВАТЬ ПО
	|	ВОСМСОбороты.Период,
	|	ВОСМСОбороты.Физлицо,
	|	ВОСМСОбороты.ВидДохода
	|" + ?(Налогоплательщик.ИндивидуальныйПредприниматель <> Справочники.ФизическиеЛица.ПустаяСсылка() И ПериодРегистрации >= Дата(2017,7,1), "
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&парамИндивидуальныйПредприниматель,
	|	&парамПериодРегистрации,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя),
	|	0,
	|	0,
	|	Работники.ПризнакФизЛицаБезМедицинскогоСтрахования КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	Работники.ПризнакФизЛицаПенсионера КАК ПризнакФизЛицаПенсионера,
	|	Работники.ПризнакФизлицаИнвалида КАК ПризнакФизлицаИнвалида,
	|	Работники.ПризнакФизлицаУчастникаВОВ КАК ПризнакФизлицаУчастникаВОВ
	|ИЗ
	|	" + ПериодыТекст + " КАК Работники
	|ГДЕ
	|	Работники.ФизЛицо = &парамИндивидуальныйПредприниматель
	|" , "") + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВОСМСОбороты.ФизЛицо,
	|	ВОСМСОбороты.Период,
	|	ВОСМСОбороты.ВидДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоходыФизЛиц.ФизЛицо,
	|	ДоходыФизЛиц.Период,
	|	ДоходыФизЛиц.ВидДохода,
	|	СУММА(ДоходыФизЛиц.ОблагаемыйДоход) КАК ОблагаемыйДоход,
	|	СУММА(ДоходыФизЛиц.ИсчисленнаяОблагаемаяБаза) КАК ИсчисленнаяОблагаемаяБаза,
	|	МАКСИМУМ(ДоходыФизЛиц.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	МАКСИМУМ(ДоходыФизЛиц.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ДоходыФизЛиц.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|	МАКСИМУМ(ДоходыФизЛиц.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	ВТДоходыФизЛиц КАК ДоходыФизЛиц
	|СГРУППИРОВАТЬ ПО
	|	ДоходыФизЛиц.Период,
	|   ДоходыФизЛиц.ФизЛицо,
	|	ДоходыФизЛиц.ВидДохода
	|";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТДоходы";

	// ВОСМСИсчисленные
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ВидДохода
	//		ИсчисленныйНалог
	//		Регистратор
	//		ВидПлатежа
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом) для СписокФизлиц
	ВОСМСИсчисленныеТекст = 
	"ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ВОСМСИсчисленные.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|		ВОСМСИсчисленные.ФизЛицо КАК ФизЛицо,
	|		ВОСМСИсчисленные.ВидДохода КАК ВидДохода,
	|		СУММА(ВОСМСИсчисленные.Взнос) КАК ИсчисленныйВзносЗаМесяц
	|ПОМЕСТИТЬ ВТ_ВОСМСИсчисленные
	|	ИЗ
	|		РегистрНакопления.ВОСМСИсчисленные КАК ВОСМСИсчисленные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК РаботникиОрганизации
	|			ПО (РаботникиОрганизации.Физлицо = ВОСМСИсчисленные.ФизЛицо)
	|	ГДЕ
	|		ВОСМСИсчисленные.МесяцНалоговогоПериода >= &парамНачалоГода
	|		И ВОСМСИсчисленные.МесяцНалоговогоПериода <= &парамКонец
	|		И ВОСМСИсчисленные.Налогоплательщик = &парамНалогоплательщик
	|		И ВОСМСИсчисленные.Регистратор <> &парамРегистратор
	|		И ВОСМСИсчисленные.Период <= &парамКонецПериодаРегистрации
	|		И ВОСМСИсчисленные.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|		И ВОСМСИсчисленные.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ВОСМСИсчисленные.МесяцНалоговогоПериода, МЕСЯЦ),
	|		ВОСМСИсчисленные.ФизЛицо,
	|		ВОСМСИсчисленные.ВидДохода";

	Запрос.Текст = ВОСМСИсчисленныеТекст;
	Запрос.Выполнить();
	ВОСМСИсчисленныеТекст = "ВТ_ВОСМСИсчисленные";
	
	//РасчетыСФондамиДругойРаботадатель
	
	ВТВОСМСРасчетыСФондамиДругойРаботадательТекст = "
	|ВЫБРАТЬ
	|	СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо КАК ФизЛицо,
	|	СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаИнвалида) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаУчастникаВОВ) = 0
	|			ТОГДА СУММА(СведенияПредыдущегоМестаРаботыФизЛиц.ВОСМС)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленныйВзносДругойРаботадатель
	|ПОМЕСТИТЬ ВТВОСМСРасчетыСФондамиДругойРаботадатель
	|ИЗ
	|	РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО (ВЫБОР 
	|				КОГДА РаботникиОрганизации.Физлицо Ссылка Справочник.Контрагенты
	|					ТОГДА РаботникиОрганизации.ФизЛицо.ФизЛицо = СведенияПредыдущегоМестаРаботыФизЛиц.Физлицо
	|				ИНАЧЕ РаботникиОрганизации.ФизЛицо = СведенияПредыдущегоМестаРаботыФизЛиц.Физлицо
	|			КОНЕЦ)
	|			И (РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, МЕСЯЦ))
	|ГДЕ
	|	СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода >= &парамНачало
	|	И СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода <= &парамКонец
	|	И СведенияПредыдущегоМестаРаботыФизЛиц.Налогоплательщик = &парамНалогоплательщик
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо,
	|	СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо,
	|	СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода";
	
	Запрос.Текст = ВТВОСМСРасчетыСФондамиДругойРаботадательТекст;
	Запрос.Выполнить();
	ВТВОСМСРасчетыСФондамиДругойРаботадательТекст = "ВТВОСМСРасчетыСФондамиДругойРаботадатель";
	
	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления взносов
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 15, 0) КАК ОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП
	|
	|ПОМЕСТИТЬ ВТРазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТРазмерОграниченияПоДоходам";

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления взносов
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахОСМС.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахОСМС.ВидДохода КАК ВидДохода,
	|	СведенияОСтавкахОСМС.СтавкаВзносы КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
	|
	|ГДЕ
	|	СведенияОСтавкахОСМС.Период <= &парамКонец
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахОСМССрезПоследних.Период,
	|	СведенияОСтавкахОСМССрезПоследних.ВидДохода,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТСведенияОСтавкахОСМС
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			СведенияОСтавкахОСМС.ВидДохода,
	|			МАКСИМУМ(СведенияОСтавкахОСМС.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|				ПО СведенияОСтавкахОСМС.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период,
	|			СведенияОСтавкахОСМС.ВидДохода) КАК СведенияОСтавкахОСМССрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|		ПО СведенияОСтавкахОСМССрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахОСМС.Период
	|			И СведенияОСтавкахОСМССрезПоследних.ВидДохода = СведенияОСтавкахОСМС.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахОСМССрезПоследних.Период,
	|	СведенияОСтавкахОСМССрезПоследних.ВидДохода
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;
	Запрос.Выполнить();
	СведенияОСтавкахОСМСТекст = "ВТСведенияОСтавкахОСМС";	

	ТипЗначенияВОСМСТекст  = "ЧИСЛО(15, 2)";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";

	// размер МЗП
	ПолеРазмерМЗП = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0)";
	
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// облагаемая база по ВОСМС
	ПолеБазаДляИсчисленияВОСМС = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > 0
	|		ТОГДА ВЫБОР 
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " < " + ПолеРазмерМЗП + "
	|				ТОГДА " + ПолеРазмерМЗП + "
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > " + ПолеРазмерОграниченияПоДоходам + "
	|				ТОГДА " + ПолеРазмерОграниченияПоДоходам + "
	|			ИНАЧЕ " + ПолеОблагаемыйДоходЗаМесяц + "
	|		КОНЕЦ
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// Ранее исчисленная облагаемая база
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// сумма взносов исчисленная
	ПолеВзносыИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеБазаДляИсчисленияВОСМС +" > 0) 
	|					ТОГДА  " + ПолеБазаДляИсчисленияВОСМС +" * СведенияОСтавкахОСМС.Ставка
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК " + ТипЗначенияВОСМСТекст + "))";
	
	// сумма ранее исчисленных взносов
	ПолеРанееВзносыИсчисленные = "ЕСТЬNULL(ВОСМСИсчисленные.ИсчисленныйВзносЗаМесяц, 0)";

	// сумма ранее исчисленных взносов от другого работодателя
	
	ИсчисленныйВзносДругойРаботадатель = "ЕСТЬNULL(ВТВОСМСРасчетыСФондамиДругойРаботадатель.ИсчисленныйВзносДругойРаботадатель, 0)";

	ПолеРазмерОграниченияВОСМС = "ВЫРАЗИТЬ(" + ПолеРазмерОграниченияПоДоходам + " * СведенияОСтавкахОСМС.Ставка - " + ИсчисленныйВзносДругойРаботадатель + " КАК " + ТипЗначенияВОСМСТекст + ")";
	
	ПолеРазмерОграниченияВОСМС = 
	"(Выбор 
	|		Когда " + ПолеРазмерОграниченияВОСМС + " <  0  
	|			Тогда 0  
	|       Иначе " + ПолеРазмерОграниченияВОСМС + " 
	|	КОНЕЦ)";
	
	ПолеВзносыИсчисленные = 
	"(Выбор 
	|		Когда " + ПолеРазмерОграниченияВОСМС + " < " + ПолеВзносыИсчисленные + " И " + ИсчисленныйВзносДругойРаботадатель + " > 0  
	|			Тогда " + ПолеРазмерОграниченияВОСМС + "  
	|       Иначе " + ПолеВзносыИсчисленные + " 
	|	КОНЕЦ)";
	
	// ИсчисленныеВОСМС
	//	Поля:
	//		Физлицо
	//		ВзносыИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее взносы за месяц и производит расчет 
	ИсчисленныеВОСМСТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.ФизЛицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ВидДохода,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	ДоходыЗаМесяц.ПризнакФизлицаИнвалида,
	|	ДоходыЗаМесяц.ПризнакФизлицаУчастникаВОВ,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеБазаДляИсчисленияВОСМС + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходам,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	" + ПолеРазмерМЗП + " КАК РазмерМЗП,
	|	" + ПолеВзносыИсчисленные + " КАК ВОСМСЗаМесяц,
	|	" + ПолеРанееВзносыИсчисленные + " КАК РанееИсчисленныйВзнос,
	|	" + ПолеБазаДляИсчисленияВОСМС + " - " + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК ОблагаемаяБаза,
	|	" + ПолеВзносыИсчисленные + "-" + ПолеРанееВзносыИсчисленные + "Как ВзносИсчисленный, 
	|	ВТВОСМСРасчетыСФондамиДругойРаботадатель.ИсчисленныйВзносДругойРаботадатель Как ИсчисленныйВзносДругойРаботадатель
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ВОСМСИсчисленныеТекст + " КАК ВОСМСИсчисленные
	|		ПО ДоходыЗаМесяц.ФизЛицо = ВОСМСИсчисленные.ФизЛицо
	|			И ДоходыЗаМесяц.Период = ВОСМСИсчисленные.МесяцНалоговогоПериода
	|			И ДоходыЗаМесяц.ВидДохода = ВОСМСИсчисленные.ВидДохода
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ВТВОСМСРасчетыСФондамиДругойРаботадательТекст+" КАК ВТВОСМСРасчетыСФондамиДругойРаботадатель
	|		ПО ВТВОСМСРасчетыСФондамиДругойРаботадатель.Период = ДоходыЗаМесяц.Период 
	|			И ВЫБОР 
	|				КОГДА ДоходыЗаМесяц.Физлицо Ссылка Справочник.Контрагенты
	|					ТОГДА ВТВОСМСРасчетыСФондамиДругойРаботадатель.ФизЛицо = ДоходыЗаМесяц.Физлицо.ФизЛицо
	|				ИНАЧЕ ВТВОСМСРасчетыСФондамиДругойРаботадатель.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|			КОНЕЦ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахОСМСТекст+" КАК СведенияОСтавкахОСМС
	|	ПО ДоходыЗаМесяц.Период = СведенияОСтавкахОСМС.Период
	|		И ДоходыЗаМесяц.ВидДохода = СведенияОСтавкахОСМС.ВидДохода
 	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо, 
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ВидДохода";

	Запрос.Текст = ИсчисленныеВОСМСТекст;	
	Возврат Запрос.Выполнить();
									
КонецФункции		

// Получить данные для расчета ВОСМС по правилам 2020 года
// Параметры: 
//  ПоследнийМесяцНалоговогоПериода - максимальный налоговый период, за который расчитываются зарегистрированные доходы и исчисленные отчисления 
//  ПериодРегистрации - дата периода, в котором учитываются зарегистрированные доходы и исчисленные отчисления 
//  Налогоплательщик - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ООСМС
//	ОтражениеПоПериодуРегистрации - булево
//	ДополнительныеПараметрыЗапроса - Структура, дополнительные отборы
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаВОСМСПосле2020(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидВОСМС", 			Справочники.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	Запрос.УстановитьПараметр("парамИндивидуальныйПредприниматель", Налогоплательщик.ИндивидуальныйПредприниматель);

	ПрименятьКорректировкуВОСМС = ПрименятьКорректировкуПрочихНалоговВзносовОтчислений(Налогоплательщик, ПериодРегистрации)
		И НЕ ДополнительныеПараметрыЗапроса = Неопределено
		И НЕ ДополнительныеПараметрыЗапроса.Свойство("ИсчисленныйИПН") = Неопределено
		И (НЕ ДополнительныеПараметрыЗапроса.Свойство("ТолькоДоходОтНалоговогоАгента")
			ИЛИ НЕ ДополнительныеПараметрыЗапроса.ТолькоДоходОтНалоговогоАгента);	

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
		
		Если НЕ ДополнительныеПараметрыЗапроса.Свойство("ТолькоДоходОтНалоговогоАгента") Тогда
			Запрос.УстановитьПараметр("ТолькоДоходОтНалоговогоАгента", Ложь);
		КонецЕсли;
		
	Иначе
		
		Запрос.УстановитьПараметр("ТолькоДоходОтНалоговогоАгента", Ложь);
		
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВОСМССведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ВОСМССведенияОДоходах КАК ВОСМССведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = ВОСМССведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	ВОСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И ВОСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|	И ВОСМССведенияОДоходах.Активность
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВОСМССведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ВОСМССведенияОДоходах КАК ВОСМССведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ВОСМССведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ВОСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ВОСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ВОСМССведенияОДоходах.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);

	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	Запрос.УстановитьПараметр("парамНачалоГода",			  НачалоГода(ПериодРегистрации));

	// ФизлицаБезМедицинскогоСтрахования
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц не подлежащих социальному медицинскому страхованию
	ФизлицаБезМедицинскогоСтрахованияТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаБезМедицинскогоСтрахования
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезМедицинскогоСтрахованияТекст;
	Запрос.Выполнить();
	ФизлицаБезМедицинскогоСтрахованияТекст = "ВТФизлицаБезМедицинскогоСтрахования";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТФизлицаПенсионеры";
	
	// ФизлицаИнвалиды
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-инвалидов
	ФизлицаИнвалидыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОбИнвалидностиФизлиц.Физлицо,
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки
	|ПОМЕСТИТЬ ВТ_ФизлицаИнвалиды
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамКонец) КАК СведенияОбИнвалидностиФизлиц
	|
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|";
	Запрос.Текст = ФизлицаИнвалидыТекст;
	Запрос.Выполнить();
	ФизлицаИнвалидыТекст = "ВТ_ФизлицаИнвалиды";

	// ФизлицаУчастникиВОВ
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц участников и инвалидов ВОВ
	ФизлицаУчастникиВОВТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОФизлицахУчастникахВОВ.ФизЛицо
	|ПОМЕСТИТЬ ВТ_ФизлицаУчастникиВОВ
	|ИЗ
	|	РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(&парамКонец) КАК СведенияОФизлицахУчастникахВОВ
	|
	|ГДЕ
	|	СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.УчастникВОВ)
	|	ИЛИ СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.ИнвалидВОВ)
	|";
	Запрос.Текст = ФизлицаУчастникиВОВТекст;
	Запрос.Выполнить();
	ФизлицаУчастникиВОВТекст = "ВТ_ФизлицаУчастникиВОВ";
	
	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет отчислений
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ВОСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВОСМССведенияОДоходах.ВидДохода КАК ВидДохода,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаБезМедицинскогоСтрахования.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаИнвалиды.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаИнвалида,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаУчастникиВОВ.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТПериодыФизЛиц
	|ИЗ
	|	РегистрНакопления.ВОСМССведенияОДоходах КАК ВОСМССведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ВОСМССведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезМедицинскогоСтрахованияТекст + " КАК ФизлицаБезМедицинскогоСтрахования
	|		ПО (ВЫБОР 
	|				КОГДА Работники.Физлицо ССЫЛКА Справочник.Контрагенты 
	|					ТОГДА Работники.Физлицо.Физлицо 
	|				ИНАЧЕ Работники.Физлицо
	|			КОНЕЦ) = ФизлицаБезМедицинскогоСтрахования.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО (ВЫБОР 
	|				КОГДА Работники.Физлицо ССЫЛКА Справочник.Контрагенты 
	|					ТОГДА Работники.Физлицо.Физлицо 
	|				ИНАЧЕ Работники.Физлицо
	|			КОНЕЦ) = ФизлицаПенсионеры.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаИнвалидыТекст + " КАК ФизлицаИнвалиды
	|		ПО (ВЫБОР 
	|				КОГДА Работники.Физлицо ССЫЛКА Справочник.Контрагенты 
	|					ТОГДА Работники.Физлицо.Физлицо 
	|				ИНАЧЕ Работники.Физлицо
	|			КОНЕЦ) = ФизлицаИнвалиды.ФизЛицо
	|			И (ФизлицаИнвалиды.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	| 				ИЛИ КОНЕЦПЕРИОДА(ФизлицаИнвалиды.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаУчастникиВОВТекст + " КАК ФизлицаУчастникиВОВ
	|		ПО (ВЫБОР 
	|				КОГДА Работники.Физлицо ССЫЛКА Справочник.Контрагенты 
	|					ТОГДА Работники.Физлицо.Физлицо 
	|				ИНАЧЕ Работники.Физлицо
	|			КОНЕЦ) = ФизлицаУчастникиВОВ.ФизЛицо
	|
	|ГДЕ
	|	ВОСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ВОСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|	И ВОСМССведенияОДоходах.Активность
	|" + ?(Налогоплательщик.ИндивидуальныйПредприниматель <> Справочники.ФизическиеЛица.ПустаяСсылка(), "
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&парамПериодРегистрации,
	|	&парамИндивидуальныйПредприниматель,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя),
	|	ВЫБОР
	|		КОГДА &парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаБезМедицинскогоСтрахованияТекст + " КАК ФизлицаБезМедицинскогоСтрахования) 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры) 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаИнвалидыТекст + " КАК ФизлицаИнвалиды
	|														ГДЕ
	|														ФизлицаИнвалиды.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	| 															ИЛИ КОНЕЦПЕРИОДА(ФизлицаИнвалиды.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)) 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаУчастникиВОВТекст + " КАК ФизлицаУчастникиВОВ) 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ГДЕ
	|	&парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ (" + СписокФизЛицТекст + ") КАК Работники)
	|" , "") + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ),
	|	ВОСМССведенияОДоходах.ФизЛицо,
	|	ВОСМССведенияОДоходах.ВидДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыФизЛиц.Период,
	|	ПериодыФизЛиц.ФизЛицо,
	|	ПериодыФизЛиц.ВидДохода КАК ВидДохода,
	|	МАКСИМУМ(ПериодыФизЛиц.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	МАКСИМУМ(ПериодыФизЛиц.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ПериодыФизЛиц.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|	МАКСИМУМ(ПериодыФизЛиц.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	ВТПериодыФизЛиц КАК ПериодыФизЛиц
	|СГРУППИРОВАТЬ ПО
	|	ПериодыФизЛиц.Период,
	|   ПериодыФизЛиц.ФизЛицо,
	|   ПериодыФизЛиц.ВидДохода
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТПериоды";

	// получим физлиц и контрагентов в виде соответствия для определения дохода по другому виду
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокФизЛиц.ФизЛицо КАК ФизЛицо,
	|	Контрагенты.Ссылка КАК КонтрагентФизЛицо,
	|	СписокФизЛиц.Период КАК Период,
	|	СписокФизЛиц.ВидДохода КАК ВидДохода,
	|	СписокФизЛиц.ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	СписокФизЛиц.ПризнакФизЛицаПенсионера,
	|	СписокФизЛиц.ПризнакФизлицаИнвалида,
	|	СписокФизЛиц.ПризнакФизлицаУчастникаВОВ
	|ПОМЕСТИТЬ ВТ_СоответствиеКонтрагентовИФизЛиц
	|ИЗ
	|	ВТПериоды КАК СписокФизЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО Контрагенты.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|ГДЕ
	|	СписокФизЛиц.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	СписокФизЛиц.ФизЛицо,
	|	Контрагенты.ФизЛицо,
	|	СписокФизЛиц.Период КАК Период,
	|	СписокФизЛиц.ВидДохода КАК ВидДохода,
	|	СписокФизЛиц.ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	СписокФизЛиц.ПризнакФизЛицаПенсионера,
	|	СписокФизЛиц.ПризнакФизлицаИнвалида,
	|	СписокФизЛиц.ПризнакФизлицаУчастникаВОВ
	|ИЗ
	|	ВТПериоды КАК СписокФизЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО Контрагенты.Ссылка = СписокФизЛиц.ФизЛицо
	|
	|ГДЕ
	|	СписокФизЛиц.ФизЛицо ССЫЛКА Справочник.Контрагенты 
	|";
	Запрос.Выполнить();

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые взносами доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	ВОСМСОбороты.ФизЛицо КАК ФизЛицо,
	|	ВОСМСОбороты.Период КАК Период,
	|	ВОСМСОбороты.ВидДохода Как ВидДохода,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ВОСМСОбороты.СуммаДоходаОборот) - СУММА(ВОСМСОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ВОСМСОбороты.ОблагаемаяБазаОборот) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ВОСМСОбороты.СуммаДоходаОборотПоДругимВидам) - СУММА(ВОСМСОбороты.СуммаВычетаОборотПоДругимВидам)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоходПоДругимВидам,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ВОСМСОбороты.ОблагаемаяБазаОборотПоДругимВидам) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБазаПоДругимВидам,
	|	МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|	МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТДоходыФизЛиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВОСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		ВОСМССведенияОДоходах.ВидДохода,
	|		СУММА(ВЫБОР 
	|			КОГДА ВОСМССведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА ВОСМССведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	 	СУММА(ВОСМССведенияОДоходах.СуммаВычетаОборот) КАК СуммаВычетаОборот,
	|		СУММА(ВОСМССведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		0 КАК СуммаДоходаОборотПоДругимВидам,
	|	 	0 КАК СуммаВычетаОборотПоДругимВидам,
	|		0 КАК ОблагаемаяБазаОборотПоДругимВидам,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|		МАКСИМУМ(Работники.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|	ИЗ
	|		РегистрНакопления.ВОСМССведенияОДоходах.Обороты(
	|				&парамНачало,
	|				&парамКонец,
	|				МЕСЯЦ,
	|				ПериодРегистрации <= &парамКонецПериодаРегистрации
	|				И Налогоплательщик = &парамНалогоплательщик) КАК ВОСМССведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
	|			ПО Работники.Физлицо = ВОСМССведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ)
	|				И Работники.ВидДохода = ВОСМССведенияОДоходах.ВидДохода
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВОСМССведенияОДоходах.ФизЛицо,
	|		ВОСМССведенияОДоходах.ВидДохода,
	|		НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|		Работники.ФизЛицо,
	|		Работники.Период,
	|		Работники.ВидДохода,
	|		0,
	|	 	0,
	|		0,
	|		СУММА(ВЫБОР 
	|			КОГДА ВОСМССведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА ВОСМССведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	 	СУММА(ВОСМССведенияОДоходах.СуммаВычетаОборот),
	|		СУММА(ВОСМССведенияОДоходах.ОблагаемаяБазаОборот),
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|		МАКСИМУМ(Работники.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|	ИЗ
	|		РегистрНакопления.ВОСМССведенияОДоходах.Обороты(
	|				&парамНачало,
	|				&парамКонец,
	|				МЕСЯЦ,
	|				ПериодРегистрации <= &парамКонецПериодаРегистрации
	|				И Налогоплательщик = &парамНалогоплательщик) КАК ВОСМССведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СоответствиеКонтрагентовИФизЛиц КАК Работники
	|			ПО Работники.КонтрагентФизЛицо = ВОСМССведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ)
	|				И НЕ Работники.ВидДохода = ВОСМССведенияОДоходах.ВидДохода
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Работники.ФизЛицо,
	|		Работники.ВидДохода,
	|		Работники.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|		Работники.ФизЛицо КАК Физлицо,
	|		Работники.Период,
	|		Работники.ВидДохода,
	|		0,
	|	 	0,
	|		0,
	|		СУММА(ВЫБОР 
	|			КОГДА ВОСМССведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА ВОСМССведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	 	СУММА(ВОСМССведенияОДоходах.СуммаВычетаОборот),
	|		СУММА(ВОСМССведенияОДоходах.ОблагаемаяБазаОборот),
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезМедицинскогоСтрахования),
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера),
	|		МАКСИМУМ(Работники.ПризнакФизлицаИнвалида),
	|		МАКСИМУМ(Работники.ПризнакФизлицаУчастникаВОВ)
	|	ИЗ
	|		РегистрНакопления.ВОСМССведенияОДоходах.Обороты(
	|				&парамНачало,
	|				&парамКонец,
	|				МЕСЯЦ,
	|				ПериодРегистрации <= &парамКонецПериодаРегистрации
	|				И Налогоплательщик = &парамНалогоплательщик) КАК ВОСМССведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
	|			ПО Работники.Физлицо = ВОСМССведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ)
	|				И НЕ Работники.ВидДохода = ВОСМССведенияОДоходах.ВидДохода
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Работники.ФизЛицо,
	|		Работники.ВидДохода,
	|		Работники.Период) КАК ВОСМСОбороты
	|
	|ГДЕ 
	|	 ВОСМСОбороты.ФизЛицо <> &парамИндивидуальныйПредприниматель
	|
	|СГРУППИРОВАТЬ ПО
	|	ВОСМСОбороты.Период,
	|	ВОСМСОбороты.Физлицо,
	|	ВОСМСОбороты.ВидДохода
	|" + ?(Налогоплательщик.ИндивидуальныйПредприниматель <> Справочники.ФизическиеЛица.ПустаяСсылка(), "
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&парамИндивидуальныйПредприниматель,
	|	&парамПериодРегистрации,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя),
	|	0,
	|	0,
	|	0,
	|	0,
	|	Работники.ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	Работники.ПризнакФизЛицаПенсионера,
	|	Работники.ПризнакФизлицаИнвалида,
	|	Работники.ПризнакФизлицаУчастникаВОВ
	|ИЗ
	|	" + ПериодыТекст + " КАК Работники
	|ГДЕ
	|	Работники.ФизЛицо = &парамИндивидуальныйПредприниматель
	|" , "") + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВОСМСОбороты.ФизЛицо,
	|	ВОСМСОбороты.Период,
	|	ВОСМСОбороты.ВидДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоходыФизЛиц.ФизЛицо,
	|	ДоходыФизЛиц.Период,
	|	ДоходыФизЛиц.ВидДохода,
	|	СУММА(ДоходыФизЛиц.ОблагаемыйДоход) КАК ОблагаемыйДоход,
	|	СУММА(ДоходыФизЛиц.ИсчисленнаяОблагаемаяБаза) КАК ИсчисленнаяОблагаемаяБаза,
	|	СУММА(ДоходыФизЛиц.ОблагаемыйДоходПоДругимВидам) КАК ОблагаемыйДоходПоДругимВидам,
	|	СУММА(ДоходыФизЛиц.ИсчисленнаяОблагаемаяБазаПоДругимВидам) КАК ИсчисленнаяОблагаемаяБазаПоДругимВидам,
	|	МАКСИМУМ(ДоходыФизЛиц.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	МАКСИМУМ(ДоходыФизЛиц.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ДоходыФизЛиц.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|	МАКСИМУМ(ДоходыФизЛиц.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	ВТДоходыФизЛиц КАК ДоходыФизЛиц
	|СГРУППИРОВАТЬ ПО
	|	ДоходыФизЛиц.Период,
	|   ДоходыФизЛиц.ФизЛицо,
	|	ДоходыФизЛиц.ВидДохода
	|";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТДоходы";

	// ВОСМСИсчисленные
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ВидДохода
	//		ИсчисленныйНалог
	//		Регистратор
	//		ВидПлатежа
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом) для СписокФизлиц
	ВОСМСИсчисленныеТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВОСМСИсчисленные.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ВОСМСИсчисленные.ФизЛицо КАК ФизЛицо,
	|	ВОСМСИсчисленные.ВидДохода КАК ВидДохода,
	|	СУММА(ВОСМСИсчисленные.Взнос) КАК ИсчисленныйВзносЗаМесяц
	|ПОМЕСТИТЬ ВТ_ВОСМСИсчисленные
	|ИЗ
	|	РегистрНакопления.ВОСМСИсчисленные КАК ВОСМСИсчисленные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК РаботникиОрганизации
	|		ПО (РаботникиОрганизации.Физлицо = ВОСМСИсчисленные.ФизЛицо)
	|ГДЕ
	|	ВОСМСИсчисленные.МесяцНалоговогоПериода >= &парамНачалоГода
	|	И ВОСМСИсчисленные.МесяцНалоговогоПериода <= &парамКонец
	|	И ВОСМСИсчисленные.Налогоплательщик = &парамНалогоплательщик
	|	И ВОСМСИсчисленные.Регистратор <> &парамРегистратор
	|	И ВОСМСИсчисленные.Период <= &парамКонецПериодаРегистрации
	|	И ВОСМСИсчисленные.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|	И ВОСМСИсчисленные.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВОСМСИсчисленные.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ВОСМСИсчисленные.ФизЛицо,
	|	ВОСМСИсчисленные.ВидДохода
	|";

	Запрос.Текст = ВОСМСИсчисленныеТекст;
	Запрос.Выполнить();
	ВОСМСИсчисленныеТекст = "ВТ_ВОСМСИсчисленные";
	
	Если ПрименятьКорректировкуВОСМС Тогда
		
		Если ОтражениеПоПериодуРегистрации Тогда
			ПолеПериодаКорректировки = "&парамПериодРегистрации";	
		Иначе
			ПолеПериодаКорректировки = "ИсчисленныйИПН.МесяцНалоговогоПериода";	
		КонецЕсли;
		
		// ИПНРасчетыСФондами
		//	Поля:
		//		ФизЛицо
		//		МесяцНалоговогоПериода
		//		КорректировкаДохода
		//
		//	Описание:
		//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
		//  
		ИПНСведенияОДоходах = "
		|ВЫБРАТЬ
		|	" + ПолеПериодаКорректировки + " КАК Период,
		|	ИсчисленныйИПН.ФизЛицо КАК ФизЛицо,
		|	ИсчисленныйИПН.ПримененнаяЛьгота КАК ПримененнаяЛьгота
		|ПОМЕСТИТЬ ВТ_ИсчисленныйИПН
		|ИЗ
		|	&парамИсчисленныйИПН КАК ИсчисленныйИПН
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
		|	ИПНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	СУММА(ИПНСведенияОДоходах.ПримененнаяЛьготаОборот) КАК МаксимальнаяСуммаКорректировкиДохода
		|
		|ПОМЕСТИТЬ ВТ_ИПНСведенияОДоходах
		|ИЗ	(ВЫБРАТЬ
		|		ИПНСведенияОДоходах.Период КАК Период,
		|		ИПНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|		ИПНСведенияОДоходах.ПримененнаяЛьготаОборот
		|	ИЗ
		|		РегистрНакопления.ИПНСведенияОДоходах.Обороты(
		|						&парамНачало,
		|						&парамКонец,
		|						МЕСЯЦ,
		|						Налогоплательщик = &парамНалогоплательщик
		|						И ПериодРегистрации <= &парамКонецПериодаРегистрации) КАК ИПНСведенияОДоходах
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
		|			ПО РаботникиОрганизации.Физлицо = ИПНСведенияОДоходах.ФизЛицо
		|				И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ)
		|
		// данные документа
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ИПНСведенияОДоходах.Период КАК Период,
		|		ИПНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|		ИПНСведенияОДоходах.ПримененнаяЛьгота
		|
		|	ИЗ
		|		ВТ_ИсчисленныйИПН КАК ИПНСведенияОДоходах
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
		|			ПО РаботникиОрганизации.Физлицо = ИПНСведенияОДоходах.ФизЛицо
		|				И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)) КАК ИПНСведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПНСведенияОДоходах.Период,
		|	ИПНСведенияОДоходах.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИПНСведенияОДоходах.ФизЛицо,
		|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ)";
		
		Запрос.Текст = ИПНСведенияОДоходах;
		Запрос.УстановитьПараметр("парамИсчисленныйИПН", ДополнительныеПараметрыЗапроса.ИсчисленныйИПН);
		Запрос.Выполнить();
		ИПНСведенияОДоходах = "ВТ_ИПНСведенияОДоходах";
		
	КонецЕсли;
	
	//РасчетыСФондамиДругойРаботадатель
	ВТВОСМСРасчетыСФондамиДругойРаботадательТекст = "
	|ВЫБРАТЬ
	|	СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо КАК ФизЛицо,
	|	СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаИнвалида) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаУчастникаВОВ) = 0
	|			ТОГДА МАКСИМУМ(СведенияПредыдущегоМестаРаботыФизЛиц.ВОСМС)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленныйВзносДругойРаботадатель
	|ПОМЕСТИТЬ ВТВОСМСРасчетыСФондамиДругойРаботадатель
	|ИЗ
	|	РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО (ВЫБОР 
	|				КОГДА РаботникиОрганизации.Физлицо Ссылка Справочник.Контрагенты
	|					ТОГДА РаботникиОрганизации.ФизЛицо.ФизЛицо = СведенияПредыдущегоМестаРаботыФизЛиц.Физлицо
	|				ИНАЧЕ РаботникиОрганизации.ФизЛицо = СведенияПредыдущегоМестаРаботыФизЛиц.Физлицо
	|			КОНЕЦ)
	|			И (РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, МЕСЯЦ))
	|ГДЕ
	|	СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода >= &парамНачало
	|	И СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода <= &парамКонец
	|	И СведенияПредыдущегоМестаРаботыФизЛиц.Налогоплательщик = &парамНалогоплательщик
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо,
	|	СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо,
	|	СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода";
	
	Запрос.Текст = ВТВОСМСРасчетыСФондамиДругойРаботадательТекст;
	Запрос.Выполнить();
	ВТВОСМСРасчетыСФондамиДругойРаботадательТекст = "ВТВОСМСРасчетыСФондамиДругойРаботадатель";
	
	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления взносов
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 10, 0) КАК ОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП
	|
	|ПОМЕСТИТЬ ВТРазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТРазмерОграниченияПоДоходам";

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления взносов с учетом приоритетов
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахОСМС.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахОСМС.ВидДохода КАК ВидДохода,
	|	СведенияОСтавкахОСМС.СтавкаВзносы КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
	|
	|ГДЕ
	|	СведенияОСтавкахОСМС.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахОСМС.Период <= &парамКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахОСМС.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахОСМС.ВидДохода КАК ВидДохода,
	|	СведенияОСтавкахОСМС.СтавкаВзносы КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
	|
	|ГДЕ
	|	СведенияОСтавкахОСМС.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахОСМС.Период <= &парамКонец
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления взносов с наивысшим приоритетом
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахОСМССрезПоследних.Период КАК Период,
	|	СведенияОСтавкахОСМС.ВидДохода КАК ВидДохода,
	|	СведенияОСтавкахОСМС.Ставка КАК Ставка
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахОСМС.Период,
	|			СведенияОСтавкахОСМС.ВидДохода,
	|			МИНИМУМ(СведенияОСтавкахОСМС.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахОСМС.Период,
	|			СведенияОСтавкахОСМС.ВидДохода) КАК СведенияОСтавкахОСМССрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|		ПО СведенияОСтавкахОСМССрезПоследних.Период = СведенияОСтавкахОСМС.Период
	|			И СведенияОСтавкахОСМССрезПоследних.ВидДохода = СведенияОСтавкахОСМС.ВидДохода
	|			И СведенияОСтавкахОСМССрезПоследних.Приоритет = СведенияОСтавкахОСМС.Приоритет
	|";
	
	Запрос.Текст = СведенияОСтавкахОСМСТекст;
	
	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления взносов
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахОСМС.Период КАК Период,
	|	СведенияОСтавкахОСМС.ВидДохода КАК ВидДохода,
	|	СведенияОСтавкахОСМС.Ставка КАК Ставка
	|ИЗ
	|	(" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УчетнаяПолитика.Период КАК Период,
	|	ВЫРАЗИТЬ(""ИП"" КАК СТРОКА(2)) КАК ВидДохода,
	|	ЕСТЬNULL(УчетнаяПолитика.СтавкаВОСМСДляИП, 0) КАК Ставка
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитика
	|ГДЕ 
	|	УчетнаяПолитика.Период >= ДАТАВРЕМЯ(2020, 1, 1)
	|	И УчетнаяПолитика.Организация = &парамНалогоплательщик
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахОСМССрезПоследних.Период,
	|	СведенияОСтавкахОСМССрезПоследних.ВидДохода,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТСведенияОСтавкахОСМС
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			СведенияОСтавкахОСМС.ВидДохода,
	|			МАКСИМУМ(СведенияОСтавкахОСМС.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|				ПО СведенияОСтавкахОСМС.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период,
	|			СведенияОСтавкахОСМС.ВидДохода) КАК СведенияОСтавкахОСМССрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|		ПО СведенияОСтавкахОСМССрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахОСМС.Период
	|			И СведенияОСтавкахОСМССрезПоследних.ВидДохода = СведенияОСтавкахОСМС.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахОСМССрезПоследних.Период
	//|	СведенияОСтавкахОСМССрезПоследних.ВидДохода
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;
	Запрос.Выполнить();
	СведенияОСтавкахОСМСТекст = "ВТСведенияОСтавкахОСМС";	

	ТипЗначенияВОСМСТекст  = "ЧИСЛО(15, 2)";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";
	// корректировка доход за месяц
	ПолеКорректировкаДохода = ?(ПрименятьКорректировкуВОСМС, " ВЫБОР КОГДА ЕСТЬNULL(РазмерПрименяемойКорректировки.МаксимальнаяСуммаКорректировкиДохода, 0) < 0 ТОГДА 0 ИНАЧЕ ЕСТЬNULL(РазмерПрименяемойКорректировки.МаксимальнаяСуммаКорректировкиДохода, 0) КОНЕЦ ", "0");
	
	// размер МЗП
	ПолеРазмерМЗП = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0)";
	
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// облагаемая база по ВОСМС
	ПолеБазаДляИсчисленияВОСМС = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > 0
	|		ТОГДА ВЫБОР 
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + "-" + ПолеКорректировкаДохода +  " > " + ПолеРазмерОграниченияПоДоходам + "
	|				ТОГДА " + ПолеРазмерОграниченияПоДоходам + "-" + ПолеКорректировкаДохода +  "
	|			ИНАЧЕ " + ПолеОблагаемыйДоходЗаМесяц + "-" +  ПолеКорректировкаДохода + "
	|		КОНЕЦ
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// Ранее исчисленная облагаемая база
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// сумма взносов исчисленная
	ПолеВзносыИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеБазаДляИсчисленияВОСМС +" > 0) 
	|					ТОГДА  " + ПолеБазаДляИсчисленияВОСМС +" * СведенияОСтавкахОСМС.Ставка
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК " + ТипЗначенияВОСМСТекст + "))";
	
	// сумма ранее исчисленных взносов
	ПолеРанееВзносыИсчисленные = "ЕСТЬNULL(ВОСМСИсчисленные.ИсчисленныйВзносЗаМесяц, 0)";

	// сумма ранее исчисленных доходов по другим видам дохода
	ПолеРанееИсчисленнаяОблагаемаяБазаПоДругимВидам = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБазаПоДругимВидам, 0)";	
	
	// сумма ранее исчисленных взносов от другого работодателя
	ИсчисленныйВзносДругойРаботадатель = "ВЫБОР КОГДА ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБазаПоДругимВидам, 0) = 0 ТОГДА ЕСТЬNULL(ВТВОСМСРасчетыСФондамиДругойРаботадатель.ИсчисленныйВзносДругойРаботадатель, 0) ИНАЧЕ 0 КОНЕЦ";
	
	// ИсчисленныеВОСМС
	//	Поля:
	//		Физлицо
	//		ВзносыИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее взносы за месяц и производит расчет 
	ИсчисленныеВОСМСТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.ФизЛицо,
	|	ВЫБОР КОГДА ДоходыЗаМесяц.Физлицо ССЫЛКА Справочник.Контрагенты ТОГДА ДоходыЗаМесяц.Физлицо.ФизЛицо ИНАЧЕ ДоходыЗаМесяц.Физлицо КОНЕЦ КАК ФизЛицоДохода,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ВидДохода,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	ДоходыЗаМесяц.ПризнакФизлицаИнвалида,
	|	ДоходыЗаМесяц.ПризнакФизлицаУчастникаВОВ,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеБазаДляИсчисленияВОСМС + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБазаПоДругимВидам + " КАК РанееИсчисленнаяОблагаемаяБазаПоДругимВидам,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходам,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	" + ПолеРазмерМЗП + " КАК РазмерМЗП,
	|	" + ПолеВзносыИсчисленные + " КАК ВОСМСЗаМесяц,
	|	" + ПолеРанееВзносыИсчисленные + " КАК РанееИсчисленныйВзнос,
	|	" + ПолеБазаДляИсчисленияВОСМС + " - " + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК ОблагаемаяБаза,
	|	" + ПолеВзносыИсчисленные + "-" + ПолеРанееВзносыИсчисленные + " КАК ВзносИсчисленный, 
	|	" + ИсчисленныйВзносДругойРаботадатель + " КАК ИсчисленныйВзносДругойРаботадатель,
	|	-" + ПолеКорректировкаДохода + " КАК КорректировкаДохода
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ВОСМСИсчисленныеТекст + " КАК ВОСМСИсчисленные
	|		ПО ДоходыЗаМесяц.ФизЛицо = ВОСМСИсчисленные.ФизЛицо
	|			И ДоходыЗаМесяц.Период = ВОСМСИсчисленные.МесяцНалоговогоПериода
	|			И ДоходыЗаМесяц.ВидДохода = ВОСМСИсчисленные.ВидДохода
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ВТВОСМСРасчетыСФондамиДругойРаботадательТекст+" КАК ВТВОСМСРасчетыСФондамиДругойРаботадатель
	|		ПО ВТВОСМСРасчетыСФондамиДругойРаботадатель.Период = ДоходыЗаМесяц.Период 
	|			И ВЫБОР 
	|				КОГДА ДоходыЗаМесяц.Физлицо Ссылка Справочник.Контрагенты
	|					ТОГДА ВТВОСМСРасчетыСФондамиДругойРаботадатель.ФизЛицо = ДоходыЗаМесяц.Физлицо.ФизЛицо
	|				ИНАЧЕ ВТВОСМСРасчетыСФондамиДругойРаботадатель.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|			КОНЕЦ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|" +
	?(ПрименятьКорректировкуВОСМС, "
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНСведенияОДоходах + " КАК РазмерПрименяемойКорректировки
	|		ПО ДоходыЗаМесяц.Период = РазмерПрименяемойКорректировки.Период
	|			И ДоходыЗаМесяц.ФизЛицо = РазмерПрименяемойКорректировки.ФизЛицо", "") + "
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахОСМСТекст+" КАК СведенияОСтавкахОСМС
	|	ПО ДоходыЗаМесяц.Период = СведенияОСтавкахОСМС.Период
	|			И ВЫБОР 
	|				КОГДА ДоходыЗаМесяц.Физлицо = &парамИндивидуальныйПредприниматель
	|					ТОГДА СведенияОСтавкахОСМС.ВидДохода = ""ИП""
	|				ИНАЧЕ ДоходыЗаМесяц.ВидДохода = СведенияОСтавкахОСМС.ВидДохода
	|			КОНЕЦ
	|ГДЕ
	|	НЕ &ТолькоДоходОтНалоговогоАгента
	|   ИЛИ ДоходыЗаМесяц.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента)
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо, 
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ВидДохода";

	Запрос.Текст = ИсчисленныеВОСМСТекст;	
	Возврат Запрос.Выполнить();
									
КонецФункции		

// Получить данные для расчета ВОСМС по правилам 2020 года
// Параметры: 
//  ПоследнийМесяцНалоговогоПериода - максимальный налоговый период, за который расчитываются зарегистрированные доходы и исчисленные отчисления 
//  ПериодРегистрации - дата периода, в котором учитываются зарегистрированные доходы и исчисленные отчисления 
//  Налогоплательщик - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ООСМС
//	ОтражениеПоПериодуРегистрации - булево
//	ДополнительныеПараметрыЗапроса - Структура, дополнительные отборы
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаВОСМСПосле2021(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено, ЭтоРасчетПервойПоловиныМесяца = Ложь)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидВОСМС", 			Справочники.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	Запрос.УстановитьПараметр("парамИндивидуальныйПредприниматель", Налогоплательщик.ИндивидуальныйПредприниматель);

	
	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВОСМССведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ВОСМССведенияОДоходах КАК ВОСМССведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = ВОСМССведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	ВОСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И ВОСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|	И ВОСМССведенияОДоходах.Активность
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВОСМССведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ВОСМССведенияОДоходах КАК ВОСМССведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ВОСМССведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ВОСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ВОСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ВОСМССведенияОДоходах.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);

	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	Запрос.УстановитьПараметр("парамНачалоГода",			  НачалоГода(ПериодРегистрации));

	// ФизлицаБезМедицинскогоСтрахования
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц не подлежащих социальному медицинскому страхованию
	ФизлицаБезМедицинскогоСтрахованияТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаБезМедицинскогоСтрахования
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезМедицинскогоСтрахованияТекст;
	Запрос.Выполнить();
	ФизлицаБезМедицинскогоСтрахованияТекст = "ВТФизлицаБезМедицинскогоСтрахования";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТФизлицаПенсионеры";
	
	// ФизлицаИнвалиды
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-инвалидов
	ФизлицаИнвалидыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОбИнвалидностиФизлиц.Физлицо,
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки
	|ПОМЕСТИТЬ ВТ_ФизлицаИнвалиды
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамКонец) КАК СведенияОбИнвалидностиФизлиц
	|
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|";
	Запрос.Текст = ФизлицаИнвалидыТекст;
	Запрос.Выполнить();
	ФизлицаИнвалидыТекст = "ВТ_ФизлицаИнвалиды";

	// ФизлицаУчастникиВОВ
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц участников и инвалидов ВОВ
	ФизлицаУчастникиВОВТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОФизлицахУчастникахВОВ.ФизЛицо
	|ПОМЕСТИТЬ ВТ_ФизлицаУчастникиВОВ
	|ИЗ
	|	РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(&парамКонец) КАК СведенияОФизлицахУчастникахВОВ
	|
	|ГДЕ
	|	СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.УчастникВОВ)
	|	ИЛИ СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.ИнвалидВОВ)
	|";
	Запрос.Текст = ФизлицаУчастникиВОВТекст;
	Запрос.Выполнить();
	ФизлицаУчастникиВОВТекст = "ВТ_ФизлицаУчастникиВОВ";
	
	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет отчислений
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ВОСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВОСМССведенияОДоходах.ВидДохода КАК ВидДохода,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаБезМедицинскогоСтрахования.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаИнвалиды.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаИнвалида,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаУчастникиВОВ.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТПериодыФизЛиц
	|ИЗ
	|	РегистрНакопления.ВОСМССведенияОДоходах КАК ВОСМССведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ВОСМССведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезМедицинскогоСтрахованияТекст + " КАК ФизлицаБезМедицинскогоСтрахования
	|		ПО (ВЫБОР 
	|				КОГДА Работники.Физлицо ССЫЛКА Справочник.Контрагенты 
	|					ТОГДА Работники.Физлицо.Физлицо 
	|				ИНАЧЕ Работники.Физлицо
	|			КОНЕЦ) = ФизлицаБезМедицинскогоСтрахования.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО (ВЫБОР 
	|				КОГДА Работники.Физлицо ССЫЛКА Справочник.Контрагенты 
	|					ТОГДА Работники.Физлицо.Физлицо 
	|				ИНАЧЕ Работники.Физлицо
	|			КОНЕЦ) = ФизлицаПенсионеры.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаИнвалидыТекст + " КАК ФизлицаИнвалиды
	|		ПО (ВЫБОР 
	|				КОГДА Работники.Физлицо ССЫЛКА Справочник.Контрагенты 
	|					ТОГДА Работники.Физлицо.Физлицо 
	|				ИНАЧЕ Работники.Физлицо
	|			КОНЕЦ) = ФизлицаИнвалиды.ФизЛицо
	|			И (ФизлицаИнвалиды.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	| 				ИЛИ КОНЕЦПЕРИОДА(ФизлицаИнвалиды.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаУчастникиВОВТекст + " КАК ФизлицаУчастникиВОВ
	|		ПО (ВЫБОР 
	|				КОГДА Работники.Физлицо ССЫЛКА Справочник.Контрагенты 
	|					ТОГДА Работники.Физлицо.Физлицо 
	|				ИНАЧЕ Работники.Физлицо
	|			КОНЕЦ) = ФизлицаУчастникиВОВ.ФизЛицо
	|
	|ГДЕ
	|	ВОСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ВОСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|	И ВОСМССведенияОДоходах.Активность
	|" + ?(Налогоплательщик.ИндивидуальныйПредприниматель <> Справочники.ФизическиеЛица.ПустаяСсылка(), "
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&парамПериодРегистрации,
	|	&парамИндивидуальныйПредприниматель,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя),
	|	ВЫБОР
	|		КОГДА &парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаБезМедицинскогоСтрахованияТекст + " КАК ФизлицаБезМедицинскогоСтрахования) 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры) 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаИнвалидыТекст + " КАК ФизлицаИнвалиды
	|														ГДЕ
	|														ФизлицаИнвалиды.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	| 															ИЛИ КОНЕЦПЕРИОДА(ФизлицаИнвалиды.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)) 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаУчастникиВОВТекст + " КАК ФизлицаУчастникиВОВ) 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ГДЕ
	|	&парамИндивидуальныйПредприниматель В (ВЫБРАТЬ ФизЛицо ИЗ (" + СписокФизЛицТекст + ") КАК Работники)
	|" , "") + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ),
	|	ВОСМССведенияОДоходах.ФизЛицо,
	|	ВОСМССведенияОДоходах.ВидДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыФизЛиц.Период,
	|	ПериодыФизЛиц.ФизЛицо,
	|	ПериодыФизЛиц.ВидДохода КАК ВидДохода,
	|	МАКСИМУМ(ПериодыФизЛиц.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	МАКСИМУМ(ПериодыФизЛиц.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ПериодыФизЛиц.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|	МАКСИМУМ(ПериодыФизЛиц.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	ВТПериодыФизЛиц КАК ПериодыФизЛиц
	|СГРУППИРОВАТЬ ПО
	|	ПериодыФизЛиц.Период,
	|   ПериодыФизЛиц.ФизЛицо,
	|   ПериодыФизЛиц.ВидДохода
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТПериоды";

	// получим физлиц и контрагентов в виде соответствия для определения дохода по другому виду
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокФизЛиц.ФизЛицо КАК ФизЛицо,
	|	Контрагенты.Ссылка КАК КонтрагентФизЛицо,
	|	СписокФизЛиц.Период КАК Период,
	|	СписокФизЛиц.ВидДохода КАК ВидДохода,
	|	СписокФизЛиц.ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	СписокФизЛиц.ПризнакФизЛицаПенсионера,
	|	СписокФизЛиц.ПризнакФизлицаИнвалида,
	|	СписокФизЛиц.ПризнакФизлицаУчастникаВОВ
	|ПОМЕСТИТЬ ВТ_СоответствиеКонтрагентовИФизЛиц
	|ИЗ
	|	ВТПериоды КАК СписокФизЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО Контрагенты.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|ГДЕ
	|	СписокФизЛиц.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	СписокФизЛиц.ФизЛицо,
	|	Контрагенты.ФизЛицо,
	|	СписокФизЛиц.Период КАК Период,
	|	СписокФизЛиц.ВидДохода КАК ВидДохода,
	|	СписокФизЛиц.ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	СписокФизЛиц.ПризнакФизЛицаПенсионера,
	|	СписокФизЛиц.ПризнакФизлицаИнвалида,
	|	СписокФизЛиц.ПризнакФизлицаУчастникаВОВ
	|ИЗ
	|	ВТПериоды КАК СписокФизЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО Контрагенты.Ссылка = СписокФизЛиц.ФизЛицо
	|
	|ГДЕ
	|	СписокФизЛиц.ФизЛицо ССЫЛКА Справочник.Контрагенты 
	|";
	Запрос.Выполнить();

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые взносами доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	ВОСМСОбороты.ФизЛицо КАК ФизЛицо,
	|	ВОСМСОбороты.Период КАК Период,
	|	ВОСМСОбороты.ВидДохода Как ВидДохода,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ВОСМСОбороты.СуммаДоходаОборот) - СУММА(ВОСМСОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ВОСМСОбороты.ОблагаемаяБазаОборот) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ВОСМСОбороты.СуммаДоходаОборотПоДругимВидам) - СУММА(ВОСМСОбороты.СуммаВычетаОборотПоДругимВидам)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоходПоДругимВидам,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ВОСМСОбороты.ОблагаемаяБазаОборотПоДругимВидам) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБазаПоДругимВидам,
	|	МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	МАКСИМУМ(ВОСМСОбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|	МАКСИМУМ(ВОСМСОбороты.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТДоходыФизЛиц
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВОСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		ВОСМССведенияОДоходах.ВидДохода,
	|		СУММА(ВЫБОР 
	|			КОГДА ВОСМССведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА ВОСМССведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	 	СУММА(ВОСМССведенияОДоходах.СуммаВычетаОборот) КАК СуммаВычетаОборот,
	|		СУММА(ВОСМССведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		0 КАК СуммаДоходаОборотПоДругимВидам,
	|	 	0 КАК СуммаВычетаОборотПоДругимВидам,
	|		0 КАК ОблагаемаяБазаОборотПоДругимВидам,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|		МАКСИМУМ(Работники.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|	ИЗ
	|		РегистрНакопления.ВОСМССведенияОДоходах.Обороты(
	|				&парамНачало,
	|				&парамКонец,
	|				МЕСЯЦ,
	|				ПериодРегистрации <= &парамКонецПериодаРегистрации
	|				И Налогоплательщик = &парамНалогоплательщик) КАК ВОСМССведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
	|			ПО Работники.Физлицо = ВОСМССведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ)
	|				И Работники.ВидДохода = ВОСМССведенияОДоходах.ВидДохода
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВОСМССведенияОДоходах.ФизЛицо,
	|		ВОСМССведенияОДоходах.ВидДохода,
	|		НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|		Работники.ФизЛицо,
	|		Работники.Период,
	|		Работники.ВидДохода,
	|		0,
	|	 	0,
	|		0,
	|		СУММА(ВЫБОР 
	|			КОГДА ВОСМССведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА ВОСМССведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	 	СУММА(ВОСМССведенияОДоходах.СуммаВычетаОборот),
	|		СУММА(ВОСМССведенияОДоходах.ОблагаемаяБазаОборот),
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|		МАКСИМУМ(Работники.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|	ИЗ
	|		РегистрНакопления.ВОСМССведенияОДоходах.Обороты(
	|				&парамНачало,
	|				&парамКонец,
	|				МЕСЯЦ,
	|				ПериодРегистрации <= &парамКонецПериодаРегистрации
	|				И Налогоплательщик = &парамНалогоплательщик) КАК ВОСМССведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СоответствиеКонтрагентовИФизЛиц КАК Работники
	|			ПО Работники.КонтрагентФизЛицо = ВОСМССведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ)
	|				И НЕ Работники.ВидДохода = ВОСМССведенияОДоходах.ВидДохода
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Работники.ФизЛицо,
	|		Работники.ВидДохода,
	|		Работники.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|		Работники.ФизЛицо КАК Физлицо,
	|		Работники.Период,
	|		Работники.ВидДохода,
	|		0,
	|	 	0,
	|		0,
	|		СУММА(ВЫБОР 
	|			КОГДА ВОСМССведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА ВОСМССведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	 	СУММА(ВОСМССведенияОДоходах.СуммаВычетаОборот),
	|		СУММА(ВОСМССведенияОДоходах.ОблагаемаяБазаОборот),
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезМедицинскогоСтрахования),
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера),
	|		МАКСИМУМ(Работники.ПризнакФизлицаИнвалида),
	|		МАКСИМУМ(Работники.ПризнакФизлицаУчастникаВОВ)
	|	ИЗ
	|		РегистрНакопления.ВОСМССведенияОДоходах.Обороты(
	|				&парамНачало,
	|				&парамКонец,
	|				МЕСЯЦ,
	|				ПериодРегистрации <= &парамКонецПериодаРегистрации
	|				И Налогоплательщик = &парамНалогоплательщик) КАК ВОСМССведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
	|			ПО Работники.Физлицо = ВОСМССведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ)
	|				И НЕ Работники.ВидДохода = ВОСМССведенияОДоходах.ВидДохода
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Работники.ФизЛицо,
	|		Работники.ВидДохода,
	|		Работники.Период) КАК ВОСМСОбороты
	|
	|ГДЕ 
	|	 ВОСМСОбороты.ФизЛицо <> &парамИндивидуальныйПредприниматель
	|
	|СГРУППИРОВАТЬ ПО
	|	ВОСМСОбороты.Период,
	|	ВОСМСОбороты.Физлицо,
	|	ВОСМСОбороты.ВидДохода
	|" + ?(Налогоплательщик.ИндивидуальныйПредприниматель <> Справочники.ФизическиеЛица.ПустаяСсылка(), "
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&парамИндивидуальныйПредприниматель,
	|	&парамПериодРегистрации,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя),
	|	0,
	|	0,
	|	0,
	|	0,
	|	Работники.ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	Работники.ПризнакФизЛицаПенсионера,
	|	Работники.ПризнакФизлицаИнвалида,
	|	Работники.ПризнакФизлицаУчастникаВОВ
	|ИЗ
	|	" + ПериодыТекст + " КАК Работники
	|ГДЕ
	|	Работники.ФизЛицо = &парамИндивидуальныйПредприниматель
	|" , "") + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВОСМСОбороты.ФизЛицо,
	|	ВОСМСОбороты.Период,
	|	ВОСМСОбороты.ВидДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоходыФизЛиц.ФизЛицо,
	|	ДоходыФизЛиц.Период,
	|	ДоходыФизЛиц.ВидДохода,
	|	СУММА(ДоходыФизЛиц.ОблагаемыйДоход) КАК ОблагаемыйДоход,
	|	СУММА(ДоходыФизЛиц.ИсчисленнаяОблагаемаяБаза) КАК ИсчисленнаяОблагаемаяБаза,
	|	СУММА(ДоходыФизЛиц.ОблагаемыйДоходПоДругимВидам) КАК ОблагаемыйДоходПоДругимВидам,
	|	СУММА(ДоходыФизЛиц.ИсчисленнаяОблагаемаяБазаПоДругимВидам) КАК ИсчисленнаяОблагаемаяБазаПоДругимВидам,
	|	МАКСИМУМ(ДоходыФизЛиц.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	МАКСИМУМ(ДоходыФизЛиц.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ДоходыФизЛиц.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|	МАКСИМУМ(ДоходыФизЛиц.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	ВТДоходыФизЛиц КАК ДоходыФизЛиц
	|СГРУППИРОВАТЬ ПО
	|	ДоходыФизЛиц.Период,
	|   ДоходыФизЛиц.ФизЛицо,
	|	ДоходыФизЛиц.ВидДохода
	|";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТДоходы";

	// ВОСМСИсчисленные
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		ВидДохода
	//		ИсчисленныйНалог
	//		Регистратор
	//		ВидПлатежа
	//
	//	Описание:
	//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом) для СписокФизлиц
	ВОСМСИсчисленныеТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВОСМСИсчисленные.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ВОСМСИсчисленные.ФизЛицо КАК ФизЛицо,
	|	ВОСМСИсчисленные.ВидДохода КАК ВидДохода,
	|	СУММА(ВОСМСИсчисленные.Взнос) КАК ИсчисленныйВзносЗаМесяц
	|ПОМЕСТИТЬ ВТ_ВОСМСИсчисленные
	|ИЗ
	|	РегистрНакопления.ВОСМСИсчисленные КАК ВОСМСИсчисленные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК РаботникиОрганизации
	|		ПО (РаботникиОрганизации.Физлицо = ВОСМСИсчисленные.ФизЛицо)
	|ГДЕ
	|	ВОСМСИсчисленные.МесяцНалоговогоПериода >= &парамНачалоГода
	|	И ВОСМСИсчисленные.МесяцНалоговогоПериода <= &парамКонец
	|	И ВОСМСИсчисленные.Налогоплательщик = &парамНалогоплательщик
	|	И ВОСМСИсчисленные.Регистратор <> &парамРегистратор
	|	И ВОСМСИсчисленные.Период <= &парамКонецПериодаРегистрации
	|	И ВОСМСИсчисленные.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
	|	И ВОСМСИсчисленные.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
	|	
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВОСМСИсчисленные.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ВОСМСИсчисленные.ФизЛицо,
	|	ВОСМСИсчисленные.ВидДохода
	|";

	Запрос.Текст = ВОСМСИсчисленныеТекст;
	Запрос.Выполнить();
	ВОСМСИсчисленныеТекст = "ВТ_ВОСМСИсчисленные";
	
		
	//РасчетыСФондамиДругойРаботадатель
	ВТВОСМСРасчетыСФондамиДругойРаботадательТекст = "
	|ВЫБРАТЬ
	|	СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо КАК ФизЛицо,
	|	СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаИнвалида) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаУчастникаВОВ) = 0
	|			ТОГДА МАКСИМУМ(СведенияПредыдущегоМестаРаботыФизЛиц.ВОСМС)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленныйВзносДругойРаботадатель
	|ПОМЕСТИТЬ ВТВОСМСРасчетыСФондамиДругойРаботадатель
	|ИЗ
	|	РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО (ВЫБОР 
	|				КОГДА РаботникиОрганизации.Физлицо Ссылка Справочник.Контрагенты
	|					ТОГДА РаботникиОрганизации.ФизЛицо.ФизЛицо = СведенияПредыдущегоМестаРаботыФизЛиц.Физлицо
	|				ИНАЧЕ РаботникиОрганизации.ФизЛицо = СведенияПредыдущегоМестаРаботыФизЛиц.Физлицо
	|			КОНЕЦ)
	|			И (РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, МЕСЯЦ))
	|ГДЕ
	|	СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода >= &парамНачало
	|	И СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода <= &парамКонец
	|	И СведенияПредыдущегоМестаРаботыФизЛиц.Налогоплательщик = &парамНалогоплательщик
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо,
	|	СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо,
	|	СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода";
	
	Запрос.Текст = ВТВОСМСРасчетыСФондамиДругойРаботадательТекст;
	Запрос.Выполнить();
	ВТВОСМСРасчетыСФондамиДругойРаботадательТекст = "ВТВОСМСРасчетыСФондамиДругойРаботадатель";
	
	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления взносов
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 10, 0) КАК ОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП
	|
	|ПОМЕСТИТЬ ВТРазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТРазмерОграниченияПоДоходам";

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления взносов с учетом приоритетов
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахОСМС.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахОСМС.ВидДохода КАК ВидДохода,
	|	СведенияОСтавкахОСМС.СтавкаВзносы КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
	|
	|ГДЕ
	|	СведенияОСтавкахОСМС.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахОСМС.Период <= &парамКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахОСМС.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахОСМС.ВидДохода КАК ВидДохода,
	|	СведенияОСтавкахОСМС.СтавкаВзносы КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
	|
	|ГДЕ
	|	СведенияОСтавкахОСМС.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахОСМС.Период <= &парамКонец
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления взносов с наивысшим приоритетом
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахОСМССрезПоследних.Период КАК Период,
	|	СведенияОСтавкахОСМС.ВидДохода КАК ВидДохода,
	|	СведенияОСтавкахОСМС.Ставка КАК Ставка
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахОСМС.Период,
	|			СведенияОСтавкахОСМС.ВидДохода,
	|			МИНИМУМ(СведенияОСтавкахОСМС.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахОСМС.Период,
	|			СведенияОСтавкахОСМС.ВидДохода) КАК СведенияОСтавкахОСМССрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|		ПО СведенияОСтавкахОСМССрезПоследних.Период = СведенияОСтавкахОСМС.Период
	|			И СведенияОСтавкахОСМССрезПоследних.ВидДохода = СведенияОСтавкахОСМС.ВидДохода
	|			И СведенияОСтавкахОСМССрезПоследних.Приоритет = СведенияОСтавкахОСМС.Приоритет
	|";
	
	Запрос.Текст = СведенияОСтавкахОСМСТекст;
	
	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления взносов
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахОСМС.Период КАК Период,
	|	СведенияОСтавкахОСМС.ВидДохода КАК ВидДохода,
	|	СведенияОСтавкахОСМС.Ставка КАК Ставка
	|ИЗ
	|	(" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УчетнаяПолитика.Период КАК Период,
	|	ВЫРАЗИТЬ(""ИП"" КАК СТРОКА(2)) КАК ВидДохода,
	|	ЕСТЬNULL(УчетнаяПолитика.СтавкаВОСМСДляИП, 0) КАК Ставка
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитика
	|ГДЕ 
	|	УчетнаяПолитика.Период >= ДАТАВРЕМЯ(2020, 1, 1)
	|	И УчетнаяПолитика.Организация = &парамНалогоплательщик
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахОСМССрезПоследних.Период,
	|	СведенияОСтавкахОСМССрезПоследних.ВидДохода,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТСведенияОСтавкахОСМС
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			СведенияОСтавкахОСМС.ВидДохода,
	|			МАКСИМУМ(СведенияОСтавкахОСМС.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|				ПО СведенияОСтавкахОСМС.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период,
	|			СведенияОСтавкахОСМС.ВидДохода) КАК СведенияОСтавкахОСМССрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|		ПО СведенияОСтавкахОСМССрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахОСМС.Период
	|			И СведенияОСтавкахОСМССрезПоследних.ВидДохода = СведенияОСтавкахОСМС.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахОСМССрезПоследних.Период
	//|	СведенияОСтавкахОСМССрезПоследних.ВидДохода
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;
	Запрос.Выполнить();
	СведенияОСтавкахОСМСТекст = "ВТСведенияОСтавкахОСМС";	

	ТипЗначенияВОСМСТекст  = "ЧИСЛО(15, 2)";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";
	
	// размер МЗП
	ПолеРазмерМЗП = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0)";
	
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// облагаемая база по ВОСМС
	ПолеБазаДляИсчисленияВОСМС = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > 0
	|		ТОГДА ВЫБОР 
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > " + ПолеРазмерОграниченияПоДоходам + "
	|				ТОГДА " + ПолеРазмерОграниченияПоДоходам + "
	|			ИНАЧЕ " + ПолеОблагаемыйДоходЗаМесяц + "
	|		КОНЕЦ
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// Ранее исчисленная облагаемая база
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// сумма взносов исчисленная
	ПолеВзносыИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеБазаДляИсчисленияВОСМС +" > 0) 
	|					ТОГДА  " + ПолеБазаДляИсчисленияВОСМС +" * СведенияОСтавкахОСМС.Ставка
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК " + ТипЗначенияВОСМСТекст + "))";
	
	// сумма ранее исчисленных взносов
	ПолеРанееВзносыИсчисленные = "ЕСТЬNULL(ВОСМСИсчисленные.ИсчисленныйВзносЗаМесяц, 0)";

	// сумма ранее исчисленных доходов по другим видам дохода
	ПолеРанееИсчисленнаяОблагаемаяБазаПоДругимВидам = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБазаПоДругимВидам, 0)";	
	
	// сумма ранее исчисленных взносов от другого работодателя
	ИсчисленныйВзносДругойРаботадатель = "ВЫБОР КОГДА ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБазаПоДругимВидам, 0) = 0 ТОГДА ЕСТЬNULL(ВТВОСМСРасчетыСФондамиДругойРаботадатель.ИсчисленныйВзносДругойРаботадатель, 0) ИНАЧЕ 0 КОНЕЦ";
	
	// ИсчисленныеВОСМС
	//	Поля:
	//		Физлицо
	//		ВзносыИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее взносы за месяц и производит расчет 
	ИсчисленныеВОСМСТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.ФизЛицо,
	|	ВЫБОР КОГДА ДоходыЗаМесяц.Физлицо ССЫЛКА Справочник.Контрагенты ТОГДА ДоходыЗаМесяц.Физлицо.ФизЛицо ИНАЧЕ ДоходыЗаМесяц.Физлицо КОНЕЦ КАК ФизЛицоДохода,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ВидДохода,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	ДоходыЗаМесяц.ПризнакФизлицаИнвалида,
	|	ДоходыЗаМесяц.ПризнакФизлицаУчастникаВОВ,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеБазаДляИсчисленияВОСМС + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБазаПоДругимВидам + " КАК РанееИсчисленнаяОблагаемаяБазаПоДругимВидам,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходам,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	" + ПолеРазмерМЗП + " КАК РазмерМЗП,
	|	" + ПолеВзносыИсчисленные + " КАК ВОСМСЗаМесяц,
	|	" + ПолеРанееВзносыИсчисленные + " КАК РанееИсчисленныйВзнос,
	|	" + ПолеБазаДляИсчисленияВОСМС + " - " + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК ОблагаемаяБаза,
	|	" + ПолеВзносыИсчисленные + "-" + ПолеРанееВзносыИсчисленные + " КАК ВзносИсчисленный, 
	|	" + ИсчисленныйВзносДругойРаботадатель + " КАК ИсчисленныйВзносДругойРаботадатель
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ВОСМСИсчисленныеТекст + " КАК ВОСМСИсчисленные
	|		ПО ДоходыЗаМесяц.ФизЛицо = ВОСМСИсчисленные.ФизЛицо
	|			И ДоходыЗаМесяц.Период = ВОСМСИсчисленные.МесяцНалоговогоПериода
	|			И ДоходыЗаМесяц.ВидДохода = ВОСМСИсчисленные.ВидДохода
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ВТВОСМСРасчетыСФондамиДругойРаботадательТекст+" КАК ВТВОСМСРасчетыСФондамиДругойРаботадатель
	|		ПО ВТВОСМСРасчетыСФондамиДругойРаботадатель.Период = ДоходыЗаМесяц.Период 
	|			И ВЫБОР 
	|				КОГДА ДоходыЗаМесяц.Физлицо Ссылка Справочник.Контрагенты
	|					ТОГДА ВТВОСМСРасчетыСФондамиДругойРаботадатель.ФизЛицо = ДоходыЗаМесяц.Физлицо.ФизЛицо
	|				ИНАЧЕ ВТВОСМСРасчетыСФондамиДругойРаботадатель.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|			КОНЕЦ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахОСМСТекст+" КАК СведенияОСтавкахОСМС
	|	ПО ДоходыЗаМесяц.Период = СведенияОСтавкахОСМС.Период
	|			И ВЫБОР 
	|				КОГДА ДоходыЗаМесяц.Физлицо = &парамИндивидуальныйПредприниматель
	|					ТОГДА СведенияОСтавкахОСМС.ВидДохода = ""ИП""
	|				ИНАЧЕ ДоходыЗаМесяц.ВидДохода = СведенияОСтавкахОСМС.ВидДохода
	|			КОНЕЦ
 	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо, 
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ВидДохода";

	Запрос.Текст = ИсчисленныеВОСМСТекст;	
	Возврат Запрос.Выполнить();
									
КонецФункции		

// Получить данные для расчета ООСМС
// Параметры: 
//  ПоследнийМесяцНалоговогоПериода - максимальный налоговый период, за который расчитываются зарегистрированные доходы и исчисленные отчисления 
//  ПериодРегистрации - дата периода, в котором учитываются зарегистрированные доходы и исчисленные отчисления 
//  Налогоплательщик - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ООСМС
//	ОтражениеПоПериодуРегистрации - булево
//	ДополнительныеПараметрыЗапроса - Структура, дополнительные отборы
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаООСМС(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено) Экспорт
	
	Если ПериодРегистрации >= '20210101' Тогда
										
		РезультатЗапроса = ПолучитьДанныеДляРасчетаООСМСПосле2021(ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик, 
																Регистратор, 
																СписокФизЛицТекст,
																ОтражениеПоПериодуРегистрации,
																ДополнительныеПараметрыЗапроса);
	ИначеЕсли ПериодРегистрации >= '20200101' Тогда
		// Расчет ООСМС с 2018 без ограничения на мин. сумму объекта исчисления 1 МЗП
		РезультатЗапроса = ПолучитьДанныеДляРасчетаООСМСПосле2020(ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик, 
																Регистратор, 
																СписокФизЛицТекст,
																ОтражениеПоПериодуРегистрации,
																ДополнительныеПараметрыЗапроса);
	ИначеЕсли ПериодРегистрации >= '20190101' Тогда
		// Расчет ООСМС с 2018 без ограничения на мин. сумму объекта исчисления 1 МЗП
		РезультатЗапроса = ПолучитьДанныеДляРасчетаООСМСПосле2019(ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик, 
																Регистратор, 
																СписокФизЛицТекст,
																ОтражениеПоПериодуРегистрации,
																ДополнительныеПараметрыЗапроса);
		
	ИначеЕсли ПериодРегистрации >= '20180101' Тогда
		// Расчет ООСМС с 2018 без ограничения на мин. сумму объекта исчисления 1 МЗП
		РезультатЗапроса = ПолучитьДанныеДляРасчетаООСМСПосле2018(ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик, 
																Регистратор, 
																СписокФизЛицТекст,
																ОтражениеПоПериодуРегистрации,
																ДополнительныеПараметрыЗапроса);
		
	Иначе
		// Расчет ООСМС с ограничением на мин. сумму объекта исчисления 1 МЗП
		РезультатЗапроса = ПолучитьДанныеДляРасчетаООСМСДо2018(ПоследнийМесяцНалоговогоПериода, 
																ПериодРегистрации, 
																Налогоплательщик, 
																Регистратор, 
																СписокФизЛицТекст,
																ОтражениеПоПериодуРегистрации,
																ДополнительныеПараметрыЗапроса);
		
	КонецЕсли;
	
	Возврат РезультатЗапроса;
	
КонецФункции

// Получить данные для расчета ООСМС по правилам 2017 года
// Параметры: 
//  ПоследнийМесяцНалоговогоПериода - максимальный налоговый период, за который расчитываются зарегистрированные доходы и исчисленные отчисления 
//  ПериодРегистрации - дата периода, в котором учитываются зарегистрированные доходы и исчисленные отчисления 
//  Налогоплательщик - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ООСМС
//	ОтражениеПоПериодуРегистрации - булево
//	ДополнительныеПараметрыЗапроса - Структура, дополнительные отборы
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаООСМСДо2018(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено)
	
	Если ОтражениеПоПериодуРегистрации И ПериодРегистрации < '20170701' Тогда
		Сообщить("Расчет Отчислений ОСМС до июля 2017 года не предусмотрен.");
		Возврат Неопределено;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидООСМС", 			Справочники.НалогиСборыОтчисления.ОтчисленияОбязательноеСоциальноеМедицинскоеСтрахование);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ООСМССведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|	И ООСМССведенияОДоходах.Активность
		|	И ООСМССведенияОДоходах.Период >= ДАТАВРЕМЯ(2017, 7, 1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ООСМССведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ООСМССведенияОДоходах.Активность
	|	И ООСМССведенияОДоходах.Период >= ДАТАВРЕМЯ(2017, 7, 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);

	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	
	// ФизлицаБезМедицинскогоСтрахования
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц не подлежащих социальному медицинскому страхованию
	ФизлицаБезМедицинскогоСтрахованияТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаБезМедицинскогоСтрахования
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезМедицинскогоСтрахованияТекст;
	Запрос.Выполнить();
	ФизлицаБезМедицинскогоСтрахованияТекст = "ВТФизлицаБезМедицинскогоСтрахования";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТФизлицаПенсионеры";
	
	// ФизлицаИнвалиды
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-инвалидов
	ФизлицаИнвалидыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОбИнвалидностиФизлиц.Физлицо,
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки
	|ПОМЕСТИТЬ ВТ_ФизлицаИнвалиды
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамКонец) КАК СведенияОбИнвалидностиФизлиц
	|
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|";
	Запрос.Текст = ФизлицаИнвалидыТекст;
	Запрос.Выполнить();
	ФизлицаИнвалидыТекст = "ВТ_ФизлицаИнвалиды";

	// ФизлицаУчастникиВОВ
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц участников и инвалидов ВОВ
	ФизлицаУчастникиВОВТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОФизлицахУчастникахВОВ.ФизЛицо
	|ПОМЕСТИТЬ ВТ_ФизлицаУчастникиВОВ
	|ИЗ
	|	РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(&парамКонец) КАК СведенияОФизлицахУчастникахВОВ
	|
	|ГДЕ
	|	СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.УчастникВОВ)
	|	ИЛИ СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.ИнвалидВОВ)
	|";
	Запрос.Текст = ФизлицаУчастникиВОВТекст;
	Запрос.Выполнить();
	ФизлицаУчастникиВОВТекст = "ВТ_ФизлицаУчастникиВОВ";
	
	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет отчислений
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ООСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаБезМедицинскогоСтрахования.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаИнвалиды.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаИнвалида,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаУчастникиВОВ.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезМедицинскогоСтрахованияТекст + " КАК ФизлицаБезМедицинскогоСтрахования
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаБезМедицинскогоСтрахования.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаПенсионеры.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаИнвалидыТекст + " КАК ФизлицаИнвалиды
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаИнвалиды.ФизЛицо
	|			И (ФизлицаИнвалиды.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	| 				ИЛИ КОНЕЦПЕРИОДА(ФизлицаИнвалиды.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаУчастникиВОВТекст + " КАК ФизлицаУчастникиВОВ
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаУчастникиВОВ.ФизЛицо
	|
	|ГДЕ
	|	ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|	И ООСМССведенияОДоходах.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ),
	|	ООСМССведенияОДоходах.ФизЛицо
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТПериоды";

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые отчислениями доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	ООСМСОбороты.ФизЛицо КАК ФизЛицо,
	|	ООСМСОбороты.Период КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ООСМСОбороты.СуммаДоходаОборот) - СУММА(ООСМСОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ООСМСОбороты.ОблагаемаяБазаОборот) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ООСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СУММА(ВЫБОР 
	|			КОГДА ООСМССведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА ООСМССведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	 	СУММА(ООСМССведенияОДоходах.СуммаВычетаОборот) КАК СуммаВычетаОборот,
	|		СУММА(ООСМССведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|		МАКСИМУМ(Работники.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|	ИЗ
	|		РегистрНакопления.ООСМССведенияОДоходах.Обороты(
	|				&парамНачало,
	|				&парамКонец,
	|				МЕСЯЦ,
	|				ПериодРегистрации <= &парамКонецПериодаРегистрации
	|				И Налогоплательщик = &парамНалогоплательщик) КАК ООСМССведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
	|			ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ООСМССведенияОДоходах.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ)) КАК ООСМСОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ООСМСОбороты.Период,
	|	ООСМСОбороты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ООСМСОбороты.ФизЛицо,
	|	ООСМСОбороты.Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТДоходы";
		
	// ООСМСРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленноеОтчисление
	//
	//	Описание:
	//	Выбирает исчисленные отчисления ОСМС (приходы по регистру ООСМСРасчетыСФондами)
	//  для СписокФизлиц
	ООСМСРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ООСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаИнвалида) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаУчастникаВОВ) = 0
	|			ТОГДА СУММА(ООСМСРасчетыСФондами.Отчисление)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленноеОтчисление
	|
	|ПОМЕСТИТЬ ВТООСМСРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ООСМСРасчетыСФондами КАК ООСМСРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ООСМСРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ООСМСРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ООСМСРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	ООСМСРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ООСМСРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	ООСМСРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ООСМСРасчетыСФондами.ВидСтроки = &парамВидСтроки И
	|	ООСМСРасчетыСФондами.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода,
	|	ООСМСРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ООСМСРасчетыСФондами.ФизЛицо,
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода";

	Запрос.Текст = ООСМСРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ООСМСРасчетыСФондамиТекст = "ВТООСМСРасчетыСФондами";

	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления отчислений
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 15, 0) КАК ОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП
	|
	|ПОМЕСТИТЬ ВТРазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТРазмерОграниченияПоДоходам";

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления взносов с учетом приоритетов
	СведенияОСтавкахОСМСТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахОСМС.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахОСМС.СтавкаОтчисления КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
	|ГДЕ
	|	СведенияОСтавкахОСМС.Период <= &парамКонец
	|	И СведенияОСтавкахОСМС.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахОСМССрезПоследних.Период,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТСведенияОСтавкахОСМС
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			МАКСИМУМ(СведенияОСтавкахОСМС.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|				ПО СведенияОСтавкахОСМС.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период) КАК СведенияОСтавкахОСМССрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|		ПО СведенияОСтавкахОСМССрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахОСМС.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахОСМССрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;
	Запрос.Выполнить();
	СведенияОСтавкахОСМСТекст = "ВТСведенияОСтавкахОСМС";	

	ТипЗначенияООСМСТекст  = "ЧИСЛО(15, 2)";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";

	// размер МЗП
	ПолеРазмерМЗП = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0)";
	
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// облагаемая база по ООСМС
	ПолеБазаДляИсчисленияООСМС = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > 0
	|		ТОГДА ВЫБОР
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " < " + ПолеРазмерМЗП + "
	|				ТОГДА " + ПолеРазмерМЗП + "
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > " + ПолеРазмерОграниченияПоДоходам + "
	|				ТОГДА " + ПолеРазмерОграниченияПоДоходам + "
	|			ИНАЧЕ " + ПолеОблагаемыйДоходЗаМесяц + "
	|		КОНЕЦ
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// Ранее исчисленная облагаемая база
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	
	// сумма отчислений исчисленная
	ПолеОтчисленияИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеБазаДляИсчисленияООСМС +" > 0) 
	|					ТОГДА  " + ПолеБазаДляИсчисленияООСМС +" * СведенияОСтавкахОСМС.Ставка
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК " + ТипЗначенияООСМСТекст + "))";
	
	// сумма ранее исчисленных отчислений
	ПолеРанееОтчисленияИсчисленные = "ЕСТЬNULL(ООСМСРасчетыСФондами.ИсчисленноеОтчисление, 0)";

	// ИсчисленныеООСМС
	//	Поля:
	//		Физлицо
	//		ОтчисленияИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее отчисления за месяц и производит расчет

	ИсчисленныеООСМСТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	ДоходыЗаМесяц.ПризнакФизлицаИнвалида,
	|	ДоходыЗаМесяц.ПризнакФизлицаУчастникаВОВ,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеБазаДляИсчисленияООСМС + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходам,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	" + ПолеРазмерМЗП + " КАК РазмерМЗП,
	|	" + ПолеОтчисленияИсчисленные + " КАК ООСМСЗаМесяц,
	|	" + ПолеРанееОтчисленияИсчисленные + " КАК РанееОтчисленияИсчисленные,
	|	" + ПолеОтчисленияИсчисленные + "-" + ПолеРанееОтчисленияИсчисленные + " КАК ОтчислениеИсчисленное
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ООСМСРасчетыСФондамиТекст+" КАК ООСМСРасчетыСФондами
	|		ПО ООСМСРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ООСМСРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахОСМСТекст+" КАК СведенияОСтавкахОСМС
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахОСМС.Период
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо, 
	|	ДоходыЗаМесяц.Период";

	Запрос.Текст = ИсчисленныеООСМСТекст;	
	Возврат Запрос.Выполнить();
									
КонецФункции		

// Получить данные для расчета ООСМС по правилам 2018 года
// Параметры: 
//  ПоследнийМесяцНалоговогоПериода - максимальный налоговый период, за который расчитываются зарегистрированные доходы и исчисленные отчисления 
//  ПериодРегистрации - дата периода, в котором учитываются зарегистрированные доходы и исчисленные отчисления 
//  Налогоплательщик - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ООСМС
//	ОтражениеПоПериодуРегистрации - булево
//	ДополнительныеПараметрыЗапроса - Структура, дополнительные отборы
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаООСМСПосле2018(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДатаАктуальности", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОрганизация", Налогоплательщик);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УчетнаяПолитикаНУ.ПрименятьОграничениеНаМинимальныйОбъектОСМС
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&ДатаАктуальности, Организация = &парамОрганизация) КАК УчетнаяПолитикаНУ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
    	ПрименятьОграничениеНаМинимальныйОбъектОСМС =  Выборка.ПрименятьОграничениеНаМинимальныйОбъектОСМС;
	Иначе
    	ПрименятьОграничениеНаМинимальныйОбъектОСМС =  Ложь;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидООСМС", 			Справочники.НалогиСборыОтчисления.ОтчисленияОбязательноеСоциальноеМедицинскоеСтрахование);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ООСМССведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|	И ООСМССведенияОДоходах.Активность
		|	И ООСМССведенияОДоходах.Период >= ДАТАВРЕМЯ(2017, 7, 1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ООСМССведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ООСМССведенияОДоходах.Активность
	|	И ООСМССведенияОДоходах.Период >= ДАТАВРЕМЯ(2017, 7, 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	
	// ФизлицаБезМедицинскогоСтрахования
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц не подлежащих социальному медицинскому страхованию
	ФизлицаБезМедицинскогоСтрахованияТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаБезМедицинскогоСтрахования
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезМедицинскогоСтрахованияТекст;
	Запрос.Выполнить();
	ФизлицаБезМедицинскогоСтрахованияТекст = "ВТФизлицаБезМедицинскогоСтрахования";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТФизлицаПенсионеры";
	
	// ФизлицаИнвалиды
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-инвалидов
	ФизлицаИнвалидыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОбИнвалидностиФизлиц.Физлицо,
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки
	|ПОМЕСТИТЬ ВТ_ФизлицаИнвалиды
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамКонец) КАК СведенияОбИнвалидностиФизлиц
	|
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|";
	Запрос.Текст = ФизлицаИнвалидыТекст;
	Запрос.Выполнить();
	ФизлицаИнвалидыТекст = "ВТ_ФизлицаИнвалиды";

	// ФизлицаУчастникиВОВ
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц участников и инвалидов ВОВ
	ФизлицаУчастникиВОВТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОФизлицахУчастникахВОВ.ФизЛицо
	|ПОМЕСТИТЬ ВТ_ФизлицаУчастникиВОВ
	|ИЗ
	|	РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(&парамКонец) КАК СведенияОФизлицахУчастникахВОВ
	|
	|ГДЕ
	|	СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.УчастникВОВ)
	|	ИЛИ СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.ИнвалидВОВ)
	|";
	Запрос.Текст = ФизлицаУчастникиВОВТекст;
	Запрос.Выполнить();
	ФизлицаУчастникиВОВТекст = "ВТ_ФизлицаУчастникиВОВ";
	
	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет отчислений
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ООСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаБезМедицинскогоСтрахования.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаИнвалиды.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаИнвалида,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаУчастникиВОВ.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезМедицинскогоСтрахованияТекст + " КАК ФизлицаБезМедицинскогоСтрахования
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаБезМедицинскогоСтрахования.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаПенсионеры.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаИнвалидыТекст + " КАК ФизлицаИнвалиды
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаИнвалиды.ФизЛицо
	|			И (ФизлицаИнвалиды.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	| 				ИЛИ КОНЕЦПЕРИОДА(ФизлицаИнвалиды.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаУчастникиВОВТекст + " КАК ФизлицаУчастникиВОВ
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаУчастникиВОВ.ФизЛицо
	|
	|ГДЕ
	|	ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|	И ООСМССведенияОДоходах.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ),
	|	ООСМССведенияОДоходах.ФизЛицо
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТПериоды";

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые отчислениями доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	ООСМСОбороты.ФизЛицо КАК ФизЛицо,
	|	ООСМСОбороты.Период КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ООСМСОбороты.СуммаДоходаОборот) - СУММА(ООСМСОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ООСМСОбороты.ОблагаемаяБазаОборот) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ООСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СУММА(ВЫБОР 
	|			КОГДА ООСМССведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА ООСМССведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборот,
	|	 	СУММА(ООСМССведенияОДоходах.СуммаВычетаОборот) КАК СуммаВычетаОборот,
	|		СУММА(ООСМССведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|		МАКСИМУМ(Работники.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|	ИЗ
	|		РегистрНакопления.ООСМССведенияОДоходах.Обороты(
	|				&парамНачало,
	|				&парамКонец,
	|				МЕСЯЦ,
	|				ПериодРегистрации <= &парамКонецПериодаРегистрации
	|				И Налогоплательщик = &парамНалогоплательщик) КАК ООСМССведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
	|			ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ООСМССведенияОДоходах.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ)) КАК ООСМСОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ООСМСОбороты.Период,
	|	ООСМСОбороты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ООСМСОбороты.ФизЛицо,
	|	ООСМСОбороты.Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТДоходы";
		
	// ООСМСРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленноеОтчисление
	//
	//	Описание:
	//	Выбирает исчисленные отчисления ОСМС (приходы по регистру ООСМСРасчетыСФондами)
	//  для СписокФизлиц
	ООСМСРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ООСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаИнвалида) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаУчастникаВОВ) = 0
	|			ТОГДА СУММА(ООСМСРасчетыСФондами.Отчисление)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленноеОтчисление
	|
	|ПОМЕСТИТЬ ВТООСМСРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ООСМСРасчетыСФондами КАК ООСМСРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ООСМСРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ООСМСРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ООСМСРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	ООСМСРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ООСМСРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	ООСМСРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ООСМСРасчетыСФондами.ВидСтроки = &парамВидСтроки И
	|	ООСМСРасчетыСФондами.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода,
	|	ООСМСРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ООСМСРасчетыСФондами.ФизЛицо,
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода";

	Запрос.Текст = ООСМСРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ООСМСРасчетыСФондамиТекст = "ВТООСМСРасчетыСФондами";

	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления отчислений
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 15, 0) КАК ОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП
	|
	|ПОМЕСТИТЬ ВТРазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТРазмерОграниченияПоДоходам";

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления взносов с учетом приоритетов
	СведенияОСтавкахОСМСТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахОСМС.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахОСМС.СтавкаОтчисления КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
	|ГДЕ
	|	СведенияОСтавкахОСМС.Период <= &парамКонец
	|	И СведенияОСтавкахОСМС.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахОСМССрезПоследних.Период,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТСведенияОСтавкахОСМС
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			МАКСИМУМ(СведенияОСтавкахОСМС.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|				ПО СведенияОСтавкахОСМС.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период) КАК СведенияОСтавкахОСМССрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|		ПО СведенияОСтавкахОСМССрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахОСМС.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахОСМССрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;
	Запрос.Выполнить();
	СведенияОСтавкахОСМСТекст = "ВТСведенияОСтавкахОСМС";	

	ТипЗначенияООСМСТекст  = "ЧИСЛО(15, 2)";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";
	
	// размер МЗП
	ПолеРазмерМЗП = ?(ПрименятьОграничениеНаМинимальныйОбъектОСМС, "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0)", "0");
	
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// облагаемая база по ООСМС
	ПолеБазаДляИсчисленияООСМС = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > 0
	|		ТОГДА ВЫБОР
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " < " + ПолеРазмерМЗП + "
	|				ТОГДА " + ПолеРазмерМЗП + "
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > " + ПолеРазмерОграниченияПоДоходам + "
	|				ТОГДА " + ПолеРазмерОграниченияПоДоходам + "
	|			ИНАЧЕ " + ПолеОблагаемыйДоходЗаМесяц + "
	|		КОНЕЦ
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// Ранее исчисленная облагаемая база
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// сумма отчислений исчисленная
	ПолеОтчисленияИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеБазаДляИсчисленияООСМС +" > 0) 
	|					ТОГДА  " + ПолеБазаДляИсчисленияООСМС +" * СведенияОСтавкахОСМС.Ставка
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК " + ТипЗначенияООСМСТекст + "))";
	
	// сумма ранее исчисленных отчислений
	ПолеРанееОтчисленияИсчисленные = "ЕСТЬNULL(ООСМСРасчетыСФондами.ИсчисленноеОтчисление, 0)";

	// ИсчисленныеООСМС
	//	Поля:
	//		Физлицо
	//		ОтчисленияИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее отчисления за месяц и производит расчет

	ИсчисленныеООСМСТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	ДоходыЗаМесяц.ПризнакФизлицаИнвалида,
	|	ДоходыЗаМесяц.ПризнакФизлицаУчастникаВОВ,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеБазаДляИсчисленияООСМС + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходам,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	0 КАК РазмерМЗП,
	|	" + ПолеОтчисленияИсчисленные + " КАК ООСМСЗаМесяц,
	|	" + ПолеРанееОтчисленияИсчисленные + " КАК РанееОтчисленияИсчисленные,
	|	" + ПолеОтчисленияИсчисленные + "-" + ПолеРанееОтчисленияИсчисленные + " КАК ОтчислениеИсчисленное
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ООСМСРасчетыСФондамиТекст+" КАК ООСМСРасчетыСФондами
	|		ПО ООСМСРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ООСМСРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахОСМСТекст+" КАК СведенияОСтавкахОСМС
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахОСМС.Период
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо, 
	|	ДоходыЗаМесяц.Период";

	Запрос.Текст = ИсчисленныеООСМСТекст;	
	Возврат Запрос.Выполнить();
									
КонецФункции		

// Получить данные для расчета ООСМС по правилам 2018 года
// Параметры: 
//  ПоследнийМесяцНалоговогоПериода - максимальный налоговый период, за который расчитываются зарегистрированные доходы и исчисленные отчисления 
//  ПериодРегистрации - дата периода, в котором учитываются зарегистрированные доходы и исчисленные отчисления 
//  Налогоплательщик - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ООСМС
//	ОтражениеПоПериодуРегистрации - булево
//	ДополнительныеПараметрыЗапроса - Структура, дополнительные отборы
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаООСМСПосле2019(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДатаАктуальности", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОрганизация", Налогоплательщик);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УчетнаяПолитикаНУ.ПрименятьОграничениеНаМинимальныйОбъектОСМС
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&ДатаАктуальности, Организация = &парамОрганизация) КАК УчетнаяПолитикаНУ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
    	ПрименятьОграничениеНаМинимальныйОбъектОСМС =  Выборка.ПрименятьОграничениеНаМинимальныйОбъектОСМС;
	Иначе
    	ПрименятьОграничениеНаМинимальныйОбъектОСМС =  Ложь;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидООСМС", 			Справочники.НалогиСборыОтчисления.ОтчисленияОбязательноеСоциальноеМедицинскоеСтрахование);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ООСМССведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|	И ООСМССведенияОДоходах.Активность
		|	И ООСМССведенияОДоходах.Период >= ДАТАВРЕМЯ(2017, 7, 1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ООСМССведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ООСМССведенияОДоходах.Активность
	|	И ООСМССведенияОДоходах.Период >= ДАТАВРЕМЯ(2017, 7, 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	
	// ФизлицаБезМедицинскогоСтрахования
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц не подлежащих социальному медицинскому страхованию
	ФизлицаБезМедицинскогоСтрахованияТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаБезМедицинскогоСтрахования
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезМедицинскогоСтрахованияТекст;
	Запрос.Выполнить();
	ФизлицаБезМедицинскогоСтрахованияТекст = "ВТФизлицаБезМедицинскогоСтрахования";
		
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТФизлицаПенсионеры";
	
	// ФизлицаИнвалиды
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-инвалидов
	ФизлицаИнвалидыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОбИнвалидностиФизлиц.Физлицо,
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки
	|ПОМЕСТИТЬ ВТ_ФизлицаИнвалиды
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамКонец) КАК СведенияОбИнвалидностиФизлиц
	|
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|";
	Запрос.Текст = ФизлицаИнвалидыТекст;
	Запрос.Выполнить();
	ФизлицаИнвалидыТекст = "ВТ_ФизлицаИнвалиды";

	// ФизлицаУчастникиВОВ
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц участников и инвалидов ВОВ
	ФизлицаУчастникиВОВТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОФизлицахУчастникахВОВ.ФизЛицо
	|ПОМЕСТИТЬ ВТ_ФизлицаУчастникиВОВ
	|ИЗ
	|	РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(&парамКонец) КАК СведенияОФизлицахУчастникахВОВ
	|
	|ГДЕ
	|	СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.УчастникВОВ)
	|	ИЛИ СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.ИнвалидВОВ)
	|";
	Запрос.Текст = ФизлицаУчастникиВОВТекст;
	Запрос.Выполнить();
	ФизлицаУчастникиВОВТекст = "ВТ_ФизлицаУчастникиВОВ";
	
	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет отчислений
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ООСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаБезМедицинскогоСтрахования.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаИнвалиды.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаИнвалида,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаУчастникиВОВ.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезМедицинскогоСтрахованияТекст + " КАК ФизлицаБезМедицинскогоСтрахования
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаБезМедицинскогоСтрахования.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаПенсионеры.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаИнвалидыТекст + " КАК ФизлицаИнвалиды
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаИнвалиды.ФизЛицо
	|			И (ФизлицаИнвалиды.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	| 				ИЛИ КОНЕЦПЕРИОДА(ФизлицаИнвалиды.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаУчастникиВОВТекст + " КАК ФизлицаУчастникиВОВ
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаУчастникиВОВ.ФизЛицо
	|
	|ГДЕ
	|	ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|	И ООСМССведенияОДоходах.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ),
	|	ООСМССведенияОДоходах.ФизЛицо
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТПериоды";

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые отчислениями доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	ООСМСОбороты.ФизЛицо КАК ФизЛицо,
	|	ООСМСОбороты.Период КАК Период,
	|	СУММА(ООСМСОбороты.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ООСМСОбороты.СуммаДоходаОборотНеОблагаетсяЦеликом) - СУММА(ООСМСОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ООСМСОбороты.ОблагаемаяБазаОборот) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ООСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СУММА(ООСМССведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаОборот,
	|		СУММА(ВЫБОР 
	|			КОГДА ООСМССведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА ООСМССведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборотНеОблагаетсяЦеликом,
	|	 	СУММА(ООСМССведенияОДоходах.СуммаВычетаОборот) КАК СуммаВычетаОборот,
	|		СУММА(ООСМССведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|		МАКСИМУМ(Работники.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|	ИЗ
	|		РегистрНакопления.ООСМССведенияОДоходах.Обороты(
	|				&парамНачало,
	|				&парамКонец,
	|				МЕСЯЦ,
	|				ПериодРегистрации <= &парамКонецПериодаРегистрации
	|				И Налогоплательщик = &парамНалогоплательщик) КАК ООСМССведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
	|			ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ООСМССведенияОДоходах.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ)) КАК ООСМСОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ООСМСОбороты.Период,
	|	ООСМСОбороты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ООСМСОбороты.ФизЛицо,
	|	ООСМСОбороты.Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТДоходы";
		
	// ООСМСРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленноеОтчисление
	//
	//	Описание:
	//	Выбирает исчисленные отчисления ОСМС (приходы по регистру ООСМСРасчетыСФондами)
	//  для СписокФизлиц
	ООСМСРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ООСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаИнвалида) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаУчастникаВОВ) = 0
	|			ТОГДА СУММА(ООСМСРасчетыСФондами.Отчисление)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленноеОтчисление
	|
	|ПОМЕСТИТЬ ВТООСМСРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ООСМСРасчетыСФондами КАК ООСМСРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ООСМСРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ООСМСРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ООСМСРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	ООСМСРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ООСМСРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	ООСМСРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ООСМСРасчетыСФондами.ВидСтроки = &парамВидСтроки И
	|	ООСМСРасчетыСФондами.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода,
	|	ООСМСРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ООСМСРасчетыСФондами.ФизЛицо,
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода";

	Запрос.Текст = ООСМСРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ООСМСРасчетыСФондамиТекст = "ВТООСМСРасчетыСФондами";

	// ИПНСведенияОДоходах
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		КорректировкаДохода
	//
	//	Описание:
	//	Выбирает размер корректировки дохода
	//  
	ИПНСведенияОДоходах = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СУММА(ИПНСведенияОДоходах.ПримененнаяЛьготаОборот) КАК МаксимальнаяСуммаКорректировкиДохода
	|
	|ПОМЕСТИТЬ ВТ_ИПНСведенияОДоходах
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					Налогоплательщик = &парамНалогоплательщик
	|					И ПериодРегистрации <= &парамКонецПериодаРегистрации) КАК ИПНСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ИПНСведенияОДоходах.ФизЛицо
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ПериодРегистрации,
	|	ИПНСведенияОДоходах.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ)";
	
	Запрос.Текст = ИПНСведенияОДоходах;
	Запрос.Выполнить();
	ИПНСведенияОДоходах = "ВТ_ИПНСведенияОДоходах";

	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления отчислений
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 10, 0) КАК ОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП
	|
	|ПОМЕСТИТЬ ВТРазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТРазмерОграниченияПоДоходам";
	
	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления взносов с учетом приоритетов
	СведенияОСтавкахОСМСТекст = 
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахОСМС.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахОСМС.СтавкаОтчисления КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
	|ГДЕ
	|	СведенияОСтавкахОСМС.Период <= &парамКонец
	|	И СведенияОСтавкахОСМС.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахОСМССрезПоследних.Период,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТСведенияОСтавкахОСМС
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			МАКСИМУМ(СведенияОСтавкахОСМС.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|				ПО СведенияОСтавкахОСМС.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период) КАК СведенияОСтавкахОСМССрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|		ПО СведенияОСтавкахОСМССрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахОСМС.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахОСМССрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;
	Запрос.Выполнить();
	СведенияОСтавкахОСМСТекст = "ВТСведенияОСтавкахОСМС";	

	ТипЗначенияООСМСТекст  = "ЧИСЛО(15, 2)";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";
	
	// корректировка доход за месяц
	ПолеКорректировкаДохода = " - ЕСТЬNULL(РазмерПрименяемойКорректировки.МаксимальнаяСуммаКорректировкиДохода, 0) ";
	
	// размер МЗП
	ПолеРазмерМЗП = ?(ПрименятьОграничениеНаМинимальныйОбъектОСМС, "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0)", "0");
	
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// облагаемая база по ООСМС
	ПолеБазаДляИсчисленияООСМС = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > 0
	|		ТОГДА ВЫБОР
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + ПолеКорректировкаДохода + " < " + ПолеРазмерМЗП + "
	|				ТОГДА " + ПолеРазмерМЗП + "
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + ПолеКорректировкаДохода + " > " + ПолеРазмерОграниченияПоДоходам + "
	|				ТОГДА " + ПолеРазмерОграниченияПоДоходам + "
	|			ИНАЧЕ " + ПолеОблагаемыйДоходЗаМесяц + ПолеКорректировкаДохода + "
	|		КОНЕЦ
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// Ранее исчисленная облагаемая база
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// сумма отчислений исчисленная
	ПолеОтчисленияИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеБазаДляИсчисленияООСМС +" > 0) 
	|					ТОГДА  " + ПолеБазаДляИсчисленияООСМС +" * СведенияОСтавкахОСМС.Ставка
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК " + ТипЗначенияООСМСТекст + "))";
	
	// сумма ранее исчисленных отчислений
	ПолеРанееОтчисленияИсчисленные = "ЕСТЬNULL(ООСМСРасчетыСФондами.ИсчисленноеОтчисление, 0)";

	// ИсчисленныеООСМС
	//	Поля:
	//		Физлицо
	//		ОтчисленияИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее отчисления за месяц и производит расчет

	ИсчисленныеООСМСТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	ДоходыЗаМесяц.ПризнакФизлицаИнвалида,
	|	ДоходыЗаМесяц.ПризнакФизлицаУчастникаВОВ,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеБазаДляИсчисленияООСМС + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходам,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	0 КАК РазмерМЗП,
	|	" + ПолеОтчисленияИсчисленные + " КАК ООСМСЗаМесяц,
	|	" + ПолеРанееОтчисленияИсчисленные + " КАК РанееОтчисленияИсчисленные,
	|	" + ПолеОтчисленияИсчисленные + "-" + ПолеРанееОтчисленияИсчисленные + " КАК ОтчислениеИсчисленное
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ООСМСРасчетыСФондамиТекст+" КАК ООСМСРасчетыСФондами
	|		ПО ООСМСРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ООСМСРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ИПНСведенияОДоходах+" КАК РазмерПрименяемойКорректировки
	|		ПО ДоходыЗаМесяц.Период = РазмерПрименяемойКорректировки.Период
	|			И ДоходыЗаМесяц.ФизЛицо = РазмерПрименяемойКорректировки.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахОСМСТекст+" КАК СведенияОСтавкахОСМС
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахОСМС.Период
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо, 
	|	ДоходыЗаМесяц.Период";

	Запрос.Текст = ИсчисленныеООСМСТекст;	
	Возврат Запрос.Выполнить();
									
КонецФункции		

// Получить данные для расчета ООСМС по правилам 2018 года
// Параметры: 
//  ПоследнийМесяцНалоговогоПериода - максимальный налоговый период, за который расчитываются зарегистрированные доходы и исчисленные отчисления 
//  ПериодРегистрации - дата периода, в котором учитываются зарегистрированные доходы и исчисленные отчисления 
//  Налогоплательщик - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ООСМС
//	ОтражениеПоПериодуРегистрации - булево
//	ДополнительныеПараметрыЗапроса - Структура, дополнительные отборы
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаООСМСПосле2020(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДатаАктуальности", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОрганизация", Налогоплательщик);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УчетнаяПолитикаНУ.ПрименятьОграничениеНаМинимальныйОбъектОСМС
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&ДатаАктуальности, Организация = &парамОрганизация) КАК УчетнаяПолитикаНУ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
    	ПрименятьОграничениеНаМинимальныйОбъектОСМС =  Выборка.ПрименятьОграничениеНаМинимальныйОбъектОСМС;
	Иначе
    	ПрименятьОграничениеНаМинимальныйОбъектОСМС =  Ложь;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидООСМС", 			Справочники.НалогиСборыОтчисления.ОтчисленияОбязательноеСоциальноеМедицинскоеСтрахование);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ООСМССведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|	И ООСМССведенияОДоходах.Активность
		|	И ООСМССведенияОДоходах.Период >= ДАТАВРЕМЯ(2017, 7, 1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ООСМССведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ООСМССведенияОДоходах.Активность
	|	И ООСМССведенияОДоходах.Период >= ДАТАВРЕМЯ(2017, 7, 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	
	// ФизлицаБезМедицинскогоСтрахования
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц не подлежащих социальному медицинскому страхованию
	ФизлицаБезМедицинскогоСтрахованияТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаБезМедицинскогоСтрахования
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезМедицинскогоСтрахованияТекст;
	Запрос.Выполнить();
	ФизлицаБезМедицинскогоСтрахованияТекст = "ВТФизлицаБезМедицинскогоСтрахования";
		
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТФизлицаПенсионеры";
	
	// ФизлицаИнвалиды
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-инвалидов
	ФизлицаИнвалидыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОбИнвалидностиФизлиц.Физлицо,
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки
	|ПОМЕСТИТЬ ВТ_ФизлицаИнвалиды
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамКонец) КАК СведенияОбИнвалидностиФизлиц
	|
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|";
	Запрос.Текст = ФизлицаИнвалидыТекст;
	Запрос.Выполнить();
	ФизлицаИнвалидыТекст = "ВТ_ФизлицаИнвалиды";

	// ФизлицаУчастникиВОВ
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц участников и инвалидов ВОВ
	ФизлицаУчастникиВОВТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОФизлицахУчастникахВОВ.ФизЛицо
	|ПОМЕСТИТЬ ВТ_ФизлицаУчастникиВОВ
	|ИЗ
	|	РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(&парамКонец) КАК СведенияОФизлицахУчастникахВОВ
	|
	|ГДЕ
	|	СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.УчастникВОВ)
	|	ИЛИ СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.ИнвалидВОВ)
	|";
	Запрос.Текст = ФизлицаУчастникиВОВТекст;
	Запрос.Выполнить();
	ФизлицаУчастникиВОВТекст = "ВТ_ФизлицаУчастникиВОВ";
	
	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет отчислений
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ООСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаБезМедицинскогоСтрахования.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаИнвалиды.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаИнвалида,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаУчастникиВОВ.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезМедицинскогоСтрахованияТекст + " КАК ФизлицаБезМедицинскогоСтрахования
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаБезМедицинскогоСтрахования.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаПенсионеры.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаИнвалидыТекст + " КАК ФизлицаИнвалиды
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаИнвалиды.ФизЛицо
	|			И (ФизлицаИнвалиды.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	| 				ИЛИ КОНЕЦПЕРИОДА(ФизлицаИнвалиды.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаУчастникиВОВТекст + " КАК ФизлицаУчастникиВОВ
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаУчастникиВОВ.ФизЛицо
	|
	|ГДЕ
	|	ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|	И ООСМССведенияОДоходах.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ),
	|	ООСМССведенияОДоходах.ФизЛицо
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТПериоды";

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые отчислениями доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	ООСМСОбороты.ФизЛицо КАК ФизЛицо,
	|	ООСМСОбороты.Период КАК Период,
	|	СУММА(ООСМСОбороты.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ООСМСОбороты.СуммаДоходаОборотНеОблагаетсяЦеликом) - СУММА(ООСМСОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ООСМСОбороты.ОблагаемаяБазаОборот) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ООСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СУММА(ООСМССведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаОборот,
	|		СУММА(ВЫБОР 
	|			КОГДА ООСМССведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА ООСМССведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборотНеОблагаетсяЦеликом,
	|	 	СУММА(ООСМССведенияОДоходах.СуммаВычетаОборот) КАК СуммаВычетаОборот,
	|		СУММА(ООСМССведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|		МАКСИМУМ(Работники.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|	ИЗ
	|		РегистрНакопления.ООСМССведенияОДоходах.Обороты(
	|				&парамНачало,
	|				&парамКонец,
	|				МЕСЯЦ,
	|				ПериодРегистрации <= &парамКонецПериодаРегистрации
	|				И Налогоплательщик = &парамНалогоплательщик) КАК ООСМССведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
	|			ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ООСМССведенияОДоходах.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ)) КАК ООСМСОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ООСМСОбороты.Период,
	|	ООСМСОбороты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ООСМСОбороты.ФизЛицо,
	|	ООСМСОбороты.Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТДоходы";
		
	// ООСМСРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленноеОтчисление
	//
	//	Описание:
	//	Выбирает исчисленные отчисления ОСМС (приходы по регистру ООСМСРасчетыСФондами)
	//  для СписокФизлиц
	ООСМСРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ООСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаИнвалида) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаУчастникаВОВ) = 0
	|			ТОГДА СУММА(ООСМСРасчетыСФондами.Отчисление)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленноеОтчисление
	|
	|ПОМЕСТИТЬ ВТООСМСРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ООСМСРасчетыСФондами КАК ООСМСРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ООСМСРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ООСМСРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ООСМСРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	ООСМСРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ООСМСРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	ООСМСРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ООСМСРасчетыСФондами.ВидСтроки = &парамВидСтроки И
	|	ООСМСРасчетыСФондами.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода,
	|	ООСМСРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ООСМСРасчетыСФондами.ФизЛицо,
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода";

	Запрос.Текст = ООСМСРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ООСМСРасчетыСФондамиТекст = "ВТООСМСРасчетыСФондами";

	// ИПНСведенияОДоходах
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		КорректировкаДохода
	//
	//	Описание:
	//	Выбирает размер корректировки дохода
	//  
	ИПНСведенияОДоходах = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СУММА(ИПНСведенияОДоходах.ПримененнаяЛьготаОборот) КАК МаксимальнаяСуммаКорректировкиДохода
	|
	|ПОМЕСТИТЬ ВТ_ИПНСведенияОДоходах
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					Налогоплательщик = &парамНалогоплательщик
	|					И ПериодРегистрации <= &парамКонецПериодаРегистрации) КАК ИПНСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ИПНСведенияОДоходах.ФизЛицо
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ПериодРегистрации,
	|	ИПНСведенияОДоходах.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ)";
	
	Запрос.Текст = ИПНСведенияОДоходах;
	Запрос.Выполнить();
	ИПНСведенияОДоходах = "ВТ_ИПНСведенияОДоходах";

	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления отчислений
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 10, 0) КАК ОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП
	|
	|ПОМЕСТИТЬ ВТРазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТРазмерОграниченияПоДоходам";
	
	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ООСМС для каждого периода исчисления взносов с учетом приоритетов
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахОСМС.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахОСМС.СтавкаОтчисления КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
	|ГДЕ
	|	СведенияОСтавкахОСМС.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахОСМС.Период <= &парамКонец
	|	И СведенияОСтавкахОСМС.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахОСМС.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахОСМС.СтавкаОтчисления КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
	|ГДЕ
	|	СведенияОСтавкахОСМС.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахОСМС.Период <= &парамКонец
	|	И СведенияОСтавкахОСМС.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ООСМС для каждого периода исчисления взносов с наивысшим приоритетом
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахОСМССрезПоследних.Период КАК Период,
	|	СведенияОСтавкахОСМС.Ставка КАК Ставка
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахОСМС.Период,
	|			МИНИМУМ(СведенияОСтавкахОСМС.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахОСМС.Период) КАК СведенияОСтавкахОСМССрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|		ПО СведенияОСтавкахОСМССрезПоследних.Период = СведенияОСтавкахОСМС.Период
	|			И СведенияОСтавкахОСМССрезПоследних.Приоритет = СведенияОСтавкахОСМС.Приоритет
	|";
	
	Запрос.Текст = СведенияОСтавкахОСМСТекст;

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахОСМССрезПоследних.Период,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТСведенияОСтавкахОСМС
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			МАКСИМУМ(СведенияОСтавкахОСМС.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|				ПО СведенияОСтавкахОСМС.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период) КАК СведенияОСтавкахОСМССрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|		ПО СведенияОСтавкахОСМССрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахОСМС.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахОСМССрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;
	Запрос.Выполнить();
	СведенияОСтавкахОСМСТекст = "ВТСведенияОСтавкахОСМС";	

	ТипЗначенияООСМСТекст  = "ЧИСЛО(15, 2)";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";
	
	// корректировка доход за месяц
	ПолеКорректировкаДохода = ?(ПрименятьКорректировкуПрочихНалоговВзносовОтчислений(Налогоплательщик, ПериодРегистрации),
	" - ЕСТЬNULL(РазмерПрименяемойКорректировки.МаксимальнаяСуммаКорректировкиДохода, 0) ", "");
	
	// размер МЗП
	ПолеРазмерМЗП = ?(ПрименятьОграничениеНаМинимальныйОбъектОСМС, "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0)", "0");
	
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// облагаемая база по ООСМС
	ПолеБазаДляИсчисленияООСМС = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > 0
	|		ТОГДА ВЫБОР
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + ПолеКорректировкаДохода + " < " + ПолеРазмерМЗП + "
	|				ТОГДА " + ПолеРазмерМЗП + "
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + ПолеКорректировкаДохода + " > " + ПолеРазмерОграниченияПоДоходам + "
	|				ТОГДА " + ПолеРазмерОграниченияПоДоходам + "
	|			ИНАЧЕ " + ПолеОблагаемыйДоходЗаМесяц + ПолеКорректировкаДохода + "
	|		КОНЕЦ
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// Ранее исчисленная облагаемая база
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// сумма отчислений исчисленная
	ПолеОтчисленияИсчисленные = 
	"(ВЫРАЗИТЬ(ВЫБОР 
	|				КОГДА (" + ПолеБазаДляИсчисленияООСМС +" > 0) 
	|					ТОГДА  " + ПолеБазаДляИсчисленияООСМС +" * СведенияОСтавкахОСМС.Ставка
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК " + ТипЗначенияООСМСТекст + "))";
	
	// сумма ранее исчисленных отчислений
	ПолеРанееОтчисленияИсчисленные = "ЕСТЬNULL(ООСМСРасчетыСФондами.ИсчисленноеОтчисление, 0)";

	// ИсчисленныеООСМС
	//	Поля:
	//		Физлицо
	//		ОтчисленияИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее отчисления за месяц и производит расчет

	ИсчисленныеООСМСТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	ДоходыЗаМесяц.ПризнакФизлицаИнвалида,
	|	ДоходыЗаМесяц.ПризнакФизлицаУчастникаВОВ,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеБазаДляИсчисленияООСМС + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходам,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	0 КАК РазмерМЗП,
	|	" + ПолеОтчисленияИсчисленные + " КАК ООСМСЗаМесяц,
	|	" + ПолеРанееОтчисленияИсчисленные + " КАК РанееОтчисленияИсчисленные,
	|	" + ПолеОтчисленияИсчисленные + "-" + ПолеРанееОтчисленияИсчисленные + " КАК ОтчислениеИсчисленное
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ООСМСРасчетыСФондамиТекст+" КАК ООСМСРасчетыСФондами
	|		ПО ООСМСРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ООСМСРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ИПНСведенияОДоходах+" КАК РазмерПрименяемойКорректировки
	|		ПО ДоходыЗаМесяц.Период = РазмерПрименяемойКорректировки.Период
	|			И ДоходыЗаМесяц.ФизЛицо = РазмерПрименяемойКорректировки.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахОСМСТекст+" КАК СведенияОСтавкахОСМС
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахОСМС.Период
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо, 
	|	ДоходыЗаМесяц.Период";

	Запрос.Текст = ИсчисленныеООСМСТекст;	
	Возврат Запрос.Выполнить();
									
КонецФункции		

// Получить данные для расчета ООСМС по правилам 2021 года
// Параметры: 
//  ПоследнийМесяцНалоговогоПериода - максимальный налоговый период, за который расчитываются зарегистрированные доходы и исчисленные отчисления 
//  ПериодРегистрации - дата периода, в котором учитываются зарегистрированные доходы и исчисленные отчисления 
//  Налогоплательщик - ссылка на организацию
//  Регистратор - ссылка на регистратор записей ООСМС
//	ОтражениеПоПериодуРегистрации - булево
//	ДополнительныеПараметрыЗапроса - Структура, дополнительные отборы
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ПолучитьДанныеДляРасчетаООСМСПосле2021(Знач ПоследнийМесяцНалоговогоПериода, ПериодРегистрации, Налогоплательщик, 
									Регистратор, СписокФизЛицТекст, ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДатаАктуальности", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОрганизация", Налогоплательщик);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УчетнаяПолитикаНУ.ПрименятьОграничениеНаМинимальныйОбъектОСМС
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&ДатаАктуальности, Организация = &парамОрганизация) КАК УчетнаяПолитикаНУ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
    	ПрименятьОграничениеНаМинимальныйОбъектОСМС =  Выборка.ПрименятьОграничениеНаМинимальныйОбъектОСМС;
	Иначе
    	ПрименятьОграничениеНаМинимальныйОбъектОСМС =  Ложь;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("парамНалогоплательщик",  Налогоплательщик);
	Запрос.УстановитьПараметр("парамРегистратор",       Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидООСМС", 			Справочники.НалогиСборыОтчисления.ОтчисленияОбязательноеСоциальноеМедицинскоеСтрахование);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	Если ПоследнийМесяцНалоговогоПериода = Неопределено Тогда

		// получим ПоследнийМесяцНалоговогоПериода
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ООСМССведенияОДоходах.Период КАК Период
		|ИЗ
		|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
		|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
		|
		|ГДЕ
		|	ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
		|	И ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
		|	И ООСМССведенияОДоходах.Активность
		|	И ООСМССведенияОДоходах.Период >= ДАТАВРЕМЯ(2017, 7, 1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(ПериодРегистрации);

		Иначе
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.Период);

		КонецЕсли;

	КонецЕсли;

	// получим самый ранний месяц налогового периода
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ООСМССведенияОДоходах.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
	|
	|ГДЕ
	|	ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик 
	|	И ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ООСМССведенияОДоходах.Активность
	|	И ООСМССведенияОДоходах.Период >= ДАТАВРЕМЯ(2017, 7, 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Результат = Запрос.Выполнить();

	Если Результат.Пустой() Тогда
		ПервыйМесяцНалоговогоПериода = ПериодРегистрации;

	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.Период);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПервыйМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	
	// ФизлицаБезМедицинскогоСтрахования
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц не подлежащих социальному медицинскому страхованию
	ФизлицаБезМедицинскогоСтрахованияТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаБезМедицинскогоСтрахования
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаБезМедицинскогоСтрахованияТекст;
	Запрос.Выполнить();
	ФизлицаБезМедицинскогоСтрахованияТекст = "ВТФизлицаБезМедицинскогоСтрахования";
		
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТФизлицаПенсионеры
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ФизлицаПенсионерыТекст;
	Запрос.Выполнить();
	ФизлицаПенсионерыТекст = "ВТФизлицаПенсионеры";
	
	// ФизлицаИнвалиды
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-инвалидов
	ФизлицаИнвалидыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОбИнвалидностиФизлиц.Физлицо,
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки
	|ПОМЕСТИТЬ ВТ_ФизлицаИнвалиды
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамКонец) КАК СведенияОбИнвалидностиФизлиц
	|
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
	|";
	Запрос.Текст = ФизлицаИнвалидыТекст;
	Запрос.Выполнить();
	ФизлицаИнвалидыТекст = "ВТ_ФизлицаИнвалиды";

	// ФизлицаУчастникиВОВ
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц участников и инвалидов ВОВ
	ФизлицаУчастникиВОВТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОФизлицахУчастникахВОВ.ФизЛицо
	|ПОМЕСТИТЬ ВТ_ФизлицаУчастникиВОВ
	|ИЗ
	|	РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(&парамКонец) КАК СведенияОФизлицахУчастникахВОВ
	|
	|ГДЕ
	|	СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.УчастникВОВ)
	|	ИЛИ СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.ИнвалидВОВ)
	|";
	Запрос.Текст = ФизлицаУчастникиВОВТекст;
	Запрос.Выполнить();
	ФизлицаУчастникиВОВТекст = "ВТ_ФизлицаУчастникиВОВ";
	
	// Периоды
	// Таблица список периодов - физлиц по которым необходимо выполнить расчет отчислений
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|	ООСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаБезМедицинскогоСтрахования.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаПенсионеры.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизЛицаПенсионера,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаИнвалиды.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаИнвалида,
	|	ВЫБОР
	|		КОГДА НЕ(ФизлицаУчастникиВОВ.ФизЛицо ЕСТЬ NULL)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	РегистрНакопления.ООСМССведенияОДоходах КАК ООСМССведенияОДоходах
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК Работники
	|		ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаБезМедицинскогоСтрахованияТекст + " КАК ФизлицаБезМедицинскогоСтрахования
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаБезМедицинскогоСтрахования.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаПенсионерыТекст + " КАК ФизлицаПенсионеры
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаПенсионеры.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаИнвалидыТекст + " КАК ФизлицаИнвалиды
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаИнвалиды.ФизЛицо
	|			И (ФизлицаИнвалиды.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
	| 				ИЛИ КОНЕЦПЕРИОДА(ФизлицаИнвалиды.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаУчастникиВОВТекст + " КАК ФизлицаУчастникиВОВ
	|		ПО ООСМССведенияОДоходах.ФизЛицо = ФизлицаУчастникиВОВ.ФизЛицо
	|
	|ГДЕ
	|	ООСМССведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации
	|	И ООСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
	|	И ООСМССведенияОДоходах.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ),
	|	ООСМССведенияОДоходах.ФизЛицо
	|";

	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТПериоды";

	// Доходы
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ОблагаемыйДоход
	//
	//	Описание:
	// Выбирает облагаемые отчислениями доходы за периоды по физлицам
	ДоходыТекст = "
	|ВЫБРАТЬ
	|	ООСМСОбороты.ФизЛицо КАК ФизЛицо,
	|	ООСМСОбороты.Период КАК Период,
	|	СУММА(ООСМСОбороты.СуммаДоходаОборот) КАК СуммаДоходаВсего,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ООСМСОбороты.СуммаДоходаОборотНеОблагаетсяЦеликом) - СУММА(ООСМСОбороты.СуммаВычетаОборот)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОблагаемыйДоход,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) = 0 
	|				И МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) = 0 
	|			ТОГДА СУММА(ООСМСОбороты.ОблагаемаяБазаОборот) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ИсчисленнаяОблагаемаяБаза,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|	МАКСИМУМ(ООСМСОбороты.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ООСМССведенияОДоходах.ФизЛицо КАК Физлицо,
	|		НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ) КАК Период,
	|		СУММА(ООСМССведенияОДоходах.СуммаДоходаОборот) КАК СуммаДоходаОборот,
	|		СУММА(ВЫБОР 
	|			КОГДА ООСМССведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА ООСМССведенияОДоходах.СуммаДоходаОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДоходаОборотНеОблагаетсяЦеликом,
	|	 	СУММА(ООСМССведенияОДоходах.СуммаВычетаОборот) КАК СуммаВычетаОборот,
	|		СУММА(ООСМССведенияОДоходах.ОблагаемаяБазаОборот) КАК ОблагаемаяБазаОборот,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаБезМедицинскогоСтрахования) КАК ПризнакФизЛицаБезМедицинскогоСтрахования,
	|		МАКСИМУМ(Работники.ПризнакФизЛицаПенсионера) КАК ПризнакФизЛицаПенсионера,
	|		МАКСИМУМ(Работники.ПризнакФизлицаИнвалида) КАК ПризнакФизлицаИнвалида,
	|		МАКСИМУМ(Работники.ПризнакФизлицаУчастникаВОВ) КАК ПризнакФизлицаУчастникаВОВ
	|	ИЗ
	|		РегистрНакопления.ООСМССведенияОДоходах.Обороты(
	|				&парамНачало,
	|				&парамКонец,
	|				МЕСЯЦ,
	|				ПериодРегистрации <= &парамКонецПериодаРегистрации
	|				И Налогоплательщик = &парамНалогоплательщик) КАК ООСМССведенияОДоходах
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыТекст + " КАК Работники
	|			ПО Работники.Физлицо = ООСМССведенияОДоходах.ФизЛицо 
	|				И Работники.Период = НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ООСМССведенияОДоходах.ФизЛицо,
	|		НАЧАЛОПЕРИОДА(ООСМССведенияОДоходах.Период, МЕСЯЦ)) КАК ООСМСОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ООСМСОбороты.Период,
	|	ООСМСОбороты.Физлицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ООСМСОбороты.ФизЛицо,
	|	ООСМСОбороты.Период";
	
	Запрос.Текст = ДоходыТекст;
	Запрос.Выполнить();
	ДоходыТекст = "ВТДоходы";
		
	// ООСМСРасчетыСФондами
	//	Поля:
	//		ФизЛицо
	//		Период
	//		ИсчисленноеОтчисление
	//
	//	Описание:
	//	Выбирает исчисленные отчисления ОСМС (приходы по регистру ООСМСРасчетыСФондами)
	//  для СписокФизлиц
	ООСМСРасчетыСФондамиТекст = "
	|ВЫБРАТЬ
	|	ООСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаБезМедицинскогоСтрахования) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизЛицаПенсионера) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаИнвалида) = 0
	|				И МАКСИМУМ(РаботникиОрганизации.ПризнакФизлицаУчастникаВОВ) = 0
	|			ТОГДА СУММА(ООСМСРасчетыСФондами.Отчисление)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИсчисленноеОтчисление
	|
	|ПОМЕСТИТЬ ВТООСМСРасчетыСФондами
	|ИЗ
	|	РегистрНакопления.ООСМСРасчетыСФондами КАК ООСМСРасчетыСФондами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ООСМСРасчетыСФондами.ФизЛицо 
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
	|
	|ГДЕ
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
	|	ООСМСРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
	|	ООСМСРасчетыСФондами.Регистратор <> &парамРегистратор И
	|	ООСМСРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
	|	ООСМСРасчетыСФондами.ВидДвижения = &парамПриход И 
	|	ООСМСРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ООСМСРасчетыСФондами.ВидСтроки = &парамВидСтроки И
	|	ООСМСРасчетыСФондами.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода,
	|	ООСМСРасчетыСФондами.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ООСМСРасчетыСФондами.ФизЛицо,
	|	ООСМСРасчетыСФондами.МесяцНалоговогоПериода";

	Запрос.Текст = ООСМСРасчетыСФондамиТекст;
	Запрос.Выполнить();
	ООСМСРасчетыСФондамиТекст = "ВТООСМСРасчетыСФондами";

	// ИПНСведенияОДоходах
	//	Поля:
	//		ФизЛицо
	//		МесяцНалоговогоПериода
	//		КорректировкаДохода
	//
	//	Описание:
	//	Выбирает размер корректировки дохода
	//  
	ИПНСведенияОДоходах = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ИПНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|	СУММА(ИПНСведенияОДоходах.ПримененнаяЛьготаОборот) КАК МаксимальнаяСуммаКорректировкиДохода
	|
	|ПОМЕСТИТЬ ВТ_ИПНСведенияОДоходах
	|ИЗ
	|	РегистрНакопления.ИПНСведенияОДоходах.Обороты(
	|					&парамНачало,
	|					&парамКонец,
	|					МЕСЯЦ,
	|					Налогоплательщик = &парамНалогоплательщик
	|					И ПериодРегистрации <= &парамКонецПериодаРегистрации) КАК ИПНСведенияОДоходах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ПериодыТекст+" КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ИПНСведенияОДоходах.ФизЛицо
	|			И РаботникиОрганизации.Период = НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ПериодРегистрации,
	|	ИПНСведенияОДоходах.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИПНСведенияОДоходах.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ)";
	
	Запрос.Текст = ИПНСведенияОДоходах;
	Запрос.Выполнить();
	ИПНСведенияОДоходах = "ВТ_ИПНСведенияОДоходах";

	// РазмерОграниченияПоДоходам
	//	Поля:
	//		Период
	//		ОграничениеПоДоходам
	//
	//	Описание:
	// Выбирает размер ограничения по доходам для исчисления отчислений
	РазмерОграниченияПоДоходамТекст = "
	|ВЫБРАТЬ
	|	РасчетныеПоказателиСрезПоследних.Период,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП * 10, 0) КАК ОграничениеПоДоходам,
	|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП
	|
	|ПОМЕСТИТЬ ВТРазмерОграниченияПоДоходам
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Период,
	|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
	|	ИЗ	
	|		" + ПериодыТекст + " КАК Периоды 
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|			ПО Периоды.Период >= РасчетныеПоказатели.Период
	|
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
	|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныеПоказателиСрезПоследних.Период
	|";

	Запрос.Текст = РазмерОграниченияПоДоходамТекст;
	Запрос.Выполнить();
	РазмерОграниченияПоДоходамТекст = "ВТРазмерОграниченияПоДоходам";
	
	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ООСМС для каждого периода исчисления взносов с учетом приоритетов
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахОСМС.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахОСМС.СтавкаОтчисления КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
	|ГДЕ
	|	СведенияОСтавкахОСМС.Налогоплательщик = &парамНалогоплательщик
	|	И СведенияОСтавкахОСМС.Период <= &парамКонец
	|	И СведенияОСтавкахОСМС.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	НАЧАЛОПЕРИОДА(СведенияОСтавкахОСМС.Период, МЕСЯЦ) КАК Период,
	|	СведенияОСтавкахОСМС.СтавкаОтчисления КАК Ставка
	|ИЗ
	|	РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
	|ГДЕ
	|	СведенияОСтавкахОСМС.Налогоплательщик = &парамПустаяОрганизация
	|	И СведенияОСтавкахОСМС.Период <= &парамКонец
	|	И СведенияОСтавкахОСМС.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ООСМС для каждого периода исчисления взносов с наивысшим приоритетом
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахОСМССрезПоследних.Период КАК Период,
	|	СведенияОСтавкахОСМС.Ставка КАК Ставка
	|ИЗ
	|	(ВЫБРАТЬ
	|			СведенияОСтавкахОСМС.Период,
	|			МИНИМУМ(СведенияОСтавкахОСМС.Приоритет) КАК Приоритет
	|		ИЗ
	|			(" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|
	|		СГРУППИРОВАТЬ ПО
	|			СведенияОСтавкахОСМС.Период) КАК СведенияОСтавкахОСМССрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|		ПО СведенияОСтавкахОСМССрезПоследних.Период = СведенияОСтавкахОСМС.Период
	|			И СведенияОСтавкахОСМССрезПоследних.Приоритет = СведенияОСтавкахОСМС.Приоритет
	|";
	
	Запрос.Текст = СведенияОСтавкахОСМСТекст;

	// СведенияОСтавкахОСМС
	// Поля:
	//		Период
	//		Ставка
	//
	// Описание:
	//	Выбирает ставку ВОСМС для каждого периода исчисления
	СведенияОСтавкахОСМСТекст = "
	|ВЫБРАТЬ
	|	СведенияОСтавкахОСМССрезПоследних.Период,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) КАК ПроцентСтавки,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СведенияОСтавкахОСМС.Ставка, 0) / 100 КАК ЧИСЛО(10, 4)) КАК Ставка
	|
	|ПОМЕСТИТЬ ВТСведенияОСтавкахОСМС
	|ИЗ
	|	(ВЫБРАТЬ
	|			Периоды.Период,
	|			МАКСИМУМ(СведенияОСтавкахОСМС.Период) КАК ДатаПоследнегоИзменения
	|		ИЗ
	|			" + ПериодыТекст + " КАК Периоды
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|				ПО СведенияОСтавкахОСМС.Период <= Периоды.Период
	|
	|		СГРУППИРОВАТЬ ПО
	|			Периоды.Период) КАК СведенияОСтавкахОСМССрезПоследних
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + СведенияОСтавкахОСМСТекст + ") КАК СведенияОСтавкахОСМС
	|		ПО СведенияОСтавкахОСМССрезПоследних.ДатаПоследнегоИзменения = СведенияОСтавкахОСМС.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СведенияОСтавкахОСМССрезПоследних.Период
	|";

	Запрос.Текст = СведенияОСтавкахОСМСТекст;
	Запрос.Выполнить();
	СведенияОСтавкахОСМСТекст = "ВТСведенияОСтавкахОСМС";	

	ТипЗначенияООСМСТекст  = "ЧИСЛО(15, 2)";
	
	// облагаемый доход за месяц
	ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаМесяц.ОблагаемыйДоход, 0)";
	
	// размер МЗП
	ПолеРазмерМЗП = ?(ПрименятьОграничениеНаМинимальныйОбъектОСМС, "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.РазмерМЗП, 0)", "0");
	
	// ограничение по доходам
	ПолеРазмерОграниченияПоДоходам = "ЕСТЬNULL(ОграничениеПоДоходамЗаМесяц.ОграничениеПоДоходам, 0)";
	
	// облагаемая база по ООСМС
	ПолеБазаДляИсчисленияООСМС = 
	"ВЫБОР
	|	КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > 0
	|		ТОГДА ВЫБОР
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " < " + ПолеРазмерМЗП + "
	|				ТОГДА " + ПолеРазмерМЗП + "
	|			КОГДА " + ПолеОблагаемыйДоходЗаМесяц + " > " + ПолеРазмерОграниченияПоДоходам + "
	|				ТОГДА " + ПолеРазмерОграниченияПоДоходам + "
	|			ИНАЧЕ " + ПолеОблагаемыйДоходЗаМесяц + "
	|		КОНЕЦ
	|	ИНАЧЕ 0
	|КОНЕЦ";

	// Ранее исчисленная облагаемая база
	ПолеРанееИсчисленнаяОблагаемаяБаза = "ЕСТЬNULL(ДоходыЗаМесяц.ИсчисленнаяОблагаемаяБаза, 0)";
	
	// сумма отчислений исчисленная
	ПолеОтчисленияИсчисленные = 
	"ВЫБОР 
	|	КОГДА (" + ПолеБазаДляИсчисленияООСМС +" > 0) 
	|		ТОГДА  " + ПолеБазаДляИсчисленияООСМС +" * СведенияОСтавкахОСМС.Ставка
	|	ИНАЧЕ 0
	|КОНЕЦ";
	
	// сумма ранее исчисленных отчислений
	ПолеРанееОтчисленияИсчисленные = "ЕСТЬNULL(ООСМСРасчетыСФондами.ИсчисленноеОтчисление, 0)";

	// ИсчисленныеООСМС
	//	Поля:
	//		Физлицо
	//		ОтчисленияИсчисленные
	//	
	//	Описание:
	//	Выбирает исчисленные ранее отчисления за месяц и производит расчет

	ИсчисленныеООСМСТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоходыЗаМесяц.Физлицо,
	|	ДоходыЗаМесяц.Период,
	|	ДоходыЗаМесяц.ПризнакФизЛицаБезМедицинскогоСтрахования,
	|	ДоходыЗаМесяц.ПризнакФизЛицаПенсионера,
	|	ДоходыЗаМесяц.ПризнакФизлицаИнвалида,
	|	ДоходыЗаМесяц.ПризнакФизлицаУчастникаВОВ,
	|	" + ПолеОблагаемыйДоходЗаМесяц + " КАК ОблагаемыйДоход,
	|	" + ПолеБазаДляИсчисленияООСМС + " КАК ОблагаемаяБазаЗаМесяц,
	|	" + ПолеРанееИсчисленнаяОблагаемаяБаза + " КАК РанееИсчисленнаяОблагаемаяБаза,
	|	" + ПолеРазмерОграниченияПоДоходам + " КАК РазмерОграниченияПоДоходам,
	|	ЕСТЬNULL(СведенияОСтавкахОСМС.ПроцентСтавки, 0) КАК ПроцентСтавки,
	|	0 КАК РазмерМЗП,
	|	" + ПолеОтчисленияИсчисленные + " КАК ООСМСЗаМесяц,
	|	" + ПолеРанееОтчисленияИсчисленные + " КАК РанееОтчисленияИсчисленные,
	|	" + ПолеОтчисленияИсчисленные + "-" + ПолеРанееОтчисленияИсчисленные + " КАК ОтчислениеИсчисленное
	|ИЗ
	|	"+ДоходыТекст+" КАК ДоходыЗаМесяц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ООСМСРасчетыСФондамиТекст+" КАК ООСМСРасчетыСФондами
	|		ПО ООСМСРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
	|			И ООСМСРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+РазмерОграниченияПоДоходамТекст+" КАК ОграничениеПоДоходамЗаМесяц
	|		ПО ОграничениеПоДоходамЗаМесяц.Период = ДоходыЗаМесяц.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+ИПНСведенияОДоходах+" КАК РазмерПрименяемойКорректировки
	|		ПО ДоходыЗаМесяц.Период = РазмерПрименяемойКорректировки.Период
	|			И ДоходыЗаМесяц.ФизЛицо = РазмерПрименяемойКорректировки.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ "+СведенияОСтавкахОСМСТекст+" КАК СведенияОСтавкахОСМС
	|		ПО ДоходыЗаМесяц.Период = СведенияОСтавкахОСМС.Период
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ДоходыЗаМесяц.Физлицо, 
	|	ДоходыЗаМесяц.Период";

	Запрос.Текст = ИсчисленныеООСМСТекст;	
	Возврат Запрос.Выполнить();
									
КонецФункции		

/////////////////////////////////////////////////////////////////////////////////
// РАЗДЕЛ ДЛЯ РАСЧЕТА ПЕНИ ОПВ И СО

// Получить данные для расчета пени ОПВ и СО
// Параметры:
//	ВидОперации - ПеречислениеСсылка.ВидыОперацийРасчетПени.РасчетПениОПВ (РасчетПениСО)
//	Организация - ссылка на организацию из шапки документа
//	ДатаНачала, ДатаОкончания - период расчета пени
//	СписокФизЛицТекст - строка с текстом запроса для выбора физлиц для расчета
//	ДополнительныеПараметрыЗапроса - дополнительные параметры запроса, используемые в СписокФизлицТекст
//
// Возвращаемое значение:
//	Результат запроса
//
Функция ПолучитьДанныеДляРасчетаПениОПВиСО(ВидОперации, Организация, ДатаНачала, 
											ДатаОкончания, СписокФизЛицТекст, ДополнительныеПараметрыЗапроса = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамНачало", НачалоДня(ДатаНачала));
	Запрос.УстановитьПараметр("парамКонец", КонецДня(ДатаОкончания));
	Запрос.УстановитьПараметр("парамПриход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамРасход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("парамПоМесяцуВыплатыДоходов", Перечисления.ПорядокОпределенияСрокаПеречисления.ПоМесяцуВыплатыДоходов);
	Запрос.УстановитьПараметр("парамПоМесяцуНалоговогоПериода", Перечисления.ПорядокОпределенияСрокаПеречисления.ПоМесяцуНалоговогоПериода);
	
	Если ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениОПВ Тогда
		
		Запрос.УстановитьПараметр("парамНалогСборОтчисление", Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы);
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениВОСМС Тогда
		
		Запрос.УстановитьПараметр("парамНалогСборОтчисление", Справочники.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование);
		
	Иначе
		Если ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениОППВ Тогда
			Запрос.УстановитьПараметр("парамНалогСборОтчисление", Справочники.НалогиСборыОтчисления.ОбязательныеПрофессиональныеПенсионныеВзносы);
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениООСМС Тогда
			Запрос.УстановитьПараметр("парамНалогСборОтчисление", Справочники.НалогиСборыОтчисления.ОтчисленияОбязательноеСоциальноеМедицинскоеСтрахование);
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениОПВР Тогда
			Запрос.УстановитьПараметр("парамНалогСборОтчисление", Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносыРаботодателя);
		Иначе 
			Запрос.УстановитьПараметр("парамНалогСборОтчисление", Справочники.НалогиСборыОтчисления.ОбязательныеСоциальныеОтчисления);
		КонецЕсли;
		
		// виды платежей, на которые начисляется пени
		МассивВидовПлатежей = Новый Массив;
		МассивВидовПлатежей.Добавить(Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
		МассивВидовПлатежей.Добавить(Перечисления.ВидыПлатежейВБюджетИФонды.НалогАкт);
		МассивВидовПлатежей.Добавить(Перечисления.ВидыПлатежейВБюджетИФонды.НалогСам);
		
		Запрос.УстановитьПараметр("парамВидыПлатежей", МассивВидовПлатежей);
		
	КонецЕсли;

	// установим дополнительные параметры
	Если ДополнительныеПараметрыЗапроса <> Неопределено Тогда
		Для каждого Поле Из ДополнительныеПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(Поле.Ключ, Поле.Значение);
		КонецЦикла;
	КонецЕсли;

	// Сроки перечисления 
	СрокиПеречисленияТекст = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Месяц,
	|	СрокиПеречисленияНалоговСборовОтчислений.СрокПеречисления,
	|	СрокиПеречисленияНалоговСборовОтчислений.ПорядокОпределенияСрокаПеречисления
	|ПОМЕСТИТЬ ВТ_СрокиПеречисления
	|ИЗ
	|	(ВЫБРАТЬ
	|		МИНИМУМ(ВложенныйЗапрос.Приоритет) КАК Приоритет,
	|		ВложенныйЗапрос.Месяц КАК Месяц
	|	ИЗ
	|		(ВЫБРАТЬ
	|			1 КАК Приоритет,
	|			НАЧАЛОПЕРИОДА(СрокиПеречисления.Месяц, МЕСЯЦ) КАК Месяц
	|		ИЗ
	|			РегистрСведений.СрокиПеречисленияНалоговСборовОтчислений КАК СрокиПеречисления
	|		ГДЕ
	|			СрокиПеречисления.ВидНалога = &парамНалогСборОтчисление
	|			И СрокиПеречисления.Организация = &парамОрганизация
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			2,
	|			НАЧАЛОПЕРИОДА(СрокиПеречисления.Месяц, МЕСЯЦ)
	|		ИЗ
	|			РегистрСведений.СрокиПеречисленияНалоговСборовОтчислений КАК СрокиПеречисления
	|		ГДЕ
	|			СрокиПеречисления.ВидНалога = &парамНалогСборОтчисление
	|			И СрокиПеречисления.Организация = &парамПустаяОрганизация) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Месяц) КАК ВложенныйЗапрос
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиПеречисленияНалоговСборовОтчислений КАК СрокиПеречисленияНалоговСборовОтчислений
	|		ПО ВложенныйЗапрос.Месяц = НАЧАЛОПЕРИОДА(СрокиПеречисленияНалоговСборовОтчислений.Месяц, МЕСЯЦ)
	|			И (ВЫБОР
	|				КОГДА ВложенныйЗапрос.Приоритет = 1
	|					ТОГДА СрокиПеречисленияНалоговСборовОтчислений.Организация = &парамОрганизация
	|				ИНАЧЕ СрокиПеречисленияНалоговСборовОтчислений.Организация = &парамПустаяОрганизация
	|			КОНЕЦ)
	|			И (СрокиПеречисленияНалоговСборовОтчислений.ВидНалога = &парамНалогСборОтчисление)";
	
	Запрос.Текст = СрокиПеречисленияТекст;
	Запрос.Выполнить();
	СрокиПеречисленияТекст = "ВТ_СрокиПеречисления";
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТ_СрокиПеречисления";
	
	// список дат в течение периода расчета, в которые происходили изменения задолженности, либо
	// в которые изменялись ставки рефинансирования либо коэффициенты ставок,
	// либо завершались сроки перечисления
	
	// все года (чтобы учесть високосные) за период расчета	
	ДатыИзмененияТекст = "";
	ТекДата = НачалоДня(ДатаНачала);
	Пока ТекДата <= НачалоДня(ДатаОкончания) Цикл
		Если НЕ ПустаяСтрока(ДатыИзмененияТекст) Тогда
			ДатыИзмененияТекст = ДатыИзмененияТекст + "
			|
			|ОБЪЕДИНИТЬ
			|";
		КонецЕсли;
		ДатыИзмененияТекст = ДатыИзмененияТекст + "
		|ВЫБРАТЬ
		|	ДАТАВРЕМЯ(" + Формат(ТекДата, "ДФ=гггг,ММ,дд") + ") КАК Период " + ?(ПустаяСтрока(ДатыИзмененияТекст), "
		|ПОМЕСТИТЬ ВТ_ДатыИзменения", "") + "
		|";
		ТекДата = ДобавитьМесяц(НачалоГода(ТекДата), 12);
	КонецЦикла;
	
	Если ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениОПВ Тогда
		
		ДатыИзмененияТекст = ДатыИзмененияТекст + "
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ОПВПодлежитПеречислениюВФонды.Период, ДЕНЬ), ДЕНЬ, 1) КАК Период
		|ИЗ
		|	РегистрНакопления.ОПВПодлежитПеречислениюВФонды КАК ОПВПодлежитПеречислениюВФонды
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК СписокФизЛиц
		|		ПО ОПВПодлежитПеречислениюВФонды.ФизЛицо = СписокФизЛиц.ФизЛицо
		|ГДЕ
		|	ОПВПодлежитПеречислениюВФонды.Период МЕЖДУ &парамНачало И &парамКонец
		|	И ОПВПодлежитПеречислениюВФонды.Организация = &парамОрганизация
		|";
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениВОСМС Тогда
		
		ДатыИзмененияТекст = ДатыИзмененияТекст + "
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВОСМСПодлежитПеречислениюВФонды.Период, ДЕНЬ), ДЕНЬ, 1) КАК Период
		|ИЗ
		|	РегистрНакопления.ВОСМСПодлежитПеречислениюВФонды КАК ВОСМСПодлежитПеречислениюВФонды
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК СписокФизЛиц
		|		ПО ВОСМСПодлежитПеречислениюВФонды.ФизЛицо = СписокФизЛиц.ФизЛицо
		|ГДЕ
		|	ВОСМСПодлежитПеречислениюВФонды.Период МЕЖДУ &парамНачало И &парамКонец
		|	И ВОСМСПодлежитПеречислениюВФонды.Организация = &парамОрганизация
		|";

	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениСО Тогда

		ДатыИзмененияТекст = ДатыИзмененияТекст + "
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(СОРасчетыСФондами.Период, ДЕНЬ), ДЕНЬ, 1) КАК Период
		|ИЗ
		|	РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК СписокФизЛиц
		|		ПО СОРасчетыСФондами.ФизЛицо = СписокФизЛиц.ФизЛицо
		|ГДЕ
		|	СОРасчетыСФондами.Период МЕЖДУ &парамНачало И &парамКонец
		|	И СОРасчетыСФондами.Организация = &парамОрганизация
		|	И СОРасчетыСФондами.ВидПлатежа В (&парамВидыПлатежей)
		|";
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениООСМС Тогда

		ДатыИзмененияТекст = ДатыИзмененияТекст + "
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.Период, ДЕНЬ), ДЕНЬ, 1) КАК Период
		|ИЗ
		|	РегистрНакопления.ООСМСРасчетыСФондами КАК ООСМСРасчетыСФондами
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК СписокФизЛиц
		|		ПО ООСМСРасчетыСФондами.ФизЛицо = СписокФизЛиц.ФизЛицо
		|ГДЕ
		|	ООСМСРасчетыСФондами.Период МЕЖДУ &парамНачало И &парамКонец
		|	И ООСМСРасчетыСФондами.Организация = &парамОрганизация
		|	И ООСМСРасчетыСФондами.ВидПлатежа В (&парамВидыПлатежей)
		|";
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениОПВР Тогда
		
		ДатыИзмененияТекст = ДатыИзмененияТекст + "
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ОПВРРасчетыСФондами.Период, ДЕНЬ), ДЕНЬ, 1) КАК Период
		|ИЗ
		|	РегистрНакопления.ОПВРРасчетыСФондами КАК ОПВРРасчетыСФондами
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК СписокФизЛиц
		|		ПО ОПВРРасчетыСФондами.ФизЛицо = СписокФизЛиц.ФизЛицо
		|ГДЕ
		|	ОПВРРасчетыСФондами.Период МЕЖДУ &парамНачало И &парамКонец
		|	И ОПВРРасчетыСФондами.Организация = &парамОрганизация
		|	И ОПВРРасчетыСФондами.ВидПлатежа В (&парамВидыПлатежей)
		|";

	Иначе 
		
		ДатыИзмененияТекст = ДатыИзмененияТекст + "
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.Период, ДЕНЬ), ДЕНЬ, 1) КАК Период
		|ИЗ
		|	РегистрНакопления.ОППВРасчетыСФондами КАК ОППВРасчетыСФондами
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК СписокФизЛиц
		|		ПО ОППВРасчетыСФондами.ФизЛицо = СписокФизЛиц.ФизЛицо
		|ГДЕ
		|	ОППВРасчетыСФондами.Период МЕЖДУ &парамНачало И &парамКонец
		|	И ОППВРасчетыСФондами.Организация = &парамОрганизация
		|	И ОППВРасчетыСФондами.ВидПлатежа В (&парамВидыПлатежей)
		|";
		
	КонецЕсли;

	ДатыИзмененияТекст = ДатыИзмененияТекст + "
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СтавкаРефинансированияНБ.Период
	|ИЗ
	|	РегистрСведений.СтавкаРефинансированияНБ КАК СтавкаРефинансированияНБ
	|ГДЕ
	|	СтавкаРефинансированияНБ.Период МЕЖДУ &парамНачало И &парамКонец
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КоэффициентыСтавкиРефинансированияНБДляРасчетаПени.Период
	|ИЗ
	|	РегистрСведений.КоэффициентыСтавкиРефинансированияНБДляРасчетаПени КАК КоэффициентыСтавкиРефинансированияНБДляРасчетаПени
	|ГДЕ
	|	КоэффициентыСтавкиРефинансированияНБДляРасчетаПени.Период МЕЖДУ &парамНачало И &парамКонец
	|	И КоэффициентыСтавкиРефинансированияНБДляРасчетаПени.ВидНалога = &парамНалогСборОтчисление
	|	И КоэффициентыСтавкиРефинансированияНБДляРасчетаПени.Организация В (&парамПустаяОрганизация, &парамОрганизация)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(СрокиПеречисления.СрокПеречисления, ДЕНЬ, 1) КАК Период
	|ИЗ
	|	РегистрСведений.СрокиПеречисленияНалоговСборовОтчислений КАК СрокиПеречисления
	|ГДЕ
	|	СрокиПеречисления.СрокПеречисления МЕЖДУ &парамНачало И &парамКонец
	|	И СрокиПеречисления.ВидНалога = &парамНалогСборОтчисление
	|	И СрокиПеречисления.Организация В (&парамОрганизация, &парамПустаяОрганизация)
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&парамКонец, ДЕНЬ), ДЕНЬ, 1) КАК Период
	|";
		
	Запрос.Текст = ДатыИзмененияТекст;
	Запрос.Выполнить();
	ДатыИзмененияТекст = "ВТ_ДатыИзменения";
	
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТ_ДатыИзменения";
	
	// рассчитаем суммы задолженности на начало каждого периода расчета пени
	Если ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениОПВ Тогда
	
		ЗадолженностьТекст = "
		|ВЫБРАТЬ
		|	ДатыИзменения.Период,
		|	ПодлежитПеречислению.ФизЛицо,
		|	ПодлежитПеречислению.СтруктурнаяЕдиница,
		|	ПодлежитПеречислению.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ПодлежитПеречислению.МесяцВыплатыДоходов, МЕСЯЦ) КАК МесяцВыплатыДоходов,
		|	НАЧАЛОПЕРИОДА(ПодлежитПеречислению.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	ПодлежитПеречислению.ВзносОстаток КАК Сумма
		|ПОМЕСТИТЬ ВТ_Задолженность
		|ИЗ
		|	РегистрНакопления.ОПВПодлежитПеречислениюВФонды.Остатки(&парамНачало,
		|		Организация = &парамОрганизация
		|		И ФизЛицо В (ВЫБРАТЬ
		|							ФизЛицо
		|						ИЗ
		|							(" + СписокФизЛицТекст + ") КАК СписокФизЛиц)) КАК ПодлежитПеречислению
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДатыИзмененияТекст + " КАК ДатыИзменения
		|		ПО ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДатыИзменения.Период,
		|	ПодлежитПеречислению.ФизЛицо,
		|	ПодлежитПеречислению.СтруктурнаяЕдиница,
		|	ПодлежитПеречислению.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ПодлежитПеречислению.МесяцВыплатыДоходов, МЕСЯЦ) КАК МесяцВыплатыДоходов,
		|	НАЧАЛОПЕРИОДА(ПодлежитПеречислению.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	СУММА(ВЫБОР КОГДА ПодлежитПеречислению.ВидДвижения = &парамПриход ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * ПодлежитПеречислению.Взнос) КАК Сумма
		|ИЗ
		|	РегистрНакопления.ОПВПодлежитПеречислениюВФонды КАК ПодлежитПеречислению
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК СписокФизлиц
		|		ПО ПодлежитПеречислению.ФизЛицо = СписокФизлиц.ФизЛицо
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ДатыИзмененияТекст + " КАК ДатыИзменения
		|		ПО (ПодлежитПеречислению.Период >= &парамНачало 
		|			И ПодлежитПеречислению.Период < ДатыИзменения.Период)
		|			ИЛИ (НачалоПериода(ПодлежитПеречислению.Период, День) = НачалоПериода(ДатыИзменения.Период, День)
		|				И ПодлежитПеречислению.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Возврат))
		|ГДЕ
		|	ПодлежитПеречислению.Организация = &парамОрганизация
		|
		|СГРУППИРОВАТЬ ПО
		|	ДатыИзменения.Период,
		|	ПодлежитПеречислению.ФизЛицо,
		|	ПодлежитПеречислению.СтруктурнаяЕдиница,
		|	ПодлежитПеречислению.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ПодлежитПеречислению.МесяцВыплатыДоходов, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(ПодлежитПеречислению.МесяцНалоговогоПериода, МЕСЯЦ)
		|";
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениВОСМС Тогда
	
		ЗадолженностьТекст = "
		|ВЫБРАТЬ
		|	ДатыИзменения.Период,
		|	ПодлежитПеречислению.ФизЛицо,
		|	ПодлежитПеречислению.СтруктурнаяЕдиница,
		|	ПодлежитПеречислению.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ПодлежитПеречислению.МесяцВыплатыДоходов, МЕСЯЦ) КАК МесяцВыплатыДоходов,
		|	НАЧАЛОПЕРИОДА(ПодлежитПеречислению.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	ПодлежитПеречислению.ВзносОстаток КАК Сумма
		|ПОМЕСТИТЬ ВТ_Задолженность
		|ИЗ
		|	РегистрНакопления.ВОСМСПодлежитПеречислениюВФонды.Остатки(&парамНачало,
		|		Организация = &парамОрганизация
		|		И ФизЛицо В (ВЫБРАТЬ
		|							ФизЛицо
		|						ИЗ
		|							(" + СписокФизЛицТекст + ") КАК СписокФизЛиц)) КАК ПодлежитПеречислению
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДатыИзмененияТекст + " КАК ДатыИзменения
		|		ПО ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДатыИзменения.Период,
		|	ПодлежитПеречислению.ФизЛицо,
		|	ПодлежитПеречислению.СтруктурнаяЕдиница,
		|	ПодлежитПеречислению.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ПодлежитПеречислению.МесяцВыплатыДоходов, МЕСЯЦ) КАК МесяцВыплатыДоходов,
		|	НАЧАЛОПЕРИОДА(ПодлежитПеречислению.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	СУММА(ВЫБОР КОГДА ПодлежитПеречислению.ВидДвижения = &парамПриход ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * ПодлежитПеречислению.Взнос) КАК Сумма
		|ИЗ
		|	РегистрНакопления.ВОСМСПодлежитПеречислениюВФонды КАК ПодлежитПеречислению
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК СписокФизлиц
		|		ПО ПодлежитПеречислению.ФизЛицо = СписокФизлиц.ФизЛицо
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ДатыИзмененияТекст + " КАК ДатыИзменения
		|		ПО (ПодлежитПеречислению.Период >= &парамНачало 
		|			И ПодлежитПеречислению.Период < ДатыИзменения.Период)
		|			ИЛИ (НачалоПериода(ПодлежитПеречислению.Период, День) = НачалоПериода(ДатыИзменения.Период, День)
		|				И ПодлежитПеречислению.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Возврат))
		|ГДЕ
		|	ПодлежитПеречислению.Организация = &парамОрганизация
		|
		|СГРУППИРОВАТЬ ПО
		|	ДатыИзменения.Период,
		|	ПодлежитПеречислению.ФизЛицо,
		|	ПодлежитПеречислению.СтруктурнаяЕдиница,
		|	ПодлежитПеречислению.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ПодлежитПеречислению.МесяцВыплатыДоходов, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(ПодлежитПеречислению.МесяцНалоговогоПериода, МЕСЯЦ)
		|";
	
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениСО Тогда

		ЗадолженностьТекст = "
		|ВЫБРАТЬ
		|	ДатыИзменения.Период,
		|	СОРасчетыСФондами.ФизЛицо,
		|	СОРасчетыСФондами.СтруктурнаяЕдиница,
		|	СОРасчетыСФондами.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцВыплатыДоходов,
		|	НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	СОРасчетыСФондами.ОтчислениеОстаток КАК Сумма
		|ПОМЕСТИТЬ ВТ_Задолженность
		|ИЗ
		|	РегистрНакопления.СОРасчетыСФондами.Остатки(&парамНачало,
		|		Организация = &парамОрганизация
		|		И ВидПлатежа В (&парамВидыПлатежей)
		|		И ФизЛицо В (ВЫБРАТЬ
		|							ФизЛицо
		|						ИЗ
		|							(" + СписокФизЛицТекст + ") КАК СписокФизЛиц)) КАК СОРасчетыСФондами
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДатыИзмененияТекст + " КАК ДатыИзменения
		|		ПО ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДатыИзменения.Период,
		|	СОРасчетыСФондами.ФизЛицо,
		|	СОРасчетыСФондами.СтруктурнаяЕдиница,
		|	СОРасчетыСФондами.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцВыплатыДоходов,
		|	НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	СУММА(ВЫБОР КОГДА СОРасчетыСФондами.ВидДвижения = &парамПриход ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * СОРасчетыСФондами.Отчисление) КАК Сумма
		|
		|ИЗ
		|	РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК СписокФизлиц
		|		ПО СОРасчетыСФондами.ФизЛицо = СписокФизлиц.ФизЛицо
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ДатыИзмененияТекст + " КАК ДатыИзменения
		|		ПО (СОРасчетыСФондами.Период >= &парамНачало 
		|			И СОРасчетыСФондами.Период < ДатыИзменения.Период)
		|			ИЛИ (НачалоПериода(СОРасчетыСФондами.Период,День) = НачалоПериода(ДатыИзменения.Период,День)
		|				И СОРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Возврат))
		|ГДЕ
		|	СОРасчетыСФондами.Организация = &парамОрганизация
		|	И СОРасчетыСФондами.ВидПлатежа В (&парамВидыПлатежей)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДатыИзменения.Период,
		|	СОРасчетыСФондами.ФизЛицо,
		|	СОРасчетыСФондами.СтруктурнаяЕдиница,
		|	СОРасчетыСФондами.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(СОРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
		|";
			
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениООСМС Тогда

		ЗадолженностьТекст = "
		|ВЫБРАТЬ
		|	ДатыИзменения.Период,
		|	ООСМСРасчетыСФондами.ФизЛицо,
		|	ООСМСРасчетыСФондами.СтруктурнаяЕдиница,
		|	ООСМСРасчетыСФондами.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцВыплатыДоходов,
		|	НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	ООСМСРасчетыСФондами.ОтчислениеОстаток КАК Сумма
		|ПОМЕСТИТЬ ВТ_Задолженность
		|ИЗ
		|	РегистрНакопления.ООСМСРасчетыСФондами.Остатки(&парамНачало,
		|		Организация = &парамОрганизация
		|		И ВидПлатежа В (&парамВидыПлатежей)
		|		И ФизЛицо В (ВЫБРАТЬ
		|							ФизЛицо
		|						ИЗ
		|							(" + СписокФизЛицТекст + ") КАК СписокФизЛиц)) КАК ООСМСРасчетыСФондами
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДатыИзмененияТекст + " КАК ДатыИзменения
		|		ПО ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДатыИзменения.Период,
		|	ООСМСРасчетыСФондами.ФизЛицо,
		|	ООСМСРасчетыСФондами.СтруктурнаяЕдиница,
		|	ООСМСРасчетыСФондами.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцВыплатыДоходов,
		|	НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	СУММА(ВЫБОР КОГДА ООСМСРасчетыСФондами.ВидДвижения = &парамПриход ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * ООСМСРасчетыСФондами.Отчисление) КАК Сумма
		|
		|ИЗ
		|	РегистрНакопления.ООСМСРасчетыСФондами КАК ООСМСРасчетыСФондами
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК СписокФизлиц
		|		ПО ООСМСРасчетыСФондами.ФизЛицо = СписокФизлиц.ФизЛицо
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ДатыИзмененияТекст + " КАК ДатыИзменения
		|		ПО (ООСМСРасчетыСФондами.Период >= &парамНачало 
		|			И ООСМСРасчетыСФондами.Период < ДатыИзменения.Период)
		|			ИЛИ (НачалоПериода(ООСМСРасчетыСФондами.Период,День) = НачалоПериода(ДатыИзменения.Период,День)
		|				И ООСМСРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Возврат))
		|ГДЕ
		|	ООСМСРасчетыСФондами.Организация = &парамОрганизация
		|	И ООСМСРасчетыСФондами.ВидПлатежа В (&парамВидыПлатежей)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДатыИзменения.Период,
		|	ООСМСРасчетыСФондами.ФизЛицо,
		|	ООСМСРасчетыСФондами.СтруктурнаяЕдиница,
		|	ООСМСРасчетыСФондами.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ООСМСРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
		|";
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениОПВР Тогда
		ЗадолженностьТекст = "
		|ВЫБРАТЬ
		|	ДатыИзменения.Период,
		|	ОПВРРасчетыСФондами.ФизЛицо,
		|	ОПВРРасчетыСФондами.СтруктурнаяЕдиница,
		|	ОПВРРасчетыСФондами.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ОПВРРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцВыплатыДоходов,
		|	НАЧАЛОПЕРИОДА(ОПВРРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	ОПВРРасчетыСФондами.ВзносОстаток КАК Сумма
		|ПОМЕСТИТЬ ВТ_Задолженность
		|ИЗ
		|	РегистрНакопления.ОПВРРасчетыСФондами.Остатки(&парамНачало,
		|		Организация = &парамОрганизация
		|		И ВидПлатежа В (&парамВидыПлатежей)
		|		И ФизЛицо В (ВЫБРАТЬ
		|							ФизЛицо
		|						ИЗ
		|							(" + СписокФизЛицТекст + ") КАК СписокФизЛиц)) КАК ОПВРРасчетыСФондами
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДатыИзмененияТекст + " КАК ДатыИзменения
		|		ПО ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДатыИзменения.Период,
		|	ОПВРРасчетыСФондами.ФизЛицо,
		|	ОПВРРасчетыСФондами.СтруктурнаяЕдиница,
		|	ОПВРРасчетыСФондами.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ОПВРРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцВыплатыДоходов,
		|	НАЧАЛОПЕРИОДА(ОПВРРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	СУММА(ВЫБОР КОГДА ОПВРРасчетыСФондами.ВидДвижения = &парамПриход ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * ОПВРРасчетыСФондами.Взнос) КАК Сумма
		|
		|ИЗ
		|	РегистрНакопления.ОПВРРасчетыСФондами КАК ОПВРРасчетыСФондами
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК СписокФизлиц
		|		ПО ОПВРРасчетыСФондами.ФизЛицо = СписокФизлиц.ФизЛицо
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ДатыИзмененияТекст + " КАК ДатыИзменения
		|		ПО (ОПВРРасчетыСФондами.Период >= &парамНачало 
		|			И ОПВРРасчетыСФондами.Период < ДатыИзменения.Период)
		|			ИЛИ (НачалоПериода(ОПВРРасчетыСФондами.Период,День) = НачалоПериода(ДатыИзменения.Период,День)
		|				И ОПВРРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Возврат))
		|ГДЕ
		|	ОПВРРасчетыСФондами.Организация = &парамОрганизация
		|	И ОПВРРасчетыСФондами.ВидПлатежа В (&парамВидыПлатежей)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДатыИзменения.Период,
		|	ОПВРРасчетыСФондами.ФизЛицо,
		|	ОПВРРасчетыСФондами.СтруктурнаяЕдиница,
		|	ОПВРРасчетыСФондами.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ОПВРРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
		|";

	Иначе 
		ЗадолженностьТекст = "
		|ВЫБРАТЬ
		|	ДатыИзменения.Период,
		|	ОППВРасчетыСФондами.ФизЛицо,
		|	ОППВРасчетыСФондами.СтруктурнаяЕдиница,
		|	ОППВРасчетыСФондами.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцВыплатыДоходов,
		|	НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	ОППВРасчетыСФондами.ВзносОстаток КАК Сумма
		|ПОМЕСТИТЬ ВТ_Задолженность
		|ИЗ
		|	РегистрНакопления.ОППВРасчетыСФондами.Остатки(&парамНачало,
		|		Организация = &парамОрганизация
		|		И ВидПлатежа В (&парамВидыПлатежей)
		|		И ФизЛицо В (ВЫБРАТЬ
		|							ФизЛицо
		|						ИЗ
		|							(" + СписокФизЛицТекст + ") КАК СписокФизЛиц)) КАК ОППВРасчетыСФондами
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДатыИзмененияТекст + " КАК ДатыИзменения
		|		ПО ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДатыИзменения.Период,
		|	ОППВРасчетыСФондами.ФизЛицо,
		|	ОППВРасчетыСФондами.СтруктурнаяЕдиница,
		|	ОППВРасчетыСФондами.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцВыплатыДоходов,
		|	НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	СУММА(ВЫБОР КОГДА ОППВРасчетыСФондами.ВидДвижения = &парамПриход ТОГДА 1 ИНАЧЕ -1 КОНЕЦ * ОППВРасчетыСФондами.Взнос) КАК Сумма
		|
		|ИЗ
		|	РегистрНакопления.ОППВРасчетыСФондами КАК ОППВРасчетыСФондами
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК СписокФизлиц
		|		ПО ОППВРасчетыСФондами.ФизЛицо = СписокФизлиц.ФизЛицо
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ДатыИзмененияТекст + " КАК ДатыИзменения
		|		ПО (ОППВРасчетыСФондами.Период >= &парамНачало 
		|			И ОППВРасчетыСФондами.Период < ДатыИзменения.Период)
		|			ИЛИ (НачалоПериода(ОППВРасчетыСФондами.Период,День) = НачалоПериода(ДатыИзменения.Период,День)
		|				И ОППВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Возврат))
		|ГДЕ
		|	ОППВРасчетыСФондами.Организация = &парамОрганизация
		|	И ОППВРасчетыСФондами.ВидПлатежа В (&парамВидыПлатежей)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДатыИзменения.Период,
		|	ОППВРасчетыСФондами.ФизЛицо,
		|	ОППВРасчетыСФондами.СтруктурнаяЕдиница,
		|	ОППВРасчетыСФондами.ПодразделениеОрганизации,
		|	НАЧАЛОПЕРИОДА(ОППВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ)
		|";
		
	КонецЕсли;	
	
	Запрос.Текст = ЗадолженностьТекст;
	Запрос.Выполнить();
	ЗадолженностьТекст = "ВТ_Задолженность";
	
	// определим просроченную задолженность
	ПросроченнаяЗадолженностьТекст = "
	|ВЫБРАТЬ
	|	Задолженность.Период,
	|	Задолженность.ФизЛицо,
	|	Задолженность.СтруктурнаяЕдиница,
	|	Задолженность.ПодразделениеОрганизации,
	|	Задолженность.МесяцНалоговогоПериода,
	|	МИНИМУМ(Задолженность.МесяцВыплатыДоходов) КАК МесяцВыплатыДоходов,
	|	МИНИМУМ(СрокиПеречисления.СрокПеречисления) КАК СрокПеречисления,
	|	СУММА(Задолженность.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ПросроченнаяЗадолженность
	|ИЗ
	|	" + ЗадолженностьТекст + " КАК Задолженность
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + СрокиПеречисленияТекст + " КАК СрокиПеречисления
	|		ПО (Задолженность.МесяцВыплатыДоходов = СрокиПеречисления.Месяц
	|				И СрокиПеречисления.ПорядокОпределенияСрокаПеречисления = &парамПоМесяцуВыплатыДоходов) 
	|			ИЛИ (Задолженность.МесяцНалоговогоПериода = СрокиПеречисления.Месяц
	|					И СрокиПеречисления.ПорядокОпределенияСрокаПеречисления = &парамПоМесяцуНалоговогоПериода) 
	|ГДЕ
	|	(СрокиПеречисления.СрокПеречисления ЕСТЬ NULL // оставляем NULL, чтобы потом сказать, что не заполнен регистр сроков за соответ. месяц
	|		ИЛИ Задолженность.Период > СрокиПеречисления.СрокПеречисления)
	|
	|СГРУППИРОВАТЬ ПО
	|	Задолженность.Период,
	|	Задолженность.ФизЛицо,
	|	Задолженность.СтруктурнаяЕдиница,
	|	Задолженность.ПодразделениеОрганизации,
	|	Задолженность.МесяцНалоговогоПериода
	|
	|ИМЕЮЩИЕ СУММА(Задолженность.Сумма) > 0
	|";
	
	Запрос.Текст = ПросроченнаяЗадолженностьТекст;
	Запрос.Выполнить();
	ПросроченнаяЗадолженностьТекст = "ВТ_ПросроченнаяЗадолженность";
	
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТ_ПросроченнаяЗадолженность";
	
	// определим значения ставки рефинансирования и коэффициента, применяемого к ставке на дату расчета
	ЗначенияПараметровРасчетаТекст = "
	|ВЫБРАТЬ
	|	ДатыИзменения.Период,
	|	СтавкаРефинансированияНБ.Размер КАК СтавкаРефинансирования,
	|	КоэффициентыСтавкиРефинансирования.Коэффициент
	|ПОМЕСТИТЬ ВТ_ЗначенияПараметровРасчета
	|ИЗ
	|	(ВЫБРАТЬ
	|			ДатыИзменения.Период,
	|			МАКСИМУМ(СтавкаРефинансированияНБ.Период) КАК ПериодСтавки,
	|			МАКСИМУМ(ВЫБОР
	|						КОГДА КоэффициентыСтавкиРефинансирования.Организация = &парамОрганизация
	|							ТОГДА КоэффициентыСтавкиРефинансирования.Период
	|						ИНАЧЕ NULL
	|					 КОНЕЦ) КАК ПериодКоэффициентаОрг,
	|			МАКСИМУМ(ВЫБОР
	|						КОГДА КоэффициентыСтавкиРефинансирования.Организация = &парамПустаяОрганизация
	|							ТОГДА КоэффициентыСтавкиРефинансирования.Период
	|						ИНАЧЕ NULL
	|					 КОНЕЦ) КАК ПериодКоэффициентаОбщ
	|		ИЗ
	|			" + ДатыИзмененияТекст + " КАК ДатыИзменения
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкаРефинансированияНБ КАК СтавкаРефинансированияНБ
	|				ПО СтавкаРефинансированияНБ.Период <= ДатыИзменения.Период
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КоэффициентыСтавкиРефинансированияНБДляРасчетаПени КАК КоэффициентыСтавкиРефинансирования
	|				ПО КоэффициентыСтавкиРефинансирования.Период <= ДатыИзменения.Период
	|					И КоэффициентыСтавкиРефинансирования.ВидНалога = &парамНалогСборОтчисление
	|					И КоэффициентыСтавкиРефинансирования.Организация В (&парамПустаяОрганизация, &парамОрганизация)
	|
	|		СГРУППИРОВАТЬ ПО
	|			ДатыИзменения.Период) КАК ДатыИзменения
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкаРефинансированияНБ КАК СтавкаРефинансированияНБ
	|		ПО ДатыИзменения.ПериодСтавки = СтавкаРефинансированияНБ.Период
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КоэффициентыСтавкиРефинансированияНБДляРасчетаПени КАК КоэффициентыСтавкиРефинансирования
	|		ПО КоэффициентыСтавкиРефинансирования.ВидНалога = &парамНалогСборОтчисление
	|			И ВЫБОР
	|				КОГДА НЕ (ДатыИзменения.ПериодКоэффициентаОрг ЕСТЬ NULL) 
	|					ТОГДА ДатыИзменения.ПериодКоэффициентаОрг = КоэффициентыСтавкиРефинансирования.Период
	|							И КоэффициентыСтавкиРефинансирования.Организация = &парамОрганизация
	|					ИНАЧЕ ДатыИзменения.ПериодКоэффициентаОбщ = КоэффициентыСтавкиРефинансирования.Период
	|							И КоэффициентыСтавкиРефинансирования.Организация = &парамПустаяОрганизация
	|			КОНЕЦ
	|";
	
	Запрос.Текст = ЗначенияПараметровРасчетаТекст;
	Запрос.Выполнить();
	ЗначенияПараметровРасчетаТекст = "ВТ_ЗначенияПараметровРасчета";
	
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТ_ЗначенияПараметровРасчета";
	
	// Составим периоды расчета пени, когда все параметры были постоянными
	ПериодыРасчетаТекст = "
	|ВЫБРАТЬ
	|	ДатыИзменения.Период КАК ДатаНачала,
	|	МИНИМУМ(ЕСТЬNULL(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(СледДатыИзменения.Период, ДЕНЬ, -1), ДЕНЬ), &парамКонец)) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ПериодыРасчета
	|ИЗ
	|	" + ДатыИзмененияТекст + " КАК ДатыИзменения
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДатыИзмененияТекст + " КАК СледДатыИзменения
	|		ПО ДатыИзменения.Период < СледДатыИзменения.Период
	|ГДЕ
	|	ДатыИзменения.Период МЕЖДУ &парамНачало И &парамКонец
	|СГРУППИРОВАТЬ ПО
	|	ДатыИзменения.Период
	|";
	
	Запрос.Текст = ПериодыРасчетаТекст;
	Запрос.Выполнить();
	ПериодыРасчетаТекст = "ВТ_ПериодыРасчета";
	
	// Окончательный текст запроса 
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПериодыРасчета.ДатаНачала,
	|	ПериодыРасчета.ДатаОкончания,
	|	ПросроченнаяЗадолженность.ФизЛицо,
	|	ПросроченнаяЗадолженность.СтруктурнаяЕдиница,
	|	ПросроченнаяЗадолженность.ПодразделениеОрганизации,
	|	ПросроченнаяЗадолженность.МесяцНалоговогоПериода,
	|	ПросроченнаяЗадолженность.МесяцВыплатыДоходов,
	|	ПросроченнаяЗадолженность.СрокПеречисления,
	|	ПросроченнаяЗадолженность.Сумма КАК СуммаЗадолженности,
	|	ПараметрыРасчета.СтавкаРефинансирования,
	|	ПараметрыРасчета.Коэффициент,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ПросроченнаяЗадолженность.Период, ГОД), КОНЕЦПЕРИОДА(ПросроченнаяЗадолженность.Период, ГОД), ДЕНЬ) + 1 КАК ДнейВГоду,
	|	ПросроченнаяЗадолженность.Сумма * ПараметрыРасчета.Коэффициент * ПараметрыРасчета.СтавкаРефинансирования / 100 *
	|				(РАЗНОСТЬДАТ(ПериодыРасчета.ДатаНачала, ПериодыРасчета.ДатаОкончания, ДЕНЬ) + 1) / 
	|					(РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ПросроченнаяЗадолженность.Период, ГОД), КОНЕЦПЕРИОДА(ПросроченнаяЗадолженность.Период, ГОД), ДЕНЬ) + 1) КАК Сумма
	|	
	|ИЗ
	|	" + ПросроченнаяЗадолженностьТекст + " КАК ПросроченнаяЗадолженность
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПериодыРасчетаТекст + " КАК ПериодыРасчета
	|		ПО ПросроченнаяЗадолженность.Период = ПериодыРасчета.ДатаНачала
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ЗначенияПараметровРасчетаТекст + " КАК ПараметрыРасчета
	|		ПО ПросроченнаяЗадолженность.Период = ПараметрыРасчета.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПросроченнаяЗадолженность.ФизЛицо,
	|	ПросроченнаяЗадолженность.СтруктурнаяЕдиница,
	|	ПросроченнаяЗадолженность.ПодразделениеОрганизации,
	|	ПросроченнаяЗадолженность.МесяцНалоговогоПериода,
	|	ПросроченнаяЗадолженность.СрокПеречисления,
	|	ПросроченнаяЗадолженность.Период
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // ПолучитьДанныеДляРасчетаПениОПВиСО

/////////////////////////////////////////////////////////////////////////////////
// РАЗДЕЛ ДЛЯ РАСЧЕТА РЕГИСТРОВ РАСЧЕТА

// Функция формирует тексты запросов для получения данных, необходимых при расчете "от обратного"
// Возвращает структуру с текстами запроса для секций ВЫБРАТЬ И СОЕДИНЕНИЯ
//
Функция ПолучитьДанныеДляРасчетаОтОбратного(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет = Ложь,
									Сотрудники = Неопределено,
									Налогоплательщик = Неопределено,
									КомментироватьРасчет = Ложь,
									Запрос,
									ВнешнееУсловие)

									
	Если ПериодРегистрации >= '20220101' Тогда
		Возврат ПолучитьДанныеДляРасчетаОтОбратногоПосле2022(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет,
									Сотрудники,
									Налогоплательщик,
									КомментироватьРасчет,
									Запрос,
									ВнешнееУсловие);
	ИначеЕсли ПериодРегистрации >= '20200101' Тогда
		Возврат ПолучитьДанныеДляРасчетаОтОбратногоПосле2020(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет,
									Сотрудники,
									Налогоплательщик,
									КомментироватьРасчет,
									Запрос,
									ВнешнееУсловие);
	ИначеЕсли ПериодРегистрации >= '20190101' Тогда
		Возврат ПолучитьДанныеДляРасчетаОтОбратногоПосле2019(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет,
									Сотрудники,
									Налогоплательщик,
									КомментироватьРасчет,
									Запрос,
									ВнешнееУсловие);
	ИначеЕсли ПериодРегистрации >= '20180101' Тогда
		Возврат ПолучитьДанныеДляРасчетаОтОбратногоПосле2018(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет,
									Сотрудники,
									Налогоплательщик,
									КомментироватьРасчет,
									Запрос,
									ВнешнееУсловие);	
	ИначеЕсли ПериодРегистрации >= '20140101' Тогда
		Возврат ПолучитьДанныеДляРасчетаОтОбратногоПосле2014(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет,
									Сотрудники,
									Налогоплательщик,
									КомментироватьРасчет,
									Запрос,
									ВнешнееУсловие);	
	ИначеЕсли ПериодРегистрации >= '20100101' Тогда
		Возврат ПолучитьДанныеДляРасчетаОтОбратногоПосле2010(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет,
									Сотрудники,
									Налогоплательщик,
									КомментироватьРасчет,
									Запрос,
									ВнешнееУсловие);								
	ИначеЕсли ПериодРегистрации >= '20090101' Тогда
		Возврат ПолучитьДанныеДляРасчетаОтОбратногоПосле2009(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет,
									Сотрудники,
									Налогоплательщик,
									КомментироватьРасчет,
									Запрос,
									ВнешнееУсловие);
	Иначе
		Возврат ПолучитьДанныеДляРасчетаОтОбратногоДо2009(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет,
									Сотрудники,
									Налогоплательщик,
									КомментироватьРасчет,
									Запрос,
									ВнешнееУсловие);
	КонецЕсли;

КонецФункции

// Функция формирует тексты запросов для получения данных, необходимых при расчете "от обратного" до 2009 года
// Возвращает структуру с текстами запроса для секций ВЫБРАТЬ И СОЕДИНЕНИЯ
//
Функция ПолучитьДанныеДляРасчетаОтОбратногоДо2009(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет = Ложь,
									Сотрудники = НеОпределено,
									Налогоплательщик = Неопределено,
									КомментироватьРасчет = Ложь,
									Запрос,
									ВнешнееУсловие)

	РасчетОтОбратногоПоляТекст = ""; // строка с полями запроса
	РасчетОтОбратногоСоединенияТекст = ""; // строка с соединениями в запросе		

	ИмяИсточника = "РегистрРасчета." + ИмяРегистра;
	ИмяПВР = ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций", "ОсновныеНачисленияОрганизаций", "ДополнительныеНачисленияОрганизаций");
		// Поля, необходимые для расчета "от обратного" 
	РасчетОтОбратногоПоляТекст = "
	|ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьИПН,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|			ИЛИ ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоУчитыватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьУдержания, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьУдержания,
	|Основной.ВидРасчета.ОблагаетсяОПВ КАК ОблагаетсяОПВ,
	|Основной.ВидРасчета.ОблагаетсяИПН КАК ОблагаетсяИПН
	|";
			
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		Если ПериодРегистрации >= '20070101' Тогда
			РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПризнакПримененияЛьготы, 0) КАК ПризнакПримененияЛьготы,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ОблагаемыйДоход, 0) + ЕСТЬNULL(РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора.ОблагаемыйИПНДоход, 0) КАК ОблагаемыйДоход,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ОблагаемыйДоходЗаМесяц, 0) + ЕСТЬNULL(РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора.ОблагаемыйИПНДоход, 0) КАК ОблагаемыйДоходЗаМесяц,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ЛьготируемаяБазаДляИсчисленияИПН, 0) + 
			|					ВЫБОР
			|						КОГДА ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПризнакПримененияЛьготы, 0) > 0
			|							ТОГДА ЕСТЬNULL(РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора.ОблагаемыйИПНДоход, 0)
			|						ИНАЧЕ 0
			|					КОНЕЦ КАК ЛьготируемаяБазаДляИсчисленияИПН,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ОблагаемыйДоходЗаГод, 0) + ЕСТЬNULL(РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора.ОблагаемыйИПНДоход, 0) КАК ОблагаемыйДоходЗаГод,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.РанееПримененнаяЛьгота, 0) КАК РанееПримененнаяЛьгота,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.НалоговыйВычетЗаМесяц, 0) КАК НалоговыйВычетЗаМесяц,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.НалоговыйВычетЗаГод, 0) КАК НалоговыйВычетЗаГод,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ИсчисленныеВзносыЗаМесяц, 0) КАК ИсчисленныеВзносыЗаМесяц,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ИсчисленныеВзносыЗаГод, 0) КАК ИсчисленныеВзносыЗаГод,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.РанееНалогИсчисленный, 0) КАК РанееНалогИсчисленный,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПрименяемаяЛьготаЗаГод, 0) КАК ПрименяемаяЛьготаЗаГод,
			|ЕСТЬNULL(СведенияОСтавкахИПН.Ставка, 0) КАК ПроцентИПН
			|";
		Иначе
			РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПризнакПримененияЛьготы, 0) КАК ПризнакПримененияЛьготы,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ОблагаемыйДоходЗаМесяц, 0) + ЕСТЬNULL(РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора.ОблагаемыйИПНДоход, 0) КАК ОблагаемыйДоходЗаМесяц,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ЛьготируемаяБазаДляИсчисленияИПН, 0) + 
			|					ВЫБОР
			|						КОГДА ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПризнакПримененияЛьготы, 0) > 0
			|							ТОГДА ЕСТЬNULL(РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора.ОблагаемыйИПНДоход, 0)
			|						ИНАЧЕ 0
			|					КОНЕЦ КАК ЛьготируемаяБазаДляИсчисленияИПН,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ОблагаемыйДоходЗаГод, 0) + ЕСТЬNULL(РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора.ОблагаемыйИПНДоход, 0) КАК ОблагаемыйДоходЗаГод,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.НалоговыйВычетЗаГод, 0) КАК НалоговыйВычетЗаГод,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ИсчисленныеВзносыЗаГод, 0) КАК ИсчисленныеВзносыЗаГод,
			|ЕСТЬNULL(ИПНРасчетыСБюджетомЗаГод.ИсчисленныйНалогЗаГод, 0) КАК РанееНалогИсчисленный,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПрименяемаяЛьготаЗаГод, 0) КАК ПрименяемаяЛьготаЗаГод,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.КоэффициентПересчета, 0) КАК КоэффициентПересчета,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.СреднемесячныйРазмерМЗПЗаКвартал, 0) КАК СреднемесячныйРазмерМЗПЗаКвартал,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПолученныйДоходЗаКвартал, 0) + ЕСТЬNULL(РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора.ОблагаемыйИПНДоход, 0) КАК ПолученныйДоходЗаКвартал,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.РегистрировалсяДоходЗаКвартал, 0) КАК РегистрировалсяДоходЗаКвартал,
			|ВЫБОР
			|	КОГДА СведенияОРаботникахОрганизации.Сотрудник ЕСТЬ NULL
			|			ИЛИ (СведенияОРаботникахОрганизации.ПричинаИзмененияСостояния = &парамУволен
			|					И ДОБАВИТЬКДАТЕ(СведенияОРаботникахОрганизации.Период, ДЕНЬ, -1) < &парамПериодРегистрации)
			|		ТОГДА ЛОЖЬ
			|	ИНАЧЕ ИСТИНА
			|КОНЕЦ КАК ПрименятьНулевуюСтавку,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПрименятьНулевуюСтавкуКв1, 0) КАК ПрименятьНулевуюСтавкуКв1,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПрименятьНулевуюСтавкуКв2, 0) КАК ПрименятьНулевуюСтавкуКв2,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПрименятьНулевуюСтавкуКв3, 0) КАК ПрименятьНулевуюСтавкуКв3,
			|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПрименятьНулевуюСтавкуКв4, 0) КАК ПрименятьНулевуюСтавкуКв4
			|";
		КонецЕсли;
	КонецЕсли;
			
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ВЫБОР
		|	КОГДА Основной.ФизЛицо В (&парамФизлицаПенсионеры)
		|		  ИЛИ Основной.ФизЛицо В (&парамФизЛицаБезПраваНаПенсию)
		|		  ИЛИ Основной.ФизЛицо В (&парамФизЛицаИнвалидыБессрочно) ТОГДА ЛОЖЬ
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ КАК ПризнакИсчисленияОПВ,				
		|ЕСТЬNULL(РасчетОтОбратногоДанныеОПВ.БазаДляИсчисленияОПВ, 0) + ЕСТЬNULL(РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора.ОблагаемыйОПВДоход, 0) КАК БазаДляИсчисленияОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеОПВ.РанееВзносыИсчисленные, 0) КАК РанееВзносыИсчисленные,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеОПВ.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляОПВ,
		|&парамРазмерОграниченияПоДоходамОПВ КАК РазмерОграниченияПоДоходамОПВ,
		|&парамСтавкаОПВ КАК ПроцентОПВ
		|";
		
		Запрос.УстановитьПараметр("парамСтавкаОПВ", ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Организация, Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы, ПериодРегистрации) / 100);
	КонецЕсли;

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний, 0) КАК СуммаКомпенсируемыхУдержаний,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН, 0) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПНиОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний, 0) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|";
	КонецЕсли;
			
	РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.НеОблагаемыйИПНДоход, 0) КАК НеОблагаемыйИПНДоходЗаМесяц,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.НеОблагаемыйОПВДоход, 0) КАК НеОблагаемыйОПВДоходЗаМесяц,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходВключаемыхНачислений, 0) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходВключаемыхНачислений, 0) КАК ОблагаемыйОПВДоходВключаемыхНачислений,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОбщаяСуммаНачислений, 0) КАК ОбщаяСуммаНачислений,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаВключаемыхНачислений, 0) КАК СуммаВключаемыхНачислений,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ДополнительныеДанные, 0) КАК РасчетОтОбратногоДополнительныеДанные
	|";

	// Далее идут тексты запросов по аналогии с функциями ПолучитьДанныеДляРасчетаИПН() и ПолучитьДанныеДляРасчетаОПВ().
	// Отличие по всем текстам в том, что в ПолучитьДанныеДляРасчетаИПН() используется &парамСписокФизЛиц,
	// а в расчете "от обратного" &парамРасчетОтОбратногоСписокФизЛиц.
	// В данном расчете предполагается, что расчет ИПН и ОПВ будет производится с установленным
	// в учетной политике по налоговому учету флажке ОтражениеПоПериодуРегистрации - все данные выбираются по ПериодРегистрации

	Запрос.УстановитьПараметр("парамРегистратор", Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", ОбособленноеПодразделение);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", 	Организация);

	Если Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить() Тогда
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	Налогоплательщик);
	Иначе
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	ОбособленноеПодразделение);
	КонецЕсли;

	// категория начисления
	Запрос.УстановитьПараметр("парамКатегорияНачисления", 		КатегорияРасчета);
	Запрос.УстановитьПараметр("парамПорядокКатегории", 			Перечисления.КатегорииРасчетов.Индекс(КатегорияРасчета));
	Запрос.УстановитьПараметр("парамНеОблагаетсяЦеликом",		Справочники.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом);
	// виды налогов/взносов
	Запрос.УстановитьПараметр("парамНалогВзносИПН",				Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог);
	Запрос.УстановитьПараметр("парамНалогВзносОПВ",				Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы);
	Запрос.УстановитьПараметр("парамНалогВзносВОСМС",			Справочники.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование);
	// прочие значения
	Запрос.УстановитьПараметр("парамВнутреннееСовместительство",   Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);

	// Список видов расчета "от обратного"
	ВидыРасчетаОтОбратногоТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Основной.ВидРасчета
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета.ОтОбратного
	|";

	Запрос.Текст = ВидыРасчетаОтОбратногоТекст;
	Запрос.УстановитьПараметр("парамВидыРасчетаОтОбратного", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРасчета"));

	// Периоды
	// Таблица список периодов-физлиц по которым необходимо выполнить расчет налога или взносов
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Основной.ФизЛицо
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
	|";
			
	Запрос.Текст = ПериодыТекст;
	Запрос.УстановитьПараметр("парамРасчетОтОбратногоСписокФизЛиц", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо"));

	// Для расчета вычетов составим таблицу периодов-физлиц с начала года
	ПериодыГодаТекст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
					   |	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период
					   |ПОМЕСТИТЬ ВТ_ПериодыГодаРасчетаОтОбратного
					   |ИЗ
					   |	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
					   |ГДЕ
					   |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) И &парамПериодРегистрации
					   |
					   |ИНДЕКСИРОВАТЬ ПО
					   |	Период";
	Запрос.Текст = ПериодыГодаТекст;
	Запрос.Выполнить();
	ПериодыГодаТекст = "ВТ_ПериодыГодаРасчетаОтОбратного";

	// Сохраним текст запроса с выборкой периодов года для использования без участия физлиц, чтобы сократить число таблиц в запросе
	ДатыПериодовГодаТекст = ПериодыГодаТекст;

	// ПериодыГода
	// Таблица список периодов-физлиц, по которым необходимо выполнить расчет налога или взноса
	// Поля:
	//		Период
	//		Физлицо
	ПериодыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Основной.ФизЛицо,
	|	ПериодыГода.Период КАК Период
	|
	|ПОМЕСТИТЬ ВТ_ПериодыРасчетаОтОбратного
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПериодыГодаТекст + " КАК ПериодыГода
	|		ПО ИСТИНА
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	Период
	|";		   
	Запрос.Текст = ПериодыТекст;
	Запрос.Выполнить();
	ПериодыТекст = "ВТ_ПериодыРасчетаОтОбратного";
		
	// Списки видов расчета, категория расчета которых меньше текущей  (т.е. уже посчитанные)
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПВР.Ссылка
	|ИЗ
	|	ПланВидовРасчета." + ИмяПВР + " КАК ПВР
	|ГДЕ
	|	ПВР.КатегорияРасчета.Порядок < &парамПорядокКатегории
	|";

	Запрос.УстановитьПараметр("парамУжеРассчитанныеВидыРасчета", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));

	   // Виды расчета, которые являются доходом в натуральной форме
	   Запрос.Текст = "
	   |ВЫБРАТЬ
	   |	ОсновныеНачисления.Ссылка КАК ВидРасчета
	   |ИЗ
	   |	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисления
	   |ГДЕ
	   |	ОсновныеНачисления.ЯвляетсяПрочимДоходом
	   |";
	   
	   Запрос.УстановитьПараметр("парамДоходыВНатуральнойФормеОсновные", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРасчета"));

	   Запрос.Текст = "
	   |ВЫБРАТЬ
	   |	ДополнительныеНачисления.Ссылка КАК ВидРасчета
	   |ИЗ
	   |	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисления
	   |ГДЕ
	   |	ДополнительныеНачисления.ЯвляетсяПрочимДоходом
	   |";
	   
	   Запрос.УстановитьПараметр("парамДоходыВНатуральнойФормеДополнительные", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРасчета"));

	// ОсновныеИДополнительныеНачисления
	// Поля:
	//		ФизЛицо
	//		ВидРасчета
	//		Результат
	//	Описание:
	// Выбирает начисления за период регистрации по физлицам, для которых выполняется расчет "от обратного"
	ОсновныеИДополнительныеНачисленияТекст = "
	|ВЫБРАТЬ
	|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ОсновныеНачисления.Результат) КАК Результат,
	|	СУММА(ОсновныеНачисления.ДополнительныеДанные) КАК ДополнительныеДанные,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.ВидРасчета В (&парамДоходыВНатуральнойФормеОсновные) ТОГДА ОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		 КОНЕЦ) КАК СуммаНачислений
	|
	|ПОМЕСТИТЬ ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|ГДЕ
	|	ОсновныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ОсновныеНачисления.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
	|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И (ОсновныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ОсновныеНачисления.Регистратор = &парамРегистратор
	|				И ОсновныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))", "") + "
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисления.ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета,
	|	СУММА(ДополнительныеНачисления.Результат) КАК Результат,
	|	0 КАК ДополнительныеДанные,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.ВидРасчета В (&парамДоходыВНатуральнойФормеДополнительные) ТОГДА ДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаНачислений
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
	|ГДЕ
	|	ДополнительныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ДополнительныеНачисления.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
	|	И ДополнительныеНачисления.ПериодРегистрации МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И ДополнительныеНачисления.Регистратор <> &парамРегистратор","
	|
	|	// если доп. начисления
	|	И (ДополнительныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ДополнительныеНачисления.Регистратор = &парамРегистратор
	|				И ДополнительныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))") + "
	|СГРУППИРОВАТЬ ПО
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидРасчета
	|";
	Запрос.Текст = ОсновныеИДополнительныеНачисленияТекст;
	Запрос.Выполнить();
	ОсновныеИДополнительныеНачисленияТекст = "ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного";

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		
		Запрос.УстановитьПараметр("парамПриход",					   ВидДвиженияНакопления.Приход);
		Запрос.УстановитьПараметр("парамВидСтроки",  				   Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
		Запрос.УстановитьПараметр("парамИнвалид",				   	   Перечисления.ОтношениеКИнвалидности.Инвалид);
		Запрос.УстановитьПараметр("парамТретьяГруппа",				   "III");
		Запрос.УстановитьПараметр("парамВидПлатежа", 				   Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
		Запрос.УстановитьПараметр("парамПринят", 		   			   Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
		Запрос.УстановитьПараметр("парамУволен", 		   			   Перечисления.ПричиныИзмененияСостояния.Увольнение);
		Запрос.УстановитьПараметр("парамПоИсчислениюИПН",			   Перечисления.ВидыСтавокИПНиСН.ПоИсчислениюИПН);
		Запрос.УстановитьПараметр("парамКонецМесяцаНалоговогоПериода", КонецМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	   КонецМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("парамНачалоГода",				   НачалоГода(ПериодРегистрации));
		Запрос.УстановитьПараметр("парамКонецГода",   				   КонецГода(ПериодРегистрации));
			
		// ФизлицаНеРезиденты
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц-нерезидентов
		ФизлицаНеРезидентыТекст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	ГражданствоФизЛиц.ФизЛицо
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонецГода, ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)) КАК ГражданствоФизЛиц
		|
		|ГДЕ
		|	(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК)";
		
		Запрос.Текст = ФизлицаНеРезидентыТекст;
		Запрос.УстановитьПараметр("парамФизЛицаНеРезиденты", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо"));
		
		// РасчетныеПоказатели
		//	Поля:
		//		Период
		//		РазмерМРП
		//		РазмерМЗП
		//
		//	Описание:
		// Выбирает размер месячного расчетного показателя по периодам
		РасчетныеПоказателиТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказателиСрезПоследних.Период КАК Период,
		|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП, 0) КАК РазмерМРП,
		|	ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) КАК РазмерМЗП,
		|	ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0) КАК РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
		|
		|ПОМЕСТИТЬ ВТ_РасчетныеПоказателиРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		Периоды.Период,
		|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
		|	ИЗ	
		|		" + ДатыПериодовГодаТекст + " КАК Периоды 
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
		|			ПО Периоды.Период >= РасчетныеПоказатели.Период
		|
		|	СГРУППИРОВАТЬ ПО
		|		Периоды.Период) КАК РасчетныеПоказателиСрезПоследних
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
		|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период
		|";
		Запрос.Текст = РасчетныеПоказателиТекст;
		Запрос.Выполнить();
		РасчетныеПоказателиТекст = "ВТ_РасчетныеПоказателиРасчетаОтОбратного";
		
		Если ПериодРегистрации >= '20070101' Тогда // после 2007 года - расчет фиксированной ставкой

			// ПрименяемыеЛьготы
			//	Поля:
			//		Физлицо
			//		Период
			//		ПрименяетсяЛьготаУчастникаВОВ
			//		ПрименяетсяЛьготаПоИнвалидности
			//		ЛьготаПоДоходу
			//
			//	Описание:
			//	Выбирает по всем периодам года льготы на которые имеет право физлицо
			ПрименяемыеЛьготыТекст = 
			"ВЫБРАТЬ
			|	ИПНЛьготыФизлиц.Физлицо КАК ФизЛицо,
			|	ИПНЛьготыФизлиц.Период КАК Период,
			|
			|	ВЫБОР
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > 0 
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ПрименяетсяЛьготаУчастникаВОВ,
			|
			|	ВЫБОР
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаПоИнвалидности > 0 
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ПрименяетсяЛьготаПоИнвалидности,
			|
			|	ВЫБОР 
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
			|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ 
			|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
			|	КОНЕЦ КАК ЛьготаПоДоходу
			|
			|ПОМЕСТИТЬ ВТ_ПрименяемыеЛьготыРасчетаОтОбратного
			|ИЗ
			|	(ВЫБРАТЬ
			|		ИПНЛьготыФизлицСрезПоследних.Физлицо КАК Физлицо,
			|		ИПНЛьготыФизлицСрезПоследних.Период КАК Период,
			|		ВЫБОР 
			|			КОГДА (ЛьготыФизлицПоИнвалидности.Физлицо) ЕСТЬ NULL 
			|				ТОГДА 0 
			|			ИНАЧЕ ВЫБОР 
			|					КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
			|							И (ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности) = &парамТретьяГруппа 
			|						ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
			|					ИНАЧЕ 99999999 
			|				  КОНЕЦ 
			|		КОНЕЦ КАК ЛьготаПоИнвалидности,
			|		ВЫБОР 
			|			КОГДА (ЛьготыФизлицУчастниковВОВ.Физлицо) ЕСТЬ NULL 
			|				ТОГДА 0 
			|			ИНАЧЕ 99999999 
			|		КОНЕЦ КАК ЛьготаУчастникаВОВ
			|		
			|	ИЗ
			|		(ВЫБРАТЬ
			|			МАКСИМУМ(ЛьготыФизлицПоИнвалидности.Период) КАК ПериодСрезаИнвалидность,
			|			МАКСИМУМ(ЛьготыФизлицУчастниковВОВ.Период) КАК ПериодСрезаУчастникиВОВ,
			|			Периоды.Физлицо КАК Физлицо,
			|			Периоды.Период КАК Период
			|		ИЗ
			|			" + ПериодыТекст + " КАК Периоды
			|
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
			|				ПО ЛьготыФизлицПоИнвалидности.Период <= Периоды.Период 
			|					И ЛьготыФизлицПоИнвалидности.Физлицо = Периоды.Физлицо
			|					И (ЛьготыФизЛицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
			|						ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизЛицПоИнвалидности.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
			|
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
			|				ПО ЛьготыФизлицУчастниковВОВ.Период <= Периоды.Период 
			|					И ЛьготыФизлицУчастниковВОВ.Физлицо = Периоды.Физлицо
			|		
			|		СГРУППИРОВАТЬ ПО
			|			Периоды.Физлицо,
			|			Периоды.Период) КАК ИПНЛьготыФизлицСрезПоследних
			|
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
			|				ПО ЛьготыФизлицПоИнвалидности.Период = ИПНЛьготыФизлицСрезПоследних.ПериодСрезаИнвалидность 
			|					И ЛьготыФизлицПоИнвалидности.Физлицо = ИПНЛьготыФизлицСрезПоследних.Физлицо
			|
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
			|				ПО ЛьготыФизлицУчастниковВОВ.Период = ИПНЛьготыФизлицСрезПоследних.ПериодСрезаУчастникиВОВ 
			|					И ЛьготыФизлицУчастниковВОВ.Физлицо = ИПНЛьготыФизлицСрезПоследних.Физлицо
			|
			|				ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|				ПО РасчетныеПоказатели.Период = ИПНЛьготыФизлицСрезПоследних.Период) КАК ИПНЛьготыФизлиц
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицо,
			|	Период
			|";
			Запрос.Текст = ПрименяемыеЛьготыТекст;
			Запрос.Выполнить();
			ПрименяемыеЛьготыТекст = "ВТ_ПрименяемыеЛьготыРасчетаОтОбратного";
			
			// Доходы
			//	Поля:
			//		ФизЛицо
			//		Период
			//		СуммаДоходаОборот
			//		СуммаВычетаОборот
			//      СуммаПримененныйВычетОборот
			//      СуммаПримененнаяЛьготаОборот
			//      СуммаПримененнаяЛьготаНаПредыдущемМестеРаботыОборот
			//
			//	Описание:
			// Выбирает общую сумму доходов, облагаемые налогом доходы, примененный вычет и примененную льготу за весь год по физлицам из СписокФизлиц
				
			// Здесь не учитываем доходы, записанные текущим регистратором, т.к. при проведении по ИПНСведенияОДоходах
			// они были еще в процессе расчета и их прибавим позже. А также отдельно выделяем доходы, начисленные в данной 
			// организации за текущий месяц, которые прошли через начисления, прочие доходы не выделяем.
			// Сведения о жилищных и страховых вычетах текущего месяца всегда берем из регистра сведений, т.к. в регистре накопления они 
			// появляются только при прямом расчете налога и поэтому могут отсутствовать, если сейчас первый раз рассчитываются начисления.
			// Для того, чтобы в выборке всегда гарантировано были данные по всем месяцам с начала года в качестве левой таблицы
			// используем Периоды
			ДоходыТекст = 
			"ВЫБРАТЬ
			|	Периоды.Физлицо КАК ФизЛицо,
			|	Периоды.Период КАК Период,
			|	ЕСТЬNULL(СУММА(ИПНОбороты.СуммаДоходаОборот), 0) КАК СуммаДоходаОборот,
			|	ЕСТЬNULL(СУММА(ИПНОбороты.СуммаВычетаОборот), 0) КАК СуммаВычетаОборот,
			|	ЕСТЬNULL(СУММА(ИПНОбороты.СуммаПримененныйВычетОборот), 0) КАК СуммаПримененныйВычетОборот,
			|	ЕСТЬNULL(СУММА(ИПНОбороты.СуммаПримененнаяЛьготаОборот), 0) КАК СуммаПримененнаяЛьготаОборот,
			|	ЕСТЬNULL(СУММА(ИПНОбороты.СуммаПримененнаяЛьготаНаПредыдущемМестеРаботыОборот), 0) КАК СуммаПримененнаяЛьготаНаПредыдущемМестеРаботыОборот,
			|	ЕСТЬNULL(СУММА(ВЫБОР
			|					КОГДА ИПНОбороты.Период = &парамПериодРегистрации И ИПНОбороты.НачисленоВТекущейОрганизации
			|						ТОГДА ИПНОбороты.СуммаДоходаОборот - ИПНОбороты.СуммаВычетаОборот
			|					ИНАЧЕ 0
			|		  		   КОНЕЦ), 0) КАК ОблагаемыйДоходЗаМесяц
			|ИЗ
			|	" + ПериодыТекст + " КАК Периоды
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|		НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
			|		ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
			|		ВЫБОР 
			|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения <> &парамНеОблагаетсяЦеликом 
			|				ТОГДА СУММА(ИПНСведенияОДоходах.СуммаДохода) 
			|			ИНАЧЕ 0 
			|		КОНЕЦ КАК СуммаДоходаОборот,
			|		СУММА(ИПНСведенияОДоходах.СуммаВычета) КАК СуммаВычетаОборот,
			|		СУММА(ИПНСведенияОДоходах.ПримененныйВычет) КАК СуммаПримененныйВычетОборот,
			|		СУММА(ИПНСведенияОДоходах.ПримененнаяЛьгота) КАК СуммаПримененнаяЛьготаОборот,
			|		0 КАК СуммаПримененнаяЛьготаНаПредыдущемМестеРаботыОборот,
			|		ВЫБОР
			|			КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
			|					ИЛИ ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РасчетНалоговПриПоступленииАктивовУслуг
			|				ТОГДА ЛОЖЬ
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ КАК НачисленоВТекущейОрганизации
			|	ИЗ
			|		РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
			|	
			|	ГДЕ
			|		ИПНСведенияОДоходах.Период >= &парамНачалоГода И
			|		ИПНСведенияОДоходах.Период <= &парамКонецМесяцаНалоговогоПериода И
			|		ИПНСведенияОДоходах.ПериодРегистрации <= &парамПериодРегистрации И
			|		ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик И
			|		ИПНСведенияОДоходах.Регистратор <> &парамРегистратор И
			|		ИПНСведенияОДоходах.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц) И
			|		НЕ(ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН
			|				И ИПНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ),
			|		ИПНСведенияОДоходах.ФизЛицо,
			|		ИПНСведенияОДоходах.СпособНалогообложения,
			|		ИПНСведенияОДоходах.Регистратор
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		НАЧАЛОПЕРИОДА(ИПНПлановыеВычеты.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
			|		ИПНПлановыеВычеты.ФизЛицо,
			|		0 КАК СуммаДоходаОборот,
			|		СУММА(ИПНПлановыеВычеты.СуммаВычета) КАК СуммаВычета,
			|		0 КАК СуммаПримененныйВычетОборот,
			|		0 КАК СуммаПримененнаяЛьготаОборот,
			|		0 КАК СуммаПримененнаяЛьготаНаПредыдущемМестеРаботыОборот,
			|		ЛОЖЬ КАК НачисленоВТекущейОрганизации
			|	ИЗ
			|		РегистрСведений.ИПНПлановыеНалоговыеВычетыФизЛиц.СрезПоследних(
			|				&парамКонецПериодаРегистрации,
			|				Налогоплательщик = &парамНалогоплательщик
			|				И МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
			|				И ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)) КАК ИПНПлановыеВычеты
			|	СГРУППИРОВАТЬ ПО
			|		НАЧАЛОПЕРИОДА(ИПНПлановыеВычеты.МесяцНалоговогоПериода, МЕСЯЦ),
			|		ИПНПлановыеВычеты.ФизЛицо
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
			|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо,
			|		0 КАК СуммаДоходаОборот,
			|		0 КАК СуммаВычета,
			|		0 КАК СуммаПримененныйВычетОборот,
			|		СУММА(ИПНСведенияПредыдущегоМестаРаботы.ПримененнаяЛьгота) КАК СуммаПримененнаяЛьготаОборот,
			|		СУММА(ИПНСведенияПредыдущегоМестаРаботы.ПримененнаяЛьгота) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
			|		ЛОЖЬ КАК НачисленоВТекущейОрганизации
			|	ИЗ
			|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК ИПНСведенияПредыдущегоМестаРаботы
			|	
			|	ГДЕ
			|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода И
			|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации И
			|		ИПНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик И
			|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
			|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо) КАК ИПНОбороты
			|	ПО Периоды.ФизЛицо = ИПНОбороты.ФизЛицо
			|		И Периоды.Период = ИПНОбороты.Период
			|
			|СГРУППИРОВАТЬ ПО
			|	Периоды.Физлицо,
			|	Периоды.Период";
				
			ТипЗначенияИПНТекст = "ЧИСЛО(10, 2)";
				
			// ДоходыЗаГод 
			//	Поля:
			//		ФизЛицо
			//		Период
			//		ОблагаемыйДоход
			//		ОблагаемыйДоходЗаГод
			//      ПримененныйВычет
			//      ПримененныйВычетЗаГод
			//      ПримененнаяЛьготаЗаГод
			//      ПримененнаяЛьготаНаПредыдущемМестеРаботы
			//		ЛьготируемыйОблагаемыйДоходЗаГод
			//		ЛьготаПоДоходу
			//
			//	Описание:
			//	Выбирает по всем периодам с начала года сумму дохода нарастающим итогом за год
			
			ДоходыЗаГодТекст = "
			|ВЫБРАТЬ
			|	Периоды.Период КАК Период,
			|	Периоды.Физлицо КАК ФизЛицо,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = ИПНОбороты.Период ТОГДА ИПНОбороты.СуммаДоходаОборот - ИПНОбороты.СуммаВычетаОборот ИНАЧЕ 0 КОНЕЦ) КАК ОблагаемыйДоход,
			|	СУММА(ВЫБОР 
			|			КОГДА Периоды.Период = ПрименяемыеЛьготы.Период 
			|					И (ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ 
			|						ИЛИ ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности) 
			|				ТОГДА 1 
			|			ИНАЧЕ 0 
			|		КОНЕЦ) КАК ПрименяетсяЛьготаВМесяце,
			|	СУММА(ИПНОбороты.СуммаДоходаОборот - ИПНОбороты.СуммаВычетаОборот) КАК ОблагаемыйДоходЗаГод,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = ИПНОбороты.Период ТОГДА ИПНОбороты.СуммаПримененныйВычетОборот ИНАЧЕ 0 КОНЕЦ) КАК ПримененныйВычет,
			|	СУММА(ИПНОбороты.СуммаПримененныйВычетОборот) КАК ПримененныйВычетЗаГод,
			|	СУММА(ИПНОбороты.СуммаПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаЗаГод,
			|	СУММА(ИПНОбороты.СуммаПримененнаяЛьготаНаПредыдущемМестеРаботыОборот) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
			|	СУММА(ВЫБОР
			|			КОГДА ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ
			|					ИЛИ ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности
			|				ТОГДА ИПНОбороты.СуммаДоходаОборот - ИПНОбороты.СуммаВычетаОборот
			|			ИНАЧЕ 0
			|		  КОНЕЦ) КАК ЛьготируемыйОблагаемыйДоходЗаГод,
			|	МАКСИМУМ(ПрименяемыеЛьготы.ЛьготаПоДоходу) КАК ЛьготаПоДоходу,
			|	СУММА(ВЫБОР
			|			КОГДА ИПНОбороты.Период = &парамПериодРегистрации И Периоды.Период = &парамПериодРегистрации
			|				ТОГДА ИПНОбороты.ОблагаемыйДоходЗаМесяц
			|			ИНАЧЕ 0
			|		  КОНЕЦ) КАК ОблагаемыйДоходЗаМесяц
			|
			|ИЗ
			|	" + ПериодыТекст + " КАК Периоды
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ДоходыТекст + ") КАК ИПНОбороты
			|		ПО Периоды.Период >= ИПНОбороты.Период 
			|			И ИПНОбороты.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
			|			И Периоды.Физлицо = ИПНОбороты.ФизЛицо
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеЛьготыТекст + " КАК ПрименяемыеЛьготы
			|		ПО ИПНОбороты.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
			|			И ИПНОбороты.Период = ПрименяемыеЛьготы.Период
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамПериодРегистрации, ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)) КАК СведенияОбИнвалидностиФизлиц
			|		ПО Периоды.ФизЛицо = СведенияОбИнвалидностиФизлиц.ФизЛицо
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(&парамПериодРегистрации, ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)) КАК СведенияОФизлицахУчастникахВОВ
			|		ПО Периоды.ФизЛицо = СведенияОФизлицахУчастникахВОВ.ФизЛицо
			|
			|СГРУППИРОВАТЬ ПО
			|	Периоды.Период,
			|	Периоды.ФизЛицо";
				
			// ИПНРасчетыСБюджетом
			//	Поля:
			//		ФизЛицо
			//		МесяцНалоговогоПериода
			//		ИсчисленныйНалог
			//
			//	Описание:
			//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом и данные регистра
			//  СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
				
			// Здесь не берем имеющийся за МесяцНалоговогоПериода в ИПНРасчетыСБюджетами налог, т.к. перерасчитываем заново,
			// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным
			ИПНРасчетыСБюджетомТекст = "
			|ВЫБРАТЬ
			|	ИПНРасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
			|	ИПНРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|	СУММА(ИПНРасчетыСБюджетом.Налог) КАК ИсчисленныйНалог
			|ИЗ
			|	РегистрНакопления.ИПНРасчетыСБюджетом КАК ИПНРасчетыСБюджетом
			|
			|ГДЕ
			|	ИПНРасчетыСБюджетом.МесяцНалоговогоПериода >= &парамНачалоГода И
			|	ИПНРасчетыСБюджетом.МесяцНалоговогоПериода <= &парамКонецМесяцаНалоговогоПериода И
			|	ИПНРасчетыСБюджетом.Налогоплательщик = &парамНалогоплательщик И
			|	ИПНРасчетыСБюджетом.Регистратор <> &парамРегистратор И
			|	ИПНРасчетыСБюджетом.Период <= &парамКонецПериодаРегистрации И
			|	ИПНРасчетыСБюджетом.ВидДвижения = &парамПриход И 
			|	ИПНРасчетыСБюджетом.ВидСтроки = &парамВидСтроки И
			|	НЕ(ИПНРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)) И
			|	ИПНРасчетыСБюджетом.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|
			|СГРУППИРОВАТЬ ПО
			|	ИПНРасчетыСБюджетом.МесяцНалоговогоПериода,
			|	ИПНРасчетыСБюджетом.ФизЛицо";
				
			// ИПНРасчетыСБюджетомЗаГод
			//	Поля:
			//		ФизЛицо
			//		Период
			//		ИсчисленныйНалог
			//		ИсчисленныйНалогЗаГод
			//
			//	Описание:
			//	Выбирает исчисленные налоги нарастающим итогом за год
			ИПНРасчетыСБюджетомЗаГодТекст = 
			"ВЫБРАТЬ
			|	Периоды.Период КАК Период,
			|	ИПНРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = ИПНРасчетыСБюджетом.МесяцНалоговогоПериода ТОГДА ИПНРасчетыСБюджетом.ИсчисленныйНалог ИНАЧЕ 0 КОНЕЦ) КАК ИсчисленныйНалог,
			|	СУММА(ИПНРасчетыСБюджетом.ИсчисленныйНалог) КАК ИсчисленныйНалогЗаГод
			|ИЗ
			|	" + ДатыПериодовГодаТекст + " КАК Периоды
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + ИПНРасчетыСБюджетомТекст + ") КАК ИПНРасчетыСБюджетом
			|		ПО Периоды.Период >= ИПНРасчетыСБюджетом.МесяцНалоговогоПериода 
			|			И ИПНРасчетыСБюджетом.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
			|
			|СГРУППИРОВАТЬ ПО
			|	Периоды.Период,
			|	ИПНРасчетыСБюджетом.ФизЛицо";
				
				
			// ОПВРасчетыСФондами
			//	Поля:
			//		ФизЛицо
			//		МесяцНалоговогоПериода
			//		ИсчисленныеВзносы
			//
			//	Описание:
			//	Выбирает исчисленные пенсионные взносы для СписокФизлиц
				
			// Здесь не берем имеющийся за МесяцНалоговогоПериода в ОПВРасчетыСФондами взнос, т.к. перерасчитываем заново,
			// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным				
			ОПВРасчетыСФондамиТекст = "
			|ВЫБРАТЬ
			|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
			|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
			|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныеВзносы
			|ИЗ
			|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
			|
			|ГДЕ
			|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачалоГода И
			|	ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонецМесяцаНалоговогоПериода И
			|	ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
			|	ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
			|	ОПВРасчетыСФондами.ВидДвижения = &парамПриход И
			|	ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И
			|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки И
			|	НЕ(ОПВРасчетыСФондами.МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)) И
			|	ОПВРасчетыСФондами.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|
			|СГРУППИРОВАТЬ ПО
			|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
			|	ОПВРасчетыСФондами.ФизЛицо
			|";

			// ОПВРасчетыСФондамиЗаГод
			//	Поля:
			//		ФизЛицо
			//		Период
			//		ИсчисленныеВзносы
			//		ИсчисленныеВзносыЗаГод
			//		ЛьготируемыеИсчисленныеВзносыЗаГод
			//
			//	Описание:
			//	Выбирает исчисленные пенсионные взносы нарастающим итогом за год
			ОПВРасчетыСФондамиЗаГодТекст = 
			"ВЫБРАТЬ
			|	Периоды.Период КАК Период,
			|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = ОПВРасчетыСФондами.МесяцНалоговогоПериода ТОГДА ОПВРасчетыСФондами.ИсчисленныеВзносы ИНАЧЕ 0 КОНЕЦ) КАК ИсчисленныеВзносы,
			|	СУММА(ОПВРасчетыСФондами.ИсчисленныеВзносы) КАК ИсчисленныеВзносыЗаГод,
			|	СУММА(ВЫБОР
			|			КОГДА ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ
			|					ИЛИ ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности
			|				ТОГДА ОПВРасчетыСФондами.ИсчисленныеВзносы
			|			ИНАЧЕ 0
			|		  КОНЕЦ) КАК ЛьготируемыеИсчисленныеВзносыЗаГод
			|	
			|ИЗ
			|	" + ДатыПериодовГодаТекст + " КАК Периоды
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + ОПВРасчетыСФондамиТекст + ") КАК ОПВРасчетыСФондами
			|		ПО Периоды.Период >= ОПВРасчетыСФондами.МесяцНалоговогоПериода 
			|			И ОПВРасчетыСФондами.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеЛьготыТекст + " КАК ПрименяемыеЛьготы
			|			ПО ОПВРасчетыСФондами.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
			|				И ОПВРасчетыСФондами.МесяцНалоговогоПериода = ПрименяемыеЛьготы.Период
			|
			|СГРУППИРОВАТЬ ПО
			|	Периоды.Период,
			|	ОПВРасчетыСФондами.ФизЛицо";

			// ПрименениеВычетовВОрганизации
			//	Поля:
			//		Физлицо,
			//		Период
			//
			// Описание:
			//	Выбирает список физлиц + периоды в которые применяются налоговые вычеты по 
			//	заданной организации
			ПрименениеВычетовВОрганизацииТекст = 
			"ВЫБРАТЬ
			|	ИПНПрименениеВычетовСрезПоследних.Физлицо КАК Физлицо,
			|	ИПНПрименениеВычетовСрезПоследних.Период КАК Период
			|ИЗ
			|	(ВЫБРАТЬ
			|		МАКСИМУМ(ИПНПрименениеВычетов.Период) КАК ПериодСреза,
			|		Периоды.Физлицо КАК Физлицо,
			|		Периоды.Период КАК Период
			|	ИЗ
			|		"+ПериодыТекст+" КАК Периоды
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
			|			ПО Периоды.Период >= ИПНПрименениеВычетов.Период 
			|				И ИПНПрименениеВычетов.Физлицо = Периоды.Физлицо
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Периоды.Физлицо,
			|		Периоды.Период) КАК ИПНПрименениеВычетовСрезПоследних
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
			|		ПО ИПНПрименениеВычетов.Период = ИПНПрименениеВычетовСрезПоследних.ПериодСреза 
			|			И ИПНПрименениеВычетов.Физлицо = ИПНПрименениеВычетовСрезПоследних.Физлицо
			|
			|ГДЕ
			|	ИПНПрименениеВычетов.Налогоплательщик = &парамНалогоплательщик";

			// ОтработанноеВремя
			//	Поля:
			//		Физлицо,
			//		Период,
			//		ПредоставлятьВычет
			//
			// Описание:
			//	Список физлиц-периодов с правом применения налоговых вычетов по отработанному времени
			//	
			
			// Здесь за предыдущие месяцы берем из ресурса НормаДнейПоПятидневке, а за текущий (рассчитываемый) - по данным графика,
			// т.к. для текущего месяца норма дней по пятидневке еще может быть не записана в регистр (если она также рассчитывается
			// на этом же шаге расчета)
			ОтработанноеВремяТекст = 
			"ВЫБРАТЬ
			|	Периоды.Период КАК Период,
			|	Периоды.ФизЛицо КАК ФизЛицо,
			|	ВЫБОР 
			|		КОГДА СУММА(ОтработанноеВремя.НормаДнейПоПятидневке) >= МАКСИМУМ(ДанныеНормыВремени.Норма) / 2
			|			ТОГДА ИСТИНА 
			|		ИНАЧЕ ЛОЖЬ 
			|	КОНЕЦ КАК ПредоставлятьВычет
			|ИЗ
			|	" + ПериодыТекст + " КАК Периоды
			|	
			|	ЛЕВОЕ СОЕДИНЕНИЕ (
			|			ВЫБРАТЬ
			|  			 	ОтработанноеВремя.ПериодДействия,
			|				ОтработанноеВремя.ФизЛицо,
			|				ОтработанноеВремя.НормаДнейПоПятидневке КАК НормаДнейПоПятидневке
			|			ИЗ
			|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОтработанноеВремя
			|			ГДЕ
			|				ОтработанноеВремя.Организация = &парамГоловнаяОрганизация
			|				И ОтработанноеВремя.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|				И ОтработанноеВремя.ВидРасчета.ЗачетОтработанногоВремениДляВычета
			|				И ОтработанноеВремя.ПериодДействия МЕЖДУ &парамНачалоГода И ДОБАВИТЬКДАТЕ(&парамПериодРегистрации, СЕКУНДА, -1)
			|				И ОтработанноеВремя.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
			|		
			|			ОБЪЕДИНИТЬ ВСЕ
			|		
			|	    	ВЫБРАТЬ
			|				ОтработанноеВремя.ПериодДействия,
			|				ОтработанноеВремя.ФизЛицо,
			|				ОтработанноеВремя.ПроизводственныйКалендарьПятидневкаФактическийПериодДействия КАК НормаДнейПоПятидневке
			|			ИЗ
			|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(
			|						Организация = &парамГоловнаяОрганизация 
			|						И ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|						И ВидРасчета.ЗачетОтработанногоВремениДляВычета
			|						И ПериодДействия = &парамПериодРегистрации
			|						И Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство) КАК ОтработанноеВремя) КАК ОтработанноеВремя
			|		ПО Периоды.ФизЛицо = ОтработанноеВремя.ФизЛицо
			|			И Периоды.Период = ОтработанноеВремя.ПериодДействия
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|								НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период,
			|								СУММА(РегламентированныйПроизводственныйКалендарь.Пятидневка) КАК Норма
			|							ИЗ
			|								РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
			|							ГДЕ
			|								РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
			|							СГРУППИРОВАТЬ ПО
			|								НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ)) КАК ДанныеНормыВремени
			|			ПО Периоды.Период = ДанныеНормыВремени.Период
			|
			|СГРУППИРОВАТЬ ПО
			|	Периоды.Период,
			|	Периоды.ФизЛицо
			|";

			// ПрименяемыеВычетыТекст
			//	Поля:
			//		Физлицо
			//		Период
			//		НалоговыйВычетЛичный
			//		НалоговыйВычетИждивенцев
			//		НалоговыйВычетПредыдущегоМестаРаботы
			//
			//	Описание:
			//	Выбирает по всем периодам года налоговын вычеты на которые имеет право физлицо
			ПрименяемыеВычетыТекст = 
			"ВЫБРАТЬ
			|	ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо КАК Физлицо,
			|	ИПННалоговыеВычетыФизлицСрезПоследних.Период КАК Период,
			|	ВЫБОР 
			|		КОГДА (ПрименениеВычетов.Физлицо) ЕСТЬ NULL 
			|				ИЛИ ПрименениеВычетов.ФизЛицо В (&парамФизЛицаНеРезиденты) 
			|				ИЛИ НЕ ЕСТЬNULL(ОтработанноеВремя.ПредоставлятьВычет, ЛОЖЬ)
			|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
			|			ТОГДА 0 
			|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
			|	КОНЕЦ КАК НалоговыйВычетЛичный
			|ИЗ
			|	(ВЫБРАТЬ
			|		МАКСИМУМ(ВычетыФизлиц.Период) КАК ПериодСреза,
			|		Периоды.Физлицо КАК Физлицо,
			|		Периоды.Период КАК Период
			|	ИЗ
			|		" + ПериодыТекст + " КАК Периоды
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
			|			ПО ВычетыФизлиц.Период <= Периоды.Период 
			|				И ВычетыФизлиц.Физлицо = Периоды.Физлицо
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Периоды.Физлицо,
			|		Периоды.Период) КАК ИПННалоговыеВычетыФизлицСрезПоследних
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
			|		ПО ВычетыФизлиц.Период = ИПННалоговыеВычетыФизлицСрезПоследних.ПериодСреза 
			|			И ВычетыФизлиц.Физлицо = ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|		ПО РасчетныеПоказатели.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименениеВычетовВОрганизацииТекст + ") КАК ПрименениеВычетов
			|		ПО ПрименениеВычетов.Физлицо = ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо 
			|			И ПрименениеВычетов.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ОтработанноеВремяТекст + ") КАК ОтработанноеВремя
			|		ПО ОтработанноеВремя.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период 
			|			И ОтработанноеВремя.ФизЛицо = ИПННалоговыеВычетыФизлицСрезПоследних.ФизЛицо";

			// ПрименяемыеВычетыЗаГод
			//	Поля:
			//		Физлицо
			//		Период
			//		ВычетЛичный
			//		ВычетЛичныйЗаГод
			//		ЛьготируемыйНалоговыйВычетЗаГод
			//
			//	Описание:
			//	Выбирает по всем периодам года применяемые налоговые вычеты нарастающим итогом за год
			//
			 ПрименяемыеВычетыЗаГодТекст = 
			"ВЫБРАТЬ
			|	ВычетыПоПериодам.Физлицо КАК Физлицо,
			|	Периоды.Период КАК Период,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = ВычетыПоПериодам.Период ТОГДА ВычетыПоПериодам.НалоговыйВычетЛичный ИНАЧЕ 0 КОНЕЦ) КАК НалоговыйВычет,
			|	СУММА(ВычетыПоПериодам.НалоговыйВычетЛичный) КАК НалоговыйВычетЗаГод,
			|	СУММА(ВЫБОР
			|			КОГДА ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ
			|					ИЛИ ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности
			|				ТОГДА ВычетыПоПериодам.НалоговыйВычетЛичный
			|			ИНАЧЕ 0
			|		  КОНЕЦ) КАК ЛьготируемыйНалоговыйВычетЗаГод
			|
			|ИЗ
			|	" + ДатыПериодовГодаТекст + " КАК Периоды
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименяемыеВычетыТекст + ") КАК ВычетыПоПериодам
			|		ПО ВычетыПоПериодам.Период <= Периоды.Период 
			|			И ВычетыПоПериодам.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеЛьготыТекст + " КАК ПрименяемыеЛьготы
			|			ПО ВычетыПоПериодам.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
			|				И ВычетыПоПериодам.Период = ПрименяемыеЛьготы.Период
			|
			|СГРУППИРОВАТЬ ПО
			|	ВычетыПоПериодам.Физлицо,
			|	Периоды.Период";

			// облагаемый доход за месяц
			ПолеОблагаемыйДоходЗаМесяц = "ЕСТЬNULL(ДоходыЗаГод.ОблагаемыйДоход, 0)";

			// облагаемый доход с начала года
			ПолеОблагаемыйДоходЗаГод = "ЕСТЬNULL(ДоходыЗаГод.ОблагаемыйДоходЗаГод, 0)";

			// право на налоговый вычет за месяц
			ПолеНалоговыйВычетЗаМесяц = "ЕСТЬNULL(ПрименяемыеВычетыЗаГод.НалоговыйВычет, 0)";

			// право на налоговый вычет за год
			ПолеНалоговыйВычетЗаГод = "ЕСТЬNULL(ПрименяемыеВычетыЗаГод.НалоговыйВычетЗаГод, 0)";

			// право на льготу за год (остаток того, что не успел использовать на предыдущем месте работы)
			ПолеПрименяемаяЛьготаЗаГод = "
			|ВЫБОР
			|	КОГДА ЕСТЬNULL(ДоходыЗаГод.ЛьготаПоДоходу, 0) - ЕСТЬNULL(ДоходыЗаГод.ПримененнаяЛьготаНаПредыдущемМестеРаботы, 0) > 0
			|		ТОГДА ЕСТЬNULL(ДоходыЗаГод.ЛьготаПоДоходу, 0) - ЕСТЬNULL(ДоходыЗаГод.ПримененнаяЛьготаНаПредыдущемМестеРаботы, 0)
			|	ИНАЧЕ 0
			|КОНЕЦ";

			// сумма ранее примененной льготы
			ПолеРанееПримененнаяЛьгота = "ЕСТЬNULL(ДоходыЗаГод.ПримененнаяЛьготаЗаГод, 0) - ЕСТЬNULL(ДоходыЗаГод.ПримененнаяЛьготаНаПредыдущемМестеРаботы, 0)";

			// сумма исчисленных пенсионных взносов за месяц
			ПолеПенсионныеВзносыЗаМесяц = "ЕСТЬNULL(ОПВРасчетыСФондамиЗаГод.ИсчисленныеВзносы, 0)";
			
			// сумма исчисленных пенсионных взносов за год
			ПолеПенсионныеВзносыЗаГод = "ЕСТЬNULL(ОПВРасчетыСФондамиЗаГод.ИсчисленныеВзносыЗаГод, 0)";

			// льготируемый облагаемый доход с начала года
			ПолеЛьготируемыйОблагаемыйДоходЗаГод = "ЕСТЬNULL(ДоходыЗаГод.ЛьготируемыйОблагаемыйДоходЗаГод, 0)";

			// налоговый вычет за год, учитываемый при предоставлении льготы
			ПолеЛьготируемыйНалоговыйВычетЗаГод = "ЕСТЬNULL(ПрименяемыеВычетыЗаГод.ЛьготируемыйНалоговыйВычетЗаГод, 0)";

			// сумма исчисленных пенсионных взносов за год, учитываемая при предоставлении льготы
			ПолеЛьготируемыеПенсионныеВзносыЗаГод = "ЕСТЬNULL(ОПВРасчетыСФондамиЗаГод.ЛьготируемыеИсчисленныеВзносыЗаГод, 0)";
			
			// льготируемая облагаемая база по ИПН за год
			ПолеЛьготируемаяБазаДляИсчисленияИПНЗаГод = 
			"ВЫБОР
			|	КОГДА " + ПолеЛьготируемыйОблагаемыйДоходЗаГод + " - " + ПолеЛьготируемыйНалоговыйВычетЗаГод + " - " + ПолеЛьготируемыеПенсионныеВзносыЗаГод + " > 0
			|	ТОГДА " + ПолеЛьготируемыйОблагаемыйДоходЗаГод + " - " + ПолеЛьготируемыйНалоговыйВычетЗаГод + " - " + ПолеЛьготируемыеПенсионныеВзносыЗаГод + "
			|	ИНАЧЕ 0
			|КОНЕЦ";
			
			// примененная льгота за год   
			ПолеПримененнаяЛьгота = 
			"ВЫБОР
			|	КОГДА " + ПолеПрименяемаяЛьготаЗаГод + " > " + ПолеЛьготируемаяБазаДляИсчисленияИПНЗаГод + " 
			|		ТОГДА " + ПолеЛьготируемаяБазаДляИсчисленияИПНЗаГод + " 
			|	ИНАЧЕ ВЫБОР 
			|			КОГДА " + ПолеЛьготируемаяБазаДляИсчисленияИПНЗаГод + " > 0 
			|				ТОГДА " + ПолеПрименяемаяЛьготаЗаГод + " 
			|			ИНАЧЕ 0 
			|		  КОНЕЦ 
			|КОНЕЦ";
				
			// сумма ранее исчисленного налога за месяц
			ПолеРанееНалогИсчисленный = "ЕСТЬNULL(ИПНРасчетыСБюджетомЗаГод.ИсчисленныйНалог, 0)";
			
			// БазаДляИсчисленияИПН
			//	Поля:
			//		Период
			//		ФизЛицо
			//      ОблагаемаяСумма
			//      ОблагаемаяСуммаЗаГод
			//      ПримененнаяЛьгота
			//      ПримененныйВычет
			//
			//	Описание:
			//	Получает облагаемую базу для исчисления ИПН с начала года для каждого месяца периода и примененную льготу 
			БазаДляИсчисленияИПНТекст = 
			"ВЫБРАТЬ 
			|	ДоходыЗаГод.Период,
			|	ДоходыЗаГод.ФизЛицо,
			|	ДоходыЗаГод.ПрименяетсяЛьготаВМесяце,
			|	ДоходыЗаГод.ОблагаемыйДоход, // = ОблагаемыйДоходЗаМесяц + доходы в натур. форме за месяц
			|	ДоходыЗаГод.ОблагаемыйДоходЗаМесяц,
			|	ДоходыЗаГод.ОблагаемыйДоходЗаГод,
			|	" + ПолеЛьготируемыйОблагаемыйДоходЗаГод + " - " + ПолеЛьготируемыйНалоговыйВычетЗаГод + " - " + ПолеЛьготируемыеПенсионныеВзносыЗаГод + " КАК ЛьготируемаяБазаДляИсчисленияИПН,
			|	" + ПолеПримененнаяЛьгота + " КАК ПримененнаяЛьгота,
			|	" + ПолеРанееПримененнаяЛьгота + " КАК РанееПримененнаяЛьгота,
			|	" + ПолеНалоговыйВычетЗаМесяц + " КАК НалоговыйВычетЗаМесяц,
			|	" + ПолеНалоговыйВычетЗаГод + " КАК НалоговыйВычетЗаГод,
			|	" + ПолеПенсионныеВзносыЗаМесяц + " КАК ИсчисленныеВзносыЗаМесяц,
			|	" + ПолеПенсионныеВзносыЗаГод + " КАК ИсчисленныеВзносыЗаГод,
			|	" + ПолеРанееНалогИсчисленный + " КАК РанееНалогИсчисленный,
			|	" + ПолеПрименяемаяЛьготаЗаГод + " КАК ЛьготаПоДоходу
			|ИЗ
			|	(" + ДоходыЗаГодТекст + ") КАК ДоходыЗаГод
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименяемыеВычетыЗаГодТекст + ") КАК ПрименяемыеВычетыЗаГод
			|		ПО ДоходыЗаГод.Период = ПрименяемыеВычетыЗаГод.Период 
			|			И ДоходыЗаГод.ФизЛицо = ПрименяемыеВычетыЗаГод.ФизЛицо
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ОПВРасчетыСФондамиЗаГодТекст + ") КАК ОПВРасчетыСФондамиЗаГод
			|		ПО ДоходыЗаГод.Период = ОПВРасчетыСФондамиЗаГод.Период 
			|			И ДоходыЗаГод.ФизЛицо = ОПВРасчетыСФондамиЗаГод.ФизЛицо
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ИПНРасчетыСБюджетомЗаГодТекст + ") КАК ИПНРасчетыСБюджетомЗаГод
			|		ПО ДоходыЗаГод.Период = ИПНРасчетыСБюджетомЗаГод.Период
			|			И ДоходыЗаГод.ФизЛицо = ИПНРасчетыСБюджетомЗаГод.ФизЛицо
			|
			|";
			
			// БазаДляИсчисленияИПН
			//	Поля:
			//		Период
			//		ФизЛицо
			
			// Здесь определяем максимальную сумму предоставленной льготы с начала налогового года, кроме текущего месяца
			БазаДляИсчисленияИПНТекст = 
			"ВЫБРАТЬ 
			|	Периоды.Период КАК Период,
			|	БазаДляИсчисленияИПН.ФизЛицо КАК ФизЛицо,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ПрименяетсяЛьготаВМесяце ИНАЧЕ 0 КОНЕЦ) КАК ПрименяетсяЛьготаВМесяце,				
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОблагаемыйДоходЗаГод ИНАЧЕ 0 КОНЕЦ) КАК ОблагаемыйДоходЗаГод,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ЛьготируемаяБазаДляИсчисленияИПН ИНАЧЕ 0 КОНЕЦ) КАК ЛьготируемаяБазаДляИсчисленияИПН,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОблагаемыйДоход ИНАЧЕ 0 КОНЕЦ) КАК ОблагаемыйДоход,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОблагаемыйДоходЗаМесяц ИНАЧЕ 0 КОНЕЦ) КАК ОблагаемыйДоходЗаМесяц,
			|	МАКСИМУМ(ВЫБОР КОГДА БазаДляИсчисленияИПН.Период < Периоды.Период ТОГДА БазаДляИсчисленияИПН.ПримененнаяЛьгота ИНАЧЕ 0 КОНЕЦ) КАК ПримененнаяЛьгота,
			|	МАКСИМУМ(ВЫБОР КОГДА БазаДляИсчисленияИПН.Период < Периоды.Период ТОГДА БазаДляИсчисленияИПН.РанееПримененнаяЛьгота ИНАЧЕ 0 КОНЕЦ) КАК РанееПримененнаяЛьгота,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.НалоговыйВычетЗаМесяц ИНАЧЕ 0 КОНЕЦ) КАК НалоговыйВычетЗаМесяц,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.НалоговыйВычетЗаГод ИНАЧЕ 0 КОНЕЦ) КАК НалоговыйВычетЗаГод,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ИсчисленныеВзносыЗаМесяц ИНАЧЕ 0 КОНЕЦ) КАК ИсчисленныеВзносыЗаМесяц,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ИсчисленныеВзносыЗаГод ИНАЧЕ 0 КОНЕЦ) КАК ИсчисленныеВзносыЗаГод,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.РанееНалогИсчисленный ИНАЧЕ 0 КОНЕЦ) КАК РанееНалогИсчисленный,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ЛьготаПоДоходу ИНАЧЕ 0 КОНЕЦ) КАК ЛьготаПоДоходу
			|	
			|ПОМЕСТИТЬ ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного
			|ИЗ
			|	" + ДатыПериодовГодаТекст + " КАК Периоды
			|	
			|	ЛЕВОЕ СОЕДИНЕНИЕ (" + БазаДляИсчисленияИПНТекст + ") КАК БазаДляИсчисленияИПН
			|		ПО БазаДляИсчисленияИПН.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, ГОД)
			|			И БазаДляИсчисленияИПН.Период <= Периоды.Период
			|
			|СГРУППИРОВАТЬ ПО
			|	Периоды.Период,
			|	БазаДляИсчисленияИПН.ФизЛицо
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицо,
			|	Период
			|";	
			Запрос.Текст = БазаДляИсчисленияИПНТекст;
			Запрос.Выполнить();
			БазаДляИсчисленияИПНТекст = "ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного";
			
			РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
			|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|						БазаДляИсчисленияИПН.ФизЛицо,
			|						ВЫБОР 
			|							КОГДА БазаДляИсчисленияИПН.ПрименяетсяЛьготаВМесяце > 0 
			|								ТОГДА 1
			|							ИНАЧЕ 0
			|						КОНЕЦ КАК ПризнакПримененияЛьготы,
			|						БазаДляИсчисленияИПН.ОблагаемыйДоходЗаГод,
			|						БазаДляИсчисленияИПН.ЛьготируемаяБазаДляИсчисленияИПН,
			|						БазаДляИсчисленияИПН.ОблагаемыйДоход,
			|						БазаДляИсчисленияИПН.ОблагаемыйДоходЗаМесяц,
			|						БазаДляИсчисленияИПН.НалоговыйВычетЗаМесяц,
			|						БазаДляИсчисленияИПН.РанееПримененнаяЛьгота,
			|						БазаДляИсчисленияИПН.НалоговыйВычетЗаГод,
			|						БазаДляИсчисленияИПН.ИсчисленныеВзносыЗаМесяц,
			|						БазаДляИсчисленияИПН.ИсчисленныеВзносыЗаГод,
			|						БазаДляИсчисленияИПН.РанееНалогИсчисленный,
			|						ВЫБОР
			|							КОГДА БазаДляИсчисленияИПН.ПримененнаяЛьгота > БазаДляИсчисленияИПН.ЛьготаПоДоходу 
			|								ТОГДА БазаДляИсчисленияИПН.ПримененнаяЛьгота
			|							ИНАЧЕ БазаДляИсчисленияИПН.ЛьготаПоДоходу
			|						КОНЕЦ КАК ПрименяемаяЛьготаЗаГод
			|			
			|				  	ИЗ
			|				  		" + БазаДляИсчисленияИПНТекст + " КАК БазаДляИсчисленияИПН
			|					ГДЕ
			|						БазаДляИсчисленияИПН.Период = &парамПериодРегистрации) КАК РасчетОтОбратногоДанныеИПН
			|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеИПН.ФизЛицо
			|	   И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахИПНиСН.СрезПоследних(
			|						&парамПериодРегистрации, 
			|						ВидСтавокИПНиСН = &парамПоИсчислениюИПН
			|						И НомерСтрокиСтавок = 1) КАК СведенияОСтавкахИПН
			|	ПО ИСТИНА
			|";

		Иначе // до 2007 года  - расчет по шкале
		
			// ПрименяемыеЛьготы
			//	Поля:
			//		Физлицо
			//		Период
			//		ПрименяетсяЛьготаУчастникаВОВ
			//		ПрименяетсяЛьготаПоИнвалидности
			//		ЛьготаПоДоходу
			//
			//	Описание:
			//	Выбирает по всем периодам года льготы на которые имеет право физлицо
			ПрименяемыеЛьготыТекст = 
			"ВЫБРАТЬ
			|	ИПНЛьготыФизлиц.Физлицо,
			|	ИПНЛьготыФизлиц.Период,
			|
			|	ВЫБОР
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > 0 
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ПрименяетсяЛьготаУчастникаВОВ,
			|
			|	ВЫБОР
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаПоИнвалидности > 0 
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ПрименяетсяЛьготаПоИнвалидности,
			|
			|	ВЫБОР 
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
			|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ 
			|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
			|	КОНЕЦ КАК ЛьготаПоДоходу
			|ИЗ
			|	(ВЫБРАТЬ
			|		ИПНЛьготыФизлицСрезПоследних.Физлицо КАК Физлицо,
			|		ИПНЛьготыФизлицСрезПоследних.Период КАК Период,
			|		ВЫБОР 
			|			КОГДА (ЛьготыФизлицПоИнвалидности.Физлицо) ЕСТЬ NULL 
			|				ТОГДА 0 
			|			ИНАЧЕ ВЫБОР 
			|					КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
			|							И (ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности) = &парамТретьяГруппа 
			|						ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0) 
			|					ИНАЧЕ 99999999 
			|				  КОНЕЦ 
			|		КОНЕЦ КАК ЛьготаПоИнвалидности,
			|		ВЫБОР 
			|			КОГДА (ЛьготыФизлицУчастниковВОВ.Физлицо) ЕСТЬ NULL 
			|				ТОГДА 0 
			|			ИНАЧЕ 99999999 
			|		КОНЕЦ КАК ЛьготаУчастникаВОВ
			|		
			|	ИЗ
			|		(ВЫБРАТЬ
			|			МАКСИМУМ(ЛьготыФизлицПоИнвалидности.Период) КАК ПериодСрезаИнвалидность,
			|			МАКСИМУМ(ЛьготыФизлицУчастниковВОВ.Период) КАК ПериодСрезаУчастникиВОВ,
			|			Периоды.Физлицо КАК Физлицо,
			|			Периоды.Период КАК Период
			|		ИЗ
			|			" + ПериодыТекст + " КАК Периоды
			|
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
			|				ПО ЛьготыФизлицПоИнвалидности.Период <= Периоды.Период 
			|					И ЛьготыФизлицПоИнвалидности.Физлицо = Периоды.Физлицо
			|					И (ЛьготыФизЛицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
			|						ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизЛицПоИнвалидности.СрокДействияСправки, ДЕНЬ) >= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ))
			|
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
			|				ПО ЛьготыФизлицУчастниковВОВ.Период <= Периоды.Период 
			|					И ЛьготыФизлицУчастниковВОВ.Физлицо = Периоды.Физлицо
			|		
			|		СГРУППИРОВАТЬ ПО
			|			Периоды.Физлицо,
			|			Периоды.Период) КАК ИПНЛьготыФизлицСрезПоследних
			|
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК ЛьготыФизлицПоИнвалидности
			|				ПО ЛьготыФизлицПоИнвалидности.Период = ИПНЛьготыФизлицСрезПоследних.ПериодСрезаИнвалидность 
			|					И ЛьготыФизлицПоИнвалидности.Физлицо = ИПНЛьготыФизлицСрезПоследних.Физлицо
			|
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ КАК ЛьготыФизлицУчастниковВОВ
			|				ПО ЛьготыФизлицУчастниковВОВ.Период = ИПНЛьготыФизлицСрезПоследних.ПериодСрезаУчастникиВОВ 
			|					И ЛьготыФизлицУчастниковВОВ.Физлицо = ИПНЛьготыФизлицСрезПоследних.Физлицо
			|
			|				ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|				ПО РасчетныеПоказатели.Период = ИПНЛьготыФизлицСрезПоследних.Период) КАК ИПНЛьготыФизлиц
			|";
			
			// Доходы
			//	Поля:
			//		ФизЛицо
			//		Период
			//		РегистрировалсяДоходЗаПериод
			//		СуммаДоходаВсего
			//		СуммаДоходаОборот
			//		СуммаВычетаОборот
			//      СуммаПримененныйВычетОборот
			//      СуммаПримененнаяЛьготаОборот
			//      ПримененнаяЛьготаНаПредыдущемМестеРаботы
			//
			//	Описание:
			// Выбирает общую сумму доходов и облагаемые налогом доходы за весь год по физлицам из СписокФизлиц
				
			// Здесь не учитываем доходы, записанные текущим регистратором, т.к. при проведении по ИПНСведенияОДоходах
			// они были еще в процессе расчета и их прибавим позже. А также отдельно выделяем доходы, начисленные в данной 
			// организации за текущий месяц, которые прошли через начисления, прочие доходы не выделяем.
			ДоходыТекст = 
			"ВЫБРАТЬ
			|	ИПНОбороты.Физлицо КАК ФизЛицо,
			|	ИПНОбороты.Период КАК Период,
			|	ВЫБОР КОГДА СУММА(ИПНОбороты.СуммаДоходаВсего)  ЕСТЬ NULL ТОГДА 0 ИНАЧЕ 1 КОНЕЦ КАК РегистрировалсяДоходЗаПериод,
			|	СУММА(ИПНОбороты.СуммаДоходаВсего) КАК СуммаДоходаВсего,
			|	СУММА(ИПНОбороты.СуммаДоходаОборот) КАК СуммаДоходаОборот,
			|	СУММА(ИПНОбороты.СуммаВычетаОборот) КАК СуммаВычетаОборот,
			|	СУММА(ИПНОбороты.СуммаПримененныйВычетОборот) КАК СуммаПримененныйВычетОборот,
			|	СУММА(ИПНОбороты.СуммаПримененнаяЛьготаОборот) КАК СуммаПримененнаяЛьготаОборот,
			|	СУММА(ИПНОбороты.ПримененнаяЛьготаНаПредыдущемМестеРаботы) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
			|	СУММА(ВЫБОР
			|			КОГДА ИПНОбороты.Период = &парамПериодРегистрации И ИПНОбороты.НачисленоВТекущейОрганизации
			|				ТОГДА ИПНОбороты.СуммаДоходаОборот - ИПНОбороты.СуммаВычетаОборот
			|			ИНАЧЕ 0
			|		  КОНЕЦ) КАК ОблагаемыйДоходЗаМесяц
			|ИЗ
			|	(ВЫБРАТЬ
			|		НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
			|		ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
			|		СУММА(ИПНСведенияОДоходах.СуммаДохода) КАК СуммаДоходаВсего,
			|		ВЫБОР КОГДА ИПНСведенияОДоходах.СпособНалогообложения <> &парамНеОблагаетсяЦеликом ТОГДА СУММА(ИПНСведенияОДоходах.СуммаДохода) ИНАЧЕ 0 КОНЕЦ КАК СуммаДоходаОборот,
			|		СУММА(ИПНСведенияОДоходах.СуммаВычета) КАК СуммаВычетаОборот,
			|		СУММА(ИПНСведенияОДоходах.ПримененныйВычет) КАК СуммаПримененныйВычетОборот,
			|		СУММА(ИПНСведенияОДоходах.ПримененнаяЛьгота) КАК СуммаПримененнаяЛьготаОборот,
			|		0 КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
			|		ВЫБОР
			|			КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
			|					ИЛИ ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РасчетНалоговПриПоступленииАктивовУслуг
			|				ТОГДА ЛОЖЬ
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ КАК НачисленоВТекущейОрганизации
			|	ИЗ
			|		РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
			|	
			|	ГДЕ
			|		ИПНСведенияОДоходах.Период >= &парамНачалоГода И
			|		ИПНСведенияОДоходах.Период <= &парамКонецМесяцаНалоговогоПериода И
			|		ИПНСведенияОДоходах.ПериодРегистрации <= &парамПериодРегистрации И
			|		ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик И
			|		ИПНСведенияОДоходах.Регистратор <> &парамРегистратор И
			|		ИПНСведенияОДоходах.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц) И
			|		НЕ(ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН
			|				И ИПНСведенияОДоходах.ПериодРегистрации = &парамПериодРегистрации)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ),
			|		ИПНСведенияОДоходах.ФизЛицо,
			|		ИПНСведенияОДоходах.СпособНалогообложения,
			|		ИПНСведенияОДоходах.Регистратор
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
			|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо КАК ФизЛицо,
			|       СУММА(ИПНСведенияПредыдущегоМестаРаботы.Доход) КАК СуммаДоходаВсего,
			|		СУММА(ИПНСведенияПредыдущегоМестаРаботы.Доход - ИПНСведенияПредыдущегоМестаРаботы.ДоходНеОблагаемыйИПН) КАК СуммаДоходаОборот,
			|		0 КАК СуммаВычетаОборот,
			|		0 КАК СуммаПримененныйВычетОборот,
			|		СУММА(ИПНСведенияПредыдущегоМестаРаботы.ПримененнаяЛьгота) КАК СуммаПримененнаяЛьготаОборот,
			|		СУММА(ИПНСведенияПредыдущегоМестаРаботы.ПримененнаяЛьгота) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
			|		ЛОЖЬ
			|	ИЗ
			|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК ИПНСведенияПредыдущегоМестаРаботы
			|	
			|	ГДЕ
			|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода И
			|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации И
			|		ИПНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик И
			|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
			|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		НАЧАЛОПЕРИОДА(ИПНПлановыеВычеты.МесяцНалоговогоПериода, МЕСЯЦ) КАК Период,
			|		ИПНПлановыеВычеты.ФизЛицо,
			|		0 КАК СуммаДоходаВсего,
			|		0 КАК СуммаДоходаОборот,
			|		СУММА(ИПНПлановыеВычеты.СуммаВычета) КАК СуммаВычетаОборот,
			|		0 КАК СуммаПримененныйВычетОборот,
			|		0 КАК СуммаПримененнаяЛьготаОборот,
			|		0 КАК ПрименннаяЛьготаНаПредыдущемМестеРаботы,
			|		ЛОЖЬ КАК НачисленоВТекущейОрганизации
			|	ИЗ
			|		РегистрСведений.ИПНПлановыеНалоговыеВычетыФизЛиц.СрезПоследних(
			|				&парамКонецПериодаРегистрации,
			|				Налогоплательщик = &парамНалогоплательщик
			|				И МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
			|				И ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)) КАК ИПНПлановыеВычеты
			|	СГРУППИРОВАТЬ ПО
			|		НАЧАЛОПЕРИОДА(ИПНПлановыеВычеты.МесяцНалоговогоПериода, МЕСЯЦ),
			|		ИПНПлановыеВычеты.ФизЛицо) КАК ИПНОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	ИПНОбороты.Физлицо,
			|	ИПНОбороты.Период";
				
			ТипЗначенияИПНТекст = "ЧИСЛО(10, 2)";
				
			// ДоходыЗаГод 
			//	Поля:
			//		ФизЛицо
			//		Период
			//		ОблагаемыйДоходЗаГод
			//      ПримененныйВычет
			//      ПримененныйВычетЗаГод
			//      ПримененнаяЛьготаЗаГод
			//      ПримененнаяЛьготаНаПредыдущемМестеРаботы
			//		ОблагаемыйДоходЗаГодДляЛьготыУчастникаВОВ
			//		ОблагаемыйДоходЗаГодДляЛьготыПоИнвалидности
			//
			//	Описание:
			//	Выбирает по всем периодам с начала года сумму дохода нарастающим итогом за год
			
			// Здесь может доходов еще не быть в регистре ИПНСведенияОДоходах, то льготы присоединяем либо
			// к ИПНОбороты либо к Периоды
			ДоходыЗаГодТекст = "
			|ВЫБРАТЬ
			|	Периоды.Период КАК Период,
			|	Периоды.Физлицо КАК ФизЛицо,
			|	СУММА(ИПНОбороты.СуммаДоходаОборот - ИПНОбороты.СуммаВычетаОборот) КАК ОблагаемыйДоходЗаГод,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = ИПНОбороты.Период ТОГДА ИПНОбороты.СуммаПримененныйВычетОборот ИНАЧЕ 0 КОНЕЦ) КАК ПримененныйВычет,
			|	СУММА(ИПНОбороты.СуммаПримененныйВычетОборот) КАК ПримененныйВычетЗаГод,
			|	СУММА(ИПНОбороты.СуммаПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаЗаГод,
			|	СУММА(ИПНОбороты.ПримененнаяЛьготаНаПредыдущемМестеРаботы) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
			|	СУММА(ВЫБОР
			|			КОГДА ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ
			|					ИЛИ ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности
			|				ТОГДА ИПНОбороты.СуммаДоходаОборот - ИПНОбороты.СуммаВычетаОборот
			|			ИНАЧЕ 0
			|		  КОНЕЦ) КАК ЛьготируемыйОблагаемыйДоходЗаГод,
			|	МАКСИМУМ(ПрименяемыеЛьготы.ЛьготаПоДоходу) КАК ЛьготаПоДоходу,
			|	СУММА(ВЫБОР
			|			КОГДА ИПНОбороты.Период = &парамПериодРегистрации И Периоды.Период = &парамПериодРегистрации
			|				ТОГДА ИПНОбороты.ОблагаемыйДоходЗаМесяц
			|			ИНАЧЕ 0
			|		  КОНЕЦ) КАК ОблагаемыйДоходЗаМесяц
			|
			|ИЗ
			|	" + ПериодыТекст + " КАК Периоды
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ДоходыТекст + ") КАК ИПНОбороты
			|		ПО Периоды.Период >= ИПНОбороты.Период 
			|			И ИПНОбороты.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
			|			И Периоды.Физлицо = ИПНОбороты.ФизЛицо
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименяемыеЛьготыТекст + ") КАК ПрименяемыеЛьготы
			|		ПО ВЫБОР
			|				КОГДА НЕ (ИПНОбороты.ФизЛицо ЕСТЬ NULL)
			|					ТОГДА ИПНОбороты.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
			|							И ИПНОбороты.Период = ПрименяемыеЛьготы.Период
			|				ИНАЧЕ Периоды.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
			|						И Периоды.Период = ПрименяемыеЛьготы.Период
			|			КОНЕЦ		
			|
			|СГРУППИРОВАТЬ ПО
			|	Периоды.Период,
			|	Периоды.ФизЛицо";
				
			// ДоходыЗаКвартал
			//	Поля:
			//		ФизЛицо
			//		Период
			//		РегистрировалсяДоходЗаПериод
			//		ПолученныйДоходЗаКвартал
			//		РазмерМЗПЗаКвартал
			//
			//	Описание:
			//	Выбирает суммы среднеквартального дохода
			ДоходыЗаКварталТекст = "
			|ВЫБРАТЬ
			|	ИПНОбороты.Период КАК Период,
			|	ИПНОбороты.ФизЛицо КАК ФизЛицо,
			|	СУММА(ИПНОбороты.РегистрировалсяДоходЗаПериод) КАК РегистрировалсяДоходЗаПериод,
			|	СУММА(ИПНОбороты.ПолученныйДоходЗаКвартал) КАК ПолученныйДоходЗаКвартал,
			|	СУММА(РасчетныеПоказатели.РазмерМЗП) КАК РазмерМЗПЗаКвартал,
			|	МАКСИМУМ(РасчетныеПоказатели.РазмерМЗП) КАК РазмерМЗП
			|ИЗ
			|	(ВЫБРАТЬ
			|		Периоды.Период КАК Период,
			|		Периоды.Физлицо КАК ФизЛицо,
			|		ИПНОбороты.РегистрировалсяДоходЗаПериод КАК РегистрировалсяДоходЗаПериод,
			|		ИПНОбороты.СуммаДоходаВсего КАК ПолученныйДоходЗаКвартал
			|	ИЗ
			|		" + ПериодыТекст + " КАК Периоды
			|			ЛЕВОЕ СОЕДИНЕНИЕ (" + ДоходыТекст + ") КАК ИПНОбороты
			|			ПО ИПНОбороты.Период <= Периоды.Период И ИПНОбороты.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, КВАРТАЛ) И Периоды.Физлицо = ИПНОбороты.Физлицо) КАК ИПНОбороты
			|			ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|			ПО ИПНОбороты.Период = РасчетныеПоказатели.Период
			|
			|СГРУППИРОВАТЬ ПО
			|	ИПНОбороты.Период,
			|	ИПНОбороты.ФизЛицо";
				
			// ИПНРасчетыСБюджетом
			//	Поля:
			//		ФизЛицо
			//		МесяцНалоговогоПериода
			//		ИсчисленныйНалог
			//
			//	Описание:
			//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом и данные регистра
			//  СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
				
			// Здесь не берем имеющийся за МесяцНалоговогоПериода в ИПНРасчетыСБюджетами налог, т.к. перерасчитываем заново,
			// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным
			ИПНРасчетыСБюджетомТекст = "
			|ВЫБРАТЬ
			|	ИПНРасчеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
			|	ИПНРасчеты.ФизЛицо КАК ФизЛицо,
			|	СУММА(ИПНРасчеты.ИсчисленныйНалог) КАК ИсчисленныйНалог
			|ИЗ
			|	(ВЫБРАТЬ
			|		ИПНРасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
			|		ИПНРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|		СУММА(ИПНРасчетыСБюджетом.Налог) КАК ИсчисленныйНалог
			|	ИЗ
			|		РегистрНакопления.ИПНРасчетыСБюджетом КАК ИПНРасчетыСБюджетом
			|
			|	ГДЕ
			|		ИПНРасчетыСБюджетом.МесяцНалоговогоПериода >= &парамНачалоГода И
			|		ИПНРасчетыСБюджетом.МесяцНалоговогоПериода <= &парамКонецМесяцаНалоговогоПериода И
			|		ИПНРасчетыСБюджетом.Налогоплательщик = &парамНалогоплательщик И
			|		ИПНРасчетыСБюджетом.Регистратор <> &парамРегистратор И
			|		ИПНРасчетыСБюджетом.Период <= &парамКонецПериодаРегистрации И
			|		ИПНРасчетыСБюджетом.ВидДвижения = &парамПриход И 
			|		ИПНРасчетыСБюджетом.ВидСтроки = &парамВидСтроки И
			|		НЕ(ИПНРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)) И
			|		ИПНРасчетыСБюджетом.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|
			|	СГРУППИРОВАТЬ ПО
			|		ИПНРасчетыСБюджетом.МесяцНалоговогоПериода,
			|		ИПНРасчетыСБюджетом.ФизЛицо
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
			|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо,
			|		СУММА(ИПНСведенияПредыдущегоМестаРаботы.ИПН)
			|	ИЗ
			|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК ИПНСведенияПредыдущегоМестаРаботы
			|	
			|	ГДЕ
			|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода И
			|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации И
			|		ИПНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик И
			|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
			|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо) КАК ИПНРасчеты
			|
			|СГРУППИРОВАТЬ ПО
			|	ИПНРасчеты.МесяцНалоговогоПериода,
			|	ИПНРасчеты.ФизЛицо";
				
			// ИПНРасчетыСБюджетомЗаГод
			//	Поля:
			//		ФизЛицо
			//		Период
			//		ИсчисленныйНалогЗаГод
			//
			//	Описание:
			//	Выбирает исчисленные налоги нарастающим итогом за год
			ИПНРасчетыСБюджетомЗаГодТекст = 
			"ВЫБРАТЬ
			|	Периоды.Период КАК Период,
			|	ИПНРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
			|	СУММА(ИПНРасчетыСБюджетом.ИсчисленныйНалог) КАК ИсчисленныйНалогЗаГод
			|ИЗ
			|	" + ДатыПериодовГодаТекст + " КАК Периоды
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + ИПНРасчетыСБюджетомТекст + ") КАК ИПНРасчетыСБюджетом
			|		ПО Периоды.Период >= ИПНРасчетыСБюджетом.МесяцНалоговогоПериода И ИПНРасчетыСБюджетом.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
			|
			|СГРУППИРОВАТЬ ПО
			|	Периоды.Период,
			|	ИПНРасчетыСБюджетом.ФизЛицо";
				
				
			// ОПВРасчетыСФондами
			//	Поля:
			//		ФизЛицо
			//		МесяцНалоговогоПериода
			//		ИсчисленныеВзносы
			//
			//	Описание:
			//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами и 
			//  данные регистра СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
				
			// Здесь не берем имеющийся за МесяцНалоговогоПериода в ОПВРасчетыСФондами взнос, т.к. перерасчитываем заново,
			// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным				
			ОПВРасчетыСФондамиТекст = "
			|ВЫБРАТЬ
			|	ОПВРасчеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
			|	ОПВРасчеты.ФизЛицо КАК ФизЛицо,
			|	СУММА(ОПВРасчеты.ИсчисленныеВзносы) КАК ИсчисленныеВзносы
			|ИЗ
			|	(ВЫБРАТЬ
			|		НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
			|		ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
			|		СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныеВзносы
			|	ИЗ
			|		РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
			|
			|	ГДЕ
			|		ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачалоГода И
			|		ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонецМесяцаНалоговогоПериода И
			|		ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
			|		ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
			|		ОПВРасчетыСФондами.ВидДвижения = &парамПриход И
			|		ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И
			|		ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки И
			|		НЕ(ОПВРасчетыСФондами.МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)) И
			|		ОПВРасчетыСФондами.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|
			|	СГРУППИРОВАТЬ ПО
			|		ОПВРасчетыСФондами.МесяцНалоговогоПериода,
			|		ОПВРасчетыСФондами.ФизЛицо
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ
			|		НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
			|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо,
			|		СУММА(ИПНСведенияПредыдущегоМестаРаботы.ОПВ)
			|	ИЗ
			|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК ИПНСведенияПредыдущегоМестаРаботы
			|	
			|	ГДЕ
			|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода И
			|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации И
			|		ИПНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик И
			|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		НАЧАЛОПЕРИОДА(ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, МЕСЯЦ),
			|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо) КАК ОПВРасчеты
			|
			|СГРУППИРОВАТЬ ПО
			|	ОПВРасчеты.МесяцНалоговогоПериода,
			|	ОПВРасчеты.ФизЛицо";

			// ОПВРасчетыСФондамиЗаГод
			//	Поля:
			//		ФизЛицо
			//		Период
			//		ИсчисленныеВзносыЗаГод
			//		ИсчисленныеВзносыЗаГодДляЛьготыУчастникаВОВ
			//		ИсчисленныеВзносыЗаГодДляЛьготыПоИнвалидности
			//
			//	Описание:
			//	Выбирает исчисленные пенсионные взносы нарастающим итогом за год
			ОПВРасчетыСФондамиЗаГодТекст = 
			"ВЫБРАТЬ
			|	Периоды.Период КАК Период,
			|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
			|	СУММА(ОПВРасчетыСФондами.ИсчисленныеВзносы) КАК ИсчисленныеВзносыЗаГод,
			|	СУММА(ВЫБОР
			|			КОГДА ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ
			|					ИЛИ ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности
			|				ТОГДА ОПВРасчетыСФондами.ИсчисленныеВзносы
			|			ИНАЧЕ 0
			|		  КОНЕЦ) КАК ЛьготируемыеИсчисленныеВзносыЗаГод
			|	
			|ИЗ
			|	" + ДатыПериодовГодаТекст + " КАК Периоды
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + ОПВРасчетыСФондамиТекст + ") КАК ОПВРасчетыСФондами
			|		ПО Периоды.Период >= ОПВРасчетыСФондами.МесяцНалоговогоПериода 
			|			И ОПВРасчетыСФондами.МесяцНалоговогоПериода >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименяемыеЛьготыТекст + ") КАК ПрименяемыеЛьготы
			|			ПО ОПВРасчетыСФондами.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
			|				И ОПВРасчетыСФондами.МесяцНалоговогоПериода = ПрименяемыеЛьготы.Период
			|
			|СГРУППИРОВАТЬ ПО
			|	Периоды.Период,
			|	ОПВРасчетыСФондами.ФизЛицо";

			// ПрименениеВычетовВОрганизации
			//	Поля:
			//		Физлицо,
			//		Период
			//
			// Описание:
			//	Выбирает список физлиц + периоды в которые применяются налоговые вычеты по 
			//	заданной организации
			ПрименениеВычетовВОрганизацииТекст = 
			"ВЫБРАТЬ
			|	ИПНПрименениеВычетовСрезПоследних.Физлицо КАК Физлицо,
			|	ИПНПрименениеВычетовСрезПоследних.Период КАК Период
			|ИЗ
			|	(ВЫБРАТЬ
			|		МАКСИМУМ(ИПНПрименениеВычетов.Период) КАК ПериодСреза,
			|		Периоды.Физлицо КАК Физлицо,
			|		Периоды.Период КАК Период
			|	ИЗ
			|		"+ПериодыТекст+" КАК Периоды
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
			|			ПО Периоды.Период >= ИПНПрименениеВычетов.Период И ИПНПрименениеВычетов.Физлицо = Периоды.Физлицо
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Периоды.Физлицо,
			|		Периоды.Период) КАК ИПНПрименениеВычетовСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПрименениеВычетов КАК ИПНПрименениеВычетов
			|		ПО ИПНПрименениеВычетов.Период = ИПНПрименениеВычетовСрезПоследних.ПериодСреза И ИПНПрименениеВычетов.Физлицо = ИПНПрименениеВычетовСрезПоследних.Физлицо
			|
			|ГДЕ
			|	ИПНПрименениеВычетов.Налогоплательщик = &парамНалогоплательщик";

			// ОтработанноеВремя
			//	Поля:
			//		Физлицо,
			//		Период,
			//		ПредоставлятьВычет
			//
			// Описание:
			//	Список физлиц-периодов с правом применения налоговых вычетов по отработанному времени
			//	
			
			// Здесь за предыдущие месяцы берем из ресурса НормаДнейПоПятидневке, а за текущий (рассчитываемый) - по данным графика,
			// т.к. для текущего месяца норма дней по пятидневке еще может быть не записана в регистр (если она также рассчитывается
			// на этом же шаге расчета)
			ОтработанноеВремяТекст = 
			"ВЫБРАТЬ
			|	Периоды.Период КАК Период,
			|	Периоды.ФизЛицо КАК ФизЛицо,
			|	ВЫБОР 
			|		КОГДА СУММА(ОтработанноеВремя.НормаДнейПоПятидневке) >= МАКСИМУМ(ДанныеНормыВремени.Норма) / 2
			|			ТОГДА ИСТИНА 
			|		ИНАЧЕ ЛОЖЬ 
			|	КОНЕЦ КАК ПредоставлятьВычет
			|ИЗ
			|	" + ПериодыТекст + " КАК Периоды
			|	
			|	ЛЕВОЕ СОЕДИНЕНИЕ (
			|			ВЫБРАТЬ
			|  			 	ОтработанноеВремя.ПериодДействия,
			|				ОтработанноеВремя.ФизЛицо,
			|				ОтработанноеВремя.НормаДнейПоПятидневке КАК НормаДнейПоПятидневке
			|			ИЗ
			|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОтработанноеВремя
			|			ГДЕ
			|				ОтработанноеВремя.Организация = &парамГоловнаяОрганизация
			|				И ОтработанноеВремя.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|				И ОтработанноеВремя.ВидРасчета.ЗачетОтработанногоВремениДляВычета
			|				И ОтработанноеВремя.ПериодДействия МЕЖДУ &парамНачалоГода И ДОБАВИТЬКДАТЕ(&парамПериодРегистрации, СЕКУНДА, -1)
			|				И (ОтработанноеВремя.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство)
			|		
			|			ОБЪЕДИНИТЬ ВСЕ
			|		
			|	    	ВЫБРАТЬ
			|				ОтработанноеВремя.ПериодДействия,
			|				ОтработанноеВремя.ФизЛицо,
			|				ОтработанноеВремя.ПроизводственныйКалендарьПятидневкаФактическийПериодДействия КАК НормаДнейПоПятидневке
			|			ИЗ
			|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(
			|						Организация = &парамГоловнаяОрганизация 
			|						И ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|						И ВидРасчета.ЗачетОтработанногоВремениДляВычета
			|						И ПериодДействия = &парамПериодРегистрации
			|						И Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство) КАК ОтработанноеВремя) КАК ОтработанноеВремя
			|		ПО Периоды.ФизЛицо = ОтработанноеВремя.ФизЛицо
			|			И Периоды.Период = ОтработанноеВремя.ПериодДействия
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|								НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период,
			|								СУММА(РегламентированныйПроизводственныйКалендарь.Пятидневка) КАК Норма
			|							ИЗ
			|								РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
			|							ГДЕ
			|								РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
			|							СГРУППИРОВАТЬ ПО
			|								НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ)) КАК ДанныеНормыВремени
			|			ПО Периоды.Период = ДанныеНормыВремени.Период
			|
			|СГРУППИРОВАТЬ ПО
			|	Периоды.Период,
			|	Периоды.ФизЛицо
			|";

			// ПрименяемыеВычетыТекст
			//	Поля:
			//		Физлицо
			//		Период
			//		НалоговыйВычетЛичный
			//		НалоговыйВычетИждивенцев
			//		НалоговыйВычетПредыдущегоМестаРаботы
			//
			//	Описание:
			//	Выбирает по всем периодам года налоговын вычеты на которые имеет право физлицо
			ПрименяемыеВычетыТекст = 
			"ВЫБРАТЬ
			|	ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо КАК Физлицо,
			|	ИПННалоговыеВычетыФизлицСрезПоследних.Период КАК Период,
			|	ВЫБОР КОГДА (ПрименениеВычетов.Физлицо) ЕСТЬ NULL ИЛИ ПрименениеВычетов.ФизЛицо В (&парамФизЛицаНеРезиденты) ИЛИ НЕ (ОтработанноеВремя.ПредоставлятьВычет)  ТОГДА 0 ИНАЧЕ ВЫБОР КОГДА (РасчетныеПоказатели.РазмерМРП) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ ВЫБОР КОГДА ВычетыФизлиц.ПредоставлятьЛичныйВычет ТОГДА РасчетныеПоказатели.РазмерМРП ИНАЧЕ 0 КОНЕЦ КОНЕЦ КОНЕЦ КАК НалоговыйВычетЛичный,
			|	ВЫБОР КОГДА (ПрименениеВычетов.Физлицо) ЕСТЬ NULL ИЛИ ПрименениеВычетов.ФизЛицо В (&парамФизЛицаНеРезиденты) ИЛИ НЕ (ОтработанноеВремя.ПредоставлятьВычет)  ТОГДА 0 ИНАЧЕ ВЫБОР КОГДА (РасчетныеПоказатели.РазмерМРП) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ РасчетныеПоказатели.РазмерМРП КОНЕЦ * ВЫБОР КОГДА (ВычетыФизлиц.КоличествоИждивенцев) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ ВычетыФизлиц.КоличествоИждивенцев КОНЕЦ КОНЕЦ КАК НалоговыйВычетИждивенцев,
			|	ВЫБОР КОГДА СведенияПредыдущегоМестаРаботы.ПримененныйВычет ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ СведенияПредыдущегоМестаРаботы.ПримененныйВычет КОНЕЦ КАК НалоговыйВычетПредыдущегоМестаРаботы
			|ИЗ
			|	(ВЫБРАТЬ
			|		МАКСИМУМ(ВычетыФизлиц.Период) КАК ПериодСреза,
			|		Периоды.Физлицо КАК Физлицо,
			|		Периоды.Период КАК Период
			|	ИЗ
			|		" + ПериодыТекст + " КАК Периоды
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
			|			ПО ВычетыФизлиц.Период <= Периоды.Период И ВычетыФизлиц.Физлицо = Периоды.Физлицо
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Периоды.Физлицо,
			|		Периоды.Период) КАК ИПННалоговыеВычетыФизлицСрезПоследних
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц КАК ВычетыФизлиц
			|			ПО ВычетыФизлиц.Период = ИПННалоговыеВычетыФизлицСрезПоследних.ПериодСреза И ВычетыФизлиц.Физлицо = ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо
			|			ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|			ПО РасчетныеПоказатели.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период
			|			ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименениеВычетовВОрганизацииТекст + ") КАК ПрименениеВычетов
			|			ПО ПрименениеВычетов.Физлицо = ИПННалоговыеВычетыФизлицСрезПоследних.Физлицо И ПрименениеВычетов.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботы
			|			ПО СведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик И СведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода = ИПННалоговыеВычетыФизлицСрезПоследних.Период И СведенияПредыдущегоМестаРаботы.ФизЛицо = ИПННалоговыеВычетыФизлицСрезПоследних.ФизЛицо
			|			ЛЕВОЕ СОЕДИНЕНИЕ (" + ОтработанноеВремяТекст + ") КАК ОтработанноеВремя
			|			ПО ОтработанноеВремя.Период = ИПННалоговыеВычетыФизлицСрезПоследних.Период И ОтработанноеВремя.ФизЛицо = ИПННалоговыеВычетыФизлицСрезПоследних.ФизЛицо";

			// ПрименяемыеВычетыЗаГод
			//	Поля:
			//		Физлицо
			//		Период
			//		ВычетЛичныйЗаГод
			//		ВычетИждивенцевЗаГод
			//		ВычетПредыдущегоМестаРаботыЗаГод
			//		НалоговыйВычетЗаГодДляЛьготыУчастникаВОВ
			//		НалоговыйВычетЗаГодДляЛьготыПоИнвалидности
			//
			//	Описание:
			//	Выбирает по всем периодам года применяемые налоговые вычеты нарастающим итогом за год
			//
			 ПрименяемыеВычетыЗаГодТекст = 
			"ВЫБРАТЬ
			|	ВычетыПоПериодам.Физлицо КАК Физлицо,
			|	Периоды.Период КАК Период,
			|	СУММА(ВычетыПоПериодам.НалоговыйВычетЛичный) + СУММА(ВычетыПоПериодам.НалоговыйВычетИждивенцев) + СУММА(ВычетыПоПериодам.НалоговыйВычетПредыдущегоМестаРаботы) КАК НалоговыйВычетЗаГод,
			|	СУММА(ВЫБОР
			|			КОГДА ПрименяемыеЛьготы.ПрименяетсяЛьготаУчастникаВОВ
			|					ИЛИ ПрименяемыеЛьготы.ПрименяетсяЛьготаПоИнвалидности
			|				ТОГДА ВычетыПоПериодам.НалоговыйВычетЛичный + ВычетыПоПериодам.НалоговыйВычетИждивенцев + ВычетыПоПериодам.НалоговыйВычетПредыдущегоМестаРаботы
			|			ИНАЧЕ 0
			|		  КОНЕЦ) КАК ЛьготируемыйНалоговыйВычетЗаГод
			|
			|ИЗ
			|	" + ДатыПериодовГодаТекст + " КАК Периоды
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименяемыеВычетыТекст + ") КАК ВычетыПоПериодам
			|		ПО ВычетыПоПериодам.Период <= Периоды.Период 
			|			И ВычетыПоПериодам.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, Год) 
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименяемыеЛьготыТекст + ") КАК ПрименяемыеЛьготы
			|			ПО ВычетыПоПериодам.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
			|				И ВычетыПоПериодам.Период = ПрименяемыеЛьготы.Период
			|
			|СГРУППИРОВАТЬ ПО
			|	ВычетыПоПериодам.Физлицо,
			|	Периоды.Период";

			// ПериодыНачалаНалоговогоГодаФизЛиц
			//	Поля:
			//		Физлицо
			//		Период
			//		МесяцНачалаНалоговогоГода
			//
			//	Описание:
			//	Получает по всем периодам месяц начала налогового года для физлиц
			ПериодыНачалаНалоговогоГодаФизЛицТекст = 
			"ВЫБРАТЬ
			|	Периоды.ФизЛицо,
			|	Периоды.Период,
			|	МИНИМУМ(ПериодыНачалаНалоговогоГода.НачалоНалоговогоГода) КАК МесяцНачалаНалоговогоГода
			|
			|ИЗ
			|	" + ПериодыТекст + " КАК Периоды
			|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|				МИНИМУМ(СведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода) КАК НачалоНалоговогоГода,
			|				НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, ГОД) КАК НачалоКалендарногоГода,
			|				СведенияПредыдущегоМестаРаботы.ФизЛицо КАК ФизЛицо
			|			ИЗ
			|				РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботы
			|			ГДЕ
			|				СведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик 
			|				И СведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
			|				И СведенияПредыдущегоМестаРаботы.Физлицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|
			|			СГРУППИРОВАТЬ ПО
			|				НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода, ГОД),
			|				СведенияПредыдущегоМестаРаботы.ФизЛицо
			|
			|			ОБЪЕДИНИТЬ ВСЕ
			|
			|			ВЫБРАТЬ
			|				МАКСИМУМ(РаботникиОрганизацийСрезПоследних.Период) КАК НачалоНалоговогоГода,
			|				&парамНачалоГода КАК НачалоКалендарногоГода,
			|				РаботникиОрганизацийСрезПоследних.Сотрудник.ФизЛицо КАК ФизЛицо
			|			ИЗ
			|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(
			|						&парамНачалоГода,
			|						Организация = &парамГоловнаяОрганизация
			|						И Сотрудник.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)) КАК РаботникиОрганизацийСрезПоследних
			|			ГДЕ
			|				РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния <> &парамУволен
			|				И РаботникиОрганизацийСрезПоследних.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
			|
			|			СГРУППИРОВАТЬ ПО
			|				РаботникиОрганизацийСрезПоследних.Сотрудник.ФизЛицо
			|
			|			ОБЪЕДИНИТЬ ВСЕ
			|
			|			ВЫБРАТЬ
			|				МИНИМУМ(РаботникиОрганизаций.Период) КАК НачалоНалоговогоГода,
			|				НАЧАЛОПЕРИОДА(РаботникиОрганизаций.Период, ГОД) КАК НачалоКалендарногоГода,
			|				РаботникиОрганизаций.Сотрудник.ФизЛицо КАК ФизЛицо
			|			ИЗ
			|				РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
			|			ГДЕ
			|				РаботникиОрганизаций.Сотрудник.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|				И РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация
			|				И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
			|				И РаботникиОрганизаций.Период МЕЖДУ &парамНачалоГода И &парамКонецМесяцаНалоговогоПериода
			|				И РаботникиОрганизаций.ПричинаИзмененияСостояния = &парамПринят
			|
			|			СГРУППИРОВАТЬ ПО
			|				НАЧАЛОПЕРИОДА(РаботникиОрганизаций.Период, ГОД),
			|				РаботникиОрганизаций.Сотрудник.ФизЛицо
			|				
			|	) КАК ПериодыНачалаНалоговогоГода
			|		ПО Периоды.ФизЛицо = ПериодыНачалаНалоговогоГода.ФизЛицо
			|			И Периоды.Период МЕЖДУ ПериодыНачалаНалоговогоГода.НачалоКалендарногоГода И КОНЕЦПЕРИОДА(ПериодыНачалаНалоговогоГода.НачалоКалендарногоГода, ГОД)
			|			 И Периоды.Период >= НАЧАЛОПЕРИОДА(ПериодыНачалаНалоговогоГода.НачалоНалоговогоГода, МЕСЯЦ)
			|
			|
			|СГРУППИРОВАТЬ ПО
			|	Периоды.ФизЛицо,
			|	Периоды.Период
			|";

			ТипЗначенияКоэффициентаПересчетаТекст = "ЧИСЛО(10, 2)";

			// ПрименяемыйКоэффициентПересчета
			//	Поля:
			//		Физлицо
			//		Период
			//		ЛьготаПоДоходу
			//
			//	Описание:
			//	Выбирает по всем периодам года льготы на которые имеет право физлицо
			ПрименяемыйКоэффициентПересчетаТекст = 
			"ВЫБРАТЬ
			|	Периоды.Период,
			|	Периоды.ФизЛицо,
			|	ВЫБОР 
			|		КОГДА Периоды.МесяцНачалаНалоговогоГода ЕСТЬ NULL 
			|			ТОГДА 1 
			|		ИНАЧЕ ВЫБОР 
			|				КОГДА НЕ(РаботникиОрганизаций.Сотрудник ЕСТЬ NULL)
			|						И РаботникиОрганизаций.ПричинаИзмененияСостояния <> &парамУволен
			|					ТОГДА ВЫБОР 
			|							КОГДА Периоды.МесяцНачалаНалоговогоГода <= НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) 
			|								ТОГДА 12 / МЕСЯЦ(Периоды.Период) 
			|							ИНАЧЕ (13 - МЕСЯЦ(Периоды.МесяцНачалаНалоговогоГода)) / (МЕСЯЦ(Периоды.Период) - МЕСЯЦ(Периоды.МесяцНачалаНалоговогоГода) + 1) 
			|						  КОНЕЦ 
			|				ИНАЧЕ 1 
			|			  КОНЕЦ 
			|	КОНЕЦ КАК КоэффициентПересчета,
			|	РаботникиОрганизаций.ПричинаИзмененияСостояния,
			|	РаботникиОрганизаций.Период КАК ДатаПоследнегоДвижения
			|ИЗ
			|	(" + ПериодыНачалаНалоговогоГодаФизЛицТекст + ") КАК Периоды
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|				Периоды.Период,
			|				РаботникиОрганизаций.Сотрудник.ФизЛицо КАК ФизЛицо,
			|				МАКСИМУМ(ВЫБОР
			|							КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = &парамУволен 
			|								ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1)
			|							ИНАЧЕ РаботникиОрганизаций.Период
			|						 КОНЕЦ) КАК ДатаПоследнегоДвижения
			|       	ИЗ 
			|				" + ДатыПериодовГодаТекст + " КАК Периоды
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
			|					ПО РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация
			|						И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
			|						И ВЫБОР
			|							КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = &парамУволен 
			|								ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1)
			|							ИНАЧЕ РаботникиОрганизаций.Период
			|						  КОНЕЦ <= КОНЕЦПЕРИОДА(Периоды.Период, МЕСЯЦ)
			|
			|			СГРУППИРОВАТЬ ПО
			|				Периоды.Период,
			|				РаботникиОрганизаций.Сотрудник.ФизЛицо) КАК ДатыПоследнихДвижений
			|		ПО Периоды.ФизЛицо = ДатыПоследнихДвижений.ФизЛицо
			|			И Периоды.Период = ДатыПоследнихДвижений.Период
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
			|		ПО ДатыПоследнихДвижений.ФизЛицо = РаботникиОрганизаций.Сотрудник.ФизЛицо
			|			И РаботникиОрганизаций.Организация = &парамГоловнаяОрганизация
			|			И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
			|			И ДатыПоследнихДвижений.ДатаПоследнегоДвижения = ВЫБОР
			|																КОГДА РаботникиОрганизаций.ПричинаИзмененияСостояния = &парамУволен
			|																	ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1)
			|																ИНАЧЕ РаботникиОрганизаций.Период
			|			 								 				 КОНЕЦ 
			|";

			// облагаемый доход с начала года
			ПолеОблагаемыйДоходЗаГод = 
			"ВЫБОР 
			|	КОГДА (ДоходыЗаГод.ОблагаемыйДоходЗаГод) ЕСТЬ NULL  
			|	ТОГДА 0 
			|	ИНАЧЕ ДоходыЗаГод.ОблагаемыйДоходЗаГод 
			|КОНЕЦ";

			// право на налоговый вычет за год
			ПолеНалоговыйВычетЗаГод = 
			"ВЫБОР 
			|	КОГДА (ПрименяемыеВычетыЗаГод.НалоговыйВычетЗаГод) ЕСТЬ NULL  
			|	ТОГДА 0 
			|	ИНАЧЕ ПрименяемыеВычетыЗаГод.НалоговыйВычетЗаГод 
			|КОНЕЦ";

			// право на льготу за год
			ПолеПрименяемаяЛьготаЗаГод = 
			"ВЫБОР 
			|	КОГДА (ДоходыЗаГод.ЛьготаПоДоходу) ЕСТЬ NULL  
			|	ТОГДА 0 
			|	ИНАЧЕ ДоходыЗаГод.ЛьготаПоДоходу 
			|КОНЕЦ";

			// сумма исчисленных пенсионных взносов за год
			ПолеПенсионныеВзносыЗаГод = 
			"ВЫБОР 
			|	КОГДА (ОПВРасчетыСФондамиЗаГод.ИсчисленныеВзносыЗаГод) ЕСТЬ NULL
			|	ТОГДА 0 
			|	ИНАЧЕ ОПВРасчетыСФондамиЗаГод.ИсчисленныеВзносыЗаГод 
			|КОНЕЦ";
			
			// облагаемая база по ИПН
			ПолеБазаДляИсчисленияИПН = 
			"ВЫБОР
			|	КОГДА " + ПолеОблагаемыйДоходЗаГод + " - " + ПолеНалоговыйВычетЗаГод + " - " + ПолеПенсионныеВзносыЗаГод + " > 0
			|	ТОГДА " + ПолеОблагаемыйДоходЗаГод + " - " + ПолеНалоговыйВычетЗаГод + " - " + ПолеПенсионныеВзносыЗаГод + "
			|	ИНАЧЕ 0
			|КОНЕЦ";

			// льготируемый облагаемый доход с начала года
			ПолеЛьготируемыйОблагаемыйДоходЗаГод = "ЕСТЬNULL(ДоходыЗаГод.ЛьготируемыйОблагаемыйДоходЗаГод, 0)";

			// налоговый вычет за год, учитываемый при предоставлении льготы
			ПолеЛьготируемыйНалоговыйВычетЗаГод = "ЕСТЬNULL(ПрименяемыеВычетыЗаГод.ЛьготируемыйНалоговыйВычетЗаГод, 0)";

			// сумма исчисленных пенсионных взносов за год, учитываемая при предоставлении льготы
			ПолеЛьготируемыеПенсионныеВзносыЗаГод = "ЕСТЬNULL(ОПВРасчетыСФондамиЗаГод.ЛьготируемыеИсчисленныеВзносыЗаГод, 0)";
			
			// льготируемая облагаемая база по ИПН
			ПолеЛьготируемаяБазаДляИсчисленияИПН = 
			"ВЫБОР
			|	КОГДА " + ПолеЛьготируемыйОблагаемыйДоходЗаГод + " - " + ПолеЛьготируемыйНалоговыйВычетЗаГод + " - " + ПолеЛьготируемыеПенсионныеВзносыЗаГод + " > 0
			|	ТОГДА " + ПолеЛьготируемыйОблагаемыйДоходЗаГод + " - " + ПолеЛьготируемыйНалоговыйВычетЗаГод + " - " + ПолеЛьготируемыеПенсионныеВзносыЗаГод + "
			|	ИНАЧЕ 0
			|КОНЕЦ";
			
			// примененная льгота за год
			ПолеПримененнаяЛьгота = 
			"ВЫБОР
			|	КОГДА " + ПолеПрименяемаяЛьготаЗаГод + " > " + ПолеЛьготируемаяБазаДляИсчисленияИПН + " 
			|		ТОГДА " + ПолеЛьготируемаяБазаДляИсчисленияИПН + " 
			|	ИНАЧЕ ВЫБОР 
			|			КОГДА " + ПолеЛьготируемаяБазаДляИсчисленияИПН + " > 0 
			|				ТОГДА " + ПолеПрименяемаяЛьготаЗаГод + " 
			|			ИНАЧЕ 0 
			|		  КОНЕЦ 
			|КОНЕЦ";

			// коэффициент пересчета
			ПолеКоэффициентПересчета = 
			"(ВЫРАЗИТЬ(ВЫБОР 
			|				КОГДА (ПрименяемыйКоэффициентПересчета.КоэффициентПересчета) ЕСТЬ NULL 
			|				ТОГДА 1 
			|				ИНАЧЕ ПрименяемыйКоэффициентПересчета.КоэффициентПересчета 
			|			КОНЕЦ КАК " + ТипЗначенияКоэффициентаПересчетаТекст + "))";
			
			// среднемесячный доход за квартал
			ПолеСреднемесячныйДоходЗаКвартал =
			"ВЫБОР
			|	КОГДА (ДоходыЗаКвартал.РегистрировалсяДоходЗаПериод) ЕСТЬ NULL
			|	ТОГДА 0
			|	ИНАЧЕ ДоходыЗаКвартал.ПолученныйДоходЗаКвартал / ДоходыЗаКвартал.РегистрировалсяДоходЗаПериод
			|КОНЕЦ";

			// среднемесячный размер минимальной заработной платы
			ПолеСреднемесячныйРазмерМЗПЗаКвартал =
			"ВЫБОР
			|	КОГДА (ДоходыЗаКвартал.РегистрировалсяДоходЗаПериод) ЕСТЬ NULL
			|	ТОГДА 0
			|	ИНАЧЕ ДоходыЗаКвартал.РазмерМЗПЗаКвартал / ДоходыЗаКвартал.РегистрировалсяДоходЗаПериод
			|КОНЕЦ";
			
			// облагаемая сумма 
			ПолеОблагаемаяСумма = 
			"(ВЫБОР
			|		КОГДА МАКСИМУМ(БазаДляИсчисленияИПН.ПримененнаяЛьгота) > СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОблагаемаяСумма ИНАЧЕ 0 КОНЕЦ)
			|			ТОГДА 0
			|		ИНАЧЕ СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОблагаемаяСумма ИНАЧЕ 0 КОНЕЦ) - МАКСИМУМ(БазаДляИсчисленияИПН.ПримененнаяЛьгота)
			|КОНЕЦ) * " + ПолеКоэффициентПересчета;
			
			// применение ставки "0"
			ПолеПрименятьНулевуюСтавку = 
			"ВЫБОР 
			|	КОГДА " + ПолеОблагаемаяСумма + " <= ДоходыЗаКвартал.РазмерМЗП * 12 И " + ПолеСреднемесячныйДоходЗаКвартал + " <= " + ПолеСреднемесячныйРазмерМЗПЗаКвартал + "
			|	ТОГДА 1
			|	ИНАЧЕ 0
			|КОНЕЦ";
			
			// БазаДляИсчисленияИПН
			//	Поля:
			//		Период
			//		ФизЛицо
			
			// Здесь рассчитываем примененную льготу для каждого месяца периода, облагаемую базу для расчета необходимости применения нулевой ставки
			БазаДляИсчисленияИПНТекст = 
			"ВЫБРАТЬ 
			|	ДоходыЗаГод.Период,
			|	ДоходыЗаГод.ФизЛицо,
			|	" + ПолеБазаДляИсчисленияИПН + " КАК ОблагаемаяСумма,
			|	ДоходыЗаГод.ОблагаемыйДоходЗаГод,
			|	" + ПолеЛьготируемыйОблагаемыйДоходЗаГод + " - " + ПолеЛьготируемыйНалоговыйВычетЗаГод + " - " + ПолеЛьготируемыеПенсионныеВзносыЗаГод + " КАК ЛьготируемаяБазаДляИсчисленияИПН,
			|	ДоходыЗаГод.ОблагаемыйДоходЗаМесяц,
			|	" + ПолеПримененнаяЛьгота + " КАК ПримененнаяЛьгота,
			|	ЕСТЬNULL(ПрименяемыеВычетыЗаГод.НалоговыйВычетЗаГод, 0) КАК НалоговыйВычетЗаГод,
			|	ЕСТЬNULL(ОПВРасчетыСФондамиЗаГод.ИсчисленныеВзносыЗаГод, 0) КАК ИсчисленныеВзносыЗаГод,
			|	ЕСТЬNULL(ДоходыЗаГод.ЛьготаПоДоходу, 0) КАК ЛьготаПоДоходу
			|ИЗ
			|	(" + ДоходыЗаГодТекст + ") КАК ДоходыЗаГод
			|		ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименяемыеВычетыЗаГодТекст + ") КАК ПрименяемыеВычетыЗаГод
			|		ПО ДоходыЗаГод.Период = ПрименяемыеВычетыЗаГод.Период И ДоходыЗаГод.ФизЛицо = ПрименяемыеВычетыЗаГод.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ (" + ОПВРасчетыСФондамиЗаГодТекст + ") КАК ОПВРасчетыСФондамиЗаГод
			|		ПО ДоходыЗаГод.Период = ОПВРасчетыСФондамиЗаГод.Период И ДоходыЗаГод.ФизЛицо = ОПВРасчетыСФондамиЗаГод.ФизЛицо
			|";
			
			// БазаДляИсчисленияИПН
			//	Поля:
			//		Период
			//		ФизЛицо
			
			// Здесь определяем максимальную сумму предоставленной льготы с начала налогового года, кроме текущего месяца
			БазаДляИсчисленияИПНТекст = 
			"ВЫБРАТЬ 
			|	Периоды.Период,
			|	БазаДляИсчисленияИПН.ФизЛицо,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОблагаемыйДоходЗаГод ИНАЧЕ 0 КОНЕЦ) КАК ОблагаемыйДоходЗаГод,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ЛьготируемаяБазаДляИсчисленияИПН ИНАЧЕ 0 КОНЕЦ) КАК ЛьготируемаяБазаДляИсчисленияИПН,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ОблагаемыйДоходЗаМесяц ИНАЧЕ 0 КОНЕЦ) КАК ОблагаемыйДоходЗаМесяц,
			|	МАКСИМУМ(ВЫБОР КОГДА БазаДляИсчисленияИПН.Период < Периоды.Период ТОГДА БазаДляИсчисленияИПН.ПримененнаяЛьгота ИНАЧЕ 0 КОНЕЦ) КАК ПримененнаяЛьгота,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.НалоговыйВычетЗаГод ИНАЧЕ 0 КОНЕЦ) КАК НалоговыйВычетЗаГод,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ИсчисленныеВзносыЗаГод ИНАЧЕ 0 КОНЕЦ) КАК ИсчисленныеВзносыЗаГод,
			|	СУММА(ВЫБОР КОГДА Периоды.Период = БазаДляИсчисленияИПН.Период ТОГДА БазаДляИсчисленияИПН.ЛьготаПоДоходу ИНАЧЕ 0 КОНЕЦ) КАК ЛьготаПоДоходу,
			|	" + ПолеПрименятьНулевуюСтавку + " КАК ПрименятьНулевуюСтавку,
			|	" + ПолеКоэффициентПересчета + " КАК КоэффициентПересчета,
			|	" + ПолеСреднемесячныйРазмерМЗПЗаКвартал + " КАК СреднемесячныйРазмерМЗПЗаКвартал,
			|	ЕСТЬNULL(ДоходыЗаКвартал.ПолученныйДоходЗаКвартал, 0) КАК ПолученныйДоходЗаКвартал,
			|	ЕСТЬNULL(ДоходыЗаКвартал.РегистрировалсяДоходЗаПериод, 0) КАК РегистрировалсяДоходЗаПериод
			|	
			|ИЗ
			|	" + ДатыПериодовГодаТекст + " КАК Периоды
			|	
			|	ЛЕВОЕ СОЕДИНЕНИЕ (" + БазаДляИсчисленияИПНТекст + ") КАК БазаДляИсчисленияИПН
			|		ПО БазаДляИсчисленияИПН.Период >= НАЧАЛОПЕРИОДА(Периоды.Период, ГОД)
			|			И БазаДляИсчисленияИПН.Период <= Периоды.Период
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ПрименяемыйКоэффициентПересчетаТекст + ") КАК ПрименяемыйКоэффициентПересчета
			|		ПО Периоды.Период = ПрименяемыйКоэффициентПересчета.Период
			|			И БазаДляИсчисленияИПН.ФизЛицо = ПрименяемыйКоэффициентПересчета.ФизЛицо
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ДоходыЗаКварталТекст + ") КАК ДоходыЗаКвартал
			|		ПО Периоды.Период = ДоходыЗаКвартал.Период
			|			И БазаДляИсчисленияИПН.ФизЛицо = ДоходыЗаКвартал.ФизЛицо
			|
			|СГРУППИРОВАТЬ ПО
			|	Периоды.Период,
			|	БазаДляИсчисленияИПН.ФизЛицо,
			|	ПрименяемыйКоэффициентПересчета.КоэффициентПересчета,
			|	ПрименяемыйКоэффициентПересчета.ПричинаИзмененияСостояния,
			|	ПрименяемыйКоэффициентПересчета.ДатаПоследнегоДвижения,
			|	ДоходыЗаКвартал.РазмерМЗП,
			|	ДоходыЗаКвартал.РазмерМЗПЗаКвартал,
			|	ДоходыЗаКвартал.ПолученныйДоходЗаКвартал,
			|	ДоходыЗаКвартал.РегистрировалсяДоходЗаПериод
			|";	
			
			РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
			|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|						БазаДляИсчисленияИПН.ФизЛицо,
			|						СУММА(ВЫБОР 
			|								КОГДА БазаДляИсчисленияИПН.Период = &парамПериодРегистрации И БазаДляИсчисленияИПН.ЛьготаПоДоходу > 0 
			|									ТОГДА 1
			|								ИНАЧЕ 0
			|							  КОНЕЦ) КАК ПризнакПримененияЛьготы,
			|						СУММА(ВЫБОР
			|								КОГДА БазаДляИсчисленияИПН.Период = &парамПериодРегистрации
			|									ТОГДА БазаДляИсчисленияИПН.ОблагаемыйДоходЗаГод 
			|								ИНАЧЕ 0
			|							  КОНЕЦ) КАК ОблагаемыйДоходЗаГод,
			|						СУММА(ВЫБОР 
			|								КОГДА БазаДляИсчисленияИПН.Период = &парамПериодРегистрации
			|									ТОГДА БазаДляИсчисленияИПН.ЛьготируемаяБазаДляИсчисленияИПН
			|								ИНАЧЕ 0
			|							 КОНЕЦ) КАК ЛьготируемаяБазаДляИсчисленияИПН,
			|						СУММА(ВЫБОР
			|								КОГДА БазаДляИсчисленияИПН.Период = &парамПериодРегистрации
			|									ТОГДА БазаДляИсчисленияИПН.ОблагаемыйДоходЗаМесяц 
			|								ИНАЧЕ 0
			|							 КОНЕЦ) КАК ОблагаемыйДоходЗаМесяц,
			|						СУММА(ВЫБОР
			|								КОГДА БазаДляИсчисленияИПН.Период = &парамПериодРегистрации
			|									ТОГДА БазаДляИсчисленияИПН.НалоговыйВычетЗаГод 
			|								ИНАЧЕ 0
			|							 КОНЕЦ) КАК НалоговыйВычетЗаГод,
			|						СУММА(ВЫБОР
			|								КОГДА БазаДляИсчисленияИПН.Период = &парамПериодРегистрации
			|									ТОГДА БазаДляИсчисленияИПН.ИсчисленныеВзносыЗаГод 
			|								ИНАЧЕ 0
			|							 КОНЕЦ) КАК ИсчисленныеВзносыЗаГод,
			|						СУММА(ВЫБОР
			|								КОГДА БазаДляИсчисленияИПН.Период <> &парамПериодРегистрации
			|									ТОГДА 0
			|								КОГДА БазаДляИсчисленияИПН.ПримененнаяЛьгота > БазаДляИсчисленияИПН.ЛьготаПоДоходу 
			|									ТОГДА БазаДляИсчисленияИПН.ПримененнаяЛьгота
			|								ИНАЧЕ БазаДляИсчисленияИПН.ЛьготаПоДоходу
			|						  	 КОНЕЦ) КАК ПрименяемаяЛьготаЗаГод,
			|						СУММА(ВЫБОР
			|								КОГДА БазаДляИсчисленияИПН.Период = &парамПериодРегистрации
			|									ТОГДА БазаДляИсчисленияИПН.КоэффициентПересчета 
			|								ИНАЧЕ 0
			|							 КОНЕЦ) КАК КоэффициентПересчета,
			|						СУММА(ВЫБОР
			|								КОГДА БазаДляИсчисленияИПН.Период = &парамПериодРегистрации
			|									ТОГДА БазаДляИсчисленияИПН.СреднемесячныйРазмерМЗПЗаКвартал 
			|								ИНАЧЕ 0
			|							 КОНЕЦ) КАК СреднемесячныйРазмерМЗПЗаКвартал,
			|						СУММА(ВЫБОР
			|								КОГДА БазаДляИсчисленияИПН.Период = &парамПериодРегистрации
			|									ТОГДА БазаДляИсчисленияИПН.ПолученныйДоходЗаКвартал 
			|								ИНАЧЕ 0
			|							 КОНЕЦ) КАК ПолученныйДоходЗаКвартал,
			|						СУММА(ВЫБОР
			|								КОГДА БазаДляИсчисленияИПН.Период = &парамПериодРегистрации
			|									ТОГДА БазаДляИсчисленияИПН.РегистрировалсяДоходЗаПериод 
			|								ИНАЧЕ 0
			|							 КОНЕЦ) КАК РегистрировалсяДоходЗаКвартал,
			|						СУММА(ВЫБОР
			|								КОГДА МЕСЯЦ(БазаДляИсчисленияИПН.Период) = 3
			|									ТОГДА БазаДляИсчисленияИПН.ПрименятьНулевуюСтавку
			|								ИНАЧЕ 0
			|							 КОНЕЦ) КАК ПрименятьНулевуюСтавкуКв1,
			|						СУММА(ВЫБОР
			|								КОГДА МЕСЯЦ(БазаДляИсчисленияИПН.Период) = 6
			|									ТОГДА БазаДляИсчисленияИПН.ПрименятьНулевуюСтавку
			|								ИНАЧЕ 0
			|							 КОНЕЦ) КАК ПрименятьНулевуюСтавкуКв2,
			|						СУММА(ВЫБОР
			|								КОГДА МЕСЯЦ(БазаДляИсчисленияИПН.Период) = 9
			|									ТОГДА БазаДляИсчисленияИПН.ПрименятьНулевуюСтавку
			|								ИНАЧЕ 0
			|							 КОНЕЦ) КАК ПрименятьНулевуюСтавкуКв3,
			|						СУММА(ВЫБОР
			|								КОГДА МЕСЯЦ(БазаДляИсчисленияИПН.Период) = 12
			|									ТОГДА БазаДляИсчисленияИПН.ПрименятьНулевуюСтавку
			|								ИНАЧЕ 0
			|							 КОНЕЦ) КАК ПрименятьНулевуюСтавкуКв4
			|			
			|				  ИЗ
			|				  	(" + БазаДляИсчисленияИПНТекст + ") КАК БазаДляИсчисленияИПН
			|
			|
			|				  СГРУППИРОВАТЬ ПО
			|					БазаДляИсчисленияИПН.ФизЛицо) КАК РасчетОтОбратногоДанныеИПН
			|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеИПН.ФизЛицо
			|	   И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ (" + ИПНРасчетыСБюджетомЗаГодТекст + ") КАК ИПНРасчетыСБюджетомЗаГод
			|	ПО Основной.ФизЛицо = ИПНРасчетыСБюджетомЗаГод.ФизЛицо
			|	   И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
			|	   И ИПНРасчетыСБюджетомЗаГод.Период = &парамПериодРегистрации
			|
			|// проверять на нулевую ставку надо только работников организации
			|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|						РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
			|						МАКСИМУМ(ВЫБОР
			|									КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &парамУволен
			|										ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
			|									ИНАЧЕ РаботникиОрганизации.Период
			|								КОНЕЦ) КАК Период
			|					ИЗ
			|						РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
			|					ГДЕ
			|						РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
			|						И РаботникиОрганизации.Сотрудник.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
			|						И РаботникиОрганизации.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
			|						И РаботникиОрганизации.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
			|					СГРУППИРОВАТЬ ПО
			|						РаботникиОрганизации.Сотрудник.ФизЛицо) КАК ДатыПоследнихНазначений
			|	ПО Основной.ФизЛицо = ДатыПоследнихНазначений.ФизЛицо
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК СведенияОРаботникахОрганизации
			|	ПО ДатыПоследнихНазначений.ФизЛицо = СведенияОРаботникахОрганизации.Сотрудник.ФизЛицо
			|		И ДатыПоследнихНазначений.Период = ВЫБОР
			|											КОГДА СведенияОРаботникахОрганизации.ПричинаИзмененияСостояния = &парамУволен
			|												ТОГДА ДОБАВИТЬКДАТЕ(СведенияОРаботникахОрганизации.Период, ДЕНЬ, -1)
			| 											ИНАЧЕ СведенияОРаботникахОрганизации.Период
			|										   КОНЕЦ
			|		И СведенияОРаботникахОрганизации.Организация = &парамГоловнаяОрганизация
			|		И СведенияОРаботникахОрганизации.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
			|";
		КонецЕсли;

	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
			
		Запрос.УстановитьПараметр("парамНачало", 	 			  НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("парамКонец", 	 			  КонецМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("парамПриход", 	 			  ВидДвиженияНакопления.Приход);
		Запрос.УстановитьПараметр("парамВидСтроки",  			  Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
		Запрос.УстановитьПараметр("парамВидПлатежа", 			  Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
			
		СписокГруппИнвалидности = Новый СписокЗначений;
		СписокГруппИнвалидности.Добавить("I");
		СписокГруппИнвалидности.Добавить("II");
			
		Запрос.УстановитьПараметр("парамИнвалид", Перечисления.ОтношениеКИнвалидности.Инвалид);
		Запрос.УстановитьПараметр("парамСписокГруппИнвалидности",  СписокГруппИнвалидности);
		Запрос.УстановитьПараметр("парамПустаяДата", '00010101');
			
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		ОблагаемыйДоход
		//
		//	Описание:
		// Выбирает облагаемые взносами доходы за периоды по физлицам
		
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то доходы всегда выбираются только за расчетный месяц. Отдельно выделим прочие доходы, зарегистрированные в обход начислений.
		ДоходыТекст = "
		|ВЫБРАТЬ
		|	ОПВОбороты.ФизЛицо КАК ФизЛицо,
		|	ОПВОбороты.Период КАК Период,
		|	СУММА(ОПВОбороты.СуммаДоходаОборот) -	СУММА(ОПВОбороты.СуммаВычетаОборот) КАК ОблагаемыйДоход,
		|	СУММА(ОПВОбороты.ПрочиеДоходы) КАК ПрочиеДоходы
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОПВСведенияОДоходах.ФизЛицо КАК Физлицо,
		|		НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ) КАК Период,
		|		СУММА(ОПВСведенияОДоходах.СуммаДохода) КАК СуммаДоходаОборот,
		|	 	СУММА(ОПВСведенияОДоходах.СуммаВычета) КАК СуммаВычетаОборот,
		|		ВЫБОР
		|			КОГДА ОПВСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|				ТОГДА СУММА(ОПВСведенияОДоходах.СуммаДохода - ОПВСведенияОДоходах.СуммаВычета)
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ПрочиеДоходы
		|	ИЗ
		|		РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
		|	
		|	ГДЕ
		|		ОПВСведенияОДоходах.Период >= &парамНачало И
		|		ОПВСведенияОДоходах.Период <= &парамКонец И
		|		ОПВСведенияОДоходах.ПериодРегистрации <= &парамКонецПериодаРегистрации И
		|		ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик И
		|		ОПВСведенияОДоходах.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ОПВСведенияОДоходах.ФизЛицо,
		|		НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ),
		|		ОПВСведенияОДоходах.Регистратор) КАК ОПВОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ОПВОбороты.Период,
		|	ОПВОбороты.Физлицо";

		// ОПВРасчетыСФондами
		//	Поля:
		//		ФизЛицо
		//		Период
		//		ИсчисленныеВзносы
		//
		//	Описание:
		//	Выбирает исчисленные пенсионные взносы (приходы по регистру ОПВРасчетыСФондами)
		//  для СписокФизлиц

		// Здесь не берем имеющийся за МесяцНалоговогоПериода в ОПВРасчетыСФондами взнос, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то ранее исчисленные взносы всегда выбираются только за расчетный месяц.
		ОПВРасчетыСФондамиТекст = "
		|ВЫБРАТЬ
		|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
		|	ОПВРасчетыСФондами.МесяцНалоговогоПериода КАК Период,
		|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныйВзнос
		|ИЗ
		|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
		|
		|ГДЕ
		|	ОПВРасчетыСФондами.МесяцНалоговогоПериода >= &парамНачало И
		|	ОПВРасчетыСФондами.МесяцНалоговогоПериода <= &парамКонец И
		|	ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик И
		|	ОПВРасчетыСФондами.Регистратор <> &парамРегистратор И
		|	ОПВРасчетыСФондами.Период <= &парамКонецПериодаРегистрации И
		|	ОПВРасчетыСФондами.ВидДвижения = &парамПриход И 
		|	ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
		|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки И
		|	НЕ(ОПВРасчетыСФондами.МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)) И
		|	ОПВРасчетыСФондами.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОПВРасчетыСФондами.МесяцНалоговогоПериода,
		|	ОПВРасчетыСФондами.ФизЛицо";

		// РазмерОграниченияПоДоходам
		РазмерОграниченияПоДоходамТекст = "
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА РасчетныеПоказатели.РазмерМЗП ЕСТЬ NULL ТОГДА 0 ИНАЧЕ РасчетныеПоказатели.РазмерМЗП * 75 КОНЕЦ КАК ОграничениеПоДоходам
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонец) КАК РасчетныеПоказатели
		|";
		
		Запрос.Текст = РазмерОграниченияПоДоходамТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", Выборка.ОграничениеПоДоходам);
		Иначе
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", 0);
		КонецЕсли;

		// облагаемый доход за месяц
		ПолеОблагаемыйДоходЗаМесяц = 
		"ВЫБОР 
		|	КОГДА (ДоходыЗаМесяц.ОблагаемыйДоход) ЕСТЬ NULL  
		|	ТОГДА 0 
		|	ИНАЧЕ ДоходыЗаМесяц.ОблагаемыйДоход
		|КОНЕЦ";

		// сумма ранее исчисленных взносов
		ПолеРанееВзносыИсчисленные = 
		"ВЫБОР 
		|	КОГДА (ОПВРасчетыСФондами.ИсчисленныйВзнос) ЕСТЬ NULL 
		|	ТОГДА 0 
		|	ИНАЧЕ ОПВРасчетыСФондами.ИсчисленныйВзнос 
		|КОНЕЦ";

		// ФизлицаБезПраваНаПенсию
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц не имеющих право на пенсионное обеспечение
		ФизлицаБезПраваНаПенсиюТекст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ГражданствоФизЛиц.ФизЛицо
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонец, ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)) КАК ГражданствоФизЛиц
		|
		|ГДЕ
		|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)";
			
		Запрос.Текст = ФизлицаБезПраваНаПенсиюТекст;
		Запрос.УстановитьПараметр("парамФизЛицаБезПраваНаПенсию", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо"));
		
		// ФизлицаПенсионеры
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц достигших пенсионный возраст
		ФизлицаПенсионерыТекст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
		|ИЗ
		|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(&парамКонец, ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)) КАК СведенияОПенсионномОбеспеченииФизЛиц
		|
		|ГДЕ
		|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)";
		
		Запрос.Текст = ФизлицаПенсионерыТекст;
		Запрос.УстановитьПараметр("парамФизЛицаПенсионеры", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо"));

		// ФизлицаИнвалидыБессрочно
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц-инвалидов I и II группы, у которых инвалидность установлена бессрочно
		ФизлицаИнвалидыБессрочноТекст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СведенияОбИнвалидностиФизлиц.ФизЛицо
		|ИЗ
		|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамКонец, ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)) КАК СведенияОбИнвалидностиФизлиц
		|
		|ГДЕ
		|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = &парамИнвалид И
		|	СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности В (&парамСписокГруппИнвалидности) И
		|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки = &парамПустаяДата
		|";
		
		Запрос.Текст = ФизлицаИнвалидыБессрочноТекст;
		Запрос.УстановитьПараметр("парамФизЛицаИнвалидыБессрочно", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо"));

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						ДоходыЗаМесяц.ФизЛицо,
		|						" + ПолеОблагаемыйДоходЗаМесяц + " КАК БазаДляИсчисленияОПВ,
		|						" + ПолеРанееВзносыИсчисленные + " КАК РанееВзносыИсчисленные, 
		|						ЕСТЬNULL(ДоходыЗаМесяц.ПрочиеДоходы, 0) КАК ПрочиеДоходы
		|				   ИЗ
		|						(" + ДоходыТекст + ") КАК ДоходыЗаМесяц
		|						ЛЕВОЕ СОЕДИНЕНИЕ ("+ОПВРасчетыСФондамиТекст+") КАК ОПВРасчетыСФондами
		|							ПО ОПВРасчетыСФондами.Период = ДоходыЗаМесяц.Период 
		|							   И ОПВРасчетыСФондами.ФизЛицо = ДоходыЗаМесяц.Физлицо
		|				   ) КАК РасчетОтОбратногоДанныеОПВ
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеОПВ.ФизЛицо
		|	   И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
		|";

	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
	   
	   // для списка погашамых удержаний определим общую сумму
	   Запрос.УстановитьПараметр("парамСпособыРасчетаФиксированнойСуммой", ПроведениеРасчетов.ПолучитьСписокСпособовРасчетовФиксированнойСуммой());
	   Запрос.УстановитьПараметр("парамСпособРасчетаПроцентом", Перечисления.СпособыРасчетаОплатыТруда.Процентом);
	   Запрос.УстановитьПараметр("парамНачало", НачалоМесяца(ПериодРегистрации));
	   Запрос.УстановитьПараметр("парамКонец", КонецМесяца(ПериодРегистрации));
	   Запрос.УстановитьПараметр("парамВалютаРегламентУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	   Запрос.УстановитьПараметр("парамПустаяВалюта", Справочники.Валюты.ПустаяСсылка());
	   Запрос.УстановитьПараметр("парамДействиеПрекратить", Перечисления.ВидыДействияСНачислением.Прекратить);

	   // ПлановыеУдержания
	   // Поля:
	   //		ФизЛицо
	   //		ВидРасчета
	   //		ВидСтроки
	   //		Размер
	   //	Описание:
	   // Выбирает плановые и фактические удержания за период регистрации для физлиц, по которым производится расчет "от обратного".
	   // Фактические удержания берем только те, что введены как разовые, чтобы не задублировать плановые, если уже создан и проведен
	   // документ "Расчет ИПН, ОПВ и удержаний" и заново пересчитывают "от обратного"
		
	   ПлановыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1 КАК Размер,
		|	ПлановыеУдержания.Валюта1 КАК Валюта,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.Период < &парамНачало ТОГДА &парамНачало
		|		ИНАЧЕ ПлановыеУдержания.Период
		|	КОНЕЦ КАК ДатаНачала,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ПлановыеУдержания.ПериодЗавершения <= &парамКонец
		|			ТОГДА КОНЕЦПЕРИОДА(ПлановыеУдержания.ПериодЗавершения, ДЕНЬ)
		|		ИНАЧЕ МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонец))
		|	КОНЕЦ КАК ДатаОкончания
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК СледующиеПлановыеУдержания
		|		ПО ПлановыеУдержания.Организация = СледующиеПлановыеУдержания.Организация
		|			И ПлановыеУдержания.Физлицо = СледующиеПлановыеУдержания.Физлицо
		|			И ПлановыеУдержания.ВидРасчета = СледующиеПлановыеУдержания.ВидРасчета
		|			И ПлановыеУдержания.ДокументОснование = СледующиеПлановыеУдержания.ДокументОснование
		|			И СледующиеПлановыеУдержания.Период > ПлановыеУдержания.Период
		|			И СледующиеПлановыеУдержания.Период <= &парамКонец
		|
		|ГДЕ
		|	ПлановыеУдержания.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
		|	И ПлановыеУдержания.Организация = &парамГоловнаяОрганизация
		|	И ПлановыеУдержания.Период <= &парамКонец
		|	И ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1) 
		|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало ТОГДА ПлановыеУдержания.ДействиеЗавершения
		|		ИНАЧЕ ПлановыеУдержания.Действие
		|	  КОНЕЦ <> &парамДействиеПрекратить
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1,
		|	ПлановыеУдержания.Валюта1,
		|	ПлановыеУдержания.Период,
		|	ПлановыеУдержания.ПериодЗавершения
		|
		|ИМЕЮЩИЕ
		|	МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонец)) >= &парамНачало
		|";
			   
	   // В качестве фактических берем только те, что зарегистрированы как 
	   // разовые, т.к. все остальные будут взяты из плановых
	   ПлановыеИФактическиеУдержанияТекст = "
	   |ВЫБРАТЬ
	   |	Удержания.ФизЛицо,
	   |	Удержания.ВидРасчета,
	   |	Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
	   |	Удержания.ВидРасчета.ВычитатьИзБазыИПН КАК ВычитатьИзБазыИПН,
	   |	Удержания.ВидРасчета.ВычитатьИзБазыОПВ КАК ВычитатьИзБазыОПВ,
	   |	Удержания.ВидСтроки,
	   |	СУММА(Удержания.Результат) КАК Результат,
	   |	СУММА(ВЫБОР
	   |			КОГДА Удержания.Валюта = &парамВалютаРегламентУчета ИЛИ Удержания.Валюта = &парамПустаяВалюта
	   |				ТОГДА Удержания.Размер
	   |			ИНАЧЕ Удержания.Размер * ЕСТЬNULL(Валюты.Курс, 0) / ЕСТЬNULL(Валюты.Кратность, 1)
	   |		  КОНЕЦ) КАК Размер
	   |ИЗ
	   |	(ВЫБРАТЬ
	   |			ПлановыеУдержания.ФизЛицо,
	   |			ПлановыеУдержания.ВидРасчета,
	   |			""ПлановыеУдержания"" КАК ВидСтроки,
	   |			0 КАК Результат,
	   |			ПлановыеУдержания.Размер,
	   |			ПлановыеУдержания.Валюта
	   |		ИЗ
	   |			(" + ПлановыеУдержанияТекст + ") КАК ПлановыеУдержания
	   |
	   |	ОБЪЕДИНИТЬ ВСЕ
	   |	
	   |	ВЫБРАТЬ
	   |		Удержания.ФизЛицо,
	   |		Удержания.ВидРасчета,
	   |		""ФактическиеУдержания"" КАК ВидСтроки,
	   |		Удержания.Результат,
	   |		Удержания.Показатель1 КАК Размер,
	   |		&парамПустаяВалюта КАК Валюта
	   |	ИЗ
	   |		РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
	   |	ГДЕ
	   |		Удержания.Организация = &парамГоловнаяОрганизация 
	   |		И Удержания.ПериодРегистрации = &парамПериодРегистрации
	   |		И Удержания.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)
	   |		И Удержания.Результат <> 0
	   |		И НЕ (Удержания.Регистратор ССЫЛКА Документ.РасчетУдержанийРаботниковОрганизаций)
	   |	) КАК Удержания
	   |
	   |ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты
	   |	ПО Валюты.Период = &парамНачало И Валюты.Валюта = Удержания.Валюта
	   |
	   |СГРУППИРОВАТЬ ПО
		|	Удержания.ФизЛицо,
	   |	Удержания.ВидРасчета,
	   |	Удержания.ВидРасчета.СпособРасчета,
	   |	Удержания.ВидСтроки
	   |";
			   
	   // КомпенсируемыеУдержания
	   // Поля:
	   //		ФизЛицо
	   //		ВидУдержания
	   //		Результат
	   //		Размер
	   //	Описание:
	   // Рассчитывает результат по каждому компенсируемому виду удержаний 
	   КомпенсируемыеУдержанияТекст = "
	   |ВЫБРАТЬ
	   |	Основной.НомерСтроки,
	   |	Основной.ВидРасчета КАК ВидРасчетаОтОбратного,
	   |	ПлановыеИФактическиеУдержания.ФизЛицо,
	   |	ПлановыеИФактическиеУдержания.ВидРасчета КАК ВидУдержания,
	   |	ПлановыеИФактическиеУдержания.ВидСтроки,
	   |
	   |	МАКСИМУМ(ВЫБОР
	   |				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ФактическиеУдержания""
	   |					ТОГДА ПлановыеИФактическиеУдержания.Результат
	   |				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
	   |					  И ПлановыеИФактическиеУдержания.СпособРасчета В (&парамСпособыРасчетаФиксированнойСуммой)
	   |					ТОГДА ПлановыеИФактическиеУдержания.Размер
	   |				ИНАЧЕ 0
	   |			КОНЕЦ) 
	   |	+
	   |	МАКСИМУМ(ВЫБОР
	   |				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
	   |					  И ПлановыеИФактическиеУдержания.СпособРасчета = &парамСпособРасчетаПроцентом
	   |					ТОГДА ПлановыеИФактическиеУдержания.Размер
	   |				ИНАЧЕ 0
	   |			КОНЕЦ) / 100 * 
	   |	СУММА(ЕСТЬNULL(ОсновныеИДополнительныеНачисления.Результат, 0)) КАК СуммаКомпенсируемыхУдержаний,
	   |
	   |	МАКСИМУМ(ВЫБОР 
	   |				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
	   |					  И ПлановыеИФактическиеУдержания.СпособРасчета = &парамСпособРасчетаПроцентом
	   |					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
	   |					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
	   |				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
	   |					ТОГДА ПлановыеИФактическиеУдержания.Размер
	   |				ИНАЧЕ 0
	   |		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
	   |
	   |	МАКСИМУМ(ВЫБОР 
	   |				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
	   |					  И ПлановыеИФактическиеУдержания.СпособРасчета = &парамСпособРасчетаПроцентом
	   |					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
	   |					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
	   |				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
	   |					ТОГДА ПлановыеИФактическиеУдержания.Размер
	   |				ИНАЧЕ 0
	   |		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
	   |
	   |	МАКСИМУМ(ВЫБОР 
	   |				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
	   |					  И ПлановыеИФактическиеУдержания.СпособРасчета = &парамСпособРасчетаПроцентом
	   |					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
	   |					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
	   |				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
	   |					ТОГДА ПлановыеИФактическиеУдержания.Размер
	   |				ИНАЧЕ 0
	   |		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
	   |
	   |	МАКСИМУМ(ВЫБОР 
	   |				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
	   |					  И ПлановыеИФактическиеУдержания.СпособРасчета = &парамСпособРасчетаПроцентом
	   |					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
	   |					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
	   |				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
	   |					ТОГДА ПлановыеИФактическиеУдержания.Размер
	   |				ИНАЧЕ 0
	   |		  	 КОНЕЦ) КАК ПроцентПрочихКомпенсируемыхУдержаний
	   |
	   |ИЗ
	   |	" + ИмяИсточника + " КАК Основной
	   |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + ПлановыеИФактическиеУдержанияТекст + ") КАК ПлановыеИФактическиеУдержания
	   |		ПО Основной.ФизЛицо = ПлановыеИФактическиеУдержания.ФизЛицо
	   |
	   |	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК БазовыеВидыРасчета
	   |		ПО ПлановыеИФактическиеУдержания.ВидРасчета = БазовыеВидыРасчета.Ссылка
	   |		   И ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
	   |		   И ПлановыеИФактическиеУдержания.СпособРасчета = &парамСпособРасчетаПроцентом
	   |
	   |	ЛЕВОЕ СОЕДИНЕНИЕ " + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	   |		ПО ПлановыеИФактическиеУдержания.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо
	   |		   И БазовыеВидыРасчета.ВидРасчета = ОсновныеИДополнительныеНачисления.ВидРасчета
	   |
	   |ГДЕ
	   |	" + ВнешнееУсловие + "
	   |	И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
	   |
	   |СГРУППИРОВАТЬ ПО
	   |	Основной.НомерСтроки,
	   |	Основной.ВидРасчета,
	   |	ПлановыеИФактическиеУдержания.ФизЛицо,
	   |	ПлановыеИФактическиеУдержания.ВидРасчета,
	   |	ПлановыеИФактическиеУдержания.ВидСтроки
	   |";
			   
	   РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
	   |ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	   |						КомпенсируемыеУдержания.НомерСтроки,
	   |						СУММА(КомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний) КАК СуммаКомпенсируемыхУдержаний,
	   |						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
	   |						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
	   |						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПНиОПВ) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
	   |						СУММА(КомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний) КАК ПроцентПрочихКомпенсируемыхУдержаний
	   |					ИЗ
	   |						(" + КомпенсируемыеУдержанияТекст + ") КАК КомпенсируемыеУдержания
	   |						ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	   |													КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.Ссылка КАК ВидРасчетаОтОбратного,
	   |													КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	   |												ИЗ
	   |													ПланВидовРасчета." + ИмяПВР + ".КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний) КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	   |							ПО КомпенсируемыеУдержания.ВидРасчетаОтОбратного = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчетаОтОбратного 
	   |							   И КомпенсируемыеУдержания.ВидУдержания = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	   |					СГРУППИРОВАТЬ ПО 
	   |						КомпенсируемыеУдержания.НомерСтроки
	   |					) КАК РасчетОтОбратногоКомпенсируемыеУдержания
	   |	ПО Основной.НомерСтроки = РасчетОтОбратногоКомпенсируемыеУдержания.НомерСтроки
	   |";
	КонецЕсли;
		
	// Разделим прочие начисления на включаемые внутрь расчета "от обратного" и начисляемые "сверху"
	РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамПериодРегистрации, Организация = &парамОбособленноеПодразделение) КАК УчетнаяПолитикаНУ
	|	ПО ИСТИНА
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|						Основной.НомерСтроки,
	|						СУММА(ОсновныеИДополнительныеНачисления.СуммаНачислений) КАК ОбщаяСуммаНачислений,
	|						СУММА(ВЫБОР
	|								КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ = &парамНеОблагаетсяЦеликом
	|									ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|								ИНАЧЕ 0
	|							  КОНЕЦ) КАК НеОблагаемыйОПВДоход,
	|						СУММА(ВЫБОР
	|								КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН = &парамНеОблагаетсяЦеликом
	|									ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|								ИНАЧЕ 0
	|							  КОНЕЦ) КАК НеОблагаемыйИПНДоход,
	|						СУММА(ВЫБОР
	|								КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL) 
	|									ТОГДА ОсновныеИДополнительныеНачисления.СуммаНачислений
	|								ИНАЧЕ 0
	|							 КОНЕЦ) КАК СуммаВключаемыхНачислений,
	|						СУММА(ВЫБОР
	|								КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
	|										И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> &парамНеОблагаетсяЦеликом
	|									ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|								ИНАЧЕ 0
	|							  КОНЕЦ) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
	|						СУММА(ВЫБОР
	|								КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
	|										И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> &парамНеОблагаетсяЦеликом
	|									ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|								ИНАЧЕ 0
	|							  КОНЕЦ) КАК ОблагаемыйОПВДоходВключаемыхНачислений,
	|						СУММА(ВЫБОР
	|								КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|									ТОГДА ОсновныеИДополнительныеНачисления.ДополнительныеДанные
	|								ИНАЧЕ 0
	|							  КОНЕЦ) КАК ДополнительныеДанные
	|				   ИЗ
	|						" + ИмяИсточника + " КАК Основной
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|							ПО Основной.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо 
	|						ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|													Ссылка КАК Ссылка,
	|													ВидРасчета КАК ВидРасчета
	|										  	   ИЗ
	|													ПланВидовРасчета." + ИмяПВР + ".ВключаемыеВРасчетОтОбратногоВидыНачислений 
	|"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|											   ОБЪЕДИНИТЬ 
	|											   
	|											   // для учета возможного разделения периода действия расчета от обратного 
	|											   // на несколько строк в результате кадровых перемещений добавим
	|											   // в качестве включаемых видов начислений сам вид расчета от обратного,
	|											   // чтобы отнять из текущего результата результаты прошлых начислений от обратного
	|											   // и за месяц выйти на правильную сумму.  Но это делаем только для начислений 
	|											   // за отработанное время, для доплат 'от обратного' так не делаем
	|                                               ВЫБРАТЬ РАЗЛИЧНЫЕ
	|													Основной.ВидРасчета КАК Ссылка,
	|													ПВР.Ссылка КАК ВидРасчета
	|											   ИЗ
	|													" + ИмяИсточника + " КАК Основной
	|													ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета." + ИмяПВР + " КАК ПВР
	|														ПО ПВР.ОтОбратного
	|											   ГДЕ
	|													" + ВнешнееУсловие + "
	|													И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
	|													И Основной.ВидРасчета.ЗачетОтработанногоВремени", "") + "
	|
	|										  	   ) КАК ВключаемыеВРасчетОтОбратногоВидыНачислений
	|							ПО Основной.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка
	|							   И ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|				  ГДЕ
	|						" + ВнешнееУсловие + "
	|						И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
	|				  СГРУППИРОВАТЬ ПО
	|						Основной.НомерСтроки) КАК РасчетОтОбратногоПрочиеНачисления
	|	ПО Основной.НомерСтроки = РасчетОтОбратногоПрочиеНачисления.НомерСтроки
	|
	|// определим облагаемые ИПН и ОПВ доходы, начисленные текущий регистратором,
	|// т.к. их еще нет в ИПНСведенияОДоходах и ОПВСведенияОДоходах
	|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|						Начисления.ФизЛицо,
	|						СУММА(ВЫБОР
	|								КОГДА Начисления.ВидРасчета.ОблагаетсяИПН <> &парамНеОблагаетсяЦеликом 
	|									ТОГДА Начисления.Результат
	|								ИНАЧЕ 0
	|							  КОНЕЦ) КАК ОблагаемыйИПНДоход,
	|						СУММА(ВЫБОР
	|								КОГДА Начисления.ВидРасчета.ОблагаетсяИПН = &парамНеОблагаетсяЦеликом 
	|									ТОГДА Начисления.Результат
	|								ИНАЧЕ 0
	|							  КОНЕЦ) КАК НеОблагаемыйИПНДоход,
	|						СУММА(ВЫБОР
	|								КОГДА Начисления.ВидРасчета.ОблагаетсяОПВ <> &парамНеОблагаетсяЦеликом 
	|									ТОГДА Начисления.Результат
	|								ИНАЧЕ 0
	|							  КОНЕЦ) КАК ОблагаемыйОПВДоход,
	|						СУММА(ВЫБОР
	|								КОГДА Начисления.ВидРасчета.ОблагаетсяОПВ = &парамНеОблагаетсяЦеликом 
	|									ТОГДА Начисления.Результат
	|								ИНАЧЕ 0
	|							  КОНЕЦ) КАК НеОблагаемыйОПВДоход
	|				  ИЗ
	|						(ВЫБРАТЬ
	|							Основной.ФизЛицо,
	|							Основной.ВидРасчета,
	|							Основной.Результат
	|						ИЗ
	|							" + ИмяИсточника + " КАК Основной
	|				  		ГДЕ
	|							Основной.Регистратор = &парамРегистратор
	|							И Основной.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц)"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|							И Основной.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)","
	|
	|                        // если доп. начисления
	|						ОБЪЕДИНИТЬ ВСЕ
	|
	|						ВЫБРАТЬ
	|							Дополнительный.ФизЛицо,
	|							Дополнительный.ВидРасчета,
	|							Дополнительный.Результат
	|						ИЗ
	|							РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК Дополнительный
	|						ГДЕ
	|							Дополнительный.Регистратор = &парамРегистратор
	|							И Дополнительный.ФизЛицо В (&парамРасчетОтОбратногоСписокФизЛиц) 
	|							И Дополнительный.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)") + "
	|						) КАК Начисления
	|
	|				  СГРУППИРОВАТЬ ПО
	|						Начисления.ФизЛицо) КАК РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора
	|	ПО Основной.ФизЛицо = РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора.ФизЛицо
	|	   И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
	|
	|// определим компенсируемые удержания для каждого вида расчета от обратного
	|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|						КомпенсируемыеУдержания.Ссылка КАК ВидРасчета,
	|						СУММА(ВЫБОР КОГДА КомпенсируемыеУдержания.ВидРасчета = &парамНалогВзносИПН ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК КомпенсироватьИПН,
	|						СУММА(ВЫБОР КОГДА КомпенсируемыеУдержания.ВидРасчета = &парамНалогВзносОПВ ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК КомпенсироватьОПВ,
	|						СУММА(ВЫБОР КОГДА КомпенсируемыеУдержания.ВидРасчета НЕ В (&парамНалогВзносИПН, &парамНалогВзносОПВ, &парамНалогВзносВОСМС) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК КомпенсироватьУдержания
	|					ИЗ
	|						ПланВидовРасчета." + ИмяПВР + ".КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеУдержания
	|					ГДЕ
	|						КомпенсируемыеУдержания.Ссылка В (&парамВидыРасчетаОтОбратного)
	|					СГРУППИРОВАТЬ ПО
	|						КомпенсируемыеУдержания.Ссылка) КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|	ПО Основной.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|";
	
	СтруктураРезультат = Новый Структура();
	СтруктураРезультат.Вставить("РасчетОтОбратногоСоединенияТекст", РасчетОтОбратногоСоединенияТекст);
	СтруктураРезультат.Вставить("РасчетОтОбратногоПоляТекст", РасчетОтОбратногоПоляТекст);
	
	Возврат СтруктураРезультат;

КонецФункции

// Функция формирует тексты запросов для получения данных, необходимых при расчете "от обратного" после 2009 года
// Возвращает структуру с текстами запроса для секций ВЫБРАТЬ И СОЕДИНЕНИЯ
//
Функция ПолучитьДанныеДляРасчетаОтОбратногоПосле2009(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет = Ложь,
									Сотрудники = НеОпределено,
									Налогоплательщик = Неопределено,
									КомментироватьРасчет = Ложь,
									Запрос,
									ВнешнееУсловие)

	РасчетОтОбратногоПоляТекст = ""; // строка с полями запроса
	РасчетОтОбратногоСоединенияТекст = ""; // строка с соединениями в запросе		

	ИмяИсточника = "РегистрРасчета." + ИмяРегистра;
	ИмяПВР = ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций", "ОсновныеНачисленияОрганизаций", "ДополнительныеНачисленияОрганизаций");
		// Поля, необходимые для расчета "от обратного" 
	РасчетОтОбратногоПоляТекст = "
	|ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьИПН,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|			ИЛИ ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоУчитыватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьУдержания, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьУдержания,
	|Основной.ВидРасчета.ОблагаетсяОПВ КАК ОблагаетсяОПВ,
	|Основной.ВидРасчета.ОблагаетсяИПН КАК ОблагаетсяИПН
	|";
			
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ЛьготаПоДоходу, 0) КАК ЛьготаПоДоходу,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ОблагаемыйДоход, 0) + ЕСТЬNULL(РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора.ОблагаемыйИПНДоход, 0) КАК ОблагаемыйДоход,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляИПН,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПримененныйВычетЗаГод, 0) КАК ПримененныйВычетЗаГод,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПримененнаяЛьготаЗаГод, 0) КАК ПримененнаяЛьготаЗаГод,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.РазрешенныйВычетЗаГод, 0) КАК РазрешенныйВычетЗаГод,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПримененнаяЛьготаНаПредыдущемМестеРаботы, 0) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.НалоговыйВычетЛичный, 0) КАК НалоговыйВычетЛичный,
		|ВЫБОР 
		|	КОГДА ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК 
		|		ТОГДА ЕСТЬNULL(СведенияОСтавкахИПНПоНалогоплательщику.СтавкаНерезиденты, ЕСТЬNULL(СведенияОСтавкахИПН.СтавкаНерезиденты, 0))
		|	ИНАЧЕ ЕСТЬNULL(СведенияОСтавкахИПНПоНалогоплательщику.Ставка, ЕСТЬNULL(СведенияОСтавкахИПН.Ставка, 0))
		|КОНЕЦ / 100 КАК ПроцентИПН
		|";
			
		Запрос.УстановитьПараметр("парамСтавкаИПН", ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Организация, Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог, ПериодРегистрации) / 100);
	КонецЕсли;
			
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ВЫБОР
		|	КОГДА Основной.ФизЛицо В (&парамФизлицаПенсионеры)
		|		  ИЛИ Основной.ФизЛицо В (&парамФизЛицаБезПраваНаПенсию)
		|		  ИЛИ Основной.ФизЛицо В (&парамФизЛицаИнвалидыБессрочно) ТОГДА ЛОЖЬ
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ КАК ПризнакИсчисленияОПВ,				
		|ЕСТЬNULL(РасчетОтОбратногоДанныеОПВ.БазаДляИсчисленияОПВ, 0) + ЕСТЬNULL(РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора.ОблагаемыйОПВДоход, 0) КАК БазаДляИсчисленияОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеОПВ.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляОПВ,
		|&парамРазмерОграниченияПоДоходамОПВ КАК РазмерОграниченияПоДоходамОПВ,
		|&парамСтавкаОПВ КАК ПроцентОПВ
		|";
		
		Запрос.УстановитьПараметр("парамСтавкаОПВ", ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Организация, Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы, ПериодРегистрации) / 100);
	КонецЕсли;

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний, 0) КАК СуммаКомпенсируемыхУдержаний,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН, 0) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПНиОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний, 0) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|";
	КонецЕсли;
			
	РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.НеОблагаемыйИПНДоход, 0) КАК НеОблагаемыйИПНДоходЗаМесяц,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.НеОблагаемыйОПВДоход, 0) КАК НеОблагаемыйОПВДоходЗаМесяц,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходВключаемыхНачислений, 0) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходВключаемыхНачислений, 0) КАК ОблагаемыйОПВДоходВключаемыхНачислений,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОбщаяСуммаНачислений, 0) КАК ОбщаяСуммаНачислений,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаВключаемыхНачислений, 0) КАК СуммаВключаемыхНачислений,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ДополнительныеДанные, 0) КАК РасчетОтОбратногоДополнительныеДанные
	|";

	// Далее идут тексты запросов по аналогии с функциями ПолучитьДанныеДляРасчетаИПН() и ПолучитьДанныеДляРасчетаОПВ().
	// Отличие по всем текстам в том, что в ПолучитьДанныеДляРасчетаИПН() используется &парамСписокФизЛиц,
	// а в расчете "от обратного" &парамРасчетОтОбратногоСписокФизЛиц.
	// В данном расчете предполагается, что расчет ИПН и ОПВ будет производится с установленным
	// в учетной политике по налоговому учету флажке ОтражениеПоПериодуРегистрации - все данные выбираются по ПериодРегистрации

	Запрос.УстановитьПараметр("парамРегистратор", Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачалоГода", 			НачалоГода(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", ОбособленноеПодразделение);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", 	Организация);

	Если Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить() Тогда
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	Налогоплательщик);
	Иначе
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	ОбособленноеПодразделение);
	КонецЕсли;

	// категория начисления
	Запрос.УстановитьПараметр("парамКатегорияНачисления", 		КатегорияРасчета);
	Запрос.УстановитьПараметр("парамПорядокКатегории", 			Перечисления.КатегорииРасчетов.Индекс(КатегорияРасчета));

	// Список видов расчета "от обратного"
	ВидыРасчетаОтОбратногоТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Основной.ВидРасчета
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета.ОтОбратного
	|";

	Запрос.Текст = ВидыРасчетаОтОбратногоТекст;
	Запрос.УстановитьПараметр("парамВидыРасчетаОтОбратного", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРасчета"));

	// Периоды
	// Таблица список физлиц, по которым необходимо выполнить расчет налога или взносов
	// Поля:
	//		Физлицо
	СписокФизЛицТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Основной.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
			
	Запрос.Текст = СписокФизЛицТекст;
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";

	// Составим текст запроса для вычисления всех месяцев периода
	ДатыПериодовГодаТекст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
					   |	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период
					   |
					   |ПОМЕСТИТЬ ВТ_ДатыПериодовГодаРасчетаОтОбратного
					   |ИЗ
					   |	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
					   |ГДЕ
					   |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) И &парамПериодРегистрации
					   |
					   |ИНДЕКСИРОВАТЬ ПО
					   |	Период";
	Запрос.Текст = ДатыПериодовГодаТекст;
	Запрос.Выполнить();
	ДатыПериодовГодаТекст = "ВТ_ДатыПериодовГодаРасчетаОтОбратного";

	// Списки видов расчета, категория расчета которых меньше текущей  (т.е. уже посчитанные)
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПВР.Ссылка
	|ИЗ
	|	ПланВидовРасчета." + ИмяПВР + " КАК ПВР
	|ГДЕ
	|	ПВР.КатегорияРасчета.Порядок < &парамПорядокКатегории
	|";

	Запрос.УстановитьПараметр("парамУжеРассчитанныеВидыРасчета", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));

	// Виды расчета, которые являются доходом в натуральной форме
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ОсновныеНачисления.Ссылка КАК ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисления
	|ГДЕ
	|	ОсновныеНачисления.ЯвляетсяПрочимДоходом
	|";
	Запрос.УстановитьПараметр("парамДоходыВНатуральнойФормеОсновные", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРасчета"));

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДополнительныеНачисления.Ссылка КАК ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисления
	|ГДЕ
	|	ДополнительныеНачисления.ЯвляетсяПрочимДоходом
	|";
	Запрос.УстановитьПараметр("парамДоходыВНатуральнойФормеДополнительные", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРасчета"));

	// ОсновныеИДополнительныеНачисления
	// Поля:
	//		ФизЛицо
	//		ВидРасчета
	//		Результат
	//	Описание:
	// Выбирает начисления за период регистрации по физлицам, для которых выполняется расчет "от обратного"
	ОсновныеИДополнительныеНачисленияТекст = "
	|ВЫБРАТЬ
	|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ОсновныеНачисления.Результат) КАК Результат,
	|	СУММА(ОсновныеНачисления.ДополнительныеДанные) КАК ДополнительныеДанные,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.ВидРасчета В (&парамДоходыВНатуральнойФормеОсновные) ТОГДА ОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		 КОНЕЦ) КАК СуммаНачислений
	|
	|ПОМЕСТИТЬ ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|ГДЕ
	|	ОсновныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И (ОсновныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ОсновныеНачисления.Регистратор = &парамРегистратор
	|				И ОсновныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))", "") + "
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисления.ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета,
	|	СУММА(ДополнительныеНачисления.Результат) КАК Результат,
	|	0 КАК ДополнительныеДанные,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.ВидРасчета В (&парамДоходыВНатуральнойФормеДополнительные) ТОГДА ДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаНачислений
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ДополнительныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|ГДЕ
	|	ДополнительныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ДополнительныеНачисления.ПериодРегистрации МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И ДополнительныеНачисления.Регистратор <> &парамРегистратор","
	|
	|	// если доп. начисления
	|	И (ДополнительныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ДополнительныеНачисления.Регистратор = &парамРегистратор
	|				И ДополнительныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))") + "
	|СГРУППИРОВАТЬ ПО
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидРасчета
	|";
	Запрос.Текст = ОсновныеИДополнительныеНачисленияТекст;
	Запрос.Выполнить();
	ОсновныеИДополнительныеНачисленияТекст = "ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного";

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
			
		// ФизлицаНеРезиденты
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц-нерезидентов
		ГражданствоФизЛицТекст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	ГражданствоФизЛиц.ФизЛицо,
		|	ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК
		|
		|ПОМЕСТИТЬ ВТ_ГражданствоФизЛицРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|				&парамКонецПериодаРегистрации, 
		|				ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + " КАК СписокФизЛиц)) КАК ГражданствоФизЛиц
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		Запрос.Текст = ГражданствоФизЛицТекст;
		Запрос.Выполнить();
		ГражданствоФизЛицТекст = "ВТ_ГражданствоФизЛицРасчетаОтОбратного";
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
		|	ПО Основной.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
		|";
		
		// РасчетныеПоказатели
		//	Поля:
		//		Период
		//		РазмерМРП
		//		РазмерМЗП
		//
		//	Описание:
		// Выбирает размер месячного расчетного показателя по периодам
		РасчетныеПоказателиТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказателиСрезПоследних.РазмерМРПДляЦелейНалогообложения КАК РазмерМРП,
		|	РасчетныеПоказателиСрезПоследних.РазмерМЗПДляЦелейНалогообложения КАК РазмерМЗП,
		|	РасчетныеПоказателиСрезПоследних.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
		|	РасчетныеПоказателиСрезПоследних.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
		|
		|ПОМЕСТИТЬ ВТ_РасчетныеПоказателиРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказателиСрезПоследних
		|";
		Запрос.Текст = РасчетныеПоказателиТекст;
		Запрос.Выполнить();
		РасчетныеПоказателиТекст = "ВТ_РасчетныеПоказателиРасчетаОтОбратного";
		
		// ПрименяемыеЛьготы
		//	Поля:
		//		Физлицо
		//		Период
		//		ПрименяетсяЛьготаУчастникаВОВ
		//		ПрименяетсяЛьготаПоИнвалидности
		//		ЛьготаПоДоходу
		//
		//	Описание:
		//	Выбирает по всем периодам года льготы на которые имеет право физлицо
		ПрименяемыеЛьготыТекст = 
		"ВЫБРАТЬ
		|	ИПНЛьготыФизлиц.Физлицо,
		|	
		|	ИПНЛьготыФизлиц.ОтношениеКИнвалидности,
		|	ИПНЛьготыФизлиц.ГруппаИнвалидности,
		|
		|	ВЫБОР
		|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > 0 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрименяетсяЛьготаУчастникаВОВ,
		|
		|	ВЫБОР
		|		КОГДА ИПНЛьготыФизлиц.ЛьготаПоИнвалидности > 0 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрименяетсяЛьготаПоИнвалидности,
		|
		|	ВЫБОР 
		|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
		|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ 
		|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
		|	КОНЕЦ КАК ЛьготаПоДоходу
		|
		|ПОМЕСТИТЬ ВТ_ПрименяемыеЛьготыРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		Периоды.Физлицо КАК Физлицо,
		|		ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности,
		|		ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности,
		|		ВЫБОР 
		|			КОГДА (ЛьготыФизлицПоИнвалидности.Физлицо) ЕСТЬ NULL 
		|				ТОГДА 0 
		|			ИНАЧЕ ВЫБОР 
		|					КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
		|							И ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности = ""III"" 
		|						ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
		|					ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
		|				  КОНЕЦ 
		|		КОНЕЦ КАК ЛьготаПоИнвалидности,
		|		ВЫБОР 
		|			КОГДА (ЛьготыФизлицУчастниковВОВ.Физлицо) ЕСТЬ NULL 
		|				ТОГДА 0 
		|			ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) 
		|		КОНЕЦ КАК ЛьготаУчастникаВОВ
		|		
		|	ИЗ
		|		" + СписокФизЛицТекст + " КАК Периоды
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
		|							&парамКонецПериодаРегистрации,
		|							ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ЛьготыФизлицПоИнвалидности
		|			ПО ЛьготыФизлицПоИнвалидности.Физлицо = Периоды.Физлицо
		|				И (ЛьготыФизЛицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
		|					ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизЛицПоИнвалидности.СрокДействияСправки, ДЕНЬ) >= &парамКонецПериодаРегистрации)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(
		|							&парамКонецПериодаРегистрации,
		|							ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ЛьготыФизлицУчастниковВОВ
		|			ПО ЛьготыФизлицУчастниковВОВ.Физлицо = Периоды.Физлицо
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
		|			ПО ИСТИНА) КАК ИПНЛьготыФизлиц
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИПНЛьготыФизлиц.Физлицо
		|";
		Запрос.Текст = ПрименяемыеЛьготыТекст;
		Запрос.Выполнить();
		ПрименяемыеЛьготыТекст = "ВТ_ПрименяемыеЛьготыРасчетаОтОбратного";
		
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		СуммаДоходаОборот
		//		СуммаВычетаОборот
		//
		//	Описание:
		// Выбирает общую сумму доходов и облагаемые налогом доходы за весь год по физлицам из СписокФизлиц
			
		// Здесь не учитываем доходы, записанные текущим регистратором, т.к. при проведении по ИПНСведенияОДоходах
		// они были еще в процессе расчета и их прибавим позже. А также отдельно выделяем доходы, начисленные в данной 
		// организации за текущий месяц, которые прошли через начисления, прочие доходы не выделяем.
		// Сведения о жилищных и страховых вычетах текущего месяца всегда берем из регистра сведений, т.к. в регистре накопления они 
		// появляются только при прямом расчете налога и поэтому могут отсутствовать, если сейчас первый раз рассчитываются начисления.
		// Т.к. расчет "от обратного" поддерживается только при учетной политикой с ОтражениемПоПериодуРегистрации,
		// то в регистрах Период, ПериодРегистрации и МесяцНалоговогоПериода всегда совпадают, поэтому 
		// устанавливаем отборы по Периоду, т.к. по нему система автоматически создает индекс.
		ДоходыТекст = 
		"ВЫБРАТЬ
		|	ИПНОбороты.Физлицо КАК ФизЛицо,
		|	СУММА(ИПНОбороты.СуммаДоходаОборот) КАК СуммаДоходаОборот,
		|	СУММА(ИПНОбороты.СуммаВычетаОборот) КАК СуммаВычетаОборот,
		|	СУММА(ВЫБОР
		|			КОГДА ИПНОбороты.НачисленоВТекущейОрганизации
		|				ТОГДА ИПНОбороты.СуммаДоходаОборот - ИПНОбороты.СуммаВычетаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаемыйДоходЗаМесяц,
		|	СУММА(ИПНОбороты.ПрочиеДоходы) КАК ПрочиеДоходы
		|
		|ПОМЕСТИТЬ ВТ_ДоходыРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
		|		ВЫБОР 
		|			КОГДА ИПНСведенияОДоходах.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
		|				ТОГДА СУММА(ИПНСведенияОДоходах.СуммаДохода) 
		|			ИНАЧЕ 0 
		|		КОНЕЦ КАК СуммаДоходаОборот,
		|		СУММА(ИПНСведенияОДоходах.СуммаВычета) КАК СуммаВычетаОборот,
		|		СУММА(ВЫБОР
		|				КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ТОГДА ИПНСведенияОДоходах.СуммаДохода - ИПНСведенияОДоходах.СуммаВычета
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ПрочиеДоходы,
		|		ВЫБОР
		|			КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ИЛИ ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РасчетНалоговПриПоступленииАктивовУслуг
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ КАК НачисленоВТекущейОрганизации
		|	ИЗ
		|		РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО ИПНСведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|	ГДЕ
		|		ИПНСведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|		И ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|		И ИПНСведенияОДоходах.Регистратор <> &парамРегистратор
		|		И НЕ(ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ИПНСведенияОДоходах.ФизЛицо,
		|		ИПНСведенияОДоходах.СпособНалогообложения,
		|		ИПНСведенияОДоходах.Регистратор
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ИПНПлановыеВычеты.ФизЛицо,
		|		0 КАК СуммаДоходаОборот,
		|		СУММА(ИПНПлановыеВычеты.СуммаВычета) КАК СуммаВычета,
		|		0 КАК ПрочиеДоходы,
		|		ЛОЖЬ КАК НачисленоВТекущейОрганизации
		|	ИЗ
		|		РегистрСведений.ИПНПлановыеНалоговыеВычетыФизЛиц.СрезПоследних(
		|				&парамКонецПериодаРегистрации,
		|				Налогоплательщик = &парамНалогоплательщик
		|				И МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|				И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНПлановыеВычеты
		|	СГРУППИРОВАТЬ ПО
		|		ИПНПлановыеВычеты.ФизЛицо) КАК ИПНОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПНОбороты.Физлицо";
		Запрос.Текст = ДоходыТекст;
		Запрос.Выполнить();
		ДоходыТекст = "ВТ_ДоходыРасчетаОтОбратного";

			
		// ИПНПримененныеЛьготыВычеты
		//	Поля:
		//		ФизЛицо
		//		ИсчисленныйНалог
		//		ПримененныеВычетыЛичные - уже примененные личные налоговые вычеты по ИПН
		//		ПримененнаяЛьгота - уже примененная льгота по ИПН
		//
		//	Описание:
		//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом и данные регистра
		//  СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
			
		// Здесь не берем данные за МесяцНалоговогоПериода в ИПНСведенияОДоходах, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Т.к. считаем только в случае если в учет. политике стоит ОтражениеПоПериодуРегистрации, то сразу накапливаем
		// итоги с начала года по предыдущий месяц включительно.
		ИПНПримененныеЛьготыВычетыТекст = 
		"ВЫБРАТЬ
		|	ИПНПримененныеВычетыЛьготы.ФизЛицо КАК ФизЛицо,
		|	СУММА(ИПНПримененныеВычетыЛьготы.ПримененныйВычетОборот) КАК ПримененныйВычетЗаГод,
		|	СУММА(ИПНПримененныеВычетыЛьготы.ПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаЗаГод,
		|	СУММА(ИПНПримененныеВычетыЛьготы.РазрешенныйВычетОборот) КАК РазрешенныйВычетЗаГод,
		|	СУММА(ИПНПримененныеВычетыЛьготы.ПримененнаяЛьготаНаПредыдущемМестеРаботы) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы
		|ПОМЕСТИТЬ ВТ_ИПНПримененныеЛьготыВычеты
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИПНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|		ИПНСведенияОДоходах.ПримененныйВычетОборот КАК ПримененныйВычетОборот,
		|		ИПНСведенияОДоходах.ПримененнаяЛьготаОборот КАК ПримененнаяЛьготаОборот,
		|		ИПНСведенияОДоходах.РазрешенныйВычетОборот КАК РазрешенныйВычетОборот,
		|		0 КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы
		|	ИЗ
		|		РегистрНакопления.ИПНСведенияОДоходах.Обороты(&парамНачалоГода, ДОБАВИТЬКДАТЕ(&парамПериодРегистрации, СЕКУНДА, -1), Месяц,
		|				Налогоплательщик = &парамНалогоплательщик И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНСведенияОДоходах
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо,
		|		0,
		|		0,
		|		0,
		|		ИПНСведенияПредыдущегоМестаРаботы.ПримененнаяЛьгота
		|	ИЗ
		|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК ИПНСведенияПредыдущегоМестаРаботы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	ГДЕ
		|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода
		|		И ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации
		|		И ИПНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик) КАК ИПНПримененныеВычетыЛьготы
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПНПримененныеВычетыЛьготы.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
		Запрос.Текст = ИПНПримененныеЛьготыВычетыТекст;
		Запрос.Выполнить();
		ИПНПримененныеЛьготыВычетыТекст = "ВТ_ИПНПримененныеЛьготыВычеты";
			

		// Здесь не берем имеющийся за МесяцНалоговогоПериода в ОПВРасчетыСФондами взнос, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Т.к. расчет ведется только если в учет. политике установлено ОтражениеПоПериодуРегистрации,
		// то анализовать надо только текущий месяц. Поэтому запрос к ОПВРасчетыСФондами вообще не требуется.

		// ПрименениеВычетовВОрганизации
		//	Поля:
		//		Физлицо,
		//		Период
		//
		// Описание:
		//	Выбирает список физлиц + периоды в которые применяются налоговые вычеты по 
		//	заданной организации
		ПрименениеВычетовВОрганизацииТекст = 
		"ВЫБРАТЬ
		|	ИПНПрименениеВычетов.Физлицо КАК Физлицо
		|
		|ПОМЕСТИТЬ ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ИПНПрименениеВычетов.СрезПоследних(
		|					&парамПериодРегистрации,
		|					ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНПрименениеВычетов
		|
		|ГДЕ
		|	ИПНПрименениеВычетов.Налогоплательщик = &парамНалогоплательщик
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		Запрос.Текст = ПрименениеВычетовВОрганизацииТекст;
		Запрос.Выполнить();
		ПрименениеВычетовВОрганизацииТекст = "ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного";

		// ОтработанноеВремя
		//	Поля:
		//		Физлицо,
		//		Период,
		//		ПредоставлятьВычет
		//
		// Описание:
		//	Список физлиц-периодов с правом применения налоговых вычетов по отработанному времени
		//	
		
		ОтработанноеВремяТекст = 
		"ВЫБРАТЬ
		|	ОтработанноеВремя.ФизЛицо,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ОтработанноеВремя.ДатаС <= ОтработанноеВремя.ДатаПо
		|					ТОГДА РАЗНОСТЬДАТ(ОтработанноеВремя.ДатаС, ОтработанноеВремя.ДатаПо, ДЕНЬ) + 1
		|				ИНАЧЕ 0
		|			КОНЕЦ >= 16
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПредоставлятьВычет
		|
		|ПОМЕСТИТЬ ВТ_ОтработанноеВремяРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОтработанноеВремя.ФизЛицо,
		|		ОтработанноеВремя.Период,
		|
		|		ВЫБОР 
		|			// вообще не был принят в штат - не считаем отработанное время
		|			КОГДА ОтработанноеВремя.ДатаПриема = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
		|			// принят в штат в предыдущих месяцах - считаем с первого числа месяца
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаПриема, МЕСЯЦ) < ОтработанноеВремя.Период 
		|				ТОГДА ОтработанноеВремя.Период
		|			// принят в штат в текущем месяце - считаем с даты приема
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаПриема, МЕСЯЦ) = ОтработанноеВремя.Период
		|				ТОГДА ОтработанноеВремя.ДатаПриема
		|			// сюда попасть не должны - не считаем 
		|			ИНАЧЕ
		|				ДАТАВРЕМЯ(3999, 12, 31)
		|		КОНЕЦ КАК ДатаС,
		|
		|		ВЫБОР 
		|			// повторный прием в ту же организацию и еще не уволен 
		|			// или еще не уволен после первого приема - считаем до конца месяца
		|			КОГДА ОтработанноеВремя.ДатаПриема > ОтработанноеВремя.ДатаУвольнения 
		|				  ИЛИ ГОД(ОтработанноеВремя.ДатаУвольнения) = 1
		|				ТОГДА КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
		|			// уволен до начала месяца - не считаем
		|			КОГДА ОтработанноеВремя.ДатаУвольнения < ОтработанноеВремя.Период
		|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|			// уволен в текущем месяце - считаем до даты увольнения
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаУвольнения, МЕСЯЦ) = ОтработанноеВремя.Период
		|               ТОГДА ОтработанноеВремя.ДатаУвольнения
		|			// еще не уволен - считаем до конца месяца
		|			ИНАЧЕ
		|				КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
		|		КОНЕЦ КАК ДатаПо
		|
		|	ИЗ			
		|		(ВЫБРАТЬ
		|			&парамПериодРегистрации КАК Период,
		|			РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
		|			МАКСИМУМ(ВЫБОР 
		|						КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу) 
		|							ТОГДА РаботникиОрганизации.Период
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				 	 КОНЕЦ) КАК ДатаПриема,
		|			МАКСИМУМ(ВЫБОР 
		|						КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|							ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				 	 КОНЕЦ) КАК ДатаУвольнения
		|		ИЗ
		|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|
		|		ГДЕ
		|			РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
		|			И РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|			И РаботникиОрганизации.Период <= &парамКонецПериодаРегистрации
		|			И РаботникиОрганизации.ПричинаИзмененияСостояния В (ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу), 
		|																ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
		|
		|		СГРУППИРОВАТЬ ПО 
		|			РаботникиОрганизации.Сотрудник.ФизЛицо) КАК ОтработанноеВремя) КАК ОтработанноеВремя
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОтработанноеВремя.ФизЛицо
		|";

		Запрос.Текст = ОтработанноеВремяТекст;
		Запрос.Выполнить();
		ОтработанноеВремяТекст = "ВТ_ОтработанноеВремяРасчетаОтОбратного";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + ОтработанноеВремяТекст;

		// ПрименяемыеВычетыТекст
		//	Поля:
		//		Физлицо
		//		Период
		//		НалоговыйВычетЛичный
		//		НалоговыйВычетИждивенцев
		//		НалоговыйВычетПредыдущегоМестаРаботы
		//
		//	Описание:
		//	Выбирает по всем периодам года налоговын вычеты на которые имеет право физлицо
		ПрименяемыеВычетыТекст = 
		"ВЫБРАТЬ
		|	ВычетыФизлиц.Физлицо КАК Физлицо,
		|	ВЫБОР 
		|		КОГДА (ПрименениеВычетов.Физлицо) ЕСТЬ NULL 
		|				ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) 
		|				ИЛИ НЕ ЕСТЬNULL(ОтработанноеВремя.ПредоставлятьВычет, ЛОЖЬ)
		|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
		|			ТОГДА 0 
		|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
		|	КОНЕЦ КАК НалоговыйВычетЛичный
		|
		|ПОМЕСТИТЬ ВТ_ПрименяемыеВычетыРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ИПННалоговыеВычетыФизлиц.СрезПоследних(
		|				&парамКонецПериодаРегистрации,
		|				ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ВычетыФизлиц
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
		|		ПО ИСТИНА
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименениеВычетовВОрганизацииТекст + " КАК ПрименениеВычетов
		|		ПО ПрименениеВычетов.Физлицо = ВычетыФизлиц.Физлицо 
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОтработанноеВремяТекст + " КАК ОтработанноеВремя
		|		ПО ОтработанноеВремя.ФизЛицо = ВычетыФизлиц.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
		|		ПО ГражданствоФизЛиц.ФизЛицо = ВычетыФизлиц.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВычетыФизлиц.Физлицо
		|";
		Запрос.Текст = ПрименяемыеВычетыТекст;
		Запрос.Выполнить();
		ПрименяемыеВычетыТекст = "ВТ_ПрименяемыеВычетыРасчетаОтОбратного";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + ПрименяемыеВычетыТекст;

		БазаДляИсчисленияИПНТекст = "
		|ВЫБРАТЬ
		|	СписокФизЛиц.ФизЛицо,
		|	ЕСТЬNULL(Доходы.СуммаДоходаОборот, 0) - ЕСТЬNULL(Доходы.СуммаВычетаОборот, 0) КАК ОблагаемыйДоход,
		|	ЕСТЬNULL(Доходы.ПрочиеДоходы, 0) КАК ПрочиеДоходы,
		|	
		|	ЕСТЬNULL(ПрименяемыеЛьготы.ЛьготаПоДоходу, 0) КАК ЛьготаПоДоходу,
		|
		|	ЕСТЬNULL(ИПНПримененныеЛьготыВычеты.ПримененныйВычетЗаГод, 0) КАК ПримененныйВычетЗаГод,
		|	ЕСТЬNULL(ИПНПримененныеЛьготыВычеты.ПримененнаяЛьготаЗаГод, 0) КАК ПримененнаяЛьготаЗаГод,
		|	ЕСТЬNULL(ИПНПримененныеЛьготыВычеты.РазрешенныйВычетЗаГод, 0) КАК РазрешенныйВычетЗаГод,
		|	ЕСТЬNULL(ИПНПримененныеЛьготыВычеты.ПримененнаяЛьготаНаПредыдущемМестеРаботы, 0) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
		|
		|	ЕСТЬNULL(ПрименяемыеВычеты.НалоговыйВычетЛичный, 0) КАК НалоговыйВычетЛичный
		|
		|ПОМЕСТИТЬ ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного
		|ИЗ
		|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыТекст + " КАК Доходы
		|		ПО СписокФизЛиц.ФизЛицо = Доходы.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеЛьготыТекст + " КАК ПрименяемыеЛьготы
		|		ПО СписокФизЛиц.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНПримененныеЛьготыВычетыТекст + " КАК ИПНПримененныеЛьготыВычеты
		|		ПО СписокФизЛиц.ФизЛицо = ИПНПримененныеЛьготыВычеты.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеВычетыТекст + " КАК ПрименяемыеВычеты
		|		ПО СписокФизЛиц.ФизЛицо = ПрименяемыеВычеты.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СписокФизЛиц.ФизЛицо
		|";
		
		Запрос.Текст = БазаДляИсчисленияИПНТекст;
		Запрос.Выполнить();
		БазаДляИсчисленияИПНТекст = "ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + БазаДляИсчисленияИПНТекст;

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + БазаДляИсчисленияИПНТекст + " КАК РасчетОтОбратногоДанныеИПН
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеИПН.ФизЛицо
		|	   И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
		|";

		СведенияОСтавкахИПНПоНалогоплательщикуТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахИПНПоНалогоплательщику.ВидДохода,
			|	СведенияОСтавкахИПНПоНалогоплательщику.Ставка,
			|	СведенияОСтавкахИПНПоНалогоплательщику.СтавкаНерезиденты
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахИПНПоНалогоплательщику
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахИПН.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = &парамНалогоплательщик) КАК СведенияОСтавкахИПНПоНалогоплательщику";
			
		Запрос.Текст = СведенияОСтавкахИПНПоНалогоплательщикуТекст;
		Запрос.Выполнить();
		СведенияОСтавкахИПНПоНалогоплательщикуТекст = "ВТ_СведенияОСтавкахИПНПоНалогоплательщику";
		
		СведенияОСтавкахИПНТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахИПН.ВидДохода,
			|	СведенияОСтавкахИПН.Ставка,
			|	СведенияОСтавкахИПН.СтавкаНерезиденты
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахИПН
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахИПН.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК СведенияОСтавкахИПН";
			
		Запрос.Текст = СведенияОСтавкахИПНТекст;
		Запрос.Выполнить();
		СведенияОСтавкахИПНТекст = "ВТ_СведенияОСтавкахИПН";

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахИПНПоНалогоплательщикуТекст + " КАК СведенияОСтавкахИПНПоНалогоплательщику
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахИПНПоНалогоплательщику.ВидДохода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахИПНТекст + " КАК СведенияОСтавкахИПН
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахИПН.ВидДохода
		|";
		
	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
			
		СписокГруппИнвалидности = Новый СписокЗначений;
		СписокГруппИнвалидности.Добавить("I");
		СписокГруппИнвалидности.Добавить("II");
			
		Запрос.УстановитьПараметр("парамСписокГруппИнвалидности",  СписокГруппИнвалидности);
			
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		ОблагаемыйДоход
		//
		//	Описание:
		// Выбирает облагаемые взносами доходы за периоды по физлицам
		
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то доходы всегда выбираются только за расчетный месяц. Отдельно выделим прочие доходы, зарегистрированные в обход начислений.
		ДоходыТекст = "
		|ВЫБРАТЬ
		|	ОПВСведенияОДоходах.ФизЛицо КАК Физлицо,
		|	СУММА(ОПВСведенияОДоходах.СуммаДохода - ОПВСведенияОДоходах.СуммаВычета) КАК БазаДляИсчисленияОПВ,
		|	СУММА(ВЫБОР
		|			КОГДА ОПВСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|				ТОГДА ОПВСведенияОДоходах.СуммаДохода - ОПВСведенияОДоходах.СуммаВычета
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПрочиеДоходы
		|
		|ПОМЕСТИТЬ ВТ_ДоходыОПВРасчетаОтОбратного
		|ИЗ
		|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|		ПО ОПВСведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|ГДЕ
		|	ОПВСведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|	И ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|	
		|СГРУППИРОВАТЬ ПО
		|	ОПВСведенияОДоходах.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОПВСведенияОДоходах.ФизЛицо";
		
		Запрос.Текст = ДоходыТекст;
		Запрос.Выполнить();
		ДоходыТекст = "ВТ_ДоходыОПВРасчетаОтОбратного";

		// Здесь не берем имеющийся за МесяцНалоговогоПериода в ОПВРасчетыСФондами взнос, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то ранее исчисленные взносы всегда выбираются только за расчетный месяц. Поэтому запроса к ОПВРасчетыСФондами вообще не требуется.

		// РазмерОграниченияПоДоходам
		РазмерОграниченияПоДоходамТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказатели.РазмерМЗП * 75 КАК ОграничениеПоДоходам
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказатели
		|";
			
		Запрос.Текст = РазмерОграниченияПоДоходамТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", Выборка.ОграничениеПоДоходам);
		Иначе
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", 0);
		КонецЕсли;

		// ФизлицаБезПраваНаПенсию
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц не имеющих право на пенсионное обеспечение
		ФизлицаБезПраваНаПенсиюТекст = "
		|ВЫБРАТЬ
		|	ГражданствоФизЛиц.ФизЛицо
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ГражданствоФизЛиц
		|
		|ГДЕ
		|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)";
				
		Запрос.Текст = ФизлицаБезПраваНаПенсиюТекст;
		Запрос.УстановитьПараметр("парамФизЛицаБезПраваНаПенсию", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо"));
			
		// ФизлицаПенсионеры
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц достигших пенсионный возраст
		ФизлицаПенсионерыТекст = "
		|ВЫБРАТЬ
		|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
		|ИЗ
		|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОПенсионномОбеспеченииФизЛиц
		|
		|ГДЕ
		|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)";
			
		Запрос.Текст = ФизлицаПенсионерыТекст;
		Запрос.УстановитьПараметр("парамФизЛицаПенсионеры", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо"));

		// ФизлицаИнвалидыБессрочно
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц-инвалидов I и II группы, у которых инвалидность установлена бессрочно
		ФизлицаИнвалидыБессрочноТекст = "
		|ВЫБРАТЬ
		|	СведенияОбИнвалидностиФизлиц.ФизЛицо
		|ИЗ
		|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОбИнвалидностиФизлиц
		|
		|ГДЕ
		|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
		|	И СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности В (&парамСписокГруппИнвалидности)
		|	И СведенияОбИнвалидностиФизлиц.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
		|";
			
		Запрос.Текст = ФизлицаИнвалидыБессрочноТекст;
		Запрос.УстановитьПараметр("парамФизЛицаИнвалидыБессрочно", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо"));

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыТекст + " КАК РасчетОтОбратногоДанныеОПВ
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеОПВ.ФизЛицо
		|	   И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
		|";

	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
	   
	   // для списка погашамых удержаний определим общую сумму
	   Запрос.УстановитьПараметр("парамСпособыРасчетаФиксированнойСуммой", ПроведениеРасчетов.ПолучитьСписокСпособовРасчетовФиксированнойСуммой());
	   Запрос.УстановитьПараметр("парамВалютаРегламентУчета", Константы.ВалютаРегламентированногоУчета.Получить());

	   // ПлановыеУдержания
	   // Поля:
	   //		ФизЛицо
	   //		ВидРасчета
	   //		ВидСтроки
	   //		Размер
	   //	Описание:
	   // Выбирает плановые и фактические удержания за период регистрации для физлиц, по которым производится расчет "от обратного".
	   // Фактические удержания берем только те, что введены как разовые, чтобы не задублировать плановые, если уже создан и проведен
	   // документ "Расчет ИПН, ОПВ и удержаний" и заново пересчитывают "от обратного"
		
	   ПлановыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1 КАК Размер,
		|	ПлановыеУдержания.Валюта1 КАК Валюта,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.Период < &парамПериодРегистрации ТОГДА &парамПериодРегистрации
		|		ИНАЧЕ ПлановыеУдержания.Период
		|	КОНЕЦ КАК ДатаНачала,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ПлановыеУдержания.ПериодЗавершения <= &парамКонецПериодаРегистрации
		|			ТОГДА КОНЕЦПЕРИОДА(ПлановыеУдержания.ПериодЗавершения, ДЕНЬ)
		|		ИНАЧЕ МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонецПериодаРегистрации))
		|	КОНЕЦ КАК ДатаОкончания
		|
		|ПОМЕСТИТЬ ВТ_ПлановыеУдержанияРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|		ПО ПлановыеУдержания.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК СледующиеПлановыеУдержания
		|		ПО ПлановыеУдержания.Организация = СледующиеПлановыеУдержания.Организация
		|			И ПлановыеУдержания.Физлицо = СледующиеПлановыеУдержания.Физлицо
		|			И ПлановыеУдержания.ВидРасчета = СледующиеПлановыеУдержания.ВидРасчета
		|			И ПлановыеУдержания.ДокументОснование = СледующиеПлановыеУдержания.ДокументОснование
		|			И СледующиеПлановыеУдержания.Период > ПлановыеУдержания.Период
		|			И СледующиеПлановыеУдержания.Период <= &парамКонецПериодаРегистрации
		|
		|ГДЕ
		|	ПлановыеУдержания.Организация = &парамГоловнаяОрганизация
		|	И ПлановыеУдержания.Период <= &парамКонецПериодаРегистрации
		|	И ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1) 
		|				И ПлановыеУдержания.ПериодЗавершения < &парамПериодРегистрации ТОГДА ПлановыеУдержания.ДействиеЗавершения
		|		ИНАЧЕ ПлановыеУдержания.Действие
		|	  КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1,
		|	ПлановыеУдержания.Валюта1,
		|	ПлановыеУдержания.Период,
		|	ПлановыеУдержания.ПериодЗавершения
		|
		|ИМЕЮЩИЕ
		|	МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонецПериодаРегистрации)) >= &парамПериодРегистрации
		|";
		Запрос.Текст = ПлановыеУдержанияТекст;
		Запрос.Выполнить();
		ПлановыеУдержанияТекст = "ВТ_ПлановыеУдержанияРасчетаОтОбратного";
		
		// В качестве фактических берем только те, что зарегистрированы как 
		// разовые, т.к. все остальные будут взяты из плановых
		ПлановыеИФактическиеУдержанияТекст = "
		|ВЫБРАТЬ
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	Удержания.ВидРасчета.ВычитатьИзБазыИПН КАК ВычитатьИзБазыИПН,
		|	Удержания.ВидРасчета.ВычитатьИзБазыОПВ КАК ВычитатьИзБазыОПВ,
		|	Удержания.ВидСтроки,
		|	СУММА(Удержания.Результат) КАК Результат,
		|	СУММА(ВЫБОР
		|			КОГДА Удержания.Валюта = &парамВалютаРегламентУчета ИЛИ Удержания.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|				ТОГДА Удержания.Размер
		|			ИНАЧЕ Удержания.Размер * ЕСТЬNULL(Валюты.Курс, 0) / ЕСТЬNULL(Валюты.Кратность, 1)
		|		  КОНЕЦ) КАК Размер
		|
		|ПОМЕСТИТЬ ВТ_ПлановыеИФактическиеУдержанияРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|			ПлановыеУдержания.ФизЛицо,
		|			ПлановыеУдержания.ВидРасчета,
		|			""ПлановыеУдержания"" КАК ВидСтроки,
		|			0 КАК Результат,
		|			ПлановыеУдержания.Размер,
		|			ПлановыеУдержания.Валюта
		|		ИЗ
		|			" + ПлановыеУдержанияТекст + " КАК ПлановыеУдержания
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Удержания.ФизЛицо,
		|		Удержания.ВидРасчета,
		|		""ФактическиеУдержания"" КАК ВидСтроки,
		|		Удержания.Результат,
		|		Удержания.Показатель1 КАК Размер,
		|		ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
		|	ИЗ
		|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО Удержания.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|	ГДЕ
		|		Удержания.Организация = &парамГоловнаяОрганизация 
		|		И Удержания.ПериодРегистрации = &парамПериодРегистрации
		|		И Удержания.Результат <> 0
		|		И НЕ (Удержания.Регистратор ССЫЛКА Документ.РасчетУдержанийРаботниковОрганизаций)
		|	) КАК Удержания
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты
		|	ПО Валюты.Период = &парамПериодРегистрации И Валюты.Валюта = Удержания.Валюта
		|
		|СГРУППИРОВАТЬ ПО
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.ВидРасчета.СпособРасчета,
		|	Удержания.ВидСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Удержания.ФизЛицо
		|";
		Запрос.Текст = ПлановыеИФактическиеУдержанияТекст;
		Запрос.Выполнить();
		ПлановыеИФактическиеУдержанияТекст = "ВТ_ПлановыеИФактическиеУдержанияРасчетаОтОбратного";
			   
		// КомпенсируемыеУдержания
		// Поля:
		//		ФизЛицо
		//		ВидУдержания
		//		Результат
		//		Размер
		//	Описание:
		// Рассчитывает результат по каждому компенсируемому виду удержаний 
		КомпенсируемыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	Основной.НомерСтроки,
		|	Основной.ВидРасчета КАК ВидРасчетаОтОбратного,
		|	ПлановыеИФактическиеУдержания.ФизЛицо,
		|	ПлановыеИФактическиеУдержания.ВидРасчета КАК ВидУдержания,
		|	ПлановыеИФактическиеУдержания.ВидСтроки,
		|
		|	МАКСИМУМ(ВЫБОР
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ФактическиеУдержания""
		|					ТОГДА ПлановыеИФактическиеУдержания.Результат
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета В (&парамСпособыРасчетаФиксированнойСуммой)
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|			КОНЕЦ) 
		|	+
		|	МАКСИМУМ(ВЫБОР
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|			КОНЕЦ) / 100 * 
		|	СУММА(ЕСТЬNULL(ОсновныеИДополнительныеНачисления.Результат, 0)) КАК СуммаКомпенсируемыхУдержаний,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|
		|ПОМЕСТИТЬ ВТ_КомпенсируемыеУдержанияРасчетаОтОбратного
		|ИЗ
		|	" + ИмяИсточника + " КАК Основной
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПлановыеИФактическиеУдержанияТекст + " КАК ПлановыеИФактическиеУдержания
		|		ПО Основной.ФизЛицо = ПлановыеИФактическиеУдержания.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК БазовыеВидыРасчета
		|		ПО ПлановыеИФактическиеУдержания.ВидРасчета = БазовыеВидыРасчета.Ссылка
		|		   И ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|		   И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
		|		ПО ПлановыеИФактическиеУдержания.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо
		|		   И БазовыеВидыРасчета.ВидРасчета = ОсновныеИДополнительныеНачисления.ВидРасчета
		|
		|ГДЕ
		|	" + ВнешнееУсловие + "
		|	И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
		|
		|СГРУППИРОВАТЬ ПО
		|	Основной.НомерСтроки,
		|	Основной.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ФизЛицо,
		|	ПлановыеИФактическиеУдержания.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ВидСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Основной.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ВидРасчета
		|";
		Запрос.Текст = КомпенсируемыеУдержанияТекст;
		Запрос.Выполнить();
		КомпенсируемыеУдержанияТекст = "ВТ_КомпенсируемыеУдержанияРасчетаОтОбратного";
			   
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						КомпенсируемыеУдержания.НомерСтроки,
		|						СУММА(КомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний) КАК СуммаКомпенсируемыхУдержаний,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПНиОПВ) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|						СУММА(КомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|					ИЗ
		|						" + КомпенсируемыеУдержанияТекст + " КАК КомпенсируемыеУдержания
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|													КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.Ссылка КАК ВидРасчетаОтОбратного,
		|													КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
		|												ИЗ
		|													ПланВидовРасчета." + ИмяПВР + ".КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний) КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
		|							ПО КомпенсируемыеУдержания.ВидРасчетаОтОбратного = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчетаОтОбратного 
		|							   И КомпенсируемыеУдержания.ВидУдержания = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
		|					СГРУППИРОВАТЬ ПО 
		|						КомпенсируемыеУдержания.НомерСтроки
		|					) КАК РасчетОтОбратногоКомпенсируемыеУдержания
		|	ПО Основной.НомерСтроки = РасчетОтОбратногоКомпенсируемыеУдержания.НомерСтроки
		|";
	КонецЕсли;
		
    // Разделим прочие начисления на включаемые внутрь расчета "от обратного" и начисляемые "сверху"
	РасчетОтОбратногоПрочиеНачисленияТекст = "
	|ВЫБРАТЬ
	|	Основной.НомерСтроки,
	|	СУММА(ОсновныеИДополнительныеНачисления.СуммаНачислений) КАК ОбщаяСуммаНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеОблагаемыйОПВДоход,
	|	СУММА(ВЫБОР
	|			КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеОблагаемыйИПНДоход,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL) 
	|				ТОГДА ОсновныеИДополнительныеНачисления.СуммаНачислений
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйОПВДоходВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеИДополнительныеНачисления.ДополнительныеДанные
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДополнительныеДанные
	|
	|ПОМЕСТИТЬ ВТ_ПрочиеНачисленияРасчетаОтОбратного
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|		ПО Основной.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Ссылка КАК Ссылка,
	|							ВидРасчета КАК ВидРасчета
	|						ИЗ
	|							ПланВидовРасчета." + ИмяПВР + ".ВключаемыеВРасчетОтОбратногоВидыНачислений 
	|"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|						ОБЪЕДИНИТЬ 
	|											   
	|						// для учета возможного разделения периода действия расчета от обратного 
	|						// на несколько строк в результате кадровых перемещений добавим
	|						// в качестве включаемых видов начислений сам вид расчета от обратного,
	|						// чтобы отнять из текущего результата результаты прошлых начислений от обратного
	|						// и за месяц выйти на правильную сумму.  Но это делаем только для начислений 
	|						// за отработанное время, для доплат 'от обратного' так не делаем
	|                       ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Основной.ВидРасчета КАК Ссылка,
	|							ПВР.Ссылка КАК ВидРасчета
	|						ИЗ
	|							" + ИмяИсточника + " КАК Основной
	|							ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета." + ИмяПВР + " КАК ПВР
	|								ПО ПВР.ОтОбратного
	|						ГДЕ
	|							" + ВнешнееУсловие + "
	|							И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
	|							И Основной.ВидРасчета.ЗачетОтработанногоВремени", "") + "
	|
	|							) КАК ВключаемыеВРасчетОтОбратногоВидыНачислений
	|		ПО Основной.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Основной.НомерСтроки";	
	Запрос.Текст = РасчетОтОбратногоПрочиеНачисленияТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоПрочиеНачисленияТекст = "ВТ_ПрочиеНачисленияРасчетаОтОбратного";
	
	// определим облагаемые ИПН и ОПВ доходы, начисленные текущий регистратором,
	// т.к. их еще нет в ИПНСведенияОДоходах и ОПВСведенияОДоходах
	РасчетОтОбратногоБазаИсчисленияТекущегоРегистратораТекст = "
	|ВЫБРАТЬ
	|	Начисления.ФизЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА Начисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйИПНДоход,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.ВидРасчета.ОблагаетсяИПН = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА Начисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеОблагаемыйИПНДоход,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА Начисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйОПВДоход,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.ВидРасчета.ОблагаетсяОПВ = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА Начисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеОблагаемыйОПВДоход
	|
	|ПОМЕСТИТЬ ВТ_БазаИсчисленияТекущегоРегистратораРасчетаОтОбратного
	|ИЗ
	|	(ВЫБРАТЬ
	|		Основной.ФизЛицо,
	|		Основной.ВидРасчета,
	|		Основной.Результат
	|	ИЗ
	|		" + ИмяИсточника + " КАК Основной
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|			ПО Основной.ФизЛицо = СписокФизЛиц.ФизЛицо
	|	ГДЕ
	|		Основной.Регистратор = &парамРегистратор"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|		И Основной.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)","
	|
	|	// если доп. начисления
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Дополнительный.ФизЛицо,
	|		Дополнительный.ВидРасчета,
	|		Дополнительный.Результат
	|	ИЗ
	|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК Дополнительный
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|			ПО Дополнительный.ФизЛицо = СписокФизЛиц.ФизЛицо
	|	ГДЕ
	|		Дополнительный.Регистратор = &парамРегистратор
	|		И Дополнительный.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)") + "
	|	) КАК Начисления
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Начисления.ФизЛицо";
	Запрос.Текст = РасчетОтОбратногоБазаИсчисленияТекущегоРегистратораТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоБазаИсчисленияТекущегоРегистратораТекст = "ВТ_БазаИсчисленияТекущегоРегистратораРасчетаОтОбратного";
	
	// общие для любого вида компенсируемых удержаний данные
	РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамПериодРегистрации, Организация = &парамОбособленноеПодразделение) КАК УчетнаяПолитикаНУ
	|	ПО ИСТИНА
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетОтОбратногоПрочиеНачисленияТекст + " КАК РасчетОтОбратногоПрочиеНачисления
	|	ПО Основной.НомерСтроки = РасчетОтОбратногоПрочиеНачисления.НомерСтроки
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетОтОбратногоБазаИсчисленияТекущегоРегистратораТекст + " КАК РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора
	|	ПО Основной.ФизЛицо = РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора.ФизЛицо
	|	   И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
	|
	|// определим компенсируемые удержания для каждого вида расчета от обратного
	|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		КомпенсируемыеУдержания.Ссылка КАК ВидРасчета,
	|		СУММА(ВЫБОР 
	|				КОГДА КомпенсируемыеУдержания.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог) 
	|					ТОГДА 1 
	|				ИНАЧЕ 0 
	|			КОНЕЦ) КАК КомпенсироватьИПН,
	|		СУММА(ВЫБОР 
	|				КОГДА КомпенсируемыеУдержания.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы)
	|					ТОГДА 1 
	|				ИНАЧЕ 0 
	|			КОНЕЦ) КАК КомпенсироватьОПВ,
	|		СУММА(ВЫБОР 
	|				КОГДА КомпенсируемыеУдержания.ВидРасчета НЕ В (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог), 
	|																ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование), 
	|																ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы)) 
	|					ТОГДА 1
	|				ИНАЧЕ 0 
	|			КОНЕЦ) КАК КомпенсироватьУдержания
	|	ИЗ
	|		ПланВидовРасчета." + ИмяПВР + ".КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеУдержания
	|	ГДЕ
	|		КомпенсируемыеУдержания.Ссылка В (&парамВидыРасчетаОтОбратного)
	|	СГРУППИРОВАТЬ ПО
	|		КомпенсируемыеУдержания.Ссылка) КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|ПО Основной.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|";
	
	СтруктураРезультат = Новый Структура();
	СтруктураРезультат.Вставить("РасчетОтОбратногоСоединенияТекст", РасчетОтОбратногоСоединенияТекст);
	СтруктураРезультат.Вставить("РасчетОтОбратногоПоляТекст", РасчетОтОбратногоПоляТекст);
	
	Возврат СтруктураРезультат;

КонецФункции // ПолучитьДанныеДляРасчетаОтОбратногоПосле2009()

// Функция формирует тексты запросов для получения данных, необходимых при расчете "от обратного" после 2010 года
// Возвращает структуру с текстами запроса для секций ВЫБРАТЬ И СОЕДИНЕНИЯ
//
Функция ПолучитьДанныеДляРасчетаОтОбратногоПосле2010(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет = Ложь,
									Сотрудники = НеОпределено,
									Налогоплательщик = Неопределено,
									КомментироватьРасчет = Ложь,
									Запрос,
									ВнешнееУсловие)

	РасчетОтОбратногоПоляТекст = ""; // строка с полями запроса
	РасчетОтОбратногоСоединенияТекст = ""; // строка с соединениями в запросе		

	ИмяИсточника = "РегистрРасчета." + ИмяРегистра;
	ИмяПВР = ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций", "ОсновныеНачисленияОрганизаций", "ДополнительныеНачисленияОрганизаций");
		// Поля, необходимые для расчета "от обратного" 
	РасчетОтОбратногоПоляТекст = "
	|ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьИПН,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|			ИЛИ ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоУчитыватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьУдержания, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьУдержания,
	|Основной.ВидРасчета.ВидДохода КАК ВидДохода,
	|Основной.ВидРасчета.ОблагаетсяОПВ КАК ОблагаетсяОПВ,
	|Основной.ВидРасчета.ОблагаетсяИПН КАК ОблагаетсяИПН,
	|Основной.ВидРасчета.УчетПрямыхНачислений КАК РасчетОтОбратногоУчитыватьПрямыеНачисления
	|";
			
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ЛьготаПоДоходу, 0) КАК ЛьготаПоДоходу,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ОблагаемыйДоход, 0) + ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПрочиеДоходы, 0)  КАК ОблагаемыйДоход,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляИПН,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПримененныйВычетЗаГод, 0) КАК ПримененныйВычетЗаГод,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПримененнаяЛьготаЗаГод, 0) КАК ПримененнаяЛьготаЗаГод,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.РазрешенныйВычетЗаГод, 0) КАК РазрешенныйВычетЗаГод,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПримененнаяЛьготаНаПредыдущемМестеРаботы, 0) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.НалоговыйВычетЛичный, 0) КАК НалоговыйВычетЛичный,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.НалоговыйВычетПлановый, 0) КАК НалоговыйВычетПлановый,
		|ВЫБОР 
		|	КОГДА ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК 
		|		ТОГДА ЕСТЬNULL(СведенияОСтавкахИПНПоНалогоплательщику.СтавкаНерезиденты, ЕСТЬNULL(СведенияОСтавкахИПН.СтавкаНерезиденты, 0))
		|	ИНАЧЕ ЕСТЬNULL(СведенияОСтавкахИПНПоНалогоплательщику.Ставка, ЕСТЬNULL(СведенияОСтавкахИПН.Ставка, 0))
		|КОНЕЦ / 100 КАК ПроцентИПН,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходПрямыхНачислений, 0) КАК ОблагаемыйИПНДоходПрямыхНачислений
		|";
			
	КонецЕсли;
			
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ВЫБОР
		|	КОГДА Основной.ФизЛицо В (&парамФизлицаПенсионеры)
		|		  ИЛИ Основной.ФизЛицо В (&парамФизЛицаБезПраваНаПенсию)
		|		  ИЛИ Основной.ФизЛицо В (&парамФизЛицаИнвалидыБессрочно) ТОГДА ЛОЖЬ
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ КАК ПризнакИсчисленияОПВ,				
		|ЕСТЬNULL(РасчетОтОбратногоДанныеОПВ.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляОПВ,
		|&парамРазмерОграниченияПоДоходамОПВ КАК РазмерОграниченияПоДоходамОПВ,
		|&парамСтавкаОПВ КАК ПроцентОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходПрямыхНачислений, 0) КАК ОблагаемыйОПВДоходПрямыхНачислений
		|";
	КонецЕсли;
	Запрос.УстановитьПараметр("парамСтавкаОПВ", ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Организация, Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы, ПериодРегистрации) / 100);
	
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний, 0) КАК СуммаКомпенсируемыхУдержаний,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН, 0) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПНиОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний, 0) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|";
	КонецЕсли;
			
	РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.НеОблагаемыйИПНДоход, 0) КАК НеОблагаемыйИПНДоходЗаМесяц,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.НеОблагаемыйОПВДоход, 0) КАК НеОблагаемыйОПВДоходЗаМесяц,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходВключаемыхНачислений, 0) + ЕСТЬNULL(ПрочиеВключаемыеНачисления.ОблагаемыйИПНДоходВключаемыхНачислений, 0) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходВключаемыхНачислений, 0) + ЕСТЬNULL(ПрочиеВключаемыеНачисления.ОблагаемыйОПВДоходВключаемыхНачислений, 0) КАК ОблагаемыйОПВДоходВключаемыхНачислений,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОбщаяСуммаНачислений, 0) + ЕСТЬNULL(ПрочиеВключаемыеНачисления.СуммаНачислений, 0) КАК ОбщаяСуммаНачислений,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаВключаемыхНачислений, 0) + ЕСТЬNULL(ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений, 0) КАК СуммаВключаемыхНачислений,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ДополнительныеДанные, 0) КАК РасчетОтОбратногоДополнительныеДанные
	|";

	// Далее идут тексты запросов по аналогии с функциями ПолучитьДанныеДляРасчетаИПН() и ПолучитьДанныеДляРасчетаОПВ().
	// Отличие по всем текстам в том, что в ПолучитьДанныеДляРасчетаИПН() используется &парамСписокФизЛиц,
	// а в расчете "от обратного" &парамРасчетОтОбратногоСписокФизЛиц.
	// В данном расчете предполагается, что расчет ИПН и ОПВ будет производится с установленным
	// в учетной политике по налоговому учету флажке ОтражениеПоПериодуРегистрации - все данные выбираются по ПериодРегистрации

	Запрос.УстановитьПараметр("парамРегистратор", 				Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 		НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачалоГода", 			    НачалоГода(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", ОбособленноеПодразделение);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", 	    Организация);

	Если Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить() Тогда
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	Налогоплательщик);
	Иначе
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	ОбособленноеПодразделение);
	КонецЕсли;

	// категория начисления
	Запрос.УстановитьПараметр("парамКатегорияНачисления", 		КатегорияРасчета);
	Запрос.УстановитьПараметр("парамПорядокКатегории", 			Перечисления.КатегорииРасчетов.Индекс(КатегорияРасчета));

	// Список видов расчета "от обратного"
	ВидыРасчетаОтОбратногоТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Основной.ВидРасчета
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета.ОтОбратного
	|";

	Запрос.Текст = ВидыРасчетаОтОбратногоТекст;
	Запрос.УстановитьПараметр("парамВидыРасчетаОтОбратного", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРасчета"));

	// Периоды
	// Таблица список физлиц, по которым необходимо выполнить расчет налога или взносов
	// Поля:
	//		Физлицо
	СписокФизЛицТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Основной.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
			
	Запрос.Текст = СписокФизЛицТекст;
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";

	// Составим текст запроса для вычисления всех месяцев периода
	ДатыПериодовГодаТекст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
					   |	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период
					   |
					   |ПОМЕСТИТЬ ВТ_ДатыПериодовГодаРасчетаОтОбратного
					   |ИЗ
					   |	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
					   |ГДЕ
					   |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) И &парамПериодРегистрации
					   |
					   |ИНДЕКСИРОВАТЬ ПО
					   |	Период";
	Запрос.Текст = ДатыПериодовГодаТекст;
	Запрос.Выполнить();
	ДатыПериодовГодаТекст = "ВТ_ДатыПериодовГодаРасчетаОтОбратного";

	// Списки видов расчета, категория расчета которых меньше текущей  (т.е. уже посчитанные)
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПВР.Ссылка
	|ИЗ
	|	ПланВидовРасчета." + ИмяПВР + " КАК ПВР
	|ГДЕ
	|	ПВР.КатегорияРасчета.Порядок < &парамПорядокКатегории
	|";

	Запрос.УстановитьПараметр("парамУжеРассчитанныеВидыРасчета", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));

	// Виды расчета, которые являются доходом в натуральной форме
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ОсновныеНачисления.Ссылка КАК ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисления
	|ГДЕ
	|	ОсновныеНачисления.ЯвляетсяПрочимДоходом
	|";
	Запрос.УстановитьПараметр("парамДоходыВНатуральнойФормеОсновные", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРасчета"));

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДополнительныеНачисления.Ссылка КАК ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисления
	|ГДЕ
	|	ДополнительныеНачисления.ЯвляетсяПрочимДоходом
	|";
	Запрос.УстановитьПараметр("парамДоходыВНатуральнойФормеДополнительные", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРасчета"));

	// ОсновныеИДополнительныеНачисления
	// Поля:
	//		ФизЛицо
	//		ВидРасчета
	//		Результат
	//	Описание:
	// Выбирает начисления за период регистрации по физлицам, для которых выполняется расчет "от обратного"
	ОсновныеИДополнительныеНачисленияТекст = "
	|ВЫБРАТЬ
	|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ОсновныеНачисления.Результат) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.Сторно 
	|				ТОГДА ОсновныеНачисления.ДополнительныеДанные
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ДополнительныеДанные,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.ВидРасчета В (&парамДоходыВНатуральнойФормеОсновные) 
	|				И ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				И НЕ ОсновныеНачисления.Сторно
	|				ТОГДА ОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		 КОНЕЦ) КАК СуммаНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.ВидРасчета В (&парамДоходыВНатуральнойФормеОсновные) 
	|				ТОГДА ОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		 КОНЕЦ) КАК СуммаВключаемыхНачислений
	|
	|ПОМЕСТИТЬ ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|ГДЕ
	|	ОсновныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И (ОсновныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ОсновныеНачисления.Регистратор = &парамРегистратор
	|				И ОсновныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))", "") + "
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисления.ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета,
	|	СУММА(ДополнительныеНачисления.Результат) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.Сторно 
	|				ТОГДА ДополнительныеНачисления.ДополнительныеДанные
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ДополнительныеДанные,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.ВидРасчета В (&парамДоходыВНатуральнойФормеДополнительные) 
	|				И ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				И НЕ ДополнительныеНачисления.Сторно
	|				ТОГДА ДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.ВидРасчета В (&парамДоходыВНатуральнойФормеДополнительные) 
	|				ТОГДА ДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаВключаемыхНачислений
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ДополнительныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|ГДЕ
	|	ДополнительныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ДополнительныеНачисления.ПериодРегистрации МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И ДополнительныеНачисления.Регистратор <> &парамРегистратор","
	|
	|	// если доп. начисления
	|	И (ДополнительныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ДополнительныеНачисления.Регистратор = &парамРегистратор
	|				И ДополнительныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))") + "
	|СГРУППИРОВАТЬ ПО
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидРасчета
	|";
	Запрос.Текст = ОсновныеИДополнительныеНачисленияТекст;
	Запрос.Выполнить();
	ОсновныеИДополнительныеНачисленияТекст = "ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного";

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
			
		// ФизлицаНеРезиденты
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц-нерезидентов
		ГражданствоФизЛицТекст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	ГражданствоФизЛиц.ФизЛицо,
		|	ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК
		|
		|ПОМЕСТИТЬ ВТ_ГражданствоФизЛицРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|				&парамКонецПериодаРегистрации, 
		|				ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + " КАК СписокФизЛиц)) КАК ГражданствоФизЛиц
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		Запрос.Текст = ГражданствоФизЛицТекст;
		Запрос.Выполнить();
		ГражданствоФизЛицТекст = "ВТ_ГражданствоФизЛицРасчетаОтОбратного";
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
		|	ПО Основной.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
		|";
		
		// РасчетныеПоказатели
		//	Поля:
		//		Период
		//		РазмерМРП
		//		РазмерМЗП
		//
		//	Описание:
		// Выбирает размер месячного расчетного показателя по периодам
		РасчетныеПоказателиТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказателиСрезПоследних.РазмерМРПДляЦелейНалогообложения КАК РазмерМРП,
		|	РасчетныеПоказателиСрезПоследних.РазмерМЗПДляЦелейНалогообложения КАК РазмерМЗП,
		|	РасчетныеПоказателиСрезПоследних.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
		|	РасчетныеПоказателиСрезПоследних.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
		|
		|ПОМЕСТИТЬ ВТ_РасчетныеПоказателиРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказателиСрезПоследних
		|";
		Запрос.Текст = РасчетныеПоказателиТекст;
		Запрос.Выполнить();
		РасчетныеПоказателиТекст = "ВТ_РасчетныеПоказателиРасчетаОтОбратного";
		
		// ПрименяемыеЛьготы
		//	Поля:
		//		Физлицо
		//		Период
		//		ПрименяетсяЛьготаУчастникаВОВ
		//		ПрименяетсяЛьготаПоИнвалидности
		//		ЛьготаПоДоходу
		//
		//	Описание:
		//	Выбирает по всем периодам года льготы на которые имеет право физлицо
		ПрименяемыеЛьготыТекст = 
		"ВЫБРАТЬ
		|	ИПНЛьготыФизлиц.Физлицо,
		|	
		|	ИПНЛьготыФизлиц.ОтношениеКИнвалидности,
		|	ИПНЛьготыФизлиц.ГруппаИнвалидности,
		|
		|	ВЫБОР
		|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > 0 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрименяетсяЛьготаУчастникаВОВ,
		|
		|	ВЫБОР
		|		КОГДА ИПНЛьготыФизлиц.ЛьготаПоИнвалидности > 0 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрименяетсяЛьготаПоИнвалидности,
		|
		|	ВЫБОР 
		|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
		|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ 
		|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
		|	КОНЕЦ КАК ЛьготаПоДоходу
		|
		|ПОМЕСТИТЬ ВТ_ПрименяемыеЛьготыРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		Периоды.Физлицо КАК Физлицо,
		|		ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности,
		|		ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности,
		|		ВЫБОР 
		|			КОГДА (ЛьготыФизлицПоИнвалидности.Физлицо) ЕСТЬ NULL 
		|				ТОГДА 0 
		|			ИНАЧЕ ВЫБОР 
		|					КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
		|							И ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности = ""III"" 
		|						ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
		|					ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
		|				  КОНЕЦ 
		|		КОНЕЦ КАК ЛьготаПоИнвалидности,
		|		ВЫБОР 
		|			КОГДА (ЛьготыФизлицУчастниковВОВ.Физлицо) ЕСТЬ NULL 
		|				ТОГДА 0 
		|			ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) 
		|		КОНЕЦ КАК ЛьготаУчастникаВОВ
		|		
		|	ИЗ
		|		" + СписокФизЛицТекст + " КАК Периоды
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
		|							&парамКонецПериодаРегистрации,
		|							ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ЛьготыФизлицПоИнвалидности
		|			ПО ЛьготыФизлицПоИнвалидности.Физлицо = Периоды.Физлицо
		|				И (ЛьготыФизЛицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
		|					ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизЛицПоИнвалидности.СрокДействияСправки, ДЕНЬ) >= &парамКонецПериодаРегистрации)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(
		|							&парамКонецПериодаРегистрации,
		|							ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ЛьготыФизлицУчастниковВОВ
		|			ПО ЛьготыФизлицУчастниковВОВ.Физлицо = Периоды.Физлицо
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
		|			ПО ИСТИНА) КАК ИПНЛьготыФизлиц
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИПНЛьготыФизлиц.Физлицо
		|";
		Запрос.Текст = ПрименяемыеЛьготыТекст;
		Запрос.Выполнить();
		ПрименяемыеЛьготыТекст = "ВТ_ПрименяемыеЛьготыРасчетаОтОбратного";
		
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		СуммаДоходаОборот
		//		СуммаВычетаОборот
		//
		//	Описание:
		// Выбирает общую сумму доходов и облагаемые налогом доходы за весь год по физлицам из СписокФизлиц
			
		// Здесь не учитываем доходы, записанные текущим регистратором, т.к. при проведении по ИПНСведенияОДоходах
		// они были еще в процессе расчета и их прибавим позже. А также отдельно выделяем доходы, начисленные в данной 
		// организации за текущий месяц, которые прошли через начисления, прочие доходы не выделяем.
		// Сведения о жилищных и страховых вычетах текущего месяца всегда берем из регистра сведений, т.к. в регистре накопления они 
		// появляются только при прямом расчете налога и поэтому могут отсутствовать, если сейчас первый раз рассчитываются начисления.
		// Т.к. расчет "от обратного" поддерживается только при учетной политикой с ОтражениемПоПериодуРегистрации,
		// то в регистрах Период, ПериодРегистрации и МесяцНалоговогоПериода всегда совпадают, поэтому 
		// устанавливаем отборы по Периоду, т.к. по нему система автоматически создает индекс.
		ДоходыТекст = 
		"ВЫБРАТЬ
		|	ИПНОбороты.Физлицо КАК ФизЛицо,
		|	СУММА(ИПНОбороты.СуммаДоходаОборот) КАК СуммаДоходаОборот,
		|	СУММА(ИПНОбороты.СуммаВычетаОборот) КАК СуммаВычетаОборот,
		|	СУММА(ВЫБОР
		|			КОГДА ИПНОбороты.НачисленоВТекущейОрганизации
		|				ТОГДА ИПНОбороты.СуммаДоходаОборот - ИПНОбороты.СуммаВычетаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаемыйДоходЗаМесяц,
		|	СУММА(ПрочиеДоходы) КАК ПрочиеДоходы
		|
		|ПОМЕСТИТЬ ВТ_ДоходыРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
		|		СУММА(0) КАК СуммаДоходаОборот,
		|		СУММА(ИПНСведенияОДоходах.СуммаВычета) КАК СуммаВычетаОборот,
		|		СУММА(ВЫБОР
		|				КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ТОГДА ИПНСведенияОДоходах.СуммаДохода - ИПНСведенияОДоходах.СуммаВычета
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ПрочиеДоходы,
		|		ВЫБОР
		|			КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ИЛИ ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РасчетНалоговПриПоступленииАктивовУслуг
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ КАК НачисленоВТекущейОрганизации
		|	ИЗ
		|		РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО ИПНСведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|	ГДЕ
		|		ИПНСведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|		И ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|		И ИПНСведенияОДоходах.Регистратор <> &парамРегистратор
		|		И НЕ(ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ИПНСведенияОДоходах.ФизЛицо,
		|		ИПНСведенияОДоходах.СпособНалогообложения,
		|		ИПНСведенияОДоходах.Регистратор) КАК ИПНОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПНОбороты.Физлицо";
		Запрос.Текст = ДоходыТекст;
		Запрос.Выполнить();
		ДоходыТекст = "ВТ_ДоходыРасчетаОтОбратного";

			
		// ИПНПримененныеЛьготыВычеты
		//	Поля:
		//		ФизЛицо
		//		ИсчисленныйНалог
		//		ПримененныеВычетыЛичные - уже примененные личные налоговые вычеты по ИПН
		//		ПримененнаяЛьгота - уже примененная льгота по ИПН
		//
		//	Описание:
		//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом и данные регистра
		//  СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
			
		// Здесь не берем данные за МесяцНалоговогоПериода в ИПНСведенияОДоходах, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Т.к. считаем только в случае если в учет. политике стоит ОтражениеПоПериодуРегистрации, то сразу накапливаем
		// итоги с начала года по предыдущий месяц включительно.
		ИПНПримененныеЛьготыВычетыТекст = 
		"ВЫБРАТЬ
		|	ИПНПримененныеВычетыЛьготы.ФизЛицо КАК ФизЛицо,
		|	СУММА(ИПНПримененныеВычетыЛьготы.ПримененныйВычетОборот) КАК ПримененныйВычетЗаГод,
		|	СУММА(ИПНПримененныеВычетыЛьготы.ПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаЗаГод,
		|	СУММА(ИПНПримененныеВычетыЛьготы.РазрешенныйВычетОборот) КАК РазрешенныйВычетЗаГод,
		|	СУММА(ИПНПримененныеВычетыЛьготы.ПримененнаяЛьготаНаПредыдущемМестеРаботы) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы
		|ПОМЕСТИТЬ ВТ_ИПНПримененныеЛьготыВычеты
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИПНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|		ИПНСведенияОДоходах.ПримененныйВычетОборот КАК ПримененныйВычетОборот,
		|		ИПНСведенияОДоходах.ПримененнаяЛьготаОборот КАК ПримененнаяЛьготаОборот,
		|		ИПНСведенияОДоходах.РазрешенныйВычетОборот КАК РазрешенныйВычетОборот,
		|		0 КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы
		|	ИЗ
		|		РегистрНакопления.ИПНСведенияОДоходах.Обороты(&парамНачалоГода, ДОБАВИТЬКДАТЕ(&парамПериодРегистрации, СЕКУНДА, -1), Месяц,
		|				Налогоплательщик = &парамНалогоплательщик И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНСведенияОДоходах
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо,
		|		0,
		|		0,
		|		0,
		|		ИПНСведенияПредыдущегоМестаРаботы.ПримененнаяЛьгота
		|	ИЗ
		|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК ИПНСведенияПредыдущегоМестаРаботы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	ГДЕ
		|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода
		|		И ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации
		|		И ИПНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик) КАК ИПНПримененныеВычетыЛьготы
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПНПримененныеВычетыЛьготы.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
		Запрос.Текст = ИПНПримененныеЛьготыВычетыТекст;
		Запрос.Выполнить();
		ИПНПримененныеЛьготыВычетыТекст = "ВТ_ИПНПримененныеЛьготыВычеты";
			

		// Здесь не берем имеющийся за МесяцНалоговогоПериода в ОПВРасчетыСФондами взнос, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Т.к. расчет ведется только если в учет. политике установлено ОтражениеПоПериодуРегистрации,
		// то анализовать надо только текущий месяц. Поэтому запрос к ОПВРасчетыСФондами вообще не требуется.

		// ПрименениеВычетовВОрганизации
		//	Поля:
		//		Физлицо,
		//		Период
		//
		// Описание:
		//	Выбирает список физлиц + периоды в которые применяются налоговые вычеты по 
		//	заданной организации
		ПрименениеВычетовВОрганизацииТекст = 
		"ВЫБРАТЬ
		|	ИПНПрименениеВычетов.Физлицо КАК Физлицо
		|
		|ПОМЕСТИТЬ ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ИПНПрименениеВычетов.СрезПоследних(
		|					&парамПериодРегистрации,
		|					ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНПрименениеВычетов
		|
		|ГДЕ
		|	ИПНПрименениеВычетов.Налогоплательщик = &парамНалогоплательщик
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		Запрос.Текст = ПрименениеВычетовВОрганизацииТекст;
		Запрос.Выполнить();
		ПрименениеВычетовВОрганизацииТекст = "ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного";

		// ОтработанноеВремя
		//	Поля:
		//		Физлицо,
		//		Период,
		//		ПредоставлятьВычет
		//
		// Описание:
		//	Список физлиц-периодов с правом применения налоговых вычетов по отработанному времени
		//	
		
		ОтработанноеВремяТекст = 
		"ВЫБРАТЬ
		|	ОтработанноеВремя.ФизЛицо,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ОтработанноеВремя.ДатаС <= ОтработанноеВремя.ДатаПо
		|					ТОГДА РАЗНОСТЬДАТ(ОтработанноеВремя.ДатаС, ОтработанноеВремя.ДатаПо, ДЕНЬ) + 1
		|				ИНАЧЕ 0
		|			КОНЕЦ >= 16
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПредоставлятьВычет
		|
		|ПОМЕСТИТЬ ВТ_ОтработанноеВремяРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОтработанноеВремя.ФизЛицо,
		|		ОтработанноеВремя.Период,
		|
		|		ВЫБОР 
		|			// вообще не был принят в штат - не считаем отработанное время
		|			КОГДА ОтработанноеВремя.ДатаПриема = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
		|			// принят в штат в предыдущих месяцах - считаем с первого числа месяца
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаПриема, МЕСЯЦ) < ОтработанноеВремя.Период 
		|				ТОГДА ОтработанноеВремя.Период
		|			// принят в штат в текущем месяце - считаем с даты приема
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаПриема, МЕСЯЦ) = ОтработанноеВремя.Период
		|				ТОГДА ОтработанноеВремя.ДатаПриема
		|			// сюда попасть не должны - не считаем 
		|			ИНАЧЕ
		|				ДАТАВРЕМЯ(3999, 12, 31)
		|		КОНЕЦ КАК ДатаС,
		|
		|		ВЫБОР 
		|			// повторный прием в ту же организацию и еще не уволен 
		|			// или еще не уволен после первого приема - считаем до конца месяца
		|			КОГДА ОтработанноеВремя.ДатаПриема > ОтработанноеВремя.ДатаУвольнения 
		|				  ИЛИ ГОД(ОтработанноеВремя.ДатаУвольнения) = 1
		|				ТОГДА КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
		|			// уволен до начала месяца - не считаем
		|			КОГДА ОтработанноеВремя.ДатаУвольнения < ОтработанноеВремя.Период
		|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|			// уволен в текущем месяце - считаем до даты увольнения
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаУвольнения, МЕСЯЦ) = ОтработанноеВремя.Период
		|               ТОГДА ОтработанноеВремя.ДатаУвольнения
		|			// еще не уволен - считаем до конца месяца
		|			ИНАЧЕ
		|				КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
		|		КОНЕЦ КАК ДатаПо
		|
		|	ИЗ			
		|		(ВЫБРАТЬ
		|			&парамПериодРегистрации КАК Период,
		|			РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
		|			МАКСИМУМ(ВЫБОР 
		|						КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу) 
		|							ТОГДА РаботникиОрганизации.Период
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				 	 КОНЕЦ) КАК ДатаПриема,
		|			МАКСИМУМ(ВЫБОР 
		|						КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|							ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				 	 КОНЕЦ) КАК ДатаУвольнения
		|		ИЗ
		|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|
		|		ГДЕ
		|			РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
		|			И РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|			И РаботникиОрганизации.Период <= &парамКонецПериодаРегистрации
		|			И РаботникиОрганизации.ПричинаИзмененияСостояния В (ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу), 
		|																ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
		|
		|		СГРУППИРОВАТЬ ПО 
		|			РаботникиОрганизации.Сотрудник.ФизЛицо) КАК ОтработанноеВремя) КАК ОтработанноеВремя
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОтработанноеВремя.ФизЛицо
		|";

		Запрос.Текст = ОтработанноеВремяТекст;
		Запрос.Выполнить();
		ОтработанноеВремяТекст = "ВТ_ОтработанноеВремяРасчетаОтОбратного";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + ОтработанноеВремяТекст;

		// ПрименяемыеВычетыТекст
		//	Поля:
		//		Физлицо
		//		Период
		//		НалоговыйВычетЛичный
		//		НалоговыйВычетИждивенцев
		//		НалоговыйВычетПредыдущегоМестаРаботы
		//
		//	Описание:
		//	Выбирает по всем периодам года налоговын вычеты на которые имеет право физлицо
		ПрименяемыеВычетыТекст = 
		"ВЫБРАТЬ
		|	ВычетыФизлиц.Физлицо КАК Физлицо,
		|	ВЫБОР 
		|		КОГДА (ПрименениеВычетов.Физлицо) ЕСТЬ NULL 
		|				ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) 
		|				ИЛИ НЕ ЕСТЬNULL(ОтработанноеВремя.ПредоставлятьВычет, ЛОЖЬ)
		|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
		|			ТОГДА 0 
		|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
		|	КОНЕЦ КАК НалоговыйВычетЛичный,
		|	ПлановыеВычетыФизЛиц.СуммаВычета КАК НалоговыйВычетПлановый
		|
		|ПОМЕСТИТЬ ВТ_ПрименяемыеВычетыРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ИПННалоговыеВычетыФизлиц.СрезПоследних(
		|				&парамКонецПериодаРегистрации,
		|				ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ВычетыФизлиц
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
		|		ПО ИСТИНА
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименениеВычетовВОрганизацииТекст + " КАК ПрименениеВычетов
		|		ПО ПрименениеВычетов.Физлицо = ВычетыФизлиц.Физлицо 
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОтработанноеВремяТекст + " КАК ОтработанноеВремя
		|		ПО ОтработанноеВремя.ФизЛицо = ВычетыФизлиц.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
		|		ПО ГражданствоФизЛиц.ФизЛицо = ВычетыФизлиц.ФизЛицо
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИПНПлановыеВычеты.Физлицо КАК Физлицо,
		|			СУММА(ИПНПлановыеВычеты.СуммаВычета) КАК СуммаВычета
		|		ИЗ
		|			РегистрСведений.ИПНПлановыеНалоговыеВычетыФизлиц.СрезПоследних(
		|					&парамКонецПериодаРегистрации,
		|					Налогоплательщик = &парамНалогоплательщик
		|						И (МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации)
		|						И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНПлановыеВычеты
		|	
		|		СГРУППИРОВАТЬ ПО
		|			ИПНПлановыеВычеты.Физлицо) КАК ПлановыеВычетыФизЛиц
		|		ПО ВычетыФизлиц.Физлицо = ПлановыеВычетыФизЛиц.Физлицо
		|ИНДЕКСИРОВАТЬ ПО
		|	ВычетыФизлиц.Физлицо
		|";
		Запрос.Текст = ПрименяемыеВычетыТекст;
		Запрос.Выполнить();
		ПрименяемыеВычетыТекст = "ВТ_ПрименяемыеВычетыРасчетаОтОбратного";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + ПрименяемыеВычетыТекст;

		БазаДляИсчисленияИПНТекст = "
		|ВЫБРАТЬ
		|	СписокФизЛиц.ФизЛицо,
		|	ЕСТЬNULL(Доходы.СуммаДоходаОборот, 0) - ЕСТЬNULL(Доходы.СуммаВычетаОборот, 0) КАК ОблагаемыйДоход,
		|	ЕСТЬNULL(Доходы.ПрочиеДоходы, 0) КАК ПрочиеДоходы,
		|	
		|	ЕСТЬNULL(ПрименяемыеЛьготы.ЛьготаПоДоходу, 0) КАК ЛьготаПоДоходу,
		|
		|	ЕСТЬNULL(ИПНПримененныеЛьготыВычеты.ПримененныйВычетЗаГод, 0) КАК ПримененныйВычетЗаГод,
		|	ЕСТЬNULL(ИПНПримененныеЛьготыВычеты.ПримененнаяЛьготаЗаГод, 0) КАК ПримененнаяЛьготаЗаГод,
		|	ЕСТЬNULL(ИПНПримененныеЛьготыВычеты.РазрешенныйВычетЗаГод, 0) КАК РазрешенныйВычетЗаГод,
		|	ЕСТЬNULL(ИПНПримененныеЛьготыВычеты.ПримененнаяЛьготаНаПредыдущемМестеРаботы, 0) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
		|
		|	ЕСТЬNULL(ПрименяемыеВычеты.НалоговыйВычетЛичный, 0) КАК НалоговыйВычетЛичный,
		|   ЕСТЬNULL(ПрименяемыеВычеты.НалоговыйВычетПлановый, 0) КАК НалоговыйВычетПлановый
		|
		|ПОМЕСТИТЬ ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного
		|ИЗ
		|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыТекст + " КАК Доходы
		|		ПО СписокФизЛиц.ФизЛицо = Доходы.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеЛьготыТекст + " КАК ПрименяемыеЛьготы
		|		ПО СписокФизЛиц.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНПримененныеЛьготыВычетыТекст + " КАК ИПНПримененныеЛьготыВычеты
		|		ПО СписокФизЛиц.ФизЛицо = ИПНПримененныеЛьготыВычеты.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеВычетыТекст + " КАК ПрименяемыеВычеты
		|		ПО СписокФизЛиц.ФизЛицо = ПрименяемыеВычеты.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СписокФизЛиц.ФизЛицо
		|";
		
		Запрос.Текст = БазаДляИсчисленияИПНТекст;
		Запрос.Выполнить();
		БазаДляИсчисленияИПНТекст = "ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + БазаДляИсчисленияИПНТекст;

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + БазаДляИсчисленияИПНТекст + " КАК РасчетОтОбратногоДанныеИПН
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеИПН.ФизЛицо
		|	   И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
		|";

		СведенияОСтавкахИПНПоНалогоплательщикуТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахИПНПоНалогоплательщику.ВидДохода,
			|	СведенияОСтавкахИПНПоНалогоплательщику.Ставка,
			|	СведенияОСтавкахИПНПоНалогоплательщику.СтавкаНерезиденты
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахИПНПоНалогоплательщику
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахИПН.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = &парамНалогоплательщик) КАК СведенияОСтавкахИПНПоНалогоплательщику";
			
		Запрос.Текст = СведенияОСтавкахИПНПоНалогоплательщикуТекст;
		Запрос.Выполнить();
		СведенияОСтавкахИПНПоНалогоплательщикуТекст = "ВТ_СведенияОСтавкахИПНПоНалогоплательщику";
		
		СведенияОСтавкахИПНТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахИПН.ВидДохода,
			|	СведенияОСтавкахИПН.Ставка,
			|	СведенияОСтавкахИПН.СтавкаНерезиденты
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахИПН
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахИПН.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК СведенияОСтавкахИПН";
			
		Запрос.Текст = СведенияОСтавкахИПНТекст;
		Запрос.Выполнить();
		СведенияОСтавкахИПНТекст = "ВТ_СведенияОСтавкахИПН";

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахИПНПоНалогоплательщикуТекст + " КАК СведенияОСтавкахИПНПоНалогоплательщику
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахИПНПоНалогоплательщику.ВидДохода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахИПНТекст + " КАК СведенияОСтавкахИПН
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахИПН.ВидДохода
		|";
		
	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
			
		СписокГруппИнвалидности = Новый СписокЗначений;
		СписокГруппИнвалидности.Добавить("I");
		СписокГруппИнвалидности.Добавить("II");
			
		Запрос.УстановитьПараметр("парамСписокГруппИнвалидности",  СписокГруппИнвалидности);
			
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		ОблагаемыйДоход
		//
		//	Описание:
		// Выбирает облагаемые взносами доходы за периоды по физлицам
		
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то доходы всегда выбираются только за расчетный месяц. Отдельно выделим прочие доходы, зарегистрированные в обход начислений.
		ДоходыТекст = "
		|ВЫБРАТЬ
		|	ОПВСведенияОДоходах.ФизЛицо КАК Физлицо,
		|	СУММА(ОПВСведенияОДоходах.СуммаДохода - ОПВСведенияОДоходах.СуммаВычета) КАК БазаДляИсчисленияОПВ,
		|	СУММА(ВЫБОР
		|			КОГДА ОПВСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|				ТОГДА ОПВСведенияОДоходах.СуммаДохода - ОПВСведенияОДоходах.СуммаВычета
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПрочиеДоходы
		|
		|ПОМЕСТИТЬ ВТ_ДоходыОПВРасчетаОтОбратного
		|ИЗ
		|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|		ПО ОПВСведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|ГДЕ
		|	ОПВСведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|	И ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|	
		|СГРУППИРОВАТЬ ПО
		|	ОПВСведенияОДоходах.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОПВСведенияОДоходах.ФизЛицо";
		
		Запрос.Текст = ДоходыТекст;
		Запрос.Выполнить();
		ДоходыТекст = "ВТ_ДоходыОПВРасчетаОтОбратного";

		// Здесь не берем имеющийся за МесяцНалоговогоПериода в ОПВРасчетыСФондами взнос, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то ранее исчисленные взносы всегда выбираются только за расчетный месяц. Поэтому запроса к ОПВРасчетыСФондами вообще не требуется.

		// РазмерОграниченияПоДоходам
		РазмерОграниченияПоДоходамТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказатели.РазмерМЗП * 75 КАК ОграничениеПоДоходам
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказатели
		|";
			
		Запрос.Текст = РазмерОграниченияПоДоходамТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", Выборка.ОграничениеПоДоходам);
		Иначе
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", 0);
		КонецЕсли;

		// ФизлицаБезПраваНаПенсию
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц не имеющих право на пенсионное обеспечение
		ФизлицаБезПраваНаПенсиюТекст = "
		|ВЫБРАТЬ
		|	ГражданствоФизЛиц.ФизЛицо
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ГражданствоФизЛиц
		|
		|ГДЕ
		|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)";
				
		Запрос.Текст = ФизлицаБезПраваНаПенсиюТекст;
		Запрос.УстановитьПараметр("парамФизЛицаБезПраваНаПенсию", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо"));
			
		// ФизлицаПенсионеры
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц достигших пенсионный возраст
		ФизлицаПенсионерыТекст = "
		|ВЫБРАТЬ
		|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
		|ИЗ
		|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОПенсионномОбеспеченииФизЛиц
		|
		|ГДЕ
		|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)";
			
		Запрос.Текст = ФизлицаПенсионерыТекст;
		Запрос.УстановитьПараметр("парамФизЛицаПенсионеры", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо"));

		// ФизлицаИнвалидыБессрочно
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц-инвалидов I и II группы, у которых инвалидность установлена бессрочно
		ФизлицаИнвалидыБессрочноТекст = "
		|ВЫБРАТЬ
		|	СведенияОбИнвалидностиФизлиц.ФизЛицо
		|ИЗ
		|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОбИнвалидностиФизлиц
		|
		|ГДЕ
		|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
		|	И СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности В (&парамСписокГруппИнвалидности)
		|	И СведенияОбИнвалидностиФизлиц.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
		|";
			
		Запрос.Текст = ФизлицаИнвалидыБессрочноТекст;
		Запрос.УстановитьПараметр("парамФизЛицаИнвалидыБессрочно", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо"));

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыТекст + " КАК РасчетОтОбратногоДанныеОПВ
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеОПВ.ФизЛицо
		|	   И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
		|";

	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
	   
	   // для списка погашамых удержаний определим общую сумму
	   Запрос.УстановитьПараметр("парамСпособыРасчетаФиксированнойСуммой", ПроведениеРасчетов.ПолучитьСписокСпособовРасчетовФиксированнойСуммой());
	   Запрос.УстановитьПараметр("парамВалютаРегламентУчета", Константы.ВалютаРегламентированногоУчета.Получить());

	   // ПлановыеУдержания
	   // Поля:
	   //		ФизЛицо
	   //		ВидРасчета
	   //		ВидСтроки
	   //		Размер
	   //	Описание:
	   // Выбирает плановые и фактические удержания за период регистрации для физлиц, по которым производится расчет "от обратного".
	   // Фактические удержания берем только те, что введены как разовые, чтобы не задублировать плановые, если уже создан и проведен
	   // документ "Расчет ИПН, ОПВ и удержаний" и заново пересчитывают "от обратного"
		
	   ПлановыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1 КАК Размер,
		|	ПлановыеУдержания.Валюта1 КАК Валюта,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.Период < &парамПериодРегистрации ТОГДА &парамПериодРегистрации
		|		ИНАЧЕ ПлановыеУдержания.Период
		|	КОНЕЦ КАК ДатаНачала,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ПлановыеУдержания.ПериодЗавершения <= &парамКонецПериодаРегистрации
		|			ТОГДА КОНЕЦПЕРИОДА(ПлановыеУдержания.ПериодЗавершения, ДЕНЬ)
		|		ИНАЧЕ МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонецПериодаРегистрации))
		|	КОНЕЦ КАК ДатаОкончания
		|
		|ПОМЕСТИТЬ ВТ_ПлановыеУдержанияРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|		ПО ПлановыеУдержания.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК СледующиеПлановыеУдержания
		|		ПО ПлановыеУдержания.Организация = СледующиеПлановыеУдержания.Организация
		|			И ПлановыеУдержания.Физлицо = СледующиеПлановыеУдержания.Физлицо
		|			И ПлановыеУдержания.ВидРасчета = СледующиеПлановыеУдержания.ВидРасчета
		|			И ПлановыеУдержания.ДокументОснование = СледующиеПлановыеУдержания.ДокументОснование
		|			И СледующиеПлановыеУдержания.Период > ПлановыеУдержания.Период
		|			И СледующиеПлановыеУдержания.Период <= &парамКонецПериодаРегистрации
		|
		|ГДЕ
		|	ПлановыеУдержания.Организация = &парамГоловнаяОрганизация
		|	И ПлановыеУдержания.Период <= &парамКонецПериодаРегистрации
		|	И ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1) 
		|				И ПлановыеУдержания.ПериодЗавершения < &парамПериодРегистрации ТОГДА ПлановыеУдержания.ДействиеЗавершения
		|		ИНАЧЕ ПлановыеУдержания.Действие
		|	  КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1,
		|	ПлановыеУдержания.Валюта1,
		|	ПлановыеУдержания.Период,
		|	ПлановыеУдержания.ПериодЗавершения
		|
		|ИМЕЮЩИЕ
		|	МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонецПериодаРегистрации)) >= &парамПериодРегистрации
		|";
		Запрос.Текст = ПлановыеУдержанияТекст;
		Запрос.Выполнить();
		ПлановыеУдержанияТекст = "ВТ_ПлановыеУдержанияРасчетаОтОбратного";
		
		// В качестве фактических берем только те, что зарегистрированы как 
		// разовые, т.к. все остальные будут взяты из плановых
		ПлановыеИФактическиеУдержанияТекст = "
		|ВЫБРАТЬ
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	Удержания.ВидРасчета.ВычитатьИзБазыИПН КАК ВычитатьИзБазыИПН,
		|	Удержания.ВидРасчета.ВычитатьИзБазыОПВ КАК ВычитатьИзБазыОПВ,
		|	Удержания.ВидСтроки,
		|	СУММА(Удержания.Результат) КАК Результат,
		|	СУММА(ВЫБОР
		|			КОГДА Удержания.Валюта = &парамВалютаРегламентУчета ИЛИ Удержания.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|				ТОГДА Удержания.Размер
		|			ИНАЧЕ Удержания.Размер * ЕСТЬNULL(Валюты.Курс, 0) / ЕСТЬNULL(Валюты.Кратность, 1)
		|		  КОНЕЦ) КАК Размер
		|
		|ПОМЕСТИТЬ ВТ_ПлановыеИФактическиеУдержанияРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|			ПлановыеУдержания.ФизЛицо,
		|			ПлановыеУдержания.ВидРасчета,
		|			""ПлановыеУдержания"" КАК ВидСтроки,
		|			0 КАК Результат,
		|			ПлановыеУдержания.Размер,
		|			ПлановыеУдержания.Валюта
		|		ИЗ
		|			" + ПлановыеУдержанияТекст + " КАК ПлановыеУдержания
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Удержания.ФизЛицо,
		|		Удержания.ВидРасчета,
		|		""ФактическиеУдержания"" КАК ВидСтроки,
		|		Удержания.Результат,
		|		Удержания.Показатель1 КАК Размер,
		|		ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
		|	ИЗ
		|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО Удержания.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|	ГДЕ
		|		Удержания.Организация = &парамГоловнаяОрганизация 
		|		И Удержания.ПериодРегистрации = &парамПериодРегистрации
		|		И Удержания.Результат <> 0
		|		И НЕ (Удержания.Регистратор ССЫЛКА Документ.РасчетУдержанийРаботниковОрганизаций)
		|	) КАК Удержания
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты
		|	ПО Валюты.Период = &парамПериодРегистрации И Валюты.Валюта = Удержания.Валюта
		|
		|СГРУППИРОВАТЬ ПО
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.ВидРасчета.СпособРасчета,
		|	Удержания.ВидСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Удержания.ФизЛицо
		|";
		Запрос.Текст = ПлановыеИФактическиеУдержанияТекст;
		Запрос.Выполнить();
		ПлановыеИФактическиеУдержанияТекст = "ВТ_ПлановыеИФактическиеУдержанияРасчетаОтОбратного";
			   
		// КомпенсируемыеУдержания
		// Поля:
		//		ФизЛицо
		//		ВидУдержания
		//		Результат
		//		Размер
		//	Описание:
		// Рассчитывает результат по каждому компенсируемому виду удержаний 
		КомпенсируемыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	Основной.НомерСтроки,
		|	Основной.ВидРасчета КАК ВидРасчетаОтОбратного,
		|	ПлановыеИФактическиеУдержания.ФизЛицо,
		|	ПлановыеИФактическиеУдержания.ВидРасчета КАК ВидУдержания,
		|	ПлановыеИФактическиеУдержания.ВидСтроки,
		|
		|	МАКСИМУМ(ВЫБОР
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ФактическиеУдержания""
		|					ТОГДА ПлановыеИФактическиеУдержания.Результат
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета В (&парамСпособыРасчетаФиксированнойСуммой)
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|			КОНЕЦ) 
		|	+
		|	МАКСИМУМ(ВЫБОР
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|			КОНЕЦ) / 100 * 
		|	СУММА(ЕСТЬNULL(ОсновныеИДополнительныеНачисления.Результат, 0)) КАК СуммаКомпенсируемыхУдержаний,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|
		|ПОМЕСТИТЬ ВТ_КомпенсируемыеУдержанияРасчетаОтОбратного
		|ИЗ
		|	" + ИмяИсточника + " КАК Основной
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПлановыеИФактическиеУдержанияТекст + " КАК ПлановыеИФактическиеУдержания
		|		ПО Основной.ФизЛицо = ПлановыеИФактическиеУдержания.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК БазовыеВидыРасчета
		|		ПО ПлановыеИФактическиеУдержания.ВидРасчета = БазовыеВидыРасчета.Ссылка
		|		   И ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|		   И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ВключаемыеВидыНачислений.Ссылка КАК Ссылка,
		|	ОсновныеИДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ОсновныеИДополнительныеНачисления.Результат КАК Результат
		|ИЗ
		|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВключаемыеВидыНачислений.Ссылка КАК Ссылка,
		|			ВключаемыеВидыНачислений.ВидРасчета КАК ВидРасчета
		|		ИЗ
		|			ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ВключаемыеВидыНачислений
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ВключаемыеВидыНачислений.Ссылка,
		|			ВключаемыеВидыНачислений.ВидРасчета
		|		ИЗ
		|			ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ВключаемыеВидыНачислений) КАК ВключаемыеВидыНачислений
		|		ПО ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.ВидРасчета) КАК ОсновныеИДополнительныеНачисления
		|	ПО ПлановыеИФактическиеУдержания.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо
		|	   И БазовыеВидыРасчета.ВидРасчета = ОсновныеИДополнительныеНачисления.ВидРасчета
		|		И Основной.ВидРасчета = ОсновныеИДополнительныеНачисления.Ссылка
		|
		|ГДЕ
		|	" + ВнешнееУсловие + "
		|	И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
		|
		|СГРУППИРОВАТЬ ПО
		|	Основной.НомерСтроки,
		|	Основной.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ФизЛицо,
		|	ПлановыеИФактическиеУдержания.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ВидСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Основной.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ВидРасчета
		|";
		Запрос.Текст = КомпенсируемыеУдержанияТекст;
		Запрос.Выполнить();
		КомпенсируемыеУдержанияТекст = "ВТ_КомпенсируемыеУдержанияРасчетаОтОбратного";
			   
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						КомпенсируемыеУдержания.НомерСтроки,
		|						СУММА(КомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний) КАК СуммаКомпенсируемыхУдержаний,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПНиОПВ) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|						СУММА(КомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|					ИЗ
		|						" + КомпенсируемыеУдержанияТекст + " КАК КомпенсируемыеУдержания
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|													КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.Ссылка КАК ВидРасчетаОтОбратного,
		|													КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
		|												ИЗ
		|													ПланВидовРасчета." + ИмяПВР + ".КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний) КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
		|							ПО КомпенсируемыеУдержания.ВидРасчетаОтОбратного = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчетаОтОбратного 
		|							   И КомпенсируемыеУдержания.ВидУдержания = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
		|					СГРУППИРОВАТЬ ПО 
		|						КомпенсируемыеУдержания.НомерСтроки
		|					) КАК РасчетОтОбратногоКомпенсируемыеУдержания
		|	ПО Основной.НомерСтроки = РасчетОтОбратногоКомпенсируемыеУдержания.НомерСтроки
		|";
	КонецЕсли;
		
    // Разделим прочие начисления на включаемые внутрь расчета "от обратного" и начисляемые "сверху"
	РасчетОтОбратногоПрочиеНачисленияТекст = "
	|ВЫБРАТЬ
	|	Основной.НомерСтроки,
	|	СУММА(ОсновныеИДополнительныеНачисления.СуммаНачислений) КАК ОбщаяСуммаНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеОблагаемыйОПВДоход,
	|	СУММА(ВЫБОР
	|			КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеОблагаемыйИПНДоход,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL) 
	|					И НЕ ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеИДополнительныеНачисления.СуммаВключаемыхНачислений
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
	|					И НЕ ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
	|					И НЕ ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйОПВДоходВключаемыхНачислений, ";
	
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "	
		|	СУММА(ВЫБОР
		|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
		|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ - ВЫБОР
		|			КОГДА (НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного)
		|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ * ВЫБОР
		|			КОГДА (НЕ Основной.ФизЛицо В (&парамФизлицаПенсионеры))
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ *&парамСтавкаОПВ) КАК ОблагаемыйИПНДоходПрямыхНачислений, ";
	КонецЕсли;

	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
		РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "
		|		СУММА(ВЫБОР
		|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
		|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаемыйОПВДоходПрямыхНачислений, ";
	КонецЕсли;

	РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "
	|	СУММА(ВЫБОР
	|			КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеИДополнительныеНачисления.ДополнительныеДанные
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДополнительныеДанные
	|
	|ПОМЕСТИТЬ ВТ_ПрочиеНачисленияРасчетаОтОбратного
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|		ПО Основной.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Ссылка КАК Ссылка,
	|							ВидРасчета КАК ВидРасчета
	|						ИЗ
	|							ПланВидовРасчета." + ИмяПВР + ".ВключаемыеВРасчетОтОбратногоВидыНачислений) КАК ВключаемыеВРасчетОтОбратногоВидыНачислений
	|		ПО Основной.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Основной.НомерСтроки";	
	Запрос.Текст = РасчетОтОбратногоПрочиеНачисленияТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоПрочиеНачисленияТекст = "ВТ_ПрочиеНачисленияРасчетаОтОбратного";
	
	// определим облагаемые ИПН и ОПВ доходы, начисленные текущий регистратором,
	// т.к. их еще нет в ИПНСведенияОДоходах и ОПВСведенияОДоходах
	РасчетОтОбратногоБазаИсчисленияТекущегоРегистратораТекст = "
	|ВЫБРАТЬ
	|	Начисления.ФизЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА Начисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйИПНДоход,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.ВидРасчета.ОблагаетсяИПН = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА Начисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеОблагаемыйИПНДоход,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА Начисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйОПВДоход,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.ВидРасчета.ОблагаетсяОПВ = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом) 
	|				ТОГДА Начисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеОблагаемыйОПВДоход
	|
	|ПОМЕСТИТЬ ВТ_БазаИсчисленияТекущегоРегистратораРасчетаОтОбратного
	|ИЗ
	|	(ВЫБРАТЬ
	|		Основной.ФизЛицо,
	|		Основной.ВидРасчета,
	|		Основной.Результат
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|			ПО Основной.ФизЛицо = СписокФизЛиц.ФизЛицо
	|	ГДЕ
	|		Основной.Регистратор = &парамРегистратор"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|		И Основной.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)","
	|
	|	// если доп. начисления
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Дополнительный.ФизЛицо,
	|		Дополнительный.ВидРасчета,
	|		Дополнительный.Результат
	|	ИЗ
	|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК Дополнительный
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|			ПО Дополнительный.ФизЛицо = СписокФизЛиц.ФизЛицо
	|	ГДЕ
	|		Дополнительный.Регистратор = &парамРегистратор
	|		И Дополнительный.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)") + "
	|	) КАК Начисления
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Начисления.ФизЛицо";
	Запрос.Текст = РасчетОтОбратногоБазаИсчисленияТекущегоРегистратораТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоБазаИсчисленияТекущегоРегистратораТекст = "ВТ_БазаИсчисленияТекущегоРегистратораРасчетаОтОбратного";
	
	// определим суммы включаемых начислений ранее исчисленных расчетов от обратного,
	// рассчитанными как текущим, так и другими регистраторами
	
	РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст = "
	|ВЫБРАТЬ
	|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ОсновныеИДополнительныеНачисления.ВидРасчета В (&парамДоходыВНатуральнойФормеОсновные))
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета В (&парамДоходыВНатуральнойФормеОсновные)
	|					И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеИДополнительныеНачисления.СуммаВключаемыхНачислений
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета В (&парамДоходыВНатуральнойФормеОсновные)
	|					И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета В (&парамДоходыВНатуральнойФормеОсновные)
	|					И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйОПВДоходВключаемыхНачислений
	|ПОМЕСТИТЬ ВТ_ПрочиеВключаемыеНачисленияРасчетаОтОбратного
	|ИЗ
	|	ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного КАК ОсновныеИДополнительныеНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ВключаемыеВидыНачислений.ВидРасчета КАК ВидРасчета,
	|			Основной.ВидРасчета КАК Ссылка,
	|			Основной.ФизЛицо КАК ФизЛицо
	|		ИЗ
	|			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
	|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка КАК Ссылка,
	|					ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета КАК ВидРасчета
	|				ИЗ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ
	|					ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка,
	|					ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|				ИЗ
	|					ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений) КАК ВключаемыеВидыНачислений
	|				ПО Основной.ВидРасчета = ВключаемыеВидыНачислений.Ссылка
	|		ГДЕ
	|			Основной.Организация = &парамГоловнаяОрганизация
	|			И Основной.ПериодРегистрации = &парамПериодРегистрации
	|			И Основной.ВидРасчета.ОтОбратного"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций", "
	|			И (Основной.Регистратор <> &парамРегистратор
	|				ИЛИ (Основной.Регистратор = &парамРегистратор
	|					И Основной.ВидРасчета В(&парамУжеРассчитанныеВидыРасчета)))", "") + "
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ВключаемыеВидыНачислений.ВидРасчета,
	|			Основной.ВидРасчета,
	|			Основной.ФизЛицо
	|		ИЗ
	|			РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК Основной
	|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка КАК Ссылка,
	|					ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета КАК ВидРасчета
	|				ИЗ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ
	|					ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка,
	|					ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|				ИЗ
	|					ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений) КАК ВключаемыеВидыНачислений
	|				ПО Основной.ВидРасчета = ВключаемыеВидыНачислений.Ссылка
	|		ГДЕ
	|			Основной.Организация = &парамГоловнаяОрганизация
	|			И Основной.ПериодРегистрации МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
	|			И Основной.ВидРасчета.ОтОбратного"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций", "
	|			И Основной.Регистратор <> &парамРегистратор", "
	|			И (Основной.Регистратор <> &парамРегистратор
	|				ИЛИ (Основной.Регистратор = &парамРегистратор
	|					И Основной.ВидРасчета В(&парамУжеРассчитанныеВидыРасчета)))") + ") КАК ВключаемыеВидыНачислений
	|		ПО ОсновныеИДополнительныеНачисления.ФизЛицо = ВключаемыеВидыНачислений.ФизЛицо
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеИДополнительныеНачисления.ФизЛицо
	|ИНДЕКСИРОВАТЬ ПО 
	|	ОсновныеИДополнительныеНачисления.ФизЛицо";
	
	Запрос.Текст = РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст = "ВТ_ПрочиеВключаемыеНачисленияРасчетаОтОбратного";
	
	// общие для любого вида компенсируемых удержаний данные
	РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамПериодРегистрации, Организация = &парамОбособленноеПодразделение) КАК УчетнаяПолитикаНУ
	|	ПО ИСТИНА
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетОтОбратногоПрочиеНачисленияТекст + " КАК РасчетОтОбратногоПрочиеНачисления
	|	ПО Основной.НомерСтроки = РасчетОтОбратногоПрочиеНачисления.НомерСтроки
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетОтОбратногоБазаИсчисленияТекущегоРегистратораТекст + " КАК РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора
	|	ПО Основной.ФизЛицо = РасчетОтОбратногоБазаИсчисленияТекущегоРегистратора.ФизЛицо
	|	   И Основной.ВидРасчета В (&парамВидыРасчетаОтОбратного)
	|
	|// определим компенсируемые удержания для каждого вида расчета от обратного
	|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		КомпенсируемыеУдержания.Ссылка КАК ВидРасчета,
	|		СУММА(ВЫБОР 
	|				КОГДА КомпенсируемыеУдержания.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог) 
	|					ТОГДА 1 
	|				ИНАЧЕ 0 
	|			КОНЕЦ) КАК КомпенсироватьИПН,
	|		СУММА(ВЫБОР 
	|				КОГДА КомпенсируемыеУдержания.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы)
	|					ТОГДА 1 
	|				ИНАЧЕ 0 
	|			КОНЕЦ) КАК КомпенсироватьОПВ,
	|		СУММА(ВЫБОР 
	|				КОГДА КомпенсируемыеУдержания.ВидРасчета НЕ В (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог), 
	|																ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование), 
	|																ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы)) 
	|					ТОГДА 1
	|				ИНАЧЕ 0 
	|			КОНЕЦ) КАК КомпенсироватьУдержания
	|	ИЗ
	|		ПланВидовРасчета." + ИмяПВР + ".КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеУдержания
	|	ГДЕ
	|		КомпенсируемыеУдержания.Ссылка В (&парамВидыРасчетаОтОбратного)
	|	СГРУППИРОВАТЬ ПО
	|		КомпенсируемыеУдержания.Ссылка) КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|ПО Основной.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПрочиеВключаемыеНачисленияРасчетаОтОбратного КАК ПрочиеВключаемыеНачисления
	|	ПО Основной.ФизЛицо = ПрочиеВключаемыеНачисления.ФизЛицо
	|		
	|";
	
	СтруктураРезультат = Новый Структура();
	СтруктураРезультат.Вставить("РасчетОтОбратногоСоединенияТекст", РасчетОтОбратногоСоединенияТекст);
	СтруктураРезультат.Вставить("РасчетОтОбратногоПоляТекст", РасчетОтОбратногоПоляТекст);
	
	Возврат СтруктураРезультат;

КонецФункции // ПолучитьДанныеДляРасчетаОтОбратногоПосле2010()

// Функция формирует тексты запросов для получения данных, необходимых при расчете "от обратного" после 2014 года
// Возвращает структуру с текстами запроса для секций ВЫБРАТЬ И СОЕДИНЕНИЯ
//
Функция ПолучитьДанныеДляРасчетаОтОбратногоПосле2014(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет = Ложь,
									Сотрудники = НеОпределено,
									Налогоплательщик = Неопределено,
									КомментироватьРасчет = Ложь,
									Запрос,
									ВнешнееУсловие)

	РасчетОтОбратногоПоляТекст = ""; // строка с полями запроса
	РасчетОтОбратногоСоединенияТекст = ""; // строка с соединениями в запросе		

	ИмяИсточника = "РегистрРасчета." + ИмяРегистра;
	ИмяПВР = ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций", "ОсновныеНачисленияОрганизаций", "ДополнительныеНачисленияОрганизаций");
	
	// Поля, необходимые для расчета "от обратного" 
	РасчетОтОбратногоПоляТекст = "
	|ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьИПН,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|			ИЛИ ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоУчитыватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьУдержания, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьУдержания,
	|Основной.ВидРасчета.ВидДохода КАК ВидДохода,
	|Основной.ВидРасчета.ОблагаетсяОПВ КАК ОблагаетсяОПВ,
	|Основной.ВидРасчета.ОблагаетсяИПН КАК ОблагаетсяИПН,
	|Основной.ВидРасчета.УчетПрямыхНачислений КАК РасчетОтОбратногоУчитыватьПрямыеНачисления
	|";

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ЛьготаПоДоходу, 0) КАК ЛьготаПоДоходу,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляИПН,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПримененныйВычетЗаГод, 0) КАК ПримененныйВычетЗаГод,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПримененнаяЛьготаЗаГод, 0) КАК ПримененнаяЛьготаЗаГод,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.РазрешенныйВычетЗаГод, 0) КАК РазрешенныйВычетЗаГод,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПримененнаяЛьготаНаПредыдущемМестеРаботы, 0) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.НалоговыйВычетЛичный, 0) КАК НалоговыйВычетЛичный,
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.НалоговыйВычетПлановый, 0) КАК НалоговыйВычетПлановый,
		|ВЫБОР 
		|	КОГДА ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК 
		|		ТОГДА ЕСТЬNULL(СведенияОСтавкахИПНПоНалогоплательщику.СтавкаНерезиденты, ЕСТЬNULL(СведенияОСтавкахИПН.СтавкаНерезиденты, 0))
		|	ИНАЧЕ ЕСТЬNULL(СведенияОСтавкахИПНПоНалогоплательщику.Ставка, ЕСТЬNULL(СведенияОСтавкахИПН.Ставка, 0))
		|КОНЕЦ / 100 КАК ПроцентИПН,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходПрямыхНачислений, 0) КАК ОблагаемыйИПНДоходПрямыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходВключаемыхНачислений, 0) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходПрочихВключаемыхНачислений, 0) КАК ОблагаемыйИПНДоходПрочихВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходНачисленийОтОбратного, 0) КАК ОблагаемыйИПНДоходНачисленийОтОбратного,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ЕстьОтОбратногоКомпенсирующиеИПН, 0) КАК ЕстьОтОбратногоКомпенсирующиеИПН
		|";
	КонецЕсли;
			
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоДанныеОПВ.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляОПВ,
		|&парамРазмерОграниченияПоДоходамОПВ КАК РазмерОграниченияПоДоходамОПВ,
		|&парамСтавкаОПВ КАК ПроцентОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходПрямыхНачислений, 0) КАК ОблагаемыйОПВДоходПрямыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходВключаемыхНачислений, 0) КАК ОблагаемыйОПВДоходВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходПрочихВключаемыхНачислений, 0) КАК ОблагаемыйОПВДоходПрочихВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходНачисленийОтОбратного, 0) КАК ОблагаемыйОПВДоходНачисленийОтОбратного,	
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ЕстьОтОбратногоКомпенсирующиеОПВ, 0) КАК ЕстьОтОбратногоКомпенсирующиеОПВ
		|";
	КонецЕсли;
	Запрос.УстановитьПараметр("парамСтавкаОПВ", ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Организация, Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы, ПериодРегистрации) / 100);
	
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний, 0) КАК СуммаКомпенсируемыхУдержаний,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН, 0) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПНиОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний, 0) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|";
	КонецЕсли;
			
	РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаНачисленийОтОбратного, 0) КАК СуммаНачисленийОтОбратного,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаВключаемыхНачислений, 0) КАК СуммаВключаемыхНачислений,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ДополнительныеДанные, 0) КАК РасчетОтОбратногоДополнительныеДанные
	|";

	// Далее идут тексты запросов по аналогии с функциями ПолучитьДанныеДляРасчетаИПН() и ПолучитьДанныеДляРасчетаОПВ().
	// Отличие по всем текстам в том, что в ПолучитьДанныеДляРасчетаИПН() используется &парамСписокФизЛиц,
	// а в расчете "от обратного" &парамРасчетОтОбратногоСписокФизЛиц.
	// В данном расчете предполагается, что расчет ИПН и ОПВ будет производится с установленным
	// в учетной политике по налоговому учету флажке ОтражениеПоПериодуРегистрации - все данные выбираются по ПериодРегистрации

	Запрос.УстановитьПараметр("парамРегистратор", 				Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 		НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачалоГода", 			    НачалоГода(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", ОбособленноеПодразделение);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", 	    Организация);

	Если Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить() Тогда
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	Налогоплательщик);
	Иначе
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	ОбособленноеПодразделение);
	КонецЕсли;

	// категория начисления
	Запрос.УстановитьПараметр("парамКатегорияНачисления", 		КатегорияРасчета);
	Запрос.УстановитьПараметр("парамПорядокКатегории", 			Перечисления.КатегорииРасчетов.Индекс(КатегорияРасчета));

	// Периоды
	// Таблица список физлиц, по которым необходимо выполнить расчет налога или взносов
	// Поля:
	//		Физлицо
	СписокФизЛицТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Основной.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета.ОтОбратного
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
			
	Запрос.Текст = СписокФизЛицТекст;
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";

	// Составим текст запроса для вычисления всех месяцев периода
	ДатыПериодовГодаТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период
	|ПОМЕСТИТЬ ВТ_ДатыПериодовГодаРасчетаОтОбратного
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) И &парамПериодРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период";
	Запрос.Текст = ДатыПериодовГодаТекст;
	Запрос.Выполнить();
	ДатыПериодовГодаТекст = "ВТ_ДатыПериодовГодаРасчетаОтОбратного";

	// Списки видов расчета, категория расчета которых меньше текущей  (т.е. уже посчитанные)
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПВР.Ссылка
	|ИЗ
	|	ПланВидовРасчета." + ИмяПВР + " КАК ПВР
	|ГДЕ
	|	ПВР.КатегорияРасчета.Порядок < &парамПорядокКатегории
	|";

	Запрос.УстановитьПараметр("парамУжеРассчитанныеВидыРасчета", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	// Определим компенсируемые удержания для каждого вида расчета от обратного
	КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст = " 
	|ВЫБРАТЬ
	|	КомпенсируемыеУдержанияОсновные.Ссылка КАК ВидРасчета,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияОсновные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьИПН,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияОсновные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ КомпенсируемыеУдержанияОсновные.ВидРасчета В (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьУдержания
	|ПОМЕСТИТЬ ВТ_КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеУдержанияОсновные
	|ГДЕ
	|	КомпенсируемыеУдержанияОсновные.Ссылка.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	КомпенсируемыеУдержанияОсновные.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КомпенсируемыеУдержанияДополнительные.Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияДополнительные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьИПН,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияДополнительные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ КомпенсируемыеУдержанияДополнительные.ВидРасчета В (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьУдержания
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеУдержанияДополнительные
	|ГДЕ
	|	КомпенсируемыеУдержанияДополнительные.Ссылка.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	КомпенсируемыеУдержанияДополнительные.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета";
	
	Запрос.Текст = КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст;
	Запрос.Выполнить();
	КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст = "ВТ_КомпенсируемыеРасчетомОтОбратногоВидыУдержаний";
	Запрос.Текст = "ВЫБРАТЬ * ИЗ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст;
	
	// ОсновныеИДополнительныеНачисления
	// Поля:
	//		ФизЛицо
	//		ВидРасчета
	//		Результат
	//	Описание:
	// Выбирает начисления за период регистрации по физлицам, для которых выполняется расчет "от обратного"
	ОсновныеИДополнительныеНачисленияТекст = "
	|ВЫБРАТЬ
	|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ОсновныеНачисления.Результат) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.Сторно 
	|				И ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеНачисления.ДополнительныеДанные
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ДополнительныеДанныеОтОбратного,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				И НЕ ОсновныеНачисления.Сторно
	|				ТОГДА ОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		 КОНЕЦ) КАК СуммаНачисленийОтОбратного,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) КАК ОтОбратногоКомпенсируетИПН,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) КАК ОтОбратногоКомпенсируетОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		 КОНЕЦ) КАК СуммаПрямыхНачислений
	|
	|ПОМЕСТИТЬ ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|		ПО ОсновныеНачисления.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ГДЕ
	|	ОсновныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И (ОсновныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ОсновныеНачисления.Регистратор = &парамРегистратор
	|				И ОсновныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))", "") + "
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисления.ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0),
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета,
	|	СУММА(ДополнительныеНачисления.Результат) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.Сторно 
	|				И ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ДополнительныеНачисления.ДополнительныеДанные
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ДополнительныеДанныеОтОбратного,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				И НЕ ДополнительныеНачисления.Сторно
	|				ТОГДА ДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаНачисленийОтОбратного,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) КАК ОтОбратногоКомпенсируетИПН,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) КАК ОтОбратногоКомпенсируетОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаПрямыхНачислений
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ДополнительныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|		ПО ДополнительныеНачисления.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ГДЕ
	|	ДополнительныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ДополнительныеНачисления.ПериодРегистрации МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И ДополнительныеНачисления.Регистратор <> &парамРегистратор","
	|
	|	// если доп. начисления
	|	И (ДополнительныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ДополнительныеНачисления.Регистратор = &парамРегистратор
	|				И ДополнительныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))") + "
	|СГРУППИРОВАТЬ ПО
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0),
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидРасчета
	|";
	Запрос.Текст = ОсновныеИДополнительныеНачисленияТекст;
	Запрос.Выполнить();
	ОсновныеИДополнительныеНачисленияТекст = "ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного";

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
			
		// ФизлицаНеРезиденты
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц-нерезидентов
		ГражданствоФизЛицТекст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	ГражданствоФизЛиц.ФизЛицо,
		|	ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК
		|
		|ПОМЕСТИТЬ ВТ_ГражданствоФизЛицРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|				&парамКонецПериодаРегистрации, 
		|				ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + " КАК СписокФизЛиц)) КАК ГражданствоФизЛиц
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		Запрос.Текст = ГражданствоФизЛицТекст;
		Запрос.Выполнить();
		ГражданствоФизЛицТекст = "ВТ_ГражданствоФизЛицРасчетаОтОбратного";
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
		|	ПО Основной.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
		|";
		
		// РасчетныеПоказатели
		//	Поля:
		//		Период
		//		РазмерМРП
		//		РазмерМЗП
		//
		//	Описание:
		// Выбирает размер месячного расчетного показателя по периодам
		РасчетныеПоказателиТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказателиСрезПоследних.РазмерМРПДляЦелейНалогообложения КАК РазмерМРП,
		|	РасчетныеПоказателиСрезПоследних.РазмерМЗПДляЦелейНалогообложения КАК РазмерМЗП,
		|	РасчетныеПоказателиСрезПоследних.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
		|	РасчетныеПоказателиСрезПоследних.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
		|
		|ПОМЕСТИТЬ ВТ_РасчетныеПоказателиРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказателиСрезПоследних
		|";
		Запрос.Текст = РасчетныеПоказателиТекст;
		Запрос.Выполнить();
		РасчетныеПоказателиТекст = "ВТ_РасчетныеПоказателиРасчетаОтОбратного";
		
		// ПрименяемыеЛьготы
		//	Поля:
		//		Физлицо
		//		Период
		//		ПрименяетсяЛьготаУчастникаВОВ
		//		ПрименяетсяЛьготаПоИнвалидности
		//		ЛьготаПоДоходу
		//
		//	Описание:
		//	Выбирает по всем периодам года льготы на которые имеет право физлицо
		ПрименяемыеЛьготыТекст = 
		"ВЫБРАТЬ
		|	ИПНЛьготыФизлиц.Физлицо,
		|	
		|	ИПНЛьготыФизлиц.ОтношениеКИнвалидности,
		|	ИПНЛьготыФизлиц.ГруппаИнвалидности,
		|
		|	ВЫБОР
		|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > 0 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрименяетсяЛьготаУчастникаВОВ,
		|
		|	ВЫБОР
		|		КОГДА ИПНЛьготыФизлиц.ЛьготаПоИнвалидности > 0 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрименяетсяЛьготаПоИнвалидности,
		|
		|	ВЫБОР 
		|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
		|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ 
		|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
		|	КОНЕЦ КАК ЛьготаПоДоходу
		|
		|ПОМЕСТИТЬ ВТ_ПрименяемыеЛьготыРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		Периоды.Физлицо КАК Физлицо,
		|		ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности,
		|		ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности,
		|		ВЫБОР 
		|			КОГДА (ЛьготыФизлицПоИнвалидности.Физлицо) ЕСТЬ NULL 
		|				ТОГДА 0 
		|			ИНАЧЕ ВЫБОР 
		|					КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
		|							И ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности = ""III"" 
		|						ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
		|					ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
		|				  КОНЕЦ 
		|		КОНЕЦ КАК ЛьготаПоИнвалидности,
		|		ВЫБОР 
		|			КОГДА (ЛьготыФизлицУчастниковВОВ.Физлицо) ЕСТЬ NULL 
		|				ТОГДА 0 
		|			ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) 
		|		КОНЕЦ КАК ЛьготаУчастникаВОВ
		|		
		|	ИЗ
		|		" + СписокФизЛицТекст + " КАК Периоды
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
		|							&парамКонецПериодаРегистрации,
		|							ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ЛьготыФизлицПоИнвалидности
		|			ПО ЛьготыФизлицПоИнвалидности.Физлицо = Периоды.Физлицо
		|				И (ЛьготыФизЛицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
		|					ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизЛицПоИнвалидности.СрокДействияСправки, ДЕНЬ) >= &парамКонецПериодаРегистрации)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(
		|							&парамКонецПериодаРегистрации,
		|							ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ЛьготыФизлицУчастниковВОВ
		|			ПО ЛьготыФизлицУчастниковВОВ.Физлицо = Периоды.Физлицо
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
		|			ПО ИСТИНА) КАК ИПНЛьготыФизлиц
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИПНЛьготыФизлиц.Физлицо
		|";
		Запрос.Текст = ПрименяемыеЛьготыТекст;
		Запрос.Выполнить();
		ПрименяемыеЛьготыТекст = "ВТ_ПрименяемыеЛьготыРасчетаОтОбратного";
		
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		СуммаДоходаОборот
		//		СуммаВычетаОборот
		//
		//	Описание:
		// Выбирает общую сумму доходов и облагаемые налогом доходы за весь год по физлицам из СписокФизлиц
			
		// Здесь не учитываем доходы, записанные текущим регистратором, т.к. при проведении по ИПНСведенияОДоходах
		// они были еще в процессе расчета и их прибавим позже. А также отдельно выделяем доходы, начисленные в данной 
		// организации за текущий месяц, которые прошли через начисления, прочие доходы не выделяем.
		// Сведения о жилищных и страховых вычетах текущего месяца всегда берем из регистра сведений, т.к. в регистре накопления они 
		// появляются только при прямом расчете налога и поэтому могут отсутствовать, если сейчас первый раз рассчитываются начисления.
		// Т.к. расчет "от обратного" поддерживается только при учетной политикой с ОтражениемПоПериодуРегистрации,
		// то в регистрах Период, ПериодРегистрации и МесяцНалоговогоПериода всегда совпадают, поэтому 
		// устанавливаем отборы по Периоду, т.к. по нему система автоматически создает индекс.
		ДоходыИПНТекст = 
		"ВЫБРАТЬ
		|	ИПНОбороты.Физлицо КАК ФизЛицо,
		|	СУММА(ПрочиеДоходы) КАК ПрочиеДоходы
		|
		|ПОМЕСТИТЬ ВТ_ДоходыИПНРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
		|		СУММА(ВЫБОР
		|				КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ТОГДА ИПНСведенияОДоходах.СуммаДохода - ИПНСведенияОДоходах.СуммаВычета
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ПрочиеДоходы,
		|		ВЫБОР
		|			КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ИЛИ ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РасчетНалоговПриПоступленииАктивовУслуг
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ КАК НачисленоВТекущейОрганизации
		|	ИЗ
		|		РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО ИПНСведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|	ГДЕ
		|		ИПНСведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|		И ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|		И ИПНСведенияОДоходах.Регистратор <> &парамРегистратор
		|		И НЕ(ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ИПНСведенияОДоходах.ФизЛицо,
		|		ИПНСведенияОДоходах.СпособНалогообложения,
		|		ИПНСведенияОДоходах.Регистратор) КАК ИПНОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПНОбороты.Физлицо";
		Запрос.Текст = ДоходыИПНТекст;
		Запрос.Выполнить();
		ДоходыИПНТекст = "ВТ_ДоходыИПНРасчетаОтОбратного";

			
		// ИПНПримененныеЛьготыВычеты
		//	Поля:
		//		ФизЛицо
		//		ИсчисленныйНалог
		//		ПримененныеВычетыЛичные - уже примененные личные налоговые вычеты по ИПН
		//		ПримененнаяЛьгота - уже примененная льгота по ИПН
		//
		//	Описание:
		//	Выбирает исчисленные налоги (приходы по регистру ИПНРасчетыСБюджетом и данные регистра
		//  СведенияПредыдущегоМестаРаботыФизЛиц) для СписокФизлиц
			
		// Здесь не берем данные за МесяцНалоговогоПериода в ИПНСведенияОДоходах, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Т.к. считаем только в случае если в учет. политике стоит ОтражениеПоПериодуРегистрации, то сразу накапливаем
		// итоги с начала года по предыдущий месяц включительно.
		ИПНПримененныеЛьготыВычетыТекст = 
		"ВЫБРАТЬ
		|	ИПНПримененныеВычетыЛьготы.ФизЛицо КАК ФизЛицо,
		|	СУММА(ИПНПримененныеВычетыЛьготы.ПримененныйВычетОборот) КАК ПримененныйВычетЗаГод,
		|	СУММА(ИПНПримененныеВычетыЛьготы.ПримененнаяЛьготаОборот) КАК ПримененнаяЛьготаЗаГод,
		|	СУММА(ИПНПримененныеВычетыЛьготы.РазрешенныйВычетОборот) КАК РазрешенныйВычетЗаГод,
		|	СУММА(ИПНПримененныеВычетыЛьготы.ПримененнаяЛьготаНаПредыдущемМестеРаботы) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы
		|ПОМЕСТИТЬ ВТ_ИПНПримененныеЛьготыВычеты
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИПНСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|		ИПНСведенияОДоходах.ПримененныйВычетОборот КАК ПримененныйВычетОборот,
		|		ИПНСведенияОДоходах.ПримененнаяЛьготаОборот КАК ПримененнаяЛьготаОборот,
		|		ИПНСведенияОДоходах.РазрешенныйВычетОборот КАК РазрешенныйВычетОборот,
		|		0 КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы
		|	ИЗ
		|		РегистрНакопления.ИПНСведенияОДоходах.Обороты(&парамНачалоГода, ДОБАВИТЬКДАТЕ(&парамПериодРегистрации, СЕКУНДА, -1), Месяц,
		|				Налогоплательщик = &парамНалогоплательщик И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНСведенияОДоходах
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо,
		|		0,
		|		0,
		|		0,
		|		ИПНСведенияПредыдущегоМестаРаботы.ПримененнаяЛьгота
		|	ИЗ
		|		РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК ИПНСведенияПредыдущегоМестаРаботы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО ИПНСведенияПредыдущегоМестаРаботы.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	ГДЕ
		|		ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода >= &парамНачалоГода
		|		И ИПНСведенияПредыдущегоМестаРаботы.МесяцНалоговогоПериода <= &парамПериодРегистрации
		|		И ИПНСведенияПредыдущегоМестаРаботы.Налогоплательщик = &парамНалогоплательщик) КАК ИПНПримененныеВычетыЛьготы
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПНПримененныеВычетыЛьготы.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
		Запрос.Текст = ИПНПримененныеЛьготыВычетыТекст;
		Запрос.Выполнить();
		ИПНПримененныеЛьготыВычетыТекст = "ВТ_ИПНПримененныеЛьготыВычеты";
			

		// Здесь не берем имеющийся за МесяцНалоговогоПериода в ОПВРасчетыСФондами взнос, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Т.к. расчет ведется только если в учет. политике установлено ОтражениеПоПериодуРегистрации,
		// то анализовать надо только текущий месяц. Поэтому запрос к ОПВРасчетыСФондами вообще не требуется.

		// ПрименениеВычетовВОрганизации
		//	Поля:
		//		Физлицо,
		//		Период
		//
		// Описание:
		//	Выбирает список физлиц + периоды в которые применяются налоговые вычеты по 
		//	заданной организации
		ПрименениеВычетовВОрганизацииТекст = 
		"ВЫБРАТЬ
		|	ИПНПрименениеВычетов.Физлицо КАК Физлицо
		|
		|ПОМЕСТИТЬ ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ИПНПрименениеВычетов.СрезПоследних(
		|					&парамПериодРегистрации,
		|					ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНПрименениеВычетов
		|
		|ГДЕ
		|	ИПНПрименениеВычетов.Налогоплательщик = &парамНалогоплательщик
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		Запрос.Текст = ПрименениеВычетовВОрганизацииТекст;
		Запрос.Выполнить();
		ПрименениеВычетовВОрганизацииТекст = "ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного";

		// ОтработанноеВремя
		//	Поля:
		//		Физлицо,
		//		ПредоставлятьВычет
		//
		// Описание:
		//	Список физлиц-периодов с правом применения налоговых вычетов по отработанному времени
		//	
		ОтработанноеВремяТекст = 
		"ВЫБРАТЬ
		|	ОтработанноеВремя.ФизЛицо,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ОтработанноеВремя.ДатаС <= ОтработанноеВремя.ДатаПо
		|					ТОГДА РАЗНОСТЬДАТ(ОтработанноеВремя.ДатаС, ОтработанноеВремя.ДатаПо, ДЕНЬ) + 1
		|				ИНАЧЕ 0
		|			КОНЕЦ >= 16
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПредоставлятьВычет
		|
		|ПОМЕСТИТЬ ВТ_ОтработанноеВремя
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОтработанноеВремя.ФизЛицо,
		|		ОтработанноеВремя.Период,
		|
		|		ВЫБОР 
		|			// вообще не был принят в штат - не считаем отработанное время
		|			КОГДА ОтработанноеВремя.ДатаПриема = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
		|			// принят в штат в предыдущих месяцах - считаем с первого числа месяца
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаПриема, МЕСЯЦ) < ОтработанноеВремя.Период 
		|				ТОГДА ОтработанноеВремя.Период
		|			// принят в штат в текущем месяце - считаем с даты приема
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаПриема, МЕСЯЦ) = ОтработанноеВремя.Период
		|				ТОГДА ОтработанноеВремя.ДатаПриема
		|			// сюда попасть не должны - не считаем 
		|			ИНАЧЕ
		|				ДАТАВРЕМЯ(3999, 12, 31)
		|		КОНЕЦ КАК ДатаС,
		|
		|		ВЫБОР 
		|			// повторный прием в ту же организацию и еще не уволен 
		|			// или еще не уволен после первого приема - считаем до конца месяца
		|			КОГДА ОтработанноеВремя.ДатаПриема > ОтработанноеВремя.ДатаУвольнения 
		|				  ИЛИ ГОД(ОтработанноеВремя.ДатаУвольнения) = 1
		|				ТОГДА КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
		|			// уволен до начала месяца - не считаем
		|			КОГДА ОтработанноеВремя.ДатаУвольнения < ОтработанноеВремя.Период
		|				ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|			// уволен в текущем месяце - считаем до даты увольнения
		|			КОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.ДатаУвольнения, МЕСЯЦ) = ОтработанноеВремя.Период
		|               ТОГДА ОтработанноеВремя.ДатаУвольнения
		|			// еще не уволен - считаем до конца месяца
		|			ИНАЧЕ
		|				КОНЕЦПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ)
		|		КОНЕЦ КАК ДатаПо
		|
		|	ИЗ			
		|		(ВЫБРАТЬ
		|			&парамПериодРегистрации КАК Период,
		|			РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
		|			МАКСИМУМ(ВЫБОР 
		|						КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу) 
		|							ТОГДА РаботникиОрганизации.Период
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				 	 КОНЕЦ) КАК ДатаПриема,
		|			МАКСИМУМ(ВЫБОР 
		|						КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|							ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
		|						ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|				 	 КОНЕЦ) КАК ДатаУвольнения
		|		ИЗ
		|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|					ПО РаботникиОрганизации.Сотрудник.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|		ГДЕ
		|			РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
		|			И РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|			И РаботникиОрганизации.Период <= &парамКонецПериодаРегистрации
		|			И РаботникиОрганизации.ПричинаИзмененияСостояния В (ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу), 
		|																ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
		|
		|		СГРУППИРОВАТЬ ПО 
		|			РаботникиОрганизации.Сотрудник.ФизЛицо) КАК ОтработанноеВремя) КАК ОтработанноеВремя
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОтработанноеВремя.ФизЛицо
		|";

		Запрос.Текст = ОтработанноеВремяТекст;
		Запрос.Выполнить();
		ОтработанноеВремяТекст = "ВТ_ОтработанноеВремя";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + ОтработанноеВремяТекст;

		// ПрименяемыеВычетыТекст
		//	Поля:
		//		Физлицо
		//		Период
		//		НалоговыйВычетЛичный
		//		НалоговыйВычетИждивенцев
		//		НалоговыйВычетПредыдущегоМестаРаботы
		//
		//	Описание:
		//	Выбирает по всем периодам года налоговын вычеты на которые имеет право физлицо
		ПрименяемыеВычетыТекст = 
		"ВЫБРАТЬ
		|	СписокФизЛиц.Физлицо КАК Физлицо,
		|	ВЫБОР 
		|		КОГДА (ПрименениеВычетов.Физлицо) ЕСТЬ NULL 
		|				ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) 
		|				ИЛИ НЕ ЕСТЬNULL(ОтработанноеВремя.ПредоставлятьВычет, ЛОЖЬ)
		|				ИЛИ НЕ ЕСТЬNULL(ВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
		|			ТОГДА 0 
		|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
		|	КОНЕЦ КАК НалоговыйВычетЛичный,
		|	ЕСТЬNULL(ПлановыеВычетыФизЛиц.СуммаВычета, 0) КАК НалоговыйВычетПлановый
		|
		|ПОМЕСТИТЬ ВТ_ПрименяемыеВычетыРасчетаОтОбратного
		|ИЗ
		|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц.СрезПоследних(
		|				&парамКонецПериодаРегистрации,
		|				ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ВычетыФизлиц
		|		ПО СписокФизЛиц.ФизЛицо = ВычетыФизлиц.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
		|		ПО ИСТИНА
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименениеВычетовВОрганизацииТекст + " КАК ПрименениеВычетов
		|		ПО СписокФизЛиц.ФизЛицо = ПрименениеВычетов.Физлицо 
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОтработанноеВремяТекст + " КАК ОтработанноеВремя
		|		ПО СписокФизЛиц.ФизЛицо = ОтработанноеВремя.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
		|		ПО СписокФизЛиц.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИПНПлановыеВычеты.Физлицо КАК Физлицо,
		|			СУММА(ИПНПлановыеВычеты.СуммаВычета) КАК СуммаВычета
		|		ИЗ
		|			РегистрСведений.ИПНПлановыеНалоговыеВычетыФизлиц.СрезПоследних(
		|					&парамКонецПериодаРегистрации,
		|					Налогоплательщик = &парамНалогоплательщик
		|						И (МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации)
		|						И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНПлановыеВычеты
		|	
		|		СГРУППИРОВАТЬ ПО
		|			ИПНПлановыеВычеты.Физлицо) КАК ПлановыеВычетыФизЛиц
		|		ПО СписокФизЛиц.ФизЛицо = ПлановыеВычетыФизЛиц.Физлицо
		|ИНДЕКСИРОВАТЬ ПО
		|	СписокФизЛиц.ФизЛицо
		|";
		Запрос.Текст = ПрименяемыеВычетыТекст;
		Запрос.Выполнить();
		ПрименяемыеВычетыТекст = "ВТ_ПрименяемыеВычетыРасчетаОтОбратного";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + ПрименяемыеВычетыТекст;

		БазаДляИсчисленияИПНТекст = "
		|ВЫБРАТЬ
		|	СписокФизЛиц.ФизЛицо,
		|	ЕСТЬNULL(Доходы.ПрочиеДоходы, 0) КАК ПрочиеДоходы,
		|	ЕСТЬNULL(ПрименяемыеЛьготы.ЛьготаПоДоходу, 0) КАК ЛьготаПоДоходу,
		|
		|	ЕСТЬNULL(ИПНПримененныеЛьготыВычеты.ПримененныйВычетЗаГод, 0) КАК ПримененныйВычетЗаГод,
		|	ЕСТЬNULL(ИПНПримененныеЛьготыВычеты.ПримененнаяЛьготаЗаГод, 0) КАК ПримененнаяЛьготаЗаГод,
		|	ЕСТЬNULL(ИПНПримененныеЛьготыВычеты.РазрешенныйВычетЗаГод, 0) КАК РазрешенныйВычетЗаГод,
		|	ЕСТЬNULL(ИПНПримененныеЛьготыВычеты.ПримененнаяЛьготаНаПредыдущемМестеРаботы, 0) КАК ПримененнаяЛьготаНаПредыдущемМестеРаботы,
		|
		|	ЕСТЬNULL(ПрименяемыеВычеты.НалоговыйВычетЛичный, 0) КАК НалоговыйВычетЛичный,
		|   ЕСТЬNULL(ПрименяемыеВычеты.НалоговыйВычетПлановый, 0) КАК НалоговыйВычетПлановый
		|
		|ПОМЕСТИТЬ ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного
		|ИЗ
		|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыИПНТекст + " КАК Доходы
		|		ПО СписокФизЛиц.ФизЛицо = Доходы.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеЛьготыТекст + " КАК ПрименяемыеЛьготы
		|		ПО СписокФизЛиц.ФизЛицо = ПрименяемыеЛьготы.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНПримененныеЛьготыВычетыТекст + " КАК ИПНПримененныеЛьготыВычеты
		|		ПО СписокФизЛиц.ФизЛицо = ИПНПримененныеЛьготыВычеты.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеВычетыТекст + " КАК ПрименяемыеВычеты
		|		ПО СписокФизЛиц.ФизЛицо = ПрименяемыеВычеты.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СписокФизЛиц.ФизЛицо
		|";
		
		Запрос.Текст = БазаДляИсчисленияИПНТекст;
		Запрос.Выполнить();
		БазаДляИсчисленияИПНТекст = "ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + БазаДляИсчисленияИПНТекст;

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + БазаДляИсчисленияИПНТекст + " КАК РасчетОтОбратногоДанныеИПН
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеИПН.ФизЛицо
		|	   И Основной.ВидРасчета.ОтОбратного
		|";

		СведенияОСтавкахИПНПоНалогоплательщикуТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахИПНПоНалогоплательщику.ВидДохода,
			|	СведенияОСтавкахИПНПоНалогоплательщику.Ставка,
			|	СведенияОСтавкахИПНПоНалогоплательщику.СтавкаНерезиденты
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахИПНПоНалогоплательщику
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахИПН.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = &парамНалогоплательщик) КАК СведенияОСтавкахИПНПоНалогоплательщику";
			
		Запрос.Текст = СведенияОСтавкахИПНПоНалогоплательщикуТекст;
		Запрос.Выполнить();
		СведенияОСтавкахИПНПоНалогоплательщикуТекст = "ВТ_СведенияОСтавкахИПНПоНалогоплательщику";
		
		СведенияОСтавкахИПНТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахИПН.ВидДохода,
			|	СведенияОСтавкахИПН.Ставка,
			|	СведенияОСтавкахИПН.СтавкаНерезиденты
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахИПН
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахИПН.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК СведенияОСтавкахИПН";
			
		Запрос.Текст = СведенияОСтавкахИПНТекст;
		Запрос.Выполнить();
		СведенияОСтавкахИПНТекст = "ВТ_СведенияОСтавкахИПН";

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахИПНПоНалогоплательщикуТекст + " КАК СведенияОСтавкахИПНПоНалогоплательщику
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахИПНПоНалогоплательщику.ВидДохода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахИПНТекст + " КАК СведенияОСтавкахИПН
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахИПН.ВидДохода
		|";
		
	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
			
		СписокГруппИнвалидности = Новый СписокЗначений;
		СписокГруппИнвалидности.Добавить("I");
		СписокГруппИнвалидности.Добавить("II");
			
		Запрос.УстановитьПараметр("парамСписокГруппИнвалидности",  СписокГруппИнвалидности);
			
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		ОблагаемыйДоход
		//
		//	Описание:
		// Выбирает облагаемые взносами доходы за периоды по физлицам
		
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то доходы всегда выбираются только за расчетный месяц. Отдельно выделим прочие доходы, зарегистрированные в обход начислений.
		ДоходыТекст = "
		|ВЫБРАТЬ
		|	ОПВСведенияОДоходах.ФизЛицо КАК Физлицо,
		|	СУММА(ВЫБОР
		|			КОГДА ОПВСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|				ТОГДА ОПВСведенияОДоходах.СуммаДохода - ОПВСведенияОДоходах.СуммаВычета
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПрочиеДоходы
		|
		|ПОМЕСТИТЬ ВТ_ДоходыОПВРасчетаОтОбратного
		|ИЗ
		|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|		ПО ОПВСведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|ГДЕ
		|	ОПВСведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|	И ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|	
		|СГРУППИРОВАТЬ ПО
		|	ОПВСведенияОДоходах.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОПВСведенияОДоходах.ФизЛицо";
		
		Запрос.Текст = ДоходыТекст;
		Запрос.Выполнить();
		ДоходыТекст = "ВТ_ДоходыОПВРасчетаОтОбратного";

		// Здесь не берем имеющийся за МесяцНалоговогоПериода в ОПВРасчетыСФондами взнос, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то ранее исчисленные взносы всегда выбираются только за расчетный месяц. Поэтому запроса к ОПВРасчетыСФондами вообще не требуется.

		// РазмерОграниченияПоДоходам
		РазмерОграниченияПоДоходамТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказатели.РазмерМЗП * 75 КАК ОграничениеПоДоходам
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказатели
		|";
			
		Запрос.Текст = РазмерОграниченияПоДоходамТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", Выборка.ОграничениеПоДоходам);
		Иначе
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", 0);
		КонецЕсли;

		// ФизлицаБезПраваНаПенсию
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц не имеющих право на пенсионное обеспечение
		ФизлицаБезПраваНаПенсиюТекст = "
		|ВЫБРАТЬ
		|	ГражданствоФизЛиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаБезПраваНаПенсию
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ГражданствоФизЛиц
		|
		|ГДЕ
		|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
				
		Запрос.Текст = ФизлицаБезПраваНаПенсиюТекст;
		Запрос.Выполнить();
		ФизлицаБезПраваНаПенсиюТекст = "ВТ_ФизлицаБезПраваНаПенсию";
			
		// ФизлицаПенсионеры
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц достигших пенсионный возраст
		ФизлицаПенсионерыТекст = "
		|ВЫБРАТЬ
		|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаПенсионеры
		|ИЗ
		|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОПенсионномОбеспеченииФизЛиц
		|
		|ГДЕ
		|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
			
		Запрос.Текст = ФизлицаПенсионерыТекст;
		Запрос.Выполнить();
		ФизлицаПенсионерыТекст = "ВТ_ФизлицаПенсионеры";

		// ФизлицаИнвалидыБессрочно
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц-инвалидов I и II группы, у которых инвалидность установлена бессрочно
		ФизлицаИнвалидыБессрочноТекст = "
		|ВЫБРАТЬ
		|	СведенияОбИнвалидностиФизлиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаИнвалидыБессрочно
		|ИЗ
		|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОбИнвалидностиФизлиц
		|
		|ГДЕ
		|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
		|	И СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности В (&парамСписокГруппИнвалидности)
		|	И СведенияОбИнвалидностиФизлиц.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
			
		Запрос.Текст = ФизлицаИнвалидыБессрочноТекст;
		Запрос.Выполнить();
		ФизлицаИнвалидыБессрочноТекст = "ВТ_ФизлицаИнвалидыБессрочно";

		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ВЫБОР
		|	КОГДА Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизЛицаПенсионерыТекст + ")
		|		  ИЛИ Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизЛицаБезПраваНаПенсиюТекст + ")
		|		  ИЛИ Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаИнвалидыБессрочноТекст + ") ТОГДА ЛОЖЬ
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ КАК ПризнакИсчисленияОПВ
		|";
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыТекст + " КАК РасчетОтОбратногоДанныеОПВ
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеОПВ.ФизЛицо
		|	   И Основной.ВидРасчета.ОтОбратного
		|";

	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
	   
	   // для списка погашамых удержаний определим общую сумму
	   Запрос.УстановитьПараметр("парамСпособыРасчетаФиксированнойСуммой", ПроведениеРасчетов.ПолучитьСписокСпособовРасчетовФиксированнойСуммой());
	   Запрос.УстановитьПараметр("парамВалютаРегламентУчета", Константы.ВалютаРегламентированногоУчета.Получить());

	   // ПлановыеУдержания
	   // Поля:
	   //		ФизЛицо
	   //		ВидРасчета
	   //		ВидСтроки
	   //		Размер
	   //	Описание:
	   // Выбирает плановые и фактические удержания за период регистрации для физлиц, по которым производится расчет "от обратного".
	   // Фактические удержания берем только те, что введены как разовые, чтобы не задублировать плановые, если уже создан и проведен
	   // документ "Расчет ИПН, ОПВ и удержаний" и заново пересчитывают "от обратного"
		
	   ПлановыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1 КАК Размер,
		|	ПлановыеУдержания.Валюта1 КАК Валюта,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.Период < &парамПериодРегистрации ТОГДА &парамПериодРегистрации
		|		ИНАЧЕ ПлановыеУдержания.Период
		|	КОНЕЦ КАК ДатаНачала,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ПлановыеУдержания.ПериодЗавершения <= &парамКонецПериодаРегистрации
		|			ТОГДА КОНЕЦПЕРИОДА(ПлановыеУдержания.ПериодЗавершения, ДЕНЬ)
		|		ИНАЧЕ МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонецПериодаРегистрации))
		|	КОНЕЦ КАК ДатаОкончания
		|
		|ПОМЕСТИТЬ ВТ_ПлановыеУдержанияРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|		ПО ПлановыеУдержания.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК СледующиеПлановыеУдержания
		|		ПО ПлановыеУдержания.Организация = СледующиеПлановыеУдержания.Организация
		|			И ПлановыеУдержания.Физлицо = СледующиеПлановыеУдержания.Физлицо
		|			И ПлановыеУдержания.ВидРасчета = СледующиеПлановыеУдержания.ВидРасчета
		|			И ПлановыеУдержания.ДокументОснование = СледующиеПлановыеУдержания.ДокументОснование
		|			И СледующиеПлановыеУдержания.Период > ПлановыеУдержания.Период
		|			И СледующиеПлановыеУдержания.Период <= &парамКонецПериодаРегистрации
		|
		|ГДЕ
		|	ПлановыеУдержания.Организация = &парамГоловнаяОрганизация
		|	И ПлановыеУдержания.Период <= &парамКонецПериодаРегистрации
		|	И ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1) 
		|				И ПлановыеУдержания.ПериодЗавершения < &парамПериодРегистрации ТОГДА ПлановыеУдержания.ДействиеЗавершения
		|		ИНАЧЕ ПлановыеУдержания.Действие
		|	  КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1,
		|	ПлановыеУдержания.Валюта1,
		|	ПлановыеУдержания.Период,
		|	ПлановыеУдержания.ПериодЗавершения
		|
		|ИМЕЮЩИЕ
		|	МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонецПериодаРегистрации)) >= &парамПериодРегистрации
		|";
		Запрос.Текст = ПлановыеУдержанияТекст;
		Запрос.Выполнить();
		ПлановыеУдержанияТекст = "ВТ_ПлановыеУдержанияРасчетаОтОбратного";
		
		// В качестве фактических берем только те, что зарегистрированы как 
		// разовые, т.к. все остальные будут взяты из плановых
		ПлановыеИФактическиеУдержанияТекст = "
		|ВЫБРАТЬ
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	Удержания.ВидРасчета.ВычитатьИзБазыИПН КАК ВычитатьИзБазыИПН,
		|	Удержания.ВидРасчета.ВычитатьИзБазыОПВ КАК ВычитатьИзБазыОПВ,
		|	Удержания.ВидСтроки,
		|	СУММА(Удержания.Результат) КАК Результат,
		|	СУММА(ВЫБОР
		|			КОГДА Удержания.Валюта = &парамВалютаРегламентУчета ИЛИ Удержания.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|				ТОГДА Удержания.Размер
		|			ИНАЧЕ Удержания.Размер * ЕСТЬNULL(Валюты.Курс, 0) / ЕСТЬNULL(Валюты.Кратность, 1)
		|		  КОНЕЦ) КАК Размер
		|
		|ПОМЕСТИТЬ ВТ_ПлановыеИФактическиеУдержанияРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|			ПлановыеУдержания.ФизЛицо,
		|			ПлановыеУдержания.ВидРасчета,
		|			""ПлановыеУдержания"" КАК ВидСтроки,
		|			0 КАК Результат,
		|			ПлановыеУдержания.Размер,
		|			ПлановыеУдержания.Валюта
		|		ИЗ
		|			" + ПлановыеУдержанияТекст + " КАК ПлановыеУдержания
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Удержания.ФизЛицо,
		|		Удержания.ВидРасчета,
		|		""ФактическиеУдержания"" КАК ВидСтроки,
		|		Удержания.Результат,
		|		Удержания.Показатель1 КАК Размер,
		|		ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
		|	ИЗ
		|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО Удержания.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|	ГДЕ
		|		Удержания.Организация = &парамГоловнаяОрганизация 
		|		И Удержания.ПериодРегистрации = &парамПериодРегистрации
		|		И Удержания.Результат <> 0
		|		И НЕ (Удержания.Регистратор ССЫЛКА Документ.РасчетУдержанийРаботниковОрганизаций)
		|	) КАК Удержания
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты
		|	ПО Валюты.Период = &парамПериодРегистрации И Валюты.Валюта = Удержания.Валюта
		|
		|СГРУППИРОВАТЬ ПО
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.ВидРасчета.СпособРасчета,
		|	Удержания.ВидСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Удержания.ФизЛицо
		|";
		Запрос.Текст = ПлановыеИФактическиеУдержанияТекст;
		Запрос.Выполнить();
		ПлановыеИФактическиеУдержанияТекст = "ВТ_ПлановыеИФактическиеУдержанияРасчетаОтОбратного";
			   
		
		
		РанееКомпенсированныеУдержанияСуммойТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КомпенсируемыеВидыУдержанийОсновные.Ссылка КАК ВидРасчета,
		|	КомпенсируемыеВидыУдержанийОсновные.ВидРасчета КАК ВидУдержания
		|ПОМЕСТИТЬ ВТ_КомпенсируемыеУдержанияСуммой
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеВидыУдержанийОсновные
		|
		|ГДЕ
		|	КомпенсируемыеВидыУдержанийОсновные.ВидРасчета ССЫЛКА ПланВидовРасчета.УдержанияОрганизаций
		|	И КомпенсируемыеВидыУдержанийОсновные.ВидРасчета.СпособРасчета В(&парамСпособыРасчетаФиксированнойСуммой)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КомпенсируемыеВидыУдержанийДополнительные.Ссылка,
		|	КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеВидыУдержанийДополнительные
		|
		|ГДЕ
		|	КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета ССЫЛКА ПланВидовРасчета.УдержанияОрганизаций
		|	И КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета.СпособРасчета В(&парамСпособыРасчетаФиксированнойСуммой)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|   ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	КомпенсируемыеУдержанияСуммой.ВидУдержания
		|ПОМЕСТИТЬ ВТ_РанееКомпенсированныеУдержанияСуммой
		|ИЗ
		|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КомпенсируемыеУдержанияСуммой КАК КомпенсируемыеУдержанияСуммой
		|		ПО ОсновныеИДополнительныеНачисления.ВидРасчета = КомпенсируемыеУдержанияСуммой.ВидРасчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	ВидУдержания";
		
		Запрос.Текст = РанееКомпенсированныеУдержанияСуммойТекст;
		Запрос.Выполнить();
		РанееКомпенсированныеУдержанияСуммойТекст = "ВТ_РанееКомпенсированныеУдержанияСуммой";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + РанееКомпенсированныеУдержанияСуммойТекст;
		
		// КомпенсируемыеУдержания
		// Поля:
		//		ФизЛицо
		//		ВидУдержания
		//		Результат
		//		Размер
		//	Описание:
		// Рассчитывает результат по каждому компенсируемому виду удержаний 
		КомпенсируемыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	Основной.НомерСтроки,
		|	Основной.ВидРасчета КАК ВидРасчетаОтОбратного,
		|	ПлановыеИФактическиеУдержания.ФизЛицо,
		|	ПлановыеИФактическиеУдержания.ВидРасчета КАК ВидУдержания,
		|	ПлановыеИФактическиеУдержания.ВидСтроки,
		|
		|	МАКСИМУМ(ВЫБОР
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ФактическиеУдержания""
		|					ТОГДА ПлановыеИФактическиеУдержания.Результат
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета В (&парамСпособыРасчетаФиксированнойСуммой)
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|			КОНЕЦ) 
		|	+
		|	МАКСИМУМ(ВЫБОР
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|			КОНЕЦ) / 100 * 
		|	СУММА(ЕСТЬNULL(ОсновныеИДополнительныеНачисления.Результат, 0)) КАК СуммаКомпенсируемыхУдержаний,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|
		|ПОМЕСТИТЬ ВТ_КомпенсируемыеУдержанияРасчетаОтОбратного
		|ИЗ
		|	" + ИмяИсточника + " КАК Основной
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПлановыеИФактическиеУдержанияТекст + " КАК ПлановыеИФактическиеУдержания
		|
		|		ПО Основной.ФизЛицо = ПлановыеИФактическиеУдержания.ФизЛицо
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|											КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.Ссылка КАК ВидРасчетаОтОбратного,
		|											КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
		|										ИЗ
		|											ПланВидовРасчета." + ИмяПВР + ".КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний) КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
		|					ПО Основной.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчетаОтОбратного 
		|					   И ПлановыеИФактическиеУдержания.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + РанееКомпенсированныеУдержанияСуммойТекст + " КАК РанееКомпенсированныеУдержанияСуммой
		|		ПО Основной.ФизЛицо = РанееКомпенсированныеУдержанияСуммой.ФизЛицо
		|			И КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета = РанееКомпенсированныеУдержанияСуммой.ВидУдержания
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК БазовыеВидыРасчета
		|		ПО ПлановыеИФактическиеУдержания.ВидРасчета = БазовыеВидыРасчета.Ссылка
		|		   И ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|		   И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ВключаемыеВидыНачислений.Ссылка КАК Ссылка,
		|	ОсновныеИДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ОсновныеИДополнительныеНачисления.Результат КАК Результат
		|	ИЗ
		|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВключаемыеВидыНачислений.Ссылка КАК Ссылка,
		|			ВключаемыеВидыНачислений.ВидРасчета КАК ВидРасчета
		|		ИЗ
		|			ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ВключаемыеВидыНачислений
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ВключаемыеВидыНачислений.Ссылка,
		|			ВключаемыеВидыНачислений.ВидРасчета
		|		ИЗ
		|			ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ВключаемыеВидыНачислений) КАК ВключаемыеВидыНачислений
		|		ПО ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.ВидРасчета) КАК ОсновныеИДополнительныеНачисления
		|	ПО ПлановыеИФактическиеУдержания.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо
		|	   И БазовыеВидыРасчета.ВидРасчета = ОсновныеИДополнительныеНачисления.ВидРасчета
		|		И Основной.ВидРасчета = ОсновныеИДополнительныеНачисления.Ссылка
		|
		|ГДЕ
		|	" + ВнешнееУсловие + "
		|	И Основной.ВидРасчета.ОтОбратного
		|	И РанееКомпенсированныеУдержанияСуммой.ФизЛицо ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	Основной.НомерСтроки,
		|	Основной.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ФизЛицо,
		|	ПлановыеИФактическиеУдержания.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ВидСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Основной.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ВидРасчета
		|";
		Запрос.Текст = КомпенсируемыеУдержанияТекст;
		Запрос.Выполнить();
		КомпенсируемыеУдержанияТекст = "ВТ_КомпенсируемыеУдержанияРасчетаОтОбратного";
		
		
		
		
		

		
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						КомпенсируемыеУдержания.НомерСтроки,
		|						СУММА(КомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний) КАК СуммаКомпенсируемыхУдержаний,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПНиОПВ) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|						СУММА(КомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|					ИЗ
		|						" + КомпенсируемыеУдержанияТекст + " КАК КомпенсируемыеУдержания
		|					СГРУППИРОВАТЬ ПО 
		|						КомпенсируемыеУдержания.НомерСтроки
		|					) КАК РасчетОтОбратногоКомпенсируемыеУдержания
		|	ПО Основной.НомерСтроки = РасчетОтОбратногоКомпенсируемыеУдержания.НомерСтроки
		|";
	КонецЕсли;

	
	// определим суммы включаемых начислений ранее исчисленных расчетов от обратного,
	// рассчитанными как текущим, так и другими регистраторами
	
	РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст = "
	|ВЫБРАТЬ
	|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйОПВДоходВключаемыхНачислений
	|ПОМЕСТИТЬ ВТ_ПрочиеВключаемыеНачисленияРасчетаОтОбратного
	|ИЗ
	|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ВключаемыеВидыНачислений.ВидРасчета КАК ВидРасчета,
	|			ОсновныеИДополнительныеНачисления.ВидРасчета КАК Ссылка,
	|			ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо
	|		ИЗ
	|			" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка КАК Ссылка,
	|					ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета КАК ВидРасчета
	|				ИЗ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ
	|					ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка,
	|					ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|				ИЗ
	|					ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений) КАК ВключаемыеВидыНачислений
	|				ПО ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.Ссылка
	|		ГДЕ
	|			ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|			И НЕ (ВключаемыеВидыНачислений.ВидРасчета ЕСТЬ NULL)) КАК ВключаемыеВидыНачислений
	|		ПО ОсновныеИДополнительныеНачисления.ФизЛицо = ВключаемыеВидыНачислений.ФизЛицо
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеИДополнительныеНачисления.ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета
	|
	|ИНДЕКСИРОВАТЬ ПО 
	|	ОсновныеИДополнительныеНачисления.ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета";
	
	Запрос.Текст = РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст = "ВТ_ПрочиеВключаемыеНачисленияРасчетаОтОбратного";
	
	// Разделим прочие начисления на включаемые внутрь расчета "от обратного" и начисляемые "сверху"
	РасчетОтОбратногоПрочиеНачисленияТекст = "
	|ВЫБРАТЬ
	|	Основной.НомерСтроки,
	|	СУММА(ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного) КАК СуммаНачисленийОтОбратного,
	|	СУММА(ВЫБОР
	|		КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL) 
	|				И НЕ ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета.ОтОбратного
	|			ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
	|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаПрочихВключаемыхНачислений,
	|";
	
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "	
		|	СУММА(ВЫБОР
		|			КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
		|				И ПрочиеВключаемыеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйИПНДоходПрочихВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|			КОГДА (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|					И (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL)
		|					И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
		|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаемыйИПНДоходПрямыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйИПНДоходНачисленийОтОбратного, 
		|	МАКСИМУМ(ОсновныеИДополнительныеНачисления.ОтОбратногоКомпенсируетИПН) КАК ЕстьОтОбратногоКомпенсирующиеИПН,";
	КонецЕсли;

	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
		РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|				И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходВключаемыхНачислений, 
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
		|				И ПрочиеВключаемыеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходПрочихВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|				И (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL)
		|				И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
		|				И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходПрямыхНачислений, 
		|	СУММА(ВЫБОР
		|		КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходНачисленийОтОбратного, 
		|	МАКСИМУМ(ОсновныеИДополнительныеНачисления.ОтОбратногоКомпенсируетОПВ) КАК ЕстьОтОбратногоКомпенсирующиеОПВ,";
	КонецЕсли;

	РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "
	|	СУММА(ВЫБОР
	|			КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеИДополнительныеНачисления.ДополнительныеДанныеОтОбратного
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДополнительныеДанные
	|
	|ПОМЕСТИТЬ ВТ_ПрочиеНачисленияРасчетаОтОбратного
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|		ПО Основной.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Ссылка КАК Ссылка,
	|							ВидРасчета КАК ВидРасчета
	|						ИЗ
	|							ПланВидовРасчета." + ИмяПВР + ".ВключаемыеВРасчетОтОбратногоВидыНачислений) КАК ВключаемыеВРасчетОтОбратногоВидыНачислений
	|		ПО Основной.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст + " КАК ПрочиеВключаемыеНачисления
	|		ПО Основной.ФизЛицо = ПрочиеВключаемыеНачисления.ФизЛицо
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ПрочиеВключаемыеНачисления.ВидРасчета
	|
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Основной.НомерСтроки";	
	Запрос.Текст = РасчетОтОбратногоПрочиеНачисленияТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоПрочиеНачисленияТекст = "ВТ_ПрочиеНачисленияРасчетаОтОбратного";
	
	// общие для любого вида компенсируемых удержаний данные
	РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамПериодРегистрации, Организация = &парамОбособленноеПодразделение) КАК УчетнаяПолитикаНУ
	|	ПО ИСТИНА
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|ПО Основной.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетОтОбратногоПрочиеНачисленияТекст + " КАК РасчетОтОбратногоПрочиеНачисления
	|	ПО Основной.НомерСтроки = РасчетОтОбратногоПрочиеНачисления.НомерСтроки
	|
	|";

	СтруктураРезультат = Новый Структура();
	СтруктураРезультат.Вставить("РасчетОтОбратногоСоединенияТекст", РасчетОтОбратногоСоединенияТекст);
	СтруктураРезультат.Вставить("РасчетОтОбратногоПоляТекст", РасчетОтОбратногоПоляТекст);
	
	Возврат СтруктураРезультат;

КонецФункции // ПолучитьДанныеДляРасчетаОтОбратногоПосле2014()

// Функция формирует тексты запросов для получения данных, необходимых при расчете "от обратного" после 2018 года
// Возвращает структуру с текстами запроса для секций ВЫБРАТЬ И СОЕДИНЕНИЯ
//
Функция ПолучитьДанныеДляРасчетаОтОбратногоПосле2018(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет = Ложь,
									Сотрудники = НеОпределено,
									Налогоплательщик = Неопределено,
									КомментироватьРасчет = Ложь,
									Запрос,
									ВнешнееУсловие)

	РасчетОтОбратногоПоляТекст = ""; // строка с полями запроса
	РасчетОтОбратногоСоединенияТекст = ""; // строка с соединениями в запросе		

	ИмяИсточника = "РегистрРасчета." + ИмяРегистра;
	ИмяПВР = ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций", "ОсновныеНачисленияОрганизаций", "ДополнительныеНачисленияОрганизаций");
	
	// Поля, необходимые для расчета "от обратного" 
	РасчетОтОбратногоПоляТекст = "
	|ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьИПН,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|			ИЛИ ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоУчитыватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьУдержания, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьУдержания,
	|Основной.ВидРасчета.ВидДохода КАК ВидДохода,
	|Основной.ВидРасчета.ОблагаетсяОПВ КАК ОблагаетсяОПВ,
	|Основной.ВидРасчета.ОблагаетсяИПН КАК ОблагаетсяИПН,
	|Основной.ВидРасчета.УчетПрямыхНачислений КАК РасчетОтОбратногоУчитыватьПрямыеНачисления
	|";

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляИПН,
    	|ВЫБОР
		|	КОГДА Основной.ВидРасчета.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
		|		ТОГДА ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.РазрешенныеНалоговыеВычетыДоходыРаботодателя, 0) 
		|	ИНАЧЕ ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.РазрешенныеНалоговыеВычетыПрочиеДоходы, 0)
		|КОНЕЦ КАК РазрешенныеНалоговыеВычеты,
		|ВЫБОР 
		|	КОГДА ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК 
		|		ТОГДА ЕСТЬNULL(СведенияОСтавкахИПНПоНалогоплательщику.СтавкаНерезиденты, ЕСТЬNULL(СведенияОСтавкахИПН.СтавкаНерезиденты, 0))
		|	ИНАЧЕ ЕСТЬNULL(СведенияОСтавкахИПНПоНалогоплательщику.Ставка, ЕСТЬNULL(СведенияОСтавкахИПН.Ставка, 0))
		|КОНЕЦ / 100 КАК ПроцентИПН,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходПрямыхНачислений, 0) КАК ОблагаемыйИПНДоходПрямыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходВключаемыхНачислений, 0) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходПрочихВключаемыхНачислений, 0) КАК ОблагаемыйИПНДоходПрочихВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходНачисленийОтОбратного, 0) КАК ОблагаемыйИПНДоходНачисленийОтОбратного,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ЕстьОтОбратногоКомпенсирующиеИПН, 0) КАК ЕстьОтОбратногоКомпенсирующиеИПН
		|";
	КонецЕсли;
			
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоДанныеОПВ.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляОПВ,
		|&парамРазмерОграниченияПоДоходамОПВ КАК РазмерОграниченияПоДоходамОПВ,
		|&парамСтавкаОПВ КАК ПроцентОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходПрямыхНачислений, 0) КАК ОблагаемыйОПВДоходПрямыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходВключаемыхНачислений, 0) КАК ОблагаемыйОПВДоходВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходПрочихВключаемыхНачислений, 0) КАК ОблагаемыйОПВДоходПрочихВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходНачисленийОтОбратного, 0) КАК ОблагаемыйОПВДоходНачисленийОтОбратного,	
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ЕстьОтОбратногоКомпенсирующиеОПВ, 0) КАК ЕстьОтОбратногоКомпенсирующиеОПВ
		|";
	КонецЕсли;
	Запрос.УстановитьПараметр("парамСтавкаОПВ", ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Организация, Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы, ПериодРегистрации) / 100);
	
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний, 0) КАК СуммаКомпенсируемыхУдержаний,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН, 0) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПНиОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний, 0) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|";
	КонецЕсли;
			
	РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаНачисленийОтОбратного, 0) КАК СуммаНачисленийОтОбратного,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаВключаемыхНачислений, 0) КАК СуммаВключаемыхНачислений,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ДополнительныеДанные, 0) КАК РасчетОтОбратногоДополнительныеДанные
	|";

	// Далее идут тексты запросов по аналогии с функциями ПолучитьДанныеДляРасчетаИПН() и ПолучитьДанныеДляРасчетаОПВ().
	// Отличие по всем текстам в том, что в ПолучитьДанныеДляРасчетаИПН() используется &парамСписокФизЛиц,
	// а в расчете "от обратного" &парамРасчетОтОбратногоСписокФизЛиц.
	// В данном расчете предполагается, что расчет ИПН и ОПВ будет производится с установленным
	// в учетной политике по налоговому учету флажке ОтражениеПоПериодуРегистрации - все данные выбираются по ПериодРегистрации

	Запрос.УстановитьПараметр("парамРегистратор", 				Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 		НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачалоГода", 			    НачалоГода(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", ОбособленноеПодразделение);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", 	    Организация);

	Если Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить() Тогда
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	Налогоплательщик);
	Иначе
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	ОбособленноеПодразделение);
	КонецЕсли;

	// категория начисления
	Запрос.УстановитьПараметр("парамКатегорияНачисления", 		КатегорияРасчета);
	Запрос.УстановитьПараметр("парамПорядокКатегории", 			Перечисления.КатегорииРасчетов.Индекс(КатегорияРасчета));

	// Периоды
	// Таблица список физлиц, по которым необходимо выполнить расчет налога или взносов
	// Поля:
	//		Физлицо
	СписокФизЛицТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Основной.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета.ОтОбратного
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
			
	Запрос.Текст = СписокФизЛицТекст;
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";

	// Составим текст запроса для вычисления всех месяцев периода
	ДатыПериодовГодаТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период
	|ПОМЕСТИТЬ ВТ_ДатыПериодовГодаРасчетаОтОбратного
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) И &парамПериодРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период";
	Запрос.Текст = ДатыПериодовГодаТекст;
	Запрос.Выполнить();
	ДатыПериодовГодаТекст = "ВТ_ДатыПериодовГодаРасчетаОтОбратного";

	// Списки видов расчета, категория расчета которых меньше текущей  (т.е. уже посчитанные)
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПВР.Ссылка
	|ИЗ
	|	ПланВидовРасчета." + ИмяПВР + " КАК ПВР
	|ГДЕ
	|	ПВР.КатегорияРасчета.Порядок < &парамПорядокКатегории
	|";

	Запрос.УстановитьПараметр("парамУжеРассчитанныеВидыРасчета", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	// Определим компенсируемые удержания для каждого вида расчета от обратного
	КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст = " 
	|ВЫБРАТЬ
	|	КомпенсируемыеУдержанияОсновные.Ссылка КАК ВидРасчета,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияОсновные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьИПН,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияОсновные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ КомпенсируемыеУдержанияОсновные.ВидРасчета В (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьУдержания
	|ПОМЕСТИТЬ ВТ_КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеУдержанияОсновные
	|ГДЕ
	|	КомпенсируемыеУдержанияОсновные.Ссылка.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	КомпенсируемыеУдержанияОсновные.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КомпенсируемыеУдержанияДополнительные.Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияДополнительные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьИПН,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияДополнительные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ КомпенсируемыеУдержанияДополнительные.ВидРасчета В (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьУдержания
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеУдержанияДополнительные
	|ГДЕ
	|	КомпенсируемыеУдержанияДополнительные.Ссылка.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	КомпенсируемыеУдержанияДополнительные.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета";
	
	Запрос.Текст = КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст;
	Запрос.Выполнить();
	КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст = "ВТ_КомпенсируемыеРасчетомОтОбратногоВидыУдержаний";
	Запрос.Текст = "ВЫБРАТЬ * ИЗ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст;
	
	// ОсновныеИДополнительныеНачисления
	// Поля:
	//		ФизЛицо
	//		ВидРасчета
	//		Результат
	//	Описание:
	// Выбирает начисления за период регистрации по физлицам, для которых выполняется расчет "от обратного"
	ОсновныеИДополнительныеНачисленияТекст = "
	|ВЫБРАТЬ
	|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ОсновныеНачисления.Результат) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.Сторно 
	|				И ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеНачисления.ДополнительныеДанные
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ДополнительныеДанныеОтОбратного,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				И НЕ ОсновныеНачисления.Сторно
	|				ТОГДА ОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		 КОНЕЦ) КАК СуммаНачисленийОтОбратного,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) КАК ОтОбратногоКомпенсируетИПН,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) КАК ОтОбратногоКомпенсируетОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		 КОНЕЦ) КАК СуммаПрямыхНачислений
	|
	|ПОМЕСТИТЬ ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|		ПО ОсновныеНачисления.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ГДЕ
	|	ОсновныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И (ОсновныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ОсновныеНачисления.Регистратор = &парамРегистратор
	|				И ОсновныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))", "") + "
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисления.ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0),
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета,
	|	СУММА(ДополнительныеНачисления.Результат) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.Сторно 
	|				И ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ДополнительныеНачисления.ДополнительныеДанные
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ДополнительныеДанныеОтОбратного,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				И НЕ ДополнительныеНачисления.Сторно
	|				ТОГДА ДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаНачисленийОтОбратного,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) КАК ОтОбратногоКомпенсируетИПН,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) КАК ОтОбратногоКомпенсируетОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаПрямыхНачислений
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ДополнительныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|		ПО ДополнительныеНачисления.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ГДЕ
	|	ДополнительныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ДополнительныеНачисления.ПериодРегистрации МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И ДополнительныеНачисления.Регистратор <> &парамРегистратор","
	|
	|	// если доп. начисления
	|	И (ДополнительныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ДополнительныеНачисления.Регистратор = &парамРегистратор
	|				И ДополнительныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))") + "
	|СГРУППИРОВАТЬ ПО
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0),
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидРасчета
	|";
	Запрос.Текст = ОсновныеИДополнительныеНачисленияТекст;
	Запрос.Выполнить();
	ОсновныеИДополнительныеНачисленияТекст = "ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного";

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
			
		// ФизлицаНеРезиденты
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц-нерезидентов
		ГражданствоФизЛицТекст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	ГражданствоФизЛиц.ФизЛицо,
		|	ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК
		|
		|ПОМЕСТИТЬ ВТ_ГражданствоФизЛицРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|				&парамКонецПериодаРегистрации, 
		|				ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + " КАК СписокФизЛиц)) КАК ГражданствоФизЛиц
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		Запрос.Текст = ГражданствоФизЛицТекст;
		Запрос.Выполнить();
		ГражданствоФизЛицТекст = "ВТ_ГражданствоФизЛицРасчетаОтОбратного";
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
		|	ПО Основной.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
		|";
		
		// РасчетныеПоказатели
		//	Поля:
		//		Период
		//		РазмерМРП
		//		РазмерМЗП
		//
		//	Описание:
		// Выбирает размер месячного расчетного показателя по периодам
		РасчетныеПоказателиТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказателиСрезПоследних.РазмерМРПДляЦелейНалогообложения КАК РазмерМРП,
		|	РасчетныеПоказателиСрезПоследних.РазмерМЗПДляЦелейНалогообложения КАК РазмерМЗП,
		|	РасчетныеПоказателиСрезПоследних.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
		|	РасчетныеПоказателиСрезПоследних.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
		|
		|ПОМЕСТИТЬ ВТ_РасчетныеПоказателиРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказателиСрезПоследних
		|";
		Запрос.Текст = РасчетныеПоказателиТекст;
		Запрос.Выполнить();
		РасчетныеПоказателиТекст = "ВТ_РасчетныеПоказателиРасчетаОтОбратного";
		
		
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		СуммаДоходаОборот
		//		СуммаВычетаОборот
		//
		//	Описание:
		// Выбирает общую сумму доходов и облагаемые налогом доходы за весь год по физлицам из СписокФизлиц
			
		// Здесь не учитываем доходы, записанные текущим регистратором, т.к. при проведении по ИПНСведенияОДоходах
		// они были еще в процессе расчета и их прибавим позже. А также отдельно выделяем доходы, начисленные в данной 
		// организации за текущий месяц, которые прошли через начисления, прочие доходы не выделяем.
		// Сведения о жилищных и страховых вычетах текущего месяца всегда берем из регистра сведений, т.к. в регистре накопления они 
		// появляются только при прямом расчете налога и поэтому могут отсутствовать, если сейчас первый раз рассчитываются начисления.
		// Т.к. расчет "от обратного" поддерживается только при учетной политикой с ОтражениемПоПериодуРегистрации,
		// то в регистрах Период, ПериодРегистрации и МесяцНалоговогоПериода всегда совпадают, поэтому 
		// устанавливаем отборы по Периоду, т.к. по нему система автоматически создает индекс.
		ДоходыИПНТекст = 
		"ВЫБРАТЬ
		|	ИПНОбороты.Физлицо КАК ФизЛицо,
		|	СУММА(ПрочиеДоходы) КАК ПрочиеДоходы
		|
		|ПОМЕСТИТЬ ВТ_ДоходыИПНРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
		|		СУММА(ВЫБОР
		|				КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ТОГДА ИПНСведенияОДоходах.СуммаДохода - ИПНСведенияОДоходах.СуммаВычета
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ПрочиеДоходы,
		|		ВЫБОР
		|			КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ИЛИ ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РасчетНалоговПриПоступленииАктивовУслуг
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ КАК НачисленоВТекущейОрганизации
		|	ИЗ
		|		РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО ИПНСведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|	ГДЕ
		|		ИПНСведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|		И ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|		И ИПНСведенияОДоходах.Регистратор <> &парамРегистратор
		|		И НЕ(ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ИПНСведенияОДоходах.ФизЛицо,
		|		ИПНСведенияОДоходах.СпособНалогообложения,
		|		ИПНСведенияОДоходах.Регистратор) КАК ИПНОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПНОбороты.Физлицо";
		Запрос.Текст = ДоходыИПНТекст;
		Запрос.Выполнить();
		ДоходыИПНТекст = "ВТ_ДоходыИПНРасчетаОтОбратного";

			
		// ПрименениеВычетовВОрганизации
		//	Поля:
		//		Физлицо,
		//		Период
		//
		// Описание:
		//	Выбирает список физлиц + периоды в которые применяются налоговые вычеты по 
		//	заданной организации
		ПрименениеВычетовВОрганизацииТекст = 
		"ВЫБРАТЬ
		|	ИПНПрименениеВычетов.Физлицо КАК Физлицо
		|
		|ПОМЕСТИТЬ ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ИПНПрименениеВычетов.СрезПоследних(
		|					&парамПериодРегистрации,
		|					ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНПрименениеВычетов
		|
		|ГДЕ
		|	ИПНПрименениеВычетов.Налогоплательщик = &парамНалогоплательщик
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		Запрос.Текст = ПрименениеВычетовВОрганизацииТекст;
		Запрос.Выполнить();
		ПрименениеВычетовВОрганизацииТекст = "ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного";

		// Применение стандартного вычета
		ПрименениеСтандартногоВычета = 
			"ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо КАК ФизЛицо,
			|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП) КАК ВидВычетаИПН,
			|	ВЫБОР
			|		КОГДА НалоговыеВычетыФизлиц.Физлицо ЕСТЬ NULL 
			|				ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
			|				ИЛИ НЕ ЕСТЬNULL(НалоговыеВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
			|			ТОГДА 0
			|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
			|	КОНЕЦ КАК РазрешенныйВычет
			|ПОМЕСТИТЬ ВТ_СтандартныйВычет1МЗП
			|ИЗ
			|	" + СписокФизЛицТекст + "  КАК СписокФизЛиц
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц.СрезПоследних(
			|				&парамКонецПериодаРегистрации,
			|				ФизЛицо В
			|					(ВЫБРАТЬ
			|						СписокФизЛиц.ФизЛицо
			|					ИЗ
			|						" + СписокФизЛицТекст + " КАК СписокФизЛиц)) КАК НалоговыеВычетыФизлиц
			|		ПО СписокФизЛиц.Физлицо = НалоговыеВычетыФизлиц.Физлицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
			|		ПО СписокФизЛиц.Физлицо = ГражданствоФизЛиц.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|		ПО (ИСТИНА)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	СписокФизЛиц.Физлицо,
			|	ВидВычетаИПН";
			
		Запрос.Текст = ПрименениеСтандартногоВычета;
		Запрос.Выполнить();
		ПрименениеСтандартногоВычета = "ВТ_СтандартныйВычет1МЗП";
		
		// ПрименяемыеЛьготы
		//	Поля:
		//		Физлицо
		//		Период
		//		ПрименяетсяЛьготаУчастникаВОВ
		//		ПрименяетсяЛьготаПоИнвалидности
		//		ЛьготаПоДоходу
		//
		//	Описание:
		//	Выбирает по всем периодам года льготы на которые имеет право физлицо
		ПрименяемыеЛьготыТекст = 
			"ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо КАК Физлицо,
			|	ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности,
			|	ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности,
			|	ВЫБОР 
			|		КОГДА (ЛьготыФизлицПоИнвалидности.Физлицо) ЕСТЬ NULL 
			|			ТОГДА 0 
			|		ИНАЧЕ ВЫБОР 
			|				КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
			|						И ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности = ""III"" 
			|					ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
			|				ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
			|			  КОНЕЦ 
			|	КОНЕЦ КАК ЛьготаПоИнвалидности,
			|	ВЫБОР 
			|		КОГДА (ЛьготыФизлицУчастниковВОВ.Физлицо) ЕСТЬ NULL 
			|			ТОГДА 0 
			|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) 
			|	КОНЕЦ КАК ЛьготаУчастникаВОВ
			|ПОМЕСТИТЬ ВТ_ИПНЛьготыФизлиц
			|		
			|ИЗ
			|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
			|						&парамКонецПериодаРегистрации,
			|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ЛьготыФизлицПоИнвалидности
			|		ПО ЛьготыФизлицПоИнвалидности.Физлицо = СписокФизЛиц.Физлицо
			|			И (ЛьготыФизЛицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
			|				ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизЛицПоИнвалидности.СрокДействияСправки, ДЕНЬ) >= &парамКонецПериодаРегистрации)
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(
			|						&парамКонецПериодаРегистрации,
			|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ЛьготыФизлицУчастниковВОВ
			|		ПО ЛьготыФизлицУчастниковВОВ.Физлицо = СписокФизЛиц.Физлицо
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|		ПО ИСТИНА
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИПНЛьготыФизлиц.Физлицо,
			|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды) КАК ВидВычетаИПН,
			|	
			|	ИПНЛьготыФизлиц.ОтношениеКИнвалидности,
			|	ИПНЛьготыФизлиц.ГруппаИнвалидности,
			|
			|	ВЫБОР
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > 0 
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ПрименяетсяЛьготаУчастникаВОВ,
			|
			|	ВЫБОР
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаПоИнвалидности > 0 
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ПрименяетсяЛьготаПоИнвалидности,
			|
			|	ВЫБОР 
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
			|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ 
			|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
			|	КОНЕЦ КАК ЛьготаПоДоходу
			|
			|ПОМЕСТИТЬ ВТ_ПрименяемыеЛьготыРасчетаОтОбратного
			|ИЗ
			|	ВТ_ИПНЛьготыФизлиц КАК ИПНЛьготыФизлиц
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
			|		ПО ИПНЛьготыФизлиц.Физлицо = ГражданствоФизЛиц.ФизЛицо
			|ГДЕ
			|   НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, Ложь)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ИПНЛьготыФизлиц.Физлицо
			|";
		Запрос.Текст = ПрименяемыеЛьготыТекст;
		Запрос.Выполнить();
		ПрименяемыеЛьготыТекст = "ВТ_ПрименяемыеЛьготыРасчетаОтОбратного";
		
		// Прочие вычеты по периодическим платежам
		ПрочиеВычетыТекст = 
			"ВЫБРАТЬ
			|	ИПНПлановыеВычеты.ФизЛицо,
			|	ИПНПлановыеВычеты.ВычетИПН КАК ВидВычетаИПН,
			|	СУММА(ИПНПлановыеВычеты.СуммаВычета) КАК РазрешенныйВычет
			|ПОМЕСТИТЬ ВТ_ПрочиеВычеты
			|ИЗ
			|	РегистрСведений.ИПНПлановыеНалоговыеВычетыФизЛиц.СрезПоследних(
			|			&парамКонецПериодаРегистрации,
			|			Налогоплательщик = &парамНалогоплательщик
			|			И МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
			|			И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНПлановыеВычеты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК  СписокФизЛиц
			|			ПО ИПНПлановыеВычеты.ФизЛицо = СписокФизЛиц.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ГражданствоФизЛицТекст + " КАК ГражданствоФизЛиц
			|		ПО ИПНПлановыеВычеты.Физлицо = ГражданствоФизЛиц.ФизЛицо
			|ГДЕ
			|   НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, Ложь)
			|
			|СГРУППИРОВАТЬ ПО
			|	ИПНПлановыеВычеты.ФизЛицо,
			|	ИПНПлановыеВычеты.ВычетИПН
			|";
		Запрос.Текст = ПрочиеВычетыТекст;
		Запрос.Выполнить();
		ПрочиеВычетыТекст = "ВТ_ПрочиеВычеты";

		
		//Итоговая таблица видов вычетов
		РазмерыВычетовыИПН = 
			"ВЫБРАТЬ
			|	СтандартныйВычет1МЗП.Физлицо КАК ФизическоеЛицо,
			|	СтандартныйВычет1МЗП.ВидВычетаИПН КАК ВидВычетаИПН,
			|	СтандартныйВычет1МЗП.РазрешенныйВычет КАК РазмерВычета,
			|	СтандартныйВычет1МЗП.РазрешенныйВычет КАК СуммовойПределВычета,
			|	2 КАК Приоритет
			|ПОМЕСТИТЬ ВТ_РазмерыВычетовИПН
			|ИЗ
			|	ВТ_СтандартныйВычет1МЗП КАК СтандартныйВычет1МЗП
			|ГДЕ
			|	СтандартныйВычет1МЗП.РазрешенныйВычет <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПрименяемыеЛьготы.Физлицо,
			|	ПрименяемыеЛьготы.ВидВычетаИПН,
			|	ПрименяемыеЛьготы.ЛьготаПоДоходу,
			|	ПрименяемыеЛьготы.ЛьготаПоДоходу,
			|	3
			|ИЗ
			|	ВТ_ПрименяемыеЛьготыРасчетаОтОбратного КАК ПрименяемыеЛьготы
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПрочиеВычеты.Физлицо,
			|	ПрочиеВычеты.ВидВычетаИПН,
			|	ПрочиеВычеты.РазрешенныйВычет,
			|	ВЫБОР 
			|		КОГДА ПрочиеВычеты.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
			|			ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) * 8
			|		ИНАЧЕ ПрочиеВычеты.РазрешенныйВычет
			|	КОНЕЦ,
			|	4
			|ИЗ
			|	ВТ_ПрочиеВычеты КАК ПрочиеВычеты
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|			ПО ИСТИНА
			|ИНДЕКСИРОВАТЬ ПО
			|	ВидВычетаИПН,
			|	ФизическоеЛицо,
			|	Приоритет";
		
		Запрос.Текст = РазмерыВычетовыИПН;
		Запрос.Выполнить();
	    РазмерыВычетовыИПН = "ВТ_РазмерыВычетовИПН";
		
		// Соберем накопленные сведения по исчисленным вычетам
		НакопленныеДанныеПоВычетамТекст = 
			"ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо,
			|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета КАК ВидВычетаИПН,
			|	СУММА(ВЫБОР
			|			КОГДА НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
			|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК РазрешенныйВычетСНачалаГода,
			|	СУММА(ВЫБОР
			|			КОГДА НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
			|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК ПримененныйВычетСНачалаГода
			|ПОМЕСТИТЬ ВТ_НакопленныеДанные
			|ИЗ
			|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОбИсчисленииВычетовИПН.Обороты(&парамНачалоГода, &парамПериодРегистрации, Месяц, ) КАК СведенияОбИсчисленииВычетовИПНОбороты
			|		ПО СписокФизЛиц.Физлицо = (ВЫБОР
			|										КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо ССЫЛКА Справочник.Контрагенты
			|											ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо.ФизЛицо
			|										ИНАЧЕ СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
			|									КОНЕЦ)
			|			И &парамПериодРегистрации > СведенияОбИсчисленииВычетовИПНОбороты.Период
			|			И (НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД))
			|
			|СГРУППИРОВАТЬ ПО
			|	СписокФизЛиц.Физлицо,
			|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо,
			|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды),
			|	0,
			|	ВЫБОР
			|		КОГДА НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, ГОД)
			|			ТОГДА СведенияПредыдущегоМестаРаботыФизЛиц.ПримененнаяЛьгота
			|		ИНАЧЕ 0
			|	КОНЕЦ
			|ИЗ
			|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
			|		ПО &парамПериодРегистрации >= СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода
			|			И СписокФизЛиц.Физлицо = СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_НакопленныеДанныеПоВычетам.Физлицо,
			|	ВТ_НакопленныеДанныеПоВычетам.ВидВычетаИПН,
			|	СУММА(ВТ_НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода) КАК РазрешенныйВычетСНачалаГода,
			|	СУММА(ВТ_НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода) КАК ПримененныйВычетСНачалаГода
			|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетам
			|ИЗ
			|	ВТ_НакопленныеДанные КАК ВТ_НакопленныеДанныеПоВычетам
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_НакопленныеДанныеПоВычетам.Физлицо,
			|	ВТ_НакопленныеДанныеПоВычетам.ВидВычетаИПН";
			
		Запрос.Текст = НакопленныеДанныеПоВычетамТекст;
		Запрос.Выполнить();
		НакопленныеДанныеПоВычетамТекст = "ВТ_НакопленныеДанныеПоВычетам";

		// Общий итог применяемых вычетов
		ПрименяемыеВычетыТекст = 
			"ВЫБРАТЬ
			|	РазмерыВычетов.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РазмерыВычетов.ВидВычетаИПН КАК ВидВычетаИПН,
			|	РазмерыВычетов.Приоритет КАК Приоритет,
			|	РазмерыВычетов.РазмерВычета КАК РазмерВычета,
			|	РазмерыВычетов.СуммовойПределВычета КАК СуммовойПределВычета,
			|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) КАК РазрешенныйВычетСНачалаГода,
			|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода, 0) КАК ПримененныйВычетСНачалаГода,
			|	ВЫБОР
			|		КОГДА РазмерыВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
			|			ТОГДА РазмерыВычетов.СуммовойПределВычета - ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0)
			|		КОГДА РазмерыВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
			|				И РазмерыВычетов.СуммовойПределВычета - ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) < РазмерыВычетов.РазмерВычета
			|			ТОГДА РазмерыВычетов.СуммовойПределВычета - ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0)
			|		ИНАЧЕ РазмерыВычетов.РазмерВычета
			|	КОНЕЦ КАК РазрешенныйВычетВТекущемПериоде,
			|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) - ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода, 0) КАК ОстатокВычетаЗаПрошлыеМесяцы
			|ПОМЕСТИТЬ ВТ_ДанныеДляРасчетаВычетов
			|ИЗ
			|	ВТ_РазмерыВычетовИПН КАК РазмерыВычетов
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НакопленныеДанныеПоВычетам КАК НакопленныеДанныеПоВычетам
			|		ПО РазмерыВычетов.ФизическоеЛицо = НакопленныеДанныеПоВычетам.Физлицо
			|			И РазмерыВычетов.ВидВычетаИПН = НакопленныеДанныеПоВычетам.ВидВычетаИПН
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СУММА(ВТ_ДанныеДляРасчетаВычетов.РазрешенныйВычетВТекущемПериоде + ВТ_ДанныеДляРасчетаВычетов.ОстатокВычетаЗаПрошлыеМесяцы) КАК РазрешенныеНалоговыеВычетыДоходыРаботодателя,
			|	СУММА(ВЫБОР
			|			КОГДА ВТ_ДанныеДляРасчетаВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
			|				ТОГДА ВТ_ДанныеДляРасчетаВычетов.РазрешенныйВычетВТекущемПериоде + ВТ_ДанныеДляРасчетаВычетов.ОстатокВычетаЗаПрошлыеМесяцы
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК РазрешенныеНалоговыеВычетыПрочиеДоходы
			|ПОМЕСТИТЬ ВТ_ПрименяемыеВычеты
			|ИЗ
			|	ВТ_ДанныеДляРасчетаВычетов КАК ВТ_ДанныеДляРасчетаВычетов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного КАК ПрименениеВычетовВОрганизации
			|		ПО ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо = ПрименениеВычетовВОрганизации.ФизЛицо
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо";
			
		Запрос.Текст = ПрименяемыеВычетыТекст;
		Запрос.Выполнить();
		ПрименяемыеВычетыТекст = "ВТ_ПрименяемыеВычеты";

		БазаДляИсчисленияИПНТекст = "
		|ВЫБРАТЬ
		|	СписокФизЛиц.ФизЛицо,
		|	ЕСТЬNULL(Доходы.ПрочиеДоходы, 0) КАК ПрочиеДоходы,
	    |	ЕСТЬNULL(ПрименяемыеВычеты.РазрешенныеНалоговыеВычетыПрочиеДоходы, 0) КАК РазрешенныеНалоговыеВычетыПрочиеДоходы,
	    |	ЕСТЬNULL(ПрименяемыеВычеты.РазрешенныеНалоговыеВычетыДоходыРаботодателя, 0) КАК РазрешенныеНалоговыеВычетыДоходыРаботодателя
		|
		|ПОМЕСТИТЬ ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного
		|ИЗ
		|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыИПНТекст + " КАК Доходы
		|		ПО СписокФизЛиц.ФизЛицо = Доходы.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеВычетыТекст + " КАК ПрименяемыеВычеты
		|		ПО СписокФизЛиц.ФизЛицо = ПрименяемыеВычеты.ФизическоеЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СписокФизЛиц.ФизЛицо
		|";
		
		Запрос.Текст = БазаДляИсчисленияИПНТекст;
		Запрос.Выполнить();
		БазаДляИсчисленияИПНТекст = "ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + БазаДляИсчисленияИПНТекст;

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + БазаДляИсчисленияИПНТекст + " КАК РасчетОтОбратногоДанныеИПН
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеИПН.ФизЛицо
		|	   И Основной.ВидРасчета.ОтОбратного
		|";

		СведенияОСтавкахИПНПоНалогоплательщикуТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахИПНПоНалогоплательщику.ВидДохода,
			|	СведенияОСтавкахИПНПоНалогоплательщику.Ставка,
			|	СведенияОСтавкахИПНПоНалогоплательщику.СтавкаНерезиденты
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахИПНПоНалогоплательщику
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахИПН.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = &парамНалогоплательщик) КАК СведенияОСтавкахИПНПоНалогоплательщику";
			
		Запрос.Текст = СведенияОСтавкахИПНПоНалогоплательщикуТекст;
		Запрос.Выполнить();
		СведенияОСтавкахИПНПоНалогоплательщикуТекст = "ВТ_СведенияОСтавкахИПНПоНалогоплательщику";
		
		СведенияОСтавкахИПНТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахИПН.ВидДохода,
			|	СведенияОСтавкахИПН.Ставка,
			|	СведенияОСтавкахИПН.СтавкаНерезиденты
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахИПН
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахИПН.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК СведенияОСтавкахИПН";
			
		Запрос.Текст = СведенияОСтавкахИПНТекст;
		Запрос.Выполнить();
		СведенияОСтавкахИПНТекст = "ВТ_СведенияОСтавкахИПН";

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахИПНПоНалогоплательщикуТекст + " КАК СведенияОСтавкахИПНПоНалогоплательщику
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахИПНПоНалогоплательщику.ВидДохода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахИПНТекст + " КАК СведенияОСтавкахИПН
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахИПН.ВидДохода
		|";
		
	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
			
		СписокГруппИнвалидности = Новый СписокЗначений;
		СписокГруппИнвалидности.Добавить("I");
		СписокГруппИнвалидности.Добавить("II");
			
		Запрос.УстановитьПараметр("парамСписокГруппИнвалидности",  СписокГруппИнвалидности);
			
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		ОблагаемыйДоход
		//
		//	Описание:
		// Выбирает облагаемые взносами доходы за периоды по физлицам
		
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то доходы всегда выбираются только за расчетный месяц. Отдельно выделим прочие доходы, зарегистрированные в обход начислений.
		ДоходыТекст = "
		|ВЫБРАТЬ
		|	ОПВСведенияОДоходах.ФизЛицо КАК Физлицо,
		|	СУММА(ВЫБОР
		|			КОГДА ОПВСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|				ТОГДА ОПВСведенияОДоходах.СуммаДохода - ОПВСведенияОДоходах.СуммаВычета
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПрочиеДоходы
		|
		|ПОМЕСТИТЬ ВТ_ДоходыОПВРасчетаОтОбратного
		|ИЗ
		|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|		ПО ОПВСведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|ГДЕ
		|	ОПВСведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|	И ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|	
		|СГРУППИРОВАТЬ ПО
		|	ОПВСведенияОДоходах.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОПВСведенияОДоходах.ФизЛицо";
		
		Запрос.Текст = ДоходыТекст;
		Запрос.Выполнить();
		ДоходыТекст = "ВТ_ДоходыОПВРасчетаОтОбратного";

		// Здесь не берем имеющийся за МесяцНалоговогоПериода в ОПВРасчетыСФондами взнос, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то ранее исчисленные взносы всегда выбираются только за расчетный месяц. Поэтому запроса к ОПВРасчетыСФондами вообще не требуется.

		// РазмерОграниченияПоДоходам
		РазмерОграниченияПоДоходамТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказатели.РазмерМЗП * 75 КАК ОграничениеПоДоходам
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказатели
		|";
			
		Запрос.Текст = РазмерОграниченияПоДоходамТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", Выборка.ОграничениеПоДоходам);
		Иначе
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", 0);
		КонецЕсли;

		// ФизлицаБезПраваНаПенсию
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц не имеющих право на пенсионное обеспечение
		ФизлицаБезПраваНаПенсиюТекст = "
		|ВЫБРАТЬ
		|	ГражданствоФизЛиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаБезПраваНаПенсию
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ГражданствоФизЛиц
		|
		|ГДЕ
		|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
				
		Запрос.Текст = ФизлицаБезПраваНаПенсиюТекст;
		Запрос.Выполнить();
		ФизлицаБезПраваНаПенсиюТекст = "ВТ_ФизлицаБезПраваНаПенсию";
			
		// ФизлицаПенсионеры
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц достигших пенсионный возраст
		ФизлицаПенсионерыТекст = "
		|ВЫБРАТЬ
		|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаПенсионеры
		|ИЗ
		|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОПенсионномОбеспеченииФизЛиц
		|
		|ГДЕ
		|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
			
		Запрос.Текст = ФизлицаПенсионерыТекст;
		Запрос.Выполнить();
		ФизлицаПенсионерыТекст = "ВТ_ФизлицаПенсионеры";

		// ФизлицаИнвалидыБессрочно
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц-инвалидов I и II группы, у которых инвалидность установлена бессрочно
		ФизлицаИнвалидыБессрочноТекст = "
		|ВЫБРАТЬ
		|	СведенияОбИнвалидностиФизлиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаИнвалидыБессрочно
		|ИЗ
		|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОбИнвалидностиФизлиц
		|
		|ГДЕ
		|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
		|	И СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности В (&парамСписокГруппИнвалидности)
		|	И СведенияОбИнвалидностиФизлиц.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
			
		Запрос.Текст = ФизлицаИнвалидыБессрочноТекст;
		Запрос.Выполнить();
		ФизлицаИнвалидыБессрочноТекст = "ВТ_ФизлицаИнвалидыБессрочно";

		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ВЫБОР
		|	КОГДА Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизЛицаПенсионерыТекст + ")
		|		  ИЛИ Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизЛицаБезПраваНаПенсиюТекст + ")
		|		  ИЛИ Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаИнвалидыБессрочноТекст + ") ТОГДА ЛОЖЬ
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ КАК ПризнакИсчисленияОПВ
		|";
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыТекст + " КАК РасчетОтОбратногоДанныеОПВ
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеОПВ.ФизЛицо
		|	   И Основной.ВидРасчета.ОтОбратного
		|";

	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
	   
	   // для списка погашамых удержаний определим общую сумму
	   Запрос.УстановитьПараметр("парамСпособыРасчетаФиксированнойСуммой", ПроведениеРасчетов.ПолучитьСписокСпособовРасчетовФиксированнойСуммой());
	   Запрос.УстановитьПараметр("парамВалютаРегламентУчета", Константы.ВалютаРегламентированногоУчета.Получить());

	   // ПлановыеУдержания
	   // Поля:
	   //		ФизЛицо
	   //		ВидРасчета
	   //		ВидСтроки
	   //		Размер
	   //	Описание:
	   // Выбирает плановые и фактические удержания за период регистрации для физлиц, по которым производится расчет "от обратного".
	   // Фактические удержания берем только те, что введены как разовые, чтобы не задублировать плановые, если уже создан и проведен
	   // документ "Расчет ИПН, ОПВ и удержаний" и заново пересчитывают "от обратного"
		
	   ПлановыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1 КАК Размер,
		|	ПлановыеУдержания.Валюта1 КАК Валюта,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.Период < &парамПериодРегистрации ТОГДА &парамПериодРегистрации
		|		ИНАЧЕ ПлановыеУдержания.Период
		|	КОНЕЦ КАК ДатаНачала,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ПлановыеУдержания.ПериодЗавершения <= &парамКонецПериодаРегистрации
		|			ТОГДА КОНЕЦПЕРИОДА(ПлановыеУдержания.ПериодЗавершения, ДЕНЬ)
		|		ИНАЧЕ МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонецПериодаРегистрации))
		|	КОНЕЦ КАК ДатаОкончания
		|
		|ПОМЕСТИТЬ ВТ_ПлановыеУдержанияРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|		ПО ПлановыеУдержания.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК СледующиеПлановыеУдержания
		|		ПО ПлановыеУдержания.Организация = СледующиеПлановыеУдержания.Организация
		|			И ПлановыеУдержания.Физлицо = СледующиеПлановыеУдержания.Физлицо
		|			И ПлановыеУдержания.ВидРасчета = СледующиеПлановыеУдержания.ВидРасчета
		|			И ПлановыеУдержания.ДокументОснование = СледующиеПлановыеУдержания.ДокументОснование
		|			И СледующиеПлановыеУдержания.Период > ПлановыеУдержания.Период
		|			И СледующиеПлановыеУдержания.Период <= &парамКонецПериодаРегистрации
		|
		|ГДЕ
		|	ПлановыеУдержания.Организация = &парамГоловнаяОрганизация
		|	И ПлановыеУдержания.Период <= &парамКонецПериодаРегистрации
		|	И ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1) 
		|				И ПлановыеУдержания.ПериодЗавершения < &парамПериодРегистрации ТОГДА ПлановыеУдержания.ДействиеЗавершения
		|		ИНАЧЕ ПлановыеУдержания.Действие
		|	  КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1,
		|	ПлановыеУдержания.Валюта1,
		|	ПлановыеУдержания.Период,
		|	ПлановыеУдержания.ПериодЗавершения
		|
		|ИМЕЮЩИЕ
		|	МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонецПериодаРегистрации)) >= &парамПериодРегистрации
		|";
		Запрос.Текст = ПлановыеУдержанияТекст;
		Запрос.Выполнить();
		ПлановыеУдержанияТекст = "ВТ_ПлановыеУдержанияРасчетаОтОбратного";
		
		// В качестве фактических берем только те, что зарегистрированы как 
		// разовые, т.к. все остальные будут взяты из плановых
		ПлановыеИФактическиеУдержанияТекст = "
		|ВЫБРАТЬ
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	Удержания.ВидРасчета.ВычитатьИзБазыИПН КАК ВычитатьИзБазыИПН,
		|	Удержания.ВидРасчета.ВычитатьИзБазыОПВ КАК ВычитатьИзБазыОПВ,
		|	Удержания.ВидСтроки,
		|	СУММА(Удержания.Результат) КАК Результат,
		|	СУММА(ВЫБОР
		|			КОГДА Удержания.Валюта = &парамВалютаРегламентУчета ИЛИ Удержания.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|				ТОГДА Удержания.Размер
		|			ИНАЧЕ Удержания.Размер * ЕСТЬNULL(Валюты.Курс, 0) / ЕСТЬNULL(Валюты.Кратность, 1)
		|		  КОНЕЦ) КАК Размер
		|
		|ПОМЕСТИТЬ ВТ_ПлановыеИФактическиеУдержанияРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|			ПлановыеУдержания.ФизЛицо,
		|			ПлановыеУдержания.ВидРасчета,
		|			""ПлановыеУдержания"" КАК ВидСтроки,
		|			0 КАК Результат,
		|			ПлановыеУдержания.Размер,
		|			ПлановыеУдержания.Валюта
		|		ИЗ
		|			" + ПлановыеУдержанияТекст + " КАК ПлановыеУдержания
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Удержания.ФизЛицо,
		|		Удержания.ВидРасчета,
		|		""ФактическиеУдержания"" КАК ВидСтроки,
		|		Удержания.Результат,
		|		Удержания.Показатель1 КАК Размер,
		|		ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
		|	ИЗ
		|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО Удержания.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|	ГДЕ
		|		Удержания.Организация = &парамГоловнаяОрганизация 
		|		И Удержания.ПериодРегистрации = &парамПериодРегистрации
		|		И Удержания.Результат <> 0
		|		И НЕ (Удержания.Регистратор ССЫЛКА Документ.РасчетУдержанийРаботниковОрганизаций)
		|	) КАК Удержания
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты
		|	ПО Валюты.Период = &парамПериодРегистрации И Валюты.Валюта = Удержания.Валюта
		|
		|СГРУППИРОВАТЬ ПО
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.ВидРасчета.СпособРасчета,
		|	Удержания.ВидСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Удержания.ФизЛицо
		|";
		Запрос.Текст = ПлановыеИФактическиеУдержанияТекст;
		Запрос.Выполнить();
		ПлановыеИФактическиеУдержанияТекст = "ВТ_ПлановыеИФактическиеУдержанияРасчетаОтОбратного";
			   
		
		
		РанееКомпенсированныеУдержанияСуммойТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КомпенсируемыеВидыУдержанийОсновные.Ссылка КАК ВидРасчета,
		|	КомпенсируемыеВидыУдержанийОсновные.ВидРасчета КАК ВидУдержания
		|ПОМЕСТИТЬ ВТ_КомпенсируемыеУдержанияСуммой
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеВидыУдержанийОсновные
		|
		|ГДЕ
		|	КомпенсируемыеВидыУдержанийОсновные.ВидРасчета ССЫЛКА ПланВидовРасчета.УдержанияОрганизаций
		|	И КомпенсируемыеВидыУдержанийОсновные.ВидРасчета.СпособРасчета В(&парамСпособыРасчетаФиксированнойСуммой)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КомпенсируемыеВидыУдержанийДополнительные.Ссылка,
		|	КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеВидыУдержанийДополнительные
		|
		|ГДЕ
		|	КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета ССЫЛКА ПланВидовРасчета.УдержанияОрганизаций
		|	И КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета.СпособРасчета В(&парамСпособыРасчетаФиксированнойСуммой)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|   ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	КомпенсируемыеУдержанияСуммой.ВидУдержания
		|ПОМЕСТИТЬ ВТ_РанееКомпенсированныеУдержанияСуммой
		|ИЗ
		|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КомпенсируемыеУдержанияСуммой КАК КомпенсируемыеУдержанияСуммой
		|		ПО ОсновныеИДополнительныеНачисления.ВидРасчета = КомпенсируемыеУдержанияСуммой.ВидРасчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	ВидУдержания";
		
		Запрос.Текст = РанееКомпенсированныеУдержанияСуммойТекст;
		Запрос.Выполнить();
		РанееКомпенсированныеУдержанияСуммойТекст = "ВТ_РанееКомпенсированныеУдержанияСуммой";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + РанееКомпенсированныеУдержанияСуммойТекст;
		
		// КомпенсируемыеУдержания
		// Поля:
		//		ФизЛицо
		//		ВидУдержания
		//		Результат
		//		Размер
		//	Описание:
		// Рассчитывает результат по каждому компенсируемому виду удержаний 
		КомпенсируемыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	Основной.НомерСтроки,
		|	Основной.ВидРасчета КАК ВидРасчетаОтОбратного,
		|	ПлановыеИФактическиеУдержания.ФизЛицо,
		|	ПлановыеИФактическиеУдержания.ВидРасчета КАК ВидУдержания,
		|	ПлановыеИФактическиеУдержания.ВидСтроки,
		|
		|	МАКСИМУМ(ВЫБОР
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ФактическиеУдержания""
		|					ТОГДА ПлановыеИФактическиеУдержания.Результат
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета В (&парамСпособыРасчетаФиксированнойСуммой)
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|			КОНЕЦ) 
		|	+
		|	МАКСИМУМ(ВЫБОР
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|			КОНЕЦ) / 100 * 
		|	СУММА(ЕСТЬNULL(ОсновныеИДополнительныеНачисления.Результат, 0)) КАК СуммаКомпенсируемыхУдержаний,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|
		|ПОМЕСТИТЬ ВТ_КомпенсируемыеУдержанияРасчетаОтОбратного
		|ИЗ
		|	" + ИмяИсточника + " КАК Основной
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПлановыеИФактическиеУдержанияТекст + " КАК ПлановыеИФактическиеУдержания
		|
		|		ПО Основной.ФизЛицо = ПлановыеИФактическиеУдержания.ФизЛицо
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|											КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.Ссылка КАК ВидРасчетаОтОбратного,
		|											КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
		|										ИЗ
		|											ПланВидовРасчета." + ИмяПВР + ".КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний) КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
		|					ПО Основной.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчетаОтОбратного 
		|					   И ПлановыеИФактическиеУдержания.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + РанееКомпенсированныеУдержанияСуммойТекст + " КАК РанееКомпенсированныеУдержанияСуммой
		|		ПО Основной.ФизЛицо = РанееКомпенсированныеУдержанияСуммой.ФизЛицо
		|			И КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета = РанееКомпенсированныеУдержанияСуммой.ВидУдержания
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК БазовыеВидыРасчета
		|		ПО ПлановыеИФактическиеУдержания.ВидРасчета = БазовыеВидыРасчета.Ссылка
		|		   И ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|		   И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ВключаемыеВидыНачислений.Ссылка КАК Ссылка,
		|	ОсновныеИДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ОсновныеИДополнительныеНачисления.Результат КАК Результат
		|	ИЗ
		|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВключаемыеВидыНачислений.Ссылка КАК Ссылка,
		|			ВключаемыеВидыНачислений.ВидРасчета КАК ВидРасчета
		|		ИЗ
		|			ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ВключаемыеВидыНачислений
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ВключаемыеВидыНачислений.Ссылка,
		|			ВключаемыеВидыНачислений.ВидРасчета
		|		ИЗ
		|			ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ВключаемыеВидыНачислений) КАК ВключаемыеВидыНачислений
		|		ПО ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.ВидРасчета) КАК ОсновныеИДополнительныеНачисления
		|	ПО ПлановыеИФактическиеУдержания.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо
		|	   И БазовыеВидыРасчета.ВидРасчета = ОсновныеИДополнительныеНачисления.ВидРасчета
		|		И Основной.ВидРасчета = ОсновныеИДополнительныеНачисления.Ссылка
		|
		|ГДЕ
		|	" + ВнешнееУсловие + "
		|	И Основной.ВидРасчета.ОтОбратного
		|	И РанееКомпенсированныеУдержанияСуммой.ФизЛицо ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	Основной.НомерСтроки,
		|	Основной.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ФизЛицо,
		|	ПлановыеИФактическиеУдержания.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ВидСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Основной.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ВидРасчета
		|";
		Запрос.Текст = КомпенсируемыеУдержанияТекст;
		Запрос.Выполнить();
		КомпенсируемыеУдержанияТекст = "ВТ_КомпенсируемыеУдержанияРасчетаОтОбратного";
		
		
		
		
		

		
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						КомпенсируемыеУдержания.НомерСтроки,
		|						СУММА(КомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний) КАК СуммаКомпенсируемыхУдержаний,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПНиОПВ) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|						СУММА(КомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|					ИЗ
		|						" + КомпенсируемыеУдержанияТекст + " КАК КомпенсируемыеУдержания
		|					СГРУППИРОВАТЬ ПО 
		|						КомпенсируемыеУдержания.НомерСтроки
		|					) КАК РасчетОтОбратногоКомпенсируемыеУдержания
		|	ПО Основной.НомерСтроки = РасчетОтОбратногоКомпенсируемыеУдержания.НомерСтроки
		|";
	КонецЕсли;

	
	// определим суммы включаемых начислений ранее исчисленных расчетов от обратного,
	// рассчитанными как текущим, так и другими регистраторами
	
	РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст = "
	|ВЫБРАТЬ
	|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйОПВДоходВключаемыхНачислений
	|ПОМЕСТИТЬ ВТ_ПрочиеВключаемыеНачисленияРасчетаОтОбратного
	|ИЗ
	|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ВключаемыеВидыНачислений.ВидРасчета КАК ВидРасчета,
	|			ОсновныеИДополнительныеНачисления.ВидРасчета КАК Ссылка,
	|			ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо
	|		ИЗ
	|			" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка КАК Ссылка,
	|					ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета КАК ВидРасчета
	|				ИЗ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ
	|					ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка,
	|					ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|				ИЗ
	|					ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений) КАК ВключаемыеВидыНачислений
	|				ПО ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.Ссылка
	|		ГДЕ
	|			ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|			И НЕ (ВключаемыеВидыНачислений.ВидРасчета ЕСТЬ NULL)) КАК ВключаемыеВидыНачислений
	|		ПО ОсновныеИДополнительныеНачисления.ФизЛицо = ВключаемыеВидыНачислений.ФизЛицо
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеИДополнительныеНачисления.ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета
	|
	|ИНДЕКСИРОВАТЬ ПО 
	|	ОсновныеИДополнительныеНачисления.ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета";
	
	Запрос.Текст = РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст = "ВТ_ПрочиеВключаемыеНачисленияРасчетаОтОбратного";
	
	// Разделим прочие начисления на включаемые внутрь расчета "от обратного" и начисляемые "сверху"
	РасчетОтОбратногоПрочиеНачисленияТекст = "
	|ВЫБРАТЬ
	|	Основной.НомерСтроки,
	|	СУММА(ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного) КАК СуммаНачисленийОтОбратного,
	|	СУММА(ВЫБОР
	|		КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL) 
	|				И НЕ ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета.ОтОбратного
	|			ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
	|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаПрочихВключаемыхНачислений,
	|";
	
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "	
		|	СУММА(ВЫБОР
		|			КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
		|				И ПрочиеВключаемыеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйИПНДоходПрочихВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|			КОГДА (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|					И (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL)
		|					И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
		|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаемыйИПНДоходПрямыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйИПНДоходНачисленийОтОбратного, 
		|	МАКСИМУМ(ОсновныеИДополнительныеНачисления.ОтОбратногоКомпенсируетИПН) КАК ЕстьОтОбратногоКомпенсирующиеИПН,";
	КонецЕсли;

	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
		РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|				И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходВключаемыхНачислений, 
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
		|				И ПрочиеВключаемыеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходПрочихВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|				И (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL)
		|				И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
		|				И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходПрямыхНачислений, 
		|	СУММА(ВЫБОР
		|		КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходНачисленийОтОбратного, 
		|	МАКСИМУМ(ОсновныеИДополнительныеНачисления.ОтОбратногоКомпенсируетОПВ) КАК ЕстьОтОбратногоКомпенсирующиеОПВ,";
	КонецЕсли;

	РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "
	|	СУММА(ВЫБОР
	|			КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеИДополнительныеНачисления.ДополнительныеДанныеОтОбратного
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДополнительныеДанные
	|
	|ПОМЕСТИТЬ ВТ_ПрочиеНачисленияРасчетаОтОбратного
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|		ПО Основной.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Ссылка КАК Ссылка,
	|							ВидРасчета КАК ВидРасчета
	|						ИЗ
	|							ПланВидовРасчета." + ИмяПВР + ".ВключаемыеВРасчетОтОбратногоВидыНачислений) КАК ВключаемыеВРасчетОтОбратногоВидыНачислений
	|		ПО Основной.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст + " КАК ПрочиеВключаемыеНачисления
	|		ПО Основной.ФизЛицо = ПрочиеВключаемыеНачисления.ФизЛицо
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ПрочиеВключаемыеНачисления.ВидРасчета
	|
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Основной.НомерСтроки";	
	Запрос.Текст = РасчетОтОбратногоПрочиеНачисленияТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоПрочиеНачисленияТекст = "ВТ_ПрочиеНачисленияРасчетаОтОбратного";
	
	// общие для любого вида компенсируемых удержаний данные
	РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамПериодРегистрации, Организация = &парамОбособленноеПодразделение) КАК УчетнаяПолитикаНУ
	|	ПО ИСТИНА
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|ПО Основной.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетОтОбратногоПрочиеНачисленияТекст + " КАК РасчетОтОбратногоПрочиеНачисления
	|	ПО Основной.НомерСтроки = РасчетОтОбратногоПрочиеНачисления.НомерСтроки
	|
	|";

	СтруктураРезультат = Новый Структура();
	СтруктураРезультат.Вставить("РасчетОтОбратногоСоединенияТекст", РасчетОтОбратногоСоединенияТекст);
	СтруктураРезультат.Вставить("РасчетОтОбратногоПоляТекст", РасчетОтОбратногоПоляТекст);
	
	Возврат СтруктураРезультат;

КонецФункции // ПолучитьДанныеДляРасчетаОтОбратногоПосле2014()

// Функция формирует тексты запросов для получения данных, необходимых при расчете "от обратного" после 2019 года
// Возвращает структуру с текстами запроса для секций ВЫБРАТЬ И СОЕДИНЕНИЯ
//
Функция ПолучитьДанныеДляРасчетаОтОбратногоПосле2019(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет = Ложь,
									Сотрудники = НеОпределено,
									Налогоплательщик = Неопределено,
									КомментироватьРасчет = Ложь,
									Запрос,
									ВнешнееУсловие)

	РасчетОтОбратногоПоляТекст = ""; // строка с полями запроса
	РасчетОтОбратногоСоединенияТекст = ""; // строка с соединениями в запросе		

	ИмяИсточника = "РегистрРасчета." + ИмяРегистра;
	ИмяПВР = ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций", "ОсновныеНачисленияОрганизаций", "ДополнительныеНачисленияОрганизаций");
	
	// Поля, необходимые для расчета "от обратного" 
	РасчетОтОбратногоПоляТекст = "
	|ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьИПН,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|			ИЛИ ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоУчитыватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьУдержания, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьУдержания,
	|Основной.ВидРасчета.ВидДохода КАК ВидДохода,
	|Основной.ВидРасчета.ОблагаетсяОПВ КАК ОблагаетсяОПВ,
	|Основной.ВидРасчета.ОблагаетсяИПН КАК ОблагаетсяИПН,
	|Основной.ВидРасчета.УчетПрямыхНачислений КАК РасчетОтОбратногоУчитыватьПрямыеНачисления
	|";

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляИПН,
		|ВЫБОР
		|	КОГДА Основной.ВидРасчета.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
		|		ТОГДА ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.РазрешенныеНалоговыеВычетыДоходыРаботодателя, 0) 
		|	ИНАЧЕ ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.РазрешенныеНалоговыеВычетыПрочиеДоходы, 0)
		|КОНЕЦ КАК РазрешенныеНалоговыеВычеты,
    	|ВЫБОР
		|	КОГДА Основной.ВидРасчета.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
		|		ТОГДА ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПримененныеНалоговыеВычетыВТекущемМесяце, 0)
		|	ИНАЧЕ 0 
		|КОНЕЦ КАК ПримененныеНалоговыеВычетыВТекущемМесяце,
		|ВЫБОР 
		|	КОГДА ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК 
		|		ТОГДА ЕСТЬNULL(СведенияОСтавкахИПНПоНалогоплательщику.СтавкаНерезиденты, ЕСТЬNULL(СведенияОСтавкахИПН.СтавкаНерезиденты, 0))
		|	ИНАЧЕ ЕСТЬNULL(СведенияОСтавкахИПНПоНалогоплательщику.Ставка, ЕСТЬNULL(СведенияОСтавкахИПН.Ставка, 0))
		|КОНЕЦ / 100 КАК ПроцентИПН,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходПрямыхНачислений, 0) КАК ОблагаемыйИПНДоходПрямыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходВключаемыхНачислений, 0) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходПрочихВключаемыхНачислений, 0) КАК ОблагаемыйИПНДоходПрочихВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходНачисленийОтОбратного, 0) КАК ОблагаемыйИПНДоходНачисленийОтОбратного,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ЕстьОтОбратногоКомпенсирующиеИПН, 0) КАК ЕстьОтОбратногоКомпенсирующиеИПН
		|";
	КонецЕсли;
			
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоДанныеОПВ.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляОПВ,
		|&парамРазмерОграниченияПоДоходамОПВ КАК РазмерОграниченияПоДоходамОПВ,
		|&парамСтавкаОПВ КАК ПроцентОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходПрямыхНачислений, 0) КАК ОблагаемыйОПВДоходПрямыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходВключаемыхНачислений, 0) КАК ОблагаемыйОПВДоходВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходПрочихВключаемыхНачислений, 0) КАК ОблагаемыйОПВДоходПрочихВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходНачисленийОтОбратного, 0) КАК ОблагаемыйОПВДоходНачисленийОтОбратного,	
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ЕстьОтОбратногоКомпенсирующиеОПВ, 0) КАК ЕстьОтОбратногоКомпенсирующиеОПВ
		|";
	КонецЕсли;
	Запрос.УстановитьПараметр("парамСтавкаОПВ", ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Организация, Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы, ПериодРегистрации) / 100);
	
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний, 0) КАК СуммаКомпенсируемыхУдержаний,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН, 0) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПНиОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний, 0) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|";
	КонецЕсли;
			
	РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаПрямыхНачислений, 0) КАК СуммаПрямыхНачислений, 
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаНачисленийОтОбратного, 0) КАК СуммаНачисленийОтОбратного,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ПрочиеДоходы, 0) КАК СуммаПрочиеДоходы,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаВключаемыхНачислений, 0) КАК СуммаВключаемыхНачислений,
	|ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) КАК ФизЛицоНерезидент,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ДополнительныеДанные, 0) КАК РасчетОтОбратногоДополнительныеДанные
	|";

	// Далее идут тексты запросов по аналогии с функциями ПолучитьДанныеДляРасчетаИПН() и ПолучитьДанныеДляРасчетаОПВ().
	// Отличие по всем текстам в том, что в ПолучитьДанныеДляРасчетаИПН() используется &парамСписокФизЛиц,
	// а в расчете "от обратного" &парамРасчетОтОбратногоСписокФизЛиц.
	// В данном расчете предполагается, что расчет ИПН и ОПВ будет производится с установленным
	// в учетной политике по налоговому учету флажке ОтражениеПоПериодуРегистрации - все данные выбираются по ПериодРегистрации

	Запрос.УстановитьПараметр("парамРегистратор", 				Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 		НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачалоГода", 			    НачалоГода(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", ОбособленноеПодразделение);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", 	    Организация);

	Если Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить() Тогда
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	Налогоплательщик);
	Иначе
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	ОбособленноеПодразделение);
	КонецЕсли;

	// категория начисления
	Запрос.УстановитьПараметр("парамКатегорияНачисления", 		КатегорияРасчета);
	Запрос.УстановитьПараметр("парамПорядокКатегории", 			Перечисления.КатегорииРасчетов.Индекс(КатегорияРасчета));

	// Периоды
	// Таблица список физлиц, по которым необходимо выполнить расчет налога или взносов
	// Поля:
	//		Физлицо
	СписокФизЛицТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Основной.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета.ОтОбратного
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
			
	Запрос.Текст = СписокФизЛицТекст;
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";

	// Составим текст запроса для вычисления всех месяцев периода
	ДатыПериодовГодаТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период
	|ПОМЕСТИТЬ ВТ_ДатыПериодовГодаРасчетаОтОбратного
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) И &парамПериодРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период";
	Запрос.Текст = ДатыПериодовГодаТекст;
	Запрос.Выполнить();
	ДатыПериодовГодаТекст = "ВТ_ДатыПериодовГодаРасчетаОтОбратного";

	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц нерезидентов
	ФизлицаНеРезиденты = "ВЫБРАТЬ РАЗЛИЧНЫЕ
     |	ГражданствоФизЛиц.ФизЛицо КАК ФизЛицо,
     |	ИСТИНА КАК НеЯвляетсяНалоговымРезидентомРК
     |ПОМЕСТИТЬ ВТФизлицаНеРезиденты
     |ИЗ
     |	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
     |			&парамКонецПериодаРегистрации,
     |			ФизЛицо В
     |				(ВЫБРАТЬ
     |					СписокФизЛиц.ФизЛицо
     |				ИЗ
     |					ВТ_СписокФизЛиц КАК СписокФизЛиц)) КАК ГражданствоФизЛиц
     |ГДЕ
     |	ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК
     |
     |ИНДЕКСИРОВАТЬ ПО
     |	ГражданствоФизЛиц.ФизЛицо";
	 
	Запрос.Текст = ФизлицаНеРезиденты;
	Запрос.Выполнить();
	ФизлицаНеРезидентыТекст = "ВТФизлицаНеРезиденты";

	РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаНеРезидентыТекст + " КАК ГражданствоФизЛиц
		|	ПО Основной.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
		|";

	// Списки видов расчета, категория расчета которых меньше текущей  (т.е. уже посчитанные)
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПВР.Ссылка
	|ИЗ
	|	ПланВидовРасчета." + ИмяПВР + " КАК ПВР
	|ГДЕ
	|	ПВР.КатегорияРасчета.Порядок < &парамПорядокКатегории
	|";

	Запрос.УстановитьПараметр("парамУжеРассчитанныеВидыРасчета", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	// Определим компенсируемые удержания для каждого вида расчета от обратного
	КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст = " 
	|ВЫБРАТЬ
	|	КомпенсируемыеУдержанияОсновные.Ссылка КАК ВидРасчета,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияОсновные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьИПН,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияОсновные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ КомпенсируемыеУдержанияОсновные.ВидРасчета В (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьУдержания
	|ПОМЕСТИТЬ ВТ_КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеУдержанияОсновные
	|ГДЕ
	|	КомпенсируемыеУдержанияОсновные.Ссылка.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	КомпенсируемыеУдержанияОсновные.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КомпенсируемыеУдержанияДополнительные.Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияДополнительные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьИПН,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияДополнительные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ КомпенсируемыеУдержанияДополнительные.ВидРасчета В (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьУдержания
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеУдержанияДополнительные
	|ГДЕ
	|	КомпенсируемыеУдержанияДополнительные.Ссылка.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	КомпенсируемыеУдержанияДополнительные.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета";
	
	Запрос.Текст = КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст;
	Запрос.Выполнить();
	КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст = "ВТ_КомпенсируемыеРасчетомОтОбратногоВидыУдержаний";
	Запрос.Текст = "ВЫБРАТЬ * ИЗ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст;
	
	// ОсновныеИДополнительныеНачисления
	// Поля:
	//		ФизЛицо
	//		ВидРасчета
	//		Результат
	//	Описание:
	// Выбирает начисления за период регистрации по физлицам, для которых выполняется расчет "от обратного"
	ОсновныеИДополнительныеНачисленияТекст = "
	|ВЫБРАТЬ
	|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ОсновныеНачисления.Результат) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.Сторно 
	|				И ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеНачисления.ДополнительныеДанные
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ДополнительныеДанныеОтОбратного,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				И НЕ ОсновныеНачисления.Сторно
	|				ТОГДА ОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		 КОНЕЦ) КАК СуммаНачисленийОтОбратного,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) КАК ОтОбратногоКомпенсируетИПН,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) КАК ОтОбратногоКомпенсируетОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		 КОНЕЦ) КАК СуммаПрямыхНачислений,
	|	0 КАК ПрочиеДоходы
	|
	|ПОМЕСТИТЬ ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|		ПО ОсновныеНачисления.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ГДЕ
	|	ОсновныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И (ОсновныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ОсновныеНачисления.Регистратор = &парамРегистратор
	|				И ОсновныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))", "") + "
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисления.ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0),
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета,
	|	СУММА(ДополнительныеНачисления.Результат) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.Сторно 
	|				И ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ДополнительныеНачисления.ДополнительныеДанные
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ДополнительныеДанныеОтОбратного,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				И НЕ ДополнительныеНачисления.Сторно
	|				ТОГДА ДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаНачисленийОтОбратного,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) КАК ОтОбратногоКомпенсируетИПН,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) КАК ОтОбратногоКомпенсируетОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаПрямыхНачислений,
	|	0 КАК ПрочиеДоходы
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ДополнительныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|		ПО ДополнительныеНачисления.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ГДЕ
	|	ДополнительныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ДополнительныеНачисления.ПериодРегистрации МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И ДополнительныеНачисления.Регистратор <> &парамРегистратор","
	|
	|	// если доп. начисления
	|	И (ДополнительныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ДополнительныеНачисления.Регистратор = &парамРегистратор
	|				И ДополнительныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))") + "
	|СГРУППИРОВАТЬ ПО
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0),
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	0 КАК Результат,
	|	0 КАК ДополнительныеДанныеОтОбратного,
	|	0 КАК СуммаНачисленийОтОбратного,
	|	0 КАК ОтОбратногоКомпенсируетИПН,
	|	0 КАК ОтОбратногоКомпенсируетОПВ,
	|	0 КАК СуммаПрямыхНачислений,
	|	СУММА(ОсновныеНачисления.СуммаДохода) КАК ПрочиеДоходы
	|
	|ИЗ
	|	Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения.СведенияОДоходах КАК ОсновныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ОсновныеНачисления.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ОсновныеНачисления.Ссылка.Организация
	|		ИНАЧЕ ОсновныеНачисления.Ссылка.Организация.ГоловнаяОрганизация
	|	КОНЕЦ = &парамГоловнаяОрганизация
	|	И ОсновныеНачисления.Ссылка.ПериодРегистрации = &парамПериодРегистрации
	|	И ВЫБОР
	|		КОГДА ОсновныеНачисления.Ссылка <> &парамРегистратор
	|			ТОГДА ОсновныеНачисления.Ссылка.Проведен
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И (ОсновныеНачисления.Ссылка <> &парамРегистратор
	|		ИЛИ (ОсновныеНачисления.Ссылка = &парамРегистратор
	|				И ОсновныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисления.ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидРасчета
	|";
	Запрос.Текст = ОсновныеИДополнительныеНачисленияТекст;
	Запрос.Выполнить();
	ОсновныеИДополнительныеНачисленияТекст = "ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного";

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
							
		// РасчетныеПоказатели
		//	Поля:
		//		Период
		//		РазмерМРП
		//		РазмерМЗП
		//
		//	Описание:
		// Выбирает размер месячного расчетного показателя по периодам
		РасчетныеПоказателиТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказателиСрезПоследних.РазмерМРПДляЦелейНалогообложения КАК РазмерМРП,
		|	РасчетныеПоказателиСрезПоследних.РазмерМЗПДляЦелейНалогообложения КАК РазмерМЗП,
		|	РасчетныеПоказателиСрезПоследних.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
		|	РасчетныеПоказателиСрезПоследних.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
		|
		|ПОМЕСТИТЬ ВТ_РасчетныеПоказателиРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказателиСрезПоследних
		|";
		Запрос.Текст = РасчетныеПоказателиТекст;
		Запрос.Выполнить();
		РасчетныеПоказателиТекст = "ВТ_РасчетныеПоказателиРасчетаОтОбратного";
		
		
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		СуммаДоходаОборот
		//		СуммаВычетаОборот
		//
		//	Описание:
		// Выбирает общую сумму доходов и облагаемые налогом доходы за весь год по физлицам из СписокФизлиц
			
		// Здесь не учитываем доходы, записанные текущим регистратором, т.к. при проведении по ИПНСведенияОДоходах
		// они были еще в процессе расчета и их прибавим позже. А также отдельно выделяем доходы, начисленные в данной 
		// организации за текущий месяц, которые прошли через начисления, прочие доходы не выделяем.
		// Сведения о жилищных и страховых вычетах текущего месяца всегда берем из регистра сведений, т.к. в регистре накопления они 
		// появляются только при прямом расчете налога и поэтому могут отсутствовать, если сейчас первый раз рассчитываются начисления.
		// Т.к. расчет "от обратного" поддерживается только при учетной политикой с ОтражениемПоПериодуРегистрации,
		// то в регистрах Период, ПериодРегистрации и МесяцНалоговогоПериода всегда совпадают, поэтому 
		// устанавливаем отборы по Периоду, т.к. по нему система автоматически создает индекс.
		ДоходыИПНТекст = 
		"ВЫБРАТЬ
		|	ИПНОбороты.Физлицо КАК ФизЛицо,
		|	СУММА(ПрочиеДоходы) КАК ПрочиеДоходы
		|
		|ПОМЕСТИТЬ ВТ_ДоходыИПНРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
		|		СУММА(ВЫБОР
		|				КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ТОГДА ИПНСведенияОДоходах.СуммаДохода - ИПНСведенияОДоходах.СуммаВычета
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ПрочиеДоходы,
		|		ВЫБОР
		|			КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ИЛИ ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РасчетНалоговПриПоступленииАктивовУслуг
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ КАК НачисленоВТекущейОрганизации
		|	ИЗ
		|		РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО ИПНСведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|	ГДЕ
		|		ИПНСведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|		И ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|		И ИПНСведенияОДоходах.Регистратор <> &парамРегистратор
		|		И НЕ(ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ИПНСведенияОДоходах.ФизЛицо,
		|		ИПНСведенияОДоходах.СпособНалогообложения,
		|		ИПНСведенияОДоходах.Регистратор) КАК ИПНОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПНОбороты.Физлицо";
		Запрос.Текст = ДоходыИПНТекст;
		Запрос.Выполнить();
		ДоходыИПНТекст = "ВТ_ДоходыИПНРасчетаОтОбратного";

			
		// ПрименениеВычетовВОрганизации
		//	Поля:
		//		Физлицо,
		//		Период
		//
		// Описание:
		//	Выбирает список физлиц + периоды в которые применяются налоговые вычеты по 
		//	заданной организации
		ПрименениеВычетовВОрганизацииТекст = 
		"ВЫБРАТЬ
		|	ИПНПрименениеВычетов.Физлицо КАК Физлицо
		|
		|ПОМЕСТИТЬ ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ИПНПрименениеВычетов.СрезПоследних(
		|					&парамПериодРегистрации,
		|					ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНПрименениеВычетов
		|
		|ГДЕ
		|	ИПНПрименениеВычетов.Налогоплательщик = &парамНалогоплательщик
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		Запрос.Текст = ПрименениеВычетовВОрганизацииТекст;
		Запрос.Выполнить();
		ПрименениеВычетовВОрганизацииТекст = "ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного";

		// Применение стандартного вычета
		ПрименениеСтандартногоВычета = 
			"ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо КАК ФизЛицо,
			|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП) КАК ВидВычетаИПН,
			|	ВЫБОР
			|		КОГДА НалоговыеВычетыФизлиц.Физлицо ЕСТЬ NULL 
			|				ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
			|				ИЛИ НЕ ЕСТЬNULL(НалоговыеВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
			|			ТОГДА 0
			|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
			|	КОНЕЦ КАК РазрешенныйВычет
			|ПОМЕСТИТЬ ВТ_СтандартныйВычет1МЗП
			|ИЗ
			|	" + СписокФизЛицТекст + "  КАК СписокФизЛиц
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц.СрезПоследних(
			|				&парамКонецПериодаРегистрации,
			|				ФизЛицо В
			|					(ВЫБРАТЬ
			|						СписокФизЛиц.ФизЛицо
			|					ИЗ
			|						" + СписокФизЛицТекст + " КАК СписокФизЛиц)) КАК НалоговыеВычетыФизлиц
			|		ПО СписокФизЛиц.Физлицо = НалоговыеВычетыФизлиц.Физлицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаНеРезидентыТекст + " КАК ГражданствоФизЛиц
			|		ПО СписокФизЛиц.Физлицо = ГражданствоФизЛиц.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|		ПО (ИСТИНА)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	СписокФизЛиц.Физлицо,
			|	ВидВычетаИПН";
			
		Запрос.Текст = ПрименениеСтандартногоВычета;
		Запрос.Выполнить();
		ПрименениеСтандартногоВычета = "ВТ_СтандартныйВычет1МЗП";
		
		// ПрименяемыеЛьготы
		//	Поля:
		//		Физлицо
		//		Период
		//		ПрименяетсяЛьготаУчастникаВОВ
		//		ПрименяетсяЛьготаПоИнвалидности
		//		ЛьготаПоДоходу
		//
		//	Описание:
		//	Выбирает по всем периодам года льготы на которые имеет право физлицо
		ПрименяемыеЛьготыТекст = 
			"ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо КАК Физлицо,
			|	ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности,
			|	ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности,
			|	ВЫБОР 
			|		КОГДА (ЛьготыФизлицПоИнвалидности.Физлицо) ЕСТЬ NULL 
			|			ТОГДА 0 
			|		ИНАЧЕ ВЫБОР 
			|				КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
			|						И ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности = ""III"" 
			|					ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
			|				ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
			|			  КОНЕЦ 
			|	КОНЕЦ КАК ЛьготаПоИнвалидности,
			|	ВЫБОР 
			|		КОГДА (ЛьготыФизлицУчастниковВОВ.Физлицо) ЕСТЬ NULL 
			|			ТОГДА 0 
			|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) 
			|	КОНЕЦ КАК ЛьготаУчастникаВОВ
			|ПОМЕСТИТЬ ВТ_ИПНЛьготыФизлиц
			|		
			|ИЗ
			|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
			|						&парамКонецПериодаРегистрации,
			|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ЛьготыФизлицПоИнвалидности
			|		ПО ЛьготыФизлицПоИнвалидности.Физлицо = СписокФизЛиц.Физлицо
			|			И (ЛьготыФизЛицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
			|				ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизЛицПоИнвалидности.СрокДействияСправки, ДЕНЬ) >= &парамКонецПериодаРегистрации)
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(
			|						&парамКонецПериодаРегистрации,
			|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ЛьготыФизлицУчастниковВОВ
			|		ПО ЛьготыФизлицУчастниковВОВ.Физлицо = СписокФизЛиц.Физлицо
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|		ПО ИСТИНА
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИПНЛьготыФизлиц.Физлицо,
			|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды) КАК ВидВычетаИПН,
			|	
			|	ИПНЛьготыФизлиц.ОтношениеКИнвалидности,
			|	ИПНЛьготыФизлиц.ГруппаИнвалидности,
			|
			|	ВЫБОР
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > 0 
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ПрименяетсяЛьготаУчастникаВОВ,
			|
			|	ВЫБОР
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаПоИнвалидности > 0 
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ПрименяетсяЛьготаПоИнвалидности,
			|
			|	ВЫБОР 
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
			|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ 
			|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
			|	КОНЕЦ КАК ЛьготаПоДоходу
			|
			|ПОМЕСТИТЬ ВТ_ПрименяемыеЛьготыРасчетаОтОбратного
			|ИЗ
			|	ВТ_ИПНЛьготыФизлиц КАК ИПНЛьготыФизлиц
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаНеРезидентыТекст + " КАК ГражданствоФизЛиц
			|		ПО ИПНЛьготыФизлиц.Физлицо = ГражданствоФизЛиц.ФизЛицо
			|ГДЕ
			|   НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, Ложь)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ИПНЛьготыФизлиц.Физлицо
			|";
		Запрос.Текст = ПрименяемыеЛьготыТекст;
		Запрос.Выполнить();
		ПрименяемыеЛьготыТекст = "ВТ_ПрименяемыеЛьготыРасчетаОтОбратного";
		
		// Прочие вычеты по периодическим платежам
		ПрочиеВычетыТекст = 
			"ВЫБРАТЬ
			|	ИПНПлановыеВычеты.ФизЛицо,
			|	ИПНПлановыеВычеты.ВычетИПН КАК ВидВычетаИПН,
			|	СУММА(ИПНПлановыеВычеты.СуммаВычета) КАК РазрешенныйВычет
			|ПОМЕСТИТЬ ВТ_ПрочиеВычеты
			|ИЗ
			|	РегистрСведений.ИПНПлановыеНалоговыеВычетыФизЛиц.СрезПоследних(
			|			&парамКонецПериодаРегистрации,
			|			Налогоплательщик = &парамНалогоплательщик
			|			И МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
			|			И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНПлановыеВычеты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК  СписокФизЛиц
			|			ПО ИПНПлановыеВычеты.ФизЛицо = СписокФизЛиц.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаНеРезидентыТекст + " КАК ГражданствоФизЛиц
			|		ПО ИПНПлановыеВычеты.Физлицо = ГражданствоФизЛиц.ФизЛицо
			|ГДЕ
			|   НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, Ложь)
			|
			|СГРУППИРОВАТЬ ПО
			|	ИПНПлановыеВычеты.ФизЛицо,
			|	ИПНПлановыеВычеты.ВычетИПН
			|";
		Запрос.Текст = ПрочиеВычетыТекст;
		Запрос.Выполнить();
		ПрочиеВычетыТекст = "ВТ_ПрочиеВычеты";

		
		//Итоговая таблица видов вычетов
		РазмерыВычетовыИПН = 
			"ВЫБРАТЬ
			|	СтандартныйВычет1МЗП.Физлицо КАК ФизическоеЛицо,
			|	СтандартныйВычет1МЗП.ВидВычетаИПН КАК ВидВычетаИПН,
			|	СтандартныйВычет1МЗП.РазрешенныйВычет КАК РазмерВычета,
			|	СтандартныйВычет1МЗП.РазрешенныйВычет КАК СуммовойПределВычета,
			|	2 КАК Приоритет
			|ПОМЕСТИТЬ ВТ_РазмерыВычетовИПН
			|ИЗ
			|	ВТ_СтандартныйВычет1МЗП КАК СтандартныйВычет1МЗП
			|ГДЕ
			|	СтандартныйВычет1МЗП.РазрешенныйВычет <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПрименяемыеЛьготы.Физлицо,
			|	ПрименяемыеЛьготы.ВидВычетаИПН,
			|	ПрименяемыеЛьготы.ЛьготаПоДоходу,
			|	ПрименяемыеЛьготы.ЛьготаПоДоходу,
			|	3
			|ИЗ
			|	ВТ_ПрименяемыеЛьготыРасчетаОтОбратного КАК ПрименяемыеЛьготы
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПрочиеВычеты.Физлицо,
			|	ПрочиеВычеты.ВидВычетаИПН,
			|	ПрочиеВычеты.РазрешенныйВычет,
			|	ВЫБОР 
			|		КОГДА ПрочиеВычеты.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
			|			ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) * 8
			|		ИНАЧЕ ПрочиеВычеты.РазрешенныйВычет
			|	КОНЕЦ,
			|	4
			|ИЗ
			|	ВТ_ПрочиеВычеты КАК ПрочиеВычеты
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|			ПО ИСТИНА
			|ИНДЕКСИРОВАТЬ ПО
			|	ВидВычетаИПН,
			|	ФизическоеЛицо,
			|	Приоритет";
		
		Запрос.Текст = РазмерыВычетовыИПН;
		Запрос.Выполнить();
	    РазмерыВычетовыИПН = "ВТ_РазмерыВычетовИПН";
		
		// Соберем накопленные сведения по исчисленным вычетам
		НакопленныеДанныеПоВычетамТекст = 
			"ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо,
			|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета КАК ВидВычетаИПН,
			|	СУММА(ВЫБОР
			|			КОГДА НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
			|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК РазрешенныйВычетСНачалаГода,
			|	СУММА(ВЫБОР
			|			КОГДА НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
			|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК ПримененныйВычетСНачалаГода
			|ПОМЕСТИТЬ ВТ_НакопленныеДанные
			|ИЗ
			|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОбИсчисленииВычетовИПН.Обороты(&парамНачалоГода, &парамПериодРегистрации, Месяц, ) КАК СведенияОбИсчисленииВычетовИПНОбороты
			|		ПО СписокФизЛиц.Физлицо = (ВЫБОР
			|										КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо ССЫЛКА Справочник.Контрагенты
			|											ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо.ФизЛицо
			|										ИНАЧЕ СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
			|									КОНЕЦ)
			|			И &парамПериодРегистрации > СведенияОбИсчисленииВычетовИПНОбороты.Период
			|			И (НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД))
			|
			|СГРУППИРОВАТЬ ПО
			|	СписокФизЛиц.Физлицо,
			|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо,
			|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды),
			|	0,
			|	ВЫБОР
			|		КОГДА НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, ГОД)
			|			ТОГДА СведенияПредыдущегоМестаРаботыФизЛиц.ПримененнаяЛьгота
			|		ИНАЧЕ 0
			|	КОНЕЦ
			|ИЗ
			|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
			|		ПО &парамПериодРегистрации >= СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода
			|			И СписокФизЛиц.Физлицо = СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_НакопленныеДанныеПоВычетам.Физлицо,
			|	ВТ_НакопленныеДанныеПоВычетам.ВидВычетаИПН,
			|	СУММА(ВТ_НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода) КАК РазрешенныйВычетСНачалаГода,
			|	СУММА(ВТ_НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода) КАК ПримененныйВычетСНачалаГода
			|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетам
			|ИЗ
			|	ВТ_НакопленныеДанные КАК ВТ_НакопленныеДанныеПоВычетам
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_НакопленныеДанныеПоВычетам.Физлицо,
			|	ВТ_НакопленныеДанныеПоВычетам.ВидВычетаИПН";
			
		Запрос.Текст = НакопленныеДанныеПоВычетамТекст;
		Запрос.Выполнить();
		НакопленныеДанныеПоВычетамТекст = "ВТ_НакопленныеДанныеПоВычетам";

		НакопленныеДанныеПоВычетамТекущегоПериодаТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисленияОрганизаций.Ссылка КАК ВидРасчета
		|ПОМЕСТИТЬ ВТ_НачисленияОтОбратного
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		|ГДЕ
		|	ОсновныеНачисленияОрганизаций.ОтОбратного
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисленияОрганизаций.Ссылка
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций
		|ГДЕ
		|	ДополнительныеНачисленияОрганизаций.ОтОбратного
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеПримененныхВычетов.Физлицо,
		|	СУММА(ДанныеПримененныхВычетов.ПримененныеНалоговыеВычетыВТекущемМесяце) КАК ПримененныеНалоговыеВычетыВТекущемМесяце
		|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетамТекущегоПериода
		|ИЗ
		|	(ВЫБРАТЬ
		|		СписокФизЛиц.Физлицо КАК Физлицо,
		|		СУММА(ОсновныеНачисленияРаботниковОрганизаций.СуммаВычетовДоходовОтОбратного) КАК ПримененныеНалоговыеВычетыВТекущемМесяце
		|	ИЗ
		|			" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		|			ПО СписокФизЛиц.Физлицо = ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо
		|				И (&парамГоловнаяОрганизация = ОсновныеНачисленияРаботниковОрганизаций.Организация)
		|				И (&парамПериодРегистрации = НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ))
		// отбор по регистратору не делаем, тк в одном документе может быть несколько начислений (И (&парамРегистратор <> ОсновныеНачисленияРаботниковОрганизаций.Регистратор))
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НачисленияОтОбратного КАК НачисленияОтОбратного
		|			ПО (НачисленияОтОбратного.ВидРасчета = ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СписокФизЛиц.Физлицо
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СписокФизЛиц.Физлицо,
		|		СУММА(ДополнительныеНачисленияРаботниковОрганизаций.СуммаВычетовДоходовОтОбратного)
		|	ИЗ
		|			" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
		|			ПО СписокФизЛиц.Физлицо = ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо
		|				И (&парамГоловнаяОрганизация = ДополнительныеНачисленияРаботниковОрганизаций.Организация)
		|				И (&парамПериодРегистрации = НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ))
		// отбор по регистратору не делаем, тк в одном документе может быть несколько начислений (И (&парамРегистратор <> ДополнительныеНачисленияРаботниковОрганизаций.Регистратор))
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НачисленияОтОбратного КАК НачисленияОтОбратного
		|			ПО (НачисленияОтОбратного.ВидРасчета = ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СписокФизЛиц.Физлицо) КАК ДанныеПримененныхВычетов
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеПримененныхВычетов.Физлицо";

		Запрос.Текст = НакопленныеДанныеПоВычетамТекущегоПериодаТекст;
		Запрос.Выполнить();
		НакопленныеДанныеПоВычетамТекущегоПериодаТекст = "ВТ_НакопленныеДанныеПоВычетамТекущегоПериода";
		
		// Общий итог применяемых вычетов
		ПрименяемыеВычетыТекст = 
			"ВЫБРАТЬ
			|	РазмерыВычетов.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РазмерыВычетов.ВидВычетаИПН КАК ВидВычетаИПН,
			|	РазмерыВычетов.Приоритет КАК Приоритет,
			|	РазмерыВычетов.РазмерВычета КАК РазмерВычета,
			|	РазмерыВычетов.СуммовойПределВычета КАК СуммовойПределВычета,
			|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) КАК РазрешенныйВычетСНачалаГода,
			|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода, 0) КАК ПримененныйВычетСНачалаГода,
			|	ВЫБОР
			|		КОГДА РазмерыВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
			|			ТОГДА РазмерыВычетов.СуммовойПределВычета - ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0)
			|		КОГДА РазмерыВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
			|				И РазмерыВычетов.СуммовойПределВычета - ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) < РазмерыВычетов.РазмерВычета
			|			ТОГДА РазмерыВычетов.СуммовойПределВычета - ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0)
			|		ИНАЧЕ РазмерыВычетов.РазмерВычета
			|	КОНЕЦ КАК РазрешенныйВычетВТекущемПериоде,
			|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) - ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода, 0) КАК ОстатокВычетаЗаПрошлыеМесяцы
			|ПОМЕСТИТЬ ВТ_ДанныеДляРасчетаВычетов
			|ИЗ
			|	ВТ_РазмерыВычетовИПН КАК РазмерыВычетов
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НакопленныеДанныеПоВычетам КАК НакопленныеДанныеПоВычетам
			|		ПО РазмерыВычетов.ФизическоеЛицо = НакопленныеДанныеПоВычетам.Физлицо
			|			И РазмерыВычетов.ВидВычетаИПН = НакопленныеДанныеПоВычетам.ВидВычетаИПН
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СУММА(ВТ_ДанныеДляРасчетаВычетов.РазрешенныйВычетВТекущемПериоде + ВТ_ДанныеДляРасчетаВычетов.ОстатокВычетаЗаПрошлыеМесяцы) КАК РазрешенныеНалоговыеВычетыДоходыРаботодателя,
			|	СУММА(ВЫБОР
			|			КОГДА ВТ_ДанныеДляРасчетаВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
			|				ТОГДА ВТ_ДанныеДляРасчетаВычетов.РазрешенныйВычетВТекущемПериоде + ВТ_ДанныеДляРасчетаВычетов.ОстатокВычетаЗаПрошлыеМесяцы
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК РазрешенныеНалоговыеВычетыПрочиеДоходы,
			|	МАКСИМУМ(ЕСТЬNULL(ПрименениеВычетовВОрганизацииТекущегоПериода.ПримененныеНалоговыеВычетыВТекущемМесяце, 0)) КАК ПримененныеНалоговыеВычетыВТекущемМесяце
			|ПОМЕСТИТЬ ВТ_ПрименяемыеВычеты
			|ИЗ
			|	ВТ_ДанныеДляРасчетаВычетов КАК ВТ_ДанныеДляРасчетаВычетов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного КАК ПрименениеВычетовВОрганизации
			|		ПО ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо = ПрименениеВычетовВОрганизации.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НакопленныеДанныеПоВычетамТекущегоПериода КАК ПрименениеВычетовВОрганизацииТекущегоПериода
			|		ПО ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо = ПрименениеВычетовВОрганизацииТекущегоПериода.ФизЛицо
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо";
			
		Запрос.Текст = ПрименяемыеВычетыТекст;
		Запрос.Выполнить();
		ПрименяемыеВычетыТекст = "ВТ_ПрименяемыеВычеты";

		БазаДляИсчисленияИПНТекст = "
		|ВЫБРАТЬ
		|	СписокФизЛиц.ФизЛицо,
		|	ЕСТЬNULL(Доходы.ПрочиеДоходы, 0) КАК ПрочиеДоходы,
	    |	ЕСТЬNULL(ПрименяемыеВычеты.РазрешенныеНалоговыеВычетыПрочиеДоходы, 0) КАК РазрешенныеНалоговыеВычетыПрочиеДоходы,
	    |	ЕСТЬNULL(ПрименяемыеВычеты.РазрешенныеНалоговыеВычетыДоходыРаботодателя, 0) КАК РазрешенныеНалоговыеВычетыДоходыРаботодателя,
	    |	ЕСТЬNULL(ПрименяемыеВычеты.ПримененныеНалоговыеВычетыВТекущемМесяце, 0) КАК ПримененныеНалоговыеВычетыВТекущемМесяце
		|
		|ПОМЕСТИТЬ ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного
		|ИЗ
		|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыИПНТекст + " КАК Доходы
		|		ПО СписокФизЛиц.ФизЛицо = Доходы.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеВычетыТекст + " КАК ПрименяемыеВычеты
		|		ПО СписокФизЛиц.ФизЛицо = ПрименяемыеВычеты.ФизическоеЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СписокФизЛиц.ФизЛицо
		|";
		
		Запрос.Текст = БазаДляИсчисленияИПНТекст;
		Запрос.Выполнить();
		БазаДляИсчисленияИПНТекст = "ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + БазаДляИсчисленияИПНТекст;

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + БазаДляИсчисленияИПНТекст + " КАК РасчетОтОбратногоДанныеИПН
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеИПН.ФизЛицо
		|	   И Основной.ВидРасчета.ОтОбратного
		|";

		СведенияОСтавкахИПНПоНалогоплательщикуТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахИПНПоНалогоплательщику.ВидДохода,
			|	СведенияОСтавкахИПНПоНалогоплательщику.Ставка,
			|	СведенияОСтавкахИПНПоНалогоплательщику.СтавкаНерезиденты
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахИПНПоНалогоплательщику
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахИПН.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = &парамНалогоплательщик) КАК СведенияОСтавкахИПНПоНалогоплательщику";
			
		Запрос.Текст = СведенияОСтавкахИПНПоНалогоплательщикуТекст;
		Запрос.Выполнить();
		СведенияОСтавкахИПНПоНалогоплательщикуТекст = "ВТ_СведенияОСтавкахИПНПоНалогоплательщику";
		
		СведенияОСтавкахИПНТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахИПН.ВидДохода,
			|	СведенияОСтавкахИПН.Ставка,
			|	СведенияОСтавкахИПН.СтавкаНерезиденты
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахИПН
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахИПН.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК СведенияОСтавкахИПН";
			
		Запрос.Текст = СведенияОСтавкахИПНТекст;
		Запрос.Выполнить();
		СведенияОСтавкахИПНТекст = "ВТ_СведенияОСтавкахИПН";

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахИПНПоНалогоплательщикуТекст + " КАК СведенияОСтавкахИПНПоНалогоплательщику
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахИПНПоНалогоплательщику.ВидДохода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахИПНТекст + " КАК СведенияОСтавкахИПН
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахИПН.ВидДохода
		|
		|";
		
	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
			
		СписокГруппИнвалидности = Новый СписокЗначений;
		СписокГруппИнвалидности.Добавить("I");
		СписокГруппИнвалидности.Добавить("II");
			
		Запрос.УстановитьПараметр("парамСписокГруппИнвалидности",  СписокГруппИнвалидности);
			
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		ОблагаемыйДоход
		//
		//	Описание:
		// Выбирает облагаемые взносами доходы за периоды по физлицам
		
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то доходы всегда выбираются только за расчетный месяц. Отдельно выделим прочие доходы, зарегистрированные в обход начислений.
		ДоходыТекст = "
		|ВЫБРАТЬ
		|	ОПВСведенияОДоходах.ФизЛицо КАК Физлицо,
		|	СУММА(ВЫБОР
		|			КОГДА ОПВСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|				ТОГДА ОПВСведенияОДоходах.СуммаДохода - ОПВСведенияОДоходах.СуммаВычета
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПрочиеДоходы
		|
		|ПОМЕСТИТЬ ВТ_ДоходыОПВРасчетаОтОбратного
		|ИЗ
		|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|		ПО ОПВСведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|ГДЕ
		|	ОПВСведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|	И ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|	
		|СГРУППИРОВАТЬ ПО
		|	ОПВСведенияОДоходах.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОПВСведенияОДоходах.ФизЛицо";
		
		Запрос.Текст = ДоходыТекст;
		Запрос.Выполнить();
		ДоходыТекст = "ВТ_ДоходыОПВРасчетаОтОбратного";

		// Здесь не берем имеющийся за МесяцНалоговогоПериода в ОПВРасчетыСФондами взнос, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то ранее исчисленные взносы всегда выбираются только за расчетный месяц. Поэтому запроса к ОПВРасчетыСФондами вообще не требуется.

		// РазмерОграниченияПоДоходам
		РазмерОграниченияПоДоходамТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказатели.РазмерМЗП * 50 КАК ОграничениеПоДоходам
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказатели
		|";
			
		Запрос.Текст = РазмерОграниченияПоДоходамТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", Выборка.ОграничениеПоДоходам);
		Иначе
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", 0);
		КонецЕсли;

		// ФизлицаБезПраваНаПенсию
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц не имеющих право на пенсионное обеспечение
		ФизлицаБезПраваНаПенсиюТекст = "
		|ВЫБРАТЬ
		|	ГражданствоФизЛиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаБезПраваНаПенсию
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ГражданствоФизЛиц
		|
		|ГДЕ
		|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
				
		Запрос.Текст = ФизлицаБезПраваНаПенсиюТекст;
		Запрос.Выполнить();
		ФизлицаБезПраваНаПенсиюТекст = "ВТ_ФизлицаБезПраваНаПенсию";
			
		// ФизлицаПенсионеры
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц достигших пенсионный возраст
		ФизлицаПенсионерыТекст = "
		|ВЫБРАТЬ
		|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаПенсионеры
		|ИЗ
		|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОПенсионномОбеспеченииФизЛиц
		|
		|ГДЕ
		|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
			
		Запрос.Текст = ФизлицаПенсионерыТекст;
		Запрос.Выполнить();
		ФизлицаПенсионерыТекст = "ВТ_ФизлицаПенсионеры";

		// ФизлицаИнвалидыБессрочно
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц-инвалидов I и II группы, у которых инвалидность установлена бессрочно
		ФизлицаИнвалидыБессрочноТекст = "
		|ВЫБРАТЬ
		|	СведенияОбИнвалидностиФизлиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаИнвалидыБессрочно
		|ИЗ
		|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОбИнвалидностиФизлиц
		|
		|ГДЕ
		|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
		|	И СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности В (&парамСписокГруппИнвалидности)
		|	И СведенияОбИнвалидностиФизлиц.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
			
		Запрос.Текст = ФизлицаИнвалидыБессрочноТекст;
		Запрос.Выполнить();
		ФизлицаИнвалидыБессрочноТекст = "ВТ_ФизлицаИнвалидыБессрочно";

		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ВЫБОР
		|	КОГДА Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизЛицаПенсионерыТекст + ")
		|		  ИЛИ Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизЛицаБезПраваНаПенсиюТекст + ")
		|		  ИЛИ Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаИнвалидыБессрочноТекст + ") ТОГДА ЛОЖЬ
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ КАК ПризнакИсчисленияОПВ
		|";
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыТекст + " КАК РасчетОтОбратногоДанныеОПВ
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеОПВ.ФизЛицо
		|	   И Основной.ВидРасчета.ОтОбратного
		|";

	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
	   
	   // для списка погашамых удержаний определим общую сумму
	   Запрос.УстановитьПараметр("парамСпособыРасчетаФиксированнойСуммой", ПроведениеРасчетов.ПолучитьСписокСпособовРасчетовФиксированнойСуммой());
	   Запрос.УстановитьПараметр("парамВалютаРегламентУчета", Константы.ВалютаРегламентированногоУчета.Получить());

	   // ПлановыеУдержания
	   // Поля:
	   //		ФизЛицо
	   //		ВидРасчета
	   //		ВидСтроки
	   //		Размер
	   //	Описание:
	   // Выбирает плановые и фактические удержания за период регистрации для физлиц, по которым производится расчет "от обратного".
	   // Фактические удержания берем только те, что введены как разовые, чтобы не задублировать плановые, если уже создан и проведен
	   // документ "Расчет ИПН, ОПВ и удержаний" и заново пересчитывают "от обратного"
		
	   ПлановыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1 КАК Размер,
		|	ПлановыеУдержания.Валюта1 КАК Валюта,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.Период < &парамПериодРегистрации ТОГДА &парамПериодРегистрации
		|		ИНАЧЕ ПлановыеУдержания.Период
		|	КОНЕЦ КАК ДатаНачала,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ПлановыеУдержания.ПериодЗавершения <= &парамКонецПериодаРегистрации
		|			ТОГДА КОНЕЦПЕРИОДА(ПлановыеУдержания.ПериодЗавершения, ДЕНЬ)
		|		ИНАЧЕ МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонецПериодаРегистрации))
		|	КОНЕЦ КАК ДатаОкончания
		|
		|ПОМЕСТИТЬ ВТ_ПлановыеУдержанияРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|		ПО ПлановыеУдержания.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК СледующиеПлановыеУдержания
		|		ПО ПлановыеУдержания.Организация = СледующиеПлановыеУдержания.Организация
		|			И ПлановыеУдержания.Физлицо = СледующиеПлановыеУдержания.Физлицо
		|			И ПлановыеУдержания.ВидРасчета = СледующиеПлановыеУдержания.ВидРасчета
		|			И ПлановыеУдержания.ДокументОснование = СледующиеПлановыеУдержания.ДокументОснование
		|			И СледующиеПлановыеУдержания.Период > ПлановыеУдержания.Период
		|			И СледующиеПлановыеУдержания.Период <= &парамКонецПериодаРегистрации
		|
		|ГДЕ
		|	ПлановыеУдержания.Организация = &парамГоловнаяОрганизация
		|	И ПлановыеУдержания.Период <= &парамКонецПериодаРегистрации
		|	И ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1) 
		|				И ПлановыеУдержания.ПериодЗавершения < &парамПериодРегистрации ТОГДА ПлановыеУдержания.ДействиеЗавершения
		|		ИНАЧЕ ПлановыеУдержания.Действие
		|	  КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1,
		|	ПлановыеУдержания.Валюта1,
		|	ПлановыеУдержания.Период,
		|	ПлановыеУдержания.ПериодЗавершения
		|
		|ИМЕЮЩИЕ
		|	МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонецПериодаРегистрации)) >= &парамПериодРегистрации
		|";
		Запрос.Текст = ПлановыеУдержанияТекст;
		Запрос.Выполнить();
		ПлановыеУдержанияТекст = "ВТ_ПлановыеУдержанияРасчетаОтОбратного";
		
		// В качестве фактических берем только те, что зарегистрированы как 
		// разовые, т.к. все остальные будут взяты из плановых
		ПлановыеИФактическиеУдержанияТекст = "
		|ВЫБРАТЬ
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	Удержания.ВидРасчета.ВычитатьИзБазыИПН КАК ВычитатьИзБазыИПН,
		|	Удержания.ВидРасчета.ВычитатьИзБазыОПВ КАК ВычитатьИзБазыОПВ,
		|	Удержания.ВидСтроки,
		|	СУММА(Удержания.Результат) КАК Результат,
		|	СУММА(ВЫБОР
		|			КОГДА Удержания.Валюта = &парамВалютаРегламентУчета ИЛИ Удержания.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|				ТОГДА Удержания.Размер
		|			ИНАЧЕ Удержания.Размер * ЕСТЬNULL(Валюты.Курс, 0) / ЕСТЬNULL(Валюты.Кратность, 1)
		|		  КОНЕЦ) КАК Размер
		|
		|ПОМЕСТИТЬ ВТ_ПлановыеИФактическиеУдержанияРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|			ПлановыеУдержания.ФизЛицо,
		|			ПлановыеУдержания.ВидРасчета,
		|			""ПлановыеУдержания"" КАК ВидСтроки,
		|			0 КАК Результат,
		|			ПлановыеУдержания.Размер,
		|			ПлановыеУдержания.Валюта
		|		ИЗ
		|			" + ПлановыеУдержанияТекст + " КАК ПлановыеУдержания
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Удержания.ФизЛицо,
		|		Удержания.ВидРасчета,
		|		""ФактическиеУдержания"" КАК ВидСтроки,
		|		Удержания.Результат,
		|		Удержания.Показатель1 КАК Размер,
		|		ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
		|	ИЗ
		|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО Удержания.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|	ГДЕ
		|		Удержания.Организация = &парамГоловнаяОрганизация 
		|		И Удержания.ПериодРегистрации = &парамПериодРегистрации
		|		И Удержания.Результат <> 0
		|		И НЕ (Удержания.Регистратор ССЫЛКА Документ.РасчетУдержанийРаботниковОрганизаций)
		|	) КАК Удержания
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты
		|	ПО Валюты.Период = &парамПериодРегистрации И Валюты.Валюта = Удержания.Валюта
		|
		|СГРУППИРОВАТЬ ПО
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.ВидРасчета.СпособРасчета,
		|	Удержания.ВидСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Удержания.ФизЛицо
		|";
		Запрос.Текст = ПлановыеИФактическиеУдержанияТекст;
		Запрос.Выполнить();
		ПлановыеИФактическиеУдержанияТекст = "ВТ_ПлановыеИФактическиеУдержанияРасчетаОтОбратного";
			   
		
		
		РанееКомпенсированныеУдержанияСуммойТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КомпенсируемыеВидыУдержанийОсновные.Ссылка КАК ВидРасчета,
		|	КомпенсируемыеВидыУдержанийОсновные.ВидРасчета КАК ВидУдержания
		|ПОМЕСТИТЬ ВТ_КомпенсируемыеУдержанияСуммой
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеВидыУдержанийОсновные
		|
		|ГДЕ
		|	КомпенсируемыеВидыУдержанийОсновные.ВидРасчета ССЫЛКА ПланВидовРасчета.УдержанияОрганизаций
		|	И КомпенсируемыеВидыУдержанийОсновные.ВидРасчета.СпособРасчета В(&парамСпособыРасчетаФиксированнойСуммой)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КомпенсируемыеВидыУдержанийДополнительные.Ссылка,
		|	КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеВидыУдержанийДополнительные
		|
		|ГДЕ
		|	КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета ССЫЛКА ПланВидовРасчета.УдержанияОрганизаций
		|	И КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета.СпособРасчета В(&парамСпособыРасчетаФиксированнойСуммой)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|   ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	КомпенсируемыеУдержанияСуммой.ВидУдержания
		|ПОМЕСТИТЬ ВТ_РанееКомпенсированныеУдержанияСуммой
		|ИЗ
		|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КомпенсируемыеУдержанияСуммой КАК КомпенсируемыеУдержанияСуммой
		|		ПО ОсновныеИДополнительныеНачисления.ВидРасчета = КомпенсируемыеУдержанияСуммой.ВидРасчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	ВидУдержания";
		
		Запрос.Текст = РанееКомпенсированныеУдержанияСуммойТекст;
		Запрос.Выполнить();
		РанееКомпенсированныеУдержанияСуммойТекст = "ВТ_РанееКомпенсированныеУдержанияСуммой";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + РанееКомпенсированныеУдержанияСуммойТекст;
		
		// КомпенсируемыеУдержания
		// Поля:
		//		ФизЛицо
		//		ВидУдержания
		//		Результат
		//		Размер
		//	Описание:
		// Рассчитывает результат по каждому компенсируемому виду удержаний 
		КомпенсируемыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	Основной.НомерСтроки,
		|	Основной.ВидРасчета КАК ВидРасчетаОтОбратного,
		|	ПлановыеИФактическиеУдержания.ФизЛицо,
		|	ПлановыеИФактическиеУдержания.ВидРасчета КАК ВидУдержания,
		|	ПлановыеИФактическиеУдержания.ВидСтроки,
		|
		|	МАКСИМУМ(ВЫБОР
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ФактическиеУдержания""
		|					ТОГДА ПлановыеИФактическиеУдержания.Результат
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета В (&парамСпособыРасчетаФиксированнойСуммой)
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|			КОНЕЦ) 
		|	+
		|	МАКСИМУМ(ВЫБОР
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|			КОНЕЦ) / 100 * 
		|	СУММА(ЕСТЬNULL(ОсновныеИДополнительныеНачисления.Результат, 0)) КАК СуммаКомпенсируемыхУдержаний,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|
		|ПОМЕСТИТЬ ВТ_КомпенсируемыеУдержанияРасчетаОтОбратного
		|ИЗ
		|	" + ИмяИсточника + " КАК Основной
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПлановыеИФактическиеУдержанияТекст + " КАК ПлановыеИФактическиеУдержания
		|
		|		ПО Основной.ФизЛицо = ПлановыеИФактическиеУдержания.ФизЛицо
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|											КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.Ссылка КАК ВидРасчетаОтОбратного,
		|											КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
		|										ИЗ
		|											ПланВидовРасчета." + ИмяПВР + ".КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний) КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
		|					ПО Основной.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчетаОтОбратного 
		|					   И ПлановыеИФактическиеУдержания.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + РанееКомпенсированныеУдержанияСуммойТекст + " КАК РанееКомпенсированныеУдержанияСуммой
		|		ПО Основной.ФизЛицо = РанееКомпенсированныеУдержанияСуммой.ФизЛицо
		|			И КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета = РанееКомпенсированныеУдержанияСуммой.ВидУдержания
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК БазовыеВидыРасчета
		|		ПО ПлановыеИФактическиеУдержания.ВидРасчета = БазовыеВидыРасчета.Ссылка
		|		   И ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|		   И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ВключаемыеВидыНачислений.Ссылка КАК Ссылка,
		|	ОсновныеИДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ОсновныеИДополнительныеНачисления.Результат КАК Результат
		|	ИЗ
		|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВключаемыеВидыНачислений.Ссылка КАК Ссылка,
		|			ВключаемыеВидыНачислений.ВидРасчета КАК ВидРасчета
		|		ИЗ
		|			ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ВключаемыеВидыНачислений
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ВключаемыеВидыНачислений.Ссылка,
		|			ВключаемыеВидыНачислений.ВидРасчета
		|		ИЗ
		|			ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ВключаемыеВидыНачислений) КАК ВключаемыеВидыНачислений
		|		ПО ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.ВидРасчета) КАК ОсновныеИДополнительныеНачисления
		|	ПО ПлановыеИФактическиеУдержания.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо
		|	   И БазовыеВидыРасчета.ВидРасчета = ОсновныеИДополнительныеНачисления.ВидРасчета
		|		И Основной.ВидРасчета = ОсновныеИДополнительныеНачисления.Ссылка
		|
		|ГДЕ
		|	" + ВнешнееУсловие + "
		|	И Основной.ВидРасчета.ОтОбратного
		|	И РанееКомпенсированныеУдержанияСуммой.ФизЛицо ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	Основной.НомерСтроки,
		|	Основной.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ФизЛицо,
		|	ПлановыеИФактическиеУдержания.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ВидСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Основной.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ВидРасчета
		|";
		Запрос.Текст = КомпенсируемыеУдержанияТекст;
		Запрос.Выполнить();
		КомпенсируемыеУдержанияТекст = "ВТ_КомпенсируемыеУдержанияРасчетаОтОбратного";
		
		
		
		
		

		
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						КомпенсируемыеУдержания.НомерСтроки,
		|						СУММА(КомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний) КАК СуммаКомпенсируемыхУдержаний,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПНиОПВ) КАК ПроцентКомпенсируемыхУдержанийБезИПНиОПВ,
		|						СУММА(КомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|					ИЗ
		|						" + КомпенсируемыеУдержанияТекст + " КАК КомпенсируемыеУдержания
		|					СГРУППИРОВАТЬ ПО 
		|						КомпенсируемыеУдержания.НомерСтроки
		|					) КАК РасчетОтОбратногоКомпенсируемыеУдержания
		|	ПО Основной.НомерСтроки = РасчетОтОбратногоКомпенсируемыеУдержания.НомерСтроки
		|";
	КонецЕсли;

	
	// определим суммы включаемых начислений ранее исчисленных расчетов от обратного,
	// рассчитанными как текущим, так и другими регистраторами
	
	РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст = "
	|ВЫБРАТЬ
	|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйОПВДоходВключаемыхНачислений
	|ПОМЕСТИТЬ ВТ_ПрочиеВключаемыеНачисленияРасчетаОтОбратного
	|ИЗ
	|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ВключаемыеВидыНачислений.ВидРасчета КАК ВидРасчета,
	|			ОсновныеИДополнительныеНачисления.ВидРасчета КАК Ссылка,
	|			ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо
	|		ИЗ
	|			" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка КАК Ссылка,
	|					ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета КАК ВидРасчета
	|				ИЗ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ
	|					ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка,
	|					ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|				ИЗ
	|					ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений) КАК ВключаемыеВидыНачислений
	|				ПО ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.Ссылка
	|		ГДЕ
	|			ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|			И НЕ (ВключаемыеВидыНачислений.ВидРасчета ЕСТЬ NULL)) КАК ВключаемыеВидыНачислений
	|		ПО ОсновныеИДополнительныеНачисления.ФизЛицо = ВключаемыеВидыНачислений.ФизЛицо
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеИДополнительныеНачисления.ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета
	|
	|ИНДЕКСИРОВАТЬ ПО 
	|	ОсновныеИДополнительныеНачисления.ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета";
	
	Запрос.Текст = РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст = "ВТ_ПрочиеВключаемыеНачисленияРасчетаОтОбратного";
	
	// Разделим прочие начисления на включаемые внутрь расчета "от обратного" и начисляемые "сверху"
	РасчетОтОбратногоПрочиеНачисленияТекст = "
	|ВЫБРАТЬ
	|	Основной.НомерСтроки,
	|	СУММА(ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного) КАК СуммаНачисленийОтОбратного,
	|	СУММА(ОсновныеИДополнительныеНачисления.ПрочиеДоходы) КАК ПрочиеДоходы,
	|	СУММА(ВЫБОР
	|		КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL) 
	|				И НЕ ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета.ОтОбратного
	|			ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
	|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаПрочихВключаемыхНачислений,
	|";
	
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "	
		|	СУММА(ВЫБОР
		|			КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
		|				И ПрочиеВключаемыеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйИПНДоходПрочихВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|			КОГДА (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|					И (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL)
		|					И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
		|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаемыйИПНДоходПрямыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйИПНДоходНачисленийОтОбратного, 
		|	МАКСИМУМ(ОсновныеИДополнительныеНачисления.ОтОбратногоКомпенсируетИПН) КАК ЕстьОтОбратногоКомпенсирующиеИПН,";
	КонецЕсли;

	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
		РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|				И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходВключаемыхНачислений, 
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
		|				И ПрочиеВключаемыеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходПрочихВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|				И (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL)
		|				И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
		|				И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходПрямыхНачислений, 
		|	СУММА(ВЫБОР
		|		КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходНачисленийОтОбратного, 
		|	МАКСИМУМ(ОсновныеИДополнительныеНачисления.ОтОбратногоКомпенсируетОПВ) КАК ЕстьОтОбратногоКомпенсирующиеОПВ,";
	КонецЕсли;

	РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "
	|	СУММА(ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений) КАК СуммаПрямыхНачислений, 
	|	СУММА(ВЫБОР
	|			КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеИДополнительныеНачисления.ДополнительныеДанныеОтОбратного
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДополнительныеДанные
	|
	|ПОМЕСТИТЬ ВТ_ПрочиеНачисленияРасчетаОтОбратного
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|		ПО Основной.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Ссылка КАК Ссылка,
	|							ВидРасчета КАК ВидРасчета
	|						ИЗ
	|							ПланВидовРасчета." + ИмяПВР + ".ВключаемыеВРасчетОтОбратногоВидыНачислений) КАК ВключаемыеВРасчетОтОбратногоВидыНачислений
	|		ПО Основной.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст + " КАК ПрочиеВключаемыеНачисления
	|		ПО Основной.ФизЛицо = ПрочиеВключаемыеНачисления.ФизЛицо
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ПрочиеВключаемыеНачисления.ВидРасчета
	|
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Основной.НомерСтроки";	
	Запрос.Текст = РасчетОтОбратногоПрочиеНачисленияТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоПрочиеНачисленияТекст = "ВТ_ПрочиеНачисленияРасчетаОтОбратного";
	
	// общие для любого вида компенсируемых удержаний данные
	РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамПериодРегистрации, Организация = &парамОбособленноеПодразделение) КАК УчетнаяПолитикаНУ
	|	ПО ИСТИНА
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|ПО Основной.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетОтОбратногоПрочиеНачисленияТекст + " КАК РасчетОтОбратногоПрочиеНачисления
	|	ПО Основной.НомерСтроки = РасчетОтОбратногоПрочиеНачисления.НомерСтроки
	|
	|";

	СтруктураРезультат = Новый Структура();
	СтруктураРезультат.Вставить("РасчетОтОбратногоСоединенияТекст", РасчетОтОбратногоСоединенияТекст);
	СтруктураРезультат.Вставить("РасчетОтОбратногоПоляТекст", РасчетОтОбратногоПоляТекст);
	
	Возврат СтруктураРезультат;

КонецФункции // ПолучитьДанныеДляРасчетаОтОбратногоПосле2014()

// Функция формирует тексты запросов для получения данных, необходимых при расчете "от обратного" после 2020 года
// Возвращает структуру с текстами запроса для секций ВЫБРАТЬ И СОЕДИНЕНИЯ
//
Функция ПолучитьДанныеДляРасчетаОтОбратногоПосле2020(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет = Ложь,
									Сотрудники = НеОпределено,
									Налогоплательщик = Неопределено,
									КомментироватьРасчет = Ложь,
									Запрос,
									ВнешнееУсловие)

	РасчетОтОбратногоПоляТекст = ""; // строка с полями запроса
	РасчетОтОбратногоСоединенияТекст = ""; // строка с соединениями в запросе		

	ИмяИсточника = "РегистрРасчета." + ИмяРегистра;
	ИмяПВР = ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций", "ОсновныеНачисленияОрганизаций", "ДополнительныеНачисленияОрганизаций");
	
	// Поля, необходимые для расчета "от обратного" 
	РасчетОтОбратногоПоляТекст = "
	|ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьИПН,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьВОСМС, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьВОСМС,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|			ИЛИ ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоУчитыватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|			ИЛИ ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьВОСМС, 0) > 0
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоУчитыватьВОСМС,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьУдержания, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьУдержания,
	|Основной.ВидРасчета.ВидДохода КАК ВидДохода,
	|Основной.ВидРасчета.ОблагаетсяОПВ КАК ОблагаетсяОПВ,
	|Основной.ВидРасчета.ОблагаетсяИПН КАК ОблагаетсяИПН,
	|Основной.ВидРасчета.ОблагаетсяВОСМС КАК ОблагаетсяВОСМС,
	|Основной.ВидРасчета.УчетПрямыхНачислений КАК РасчетОтОбратногоУчитыватьПрямыеНачисления
	|";

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляИПН,
		|ВЫБОР
		|	КОГДА Основной.ВидРасчета.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
		|		ТОГДА ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.РазрешенныеНалоговыеВычетыДоходыРаботодателя, 0) 
		|	ИНАЧЕ ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.РазрешенныеНалоговыеВычетыПрочиеДоходы, 0)
		|КОНЕЦ КАК РазрешенныеНалоговыеВычеты,
	   	|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПредоставлятьВычетОПВ, Ложь) КАК ПредоставлятьВычетОПВ,
    	|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПредоставлятьВычетВОСМС, Ложь) КАК ПредоставлятьВычетВОСМС,
	   	|ВЫБОР
		|	КОГДА Основной.ВидРасчета.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
		|		ТОГДА ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПримененныеНалоговыеВычетыВТекущемМесяце, 0)
		|	ИНАЧЕ 0 
		|КОНЕЦ КАК ПримененныеНалоговыеВычетыВТекущемМесяце,
		|ВЫБОР 
		|	КОГДА ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК 
		|		ТОГДА ЕСТЬNULL(СведенияОСтавкахИПНПоНалогоплательщику.СтавкаНерезиденты, ЕСТЬNULL(СведенияОСтавкахИПН.СтавкаНерезиденты, 0))
		|	ИНАЧЕ ЕСТЬNULL(СведенияОСтавкахИПНПоНалогоплательщику.Ставка, ЕСТЬNULL(СведенияОСтавкахИПН.Ставка, 0))
		|КОНЕЦ / 100 КАК ПроцентИПН,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходПрямыхНачислений, 0) КАК ОблагаемыйИПНДоходПрямыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходВключаемыхНачислений, 0) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходПрочихВключаемыхНачислений, 0) КАК ОблагаемыйИПНДоходПрочихВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходНачисленийОтОбратного, 0) КАК ОблагаемыйИПНДоходНачисленийОтОбратного,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ЕстьОтОбратногоКомпенсирующиеИПН, 0) КАК ЕстьОтОбратногоКомпенсирующиеИПН
		|";
	КонецЕсли;
			
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоДанныеОПВ.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляОПВ,
		|&парамРазмерОграниченияПоДоходамОПВ КАК РазмерОграниченияПоДоходамОПВ,
		|ЕСТЬNULL(СведенияОСтавкахОПВ.Ставка, 0) / 100 КАК ПроцентОПВ,
		//|&парамСтавкаОПВ КАК ПроцентОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходПрямыхНачислений, 0) КАК ОблагаемыйОПВДоходПрямыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходВключаемыхНачислений, 0) КАК ОблагаемыйОПВДоходВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходПрочихВключаемыхНачислений, 0) КАК ОблагаемыйОПВДоходПрочихВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходНачисленийОтОбратного, 0) КАК ОблагаемыйОПВДоходНачисленийОтОбратного,	
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ЕстьОтОбратногоКомпенсирующиеОПВ, 0) КАК ЕстьОтОбратногоКомпенсирующиеОПВ
		|";
	КонецЕсли;
	//Запрос.УстановитьПараметр("парамСтавкаОПВ", ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Организация, Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы, ПериодРегистрации) / 100);
	
	Если НеобходимыеДанные.ОтОбратногоУчитыватьВОСМС Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоДанныеВОСМС.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляВОСМС,
    	|ЕСТЬNULL(РасчетОтОбратногоДанныеВОСМС.ВОСМСДругогоРаботодателя, 0) КАК ВОСМСДругогоРаботодателя,
		|&парамРазмерОграниченияПоДоходамВОСМС КАК РазмерОграниченияПоДоходамВОСМС,
		|ЕСТЬNULL(СведенияОСтавкахВОСМСПоНалогоплательщику.Ставка, ЕСТЬNULL(СведенияОСтавкахВОСМС.Ставка, 0)) / 100 КАК ПроцентВОСМС,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйВОСМСДоходПрямыхНачислений, 0) КАК ОблагаемыйВОСМСДоходПрямыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйВОСМСДоходВключаемыхНачислений, 0) КАК ОблагаемыйВОСМСДоходВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйВОСМСДоходПрочихВключаемыхНачислений, 0) КАК ОблагаемыйВОСМСДоходПрочихВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйВОСМСДоходНачисленийОтОбратного, 0) КАК ОблагаемыйВОСМСДоходНачисленийОтОбратного,	
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ЕстьОтОбратногоКомпенсирующиеВОСМС, 0) КАК ЕстьОтОбратногоКомпенсирующиеВОСМС
		|";
	КонецЕсли;
	
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний, 0) КАК СуммаКомпенсируемыхУдержаний,
    	|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийТолькоИПН, 0) КАК ПроцентКомпенсируемыхУдержанийТолькоИПН,
    	|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийТолькоОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийТолькоОПВ,
    	|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийТолькоВОСМС, 0) КАК ПроцентКомпенсируемыхУдержанийТолькоВОСМС,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН, 0) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезВОСМС, 0) КАК ПроцентКомпенсируемыхУдержанийБезВОСМС,
    	|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийИПНиОПВиВОСМС, 0) КАК ПроцентКомпенсируемыхУдержанийИПНиОПВиВОСМС,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний, 0) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|";
	КонецЕсли;
			
	РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаПрямыхНачислений, 0) КАК СуммаПрямыхНачислений, 
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаНачисленийОтОбратного, 0) КАК СуммаНачисленийОтОбратного,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ПрочиеДоходы, 0) КАК СуммаПрочиеДоходы,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаВключаемыхНачислений, 0) КАК СуммаВключаемыхНачислений,
	|ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) КАК ФизЛицоНерезидент,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ДополнительныеДанные, 0) КАК РасчетОтОбратногоДополнительныеДанные
	|";

	// Далее идут тексты запросов по аналогии с функциями ПолучитьДанныеДляРасчетаИПН() и ПолучитьДанныеДляРасчетаОПВ().
	// Отличие по всем текстам в том, что в ПолучитьДанныеДляРасчетаИПН() используется &парамСписокФизЛиц,
	// а в расчете "от обратного" &парамРасчетОтОбратногоСписокФизЛиц.
	// В данном расчете предполагается, что расчет ИПН и ОПВ будет производится с установленным
	// в учетной политике по налоговому учету флажке ОтражениеПоПериодуРегистрации - все данные выбираются по ПериодРегистрации

	Запрос.УстановитьПараметр("парамРегистратор", 				Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 		НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачалоГода", 			    НачалоГода(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", ОбособленноеПодразделение);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", 	    Организация);

	Если Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить() Тогда
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	Налогоплательщик);
	Иначе
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	ОбособленноеПодразделение);
	КонецЕсли;

	// категория начисления
	Запрос.УстановитьПараметр("парамКатегорияНачисления", 		КатегорияРасчета);
	Запрос.УстановитьПараметр("парамПорядокКатегории", 			Перечисления.КатегорииРасчетов.Индекс(КатегорияРасчета));

	// Периоды
	// Таблица список физлиц, по которым необходимо выполнить расчет налога или взносов
	// Поля:
	//		Физлицо
	СписокФизЛицТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Основной.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета.ОтОбратного
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
			
	Запрос.Текст = СписокФизЛицТекст;
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";

	// Составим текст запроса для вычисления всех месяцев периода
	ДатыПериодовГодаТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период
	|ПОМЕСТИТЬ ВТ_ДатыПериодовГодаРасчетаОтОбратного
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) И &парамПериодРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период";
	Запрос.Текст = ДатыПериодовГодаТекст;
	Запрос.Выполнить();
	ДатыПериодовГодаТекст = "ВТ_ДатыПериодовГодаРасчетаОтОбратного";

	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц нерезидентов
	ФизлицаНеРезиденты = "ВЫБРАТЬ РАЗЛИЧНЫЕ
     |	ГражданствоФизЛиц.ФизЛицо КАК ФизЛицо,
     |	ИСТИНА КАК НеЯвляетсяНалоговымРезидентомРК
     |ПОМЕСТИТЬ ВТФизлицаНеРезиденты
     |ИЗ
     |	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
     |			&парамКонецПериодаРегистрации,
     |			ФизЛицо В
     |				(ВЫБРАТЬ
     |					СписокФизЛиц.ФизЛицо
     |				ИЗ
     |					ВТ_СписокФизЛиц КАК СписокФизЛиц)) КАК ГражданствоФизЛиц
     |ГДЕ
     |	ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК
     |
     |ИНДЕКСИРОВАТЬ ПО
     |	ГражданствоФизЛиц.ФизЛицо";
	 
	Запрос.Текст = ФизлицаНеРезиденты;
	Запрос.Выполнить();
	ФизлицаНеРезидентыТекст = "ВТФизлицаНеРезиденты";

	РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаНеРезидентыТекст + " КАК ГражданствоФизЛиц
		|	ПО Основной.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
		|";

	// Списки видов расчета, категория расчета которых меньше текущей  (т.е. уже посчитанные)
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПВР.Ссылка
	|ИЗ
	|	ПланВидовРасчета." + ИмяПВР + " КАК ПВР
	|ГДЕ
	|	ПВР.КатегорияРасчета.Порядок < &парамПорядокКатегории
	|";

	Запрос.УстановитьПараметр("парамУжеРассчитанныеВидыРасчета", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	// Определим компенсируемые удержания для каждого вида расчета от обратного
	КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст = " 
	|ВЫБРАТЬ
	|	КомпенсируемыеУдержанияОсновные.Ссылка КАК ВидРасчета,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияОсновные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьИПН,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияОсновные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияОсновные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьВОСМС,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ КомпенсируемыеУдержанияОсновные.ВидРасчета В (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьУдержания
	|ПОМЕСТИТЬ ВТ_КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеУдержанияОсновные
	|ГДЕ
	|	КомпенсируемыеУдержанияОсновные.Ссылка.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	КомпенсируемыеУдержанияОсновные.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КомпенсируемыеУдержанияДополнительные.Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияДополнительные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьИПН,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияДополнительные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияДополнительные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьВОСМС,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ КомпенсируемыеУдержанияДополнительные.ВидРасчета В (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьУдержания
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеУдержанияДополнительные
	|ГДЕ
	|	КомпенсируемыеУдержанияДополнительные.Ссылка.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	КомпенсируемыеУдержанияДополнительные.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета";
	
	Запрос.Текст = КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст;
	Запрос.Выполнить();
	КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст = "ВТ_КомпенсируемыеРасчетомОтОбратногоВидыУдержаний";
	Запрос.Текст = "ВЫБРАТЬ * ИЗ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст;
	
	// ОсновныеИДополнительныеНачисления
	// Поля:
	//		ФизЛицо
	//		ВидРасчета
	//		Результат
	//	Описание:
	// Выбирает начисления за период регистрации по физлицам, для которых выполняется расчет "от обратного"
	ОсновныеИДополнительныеНачисленияТекст = "
	|ВЫБРАТЬ
	|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ОсновныеНачисления.Результат) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.Сторно 
	|				И ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеНачисления.ДополнительныеДанные
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ДополнительныеДанныеОтОбратного,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				И НЕ ОсновныеНачисления.Сторно
	|				ТОГДА ОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		 КОНЕЦ) КАК СуммаНачисленийОтОбратного,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) КАК ОтОбратногоКомпенсируетИПН,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) КАК ОтОбратногоКомпенсируетОПВ,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьВОСМС, 0) КАК ОтОбратногоКомпенсируетВОСМС,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		 КОНЕЦ) КАК СуммаПрямыхНачислений,
	|	0 КАК ПрочиеДоходы
	|
	|ПОМЕСТИТЬ ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|		ПО ОсновныеНачисления.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ГДЕ
	|	ОсновныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И (ОсновныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ОсновныеНачисления.Регистратор = &парамРегистратор
	|				И ОсновныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))", "") + "
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисления.ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0),
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0),
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьВОСМС, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета,
	|	СУММА(ДополнительныеНачисления.Результат) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.Сторно 
	|				И ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ДополнительныеНачисления.ДополнительныеДанные
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ДополнительныеДанныеОтОбратного,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				И НЕ ДополнительныеНачисления.Сторно
	|				ТОГДА ДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаНачисленийОтОбратного,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) КАК ОтОбратногоКомпенсируетИПН,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) КАК ОтОбратногоКомпенсируетОПВ,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьВОСМС, 0) КАК ОтОбратногоКомпенсируетВОСМС,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаПрямыхНачислений,
	|	0 КАК ПрочиеДоходы
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ДополнительныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|		ПО ДополнительныеНачисления.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ГДЕ
	|	ДополнительныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ДополнительныеНачисления.ПериодРегистрации МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И ДополнительныеНачисления.Регистратор <> &парамРегистратор","
	|
	|	// если доп. начисления
	|	И (ДополнительныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ДополнительныеНачисления.Регистратор = &парамРегистратор
	|				И ДополнительныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))") + "
	|СГРУППИРОВАТЬ ПО
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0),
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0),
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьВОСМС, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	0 КАК Результат,
	|	0 КАК ДополнительныеДанныеОтОбратного,
	|	0 КАК СуммаНачисленийОтОбратного,
	|	0 КАК ОтОбратногоКомпенсируетИПН,
	|	0 КАК ОтОбратногоКомпенсируетОПВ,
	|	0 КАК ОтОбратногоКомпенсируетВОСМС,
	|	0 КАК СуммаПрямыхНачислений,
	|	СУММА(ОсновныеНачисления.СуммаДохода) КАК ПрочиеДоходы
	|
	|ИЗ
	|	Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения.СведенияОДоходах КАК ОсновныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ОсновныеНачисления.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ОсновныеНачисления.Ссылка.Организация
	|		ИНАЧЕ ОсновныеНачисления.Ссылка.Организация.ГоловнаяОрганизация
	|	КОНЕЦ = &парамГоловнаяОрганизация
	|	И ОсновныеНачисления.Ссылка.ПериодРегистрации = &парамПериодРегистрации
	|	И ВЫБОР
	|		КОГДА ОсновныеНачисления.Ссылка <> &парамРегистратор
	|			ТОГДА ОсновныеНачисления.Ссылка.Проведен
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И (ОсновныеНачисления.Ссылка <> &парамРегистратор
	|		ИЛИ (ОсновныеНачисления.Ссылка = &парамРегистратор
	|				И ОсновныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисления.ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидРасчета
	|";
	Запрос.Текст = ОсновныеИДополнительныеНачисленияТекст;
	Запрос.Выполнить();
	ОсновныеИДополнительныеНачисленияТекст = "ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного";

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
							
		// РасчетныеПоказатели
		//	Поля:
		//		Период
		//		РазмерМРП
		//		РазмерМЗП
		//
		//	Описание:
		// Выбирает размер месячного расчетного показателя по периодам
		РасчетныеПоказателиТекст = "
		|ВЫБРАТЬ
		|	МАКСИМУМ(РасчетныеПоказатели.РазмерМРП) КАК РазмерМРП,
		|	МАКСИМУМ(РасчетныеПоказатели.РазмерМЗП) КАК РазмерМЗП,
		|	МАКСИМУМ(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы),
		|	МАКСИМУМ(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы)
		|
		|ПОМЕСТИТЬ ВТ_РасчетныеПоказателиРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		0 КАК РазмерМРП,
		|		РасчетныеПоказателиСрезПоследних.РазмерМЗПДляЦелейНалогообложения КАК РазмерМЗП,
		|		0 КАК РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
		|		0 КАК РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
		|	ИЗ
		|		РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации, ) КАК РасчетныеПоказателиСрезПоследних
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		РасчетныеПоказателиСрезПоследних.РазмерМРПДляЦелейНалогообложения,
		|		0,
		|		РасчетныеПоказателиСрезПоследних.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
		|		РасчетныеПоказателиСрезПоследних.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
		|	ИЗ
		|		РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамНачалоГода, ) КАК РасчетныеПоказателиСрезПоследних) КАК РасчетныеПоказатели
		|";
		Запрос.Текст = РасчетныеПоказателиТекст;
		Запрос.Выполнить();
		РасчетныеПоказателиТекст = "ВТ_РасчетныеПоказателиРасчетаОтОбратного";
		
		
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		СуммаДоходаОборот
		//		СуммаВычетаОборот
		//
		//	Описание:
		// Выбирает общую сумму доходов и облагаемые налогом доходы за весь год по физлицам из СписокФизлиц
			
		// Здесь не учитываем доходы, записанные текущим регистратором, т.к. при проведении по ИПНСведенияОДоходах
		// они были еще в процессе расчета и их прибавим позже. А также отдельно выделяем доходы, начисленные в данной 
		// организации за текущий месяц, которые прошли через начисления, прочие доходы не выделяем.
		// Сведения о жилищных и страховых вычетах текущего месяца всегда берем из регистра сведений, т.к. в регистре накопления они 
		// появляются только при прямом расчете налога и поэтому могут отсутствовать, если сейчас первый раз рассчитываются начисления.
		// Т.к. расчет "от обратного" поддерживается только при учетной политикой с ОтражениемПоПериодуРегистрации,
		// то в регистрах Период, ПериодРегистрации и МесяцНалоговогоПериода всегда совпадают, поэтому 
		// устанавливаем отборы по Периоду, т.к. по нему система автоматически создает индекс.
		ДоходыИПНТекст = 
		"ВЫБРАТЬ
		|	ИПНОбороты.Физлицо КАК ФизЛицо,
		|	СУММА(ПрочиеДоходы) КАК ПрочиеДоходы
		|
		|ПОМЕСТИТЬ ВТ_ДоходыИПНРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
		|		СУММА(ВЫБОР
		|				КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ТОГДА ИПНСведенияОДоходах.СуммаДохода - ИПНСведенияОДоходах.СуммаВычета
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ПрочиеДоходы,
		|		ВЫБОР
		|			КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ИЛИ ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РасчетНалоговПриПоступленииАктивовУслуг
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ КАК НачисленоВТекущейОрганизации
		|	ИЗ
		|		РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО ИПНСведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|	ГДЕ
		|		ИПНСведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|		И ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|		И ИПНСведенияОДоходах.Регистратор <> &парамРегистратор
		|		И НЕ(ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ИПНСведенияОДоходах.ФизЛицо,
		|		ИПНСведенияОДоходах.СпособНалогообложения,
		|		ИПНСведенияОДоходах.Регистратор) КАК ИПНОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПНОбороты.Физлицо";
		Запрос.Текст = ДоходыИПНТекст;
		Запрос.Выполнить();
		ДоходыИПНТекст = "ВТ_ДоходыИПНРасчетаОтОбратного";

			
		// ПрименениеВычетовВОрганизации
		//	Поля:
		//		Физлицо,
		//		Период
		//
		// Описание:
		//	Выбирает список физлиц + периоды в которые применяются налоговые вычеты по 
		//	заданной организации
		ПрименениеВычетовВОрганизацииТекст = 
		"ВЫБРАТЬ
		|	ИПНПрименениеВычетов.Физлицо КАК Физлицо
		|
		|ПОМЕСТИТЬ ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ИПНПрименениеВычетов.СрезПоследних(
		|					&парамПериодРегистрации,
		|					ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНПрименениеВычетов
		|
		|ГДЕ
		|	ИПНПрименениеВычетов.Налогоплательщик = &парамНалогоплательщик
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		Запрос.Текст = ПрименениеВычетовВОрганизацииТекст;
		Запрос.Выполнить();
		ПрименениеВычетовВОрганизацииТекст = "ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного";

		// Применение стандартного вычета
		ПрименениеСтандартногоВычета = 
			"ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо КАК ФизЛицо,
			|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП) КАК ВидВычетаИПН,
			|	ВЫБОР
			|		КОГДА НалоговыеВычетыФизлиц.Физлицо ЕСТЬ NULL 
			|				ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
			|				ИЛИ НЕ ЕСТЬNULL(НалоговыеВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
			|			ТОГДА 0
			|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0)
			|	КОНЕЦ КАК РазрешенныйВычет
			|ПОМЕСТИТЬ ВТ_СтандартныйВычет1МЗП
			|ИЗ
			|	" + СписокФизЛицТекст + "  КАК СписокФизЛиц
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц.СрезПоследних(
			|				&парамКонецПериодаРегистрации,
			|				ФизЛицо В
			|					(ВЫБРАТЬ
			|						СписокФизЛиц.ФизЛицо
			|					ИЗ
			|						" + СписокФизЛицТекст + " КАК СписокФизЛиц)) КАК НалоговыеВычетыФизлиц
			|		ПО СписокФизЛиц.Физлицо = НалоговыеВычетыФизлиц.Физлицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаНеРезидентыТекст + " КАК ГражданствоФизЛиц
			|		ПО СписокФизЛиц.Физлицо = ГражданствоФизЛиц.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|		ПО (ИСТИНА)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	СписокФизЛиц.Физлицо,
			|	ВидВычетаИПН";
			
		Запрос.Текст = ПрименениеСтандартногоВычета;
		Запрос.Выполнить();
		ПрименениеСтандартногоВычета = "ВТ_СтандартныйВычет1МЗП";
		
		// ПрименяемыеЛьготы
		//	Поля:
		//		Физлицо
		//		Период
		//		ПрименяетсяЛьготаУчастникаВОВ
		//		ПрименяетсяЛьготаПоИнвалидности
		//		ЛьготаПоДоходу
		//
		//	Описание:
		//	Выбирает по всем периодам года льготы на которые имеет право физлицо
		ПрименяемыеЛьготыТекст = 
			"ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо КАК Физлицо,
			|	ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности,
			|	ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности,
			|	ВЫБОР 
			|		КОГДА (ЛьготыФизлицПоИнвалидности.Физлицо) ЕСТЬ NULL 
			|			ТОГДА 0 
			|		ИНАЧЕ ВЫБОР 
			|				КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
			|						И ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности = ""III"" 
			|					ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
			|				ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
			|			  КОНЕЦ 
			|	КОНЕЦ КАК ЛьготаПоИнвалидности,
			|	ВЫБОР 
			|		КОГДА (ЛьготыФизлицУчастниковВОВ.Физлицо) ЕСТЬ NULL 
			|			ТОГДА 0 
			|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) 
			|	КОНЕЦ КАК ЛьготаУчастникаВОВ
			|ПОМЕСТИТЬ ВТ_ИПНЛьготыФизлиц
			|		
			|ИЗ
			|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
			|						&парамКонецПериодаРегистрации,
			|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ЛьготыФизлицПоИнвалидности
			|		ПО ЛьготыФизлицПоИнвалидности.Физлицо = СписокФизЛиц.Физлицо
			|			И (ЛьготыФизЛицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
			|				ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизЛицПоИнвалидности.СрокДействияСправки, ГОД) >= &парамКонецПериодаРегистрации)
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(
			|						&парамКонецПериодаРегистрации,
			|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ЛьготыФизлицУчастниковВОВ
			|		ПО ЛьготыФизлицУчастниковВОВ.Физлицо = СписокФизЛиц.Физлицо
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|		ПО ИСТИНА
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИПНЛьготыФизлиц.Физлицо,
			|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды) КАК ВидВычетаИПН,
			|	
			|	ИПНЛьготыФизлиц.ОтношениеКИнвалидности,
			|	ИПНЛьготыФизлиц.ГруппаИнвалидности,
			|
			|	ВЫБОР
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > 0 
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ПрименяетсяЛьготаУчастникаВОВ,
			|
			|	ВЫБОР
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаПоИнвалидности > 0 
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ПрименяетсяЛьготаПоИнвалидности,
			|
			|	ВЫБОР 
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
			|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ 
			|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
			|	КОНЕЦ КАК ЛьготаПоДоходу
			|
			|ПОМЕСТИТЬ ВТ_ПрименяемыеЛьготыРасчетаОтОбратного
			|ИЗ
			|	ВТ_ИПНЛьготыФизлиц КАК ИПНЛьготыФизлиц
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаНеРезидентыТекст + " КАК ГражданствоФизЛиц
			|		ПО ИПНЛьготыФизлиц.Физлицо = ГражданствоФизЛиц.ФизЛицо
			|ГДЕ
			|   НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, Ложь)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ИПНЛьготыФизлиц.Физлицо
			|";
		Запрос.Текст = ПрименяемыеЛьготыТекст;
		Запрос.Выполнить();
		ПрименяемыеЛьготыТекст = "ВТ_ПрименяемыеЛьготыРасчетаОтОбратного";
		
		// Прочие вычеты по периодическим платежам
		ПрочиеВычетыТекст = 
			"ВЫБРАТЬ
			|	ИПНПлановыеВычеты.ФизЛицо,
			|	ИПНПлановыеВычеты.ВычетИПН КАК ВидВычетаИПН,
			|	СУММА(ИПНПлановыеВычеты.СуммаВычета) КАК РазрешенныйВычет
			|ПОМЕСТИТЬ ВТ_ПрочиеВычеты
			|ИЗ
			|	РегистрСведений.ИПНПлановыеНалоговыеВычетыФизЛиц.СрезПоследних(
			|			&парамКонецПериодаРегистрации,
			|			Налогоплательщик = &парамНалогоплательщик
			|			И МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
			|			И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНПлановыеВычеты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК  СписокФизЛиц
			|			ПО ИПНПлановыеВычеты.ФизЛицо = СписокФизЛиц.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаНеРезидентыТекст + " КАК ГражданствоФизЛиц
			|		ПО ИПНПлановыеВычеты.Физлицо = ГражданствоФизЛиц.ФизЛицо
			|ГДЕ
			|   НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, Ложь)
			|
			|СГРУППИРОВАТЬ ПО
			|	ИПНПлановыеВычеты.ФизЛицо,
			|	ИПНПлановыеВычеты.ВычетИПН
			|";
		Запрос.Текст = ПрочиеВычетыТекст;
		Запрос.Выполнить();
		ПрочиеВычетыТекст = "ВТ_ПрочиеВычеты";

		
		//Итоговая таблица видов вычетов
		РазмерыВычетовыИПН = 
			"ВЫБРАТЬ
			|	СтандартныйВычет1МЗП.Физлицо КАК ФизическоеЛицо,
			|	СтандартныйВычет1МЗП.ВидВычетаИПН КАК ВидВычетаИПН,
			|	СтандартныйВычет1МЗП.РазрешенныйВычет КАК РазмерВычета,
			|	СтандартныйВычет1МЗП.РазрешенныйВычет КАК СуммовойПределВычета,
			|	2 КАК Приоритет
			|ПОМЕСТИТЬ ВТ_РазмерыВычетовИПН
			|ИЗ
			|	ВТ_СтандартныйВычет1МЗП КАК СтандартныйВычет1МЗП
			|ГДЕ
			|	СтандартныйВычет1МЗП.РазрешенныйВычет <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПрименяемыеЛьготы.Физлицо,
			|	ПрименяемыеЛьготы.ВидВычетаИПН,
			|	ПрименяемыеЛьготы.ЛьготаПоДоходу,
			|	ПрименяемыеЛьготы.ЛьготаПоДоходу,
			|	3
			|ИЗ
			|	ВТ_ПрименяемыеЛьготыРасчетаОтОбратного КАК ПрименяемыеЛьготы
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПрочиеВычеты.Физлицо,
			|	ПрочиеВычеты.ВидВычетаИПН,
			|	ПрочиеВычеты.РазрешенныйВычет,
			|	ВЫБОР 
			|		КОГДА ПрочиеВычеты.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
			|			ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) * 8
			|		ИНАЧЕ ПрочиеВычеты.РазрешенныйВычет
			|	КОНЕЦ,
			|	4
			|ИЗ
			|	ВТ_ПрочиеВычеты КАК ПрочиеВычеты
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|			ПО ИСТИНА
			|ИНДЕКСИРОВАТЬ ПО
			|	ВидВычетаИПН,
			|	ФизическоеЛицо,
			|	Приоритет";
		
		Запрос.Текст = РазмерыВычетовыИПН;
		Запрос.Выполнить();
	    РазмерыВычетовыИПН = "ВТ_РазмерыВычетовИПН";
		
		// Соберем накопленные сведения по исчисленным вычетам
		НакопленныеДанныеПоВычетамТекст = 
			"ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо,
			|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета КАК ВидВычетаИПН,
			|	СУММА(ВЫБОР
			|			КОГДА НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
			|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК РазрешенныйВычетСНачалаГода,
			|	СУММА(ВЫБОР
			|			КОГДА НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
			|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК ПримененныйВычетСНачалаГода
			|ПОМЕСТИТЬ ВТ_НакопленныеДанные
			|ИЗ
			|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОбИсчисленииВычетовИПН.Обороты(&парамНачалоГода, &парамПериодРегистрации, Месяц, ) КАК СведенияОбИсчисленииВычетовИПНОбороты
			|		ПО СписокФизЛиц.Физлицо = (ВЫБОР
			|										КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо ССЫЛКА Справочник.Контрагенты
			|											ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо.ФизЛицо
			|										ИНАЧЕ СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
			|									КОНЕЦ)
			|			И &парамПериодРегистрации > СведенияОбИсчисленииВычетовИПНОбороты.Период
			|			И (НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД))
			|
			|СГРУППИРОВАТЬ ПО
			|	СписокФизЛиц.Физлицо,
			|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо,
			|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды),
			|	0,
			|	ВЫБОР
			|		КОГДА НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, ГОД)
			|			ТОГДА СведенияПредыдущегоМестаРаботыФизЛиц.ПримененнаяЛьгота
			|		ИНАЧЕ 0
			|	КОНЕЦ
			|ИЗ
			|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
			|		ПО &парамПериодРегистрации >= СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода
			|			И СписокФизЛиц.Физлицо = СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_НакопленныеДанныеПоВычетам.Физлицо,
			|	ВТ_НакопленныеДанныеПоВычетам.ВидВычетаИПН,
			|	СУММА(ВТ_НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода) КАК РазрешенныйВычетСНачалаГода,
			|	СУММА(ВТ_НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода) КАК ПримененныйВычетСНачалаГода
			|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетам
			|ИЗ
			|	ВТ_НакопленныеДанные КАК ВТ_НакопленныеДанныеПоВычетам
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_НакопленныеДанныеПоВычетам.Физлицо,
			|	ВТ_НакопленныеДанныеПоВычетам.ВидВычетаИПН";
			
		Запрос.Текст = НакопленныеДанныеПоВычетамТекст;
		Запрос.Выполнить();
		НакопленныеДанныеПоВычетамТекст = "ВТ_НакопленныеДанныеПоВычетам";

		НакопленныеДанныеПоВычетамТекущегоПериодаТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисленияОрганизаций.Ссылка КАК ВидРасчета
		|ПОМЕСТИТЬ ВТ_НачисленияОтОбратного
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		|ГДЕ
		|	ОсновныеНачисленияОрганизаций.ОтОбратного
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисленияОрганизаций.Ссылка
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций
		|ГДЕ
		|	ДополнительныеНачисленияОрганизаций.ОтОбратного
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеПримененныхВычетов.Физлицо,
		|	СУММА(ДанныеПримененныхВычетов.ПримененныеНалоговыеВычетыВТекущемМесяце) КАК ПримененныеНалоговыеВычетыВТекущемМесяце
		|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетамТекущегоПериода
		|ИЗ
		|	(ВЫБРАТЬ
		|		СписокФизЛиц.Физлицо КАК Физлицо,
		|		СУММА(ОсновныеНачисленияРаботниковОрганизаций.СуммаВычетовДоходовОтОбратного) КАК ПримененныеНалоговыеВычетыВТекущемМесяце
		|	ИЗ
		|			" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		|			ПО СписокФизЛиц.Физлицо = ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо
		|				И (&парамГоловнаяОрганизация = ОсновныеНачисленияРаботниковОрганизаций.Организация)
		|				И (&парамПериодРегистрации = НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ))
		// отбор по регистратору не делаем, тк в одном документе может быть несколько начислений (И (&парамРегистратор <> ОсновныеНачисленияРаботниковОрганизаций.Регистратор))
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НачисленияОтОбратного КАК НачисленияОтОбратного
		|			ПО (НачисленияОтОбратного.ВидРасчета = ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СписокФизЛиц.Физлицо
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СписокФизЛиц.Физлицо,
		|		СУММА(ДополнительныеНачисленияРаботниковОрганизаций.СуммаВычетовДоходовОтОбратного)
		|	ИЗ
		|			" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
		|			ПО СписокФизЛиц.Физлицо = ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо
		|				И (&парамГоловнаяОрганизация = ДополнительныеНачисленияРаботниковОрганизаций.Организация)
		|				И (&парамПериодРегистрации = НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ))
		// отбор по регистратору не делаем, тк в одном документе может быть несколько начислений (И (&парамРегистратор <> ДополнительныеНачисленияРаботниковОрганизаций.Регистратор))
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НачисленияОтОбратного КАК НачисленияОтОбратного
		|			ПО (НачисленияОтОбратного.ВидРасчета = ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СписокФизЛиц.Физлицо) КАК ДанныеПримененныхВычетов
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеПримененныхВычетов.Физлицо";

		Запрос.Текст = НакопленныеДанныеПоВычетамТекущегоПериодаТекст;
		Запрос.Выполнить();
		НакопленныеДанныеПоВычетамТекущегоПериодаТекст = "ВТ_НакопленныеДанныеПоВычетамТекущегоПериода";
		
		// Общий итог применяемых вычетов
		ПрименяемыеВычетыТекст = 
			"ВЫБРАТЬ
			|	РазмерыВычетов.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РазмерыВычетов.ВидВычетаИПН КАК ВидВычетаИПН,
			|	РазмерыВычетов.Приоритет КАК Приоритет,
			|	РазмерыВычетов.РазмерВычета КАК РазмерВычета,
			|	РазмерыВычетов.СуммовойПределВычета КАК СуммовойПределВычета,
			|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) КАК РазрешенныйВычетСНачалаГода,
			|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода, 0) КАК ПримененныйВычетСНачалаГода,
			|	ВЫБОР
			|		КОГДА РазмерыВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
			|			ТОГДА РазмерыВычетов.СуммовойПределВычета - ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0)
			|		КОГДА РазмерыВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
			|				И РазмерыВычетов.СуммовойПределВычета - ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) < РазмерыВычетов.РазмерВычета
			|			ТОГДА РазмерыВычетов.СуммовойПределВычета - ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0)
			|		ИНАЧЕ РазмерыВычетов.РазмерВычета
			|	КОНЕЦ КАК РазрешенныйВычетВТекущемПериоде,
			|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) - ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода, 0) КАК ОстатокВычетаЗаПрошлыеМесяцы
			|ПОМЕСТИТЬ ВТ_ДанныеДляРасчетаВычетов
			|ИЗ
			|	ВТ_РазмерыВычетовИПН КАК РазмерыВычетов
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НакопленныеДанныеПоВычетам КАК НакопленныеДанныеПоВычетам
			|		ПО РазмерыВычетов.ФизическоеЛицо = НакопленныеДанныеПоВычетам.Физлицо
			|			И РазмерыВычетов.ВидВычетаИПН = НакопленныеДанныеПоВычетам.ВидВычетаИПН
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СУММА(ВТ_ДанныеДляРасчетаВычетов.РазрешенныйВычетВТекущемПериоде + ВТ_ДанныеДляРасчетаВычетов.ОстатокВычетаЗаПрошлыеМесяцы) КАК РазрешенныеНалоговыеВычетыДоходыРаботодателя,
			|	СУММА(ВЫБОР
			|			КОГДА ВТ_ДанныеДляРасчетаВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
			|				ТОГДА ВТ_ДанныеДляРасчетаВычетов.РазрешенныйВычетВТекущемПериоде + ВТ_ДанныеДляРасчетаВычетов.ОстатокВычетаЗаПрошлыеМесяцы
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК РазрешенныеНалоговыеВычетыПрочиеДоходы,
			|	МАКСИМУМ(ЕСТЬNULL(ПрименениеВычетовВОрганизацииТекущегоПериода.ПримененныеНалоговыеВычетыВТекущемМесяце, 0)) КАК ПримененныеНалоговыеВычетыВТекущемМесяце,
			|	МАКСИМУМ(ВЫБОР
			|			КОГДА ВТ_ДанныеДляРасчетаВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ)
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ ЛОЖЬ
			|		КОНЕЦ) КАК ПредоставлятьВычетОПВ,
			|	МАКСИМУМ(ВЫБОР
			|			КОГДА ВТ_ДанныеДляРасчетаВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетВОСМС)
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ ЛОЖЬ
			|		КОНЕЦ) КАК ПредоставлятьВычетВОСМС
			|ПОМЕСТИТЬ ВТ_ПрименяемыеВычеты
			|ИЗ
			|	ВТ_ДанныеДляРасчетаВычетов КАК ВТ_ДанныеДляРасчетаВычетов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного КАК ПрименениеВычетовВОрганизации
			|		ПО ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо = ПрименениеВычетовВОрганизации.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НакопленныеДанныеПоВычетамТекущегоПериода КАК ПрименениеВычетовВОрганизацииТекущегоПериода
			|		ПО ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо = ПрименениеВычетовВОрганизацииТекущегоПериода.ФизЛицо
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо";
			
		Запрос.Текст = ПрименяемыеВычетыТекст;
		Запрос.Выполнить();
		ПрименяемыеВычетыТекст = "ВТ_ПрименяемыеВычеты";

		БазаДляИсчисленияИПНТекст = "
		|ВЫБРАТЬ
		|	СписокФизЛиц.ФизЛицо,
		|	ЕСТЬNULL(Доходы.ПрочиеДоходы, 0) КАК ПрочиеДоходы,
	    |	ЕСТЬNULL(ПрименяемыеВычеты.РазрешенныеНалоговыеВычетыПрочиеДоходы, 0) КАК РазрешенныеНалоговыеВычетыПрочиеДоходы,
	    |	ЕСТЬNULL(ПрименяемыеВычеты.РазрешенныеНалоговыеВычетыДоходыРаботодателя, 0) КАК РазрешенныеНалоговыеВычетыДоходыРаботодателя,
	    |	ЕСТЬNULL(ПрименяемыеВычеты.ПримененныеНалоговыеВычетыВТекущемМесяце, 0) КАК ПримененныеНалоговыеВычетыВТекущемМесяце,
		|	ЕСТЬNULL(ПрименяемыеВычеты.ПредоставлятьВычетОПВ, Ложь) КАК ПредоставлятьВычетОПВ,
    	|	ЕСТЬNULL(ПрименяемыеВычеты.ПредоставлятьВычетВОСМС, Ложь) КАК ПредоставлятьВычетВОСМС
		|
		|ПОМЕСТИТЬ ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного
		|ИЗ
		|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыИПНТекст + " КАК Доходы
		|		ПО СписокФизЛиц.ФизЛицо = Доходы.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеВычетыТекст + " КАК ПрименяемыеВычеты
		|		ПО СписокФизЛиц.ФизЛицо = ПрименяемыеВычеты.ФизическоеЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СписокФизЛиц.ФизЛицо
		|";
		
		Запрос.Текст = БазаДляИсчисленияИПНТекст;
		Запрос.Выполнить();
		БазаДляИсчисленияИПНТекст = "ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + БазаДляИсчисленияИПНТекст;

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + БазаДляИсчисленияИПНТекст + " КАК РасчетОтОбратногоДанныеИПН
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеИПН.ФизЛицо
		|	   И Основной.ВидРасчета.ОтОбратного
		|";

		СведенияОСтавкахИПНПоНалогоплательщикуТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахИПНПоНалогоплательщику.ВидДохода,
			|	СведенияОСтавкахИПНПоНалогоплательщику.Ставка,
			|	СведенияОСтавкахИПНПоНалогоплательщику.СтавкаНерезиденты
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахИПНПоНалогоплательщику
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахИПН.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = &парамНалогоплательщик) КАК СведенияОСтавкахИПНПоНалогоплательщику";
			
		Запрос.Текст = СведенияОСтавкахИПНПоНалогоплательщикуТекст;
		Запрос.Выполнить();
		СведенияОСтавкахИПНПоНалогоплательщикуТекст = "ВТ_СведенияОСтавкахИПНПоНалогоплательщику";
		
		СведенияОСтавкахИПНТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахИПН.ВидДохода,
			|	СведенияОСтавкахИПН.Ставка,
			|	СведенияОСтавкахИПН.СтавкаНерезиденты
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахИПН
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахИПН.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК СведенияОСтавкахИПН";
			
		Запрос.Текст = СведенияОСтавкахИПНТекст;
		Запрос.Выполнить();
		СведенияОСтавкахИПНТекст = "ВТ_СведенияОСтавкахИПН";

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахИПНПоНалогоплательщикуТекст + " КАК СведенияОСтавкахИПНПоНалогоплательщику
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахИПНПоНалогоплательщику.ВидДохода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахИПНТекст + " КАК СведенияОСтавкахИПН
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахИПН.ВидДохода
		|";
		
	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
			
		СписокГруппИнвалидности = Новый СписокЗначений;
		СписокГруппИнвалидности.Добавить("I");
		СписокГруппИнвалидности.Добавить("II");
			
		Запрос.УстановитьПараметр("парамСписокГруппИнвалидности",  СписокГруппИнвалидности);
			
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		ОблагаемыйДоход
		//
		//	Описание:
		// Выбирает облагаемые взносами доходы за периоды по физлицам
		
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то доходы всегда выбираются только за расчетный месяц. Отдельно выделим прочие доходы, зарегистрированные в обход начислений.
		ДоходыТекст = "
		|ВЫБРАТЬ
		|	ОПВСведенияОДоходах.ФизЛицо КАК Физлицо,
		|	СУММА(ВЫБОР
		|			КОГДА ОПВСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|				ТОГДА ОПВСведенияОДоходах.СуммаДохода - ОПВСведенияОДоходах.СуммаВычета
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПрочиеДоходы
		|
		|ПОМЕСТИТЬ ВТ_ДоходыОПВРасчетаОтОбратного
		|ИЗ
		|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|		ПО ОПВСведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|ГДЕ
		|	ОПВСведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|	И ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|	
		|СГРУППИРОВАТЬ ПО
		|	ОПВСведенияОДоходах.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОПВСведенияОДоходах.ФизЛицо";
		
		Запрос.Текст = ДоходыТекст;
		Запрос.Выполнить();
		ДоходыТекст = "ВТ_ДоходыОПВРасчетаОтОбратного";

		// Здесь не берем имеющийся за МесяцНалоговогоПериода в ОПВРасчетыСФондами взнос, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то ранее исчисленные взносы всегда выбираются только за расчетный месяц. Поэтому запроса к ОПВРасчетыСФондами вообще не требуется.

		// РазмерОграниченияПоДоходам
		РазмерОграниченияПоДоходамТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказатели.РазмерМЗП * 50 КАК ОграничениеПоДоходам
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказатели
		|";
			
		Запрос.Текст = РазмерОграниченияПоДоходамТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", Выборка.ОграничениеПоДоходам);
		Иначе
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", 0);
		КонецЕсли;

		// ФизлицаБезПраваНаПенсию
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц не имеющих право на пенсионное обеспечение
		ФизлицаБезПраваНаПенсиюТекст = "
		|ВЫБРАТЬ
		|	ГражданствоФизЛиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаБезПраваНаПенсию
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ГражданствоФизЛиц
		|
		|ГДЕ
		|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
				
		Запрос.Текст = ФизлицаБезПраваНаПенсиюТекст;
		Запрос.Выполнить();
		ФизлицаБезПраваНаПенсиюТекст = "ВТ_ФизлицаБезПраваНаПенсию";
			
		// ФизлицаПенсионеры
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц достигших пенсионный возраст
		ФизлицаПенсионерыТекст = "
		|ВЫБРАТЬ
		|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаПенсионеры
		|ИЗ
		|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОПенсионномОбеспеченииФизЛиц
		|
		|ГДЕ
		|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
			
		Запрос.Текст = ФизлицаПенсионерыТекст;
		Запрос.Выполнить();
		ФизлицаПенсионерыТекст = "ВТ_ФизлицаПенсионеры";

		// ФизлицаИнвалидыБессрочно
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц-инвалидов I и II группы, у которых инвалидность установлена бессрочно
		ФизлицаИнвалидыБессрочноТекст = "
		|ВЫБРАТЬ
		|	СведенияОбИнвалидностиФизлиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаИнвалидыБессрочно
		|ИЗ
		|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОбИнвалидностиФизлиц
		|
		|ГДЕ
		|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
		|	И СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности В (&парамСписокГруппИнвалидности)
		|	И СведенияОбИнвалидностиФизлиц.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
			
		Запрос.Текст = ФизлицаИнвалидыБессрочноТекст;
		Запрос.Выполнить();
		ФизлицаИнвалидыБессрочноТекст = "ВТ_ФизлицаИнвалидыБессрочно";

		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ВЫБОР
		|	КОГДА Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизЛицаПенсионерыТекст + ")
		|		  ИЛИ Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизЛицаБезПраваНаПенсиюТекст + ")
		|		  ИЛИ Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаИнвалидыБессрочноТекст + ") ТОГДА ЛОЖЬ
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ КАК ПризнакИсчисленияОПВ
		|";
		
		// СведенияОСтавкахНалоговСборовОтчислений
		// Поля:
		//		Период
		//		Ставка
		//
		// Описание:
		//	Выбирает ставку ОПВ для каждого периода исчисления взносов с учетом приоритетов
		
		СведенияОСтавкахОПВТекст = "ВЫБРАТЬ
		               |	1 КАК Приоритет,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидДохода КАК ВидДохода,
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
		               |ПОМЕСТИТЬ ВТ_СведенияОСтавкахПоПриоритетам
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода <> &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	2,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Вознаграждения),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	2,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Выигрыши),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	2,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Дивиденды),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	2,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	2,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	2,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ПрочиеДоходы),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	3,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидДохода,
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода <> &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	4,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Вознаграждения),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	4,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Выигрыши),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	4,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Дивиденды),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	4,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	4,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	4,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ПрочиеДоходы),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
		               |	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ВидДохода КАК ВидДохода,
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
		               |ПОМЕСТИТЬ ВТСведенияОСтавкахНалоговСборовОтчислений
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		СведенияОСтавкахНалоговСборовОтчислений.Период КАК Период,
		               |		СведенияОСтавкахНалоговСборовОтчислений.ВидДохода КАК ВидДохода,
		               |		МИНИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Приоритет) КАК Приоритет
		               |	ИЗ
		               |		ВТ_СведенияОСтавкахПоПриоритетам КАК СведенияОСтавкахНалоговСборовОтчислений
		               |	
		               |	СГРУППИРОВАТЬ ПО
		               |		СведенияОСтавкахНалоговСборовОтчислений.Период,
		               |		СведенияОСтавкахНалоговСборовОтчислений.ВидДохода) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОСтавкахПоПриоритетам КАК СведенияОСтавкахНалоговСборовОтчислений
		               |		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
		               |			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Приоритет = СведенияОСтавкахНалоговСборовОтчислений.Приоритет
		               |			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ВидДохода = СведенияОСтавкахНалоговСборовОтчислений.ВидДохода
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
		               |	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ВидДохода КАК ВидДохода,
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
					   |ПОМЕСТИТЬ ВТ_СведенияОСтавкахОПВ	
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		СведенияОСтавкахНалоговСборовОтчислений.ВидДохода КАК ВидДохода,
		               |		МАКСИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Период) КАК Период
		               |	ИЗ
		               |		ВТСведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |	
		               |	СГРУППИРОВАТЬ ПО
		               |		СведенияОСтавкахНалоговСборовОтчислений.ВидДохода) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
		               |			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ВидДохода = СведенияОСтавкахНалоговСборовОтчислений.ВидДохода";
		
		Запрос.УстановитьПараметр("парамПустойВидДохода", Справочники.ВидыДоходов.ПустаяСсылка());
		Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("парамВидОПВ", Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы);
				
		Запрос.Текст = СведенияОСтавкахОПВТекст;
		Запрос.Выполнить();
		СведенияОСтавкахОПВТекст = "ВТ_СведенияОСтавкахОПВ";
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыТекст + " КАК РасчетОтОбратногоДанныеОПВ
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеОПВ.ФизЛицо
		|	   И Основной.ВидРасчета.ОтОбратного
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахОПВТекст + " КАК СведенияОСтавкахОПВ
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахОПВ.ВидДохода
		|";

	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоУчитыватьВОСМС Тогда
			
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		ОблагаемыйДоход
		//
		//	Описание:
		// Выбирает облагаемые взносами доходы за периоды по физлицам
		
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то доходы всегда выбираются только за расчетный месяц. Отдельно выделим прочие доходы, зарегистрированные в обход начислений.
		ДоходыТекст = "
    	|ВЫБРАТЬ
		|	ВОСМССведенияОДоходах.ФизЛицо КАК Физлицо,
		|   СУММА(ВОСМССведенияОДоходах.ПрочиеДоходы) КАК ПрочиеДоходы,
		|   СУММА(ВОСМССведенияОДоходах.ВОСМСДругогоРаботодателя) КАК ВОСМСДругогоРаботодателя
    	|ПОМЕСТИТЬ ВТ_ДоходыВОСМСРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВОСМССведенияОДоходах.ФизЛицо КАК Физлицо,
		|		ВЫБОР
		|				КОГДА ВОСМССведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ТОГДА ВОСМССведенияОДоходах.СуммаДохода - ВОСМССведенияОДоходах.СуммаВычета
		|				ИНАЧЕ 0
    	|			КОНЕЦ КАК ПрочиеДоходы,
		|		0 КАК ВОСМСДругогоРаботодателя
		|
		|	ИЗ
		|		РегистрНакопления.ВОСМССведенияОДоходах КАК ВОСМССведенияОДоходах
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО ВОСМССведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|	ГДЕ
		|		ВОСМССведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|		И ВОСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		СписокФизЛиц.Физлицо,
		|		0,
		|		СведенияПредыдущегоМестаРаботыФизЛиц.ВОСМС
		|	ИЗ
		|		" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
		|				ПО СписокФизЛиц.Физлицо = СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо
    	|	ГДЕ
    	|		СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
    	|		И СведенияПредыдущегоМестаРаботыФизЛиц.Налогоплательщик = &парамНалогоплательщик) КАК ВОСМССведенияОДоходах
		|	
		|СГРУППИРОВАТЬ ПО
		|	ВОСМССведенияОДоходах.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
 		|	ВОСМССведенияОДоходах.ФизЛицо";
		
		Запрос.Текст = ДоходыТекст;
		Запрос.Выполнить();
		ДоходыТекст = "ВТ_ДоходыВОСМСРасчетаОтОбратного";

		// Здесь не берем имеющийся за МесяцНалоговогоПериода в ВОСМСРасчетыСФондами взнос, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то ранее исчисленные взносы всегда выбираются только за расчетный месяц. Поэтому запроса к ОПВРасчетыСФондами вообще не требуется.

		// РазмерОграниченияПоДоходам
		РазмерОграниченияПоДоходамТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказатели.РазмерМЗП * 10 КАК ОграничениеПоДоходам
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказатели
		|";
			
		Запрос.Текст = РазмерОграниченияПоДоходамТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамВОСМС", Выборка.ОграничениеПоДоходам);
		Иначе
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамВОСМС", 0);
		КонецЕсли;

		// ФизлицаБезПраваНаПенсию
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц не имеющих право на пенсионное обеспечение
		ФизлицаНеПодлежитСоциальномуМедицинскомуСтрахованиюТекст = "
		|ВЫБРАТЬ
		|	ГражданствоФизЛиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаНеПодлежитСоциальномуМедицинскомуСтрахованию
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ГражданствоФизЛиц
		|
		|ГДЕ
		|	(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
				
		Запрос.Текст = ФизлицаНеПодлежитСоциальномуМедицинскомуСтрахованиюТекст;
		Запрос.Выполнить();
		ФизлицаНеПодлежитСоциальномуМедицинскомуСтрахованиюТекст = "ВТ_ФизлицаНеПодлежитСоциальномуМедицинскомуСтрахованию";
			
		Если НЕ НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
			
			// ФизлицаПенсионеры
			//	Поля:
			//		Физлицо
			//
			//	Описание:
			//	список физлиц достигших пенсионный возраст
			ФизлицаПенсионерыТекст = "
			|ВЫБРАТЬ
			|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
			|ПОМЕСТИТЬ ВТ_ФизлицаПенсионеры
			|ИЗ
			|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(
			|						&парамКонецПериодаРегистрации, 
			|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОПенсионномОбеспеченииФизЛиц
			|
			|ГДЕ
			|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицо";
				
			Запрос.Текст = ФизлицаПенсионерыТекст;
			Запрос.Выполнить();
			ФизлицаПенсионерыТекст = "ВТ_ФизлицаПенсионеры";

		КонецЕсли;
			
		// ФизлицаИнвалиды		
		//	Поля:
		//		Физлицо
		//
		ФизлицаИнвалидыТекст = "
		|ВЫБРАТЬ
		|	СведенияОбИнвалидностиФизлиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаИнвалиды
		|ИЗ
		|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОбИнвалидностиФизлиц
		|
		|ГДЕ
		|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
		|	И (СведенияОбИнвалидностиФизлиц.СрокДействияСправки = ДАТАВРЕМЯ(1,1,1) ИЛИ &парамКонецПериодаРегистрации <= КОНЕЦПЕРИОДА(СведенияОбИнвалидностиФизлиц.СрокДействияСправки, ДЕНЬ))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
			
		Запрос.Текст = ФизлицаИнвалидыТекст;
		Запрос.Выполнить();
		ФизлицаИнвалидыТекст = "ВТ_ФизлицаИнвалиды";

		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ВЫБОР
		|	КОГДА Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизЛицаПенсионерыТекст + ")
		|		  ИЛИ Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаНеПодлежитСоциальномуМедицинскомуСтрахованиюТекст + ")
		|		  ИЛИ Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаИнвалидыТекст + ") ТОГДА ЛОЖЬ
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ КАК ПризнакИсчисленияВОСМС
		|";
		
		СведенияОСтавкахВОСМСПоНалогоплательщикуТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахВОСМСПоНалогоплательщику.ВидДохода,
			|	СведенияОСтавкахВОСМСПоНалогоплательщику.СтавкаВзносы КАК Ставка
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахВОСМСПоНалогоплательщику
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахОСМС.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = &парамНалогоплательщик) КАК СведенияОСтавкахВОСМСПоНалогоплательщику";
			
		Запрос.Текст = СведенияОСтавкахВОСМСПоНалогоплательщикуТекст;
		Запрос.Выполнить();
		СведенияОСтавкахВОСМСПоНалогоплательщикуТекст = "ВТ_СведенияОСтавкахВОСМСПоНалогоплательщику";
		
		СведенияОСтавкахВОСМСТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахВОСМС.ВидДохода,
			|	СведенияОСтавкахВОСМС.СтавкаВзносы КАК Ставка
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахВОСМС
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахОСМС.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК СведенияОСтавкахВОСМС";
			
		Запрос.Текст = СведенияОСтавкахВОСМСТекст;
		Запрос.Выполнить();
		СведенияОСтавкахВОСМСТекст = "ВТ_СведенияОСтавкахВОСМС";
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыТекст + " КАК РасчетОтОбратногоДанныеВОСМС
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеВОСМС.ФизЛицо
		|	   И Основной.ВидРасчета.ОтОбратного
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахВОСМСПоНалогоплательщикуТекст + " КАК СведенияОСтавкахВОСМСПоНалогоплательщику
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахВОСМСПоНалогоплательщику.ВидДохода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахВОСМСТекст + " КАК СведенияОСтавкахВОСМС
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахВОСМС.ВидДохода
		|";

	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
	   
	   // для списка погашамых удержаний определим общую сумму
	   Запрос.УстановитьПараметр("парамСпособыРасчетаФиксированнойСуммой", ПроведениеРасчетов.ПолучитьСписокСпособовРасчетовФиксированнойСуммой());
	   Запрос.УстановитьПараметр("парамВалютаРегламентУчета", Константы.ВалютаРегламентированногоУчета.Получить());

	   // ПлановыеУдержания
	   // Поля:
	   //		ФизЛицо
	   //		ВидРасчета
	   //		ВидСтроки
	   //		Размер
	   //	Описание:
	   // Выбирает плановые и фактические удержания за период регистрации для физлиц, по которым производится расчет "от обратного".
	   // Фактические удержания берем только те, что введены как разовые, чтобы не задублировать плановые, если уже создан и проведен
	   // документ "Расчет ИПН, ОПВ и удержаний" и заново пересчитывают "от обратного"
		
	   ПлановыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1 КАК Размер,
		|	ПлановыеУдержания.Валюта1 КАК Валюта,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.Период < &парамПериодРегистрации ТОГДА &парамПериодРегистрации
		|		ИНАЧЕ ПлановыеУдержания.Период
		|	КОНЕЦ КАК ДатаНачала,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ПлановыеУдержания.ПериодЗавершения <= &парамКонецПериодаРегистрации
		|			ТОГДА КОНЕЦПЕРИОДА(ПлановыеУдержания.ПериодЗавершения, ДЕНЬ)
		|		ИНАЧЕ МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонецПериодаРегистрации))
		|	КОНЕЦ КАК ДатаОкончания
		|
		|ПОМЕСТИТЬ ВТ_ПлановыеУдержанияРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|		ПО ПлановыеУдержания.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК СледующиеПлановыеУдержания
		|		ПО ПлановыеУдержания.Организация = СледующиеПлановыеУдержания.Организация
		|			И ПлановыеУдержания.Физлицо = СледующиеПлановыеУдержания.Физлицо
		|			И ПлановыеУдержания.ВидРасчета = СледующиеПлановыеУдержания.ВидРасчета
		|			И ПлановыеУдержания.ДокументОснование = СледующиеПлановыеУдержания.ДокументОснование
		|			И СледующиеПлановыеУдержания.Период > ПлановыеУдержания.Период
		|			И СледующиеПлановыеУдержания.Период <= &парамКонецПериодаРегистрации
		|
		|ГДЕ
		|	ПлановыеУдержания.Организация = &парамГоловнаяОрганизация
		|	И ПлановыеУдержания.Период <= &парамКонецПериодаРегистрации
		|	И ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1) 
		|				И ПлановыеУдержания.ПериодЗавершения < &парамПериодРегистрации ТОГДА ПлановыеУдержания.ДействиеЗавершения
		|		ИНАЧЕ ПлановыеУдержания.Действие
		|	  КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1,
		|	ПлановыеУдержания.Валюта1,
		|	ПлановыеУдержания.Период,
		|	ПлановыеУдержания.ПериодЗавершения
		|
		|ИМЕЮЩИЕ
		|	МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонецПериодаРегистрации)) >= &парамПериодРегистрации
		|";
		Запрос.Текст = ПлановыеУдержанияТекст;
		Запрос.Выполнить();
		ПлановыеУдержанияТекст = "ВТ_ПлановыеУдержанияРасчетаОтОбратного";
		
		// В качестве фактических берем только те, что зарегистрированы как 
		// разовые, т.к. все остальные будут взяты из плановых
		ПлановыеИФактическиеУдержанияТекст = "
		|ВЫБРАТЬ
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	Удержания.ВидРасчета.ВычитатьИзБазыИПН КАК ВычитатьИзБазыИПН,
		|	Удержания.ВидРасчета.ВычитатьИзБазыОПВ КАК ВычитатьИзБазыОПВ,
		|	Удержания.ВидРасчета.ВычитатьИзБазыВОСМС КАК ВычитатьИзБазыВОСМС,
		|	Удержания.ВидСтроки,
		|	СУММА(Удержания.Результат) КАК Результат,
		|	СУММА(ВЫБОР
		|			КОГДА Удержания.Валюта = &парамВалютаРегламентУчета ИЛИ Удержания.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|				ТОГДА Удержания.Размер
		|			ИНАЧЕ Удержания.Размер * ЕСТЬNULL(Валюты.Курс, 0) / ЕСТЬNULL(Валюты.Кратность, 1)
		|		  КОНЕЦ) КАК Размер
		|
		|ПОМЕСТИТЬ ВТ_ПлановыеИФактическиеУдержанияРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|			ПлановыеУдержания.ФизЛицо,
		|			ПлановыеУдержания.ВидРасчета,
		|			""ПлановыеУдержания"" КАК ВидСтроки,
		|			0 КАК Результат,
		|			ПлановыеУдержания.Размер,
		|			ПлановыеУдержания.Валюта
		|		ИЗ
		|			" + ПлановыеУдержанияТекст + " КАК ПлановыеУдержания
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Удержания.ФизЛицо,
		|		Удержания.ВидРасчета,
		|		""ФактическиеУдержания"" КАК ВидСтроки,
		|		Удержания.Результат,
		|		Удержания.Показатель1 КАК Размер,
		|		ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
		|	ИЗ
		|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО Удержания.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|	ГДЕ
		|		Удержания.Организация = &парамГоловнаяОрганизация 
		|		И Удержания.ПериодРегистрации = &парамПериодРегистрации
		|		И Удержания.Результат <> 0
		|		И НЕ (Удержания.Регистратор ССЫЛКА Документ.РасчетУдержанийРаботниковОрганизаций)
		|	) КАК Удержания
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты
		|	ПО Валюты.Период = &парамПериодРегистрации И Валюты.Валюта = Удержания.Валюта
		|
		|СГРУППИРОВАТЬ ПО
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.ВидРасчета.СпособРасчета,
		|	Удержания.ВидСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Удержания.ФизЛицо
		|";
		Запрос.Текст = ПлановыеИФактическиеУдержанияТекст;
		Запрос.Выполнить();
		ПлановыеИФактическиеУдержанияТекст = "ВТ_ПлановыеИФактическиеУдержанияРасчетаОтОбратного";
			   
		
		
		РанееКомпенсированныеУдержанияСуммойТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КомпенсируемыеВидыУдержанийОсновные.Ссылка КАК ВидРасчета,
		|	КомпенсируемыеВидыУдержанийОсновные.ВидРасчета КАК ВидУдержания
		|ПОМЕСТИТЬ ВТ_КомпенсируемыеУдержанияСуммой
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеВидыУдержанийОсновные
		|
		|ГДЕ
		|	КомпенсируемыеВидыУдержанийОсновные.ВидРасчета ССЫЛКА ПланВидовРасчета.УдержанияОрганизаций
		|	И КомпенсируемыеВидыУдержанийОсновные.ВидРасчета.СпособРасчета В(&парамСпособыРасчетаФиксированнойСуммой)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КомпенсируемыеВидыУдержанийДополнительные.Ссылка,
		|	КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеВидыУдержанийДополнительные
		|
		|ГДЕ
		|	КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета ССЫЛКА ПланВидовРасчета.УдержанияОрганизаций
		|	И КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета.СпособРасчета В(&парамСпособыРасчетаФиксированнойСуммой)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|   ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	КомпенсируемыеУдержанияСуммой.ВидУдержания
		|ПОМЕСТИТЬ ВТ_РанееКомпенсированныеУдержанияСуммой
		|ИЗ
		|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КомпенсируемыеУдержанияСуммой КАК КомпенсируемыеУдержанияСуммой
		|		ПО ОсновныеИДополнительныеНачисления.ВидРасчета = КомпенсируемыеУдержанияСуммой.ВидРасчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	ВидУдержания";
		
		Запрос.Текст = РанееКомпенсированныеУдержанияСуммойТекст;
		Запрос.Выполнить();
		РанееКомпенсированныеУдержанияСуммойТекст = "ВТ_РанееКомпенсированныеУдержанияСуммой";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + РанееКомпенсированныеУдержанияСуммойТекст;
		
		// КомпенсируемыеУдержания
		// Поля:
		//		ФизЛицо
		//		ВидУдержания
		//		Результат
		//		Размер
		//	Описание:
		// Рассчитывает результат по каждому компенсируемому виду удержаний 
		КомпенсируемыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	Основной.НомерСтроки,
		|	Основной.ВидРасчета КАК ВидРасчетаОтОбратного,
		|	ПлановыеИФактическиеУдержания.ФизЛицо,
		|	ПлановыеИФактическиеУдержания.ВидРасчета КАК ВидУдержания,
		|	ПлановыеИФактическиеУдержания.ВидСтроки,
		|
		|	МАКСИМУМ(ВЫБОР
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ФактическиеУдержания""
		|					ТОГДА ПлановыеИФактическиеУдержания.Результат
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета В (&парамСпособыРасчетаФиксированнойСуммой)
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|			КОНЕЦ) 
		|	+
		|	МАКСИМУМ(ВЫБОР
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|			КОНЕЦ) / 100 * 
		|	СУММА(ЕСТЬNULL(ОсновныеИДополнительныеНачисления.Результат, 0)) КАК СуммаКомпенсируемыхУдержаний,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийТолькоИПН,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
    	|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийТолькоОПВ,
    	|
    	|	МАКСИМУМ(ВЫБОР 
    	|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
    	|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
    	|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
    	|					ТОГДА ПлановыеИФактическиеУдержания.Размер
    	|				ИНАЧЕ 0
    	|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийТолькоВОСМС,
    	|
    	|	МАКСИМУМ(ВЫБОР 
    	|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
    	|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
    	|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
    	|					ТОГДА ПлановыеИФактическиеУдержания.Размер
    	|				ИНАЧЕ 0
    	|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
    	|
    	|	МАКСИМУМ(ВЫБОР 
    	|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
    	|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
    	|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
    	|					ТОГДА ПлановыеИФактическиеУдержания.Размер
    	|				ИНАЧЕ 0
    	|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
    	|
    	|	МАКСИМУМ(ВЫБОР 
    	|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
    	|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
    	|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
    	|					ТОГДА ПлановыеИФактическиеУдержания.Размер
    	|				ИНАЧЕ 0
    	|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезВОСМС,
    	|
    	|	МАКСИМУМ(ВЫБОР 
    	|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
    	|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
    	|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
    	|					ТОГДА ПлановыеИФактическиеУдержания.Размер
    	|				ИНАЧЕ 0
    	|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийИПНиОПВиВОСМС,
    	|
    	|	МАКСИМУМ(ВЫБОР 
    	|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
    	|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
    	|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
    	|					ТОГДА ПлановыеИФактическиеУдержания.Размер
    	|				ИНАЧЕ 0
    	|		  	 КОНЕЦ) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|
		|ПОМЕСТИТЬ ВТ_КомпенсируемыеУдержанияРасчетаОтОбратного
		|ИЗ
		|	" + ИмяИсточника + " КАК Основной
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПлановыеИФактическиеУдержанияТекст + " КАК ПлановыеИФактическиеУдержания
		|
		|		ПО Основной.ФизЛицо = ПлановыеИФактическиеУдержания.ФизЛицо
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|											КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.Ссылка КАК ВидРасчетаОтОбратного,
		|											КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
		|										ИЗ
		|											ПланВидовРасчета." + ИмяПВР + ".КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний) КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
		|					ПО Основной.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчетаОтОбратного 
		|					   И ПлановыеИФактическиеУдержания.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + РанееКомпенсированныеУдержанияСуммойТекст + " КАК РанееКомпенсированныеУдержанияСуммой
		|		ПО Основной.ФизЛицо = РанееКомпенсированныеУдержанияСуммой.ФизЛицо
		|			И КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета = РанееКомпенсированныеУдержанияСуммой.ВидУдержания
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК БазовыеВидыРасчета
		|		ПО ПлановыеИФактическиеУдержания.ВидРасчета = БазовыеВидыРасчета.Ссылка
		|		   И ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|		   И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ВключаемыеВидыНачислений.Ссылка КАК Ссылка,
		|	ОсновныеИДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ОсновныеИДополнительныеНачисления.Результат КАК Результат
		|	ИЗ
		|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВключаемыеВидыНачислений.Ссылка КАК Ссылка,
		|			ВключаемыеВидыНачислений.ВидРасчета КАК ВидРасчета
		|		ИЗ
		|			ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ВключаемыеВидыНачислений
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ВключаемыеВидыНачислений.Ссылка,
		|			ВключаемыеВидыНачислений.ВидРасчета
		|		ИЗ
		|			ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ВключаемыеВидыНачислений) КАК ВключаемыеВидыНачислений
		|		ПО ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.ВидРасчета) КАК ОсновныеИДополнительныеНачисления
		|	ПО ПлановыеИФактическиеУдержания.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо
		|	   И БазовыеВидыРасчета.ВидРасчета = ОсновныеИДополнительныеНачисления.ВидРасчета
		|		И Основной.ВидРасчета = ОсновныеИДополнительныеНачисления.Ссылка
		|
		|ГДЕ
		|	" + ВнешнееУсловие + "
		|	И Основной.ВидРасчета.ОтОбратного
		|	И РанееКомпенсированныеУдержанияСуммой.ФизЛицо ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	Основной.НомерСтроки,
		|	Основной.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ФизЛицо,
		|	ПлановыеИФактическиеУдержания.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ВидСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Основной.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ВидРасчета
		|";
		Запрос.Текст = КомпенсируемыеУдержанияТекст;
		Запрос.Выполнить();
		КомпенсируемыеУдержанияТекст = "ВТ_КомпенсируемыеУдержанияРасчетаОтОбратного";
		
		
		
		
		

		
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						КомпенсируемыеУдержания.НомерСтроки,
		|						СУММА(КомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний) КАК СуммаКомпенсируемыхУдержаний,
    	|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийТолькоИПН) КАК ПроцентКомпенсируемыхУдержанийТолькоИПН,
    	|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийТолькоОПВ) КАК ПроцентКомпенсируемыхУдержанийТолькоОПВ,
    	|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийТолькоВОСМС) КАК ПроцентКомпенсируемыхУдержанийТолькоВОСМС,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезВОСМС) КАК ПроцентКомпенсируемыхУдержанийБезВОСМС,
    	|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийИПНиОПВиВОСМС) КАК ПроцентКомпенсируемыхУдержанийИПНиОПВиВОСМС,
		|						СУММА(КомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|					ИЗ
		|						" + КомпенсируемыеУдержанияТекст + " КАК КомпенсируемыеУдержания
		|					СГРУППИРОВАТЬ ПО 
		|						КомпенсируемыеУдержания.НомерСтроки
		|					) КАК РасчетОтОбратногоКомпенсируемыеУдержания
		|	ПО Основной.НомерСтроки = РасчетОтОбратногоКомпенсируемыеУдержания.НомерСтроки
		|";
	КонецЕсли;

	
	// определим суммы включаемых начислений ранее исчисленных расчетов от обратного,
	// рассчитанными как текущим, так и другими регистраторами
	
	РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст = "
	|ВЫБРАТЬ
	|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйОПВДоходВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяВОСМС <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйВОСМСДоходВключаемыхНачислений
	|ПОМЕСТИТЬ ВТ_ПрочиеВключаемыеНачисленияРасчетаОтОбратного
	|ИЗ
	|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ВключаемыеВидыНачислений.ВидРасчета КАК ВидРасчета,
	|			ОсновныеИДополнительныеНачисления.ВидРасчета КАК Ссылка,
	|			ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо
	|		ИЗ
	|			" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка КАК Ссылка,
	|					ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета КАК ВидРасчета
	|				ИЗ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ
	|					ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка,
	|					ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|				ИЗ
	|					ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений) КАК ВключаемыеВидыНачислений
	|				ПО ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.Ссылка
	|		ГДЕ
	|			ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|			И НЕ (ВключаемыеВидыНачислений.ВидРасчета ЕСТЬ NULL)) КАК ВключаемыеВидыНачислений
	|		ПО ОсновныеИДополнительныеНачисления.ФизЛицо = ВключаемыеВидыНачислений.ФизЛицо
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеИДополнительныеНачисления.ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета
	|
	|ИНДЕКСИРОВАТЬ ПО 
	|	ОсновныеИДополнительныеНачисления.ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета";
	
	Запрос.Текст = РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст = "ВТ_ПрочиеВключаемыеНачисленияРасчетаОтОбратного";
	
	// Разделим прочие начисления на включаемые внутрь расчета "от обратного" и начисляемые "сверху"
	РасчетОтОбратногоПрочиеНачисленияТекст = "
	|ВЫБРАТЬ
	|	Основной.НомерСтроки,
	|	СУММА(ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного) КАК СуммаНачисленийОтОбратного,
	|	СУММА(ОсновныеИДополнительныеНачисления.ПрочиеДоходы) КАК ПрочиеДоходы,
	|	СУММА(ВЫБОР
	|		КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL) 
	|				И НЕ ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета.ОтОбратного
	|			ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
	|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаПрочихВключаемыхНачислений,
	|";
	
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "	
		|	СУММА(ВЫБОР
		|			КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
		|				И ПрочиеВключаемыеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйИПНДоходПрочихВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|			КОГДА (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|					И (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL)
		|					И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
		|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаемыйИПНДоходПрямыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйИПНДоходНачисленийОтОбратного, 
		|	МАКСИМУМ(ОсновныеИДополнительныеНачисления.ОтОбратногоКомпенсируетИПН) КАК ЕстьОтОбратногоКомпенсирующиеИПН,";
	КонецЕсли;

	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
		РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|				И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходВключаемыхНачислений, 
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
		|				И ПрочиеВключаемыеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходПрочихВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|				И (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL)
		|				И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
		|				И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходПрямыхНачислений, 
		|	СУММА(ВЫБОР
		|		КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходНачисленийОтОбратного, 
		|	МАКСИМУМ(ОсновныеИДополнительныеНачисления.ОтОбратногоКомпенсируетОПВ) КАК ЕстьОтОбратногоКомпенсирующиеОПВ,";
	КонецЕсли;

	Если НеобходимыеДанные.ОтОбратногоУчитыватьВОСМС Тогда
		РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|				И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяВОСМС <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйВОСМСДоходВключаемыхНачислений, 
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
		|				И ПрочиеВключаемыеНачисления.ВидРасчета.ОблагаетсяВОСМС <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйВОСМСДоходПрочихВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|				И (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL)
		|				И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
		|				И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяВОСМС <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйВОСМСДоходПрямыхНачислений, 
		|	СУММА(ВЫБОР
		|		КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяВОСМС <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйВОСМСДоходНачисленийОтОбратного, 
		|	МАКСИМУМ(ОсновныеИДополнительныеНачисления.ОтОбратногоКомпенсируетВОСМС) КАК ЕстьОтОбратногоКомпенсирующиеВОСМС,";
	КонецЕсли;

	РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "
	|	СУММА(ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений) КАК СуммаПрямыхНачислений, 
	|	СУММА(ВЫБОР
	|			КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеИДополнительныеНачисления.ДополнительныеДанныеОтОбратного
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДополнительныеДанные
	|
	|ПОМЕСТИТЬ ВТ_ПрочиеНачисленияРасчетаОтОбратного
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|		ПО Основной.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Ссылка КАК Ссылка,
	|							ВидРасчета КАК ВидРасчета
	|						ИЗ
	|							ПланВидовРасчета." + ИмяПВР + ".ВключаемыеВРасчетОтОбратногоВидыНачислений) КАК ВключаемыеВРасчетОтОбратногоВидыНачислений
	|		ПО Основной.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст + " КАК ПрочиеВключаемыеНачисления
	|		ПО Основной.ФизЛицо = ПрочиеВключаемыеНачисления.ФизЛицо
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ПрочиеВключаемыеНачисления.ВидРасчета
	|
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Основной.НомерСтроки";	
	Запрос.Текст = РасчетОтОбратногоПрочиеНачисленияТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоПрочиеНачисленияТекст = "ВТ_ПрочиеНачисленияРасчетаОтОбратного";
	
	// общие для любого вида компенсируемых удержаний данные
	РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамПериодРегистрации, Организация = &парамОбособленноеПодразделение) КАК УчетнаяПолитикаНУ
	|	ПО ИСТИНА
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|ПО Основной.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетОтОбратногоПрочиеНачисленияТекст + " КАК РасчетОтОбратногоПрочиеНачисления
	|	ПО Основной.НомерСтроки = РасчетОтОбратногоПрочиеНачисления.НомерСтроки
	|
	|";

	СтруктураРезультат = Новый Структура();
	СтруктураРезультат.Вставить("РасчетОтОбратногоСоединенияТекст", РасчетОтОбратногоСоединенияТекст);
	СтруктураРезультат.Вставить("РасчетОтОбратногоПоляТекст", РасчетОтОбратногоПоляТекст);
	
	Возврат СтруктураРезультат;

КонецФункции // ПолучитьДанныеДляРасчетаОтОбратногоПосле2020()

// Функция формирует тексты запросов для получения данных, необходимых при расчете "от обратного" после 2022 года
// Возвращает структуру с текстами запроса для секций ВЫБРАТЬ И СОЕДИНЕНИЯ
//
Функция ПолучитьДанныеДляРасчетаОтОбратногоПосле2022(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет = Ложь,
									Сотрудники = НеОпределено,
									Налогоплательщик = Неопределено,
									КомментироватьРасчет = Ложь,
									Запрос,
									ВнешнееУсловие)

	РасчетОтОбратногоПоляТекст = ""; // строка с полями запроса
	РасчетОтОбратногоСоединенияТекст = ""; // строка с соединениями в запросе		

	ИмяИсточника = "РегистрРасчета." + ИмяРегистра;
	ИмяПВР = ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций", "ОсновныеНачисленияОрганизаций", "ДополнительныеНачисленияОрганизаций");
	
	// Поля, необходимые для расчета "от обратного" 
	РасчетОтОбратногоПоляТекст = "
	|ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьИПН,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьВОСМС, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьВОСМС,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|			ИЛИ ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) > 0
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоУчитыватьОПВ,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) > 0 
	|			ИЛИ ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьВОСМС, 0) > 0
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоУчитыватьВОСМС,
	|ВЫБОР 
	|	КОГДА ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьУдержания, 0) > 0 
	|		ТОГДА ИСТИНА 
	|	ИНАЧЕ ЛОЖЬ 
	|КОНЕЦ КАК ОтОбратногоКомпенсироватьУдержания,
	|Основной.ВидРасчета.ВидДохода КАК ВидДохода,
	|Основной.ВидРасчета.ОблагаетсяОПВ КАК ОблагаетсяОПВ,
	|Основной.ВидРасчета.ОблагаетсяИПН КАК ОблагаетсяИПН,
	|Основной.ВидРасчета.ОблагаетсяВОСМС КАК ОблагаетсяВОСМС,
	|Основной.ВидРасчета.УчетПрямыхНачислений КАК РасчетОтОбратногоУчитыватьПрямыеНачисления
	|";

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляИПН,
		|ВЫБОР
		|	КОГДА Основной.ВидРасчета.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
		|		ТОГДА ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.РазрешенныеНалоговыеВычетыДоходыРаботодателя, 0) 
		|	ИНАЧЕ ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.РазрешенныеНалоговыеВычетыПрочиеДоходы, 0)
		|КОНЕЦ КАК РазрешенныеНалоговыеВычеты,
	   	|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПредоставлятьВычетОПВ, Ложь) КАК ПредоставлятьВычетОПВ,
    	|ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПредоставлятьВычетВОСМС, Ложь) КАК ПредоставлятьВычетВОСМС,
	   	|ВЫБОР
		|	КОГДА Основной.ВидРасчета.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
		|		ТОГДА ЕСТЬNULL(РасчетОтОбратногоДанныеИПН.ПримененныеНалоговыеВычетыВТекущемМесяце, 0)
		|	ИНАЧЕ 0 
		|КОНЕЦ КАК ПримененныеНалоговыеВычетыВТекущемМесяце,
		|ВЫБОР 
		|	КОГДА ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК 
		|		ТОГДА ЕСТЬNULL(СведенияОСтавкахИПНПоНалогоплательщику.СтавкаНерезиденты, ЕСТЬNULL(СведенияОСтавкахИПН.СтавкаНерезиденты, 0))
		|	ИНАЧЕ ЕСТЬNULL(СведенияОСтавкахИПНПоНалогоплательщику.Ставка, ЕСТЬNULL(СведенияОСтавкахИПН.Ставка, 0))
		|КОНЕЦ / 100 КАК ПроцентИПН,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходПрямыхНачислений, 0) КАК ОблагаемыйИПНДоходПрямыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходВключаемыхНачислений, 0) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходПрочихВключаемыхНачислений, 0) КАК ОблагаемыйИПНДоходПрочихВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйИПНДоходНачисленийОтОбратного, 0) КАК ОблагаемыйИПНДоходНачисленийОтОбратного,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ЕстьОтОбратногоКомпенсирующиеИПН, 0) КАК ЕстьОтОбратногоКомпенсирующиеИПН
		|";
	КонецЕсли;
			
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоДанныеОПВ.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляОПВ,
		|&парамРазмерОграниченияПоДоходамОПВ КАК РазмерОграниченияПоДоходамОПВ,
		|ЕСТЬNULL(СведенияОСтавкахОПВ.Ставка, 0) / 100 КАК ПроцентОПВ,
		//|&парамСтавкаОПВ КАК ПроцентОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходПрямыхНачислений, 0) КАК ОблагаемыйОПВДоходПрямыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходВключаемыхНачислений, 0) КАК ОблагаемыйОПВДоходВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходПрочихВключаемыхНачислений, 0) КАК ОблагаемыйОПВДоходПрочихВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйОПВДоходНачисленийОтОбратного, 0) КАК ОблагаемыйОПВДоходНачисленийОтОбратного,	
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ЕстьОтОбратногоКомпенсирующиеОПВ, 0) КАК ЕстьОтОбратногоКомпенсирующиеОПВ
		|";
	КонецЕсли;
	//Запрос.УстановитьПараметр("парамСтавкаОПВ", ПроцедурыНалоговогоУчета.ПолучитьСтавкуНалога(Организация, Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы, ПериодРегистрации) / 100);
	
	Если НеобходимыеДанные.ОтОбратногоУчитыватьВОСМС Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоДанныеВОСМС.ПрочиеДоходы, 0) КАК ПрочиеДоходыДляВОСМС,
    	|ЕСТЬNULL(РасчетОтОбратногоДанныеВОСМС.ВОСМСДругогоРаботодателя, 0) КАК ВОСМСДругогоРаботодателя,
		|&парамРазмерОграниченияПоДоходамВОСМС КАК РазмерОграниченияПоДоходамВОСМС,
		|ЕСТЬNULL(СведенияОСтавкахВОСМСПоНалогоплательщику.Ставка, ЕСТЬNULL(СведенияОСтавкахВОСМС.Ставка, 0)) / 100 КАК ПроцентВОСМС,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйВОСМСДоходПрямыхНачислений, 0) КАК ОблагаемыйВОСМСДоходПрямыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйВОСМСДоходВключаемыхНачислений, 0) КАК ОблагаемыйВОСМСДоходВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйВОСМСДоходПрочихВключаемыхНачислений, 0) КАК ОблагаемыйВОСМСДоходПрочихВключаемыхНачислений,
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ОблагаемыйВОСМСДоходНачисленийОтОбратного, 0) КАК ОблагаемыйВОСМСДоходНачисленийОтОбратного,	
		|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ЕстьОтОбратногоКомпенсирующиеВОСМС, 0) КАК ЕстьОтОбратногоКомпенсирующиеВОСМС
		|";
	КонецЕсли;
	
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний, 0) КАК СуммаКомпенсируемыхУдержаний,
    	|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийТолькоИПН, 0) КАК ПроцентКомпенсируемыхУдержанийТолькоИПН,
    	|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийТолькоОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийТолькоОПВ,
    	|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийТолькоВОСМС, 0) КАК ПроцентКомпенсируемыхУдержанийТолькоВОСМС,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН, 0) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ, 0) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезВОСМС, 0) КАК ПроцентКомпенсируемыхУдержанийБезВОСМС,
    	|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийИПНиОПВиВОСМС, 0) КАК ПроцентКомпенсируемыхУдержанийИПНиОПВиВОСМС,
		|ЕСТЬNULL(РасчетОтОбратногоКомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний, 0) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|";
	КонецЕсли;
			
	РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаПрямыхНачислений, 0) КАК СуммаПрямыхНачислений, 
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаНачисленийОтОбратного, 0) КАК СуммаНачисленийОтОбратного,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ПрочиеДоходы, 0) КАК СуммаПрочиеДоходы,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.СуммаВключаемыхНачислений, 0) КАК СуммаВключаемыхНачислений,
	|ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ) КАК ФизЛицоНерезидент,
	|ЕСТЬNULL(РасчетОтОбратногоПрочиеНачисления.ДополнительныеДанные, 0) КАК РасчетОтОбратногоДополнительныеДанные
	|";

	// Далее идут тексты запросов по аналогии с функциями ПолучитьДанныеДляРасчетаИПН() и ПолучитьДанныеДляРасчетаОПВ().
	// Отличие по всем текстам в том, что в ПолучитьДанныеДляРасчетаИПН() используется &парамСписокФизЛиц,
	// а в расчете "от обратного" &парамРасчетОтОбратногоСписокФизЛиц.
	// В данном расчете предполагается, что расчет ИПН и ОПВ будет производится с установленным
	// в учетной политике по налоговому учету флажке ОтражениеПоПериодуРегистрации - все данные выбираются по ПериодРегистрации

	Запрос.УстановитьПараметр("парамРегистратор", 				Регистратор);
	Запрос.УстановитьПараметр("парамПериодРегистрации", 		НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамКонецПериодаРегистрации", 	КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамНачалоГода", 			    НачалоГода(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОбособленноеПодразделение", ОбособленноеПодразделение);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", 	    Организация);

	Если Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить() Тогда
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	Налогоплательщик);
	Иначе
		Запрос.УстановитьПараметр("парамНалогоплательщик", 	ОбособленноеПодразделение);
	КонецЕсли;

	// категория начисления
	Запрос.УстановитьПараметр("парамКатегорияНачисления", 		КатегорияРасчета);
	Запрос.УстановитьПараметр("парамПорядокКатегории", 			Перечисления.КатегорииРасчетов.Индекс(КатегорияРасчета));

	// Периоды
	// Таблица список физлиц, по которым необходимо выполнить расчет налога или взносов
	// Поля:
	//		Физлицо
	СписокФизЛицТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Основной.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТ_СписокФизЛиц
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета.ОтОбратного
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|";
			
	Запрос.Текст = СписокФизЛицТекст;
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";

	// Составим текст запроса для вычисления всех месяцев периода
	ДатыПериодовГодаТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК Период
	|ПОМЕСТИТЬ ВТ_ДатыПериодовГодаРасчетаОтОбратного
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) И &парамПериодРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период";
	Запрос.Текст = ДатыПериодовГодаТекст;
	Запрос.Выполнить();
	ДатыПериодовГодаТекст = "ВТ_ДатыПериодовГодаРасчетаОтОбратного";

	// ФизлицаНеРезиденты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц нерезидентов
	ФизлицаНеРезиденты = "ВЫБРАТЬ РАЗЛИЧНЫЕ
     |	ГражданствоФизЛиц.ФизЛицо КАК ФизЛицо,
     |	ИСТИНА КАК НеЯвляетсяНалоговымРезидентомРК
     |ПОМЕСТИТЬ ВТФизлицаНеРезиденты
     |ИЗ
     |	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
     |			&парамКонецПериодаРегистрации,
     |			ФизЛицо В
     |				(ВЫБРАТЬ
     |					СписокФизЛиц.ФизЛицо
     |				ИЗ
     |					ВТ_СписокФизЛиц КАК СписокФизЛиц)) КАК ГражданствоФизЛиц
     |ГДЕ
     |	ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК
     |
     |ИНДЕКСИРОВАТЬ ПО
     |	ГражданствоФизЛиц.ФизЛицо";
	 
	Запрос.Текст = ФизлицаНеРезиденты;
	Запрос.Выполнить();
	ФизлицаНеРезидентыТекст = "ВТФизлицаНеРезиденты";

	РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаНеРезидентыТекст + " КАК ГражданствоФизЛиц
		|	ПО Основной.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
		|";

	// Списки видов расчета, категория расчета которых меньше текущей  (т.е. уже посчитанные)
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПВР.Ссылка
	|ИЗ
	|	ПланВидовРасчета." + ИмяПВР + " КАК ПВР
	|ГДЕ
	|	ПВР.КатегорияРасчета.Порядок < &парамПорядокКатегории
	|";

	Запрос.УстановитьПараметр("парамУжеРассчитанныеВидыРасчета", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	// Определим компенсируемые удержания для каждого вида расчета от обратного
	КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст = " 
	|ВЫБРАТЬ
	|	КомпенсируемыеУдержанияОсновные.Ссылка КАК ВидРасчета,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияОсновные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьИПН,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияОсновные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияОсновные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьВОСМС,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ КомпенсируемыеУдержанияОсновные.ВидРасчета В (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьУдержания
	|ПОМЕСТИТЬ ВТ_КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеУдержанияОсновные
	|ГДЕ
	|	КомпенсируемыеУдержанияОсновные.Ссылка.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	КомпенсируемыеУдержанияОсновные.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КомпенсируемыеУдержанияДополнительные.Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияДополнительные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьИПН,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияДополнительные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьОПВ,
	|	СУММА(ВЫБОР
	|			КОГДА КомпенсируемыеУдержанияДополнительные.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьВОСМС,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ КомпенсируемыеУдержанияДополнительные.ВидРасчета В (ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы), ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КомпенсироватьУдержания
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеУдержанияДополнительные
	|ГДЕ
	|	КомпенсируемыеУдержанияДополнительные.Ссылка.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	КомпенсируемыеУдержанияДополнительные.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета";
	
	Запрос.Текст = КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст;
	Запрос.Выполнить();
	КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст = "ВТ_КомпенсируемыеРасчетомОтОбратногоВидыУдержаний";
	Запрос.Текст = "ВЫБРАТЬ * ИЗ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст;
	
	// ОсновныеИДополнительныеНачисления
	// Поля:
	//		ФизЛицо
	//		ВидРасчета
	//		Результат
	//	Описание:
	// Выбирает начисления за период регистрации по физлицам, для которых выполняется расчет "от обратного"
	ОсновныеИДополнительныеНачисленияТекст = "
	|ВЫБРАТЬ
	|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ОсновныеНачисления.Результат) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.Сторно 
	|				И ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеНачисления.ДополнительныеДанные
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ДополнительныеДанныеОтОбратного,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				И НЕ ОсновныеНачисления.Сторно
	|				ТОГДА ОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		 КОНЕЦ) КАК СуммаНачисленийОтОбратного,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) КАК ОтОбратногоКомпенсируетИПН,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) КАК ОтОбратногоКомпенсируетОПВ,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьВОСМС, 0) КАК ОтОбратногоКомпенсируетВОСМС,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеНачисления.Результат
	|			ИНАЧЕ 0
	|		 КОНЕЦ) КАК СуммаПрямыхНачислений,
	|	0 КАК ПрочиеДоходы
	|
	|ПОМЕСТИТЬ ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|		ПО ОсновныеНачисления.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ГДЕ
	|	ОсновныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И (ОсновныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ОсновныеНачисления.Регистратор = &парамРегистратор
	|				И ОсновныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))", "") + "
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисления.ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0),
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0),
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьВОСМС, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета,
	|	СУММА(ДополнительныеНачисления.Результат) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.Сторно 
	|				И ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ДополнительныеНачисления.ДополнительныеДанные
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК ДополнительныеДанныеОтОбратного,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				И НЕ ДополнительныеНачисления.Сторно
	|				ТОГДА ДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаНачисленийОтОбратного,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0) КАК ОтОбратногоКомпенсируетИПН,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0) КАК ОтОбратногоКомпенсируетОПВ,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьВОСМС, 0) КАК ОтОбратногоКомпенсируетВОСМС,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		  КОНЕЦ) КАК СуммаПрямыхНачислений,
	|	0 КАК ПрочиеДоходы
	|ИЗ
	|	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ДополнительныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|		ПО ДополнительныеНачисления.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ГДЕ
	|	ДополнительныеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ДополнительныеНачисления.ПериодРегистрации МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)"
	+ ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций","
	|	И ДополнительныеНачисления.Регистратор <> &парамРегистратор","
	|
	|	// если доп. начисления
	|	И (ДополнительныеНачисления.Регистратор <> &парамРегистратор
	|		ИЛИ (ДополнительныеНачисления.Регистратор = &парамРегистратор
	|				И ДополнительныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))") + "
	|СГРУППИРОВАТЬ ПО
	|	ДополнительныеНачисления.ФизЛицо,
	|	ДополнительныеНачисления.ВидРасчета,
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьИПН, 0),
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьОПВ, 0),
	|	ЕСТЬNULL(КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.КомпенсироватьВОСМС, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	0 КАК Результат,
	|	0 КАК ДополнительныеДанныеОтОбратного,
	|	0 КАК СуммаНачисленийОтОбратного,
	|	0 КАК ОтОбратногоКомпенсируетИПН,
	|	0 КАК ОтОбратногоКомпенсируетОПВ,
	|	0 КАК ОтОбратногоКомпенсируетВОСМС,
	|	0 КАК СуммаПрямыхНачислений,
	|	СУММА(ОсновныеНачисления.СуммаДохода) КАК ПрочиеДоходы
	|
	|ИЗ
	|	Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения.СведенияОДоходах КАК ОсновныеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
	|		ПО ОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ОсновныеНачисления.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ОсновныеНачисления.Ссылка.Организация
	|		ИНАЧЕ ОсновныеНачисления.Ссылка.Организация.ГоловнаяОрганизация
	|	КОНЕЦ = &парамГоловнаяОрганизация
	|	И ОсновныеНачисления.Ссылка.ПериодРегистрации = &парамПериодРегистрации
	|	И ВЫБОР
	|		КОГДА ОсновныеНачисления.Ссылка <> &парамРегистратор
	|			ТОГДА ОсновныеНачисления.Ссылка.Проведен
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И (ОсновныеНачисления.Ссылка <> &парамРегистратор
	|		ИЛИ (ОсновныеНачисления.Ссылка = &парамРегистратор
	|				И ОсновныеНачисления.ВидРасчета В (&парамУжеРассчитанныеВидыРасчета)))
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисления.ФизЛицо,
	|	ОсновныеНачисления.ВидРасчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидРасчета
	|";
	Запрос.Текст = ОсновныеИДополнительныеНачисленияТекст;
	Запрос.Выполнить();
	ОсновныеИДополнительныеНачисленияТекст = "ВТ_ОсновныеИДополнительныеНачисленияРасчетаОтОбратного";

	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
							
		// РасчетныеПоказатели
		//	Поля:
		//		Период
		//		РазмерМРП
		//		РазмерМЗП
		//
		//	Описание:
		// Выбирает размер месячного расчетного показателя по периодам
		РасчетныеПоказателиТекст = "
		|ВЫБРАТЬ
		|	МАКСИМУМ(РасчетныеПоказатели.РазмерМРП) КАК РазмерМРП,
		|	МАКСИМУМ(РасчетныеПоказатели.РазмерМЗП) КАК РазмерМЗП,
		|	МАКСИМУМ(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы),
		|	МАКСИМУМ(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы)
		|
		|ПОМЕСТИТЬ ВТ_РасчетныеПоказателиРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		0 КАК РазмерМРП,
		|		РасчетныеПоказателиСрезПоследних.РазмерМЗПДляЦелейНалогообложения КАК РазмерМЗП,
		|		0 КАК РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
		|		0 КАК РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
		|	ИЗ
		|		РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации, ) КАК РасчетныеПоказателиСрезПоследних
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		РасчетныеПоказателиСрезПоследних.РазмерМРПДляЦелейНалогообложения,
		|		0,
		|		РасчетныеПоказателиСрезПоследних.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
		|		РасчетныеПоказателиСрезПоследних.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы
		|	ИЗ
		|		РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамНачалоГода, ) КАК РасчетныеПоказателиСрезПоследних) КАК РасчетныеПоказатели
		|";
		Запрос.Текст = РасчетныеПоказателиТекст;
		Запрос.Выполнить();
		РасчетныеПоказателиТекст = "ВТ_РасчетныеПоказателиРасчетаОтОбратного";
		
		
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		СуммаДоходаОборот
		//		СуммаВычетаОборот
		//
		//	Описание:
		// Выбирает общую сумму доходов и облагаемые налогом доходы за весь год по физлицам из СписокФизлиц
			
		// Здесь не учитываем доходы, записанные текущим регистратором, т.к. при проведении по ИПНСведенияОДоходах
		// они были еще в процессе расчета и их прибавим позже. А также отдельно выделяем доходы, начисленные в данной 
		// организации за текущий месяц, которые прошли через начисления, прочие доходы не выделяем.
		// Сведения о жилищных и страховых вычетах текущего месяца всегда берем из регистра сведений, т.к. в регистре накопления они 
		// появляются только при прямом расчете налога и поэтому могут отсутствовать, если сейчас первый раз рассчитываются начисления.
		// Т.к. расчет "от обратного" поддерживается только при учетной политикой с ОтражениемПоПериодуРегистрации,
		// то в регистрах Период, ПериодРегистрации и МесяцНалоговогоПериода всегда совпадают, поэтому 
		// устанавливаем отборы по Периоду, т.к. по нему система автоматически создает индекс.
		ДоходыИПНТекст = 
		"ВЫБРАТЬ
		|	ИПНОбороты.Физлицо КАК ФизЛицо,
		|	СУММА(ПрочиеДоходы) КАК ПрочиеДоходы
		|
		|ПОМЕСТИТЬ ВТ_ДоходыИПНРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		ИПНСведенияОДоходах.ФизЛицо КАК Физлицо,
		|		СУММА(ВЫБОР
		|				КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ТОГДА ИПНСведенияОДоходах.СуммаДохода - ИПНСведенияОДоходах.СуммаВычета
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ПрочиеДоходы,
		|		ВЫБОР
		|			КОГДА ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ИЛИ ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РасчетНалоговПриПоступленииАктивовУслуг
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ КАК НачисленоВТекущейОрганизации
		|	ИЗ
		|		РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО ИПНСведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|	ГДЕ
		|		ИПНСведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|		И ИПНСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|		И ИПНСведенияОДоходах.Регистратор <> &парамРегистратор
		|		И НЕ(ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ИПНСведенияОДоходах.ФизЛицо,
		|		ИПНСведенияОДоходах.СпособНалогообложения,
		|		ИПНСведенияОДоходах.Регистратор) КАК ИПНОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПНОбороты.Физлицо";
		Запрос.Текст = ДоходыИПНТекст;
		Запрос.Выполнить();
		ДоходыИПНТекст = "ВТ_ДоходыИПНРасчетаОтОбратного";

			
		// ПрименениеВычетовВОрганизации
		//	Поля:
		//		Физлицо,
		//		Период
		//
		// Описание:
		//	Выбирает список физлиц + периоды в которые применяются налоговые вычеты по 
		//	заданной организации
		ПрименениеВычетовВОрганизацииТекст = 
		"ВЫБРАТЬ
		|	ИПНПрименениеВычетов.Физлицо КАК Физлицо
		|
		|ПОМЕСТИТЬ ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ИПНПрименениеВычетов.СрезПоследних(
		|					&парамПериодРегистрации,
		|					ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНПрименениеВычетов
		|
		|ГДЕ
		|	ИПНПрименениеВычетов.Налогоплательщик = &парамНалогоплательщик
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		Запрос.Текст = ПрименениеВычетовВОрганизацииТекст;
		Запрос.Выполнить();
		ПрименениеВычетовВОрганизацииТекст = "ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного";

		// Применение стандартного вычета
		ПрименениеСтандартногоВычета = 
			"ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо КАК ФизЛицо,
			|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный1МЗП) КАК ВидВычетаИПН,
			|	ВЫБОР
			|		КОГДА НалоговыеВычетыФизлиц.Физлицо ЕСТЬ NULL 
			|				ИЛИ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, ЛОЖЬ)
			|				ИЛИ НЕ ЕСТЬNULL(НалоговыеВычетыФизлиц.ПредоставлятьЛичныйВычет, ЛОЖЬ)
			|			ТОГДА 0
			|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерМРП * 14, 0)
			|	КОНЕЦ КАК РазрешенныйВычет
			|ПОМЕСТИТЬ ВТ_СтандартныйВычет1МЗП
			|ИЗ
			|	" + СписокФизЛицТекст + "  КАК СписокФизЛиц
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИПННалоговыеВычетыФизлиц.СрезПоследних(
			|				&парамКонецПериодаРегистрации,
			|				ФизЛицо В
			|					(ВЫБРАТЬ
			|						СписокФизЛиц.ФизЛицо
			|					ИЗ
			|						" + СписокФизЛицТекст + " КАК СписокФизЛиц)) КАК НалоговыеВычетыФизлиц
			|		ПО СписокФизЛиц.Физлицо = НалоговыеВычетыФизлиц.Физлицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаНеРезидентыТекст + " КАК ГражданствоФизЛиц
			|		ПО СписокФизЛиц.Физлицо = ГражданствоФизЛиц.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|		ПО (ИСТИНА)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	СписокФизЛиц.Физлицо,
			|	ВидВычетаИПН";
			
		Запрос.Текст = ПрименениеСтандартногоВычета;
		Запрос.Выполнить();
		ПрименениеСтандартногоВычета = "ВТ_СтандартныйВычет1МЗП";
		
		// ПрименяемыеЛьготы
		//	Поля:
		//		Физлицо
		//		Период
		//		ПрименяетсяЛьготаУчастникаВОВ
		//		ПрименяетсяЛьготаПоИнвалидности
		//		ЛьготаПоДоходу
		//
		//	Описание:
		//	Выбирает по всем периодам года льготы на которые имеет право физлицо
		ПрименяемыеЛьготыТекст = 
			"ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо КАК Физлицо,
			|	ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности,
			|	ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности,
			|	ВЫБОР 
			|		КОГДА (ЛьготыФизлицПоИнвалидности.Физлицо) ЕСТЬ NULL 
			|			ТОГДА 0 
			|		ИНАЧЕ ВЫБОР 
			|				КОГДА ЛьготыФизлицПоИнвалидности.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
			|						И ЛьготыФизлицПоИнвалидности.ГруппаИнвалидности = ""III"" 
			|					ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы, 0)
			|				ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0)
			|			  КОНЕЦ 
			|	КОНЕЦ КАК ЛьготаПоИнвалидности,
			|	ВЫБОР 
			|		КОГДА (ЛьготыФизлицУчастниковВОВ.Физлицо) ЕСТЬ NULL 
			|			ТОГДА 0 
			|		ИНАЧЕ ЕСТЬNULL(РасчетныеПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы, 0) 
			|	КОНЕЦ КАК ЛьготаУчастникаВОВ
			|ПОМЕСТИТЬ ВТ_ИПНЛьготыФизлиц
			|		
			|ИЗ
			|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
			|						&парамКонецПериодаРегистрации,
			|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ЛьготыФизлицПоИнвалидности
			|		ПО ЛьготыФизлицПоИнвалидности.Физлицо = СписокФизЛиц.Физлицо
			|			И (ЛьготыФизЛицПоИнвалидности.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
			|				ИЛИ КОНЕЦПЕРИОДА(ЛьготыФизЛицПоИнвалидности.СрокДействияСправки, ГОД) >= &парамКонецПериодаРегистрации)
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(
			|						&парамКонецПериодаРегистрации,
			|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ЛьготыФизлицУчастниковВОВ
			|		ПО ЛьготыФизлицУчастниковВОВ.Физлицо = СписокФизЛиц.Физлицо
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|		ПО ИСТИНА
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИПНЛьготыФизлиц.Физлицо,
			|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды) КАК ВидВычетаИПН,
			|	
			|	ИПНЛьготыФизлиц.ОтношениеКИнвалидности,
			|	ИПНЛьготыФизлиц.ГруппаИнвалидности,
			|
			|	ВЫБОР
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > 0 
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ПрименяетсяЛьготаУчастникаВОВ,
			|
			|	ВЫБОР
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаПоИнвалидности > 0 
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ПрименяетсяЛьготаПоИнвалидности,
			|
			|	ВЫБОР 
			|		КОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ > ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
			|			ТОГДА ИПНЛьготыФизлиц.ЛьготаУчастникаВОВ 
			|		ИНАЧЕ ИПНЛьготыФизлиц.ЛьготаПоИнвалидности 
			|	КОНЕЦ КАК ЛьготаПоДоходу
			|
			|ПОМЕСТИТЬ ВТ_ПрименяемыеЛьготыРасчетаОтОбратного
			|ИЗ
			|	ВТ_ИПНЛьготыФизлиц КАК ИПНЛьготыФизлиц
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаНеРезидентыТекст + " КАК ГражданствоФизЛиц
			|		ПО ИПНЛьготыФизлиц.Физлицо = ГражданствоФизЛиц.ФизЛицо
			|ГДЕ
			|   НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, Ложь)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ИПНЛьготыФизлиц.Физлицо
			|";
		Запрос.Текст = ПрименяемыеЛьготыТекст;
		Запрос.Выполнить();
		ПрименяемыеЛьготыТекст = "ВТ_ПрименяемыеЛьготыРасчетаОтОбратного";
		
		// Прочие вычеты по периодическим платежам
		ПрочиеВычетыТекст = 
			"ВЫБРАТЬ
			|	ИПНПлановыеВычеты.ФизЛицо,
			|	ИПНПлановыеВычеты.ВычетИПН КАК ВидВычетаИПН,
			|	СУММА(ИПНПлановыеВычеты.СуммаВычета) КАК РазрешенныйВычет
			|ПОМЕСТИТЬ ВТ_ПрочиеВычеты
			|ИЗ
			|	РегистрСведений.ИПНПлановыеНалоговыеВычетыФизЛиц.СрезПоследних(
			|			&парамКонецПериодаРегистрации,
			|			Налогоплательщик = &парамНалогоплательщик
			|			И МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
			|			И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ИПНПлановыеВычеты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК  СписокФизЛиц
			|			ПО ИПНПлановыеВычеты.ФизЛицо = СписокФизЛиц.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ФизлицаНеРезидентыТекст + " КАК ГражданствоФизЛиц
			|		ПО ИПНПлановыеВычеты.Физлицо = ГражданствоФизЛиц.ФизЛицо
			|ГДЕ
			|   НЕ ЕСТЬNULL(ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРК, Ложь)
			|
			|СГРУППИРОВАТЬ ПО
			|	ИПНПлановыеВычеты.ФизЛицо,
			|	ИПНПлановыеВычеты.ВычетИПН
			|";
		Запрос.Текст = ПрочиеВычетыТекст;
		Запрос.Выполнить();
		ПрочиеВычетыТекст = "ВТ_ПрочиеВычеты";

		
		//Итоговая таблица видов вычетов
		РазмерыВычетовыИПН = 
			"ВЫБРАТЬ
			|	СтандартныйВычет1МЗП.Физлицо КАК ФизическоеЛицо,
			|	СтандартныйВычет1МЗП.ВидВычетаИПН КАК ВидВычетаИПН,
			|	СтандартныйВычет1МЗП.РазрешенныйВычет КАК РазмерВычета,
			|	СтандартныйВычет1МЗП.РазрешенныйВычет КАК СуммовойПределВычета,
			|	2 КАК Приоритет
			|ПОМЕСТИТЬ ВТ_РазмерыВычетовИПН
			|ИЗ
			|	ВТ_СтандартныйВычет1МЗП КАК СтандартныйВычет1МЗП
			|ГДЕ
			|	СтандартныйВычет1МЗП.РазрешенныйВычет <> 0
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПрименяемыеЛьготы.Физлицо,
			|	ПрименяемыеЛьготы.ВидВычетаИПН,
			|	ПрименяемыеЛьготы.ЛьготаПоДоходу,
			|	ПрименяемыеЛьготы.ЛьготаПоДоходу,
			|	3
			|ИЗ
			|	ВТ_ПрименяемыеЛьготыРасчетаОтОбратного КАК ПрименяемыеЛьготы
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПрочиеВычеты.Физлицо,
			|	ПрочиеВычеты.ВидВычетаИПН,
			|	ПрочиеВычеты.РазрешенныйВычет,
			|	ВЫБОР 
			|		КОГДА ПрочиеВычеты.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
			|			ТОГДА ЕСТЬNULL(РасчетныеПоказатели.РазмерМЗП, 0) * 8
			|		ИНАЧЕ ПрочиеВычеты.РазрешенныйВычет
			|	КОНЕЦ,
			|	4
			|ИЗ
			|	ВТ_ПрочиеВычеты КАК ПрочиеВычеты
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетныеПоказателиТекст + " КАК РасчетныеПоказатели
			|			ПО ИСТИНА
			|ИНДЕКСИРОВАТЬ ПО
			|	ВидВычетаИПН,
			|	ФизическоеЛицо,
			|	Приоритет";
		
		Запрос.Текст = РазмерыВычетовыИПН;
		Запрос.Выполнить();
	    РазмерыВычетовыИПН = "ВТ_РазмерыВычетовИПН";
		
		// Соберем накопленные сведения по исчисленным вычетам
		НакопленныеДанныеПоВычетамТекст = 
			"ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо,
			|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета КАК ВидВычетаИПН,
			|	СУММА(ВЫБОР
			|			КОГДА НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
			|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.РазрешенныйВычетОборот
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК РазрешенныйВычетСНачалаГода,
			|	СУММА(ВЫБОР
			|			КОГДА НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД)
			|				ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ПримененныйВычетОборот
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК ПримененныйВычетСНачалаГода
			|ПОМЕСТИТЬ ВТ_НакопленныеДанные
			|ИЗ
			|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОбИсчисленииВычетовИПН.Обороты(&парамНачалоГода, &парамПериодРегистрации, Месяц, ) КАК СведенияОбИсчисленииВычетовИПНОбороты
			|		ПО СписокФизЛиц.Физлицо = (ВЫБОР
			|										КОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо ССЫЛКА Справочник.Контрагенты
			|											ТОГДА СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо.ФизЛицо
			|										ИНАЧЕ СведенияОбИсчисленииВычетовИПНОбороты.ФизическоеЛицо
			|									КОНЕЦ)
			|			И &парамПериодРегистрации > СведенияОбИсчисленииВычетовИПНОбороты.Период
			|			И (НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияОбИсчисленииВычетовИПНОбороты.Период, ГОД))
			|
			|СГРУППИРОВАТЬ ПО
			|	СписокФизЛиц.Физлицо,
			|	СведенияОбИсчисленииВычетовИПНОбороты.ВидВычета
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СписокФизЛиц.Физлицо,
			|	ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды),
			|	0,
			|	ВЫБОР
			|		КОГДА НАЧАЛОПЕРИОДА(&парамПериодРегистрации, ГОД) = НАЧАЛОПЕРИОДА(СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода, ГОД)
			|			ТОГДА СведенияПредыдущегоМестаРаботыФизЛиц.ПримененнаяЛьгота
			|		ИНАЧЕ 0
			|	КОНЕЦ
			|ИЗ
			|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
			|		ПО &парамПериодРегистрации >= СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода
			|			И СписокФизЛиц.Физлицо = СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_НакопленныеДанныеПоВычетам.Физлицо,
			|	ВТ_НакопленныеДанныеПоВычетам.ВидВычетаИПН,
			|	СУММА(ВТ_НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода) КАК РазрешенныйВычетСНачалаГода,
			|	СУММА(ВТ_НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода) КАК ПримененныйВычетСНачалаГода
			|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетам
			|ИЗ
			|	ВТ_НакопленныеДанные КАК ВТ_НакопленныеДанныеПоВычетам
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_НакопленныеДанныеПоВычетам.Физлицо,
			|	ВТ_НакопленныеДанныеПоВычетам.ВидВычетаИПН";
			
		Запрос.Текст = НакопленныеДанныеПоВычетамТекст;
		Запрос.Выполнить();
		НакопленныеДанныеПоВычетамТекст = "ВТ_НакопленныеДанныеПоВычетам";

		НакопленныеДанныеПоВычетамТекущегоПериодаТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисленияОрганизаций.Ссылка КАК ВидРасчета
		|ПОМЕСТИТЬ ВТ_НачисленияОтОбратного
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		|ГДЕ
		|	ОсновныеНачисленияОрганизаций.ОтОбратного
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисленияОрганизаций.Ссылка
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций
		|ГДЕ
		|	ДополнительныеНачисленияОрганизаций.ОтОбратного
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеПримененныхВычетов.Физлицо,
		|	СУММА(ДанныеПримененныхВычетов.ПримененныеНалоговыеВычетыВТекущемМесяце) КАК ПримененныеНалоговыеВычетыВТекущемМесяце
		|ПОМЕСТИТЬ ВТ_НакопленныеДанныеПоВычетамТекущегоПериода
		|ИЗ
		|	(ВЫБРАТЬ
		|		СписокФизЛиц.Физлицо КАК Физлицо,
		|		СУММА(ОсновныеНачисленияРаботниковОрганизаций.СуммаВычетовДоходовОтОбратного) КАК ПримененныеНалоговыеВычетыВТекущемМесяце
		|	ИЗ
		|			" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		|			ПО СписокФизЛиц.Физлицо = ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо
		|				И (&парамГоловнаяОрганизация = ОсновныеНачисленияРаботниковОрганизаций.Организация)
		|				И (&парамПериодРегистрации = НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ))
		// отбор по регистратору не делаем, тк в одном документе может быть несколько начислений (И (&парамРегистратор <> ОсновныеНачисленияРаботниковОрганизаций.Регистратор))
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НачисленияОтОбратного КАК НачисленияОтОбратного
		|			ПО (НачисленияОтОбратного.ВидРасчета = ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СписокФизЛиц.Физлицо
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СписокФизЛиц.Физлицо,
		|		СУММА(ДополнительныеНачисленияРаботниковОрганизаций.СуммаВычетовДоходовОтОбратного)
		|	ИЗ
		|			" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
		|			ПО СписокФизЛиц.Физлицо = ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо
		|				И (&парамГоловнаяОрганизация = ДополнительныеНачисленияРаботниковОрганизаций.Организация)
		|				И (&парамПериодРегистрации = НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ))
		// отбор по регистратору не делаем, тк в одном документе может быть несколько начислений (И (&парамРегистратор <> ДополнительныеНачисленияРаботниковОрганизаций.Регистратор))
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НачисленияОтОбратного КАК НачисленияОтОбратного
		|			ПО (НачисленияОтОбратного.ВидРасчета = ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СписокФизЛиц.Физлицо) КАК ДанныеПримененныхВычетов
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеПримененныхВычетов.Физлицо";

		Запрос.Текст = НакопленныеДанныеПоВычетамТекущегоПериодаТекст;
		Запрос.Выполнить();
		НакопленныеДанныеПоВычетамТекущегоПериодаТекст = "ВТ_НакопленныеДанныеПоВычетамТекущегоПериода";
		
		// Общий итог применяемых вычетов
		ПрименяемыеВычетыТекст = 
			"ВЫБРАТЬ
			|	РазмерыВычетов.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РазмерыВычетов.ВидВычетаИПН КАК ВидВычетаИПН,
			|	РазмерыВычетов.Приоритет КАК Приоритет,
			|	РазмерыВычетов.РазмерВычета КАК РазмерВычета,
			|	РазмерыВычетов.СуммовойПределВычета КАК СуммовойПределВычета,
			|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) КАК РазрешенныйВычетСНачалаГода,
			|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода, 0) КАК ПримененныйВычетСНачалаГода,
			|	ВЫБОР
			|		КОГДА РазмерыВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
			|			ТОГДА РазмерыВычетов.СуммовойПределВычета - ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0)
			|		КОГДА РазмерыВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.НаОплатуМедицинскихУслуг)
			|				И РазмерыВычетов.СуммовойПределВычета - ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) < РазмерыВычетов.РазмерВычета
			|			ТОГДА РазмерыВычетов.СуммовойПределВычета - ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0)
			|		ИНАЧЕ РазмерыВычетов.РазмерВычета
			|	КОНЕЦ КАК РазрешенныйВычетВТекущемПериоде,
			|	ЕСТЬNULL(НакопленныеДанныеПоВычетам.РазрешенныйВычетСНачалаГода, 0) - ЕСТЬNULL(НакопленныеДанныеПоВычетам.ПримененныйВычетСНачалаГода, 0) КАК ОстатокВычетаЗаПрошлыеМесяцы
			|ПОМЕСТИТЬ ВТ_ДанныеДляРасчетаВычетов
			|ИЗ
			|	ВТ_РазмерыВычетовИПН КАК РазмерыВычетов
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НакопленныеДанныеПоВычетам КАК НакопленныеДанныеПоВычетам
			|		ПО РазмерыВычетов.ФизическоеЛицо = НакопленныеДанныеПоВычетам.Физлицо
			|			И РазмерыВычетов.ВидВычетаИПН = НакопленныеДанныеПоВычетам.ВидВычетаИПН
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СУММА(ВТ_ДанныеДляРасчетаВычетов.РазрешенныйВычетВТекущемПериоде + ВТ_ДанныеДляРасчетаВычетов.ОстатокВычетаЗаПрошлыеМесяцы) КАК РазрешенныеНалоговыеВычетыДоходыРаботодателя,
			|	СУММА(ВЫБОР
			|			КОГДА ВТ_ДанныеДляРасчетаВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.Стандартный75МЗПИнвалиды)
			|				ТОГДА ВТ_ДанныеДляРасчетаВычетов.РазрешенныйВычетВТекущемПериоде + ВТ_ДанныеДляРасчетаВычетов.ОстатокВычетаЗаПрошлыеМесяцы
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК РазрешенныеНалоговыеВычетыПрочиеДоходы,
			|	МАКСИМУМ(ЕСТЬNULL(ПрименениеВычетовВОрганизацииТекущегоПериода.ПримененныеНалоговыеВычетыВТекущемМесяце, 0)) КАК ПримененныеНалоговыеВычетыВТекущемМесяце,
			|	МАКСИМУМ(ВЫБОР
			|			КОГДА ВТ_ДанныеДляРасчетаВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетОПВ)
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ ЛОЖЬ
			|		КОНЕЦ) КАК ПредоставлятьВычетОПВ,
			|	МАКСИМУМ(ВЫБОР
			|			КОГДА ВТ_ДанныеДляРасчетаВычетов.ВидВычетаИПН = ЗНАЧЕНИЕ(Справочник.ВычетыИПН.ВычетВОСМС)
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ ЛОЖЬ
			|		КОНЕЦ) КАК ПредоставлятьВычетВОСМС
			|ПОМЕСТИТЬ ВТ_ПрименяемыеВычеты
			|ИЗ
			|	ВТ_ДанныеДляРасчетаВычетов КАК ВТ_ДанныеДляРасчетаВычетов
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПрименениеВычетовВОрганизацииРасчетаОтОбратного КАК ПрименениеВычетовВОрганизации
			|		ПО ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо = ПрименениеВычетовВОрганизации.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НакопленныеДанныеПоВычетамТекущегоПериода КАК ПрименениеВычетовВОрганизацииТекущегоПериода
			|		ПО ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо = ПрименениеВычетовВОрганизацииТекущегоПериода.ФизЛицо
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_ДанныеДляРасчетаВычетов.ФизическоеЛицо";
			
		Запрос.Текст = ПрименяемыеВычетыТекст;
		Запрос.Выполнить();
		ПрименяемыеВычетыТекст = "ВТ_ПрименяемыеВычеты";

		БазаДляИсчисленияИПНТекст = "
		|ВЫБРАТЬ
		|	СписокФизЛиц.ФизЛицо,
		|	ЕСТЬNULL(Доходы.ПрочиеДоходы, 0) КАК ПрочиеДоходы,
	    |	ЕСТЬNULL(ПрименяемыеВычеты.РазрешенныеНалоговыеВычетыПрочиеДоходы, 0) КАК РазрешенныеНалоговыеВычетыПрочиеДоходы,
	    |	ЕСТЬNULL(ПрименяемыеВычеты.РазрешенныеНалоговыеВычетыДоходыРаботодателя, 0) КАК РазрешенныеНалоговыеВычетыДоходыРаботодателя,
	    |	ЕСТЬNULL(ПрименяемыеВычеты.ПримененныеНалоговыеВычетыВТекущемМесяце, 0) КАК ПримененныеНалоговыеВычетыВТекущемМесяце,
		|	ЕСТЬNULL(ПрименяемыеВычеты.ПредоставлятьВычетОПВ, Ложь) КАК ПредоставлятьВычетОПВ,
    	|	ЕСТЬNULL(ПрименяемыеВычеты.ПредоставлятьВычетВОСМС, Ложь) КАК ПредоставлятьВычетВОСМС
		|
		|ПОМЕСТИТЬ ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного
		|ИЗ
		|	" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыИПНТекст + " КАК Доходы
		|		ПО СписокФизЛиц.ФизЛицо = Доходы.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПрименяемыеВычетыТекст + " КАК ПрименяемыеВычеты
		|		ПО СписокФизЛиц.ФизЛицо = ПрименяемыеВычеты.ФизическоеЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СписокФизЛиц.ФизЛицо
		|";
		
		Запрос.Текст = БазаДляИсчисленияИПНТекст;
		Запрос.Выполнить();
		БазаДляИсчисленияИПНТекст = "ВТ_БазаДляИсчисленияИПНРасчетаОтОбратного";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + БазаДляИсчисленияИПНТекст;

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + БазаДляИсчисленияИПНТекст + " КАК РасчетОтОбратногоДанныеИПН
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеИПН.ФизЛицо
		|	   И Основной.ВидРасчета.ОтОбратного
		|";

		СведенияОСтавкахИПНПоНалогоплательщикуТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахИПНПоНалогоплательщику.ВидДохода,
			|	СведенияОСтавкахИПНПоНалогоплательщику.Ставка,
			|	СведенияОСтавкахИПНПоНалогоплательщику.СтавкаНерезиденты
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахИПНПоНалогоплательщику
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахИПН.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = &парамНалогоплательщик) КАК СведенияОСтавкахИПНПоНалогоплательщику";
			
		Запрос.Текст = СведенияОСтавкахИПНПоНалогоплательщикуТекст;
		Запрос.Выполнить();
		СведенияОСтавкахИПНПоНалогоплательщикуТекст = "ВТ_СведенияОСтавкахИПНПоНалогоплательщику";
		
		СведенияОСтавкахИПНТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахИПН.ВидДохода,
			|	СведенияОСтавкахИПН.Ставка,
			|	СведенияОСтавкахИПН.СтавкаНерезиденты
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахИПН
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахИПН.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК СведенияОСтавкахИПН";
			
		Запрос.Текст = СведенияОСтавкахИПНТекст;
		Запрос.Выполнить();
		СведенияОСтавкахИПНТекст = "ВТ_СведенияОСтавкахИПН";

		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахИПНПоНалогоплательщикуТекст + " КАК СведенияОСтавкахИПНПоНалогоплательщику
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахИПНПоНалогоплательщику.ВидДохода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахИПНТекст + " КАК СведенияОСтавкахИПН
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахИПН.ВидДохода
		|";
		
	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
			
		СписокГруппИнвалидности = Новый СписокЗначений;
		СписокГруппИнвалидности.Добавить("I");
		СписокГруппИнвалидности.Добавить("II");
			
		Запрос.УстановитьПараметр("парамСписокГруппИнвалидности",  СписокГруппИнвалидности);
			
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		ОблагаемыйДоход
		//
		//	Описание:
		// Выбирает облагаемые взносами доходы за периоды по физлицам
		
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то доходы всегда выбираются только за расчетный месяц. Отдельно выделим прочие доходы, зарегистрированные в обход начислений.
		ДоходыТекст = "
		|ВЫБРАТЬ
		|	ОПВСведенияОДоходах.ФизЛицо КАК Физлицо,
		|	СУММА(ВЫБОР
		|			КОГДА ОПВСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|				ТОГДА ОПВСведенияОДоходах.СуммаДохода - ОПВСведенияОДоходах.СуммаВычета
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ПрочиеДоходы
		|
		|ПОМЕСТИТЬ ВТ_ДоходыОПВРасчетаОтОбратного
		|ИЗ
		|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|		ПО ОПВСведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|ГДЕ
		|	ОПВСведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|	И ОПВСведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|	
		|СГРУППИРОВАТЬ ПО
		|	ОПВСведенияОДоходах.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОПВСведенияОДоходах.ФизЛицо";
		
		Запрос.Текст = ДоходыТекст;
		Запрос.Выполнить();
		ДоходыТекст = "ВТ_ДоходыОПВРасчетаОтОбратного";

		// Здесь не берем имеющийся за МесяцНалоговогоПериода в ОПВРасчетыСФондами взнос, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то ранее исчисленные взносы всегда выбираются только за расчетный месяц. Поэтому запроса к ОПВРасчетыСФондами вообще не требуется.

		// РазмерОграниченияПоДоходам
		РазмерОграниченияПоДоходамТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказатели.РазмерМЗП * 50 КАК ОграничениеПоДоходам
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказатели
		|";
			
		Запрос.Текст = РазмерОграниченияПоДоходамТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", Выборка.ОграничениеПоДоходам);
		Иначе
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамОПВ", 0);
		КонецЕсли;

		// ФизлицаБезПраваНаПенсию
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц не имеющих право на пенсионное обеспечение
		ФизлицаБезПраваНаПенсиюТекст = "
		|ВЫБРАТЬ
		|	ГражданствоФизЛиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаБезПраваНаПенсию
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ГражданствоФизЛиц
		|
		|ГДЕ
		|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
				
		Запрос.Текст = ФизлицаБезПраваНаПенсиюТекст;
		Запрос.Выполнить();
		ФизлицаБезПраваНаПенсиюТекст = "ВТ_ФизлицаБезПраваНаПенсию";
			
		// ФизлицаПенсионеры
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц достигших пенсионный возраст
		ФизлицаПенсионерыТекст = "
		|ВЫБРАТЬ
		|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаПенсионеры
		|ИЗ
		|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОПенсионномОбеспеченииФизЛиц
		|
		|ГДЕ
		|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
			
		Запрос.Текст = ФизлицаПенсионерыТекст;
		Запрос.Выполнить();
		ФизлицаПенсионерыТекст = "ВТ_ФизлицаПенсионеры";

		// ФизлицаИнвалидыБессрочно
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц-инвалидов I и II группы, у которых инвалидность установлена бессрочно
		ФизлицаИнвалидыБессрочноТекст = "
		|ВЫБРАТЬ
		|	СведенияОбИнвалидностиФизлиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаИнвалидыБессрочно
		|ИЗ
		|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОбИнвалидностиФизлиц
		|
		|ГДЕ
		|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
		|	И СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности В (&парамСписокГруппИнвалидности)
		|	И СведенияОбИнвалидностиФизлиц.СрокДействияСправки = ДАТАВРЕМЯ(1, 1, 1)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
			
		Запрос.Текст = ФизлицаИнвалидыБессрочноТекст;
		Запрос.Выполнить();
		ФизлицаИнвалидыБессрочноТекст = "ВТ_ФизлицаИнвалидыБессрочно";

		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ВЫБОР
		|	КОГДА Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизЛицаПенсионерыТекст + ")
		|		  ИЛИ Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизЛицаБезПраваНаПенсиюТекст + ")
		|		  ИЛИ Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаИнвалидыБессрочноТекст + ") ТОГДА ЛОЖЬ
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ КАК ПризнакИсчисленияОПВ
		|";
		
		// СведенияОСтавкахНалоговСборовОтчислений
		// Поля:
		//		Период
		//		Ставка
		//
		// Описание:
		//	Выбирает ставку ОПВ для каждого периода исчисления взносов с учетом приоритетов
		
		СведенияОСтавкахОПВТекст = "ВЫБРАТЬ
		               |	1 КАК Приоритет,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ) КАК Период,
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидДохода КАК ВидДохода,
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
		               |ПОМЕСТИТЬ ВТ_СведенияОСтавкахПоПриоритетам
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода <> &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	2,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Вознаграждения),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	2,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Выигрыши),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	2,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Дивиденды),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	2,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	2,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	2,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ПрочиеДоходы),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамНалогоплательщик
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	3,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидДохода,
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода <> &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	4,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Вознаграждения),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	4,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Выигрыши),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	4,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.Дивиденды),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	4,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	4,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	4,
		               |	НАЧАЛОПЕРИОДА(СведенияОСтавкахНалоговСборовОтчислений.Период, МЕСЯЦ),
		               |	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ПрочиеДоходы),
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка
		               |ИЗ
		               |	РегистрСведений.СведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |ГДЕ
		               |	СведенияОСтавкахНалоговСборовОтчислений.ВидНалога = &парамВидОПВ
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Налогоплательщик = &парамПустаяОрганизация
		               |	И СведенияОСтавкахНалоговСборовОтчислений.Период <= КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		               |	И СведенияОСтавкахНалоговСборовОтчислений.ВидДохода = &парамПустойВидДохода
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
		               |	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ВидДохода КАК ВидДохода,
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
		               |ПОМЕСТИТЬ ВТСведенияОСтавкахНалоговСборовОтчислений
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		СведенияОСтавкахНалоговСборовОтчислений.Период КАК Период,
		               |		СведенияОСтавкахНалоговСборовОтчислений.ВидДохода КАК ВидДохода,
		               |		МИНИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Приоритет) КАК Приоритет
		               |	ИЗ
		               |		ВТ_СведенияОСтавкахПоПриоритетам КАК СведенияОСтавкахНалоговСборовОтчислений
		               |	
		               |	СГРУППИРОВАТЬ ПО
		               |		СведенияОСтавкахНалоговСборовОтчислений.Период,
		               |		СведенияОСтавкахНалоговСборовОтчислений.ВидДохода) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОСтавкахПоПриоритетам КАК СведенияОСтавкахНалоговСборовОтчислений
		               |		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
		               |			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Приоритет = СведенияОСтавкахНалоговСборовОтчислений.Приоритет
		               |			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ВидДохода = СведенияОСтавкахНалоговСборовОтчислений.ВидДохода
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период КАК Период,
		               |	СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ВидДохода КАК ВидДохода,
		               |	СведенияОСтавкахНалоговСборовОтчислений.Ставка КАК Ставка
					   |ПОМЕСТИТЬ ВТ_СведенияОСтавкахОПВ	
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		СведенияОСтавкахНалоговСборовОтчислений.ВидДохода КАК ВидДохода,
		               |		МАКСИМУМ(СведенияОСтавкахНалоговСборовОтчислений.Период) КАК Период
		               |	ИЗ
		               |		ВТСведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |	
		               |	СГРУППИРОВАТЬ ПО
		               |		СведенияОСтавкахНалоговСборовОтчислений.ВидДохода) КАК СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОСтавкахНалоговСборовОтчислений КАК СведенияОСтавкахНалоговСборовОтчислений
		               |		ПО СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.Период = СведенияОСтавкахНалоговСборовОтчислений.Период
		               |			И СведенияОСтавкахНалоговСборовОтчисленийСрезПоследних.ВидДохода = СведенияОСтавкахНалоговСборовОтчислений.ВидДохода";
		
		Запрос.УстановитьПараметр("парамПустойВидДохода", Справочники.ВидыДоходов.ПустаяСсылка());
		Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
		Запрос.УстановитьПараметр("парамВидОПВ", Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы);
				
		Запрос.Текст = СведенияОСтавкахОПВТекст;
		Запрос.Выполнить();
		СведенияОСтавкахОПВТекст = "ВТ_СведенияОСтавкахОПВ";
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыТекст + " КАК РасчетОтОбратногоДанныеОПВ
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеОПВ.ФизЛицо
		|	   И Основной.ВидРасчета.ОтОбратного
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахОПВТекст + " КАК СведенияОСтавкахОПВ
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахОПВ.ВидДохода
		|";

	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоУчитыватьВОСМС Тогда
			
		// Доходы
		//	Поля:
		//		ФизЛицо
		//		Период
		//		ОблагаемыйДоход
		//
		//	Описание:
		// Выбирает облагаемые взносами доходы за периоды по физлицам
		
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то доходы всегда выбираются только за расчетный месяц. Отдельно выделим прочие доходы, зарегистрированные в обход начислений.
		ДоходыТекст = "
    	|ВЫБРАТЬ
		|	ВОСМССведенияОДоходах.ФизЛицо КАК Физлицо,
		|   СУММА(ВОСМССведенияОДоходах.ПрочиеДоходы) КАК ПрочиеДоходы,
		|   СУММА(ВОСМССведенияОДоходах.ВОСМСДругогоРаботодателя) КАК ВОСМСДругогоРаботодателя
    	|ПОМЕСТИТЬ ВТ_ДоходыВОСМСРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВОСМССведенияОДоходах.ФизЛицо КАК Физлицо,
		|		ВЫБОР
		|				КОГДА ВОСМССведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
		|					ТОГДА ВОСМССведенияОДоходах.СуммаДохода - ВОСМССведенияОДоходах.СуммаВычета
		|				ИНАЧЕ 0
    	|			КОНЕЦ КАК ПрочиеДоходы,
		|		0 КАК ВОСМСДругогоРаботодателя
		|
		|	ИЗ
		|		РегистрНакопления.ВОСМССведенияОДоходах КАК ВОСМССведенияОДоходах
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО ВОСМССведенияОДоходах.ФизЛицо = СписокФизЛиц.ФизЛицо
		|	
		|	ГДЕ
		|		ВОСМССведенияОДоходах.Период МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
		|		И ВОСМССведенияОДоходах.Налогоплательщик = &парамНалогоплательщик
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		СписокФизЛиц.Физлицо,
		|		0,
		|		СведенияПредыдущегоМестаРаботыФизЛиц.ВОСМС
		|	ИЗ
		|		" + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияПредыдущегоМестаРаботыФизЛиц КАК СведенияПредыдущегоМестаРаботыФизЛиц
		|				ПО СписокФизЛиц.Физлицо = СведенияПредыдущегоМестаРаботыФизЛиц.ФизЛицо
    	|	ГДЕ
    	|		СведенияПредыдущегоМестаРаботыФизЛиц.МесяцНалоговогоПериода МЕЖДУ &парамПериодРегистрации И &парамКонецПериодаРегистрации
    	|		И СведенияПредыдущегоМестаРаботыФизЛиц.Налогоплательщик = &парамНалогоплательщик) КАК ВОСМССведенияОДоходах
		|	
		|СГРУППИРОВАТЬ ПО
		|	ВОСМССведенияОДоходах.ФизЛицо
		|
		|ИНДЕКСИРОВАТЬ ПО
 		|	ВОСМССведенияОДоходах.ФизЛицо";
		
		Запрос.Текст = ДоходыТекст;
		Запрос.Выполнить();
		ДоходыТекст = "ВТ_ДоходыВОСМСРасчетаОтОбратного";

		// Здесь не берем имеющийся за МесяцНалоговогоПериода в ВОСМСРасчетыСФондами взнос, т.к. перерасчитываем заново,
		// иначе придется постоянно следить, чтобы предыдущий документ с расчетом ИПН, ОПВ и удержаний был непроведенным.
		// Поскольку расчет ведется только при установленном признаке УчетнаяПолитикаПоНалоговомуУчету.ОтражениеПоПериодуРегистрации
		// то ранее исчисленные взносы всегда выбираются только за расчетный месяц. Поэтому запроса к ОПВРасчетыСФондами вообще не требуется.

		// РазмерОграниченияПоДоходам
		РазмерОграниченияПоДоходамТекст = "
		|ВЫБРАТЬ
		|	РасчетныеПоказатели.РазмерМЗП * 10 КАК ОграничениеПоДоходам
		|ИЗ
		|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&парамКонецПериодаРегистрации) КАК РасчетныеПоказатели
		|";
			
		Запрос.Текст = РазмерОграниченияПоДоходамТекст;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамВОСМС", Выборка.ОграничениеПоДоходам);
		Иначе
			Запрос.УстановитьПараметр("парамРазмерОграниченияПоДоходамВОСМС", 0);
		КонецЕсли;

		// ФизлицаБезПраваНаПенсию
		//	Поля:
		//		Физлицо
		//
		//	Описание:
		//	список физлиц не имеющих право на пенсионное обеспечение
		ФизлицаНеПодлежитСоциальномуМедицинскомуСтрахованиюТекст = "
		|ВЫБРАТЬ
		|	ГражданствоФизЛиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаНеПодлежитСоциальномуМедицинскомуСтрахованию
		|ИЗ
		|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК ГражданствоФизЛиц
		|
		|ГДЕ
		|	(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо";
				
		Запрос.Текст = ФизлицаНеПодлежитСоциальномуМедицинскомуСтрахованиюТекст;
		Запрос.Выполнить();
		ФизлицаНеПодлежитСоциальномуМедицинскомуСтрахованиюТекст = "ВТ_ФизлицаНеПодлежитСоциальномуМедицинскомуСтрахованию";
			
		Если НЕ НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
			
			// ФизлицаПенсионеры
			//	Поля:
			//		Физлицо
			//
			//	Описание:
			//	список физлиц достигших пенсионный возраст
			ФизлицаПенсионерыТекст = "
			|ВЫБРАТЬ
			|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
			|ПОМЕСТИТЬ ВТ_ФизлицаПенсионеры
			|ИЗ
			|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(
			|						&парамКонецПериодаРегистрации, 
			|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОПенсионномОбеспеченииФизЛиц
			|
			|ГДЕ
			|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизЛицо";
				
			Запрос.Текст = ФизлицаПенсионерыТекст;
			Запрос.Выполнить();
			ФизлицаПенсионерыТекст = "ВТ_ФизлицаПенсионеры";

		КонецЕсли;
			
		// ФизлицаИнвалиды		
		//	Поля:
		//		Физлицо
		//
		ФизлицаИнвалидыТекст = "
		|ВЫБРАТЬ
		|	СведенияОбИнвалидностиФизлиц.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизлицаИнвалиды
		|ИЗ
		|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
		|						&парамКонецПериодаРегистрации, 
		|						ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")) КАК СведенияОбИнвалидностиФизлиц
		|
		|ГДЕ
		|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = ЗНАЧЕНИЕ(Перечисление.ОтношениеКИнвалидности.Инвалид)
		|	И (СведенияОбИнвалидностиФизлиц.СрокДействияСправки = ДАТАВРЕМЯ(1,1,1) ИЛИ &парамКонецПериодаРегистрации <= КОНЕЦПЕРИОДА(СведенияОбИнвалидностиФизлиц.СрокДействияСправки, ДЕНЬ))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
			
		Запрос.Текст = ФизлицаИнвалидыТекст;
		Запрос.Выполнить();
		ФизлицаИнвалидыТекст = "ВТ_ФизлицаИнвалиды";

		РасчетОтОбратногоПоляТекст = РасчетОтОбратногоПоляТекст + ",
		|ВЫБОР
		|	КОГДА Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизЛицаПенсионерыТекст + ")
		|		  ИЛИ Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаНеПодлежитСоциальномуМедицинскомуСтрахованиюТекст + ")
		|		  ИЛИ Основной.ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + ФизлицаИнвалидыТекст + ") ТОГДА ЛОЖЬ
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ КАК ПризнакИсчисленияВОСМС
		|";
		
		СведенияОСтавкахВОСМСПоНалогоплательщикуТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахВОСМСПоНалогоплательщику.ВидДохода,
			|	СведенияОСтавкахВОСМСПоНалогоплательщику.СтавкаВзносы КАК Ставка
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахВОСМСПоНалогоплательщику
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахОСМС.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = &парамНалогоплательщик) КАК СведенияОСтавкахВОСМСПоНалогоплательщику";
			
		Запрос.Текст = СведенияОСтавкахВОСМСПоНалогоплательщикуТекст;
		Запрос.Выполнить();
		СведенияОСтавкахВОСМСПоНалогоплательщикуТекст = "ВТ_СведенияОСтавкахВОСМСПоНалогоплательщику";
		
		СведенияОСтавкахВОСМСТекст = 
			"ВЫБРАТЬ
			|	СведенияОСтавкахВОСМС.ВидДохода,
			|	СведенияОСтавкахВОСМС.СтавкаВзносы КАК Ставка
			|ПОМЕСТИТЬ ВТ_СведенияОСтавкахВОСМС
			|ИЗ
			|	РегистрСведений.СведенияОСтавкахОСМС.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК СведенияОСтавкахВОСМС";
			
		Запрос.Текст = СведенияОСтавкахВОСМСТекст;
		Запрос.Выполнить();
		СведенияОСтавкахВОСМСТекст = "ВТ_СведенияОСтавкахВОСМС";
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ " + ДоходыТекст + " КАК РасчетОтОбратногоДанныеВОСМС
		|	ПО Основной.ФизЛицо = РасчетОтОбратногоДанныеВОСМС.ФизЛицо
		|	   И Основной.ВидРасчета.ОтОбратного
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахВОСМСПоНалогоплательщикуТекст + " КАК СведенияОСтавкахВОСМСПоНалогоплательщику
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахВОСМСПоНалогоплательщику.ВидДохода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ " + СведенияОСтавкахВОСМСТекст + " КАК СведенияОСтавкахВОСМС
		|	ПО Основной.ВидРасчета.ВидДохода = СведенияОСтавкахВОСМС.ВидДохода
		|";

	КонецЕсли;
		
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьУдержания Тогда
	   
	   // для списка погашамых удержаний определим общую сумму
	   Запрос.УстановитьПараметр("парамСпособыРасчетаФиксированнойСуммой", ПроведениеРасчетов.ПолучитьСписокСпособовРасчетовФиксированнойСуммой());
	   Запрос.УстановитьПараметр("парамВалютаРегламентУчета", Константы.ВалютаРегламентированногоУчета.Получить());

	   // ПлановыеУдержания
	   // Поля:
	   //		ФизЛицо
	   //		ВидРасчета
	   //		ВидСтроки
	   //		Размер
	   //	Описание:
	   // Выбирает плановые и фактические удержания за период регистрации для физлиц, по которым производится расчет "от обратного".
	   // Фактические удержания берем только те, что введены как разовые, чтобы не задублировать плановые, если уже создан и проведен
	   // документ "Расчет ИПН, ОПВ и удержаний" и заново пересчитывают "от обратного"
		
	   ПлановыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1 КАК Размер,
		|	ПлановыеУдержания.Валюта1 КАК Валюта,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.Период < &парамПериодРегистрации ТОГДА &парамПериодРегистрации
		|		ИНАЧЕ ПлановыеУдержания.Период
		|	КОНЕЦ КАК ДатаНачала,
		|
		|	ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ПлановыеУдержания.ПериодЗавершения <= &парамКонецПериодаРегистрации
		|			ТОГДА КОНЕЦПЕРИОДА(ПлановыеУдержания.ПериодЗавершения, ДЕНЬ)
		|		ИНАЧЕ МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонецПериодаРегистрации))
		|	КОНЕЦ КАК ДатаОкончания
		|
		|ПОМЕСТИТЬ ВТ_ПлановыеУдержанияРасчетаОтОбратного
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|		ПО ПлановыеУдержания.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК СледующиеПлановыеУдержания
		|		ПО ПлановыеУдержания.Организация = СледующиеПлановыеУдержания.Организация
		|			И ПлановыеУдержания.Физлицо = СледующиеПлановыеУдержания.Физлицо
		|			И ПлановыеУдержания.ВидРасчета = СледующиеПлановыеУдержания.ВидРасчета
		|			И ПлановыеУдержания.ДокументОснование = СледующиеПлановыеУдержания.ДокументОснование
		|			И СледующиеПлановыеУдержания.Период > ПлановыеУдержания.Период
		|			И СледующиеПлановыеУдержания.Период <= &парамКонецПериодаРегистрации
		|
		|ГДЕ
		|	ПлановыеУдержания.Организация = &парамГоловнаяОрганизация
		|	И ПлановыеУдержания.Период <= &парамКонецПериодаРегистрации
		|	И ВЫБОР
		|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1) 
		|				И ПлановыеУдержания.ПериодЗавершения < &парамПериодРегистрации ТОГДА ПлановыеУдержания.ДействиеЗавершения
		|		ИНАЧЕ ПлановыеУдержания.Действие
		|	  КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПлановыеУдержания.ФизЛицо,
		|	ПлановыеУдержания.ВидРасчета,
		|	ПлановыеУдержания.Показатель1,
		|	ПлановыеУдержания.Валюта1,
		|	ПлановыеУдержания.Период,
		|	ПлановыеУдержания.ПериодЗавершения
		|
		|ИМЕЮЩИЕ
		|	МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(СледующиеПлановыеУдержания.Период, ДЕНЬ, -1), &парамКонецПериодаРегистрации)) >= &парамПериодРегистрации
		|";
		Запрос.Текст = ПлановыеУдержанияТекст;
		Запрос.Выполнить();
		ПлановыеУдержанияТекст = "ВТ_ПлановыеУдержанияРасчетаОтОбратного";
		
		// В качестве фактических берем только те, что зарегистрированы как 
		// разовые, т.к. все остальные будут взяты из плановых
		ПлановыеИФактическиеУдержанияТекст = "
		|ВЫБРАТЬ
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	Удержания.ВидРасчета.ВычитатьИзБазыИПН КАК ВычитатьИзБазыИПН,
		|	Удержания.ВидРасчета.ВычитатьИзБазыОПВ КАК ВычитатьИзБазыОПВ,
		|	Удержания.ВидРасчета.ВычитатьИзБазыВОСМС КАК ВычитатьИзБазыВОСМС,
		|	Удержания.ВидСтроки,
		|	СУММА(Удержания.Результат) КАК Результат,
		|	СУММА(ВЫБОР
		|			КОГДА Удержания.Валюта = &парамВалютаРегламентУчета ИЛИ Удержания.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|				ТОГДА Удержания.Размер
		|			ИНАЧЕ Удержания.Размер * ЕСТЬNULL(Валюты.Курс, 0) / ЕСТЬNULL(Валюты.Кратность, 1)
		|		  КОНЕЦ) КАК Размер
		|
		|ПОМЕСТИТЬ ВТ_ПлановыеИФактическиеУдержанияРасчетаОтОбратного
		|ИЗ
		|	(ВЫБРАТЬ
		|			ПлановыеУдержания.ФизЛицо,
		|			ПлановыеУдержания.ВидРасчета,
		|			""ПлановыеУдержания"" КАК ВидСтроки,
		|			0 КАК Результат,
		|			ПлановыеУдержания.Размер,
		|			ПлановыеУдержания.Валюта
		|		ИЗ
		|			" + ПлановыеУдержанияТекст + " КАК ПлановыеУдержания
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Удержания.ФизЛицо,
		|		Удержания.ВидРасчета,
		|		""ФактическиеУдержания"" КАК ВидСтроки,
		|		Удержания.Результат,
		|		Удержания.Показатель1 КАК Размер,
		|		ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта
		|	ИЗ
		|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокФизЛицТекст + " КАК СписокФизЛиц
		|			ПО Удержания.ФизЛицо = СписокФизЛиц.ФизЛицо
		|
		|	ГДЕ
		|		Удержания.Организация = &парамГоловнаяОрганизация 
		|		И Удержания.ПериодРегистрации = &парамПериодРегистрации
		|		И Удержания.Результат <> 0
		|		И НЕ (Удержания.Регистратор ССЫЛКА Документ.РасчетУдержанийРаботниковОрганизаций)
		|	) КАК Удержания
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты
		|	ПО Валюты.Период = &парамПериодРегистрации И Валюты.Валюта = Удержания.Валюта
		|
		|СГРУППИРОВАТЬ ПО
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.ВидРасчета.СпособРасчета,
		|	Удержания.ВидСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Удержания.ФизЛицо
		|";
		Запрос.Текст = ПлановыеИФактическиеУдержанияТекст;
		Запрос.Выполнить();
		ПлановыеИФактическиеУдержанияТекст = "ВТ_ПлановыеИФактическиеУдержанияРасчетаОтОбратного";
			   
		
		
		РанееКомпенсированныеУдержанияСуммойТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КомпенсируемыеВидыУдержанийОсновные.Ссылка КАК ВидРасчета,
		|	КомпенсируемыеВидыУдержанийОсновные.ВидРасчета КАК ВидУдержания
		|ПОМЕСТИТЬ ВТ_КомпенсируемыеУдержанияСуммой
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеВидыУдержанийОсновные
		|
		|ГДЕ
		|	КомпенсируемыеВидыУдержанийОсновные.ВидРасчета ССЫЛКА ПланВидовРасчета.УдержанияОрганизаций
		|	И КомпенсируемыеВидыУдержанийОсновные.ВидРасчета.СпособРасчета В(&парамСпособыРасчетаФиксированнойСуммой)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КомпенсируемыеВидыУдержанийДополнительные.Ссылка,
		|	КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеВидыУдержанийДополнительные
		|
		|ГДЕ
		|	КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета ССЫЛКА ПланВидовРасчета.УдержанияОрганизаций
		|	И КомпенсируемыеВидыУдержанийДополнительные.ВидРасчета.СпособРасчета В(&парамСпособыРасчетаФиксированнойСуммой)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|   ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	КомпенсируемыеУдержанияСуммой.ВидУдержания
		|ПОМЕСТИТЬ ВТ_РанееКомпенсированныеУдержанияСуммой
		|ИЗ
		|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КомпенсируемыеУдержанияСуммой КАК КомпенсируемыеУдержанияСуммой
		|		ПО ОсновныеИДополнительныеНачисления.ВидРасчета = КомпенсируемыеУдержанияСуммой.ВидРасчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо,
		|	ВидУдержания";
		
		Запрос.Текст = РанееКомпенсированныеУдержанияСуммойТекст;
		Запрос.Выполнить();
		РанееКомпенсированныеУдержанияСуммойТекст = "ВТ_РанееКомпенсированныеУдержанияСуммой";
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + РанееКомпенсированныеУдержанияСуммойТекст;
		
		// КомпенсируемыеУдержания
		// Поля:
		//		ФизЛицо
		//		ВидУдержания
		//		Результат
		//		Размер
		//	Описание:
		// Рассчитывает результат по каждому компенсируемому виду удержаний 
		КомпенсируемыеУдержанияТекст = "
		|ВЫБРАТЬ
		|	Основной.НомерСтроки,
		|	Основной.ВидРасчета КАК ВидРасчетаОтОбратного,
		|	ПлановыеИФактическиеУдержания.ФизЛицо,
		|	ПлановыеИФактическиеУдержания.ВидРасчета КАК ВидУдержания,
		|	ПлановыеИФактическиеУдержания.ВидСтроки,
		|
		|	МАКСИМУМ(ВЫБОР
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ФактическиеУдержания""
		|					ТОГДА ПлановыеИФактическиеУдержания.Результат
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета В (&парамСпособыРасчетаФиксированнойСуммой)
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|			КОНЕЦ) 
		|	+
		|	МАКСИМУМ(ВЫБОР
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|			КОНЕЦ) / 100 * 
		|	СУММА(ЕСТЬNULL(ОсновныеИДополнительныеНачисления.Результат, 0)) КАК СуммаКомпенсируемыхУдержаний,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
		|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийТолькоИПН,
		|
		|	МАКСИМУМ(ВЫБОР 
		|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
		|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
		|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
		|					ТОГДА ПлановыеИФактическиеУдержания.Размер
		|				ИНАЧЕ 0
    	|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийТолькоОПВ,
    	|
    	|	МАКСИМУМ(ВЫБОР 
    	|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
    	|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
    	|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
    	|					ТОГДА ПлановыеИФактическиеУдержания.Размер
    	|				ИНАЧЕ 0
    	|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийТолькоВОСМС,
    	|
    	|	МАКСИМУМ(ВЫБОР 
    	|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
    	|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
    	|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
    	|					ТОГДА ПлановыеИФактическиеУдержания.Размер
    	|				ИНАЧЕ 0
    	|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
    	|
    	|	МАКСИМУМ(ВЫБОР 
    	|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
    	|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
    	|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
    	|					ТОГДА ПлановыеИФактическиеУдержания.Размер
    	|				ИНАЧЕ 0
    	|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
    	|
    	|	МАКСИМУМ(ВЫБОР 
    	|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
    	|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
    	|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
    	|					ТОГДА ПлановыеИФактическиеУдержания.Размер
    	|				ИНАЧЕ 0
    	|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийБезВОСМС,
    	|
    	|	МАКСИМУМ(ВЫБОР 
    	|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
    	|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
    	|					  И ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
    	|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
    	|					ТОГДА ПлановыеИФактическиеУдержания.Размер
    	|				ИНАЧЕ 0
    	|		  	 КОНЕЦ) КАК ПроцентКомпенсируемыхУдержанийИПНиОПВиВОСМС,
    	|
    	|	МАКСИМУМ(ВЫБОР 
    	|				КОГДА ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
    	|					  И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыИПН
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыОПВ
    	|					  И НЕ ПлановыеИФактическиеУдержания.ВычитатьИзБазыВОСМС
    	|				  	  И БазовыеВидыРасчета.ВидРасчета = Основной.ВидРасчета
    	|					ТОГДА ПлановыеИФактическиеУдержания.Размер
    	|				ИНАЧЕ 0
    	|		  	 КОНЕЦ) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|
		|ПОМЕСТИТЬ ВТ_КомпенсируемыеУдержанияРасчетаОтОбратного
		|ИЗ
		|	" + ИмяИсточника + " КАК Основной
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПлановыеИФактическиеУдержанияТекст + " КАК ПлановыеИФактическиеУдержания
		|
		|		ПО Основной.ФизЛицо = ПлановыеИФактическиеУдержания.ФизЛицо
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|											КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.Ссылка КАК ВидРасчетаОтОбратного,
		|											КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
		|										ИЗ
		|											ПланВидовРасчета." + ИмяПВР + ".КомпенсируемыеРасчетомОтОбратногоВидыУдержаний КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний) КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
		|					ПО Основной.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчетаОтОбратного 
		|					   И ПлановыеИФактическиеУдержания.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + РанееКомпенсированныеУдержанияСуммойТекст + " КАК РанееКомпенсированныеУдержанияСуммой
		|		ПО Основной.ФизЛицо = РанееКомпенсированныеУдержанияСуммой.ФизЛицо
		|			И КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета = РанееКомпенсированныеУдержанияСуммой.ВидУдержания
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК БазовыеВидыРасчета
		|		ПО ПлановыеИФактическиеУдержания.ВидРасчета = БазовыеВидыРасчета.Ссылка
		|		   И ПлановыеИФактическиеУдержания.ВидСтроки = ""ПлановыеУдержания""
		|		   И ПлановыеИФактическиеУдержания.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
		|	ВключаемыеВидыНачислений.Ссылка КАК Ссылка,
		|	ОсновныеИДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|	ОсновныеИДополнительныеНачисления.Результат КАК Результат
		|	ИЗ
		|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВключаемыеВидыНачислений.Ссылка КАК Ссылка,
		|			ВключаемыеВидыНачислений.ВидРасчета КАК ВидРасчета
		|		ИЗ
		|			ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ВключаемыеВидыНачислений
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ВключаемыеВидыНачислений.Ссылка,
		|			ВключаемыеВидыНачислений.ВидРасчета
		|		ИЗ
		|			ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ВключаемыеВидыНачислений) КАК ВключаемыеВидыНачислений
		|		ПО ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.ВидРасчета) КАК ОсновныеИДополнительныеНачисления
		|	ПО ПлановыеИФактическиеУдержания.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо
		|	   И БазовыеВидыРасчета.ВидРасчета = ОсновныеИДополнительныеНачисления.ВидРасчета
		|		И Основной.ВидРасчета = ОсновныеИДополнительныеНачисления.Ссылка
		|
		|ГДЕ
		|	" + ВнешнееУсловие + "
		|	И Основной.ВидРасчета.ОтОбратного
		|	И РанееКомпенсированныеУдержанияСуммой.ФизЛицо ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	Основной.НомерСтроки,
		|	Основной.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ФизЛицо,
		|	ПлановыеИФактическиеУдержания.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ВидСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Основной.ВидРасчета,
		|	ПлановыеИФактическиеУдержания.ВидРасчета
		|";
		Запрос.Текст = КомпенсируемыеУдержанияТекст;
		Запрос.Выполнить();
		КомпенсируемыеУдержанияТекст = "ВТ_КомпенсируемыеУдержанияРасчетаОтОбратного";
		
		
		
		
		

		
		
		РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
		|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						КомпенсируемыеУдержания.НомерСтроки,
		|						СУММА(КомпенсируемыеУдержания.СуммаКомпенсируемыхУдержаний) КАК СуммаКомпенсируемыхУдержаний,
    	|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийТолькоИПН) КАК ПроцентКомпенсируемыхУдержанийТолькоИПН,
    	|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийТолькоОПВ) КАК ПроцентКомпенсируемыхУдержанийТолькоОПВ,
    	|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийТолькоВОСМС) КАК ПроцентКомпенсируемыхУдержанийТолькоВОСМС,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезИПН) КАК ПроцентКомпенсируемыхУдержанийБезИПН,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезОПВ) КАК ПроцентКомпенсируемыхУдержанийБезОПВ,
		|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийБезВОСМС) КАК ПроцентКомпенсируемыхУдержанийБезВОСМС,
    	|						СУММА(КомпенсируемыеУдержания.ПроцентКомпенсируемыхУдержанийИПНиОПВиВОСМС) КАК ПроцентКомпенсируемыхУдержанийИПНиОПВиВОСМС,
		|						СУММА(КомпенсируемыеУдержания.ПроцентПрочихКомпенсируемыхУдержаний) КАК ПроцентПрочихКомпенсируемыхУдержаний
		|					ИЗ
		|						" + КомпенсируемыеУдержанияТекст + " КАК КомпенсируемыеУдержания
		|					СГРУППИРОВАТЬ ПО 
		|						КомпенсируемыеУдержания.НомерСтроки
		|					) КАК РасчетОтОбратногоКомпенсируемыеУдержания
		|	ПО Основной.НомерСтроки = РасчетОтОбратногоКомпенсируемыеУдержания.НомерСтроки
		|";
	КонецЕсли;

	
	// определим суммы включаемых начислений ранее исчисленных расчетов от обратного,
	// рассчитанными как текущим, так и другими регистраторами
	
	РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст = "
	|ВЫБРАТЬ
	|	ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйОПВДоходВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяВОСМС <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
	|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемыйВОСМСДоходВключаемыхНачислений
	|ПОМЕСТИТЬ ВТ_ПрочиеВключаемыеНачисленияРасчетаОтОбратного
	|ИЗ
	|	" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ВключаемыеВидыНачислений.ВидРасчета КАК ВидРасчета,
	|			ОсновныеИДополнительныеНачисления.ВидРасчета КАК Ссылка,
	|			ОсновныеИДополнительныеНачисления.ФизЛицо КАК ФизЛицо
	|		ИЗ
	|			" + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка КАК Ссылка,
	|					ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета КАК ВидРасчета
	|				ИЗ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ОсновныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ
	|					ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка,
	|					ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|				ИЗ
	|					ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВключаемыеВРасчетОтОбратногоВидыНачислений КАК ДополнительныеНачисленияОрганизацийВключаемыеВРасчетОтОбратногоВидыНачислений) КАК ВключаемыеВидыНачислений
	|				ПО ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.Ссылка
	|		ГДЕ
	|			ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|			И НЕ (ВключаемыеВидыНачислений.ВидРасчета ЕСТЬ NULL)) КАК ВключаемыеВидыНачислений
	|		ПО ОсновныеИДополнительныеНачисления.ФизЛицо = ВключаемыеВидыНачислений.ФизЛицо
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВидыНачислений.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеИДополнительныеНачисления.ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета
	|
	|ИНДЕКСИРОВАТЬ ПО 
	|	ОсновныеИДополнительныеНачисления.ФизЛицо,
	|	ОсновныеИДополнительныеНачисления.ВидРасчета";
	
	Запрос.Текст = РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст = "ВТ_ПрочиеВключаемыеНачисленияРасчетаОтОбратного";
	
	// Разделим прочие начисления на включаемые внутрь расчета "от обратного" и начисляемые "сверху"
	РасчетОтОбратногоПрочиеНачисленияТекст = "
	|ВЫБРАТЬ
	|	Основной.НомерСтроки,
	|	СУММА(ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного) КАК СуммаНачисленийОтОбратного,
	|	СУММА(ОсновныеИДополнительныеНачисления.ПрочиеДоходы) КАК ПрочиеДоходы,
	|	СУММА(ВЫБОР
	|		КОГДА НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом 
	|				И НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL) 
	|				И НЕ ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета.ОтОбратного
	|			ТОГДА ОсновныеИДополнительныеНачисления.Результат
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаВключаемыхНачислений,
	|	СУММА(ВЫБОР
	|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
	|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаПрочихВключаемыхНачислений,
	|";
	
	Если НеобходимыеДанные.ОтОбратногоКомпенсироватьИПН Тогда
		РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "	
		|	СУММА(ВЫБОР
		|			КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаемыйИПНДоходВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
		|				И ПрочиеВключаемыеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйИПНДоходПрочихВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|			КОГДА (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|					И (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL)
		|					И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
		|					И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|				ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОблагаемыйИПНДоходПрямыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйИПНДоходНачисленийОтОбратного, 
		|	МАКСИМУМ(ОсновныеИДополнительныеНачисления.ОтОбратногоКомпенсируетИПН) КАК ЕстьОтОбратногоКомпенсирующиеИПН,";
	КонецЕсли;

	Если НеобходимыеДанные.ОтОбратногоУчитыватьОПВ Тогда
		РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|				И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходВключаемыхНачислений, 
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
		|				И ПрочиеВключаемыеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходПрочихВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|				И (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL)
		|				И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
		|				И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходПрямыхНачислений, 
		|	СУММА(ВЫБОР
		|		КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйОПВДоходНачисленийОтОбратного, 
		|	МАКСИМУМ(ОсновныеИДополнительныеНачисления.ОтОбратногоКомпенсируетОПВ) КАК ЕстьОтОбратногоКомпенсирующиеОПВ,";
	КонецЕсли;

	Если НеобходимыеДанные.ОтОбратногоУчитыватьВОСМС Тогда
		РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|				И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяВОСМС <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйВОСМСДоходВключаемыхНачислений, 
		|	СУММА(ВЫБОР
		|		КОГДА НЕ (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL) 
		|				И ПрочиеВключаемыеНачисления.ВидРасчета.ОблагаетсяВОСМС <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ПрочиеВключаемыеНачисления.СуммаВключаемыхНачислений
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйВОСМСДоходПрочихВключаемыхНачислений,
		|	СУММА(ВЫБОР
		|		КОГДА (ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета ЕСТЬ NULL)
		|				И (ПрочиеВключаемыеНачисления.ВидРасчета ЕСТЬ NULL)
		|				И НЕ ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
		|				И ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяВОСМС <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.Результат
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйВОСМСДоходПрямыхНачислений, 
		|	СУММА(ВЫБОР
		|		КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОблагаетсяВОСМС <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			ТОГДА ОсновныеИДополнительныеНачисления.СуммаНачисленийОтОбратного
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ОблагаемыйВОСМСДоходНачисленийОтОбратного, 
		|	МАКСИМУМ(ОсновныеИДополнительныеНачисления.ОтОбратногоКомпенсируетВОСМС) КАК ЕстьОтОбратногоКомпенсирующиеВОСМС,";
	КонецЕсли;

	РасчетОтОбратногоПрочиеНачисленияТекст = РасчетОтОбратногоПрочиеНачисленияТекст + "
	|	СУММА(ОсновныеИДополнительныеНачисления.СуммаПрямыхНачислений) КАК СуммаПрямыхНачислений, 
	|	СУММА(ВЫБОР
	|			КОГДА ОсновныеИДополнительныеНачисления.ВидРасчета.ОтОбратного
	|				ТОГДА ОсновныеИДополнительныеНачисления.ДополнительныеДанныеОтОбратного
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДополнительныеДанные
	|
	|ПОМЕСТИТЬ ВТ_ПрочиеНачисленияРасчетаОтОбратного
	|ИЗ
	|	" + ИмяИсточника + " КАК Основной
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ОсновныеИДополнительныеНачисленияТекст + " КАК ОсновныеИДополнительныеНачисления
	|		ПО Основной.ФизЛицо = ОсновныеИДополнительныеНачисления.ФизЛицо 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Ссылка КАК Ссылка,
	|							ВидРасчета КАК ВидРасчета
	|						ИЗ
	|							ПланВидовРасчета." + ИмяПВР + ".ВключаемыеВРасчетОтОбратногоВидыНачислений) КАК ВключаемыеВРасчетОтОбратногоВидыНачислений
	|		ПО Основной.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.Ссылка
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ВключаемыеВРасчетОтОбратногоВидыНачислений.ВидРасчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетОтОбратногоПрочиеВключаемыеНачисленияТекст + " КАК ПрочиеВключаемыеНачисления
	|		ПО Основной.ФизЛицо = ПрочиеВключаемыеНачисления.ФизЛицо
	|			И ОсновныеИДополнительныеНачисления.ВидРасчета = ПрочиеВключаемыеНачисления.ВидРасчета
	|
	|ГДЕ
	|	" + ВнешнееУсловие + "
	|	И Основной.ВидРасчета.ОтОбратного
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Основной.НомерСтроки";	
	Запрос.Текст = РасчетОтОбратногоПрочиеНачисленияТекст;
	Запрос.Выполнить();
	РасчетОтОбратногоПрочиеНачисленияТекст = "ВТ_ПрочиеНачисленияРасчетаОтОбратного";
	
	// общие для любого вида компенсируемых удержаний данные
	РасчетОтОбратногоСоединенияТекст = РасчетОтОбратногоСоединенияТекст + "
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамПериодРегистрации, Организация = &парамОбособленноеПодразделение) КАК УчетнаяПолитикаНУ
	|	ПО ИСТИНА
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ " + КомпенсируемыеРасчетомОтОбратногоВидыУдержанийТекст + " КАК КомпенсируемыеРасчетомОтОбратногоВидыУдержаний
	|ПО Основной.ВидРасчета = КомпенсируемыеРасчетомОтОбратногоВидыУдержаний.ВидРасчета
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ " + РасчетОтОбратногоПрочиеНачисленияТекст + " КАК РасчетОтОбратногоПрочиеНачисления
	|	ПО Основной.НомерСтроки = РасчетОтОбратногоПрочиеНачисления.НомерСтроки
	|
	|";

	СтруктураРезультат = Новый Структура();
	СтруктураРезультат.Вставить("РасчетОтОбратногоСоединенияТекст", РасчетОтОбратногоСоединенияТекст);
	СтруктураРезультат.Вставить("РасчетОтОбратногоПоляТекст", РасчетОтОбратногоПоляТекст);
	
	Возврат СтруктураРезультат;

КонецФункции // ПолучитьДанныеДляРасчетаОтОбратногоПосле2022()

// Получает данные для расчета ресурсов записей регистра расчета
//
//	ИмяРегистра - строка, имя регистра расчета
//	КатегорияРасчета - ссылка на значение перечисленич КатегорииРасчетов
//	НеобходимыеДанные - Структура с элементами 
//			База,
//			НормаВремени,
//			ОтработаноВремени,
//			...
//	Регистратор - ссылка на документ
//	Организация - ссылка на организацию по которой проводится Регистратор
//	ПериодРегистрации
//	Перерасчет - булево - признак того, что получаем данные для случая перерасчета
//	Сотрудники - массив ссылок на сотрудников - выбранные для перерасчета сотрудника
//
// Возвращает выборку результата запроса
Функция ПолучитьДанныеДляРасчета(ИмяРегистра, 
									КатегорияРасчета, 
									НеобходимыеДанные, 
									Регистратор, 
									Организация, 
									ОбособленноеПодразделение,
									УчетнаяПолитикаПоПерсоналу,
									ПериодРегистрации, 
									Перерасчет = Ложь,
									Сотрудники = НеОпределено,
									Налогоплательщик = Неопределено,
									КомментироватьРасчет = Ложь) Экспорт

	// таблица ФизлицаДляПерерасчета
	// Список физлиц по которым необходимо выполнить перерасчет
	// Поля:
	//		Сотрудник
	// Описание:
	// Получает список неповторяющихся физлиц по которым есть записи
	// перерасчета в одной из таблиц перерасчета - по основным или дополнительным начислениям
	//
	СотрудникиДляПерерасчетаТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Перерасчет.Сотрудник
	|ПОМЕСТИТЬ ВТ_СотрудникиДляПерерасчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		Перерасчет.Сотрудник КАК Сотрудник
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ПерерасчетОсновныхНачислений КАК Перерасчет
	|	
	|	ГДЕ
	|		Перерасчет.ОбъектПерерасчета = &парамРегистратор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Перерасчет.Сотрудник
	|	ИЗ
	|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.ПерерасчетДополнительныхНачислений КАК Перерасчет
	|	
	|	ГДЕ
	|		Перерасчет.ОбъектПерерасчета = &парамРегистратор) КАК Перерасчет";

	
	// ДанныеОСреднемЗаработке
	// 		Таблица данных о среднем заработке
	// 
	//	Поля:
	//		СреднийЗаработок - суммируем
	//		ОтработаноДней - для расчета среднего
	//		ОтработаноЧасов - для расчета среднего
	//		НормаЧасов - для расчета среднего
	//		КалендарныхДней - для расчета среднего 
	//		Сотрудник,
	//		СпособРасчета,                 - это для идентификации записи в основном регистре расчета
	//		ДатаНачалаРасчетногоПериода,   - это для идентификации записи в основном регистре расчета
	//		ДатаОкончанияРасчетногоПериода - это для идентификации записи в основном регистре расчета
	// 
	// Описание:
	//
	//	выбираем из РегистрРасчета.РасчетСреднегоЗаработка
	//	по регистратору
		
	ДанныеОСреднемЗаработкеТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР 
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета в (&ВсеВидыОсновногоЗаработка) 
	|				ТОГДА РасчетСреднегоЗаработка.Результат * РасчетСреднегоЗаработка.КоэффициентИндексации
	|			КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР 
	|					КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиям)
	|						ТОГДА РасчетСреднегоЗаработка.Результат * РасчетСреднегоЗаработка.КоэффициентИндексации * ВЫБОР 
	|								КОГДА РасчетСреднегоЗаработка.НормаПоПятидневке = 0 
	|									ТОГДА 0 
	|								ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноПоПятидневке / РасчетСреднегоЗаработка.НормаПоПятидневке 
	|							КОНЕЦ 
	|					КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоПремиям)
	|						ТОГДА РасчетСреднегоЗаработка.Результат * РасчетСреднегоЗаработка.КоэффициентИндексации 
	|					ИНАЧЕ РасчетСреднегоЗаработка.Результат * РасчетСреднегоЗаработка.КоэффициентИндексации
	|				КОНЕЦ * ВЫБОР
	|					КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев > (ГОД(РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) * 12 + МЕСЯЦ(РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) - ГОД(РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода) * 12 - МЕСЯЦ(РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода) + 1)
	|						ТОГДА (ГОД(РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) * 12 + МЕСЯЦ(РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода) - ГОД(РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода) * 12 - МЕСЯЦ(РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода) + 1) / РасчетСреднегоЗаработка.ЧислоМесяцев
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ) КАК СреднийЗаработок,
	|	СУММА(ВЫБОР 
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета в (&ОсновнойЗаработок) 
	|				ТОГДА РасчетСреднегоЗаработка.ОтработаноДней 
	|			ИНАЧЕ 0 
	|		КОНЕЦ) КАК ОтработаноДней,
	|	СУММА(ВЫБОР 
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета в (&ОсновнойЗаработок) 
	|				ТОГДА РасчетСреднегоЗаработка.ОтработаноЧасов 
	|			ИНАЧЕ 0 
	|		КОНЕЦ) КАК ОтработаноЧасов,
	|	СУММА(ВЫБОР 
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета = &ПоЗаработкуОтпуск 
	|				ТОГДА РасчетСреднегоЗаработка.НормаЧасов 
	|			ИНАЧЕ 0 
	|		КОНЕЦ) КАК НормаЧасов,
	|	СУММА(ВЫБОР 
	|			КОГДА РасчетСреднегоЗаработка.ВидРасчета = &ПоЗаработкуОтпуск 
	|				ТОГДА РасчетСреднегоЗаработка.КалендарныхДней 
	|			ИНАЧЕ 0 
	|		КОНЕЦ) КАК КалендарныхДней,
	|	РасчетСреднегоЗаработка.Сотрудник КАК Сотрудник,
	|	РасчетСреднегоЗаработка.ФизЛицо КАК ФизЛицо,
	|	РасчетСреднегоЗаработка.Организация КАК Организация,
	|	РасчетСреднегоЗаработка.СпособРасчета КАК СпособРасчета,
	|	РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода КАК ДатаНачалаРасчетногоПериода,
	|	РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода КАК ДатаОкончанияРасчетногоПериода
	|ПОМЕСТИТЬ ВТ_ДанныеОСреднемЗаработке
	|ИЗ
	|	РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	|
	|ГДЕ
	|	РасчетСреднегоЗаработка.Регистратор = &парамРегистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетСреднегоЗаработка.Сотрудник,
	|	РасчетСреднегоЗаработка.ФизЛицо,
	|	РасчетСреднегоЗаработка.Организация,
	|	РасчетСреднегоЗаработка.СпособРасчета,
	|	РасчетСреднегоЗаработка.ДатаНачалаРасчетногоПериода,
	|	РасчетСреднегоЗаработка.ДатаОкончанияРасчетногоПериода";
	
	
	// ИсчисленныйИПН
	//	данные по исчисленному ИПН в текущем периоде регистрации
	//	Поля 
	//		Физлицо
	//		ИсчисленныйНалог
	//
	//	Описание
	//	Суммируем исчисленный ИПН по заданной организации в заданном периоде регистрации
	//	в разрезе физлиц
	
	ИсчисленныйИПНТекст = 
	"ВЫБРАТЬ
	|	ИПНРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|	СУММА(ИПНРасчетыСБюджетом.Налог) КАК ИсчисленныйНалог
	|ПОМЕСТИТЬ ВТ_ИсчисленныйИПН
	|ИЗ
	|	РегистрНакопления.ИПНРасчетыСБюджетом КАК ИПНРасчетыСБюджетом
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			Удержания.ФизЛицо КАК Физлицо
	|		ИЗ
	|			РегистрРасчета." + ИмяРегистра + " КАК Удержания
	|		
	|		ГДЕ
	|			Удержания.ВидРасчета.ВычитатьИзБазыИПН
	|			И Удержания.Регистратор = &парамРегистратор
	|			И Удержания.Авторасчет) КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ИПНРасчетыСБюджетом.ФизЛицо
	|
	|ГДЕ
	|	ИПНРасчетыСБюджетом.Организация = &парамОбособленноеПодразделение И
	|	НАЧАЛОПЕРИОДА(ИПНРасчетыСБюджетом.Период,Месяц) = НАЧАЛОПЕРИОДА(&парамПериодРегистрации,Месяц) И
	|	ИПНРасчетыСБюджетом.ВидДвижения = &парамПриход И
	|	ИПНРасчетыСБюджетом.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНРасчетыСБюджетом.ФизЛицо";
	
	
	// ИсчисленныйОПВ
	//	данные по исчисленным ОПВ в текущем периоде регистрации
	//	Поля 
	//		Физлицо
	//		ИсчисленныеВзносы
	//
	//	Описание
	//	Суммируем исчисленные ОПВ по заданной организации в заданном периоде регистрации
	//	в разрезе физлиц
	
	ИсчисленныйОПВТекст = 
	"ВЫБРАТЬ
	|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК ИсчисленныйВзнос
	|ПОМЕСТИТЬ ВТ_ИсчисленныйОПВ
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			Удержания.ФизЛицо КАК Физлицо
	|		ИЗ
	|			РегистрРасчета." + ИмяРегистра + " КАК Удержания
	|		
	|		ГДЕ
	|			Удержания.ВидРасчета.ВычитатьИзБазыОПВ
	|			И Удержания.Регистратор = &парамРегистратор
	|			И Удержания.Авторасчет) КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ОПВРасчетыСФондами.ФизЛицо
	|
	|ГДЕ
	|	ОПВРасчетыСФондами.Организация = &парамОбособленноеПодразделение И
	|	НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.Период,Месяц) = НАЧАЛОПЕРИОДА(&парамПериодРегистрации,Месяц) И
	|	ОПВРасчетыСФондами.ВидДвижения = &парамПриход И
	|	ОПВРасчетыСФондами.ВидПлатежа = &парамВидПлатежа И 
	|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо";
	
	// ИсчисленныйВОСМС
	//	данные по исчисленным ВОСМС в текущем периоде регистрации
	//	Поля 
	//		Физлицо
	//		ИсчисленныеВзносы
	//
	//	Описание
	//	Суммируем исчисленные ВОСМС по заданной организации в заданном периоде регистрации
	//	в разрезе физлиц
	
	ИсчисленныеВОСМСТекст = 
	"ВЫБРАТЬ
	|	ВОСМСИсчисленные.ФизЛицо КАК ФизЛицо,
	|	СУММА(ВОСМСИсчисленные.Взнос) КАК ИсчисленныйВзнос
	|ПОМЕСТИТЬ ВТ_ИсчисленныеВОСМС
	|ИЗ
	|	РегистрНакопления.ВОСМСИсчисленные КАК ВОСМСИсчисленные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			Удержания.ФизЛицо КАК Физлицо
	|		ИЗ
	|			РегистрРасчета." + ИмяРегистра + " КАК Удержания
	|		
	|		ГДЕ
	|			Удержания.ВидРасчета.ВычитатьИзБазыВОСМС
	|			И Удержания.Регистратор = &парамРегистратор
	|			И Удержания.Авторасчет) КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Физлицо = ВОСМСИсчисленные.ФизЛицо
	|
	|ГДЕ
	|	ВОСМСИсчисленные.Организация = &парамОбособленноеПодразделение И
	|	НАЧАЛОПЕРИОДА(ВОСМСИсчисленные.Период,Месяц) = НАЧАЛОПЕРИОДА(&парамПериодРегистрации,Месяц) И
	|	ВОСМСИсчисленные.ВидПлатежа = &парамВидПлатежа И 
	|	ВОСМСИсчисленные.ВидСтроки = &парамВидСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВОСМСИсчисленные.ФизЛицо";

	// НакопленныеДанные
	// уже начислено по другим регистраторам в данном расчетном периоде
	// применяется для расчета начислений "до предела" (например, экологические выплаты по дням/часам, но не более указанного размера МРП)
	//	Поля:
	//		ФизЛицо
	//		ВидРасчета
	//		УжеНачисленоВТекущемПериоде
	//		УжеНачисленоЗаВсюИсторию
	//	Описание:
	//		суммирует результаты по видам расчета и документам-основаниям
	//
	НакопленныеДанныеНачисленийТекст = 
	"ВЫБРАТЬ
	|	Основной.НомерСтроки,
	|	СУММА(НакопленныеДанные.Результат) КАК УжеНачисленоВТекущемПериоде
	|ПОМЕСТИТЬ ВТ_НакопленныеДанныеНачислений
	|ИЗ
	|	РегистрРасчета." + ИмяРегистра + " КАК Основной
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета." + ИмяРегистра + " КАК НакопленныеДанные
	|		ПО НакопленныеДанные.ФизЛицо = Основной.ФизЛицо 
	|			И НакопленныеДанные.ВидРасчета = Основной.ВидРасчета 
	|			И " + ?(ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций", 
					"НакопленныеДанные.ПериодДействия = Основной.ПериодДействия",
					"НАЧАЛОПЕРИОДА(НакопленныеДанные.ПериодРегистрации, МЕСЯЦ) = НАЧАЛОПЕРИОДА(Основной.ПериодРегистрации, МЕСЯЦ)") + "
	|			И НакопленныеДанные.Организация = Основной.Организация 
	|			И НакопленныеДанные.Сотрудник = Основной.Сотрудник 
	|			И (НакопленныеДанные.Регистратор <> Основной.Регистратор
	|				ИЛИ НЕ НакопленныеДанные.Авторасчет)
	|
	|ГДЕ
	|	Основной.Регистратор = &парамРегистратор
	|	И Основной.Авторасчет
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки";

	// НакопленныеДанные
	// уже начислено по другим регистраторам в данном расчетном периоде и за всю историю
	// применяется для расчета удержаний "нарастающим итогом за месяц" по головной организации
	//	Поля:
	//		ФизЛицо
	//		ДокументОснование
	//		ВидРасчета
	//		УжеНачисленоВТекущемПериоде
	//		УжеНачисленоЗаВсюИсторию
	//	Описание:
	//		суммирует результаты по видам расчета и документам-основаниям
	//
	НакопленныеДанныеТекст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР 
	|			КОГДА НакопленныеДанные.ПериодРегистрации  = Основной.ПериодРегистрации 
	|					И НакопленныеДанные.ОбособленноеПодразделение = Основной.ОбособленноеПодразделение
	|				ТОГДА НакопленныеДанные.Результат 
	|			ИНАЧЕ 0 
	|		КОНЕЦ) КАК УжеНачисленоВТекущемПериоде,
	|	СУММА(ВЫБОР 
	|			КОГДА НакопленныеДанные.ПериодРегистрации <= Основной.ПериодРегистрации 
	|				ТОГДА НакопленныеДанные.Результат 
	|			ИНАЧЕ 0 
	|		КОНЕЦ) КАК УжеНачисленоЗаВсюИсторию,
	|	НакопленныеДанные.ФизЛицо,
	|	НакопленныеДанные.ВидРасчета,
	|	НакопленныеДанные.ДокументОснование
	|ПОМЕСТИТЬ ВТ_НакопленныеДанные
	|ИЗ
	|	РегистрРасчета." + ИмяРегистра + " КАК Основной
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета." + ИмяРегистра + " КАК НакопленныеДанные
	|		ПО НакопленныеДанные.ФизЛицо = Основной.ФизЛицо 
	|			И НакопленныеДанные.ВидРасчета = Основной.ВидРасчета 
	|			И НакопленныеДанные.ПериодРегистрации <= Основной.ПериодРегистрации 
	|			И НакопленныеДанные.Организация = Основной.Организация 
	|			И НакопленныеДанные.ДокументОснование = Основной.ДокументОснование 
	|			И НакопленныеДанные.Регистратор <> Основной.Регистратор
	|
	|ГДЕ
	|	Основной.Регистратор = &парамРегистратор
	|	И Основной.Авторасчет
	|
	|СГРУППИРОВАТЬ ПО
	|	НакопленныеДанные.ФизЛицо,
	|	НакопленныеДанные.ВидРасчета,
	|	НакопленныеДанные.ДокументОснование";
	
	// СдельныйЗаработокОрганизацииТекст
	//	Поля:
	//		ОсновнойНомерСтроки - номер строки расчитываемых движений
	//		РазмерЗаработка - размер сдельного заработка
	//	Описание:
	//		получает размер сдельного заработка для начислений со способом расчета "Сдельный заработок"
	//
	СдельныйЗаработокОрганизацииТекст = "ВЫБРАТЬ
	|	Начисления.НомерСтроки КАК ОсновнойНомерСтроки,
	|	СУММА(ФактическаяВыработка.Выработка) КАК СуммаЗаработка
	|ПОМЕСТИТЬ ВТ_СдельныйЗаработокОрганизации
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
	|						Регистратор = &парамРегистратор 
	|						И Авторасчет) КАК Начисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ФактическаяВыработкаРаботниковОрганизаций КАК ФактическаяВыработка
	|		ПО ФактическаяВыработка.Организация = Начисления.Организация 
	|			И ФактическаяВыработка.Сотрудник = Начисления.Сотрудник 
	|			И (ФактическаяВыработка.Период МЕЖДУ Начисления.ПериодДействияНачало И Начисления.ПериодДействияКонец)
	|
	|ГДЕ
	|	Начисления.Регистратор = &парамРегистратор
	|	И Начисления.Авторасчет
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.НомерСтроки";
	
	// СдельныйЗаработокКомпанииТекст
	//	Поля:
	//		ОсновнойНомерСтроки - номер строки расчитываемых движений
	//		РазмерЗаработка - размер сдельного заработка
	//	Описание:
	//		получает размер сдельного заработка для начислений со способом расчета "Сдельный заработок"
	//
	СдельныйЗаработокКомпанииТекст = 
	"ВЫБРАТЬ
	|	Начисления.НомерСтроки КАК ОсновнойНомерСтроки,
	|	СУММА(ФактическаяВыработка.Выработка) КАК СуммаЗаработка
	|ПОМЕСТИТЬ ВТ_СдельныйЗаработокКомпании
	|ИЗ
	|	РегистрРасчета.УправленческиеНачисления.ФактическийПериодДействия(
	|						Регистратор = &парамРегистратор
	|						И Авторасчет) КАК Начисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ФактическаяВыработкаРаботников КАК ФактическаяВыработка
	|		ПО ФактическаяВыработка.Физлицо = Начисления.ФизЛицо 
	|			И (ФактическаяВыработка.Период МЕЖДУ Начисления.ПериодДействияНачало И Начисления.ПериодДействияКонец)
	|
	|ГДЕ
	|	Начисления.Регистратор = &парамРегистратор
	|	И Начисления.Авторасчет
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.НомерСтроки";
	
	// ВремяПоТабелю
	//	данные по отработанному времени и норме времени по методу "сплошной регистрации" в текущем периоде регистрации
	//	Поля 
	//		НомерСтроки
	//		ОтработаноДнейПоТабелю
	//		ОтработаноЧасовПоТабелю
	//		ОтработаноЧасовПоТабелюОтклонение
	//		НормаДнейПоТабелюЗаМесяц
	//		НормаЧасовПоТабелюЗаМесяц
	//		НормаДнейПоТабелюПоСтрокеРасчета
	//		НормаЧасовПоТабелюПоСтрокеРасчета
	//      НормаЧасовПоТабелюПоСтрокеРасчетаОтклонение
	//
	//	Описание
	//	Суммируем отработанное время и норму времени в заданном периоде действия для каждой строки начисления
	//	из регистра РабочееВремяРаботниковОрганизаций 
	
	ВремяПоТабелюТекст = 
	"ВЫБРАТЬ
	|	Основной.НомерСтроки КАК НомерСтроки,
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец
	|					И (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ОтработанноеВремя.ВидИспользованияРабочегоВремени
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни))
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)))
	|					И ОтработанноеВремя.ВидВремениОтсутствуетВДокументе = ЛОЖЬ // исключаем сводную в целом за месяц норму из табеля, которая не относится к меньшему периоду
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьНормаДнейПоТабелюПоСтрокеРасчета,
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец
	|					И (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ОтработанноеВремя.ВидИспользованияРабочегоВремени
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни))
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)))
	|					И ОтработанноеВремя.ВидВремениОтсутствуетВДокументе = ЛОЖЬ // исключаем сводную в целом за месяц норму из табеля, которая не относится к меньшему периоду
	|				ТОГДА ОтработанноеВремя.ДнейПоНорме
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НормаДнейПоТабелюПоСтрокеРасчета,
	|
	|
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец
	|					И (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ОтработанноеВремя.ВидИспользованияРабочегоВремени
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни))
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)))
	|					И ОтработанноеВремя.ВидВремениОтсутствуетВДокументе = ЛОЖЬ // исключаем сводную в целом за месяц норму из табеля, которая не относится к меньшему периоду
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьНормаЧасовПоТабелюПоСтрокеРасчета,
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец
	|					И (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ОтработанноеВремя.ВидИспользованияРабочегоВремени
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни))
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)))
	|					И ОтработанноеВремя.ВидВремениОтсутствуетВДокументе = ЛОЖЬ // исключаем сводную в целом за месяц норму из табеля, которая не относится к меньшему периоду
	|				ТОГДА ОтработанноеВремя.ЧасовПоНорме
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НормаЧасовПоТабелюПоСтрокеРасчета,
	|
	|
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени.ВидВремени В (&ОтработанноеВПределахНормы, &ЦелодневноеНеотработанное)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьНормаДнейПоТабелюЗаМесяц,
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени.ВидВремени В (&ОтработанноеВПределахНормы, &ЦелодневноеНеотработанное)
	|				ТОГДА ОтработанноеВремя.ДнейПоНорме
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НормаДнейПоТабелюЗаМесяц,
	|
	|
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени.ВидВремени В (&ОтработанноеВПределахНормы, &ЦелодневноеНеотработанное, &ЧасовоеНеотработанное)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьНормаЧасовПоТабелюЗаМесяц,
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени.ВидВремени В (&ОтработанноеВПределахНормы, &ЦелодневноеНеотработанное, &ЧасовоеНеотработанное)
	|				ТОГДА ОтработанноеВремя.ЧасовПоНорме
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НормаЧасовПоТабелюЗаМесяц,
	|
	|
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени.ВидВремени = &ЧасовоеНеотработанное
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьЧасовПоТабелюЗаМесяцОтклонение,
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени.ВидВремени = &ЧасовоеНеотработанное
	|				ТОГДА ОтработанноеВремя.ЧасовПоНорме
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЧасовПоТабелюЗаМесяцОтклонение,
	|
	|
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец
	|					И Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени = &ОтработанноеВПределахНормы
	|					И ОтработанноеВремя.ВидИспользованияРабочегоВремени.ВидВремени = &ЧасовоеНеотработанное
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьНормаЧасовПоТабелюПоСтрокеРасчетаОтклонение,
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец
	|					И Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени = &ОтработанноеВПределахНормы
	|					И ОтработанноеВремя.ВидИспользованияРабочегоВремени.ВидВремени = &ЧасовоеНеотработанное
	|				ТОГДА ОтработанноеВремя.ЧасовПоНорме
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НормаЧасовПоТабелюПоСтрокеРасчетаОтклонение,
	|
	|
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец
	|					И (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ОтработанноеВремя.ВидИспользованияРабочегоВремени
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни))
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьОтработаноДнейПоТабелю,
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец
	|					И (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ОтработанноеВремя.ВидИспользованияРабочегоВремени
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни))
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)))
	|				ТОГДА ОтработанноеВремя.Дней
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОтработаноДнейПоТабелю,
	|
	|
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец
	|					И (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ОтработанноеВремя.ВидИспользованияРабочегоВремени
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни))
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьОтработаноЧасовПоТабелю,
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец
	|					И (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ОтработанноеВремя.ВидИспользованияРабочегоВремени
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни))
	|					   ИЛИ (Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни)
	|                            И ОтработанноеВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Праздники)))
	|				ТОГДА ОтработанноеВремя.Часов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОтработаноЧасовПоТабелю,
	|
	|
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец
	|					И Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени = &ОтработанноеВПределахНормы
	|					И ОтработанноеВремя.ВидИспользованияРабочегоВремени.ВидВремени = &ЧасовоеНеотработанное
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьОтработаноЧасовПоТабелюОтклонение,
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.Период МЕЖДУ Основной.ПериодДействияНачало И Основной.ПериодДействияКонец
	|					И Основной.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени = &ОтработанноеВПределахНормы
	|					И ОтработанноеВремя.ВидИспользованияРабочегоВремени.ВидВремени = &ЧасовоеНеотработанное
	|				ТОГДА ОтработанноеВремя.Часов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОтработаноЧасовПоТабелюОтклонение,
	|
	|	МАКСИМУМ(ВЫБОР
	|				КОГДА НЕ (ОтработанноеВремя.ВЦеломЗаПериод ЕСТЬ NULL)
	|						И ОтработанноеВремя.ВЦеломЗаПериод
	|						И НЕ (ПроверкаКоличестваЗаписей.ФизЛицо ЕСТЬ NULL)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ) КАК ОшибкаВводаОтработанногоВремени
	|ПОМЕСТИТЬ ВТ_ВремяПоТабелю
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК ОтработанноеВремя
	|		ПО Основной.Сотрудник = ОтработанноеВремя.Сотрудник
	|			И Основной.Организация = ОтработанноеВремя.Организация
	|			И (ОтработанноеВремя.Период МЕЖДУ Основной.ПериодДействия И КОНЕЦПЕРИОДА(Основной.ПериодДействия, МЕСЯЦ))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ПроверкаКоличестваЗаписей
	|		ПО Основной.Сотрудник = ПроверкаКоличестваЗаписей.Сотрудник
	|			И Основной.Организация = ПроверкаКоличестваЗаписей.Организация
	|			И Основной.ПериодДействия = ПроверкаКоличестваЗаписей.ПериодДействия
	|			И Основной.ПериодРегистрации >= ПроверкаКоличестваЗаписей.ПериодРегистрации
	|			И Основной.ВидРасчета = ПроверкаКоличестваЗаписей.ВидРасчета
	|			И ((НЕ(Основной.Регистратор = ПроверкаКоличестваЗаписей.Регистратор
	|					И Основной.НомерСтроки = ПроверкаКоличестваЗаписей.НомерСтроки)))
	|			И Основной.Сторно = ПроверкаКоличестваЗаписей.Сторно
	|			И ОтработанноеВремя.ВЦеломЗаПериод
	|			И НЕ ОтработанноеВремя.ВидВремениОтсутствуетВДокументе
	|ГДЕ
	|	Основной.Регистратор = &парамРегистратор
	|	И Основной.Авторасчет
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.НомерСтроки";
	
    
    ОсновнойГрафикРаботыПредприятия = Константы.ОсновнойГрафикРаботыПредприятия.Получить();
    ДанныеПроизводственногоКалендаряТекст =  
    "ВЫБРАТЬ
    |   ГрафикиРаботы.Ссылка КАК ГрафикРаботыПредприятия,
    |   ГрафикиРаботы.Наименование,
    |   ГрафикиРаботы.ВидГрафика,
    |   ГрафикиРаботы.ПервыйВыходной,
    |   ГрафикиРаботы.ВторойВыходной,
    |   ГрафикиРаботы.ДлительностьРабочейНедели,
    |   ГрафикиРаботы.Представление
    |ПОМЕСТИТЬ ВТ_ГрафикРаботыПредприятия
    |ИЗ
    |   Справочник.ГрафикиРаботы КАК ГрафикиРаботы
    |ГДЕ
    |   ГрафикиРаботы.Ссылка = &ОсновнойГрафикРаботыПредприятия
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
    |   ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеКалендаря.ДатаКалендаря), 0) / 12 КАК СреднееКоличествоКалендарныхДней,
    |   ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
    |               КОГДА НЕ ДанныеКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник)
    |                   ТОГДА ДанныеКалендаря.ДатаКалендаря
    |               ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
    |           КОНЕЦ) - 1, 0) / 12 КАК СреднееКоличествоКалендарныхДнейБезПраздничных,
    |   СУММА(ВЫБОР
    |           КОГДА ГрафикиРаботы.ВидГрафика = ЗНАЧЕНИЕ(Перечисление.ВидыРабочихГрафиков.Пятидневка)
    |               ТОГДА ВЫБОР
    |                       КОГДА ГрафикиРаботы.ДлительностьРабочейНедели = 40
    |                           ТОГДА ЕСТЬNULL(ВЫБОР
    |                                       КОГДА ДанныеКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
    |                                           ТОГДА 8
    |                                       ИНАЧЕ 0
    |                                   КОНЕЦ, 0)
    |                       ИНАЧЕ ЕСТЬNULL(ВЫБОР
    |                                   КОГДА ДанныеКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
    |                                       ТОГДА 7.2
    |                                   ИНАЧЕ 0
    |                               КОНЕЦ, 0)
    |                   КОНЕЦ
    |           КОГДА ГрафикиРаботы.ВидГрафика = ЗНАЧЕНИЕ(Перечисление.ВидыРабочихГрафиков.Шестидневка)
    |               ТОГДА ВЫБОР
    |                       КОГДА ГрафикиРаботы.ДлительностьРабочейНедели = 40
    |                           ТОГДА ЕСТЬNULL(ВЫБОР
    |                                       КОГДА ДанныеКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
    |                                           ТОГДА ВЫБОР
    |                                                   КОГДА ПеренесенныеРабочиеДни.ВыходнойДень ЕСТЬ NULL
    |                                                       ТОГДА 7
    |                                                   ИНАЧЕ 5
    |                                               КОНЕЦ
    |                                       КОГДА ДанныеКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Суббота)
    |                                           ТОГДА ВЫБОР
    |                                                   КОГДА ПеренесенныеРабочиеДни.ВыходнойДень ЕСТЬ NULL
    |                                                       ТОГДА 5
    |                                                   ИНАЧЕ 7
    |                                               КОНЕЦ
    |                                       ИНАЧЕ 0
    |                                   КОНЕЦ, 0)
    |                       КОГДА ГрафикиРаботы.ДлительностьРабочейНедели = 36
    |                           ТОГДА ЕСТЬNULL(ВЫБОР
    |                                       КОГДА ДанныеКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
    |                                               ИЛИ ДанныеКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Суббота)
    |                                           ТОГДА 6
    |                                       ИНАЧЕ 0
    |                                   КОНЕЦ, 0)
    |                   КОНЕЦ
    |           ИНАЧЕ ЕСТЬNULL(ВЫБОР
    |                       КОГДА ДанныеКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
    |                               ИЛИ ДанныеКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Суббота)
    |                           ТОГДА ЕСТЬNULL(ВЫБОР
    |                                       КОГДА ДанныеКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
    |                                           ТОГДА ВЫБОР
    |                                                   КОГДА ПеренесенныеРабочиеДни.ВыходнойДень ЕСТЬ NULL
    |                                                       ТОГДА 7
    |                                                   ИНАЧЕ 5
    |                                               КОНЕЦ
    |                                       КОГДА ДанныеКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Суббота)
    |                                           ТОГДА ВЫБОР
    |                                                   КОГДА ПеренесенныеРабочиеДни.ВыходнойДень ЕСТЬ NULL
    |                                                       ТОГДА 5
    |                                                   ИНАЧЕ 7
    |                                               КОНЕЦ
    |                                       ИНАЧЕ 0
    |                                   КОНЕЦ, 0)
    |                   КОНЕЦ, 0)
    |       КОНЕЦ) / 12 КАК СреднемесячноеЧислоЧасов,
    |   ДанныеКалендаря.Год,
    |   ГрафикиРаботы.ГрафикРаботыПредприятия
    |ПОМЕСТИТЬ ВТ_ДанныеКалендаря
    |ИЗ
    |   РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК ДанныеКалендаря
    |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГрафикРаботыПредприятия КАК ГрафикиРаботы
    |       ПО (ИСТИНА)
    |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПеренесенныеРабочиеДни КАК ПеренесенныеРабочиеДни
    |       ПО ДанныеКалендаря.Год = ПеренесенныеРабочиеДни.Год
    |           И ДанныеКалендаря.ДатаКалендаря = ПеренесенныеРабочиеДни.РабочийДень
    |
    |СГРУППИРОВАТЬ ПО
    |   ДанныеКалендаря.Год,
    |   ГрафикиРаботы.ГрафикРаботыПредприятия";
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	НеобходимаБаза = НеобходимыеДанные.База;
	НеобходимГрафик = НеобходимыеДанные.НормаВремени ИЛИ НеобходимыеДанные.ОтработаноВремени ИЛИ НеобходимыеДанные.НормаВремениЗаМесяц;

	Если ИмяРегистра = "ДополнительныеНачисленияРаботниковОрганизаций" ИЛИ 
			ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций" ИЛИ 
			ИмяРегистра = "УправленческиеНачисления" ИЛИ 
			ИмяРегистра = "УдержанияРаботниковОрганизаций" ИЛИ
			ИмяРегистра = "УправленческиеУдержания" Тогда
		Условие = "ВидРасчета.КатегорияРасчета = &парамКатегорияНачисления И Регистратор = &парамРегистратор И Авторасчет";
		ВнешнееУсловие = "Основной.ВидРасчета.КатегорияРасчета = &парамКатегорияНачисления И Основной.Регистратор = &парамРегистратор И Основной.Авторасчет";
	КонецЕсли;
	
	// параметры запросов
	Запрос.УстановитьПараметр("парамРегистратор", 		  Регистратор);
    Запрос.УстановитьПараметр("парамПустойСпособРасчета", Перечисления.СпособыРасчетаОплатыТруда.ПустаяСсылка());
    Запрос.УстановитьПараметр("парамПериодРегистрации",   ПериодРегистрации);

	Запрос.Текст = СотрудникиДляПерерасчетаТекст;
	Запрос.Выполнить();
    СотрудникиДляПерерасчетаТекст = "ВТСотрудникиДляПерерасчета";

	Если Перерасчет тогда
		Если Сотрудники = НеОпределено Тогда

			Условие = Условие + " И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ " + СотрудникиДляПерерасчетаТекст +")";
			// в данном случае внешнее условие не дополняется - выполняется внутреннее 
			// соединение с таблицей ФизлицаДляПерерасчета
		Иначе
			Условие = Условие + " И Сотрудник В (&парамСотрудникиПерерасчета)";
			ВнешнееУсловие = ВнешнееУсловие + " И Основной.Сотрудник В (&парамСотрудникиПерерасчета)";
			Запрос.УстановитьПараметр("парамСотрудникиПерерасчета", Сотрудники);
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяРегистра = "ДополнительныеНачисленияРаботниковОрганизаций" ИЛИ
			ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций" Тогда
    	// измерения сопоставления
		Измерения = Новый Массив(1);
		Измерения[0] = "Сотрудник";
		// для начислений сопоставляемые измерения основного и базового регистов совпадают
		Запрос.УстановитьПараметр("парамИзмеренияОсновного", Измерения);
		Запрос.УстановитьПараметр("парамИзмеренияБазового",  Измерения);
		// категория начисления
    	Запрос.УстановитьПараметр("парамКатегорияНачисления", КатегорияРасчета);
    	// список способов расчета, являющихся почасовыми отклонениями
    	Запрос.УстановитьПараметр("парамСписокПочасовыхОтклонений", ПроведениеРасчетов.ПолучитьСписокНачисленийПочасовыхОтклонений());
	ИначеЕсли ИмяРегистра = "УправленческиеНачисления" ИЛИ 
				ИмяРегистра = "УправленческиеУдержания" Тогда
    	// измерения сопоставления для управленческих регистров
		Измерения = Новый Массив(1);
		Измерения[0] = "ФизЛицо";
		// для начислений сопоставляемые измерения основного и базового регистов совпадают
		Запрос.УстановитьПараметр("парамИзмеренияОсновного", Измерения);
		Запрос.УстановитьПараметр("парамИзмеренияБазового",  Измерения);
		// категория начисления
    	Запрос.УстановитьПараметр("парамКатегорияНачисления", КатегорияРасчета);
	Иначе
		// измерения сопоставления для удержаний
		Измерения = Новый Массив(2);
		Измерения[0] = "ФизЛицо";
		Измерения[1] = "Организация";
		// для удержаний сопоставляемые измерения основного и базового регистов разные
		Запрос.УстановитьПараметр("парамИзмеренияОсновного", Измерения);
		Запрос.УстановитьПараметр("парамИзмеренияБазового",  Измерения);
		// категория удержания
    	Запрос.УстановитьПараметр("парамКатегорияНачисления", КатегорияРасчета);
	КонецЕсли;
		
	ПроцентныеПоказатели = Новый Массив;
	ПроцентныеПоказатели.Добавить(Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная);
	ПроцентныеПоказатели.Добавить(Перечисления.ТипыПоказателейСхемМотивации.Процентный);
	Запрос.УстановитьПараметр("ПроцентныеПоказатели", ПроцентныеПоказатели);
	
	ШкальныеПоказатели = Новый Массив;
	ШкальныеПоказатели.Добавить(Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная);
	ШкальныеПоказатели.Добавить(Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая);
	Запрос.УстановитьПараметр("ШкальныеПоказатели", ШкальныеПоказатели);				

	Если НеобходимыеДанные.ПоказателиСхемМотивации Тогда
		
       	ИмяПВР = СтрЗаменить(ИмяРегистра, "Работников", "");
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Основной.ВидРасчета КАК ВидРасчета
		|ПОМЕСТИТЬ ВТВидыРасчета
		|ИЗ
		|	РегистрРасчета." + ИмяРегистра + " КАК Основной
		|ГДЕ
		|	" + ВнешнееУсловие + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидРасчета";
		Запрос.Выполнить();	
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Показатели.Ссылка КАК Ссылка,
		|	Показатели.НомерСтроки,
		|	Показатели.Показатель
		|ПОМЕСТИТЬ ВТВСЕПоказатели
		|ИЗ
		|	ПланВидовРасчета." + ИмяПВР + ".Показатели КАК Показатели
		|ГДЕ
		|	Показатели.Ссылка В
		|			(ВЫБРАТЬ
		|				Основной.ВидРасчета
		|			ИЗ
		|				ВТВидыРасчета КАК Основной)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка";
		Запрос.Выполнить();
		
		// Получим максимальное число показателей			
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МАКСИМУМ(Показатели.НомерСтроки) КАК КолВоПоказателей
		|ИЗ
		|	ВТВСЕПоказатели КАК Показатели";
		
		ВыборкаКоличестваПоказателей = Запрос.Выполнить().Выбрать();
		ВыборкаКоличестваПоказателей.Следующий();
		КоличествоПоказателей = ВыборкаКоличестваПоказателей.КолВоПоказателей;		
		Если КоличествоПоказателей = NULL Тогда
			КоличествоПоказателей = 0;
		КонецЕсли;
		
		// получим временную таблицу с расчетом показателей
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Основной.ВидРасчета КАК ВидРасчета,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ВСЕПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.РасчетнаяБаза)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК РасчетИмеетБазовыеНачисления,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ВСЕПоказатели.Показатель В (ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВДнях),ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВЧасах))
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК РасчетИмеетОтработанноеВремя,
		|	МАКСИМУМ(ВСЕПоказатели.НомерСтроки) КАК КоличествоПоказателей";
		Для СчПоказателей = 1 По КоличествоПоказателей Цикл
			Запрос.Текст = Запрос.Текст + ",
			|	ВЫБОР
			|		КОГДА Показатели" + СчПоказателей + ".Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.РасчетнаяБаза)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК Показатель" + СчПоказателей + "ЯвляетсяРасчетнойБазой,
			|	Показатели" + СчПоказателей + ".Показатель.Наименование КАК Показатель" + СчПоказателей + "Наименование,
			|	Показатели" + СчПоказателей + ".Показатель КАК Показатель" + СчПоказателей;
		КонецЦикла;
		Запрос.Текст = Запрос.Текст + "
		|ПОМЕСТИТЬ ВТПоказатели
		|ИЗ
		|	ВТВидыРасчета КАК Основной
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВСЕПоказатели КАК ВСЕПоказатели
		|		ПО Основной.ВидРасчета = ВСЕПоказатели.Ссылка";
		Для СчПоказателей = 1 По КоличествоПоказателей Цикл
			Запрос.Текст = Запрос.Текст + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВСЕПоказатели КАК Показатели"+ СчПоказателей + "
		|		ПО Основной.ВидРасчета = Показатели" + СчПоказателей + ".Ссылка 
		|			И Показатели"+ СчПоказателей + ".НомерСтроки = " + СчПоказателей;
		КонецЦикла;
		Запрос.Текст = Запрос.Текст + "
		|
		|СГРУППИРОВАТЬ ПО
		|	Основной.ВидРасчета";
		Для СчПоказателей = 1 По КоличествоПоказателей Цикл
			Запрос.Текст = Запрос.Текст + ",
			|	ВЫБОР
			|		КОГДА Показатели" + СчПоказателей + ".Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.РасчетнаяБаза)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ,
			|	Показатели" + СчПоказателей + ".Показатель";
		КонецЦикла;
		Запрос.Текст = Запрос.Текст + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидРасчета";
		
		Запрос.Выполнить();	
		
		Показатель1Текст = ПолучитьТекстПоказателя(НеобходимыеДанные, ИмяРегистра);

		Если КоличествоПоказателей > 6 Тогда
			// получим текст запроса для предопределенных показателей
			Показатель1ТекстПредопределенный = ПолучитьТекстПоказателя(НеобходимыеДанные, ИмяРегистра, Истина);
		КонецЕсли;

	КонецЕсли;

	/////////////////////////////////////////////////////////////////////
	// Далее идут тексты запросов для расчета "от обратного"
	//
	
	Если НеобходимыеДанные.РасчетОтОбратного Тогда
	
		// формирование текстов запроса для расчета "от обратного" 
		СтруктураТекстЗапроса = ПолучитьДанныеДляРасчетаОтОбратного(ИмяРегистра,
																	КатегорияРасчета,
																	НеобходимыеДанные,
																	Регистратор,
																	Организация,
																	ОбособленноеПодразделение,
																	УчетнаяПолитикаПоПерсоналу,
																	ПериодРегистрации,
																	Перерасчет,
																	Сотрудники,
																	Налогоплательщик,
																	КомментироватьРасчет,
																	Запрос,
																	ВнешнееУсловие);
	
		РасчетОтОбратногоПоляТекст = СтруктураТекстЗапроса.РасчетОтОбратногоПоляТекст; // строка с полями запроса
		РасчетОтОбратногоСоединенияТекст = СтруктураТекстЗапроса.РасчетОтОбратногоСоединенияТекст; // строка с соединениями в запросе		
		
	КонецЕсли; // Если НеобходимыеДанные.РасчетОтОбратного
	
	МассивСтажей = НеобходимыеДанные["ПроизвольныеСтажи"];

	Если ИмяРегистра = "ОсновныеНачисленияРаботниковОрганизаций" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ 
		|Основной.Регистратор Как Регистратор, 
		|Основной.НомерСтроки Как НомерСтроки, 
		|Основной.Сотрудник Как Сотрудник,
		|Основной.Сотрудник.Наименование Как СотрудникНаименование,
		|Основной.Сотрудник.ФизЛицо КАК ФизЛицо,
		|Основной.ВидРасчета.Наименование КАК ВидРасчетаНаименование,
		|Основной.ПериодДействияНачало Как ПериодДействияНачало, 
		|Основной.ПериодДействияКонец Как ПериодДействияКонец, 
		|Основной.ВидРасчета.ЗачетОтработанногоВремени Как ЗачетОтработанногоВремени, 
		|Основной.ВидРасчета.ЗачетНормыВремени Как ЗачетНормыВремени, 
		|Основной.ВидРасчета.УчетОтработанногоВремени Как УчетОтработанногоВремени, 
		|Основной.ВидУчетаВремени Как ВидУчетаВремени, 
		|ВЫБОР 
		|	КОГДА Основной.ВидРасчета.СпособРасчета = &парамПустойСпособРасчета 
		|		ТОГДА Основной.ВидРасчета 
		|	ИНАЧЕ Основной.ВидРасчета.СпособРасчета 
		|	КОНЕЦ Как СпособРасчета,
		|ВЫБОР 
		|	КОГДА Основной.ВидРасчета.СпособРасчета В (&парамСписокПочасовыхОтклонений) 
		|		ТОГДА ИСТИНА 
		|	ИНАЧЕ ЛОЖЬ 
		|КОНЕЦ КАК ВидРасчетаЯвляетсяПочасовымОтклонением,
		|ЕСТЬNULL(ПорядокОкругленияВР.ПорядокОкругления, ПорядокОкругленияОбщ.ПорядокОкругления) КАК ПорядокОкругления,
		|ЕСТЬNULL(ПорядокОкругленияВР.МетодОкругления, ПорядокОкругленияОбщ.МетодОкругления) КАК МетодОкругления";
		
		Если КомментироватьРасчет Тогда
			// прочие общие поля, необходимые для комментариев к расчету
			ТекстЗапроса = ТекстЗапроса + ",
			|ЛОЖЬ КАК ВычитатьИзБазыИПН,
			|ЛОЖЬ КАК ВычитатьИзБазыВОСМС,
			|ЛОЖЬ КАК ВычитатьИзБазыОПВ";
		КонецЕсли;

 		Если НеобходимыеДанные.ПоказателиСхемМотивации Тогда
			
			ДобавитьПоказатели(НеобходимыеДанные, КоличествоПоказателей, ТекстЗапроса, Показатель1Текст, Показатель1ТекстПредопределенный);

		КонецЕсли;
		
		Если НеобходимаБаза Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|База.РезультатБаза";
		КонецЕсли;
        
        Если НеобходимыеДанные.ИзменениеЕдиныхПравил2024 Тогда
            ТекстЗапроса = ТекстЗапроса + ", 
            |ДанныеКалендаря.СреднееКоличествоКалендарныхДней,
            |ДанныеКалендаря.СреднееКоличествоКалендарныхДнейБезПраздничных,
            |ДанныеКалендаря.СреднемесячноеЧислоЧасов,
            |ДанныеКалендаря.Год,
            |ДанныеКалендаря.ГрафикРаботыПредприятия,
            |ЕСТЬNULL(Основной.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ) КАК СуммированныйУчетРабочегоВремени,
            |РАЗНОСТЬДАТ(Основной.ПериодДействияНачало, Основной.ПериодДействияКонец, ДЕНЬ) + 1 КАК КоличествоКалендарныхДней
            |";             
        КонецЕсли;
        
		Если НеобходимыеДанные.НормаВремениЗаМесяц Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|ВЫБОР 
			|	КОГДА Основной.ГрафикРаботы ССЫЛКА Справочник.ГрафикиРаботыФизЛиц 
			|		ТОГДА ВЫБОР 
			|				КОГДА Основной.ВидУчетаВремени = &ПоЧасам 
			|					ТОГДА БалансРабочегоВремени.НормаЧасов 
			|				ИНАЧЕ БалансРабочегоВремени.НормаДней 
			|			  КОНЕЦ 
			|	ИНАЧЕ ДанныеГрафика.ОсновноеЗначениеНормаПериодДействия 
			|КОНЕЦ КАК ОсновноеЗначениеНормаПериодДействия,
			|ДанныеГрафика.ДополнительноеЗначениеНормаПериодДействия,
			|
			|ЕСТЬNULL(ВремяПоТабелюТекст.ЕстьНормаЧасовПоТабелюЗаМесяц, 0) КАК ЕстьНормаЧасовПоТабелюЗаМесяц,
			|ВремяПоТабелюТекст.НормаЧасовПоТабелюЗаМесяц,
			|
			|ЕСТЬNULL(ВремяПоТабелюТекст.ЕстьЧасовПоТабелюЗаМесяцОтклонение, 0) КАК ЕстьЧасовПоТабелюЗаМесяцОтклонение,
			|ВремяПоТабелюТекст.ЧасовПоТабелюЗаМесяцОтклонение,
			|
			|ЕСТЬNULL(ВремяПоТабелюТекст.ЕстьНормаДнейПоТабелюЗаМесяц, 0) КАК ЕстьНормаДнейПоТабелюЗаМесяц,
			|ВремяПоТабелюТекст.НормаДнейПоТабелюЗаМесяц
			|";
		КонецЕсли;
		
		Если НеобходимыеДанные.НормаВремени Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|ДанныеГрафика.ОсновноеЗначениеНормаФактическийПериодДействия, 
			|ДанныеГрафика.ДополнительноеЗначениеНормаФактическийПериодДействия, 
			|ДанныеГрафика.ПроизводственныйКалендарьПятидневкаФактическийПериодДействия,
			|
			|ЕСТЬNULL(ВремяПоТабелюТекст.ЕстьНормаДнейПоТабелюПоСтрокеРасчета, 0) КАК ЕстьНормаДнейПоТабелюПоСтрокеРасчета,
			|ВремяПоТабелюТекст.НормаДнейПоТабелюПоСтрокеРасчета,
			|
			|ЕСТЬNULL(ВремяПоТабелюТекст.ЕстьНормаЧасовПоТабелюПоСтрокеРасчета, 0) КАК ЕстьНормаЧасовПоТабелюПоСтрокеРасчета,
			|ВремяПоТабелюТекст.НормаЧасовПоТабелюПоСтрокеРасчета,
			|
			|ЕСТЬNULL(ВремяПоТабелюТекст.ЕстьНормаЧасовПоТабелюПоСтрокеРасчетаОтклонение, 0) КАК ЕстьНормаЧасовПоТабелюПоСтрокеРасчетаОтклонение,
			|ВремяПоТабелюТекст.НормаЧасовПоТабелюПоСтрокеРасчетаОтклонение
			|";
		КонецЕсли;
		
		Если НеобходимыеДанные.ОтработаноВремени Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия Как ОтработаноВремениОсновное, 
			|ДанныеГрафика.ДополнительноеЗначениеФактическийПериодДействия Как ОтработаноВремениДополнительное, 
			|ДанныеГрафика.ПроизводственныйКалендарьПятидневкаФактическийПериодДействия Как ОтработаноВремениПроизводственныйГрафик,
			|
			|ЕСТЬNULL(ВремяПоТабелюТекст.ЕстьОтработаноДнейПоТабелю, 0) КАК ЕстьОтработаноДнейПоТабелю,
			|ВремяПоТабелюТекст.ОтработаноДнейПоТабелю КАК ОтработаноДнейПоТабелю,
			|
			|ЕСТЬNULL(ВремяПоТабелюТекст.ЕстьОтработаноЧасовПоТабелю, 0) КАК ЕстьОтработаноЧасовПоТабелю,
			|ВремяПоТабелюТекст.ОтработаноЧасовПоТабелю КАК ОтработаноЧасовПоТабелю,
			|
			|ЕСТЬNULL(ВремяПоТабелюТекст.ЕстьОтработаноЧасовПоТабелюОтклонение, 0) КАК ЕстьОтработаноЧасовПоТабелюОтклонение,
			|ВремяПоТабелюТекст.ОтработаноЧасовПоТабелюОтклонение КАК ОтработаноЧасовПоТабелюОтклонение
			|";
			
		КонецЕсли;
		
		Если НеобходимыеДанные.НормаВремениЗаМесяц ИЛИ НеобходимыеДанные.НормаВремени ИЛИ НеобходимыеДанные.ОтработаноВремени Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|ЕСТЬNULL(ВремяПоТабелюТекст.ОшибкаВводаОтработанногоВремени, ЛОЖЬ) КАК ОшибкаВводаОтработанногоВремени
			|";
		КонецЕсли;
		
		Если НеобходимыеДанные.СреднийЗаработок Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|ДанныеДляРасчетаСреднего.ОтработаноДней Как ОтработаноДней, 
			|ДанныеДляРасчетаСреднего.ОтработаноЧасов Как ОтработаноЧасов, 
			|ДанныеДляРасчетаСреднего.НормаЧасов Как НормаЧасов, 
			|ДанныеДляРасчетаСреднего.КалендарныхДней Как КалендарныхДней, 
			|ДанныеДляРасчетаСреднего.СреднийЗаработок Как СреднийЗаработок,
			|ДанныеДляРасчетаСреднего.ДатаНачалаРасчетногоПериода,
			|ДанныеДляРасчетаСреднего.ДатаОкончанияРасчетногоПериода,
			|ДанныеГрафика.ПроизводственныйКалендарьКалендарныеДниФактическийПериодДействия";
			
		КонецЕсли;
			
		Если НеобходимыеДанные.РазмерОграниченияПособия Тогда
			// размер ограничения пособия по нетрудоспособности
			ТекстЗапроса = ТекстЗапроса + ", 
			|ВЫБОР 
			|	КОГДА ВЫРАЗИТЬ(Основной.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ОграничениеПособия = &ОбщееОграничение 
			|		ТОГДА ЕСТЬNULL(РазмерОграниченияПособия.Размер, 0)
			|	ИНАЧЕ 0
			|КОНЕЦ КАК РазмерОграниченияБЛЗаМесяц,
			|ЕСТЬNULL(НакопленныеДанныеПособия.УжеНачисленоВТекущемПериоде, 0) КАК УжеНачисленоВТекущемПериодеБЛ,
			|ВЫБОР 
			|	КОГДА ВЫРАЗИТЬ(Основной.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ОграничениеПособия = &ОбщееОграничение 
			|		ТОГДА ВЫБОР 
			|				КОГДА РазмерОграниченияПособия.Размер ЕСТЬ NULL  
			|					ТОГДА 0 
			|				ИНАЧЕ ВЫБОР 
			|						КОГДА ЕСТЬNULL(НакопленныеДанныеПособия.УжеНачисленоВТекущемПериоде, 0) > ЕСТЬNULL(РазмерОграниченияПособия.Размер, 0) 
			|							ТОГДА 0 
			|						ИНАЧЕ ЕСТЬNULL(РазмерОграниченияПособия.Размер, 0) - ЕСТЬNULL(НакопленныеДанныеПособия.УжеНачисленоВТекущемПериоде, 0)
			|					  КОНЕЦ 
			|			  КОНЕЦ 
			|	ИНАЧЕ 0 
			|КОНЕЦ КАК РазмерОграничения,
			|ВЫБОР 
			|	КОГДА ВЫРАЗИТЬ(Основной.Регистратор КАК Документ.НачислениеПоБольничномуЛисту).ОграничениеПособия = &ОбщееОграничение 
			|		ТОГДА ИСТИНА 
			|	ИНАЧЕ ЛОЖЬ 
			|КОНЕЦ КАК ПроверятьОграничениеПособия";
			Запрос.УстановитьПараметр("ОбщееОграничение", Перечисления.ВидыОграниченияПособия.ОбщееОграничение);
		КонецЕсли;
		
		Если НеобходимыеДанные.РазмерРегламентированныхРасчетныхПоказателей Тогда
			// размер регламентированных расчетных показателей
			ТекстЗапроса = ТекстЗапроса + ", 
			|РазмерРегламентированныхРасчетныхПоказателей.РазмерМРП КАК РазмерМесячногоРасчетногоПоказателя,
			|РазмерРегламентированныхРасчетныхПоказателей.РазмерМЗП КАК РазмерМинимальнойЗаработнойПлаты";			
		КонецЕсли;
		
		Если НеобходимыеДанные.НакопленныеДанныеПоВидуРасчета Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|ЕСТЬNULL(НакопленныеДанныеНачислений.УжеНачисленоВТекущемПериоде, 0) КАК УжеНачисленоВТекущемПериоде";
		КонецЕсли;
		
		Если НеобходимыеДанные.СдельныйЗаработок Тогда
			// размер сдельного заработка
			ТекстЗапроса = ТекстЗапроса + ", 
			|ДанныеОСдельномЗаработке.СуммаЗаработка КАК РазмерСдельногоЗаработка";
		КонецЕсли;
		
		Если НеобходимыеДанные.РасчетОтОбратного Тогда
			// данные, для расчета от обратного
			ТекстЗапроса = ТекстЗапроса + ", 
			|" + РасчетОтОбратногоПоляТекст;
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|ИЗ 
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций Как Основной
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации) КАК ПорядокОкругленияВР
		|		ПО Основной.ВидРасчета = ПорядокОкругленияВР.ВидРасчета
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(
		|			&парамПериодРегистрации,
		|			ВидРасчета = НЕОПРЕДЕЛЕНО) КАК ПорядокОкругленияОбщ	
		|		ПО ИСТИНА";
		
		Если НеобходимыеДанные.ПоказателиСхемМотивации Тогда

			ТекстЗапроса = ТекстЗапроса + "
            |ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
			|ПО Показатели.ВидРасчета = Основной.ВидРасчета";
			
			Для Каждого ВидСтажа Из МассивСтажей Цикл
				
				КодСтажа = "Стаж_" + СокрП(ВидСтажа.Значение); // код стажа
				Запрос.УстановитьПараметр(КодСтажа, ВидСтажа.Ключ); // ссылка на вид стажа
				
				ТекстЗапроса = ТекстЗапроса + "
				
				|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.Стажи КАК " + КодСтажа + "
				|	ПО Основной.Сотрудник.ФизЛицо = " + КодСтажа + ".Ссылка И
				|	&" + КодСтажа + " = " + КодСтажа + ".ВидСтажа";
				
				
			КонецЦикла;	
			
		КонецЕсли;

		Если НеобходимыеДанные.Стаж Тогда
			// присоединение к данным о стаже
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДанныеОСтаже			
			|	ПО Основной.Сотрудник = ДанныеОСтаже.Сотрудник
			|		И Основной.Организация = ДанныеОСтаже.Организация
			|		И ДанныеОСтаже.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)";
		КонецЕсли;
		
		// если перерасчет - нужно сузить выборку 
		Если Перерасчет И Сотрудники = Неопределено Тогда
			// перерасчет по всем физлицам перерасчета
			ТекстЗапроса = ТекстЗапроса + "
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ("+ СотрудникиДляПерерасчетаТекст +") КАК СотрудникиДляПерерасчета
			|ПО СотрудникиДляПерерасчета.Сотрудник = Основной.Сотрудник";
					
		КонецЕсли;
		
		Если НеобходимаБаза Тогда
			БазаТекст = "
			|ВЫБРАТЬ
			|	СУММА(ЕСТЬNULL(База.РезультатБаза, 0)) КАК РезультатБаза,
			|	База.Регистратор,
			|	База.НомерСтроки
			|
			|ПОМЕСТИТЬ ВТ_База
			|ИЗ
			|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.БазаОсновныеНачисленияРаботниковОрганизаций(
			|			&парамИзмеренияОсновного, 
			|			&парамИзмеренияБазового, 
			|			&Разрезы, 
			|			" + Условие + ") КАК База
			|ГДЕ
            |	((НЕ База.Сторно)
            |			ИЛИ База.ПериодРегистрацииРазрез < База.ПериодРегистрации)
			|
			|СГРУППИРОВАТЬ ПО
			|	База.Регистратор,
			|	База.НомерСтроки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	База.НомерСтроки,
			|	База.Регистратор
			|";
			
			Разрезы = Новый Массив;
			Разрезы.Добавить("ПериодРегистрации");
			Запрос.УстановитьПараметр("Разрезы", Разрезы);
			Запрос.Текст = БазаТекст;
			Запрос.Выполнить();
			БазаТекст = "ВТ_База";
			
			// присоединяем к базе
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + БазаТекст + " Как База
			|ПО База.Регистратор = Основной.Регистратор И База.НомерСтроки = Основной.НомерСтроки";
		КонецЕсли;
		
		Если НеобходимГрафик Тогда
			Запрос.УстановитьПараметр("ПоЧасам", Перечисления.ВидыУчетаВремени.ПоЧасам);
			Запрос.УстановитьПараметр("ПоДням", Перечисления.ВидыУчетаВремени.ПоДням);
			Запрос.УстановитьПараметр("ОтработанноеВПределахНормы", Перечисления.ВидыВремени.ОтработанноеВПределахНормы);
			Запрос.УстановитьПараметр("ЦелодневноеНеотработанное", Перечисления.ВидыВремени.ЦелодневноеНеотработанное);
			Запрос.УстановитьПараметр("ЧасовоеНеотработанное", Перечисления.ВидыВремени.ЧасовоеНеотработанное);
			
			Запрос.Текст = ВремяПоТабелюТекст;
			Запрос.Выполнить();
			ВремяПоТабелюТекст = "ВТ_ВремяПоТабелю";
			
			// присоединяем к данным графика
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(" + Условие +  ") Как ДанныеГрафика
			|	ПО Основной.Регистратор = ДанныеГрафика.Регистратор 
			|		И Основной.НомерСтроки = ДанныеГрафика.НомерСтроки
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ " + ВремяПоТабелюТекст + " КАК ВремяПоТабелюТекст
			|	ПО Основной.НомерСтроки = ВремяПоТабелюТекст.НомерСтроки
			|
			|// для сменных графиков с суммированным учетом отработанного времени баланс времени берем отдельно
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГрафикиРаботыФизЛиц КАК ГрафикиРаботыФизЛиц
			|	ПО Основной.ГрафикРаботы = ГрафикиРаботыФизЛиц.Ссылка
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БалансРабочегоВремени КАК БалансРабочегоВремени
			|	ПО ГрафикиРаботыФизЛиц.ГрафикРаботы = БалансРабочегоВремени.ГрафикРаботы 
			|		И БалансРабочегоВремени.ДатаМесяца = Основной.ПериодДействия
			|";
			
			
		КонецЕсли;
		
        Если НеобходимыеДанные.ИзменениеЕдиныхПравил2024 Тогда
			Запрос.Текст = ДанныеПроизводственногоКалендаряТекст;
            Запрос.УстановитьПараметр("ОсновнойГрафикРаботыПредприятия", ОсновнойГрафикРаботыПредприятия);
            Запрос.УстановитьПараметр("ДатаИзмененияЕдиныхПравил2024", '20240101');
			Запрос.Выполнить();
			ДанныеПроизводственногоКалендаряТекст = "ВТ_ДанныеКалендаря";
			
			// присоединяем к данным графика
			ТекстЗапроса = ТекстЗапроса + "
            |
            |ЛЕВОЕ СОЕДИНЕНИЕ " + ДанныеПроизводственногоКалендаряТекст + " КАК ДанныеКалендаря
            |		ПО Основной.ПериодДействияНачало >= &ДатаИзмененияЕдиныхПравил2024
            |			И ГОД(Основной.ПериодДействияНачало) = ДанныеКалендаря.Год 
			|";
        КонецЕсли; 
		
		Если НеобходимыеДанные.СреднийЗаработок Тогда
			
			ОсновнойЗаработок = Новый Массив(3);
			ОсновнойЗаработок[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
			ОсновнойЗаработок[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
			ОсновнойЗаработок[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпуск;
			
			ВсеВидыОсновногоЗаработка = Новый Массив(6);
			ВсеВидыОсновногоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
			ВсеВидыОсновногоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБезИндексации;
			ВсеВидыОсновногоЗаработка[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
			ВсеВидыОсновногоЗаработка[3] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛБезИндексации;
			ВсеВидыОсновногоЗаработка[4] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпуск;
			ВсеВидыОсновногоЗаработка[5] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпускБезИндексации;
			
			ПоПремиям = Новый Массив(2);
			ПоПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;
			ПоПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБезИндексации;
			
			ПоФиксПремиям = Новый Массив(2);
			ПоФиксПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;
			ПоФиксПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБезИндексации;
			               
			Запрос.УстановитьПараметр("ОсновнойЗаработок", ОсновнойЗаработок);
			Запрос.УстановитьПараметр("ВсеВидыОсновногоЗаработка", ВсеВидыОсновногоЗаработка);
			Запрос.УстановитьПараметр("ПоЗаработкуОтпуск", ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпуск);
			Запрос.УстановитьПараметр("ПоПремиям", ПоПремиям);
			Запрос.УстановитьПараметр("ПоФиксПремиям", ПоФиксПремиям);
			
			Запрос.Текст = ДанныеОСреднемЗаработкеТекст;
			Запрос.Выполнить();
			ДанныеОСреднемЗаработкеТекст = "ВТ_ДанныеОСреднемЗаработке";
			
			// присоединяем данные для расчета среднего заработка
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + ДанныеОСреднемЗаработкеТекст + " КАК ДанныеДляРасчетаСреднего
			|	ПО Основной.Сотрудник = ДанныеДляРасчетаСреднего.Сотрудник
			|		И Основной.Организация = ДанныеДляРасчетаСреднего.Организация
			|		И Основной.ВидРасчета.СпособРасчета = ДанныеДляРасчетаСреднего.СпособРасчета
			|		И Основной.ПериодРасчетаСреднегоЗаработкаНачало = ДанныеДляРасчетаСреднего.ДатаНачалаРасчетногоПериода
			|		И Основной.ПериодРасчетаСреднегоЗаработкаОкончание = ДанныеДляРасчетаСреднего.ДатаОкончанияРасчетногоПериода";

		КонецЕсли;
		
		Если НеобходимыеДанные.СдельныйЗаработок Тогда
			Запрос.Текст = СдельныйЗаработокОрганизацииТекст;
			Запрос.Выполнить();
			СдельныйЗаработокОрганизацииТекст = "ВТ_СдельныйЗаработокОрганизации";
			
			// присоединяем данные о сдельном заработке
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + СдельныйЗаработокОрганизацииТекст + " КАК ДанныеОСдельномЗаработке
			|	ПО Основной.НомерСтроки = ДанныеОСдельномЗаработке.ОсновнойНомерСтроки";
			
			Запрос.УстановитьПараметр("СпособРасчетаСдельныйЗаработок", Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок);
			Запрос.УстановитьПараметр("ПоказательСдельнаяВыработка", Справочники.ПоказателиСхемМотивации.СдельнаяВыработка);
		КонецЕсли;
		
		Если НеобходимыеДанные.РазмерОграниченияПособия Тогда
			// НакопленныеДанныеПособия
			// уже начислено по другим регистраторам в данном расчетном периоде
			//	Поля:
			//		ОсновнойНомерСтроки - номер строки расчитываемых движений
			//		Размер - размер ограничения
			//	Описание:
			//		суммирует результат по виду расчета пособия
			//
			НакопленныеДанныеПособияТекст = 
			"ВЫБРАТЬ
			|	Основной.НомерСтроки КАК ОсновнойНомерСтроки,
			|	СУММА(НакопленныеДанные.Результат) КАК УжеНачисленоВТекущемПериоде
			| ПОМЕСТИТЬ ВТ_НакопленныеДанныеПособия
			|ИЗ
			|	РегистрРасчета." + ИмяРегистра + " КАК Основной
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета." + ИмяРегистра + " КАК НакопленныеДанные
			|		ПО НакопленныеДанные.ФизЛицо = Основной.ФизЛицо 
			|			И НакопленныеДанные.ПериодДействия = Основной.ПериодДействия 
			|			И НакопленныеДанные.Организация = Основной.Организация 
			|			И (НакопленныеДанные.Регистратор <> Основной.Регистратор 
			|				ИЛИ НЕ НакопленныеДанные.Авторасчет)
			|			И НакопленныеДанные.ВидРасчета = Основной.ВидРасчета
			|
			|ГДЕ
			|	Основной.Регистратор = &парамРегистратор
			|	И Основной.Авторасчет
			|
			|СГРУППИРОВАТЬ ПО
			|	Основной.НомерСтроки";
			
			
			Запрос.УстановитьПараметр("парамРегистратор", Регистратор);
			Запрос.Текст = НакопленныеДанныеПособияТекст;
			Запрос.Выполнить();
			НакопленныеДанныеПособияТекст = "ВТ_НакопленныеДанныеПособия";
			
			// РазмерОграниченияПособия
			//	Поля:
			//		ОсновнойНомерСтроки - номер строки расчитываемых движений
			//		Размер - размер ограничения
			//	Описание:
			//		получает размер ограничения пособия для каждой строки начислений
			//
			РазмерОграниченияПособияТекст = 
			"ВЫБРАТЬ
			|	ДатыАктуальности.НомерСтроки КАК ОсновнойНомерСтроки,
			|	ВЫБОР
			|		КОГДА ДатыАктуальности.ПериодДействияНачало < &ДатаПовышенияРазмераОграничения
			|			ТОГДА ЕСТЬNULL(10 * РегламентированныеРасчетныеПоказатели.РазмерМРП, 0)
			|		КОГДА ДатыАктуальности.ПериодДействияНачало < &ДатаПовышенияРазмераОграничения2023
			|			ТОГДА ЕСТЬNULL(15 * ВЫБОР 
			|								КОГДА ЕСТЬNULL(РегламентированныеРасчетныеПоказатели.РазмерМРПДляПособийИныхСоциальныхВыплат, 0) = 0 
			|									ТОГДА ЕСТЬNULL(РегламентированныеРасчетныеПоказатели.РазмерМРП, 0)
			|								ИНАЧЕ
			|									ЕСТЬNULL(РегламентированныеРасчетныеПоказатели.РазмерМРПДляПособийИныхСоциальныхВыплат, 0) 
			|							КОНЕЦ, 0)
			|		ИНАЧЕ ЕСТЬNULL(25 * ВЫБОР 
			|								КОГДА ЕСТЬNULL(РегламентированныеРасчетныеПоказатели.РазмерМРПДляПособийИныхСоциальныхВыплат, 0) = 0 
			|									ТОГДА ЕСТЬNULL(РегламентированныеРасчетныеПоказатели.РазмерМРП, 0)
			|								ИНАЧЕ
			|									ЕСТЬNULL(РегламентированныеРасчетныеПоказатели.РазмерМРПДляПособийИныхСоциальныхВыплат, 0) 
			|							КОНЕЦ, 0)
			|	КОНЕЦ КАК Размер
			|ПОМЕСТИТЬ ВТ_РазмерОграниченияПособия
			|ИЗ
			|	(ВЫБРАТЬ
			|		Основной.НомерСтроки КАК НомерСтроки,
			|		Основной.ПериодДействияНачало КАК ПериодДействияНачало,
			|		МАКСИМУМ(РегламентированныеРасчетныеПоказатели.Период) КАК ДатаАктуальности
			|	ИЗ
			|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РегламентированныеРасчетныеПоказатели
			|			ПО РегламентированныеРасчетныеПоказатели.Период <= Основной.ПериодДействияНачало
			|	
			|	ГДЕ
			|		Основной.Регистратор = &парамРегистратор
			|		И Основной.Авторасчет
			|		И Основной.ВидРасчета.СпособРасчета = &СпособРасчетаПоСреднемуЗаработкуДляБольничных
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Основной.НомерСтроки,
			|		Основной.ПериодДействияНачало) КАК ДатыАктуальности
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РегламентированныеРасчетныеПоказатели
			|		ПО РегламентированныеРасчетныеПоказатели.Период = ДатыАктуальности.ДатаАктуальности";
			
			Запрос.УстановитьПараметр("СпособРасчетаПоСреднемуЗаработкуДляБольничных", Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляБольничных);
			// с 1 сентября 2008 года повышен размер ограничения на пособие по временной нетрудоспособности до 15 МРП за месяц
			Запрос.УстановитьПараметр("ДатаПовышенияРазмераОграничения", '20080901');
			Запрос.УстановитьПараметр("ДатаПовышенияРазмераОграничения2023", '20230701');
			
			Запрос.Текст = РазмерОграниченияПособияТекст;
			Запрос.Выполнить();
			РазмерОграниченияПособияТекст = "ВТ_РазмерОграниченияПособия";
			
			// присоединяем данные о размере пособия
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + РазмерОграниченияПособияТекст + " КАК РазмерОграниченияПособия
			|	ПО Основной.НомерСтроки = РазмерОграниченияПособия.ОсновнойНомерСтроки
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ " + НакопленныеДанныеПособияТекст + " КАК НакопленныеДанныеПособия
			|	ПО Основной.НомерСтроки = НакопленныеДанныеПособия.ОсновнойНомерСтроки";
		КонецЕсли;
		
		Если НеобходимыеДанные.РазмерРегламентированныхРасчетныхПоказателей Тогда
			// РазмерРегламентированныхРасчетныхПоказателей
			//	Поля:
			//		ОсновнойНомерСтроки - номер строки расчитываемых движений
			//		РазмерМРП - размер МРП
			//		РазмерМЗП - размер МЗП
			//	Описание:
			//		получает размер регламентированных расчетных показателей
			//
			РазмерРегламентированныхРасчетныхПоказателейТекст = 
			"ВЫБРАТЬ
			|	РасчетныеПоказателиСрезПоследних.НомерСтроки КАК ОсновнойНомерСтроки,
			|	РасчетныеПоказатели.РазмерМРП  КАК РазмерМРП,
			|	РасчетныеПоказатели.РазмерМЗП  КАК РазмерМЗП
			|ПОМЕСТИТЬ ВТ_РазмерРегламентированныхРасчетныхПоказателей
			|ИЗ
			|	(ВЫБРАТЬ
			|		Основной.НомерСтроки КАК НомерСтроки,
			|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
			|	ИЗ
			|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
			|			ПО РасчетныеПоказатели.Период <= Основной.ПериодДействияНачало
			|	
			|	ГДЕ
			|		Основной.Регистратор = &парамРегистратор
			|		И Основной.Авторасчет
			|		И Основной.ВидРасчета.СпособРасчета В (&СпособыРасчетаПоРегламентированнымПоказателям)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Основной.НомерСтроки) КАК РасчетныеПоказателиСрезПоследних
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
			|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза";
			
			СпособыРасчетаПоРегламентированнымПоказателям = Новый СписокЗначений;
			СпособыРасчетаПоРегламентированнымПоказателям.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателю);
			СпособыРасчетаПоРегламентированнымПоказателям.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателюПоДням);
			СпособыРасчетаПоРегламентированнымПоказателям.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателюПоЧасам);
			СпособыРасчетаПоРегламентированнымПоказателям.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМинимальнойЗаработнойПлате);
			СпособыРасчетаПоРегламентированнымПоказателям.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМинимальнойЗаработнойПлатеПоДням);
			СпособыРасчетаПоРегламентированнымПоказателям.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМинимальнойЗаработнойПлатеПоЧасам);
			
			Запрос.УстановитьПараметр("СпособыРасчетаПоРегламентированнымПоказателям", СпособыРасчетаПоРегламентированнымПоказателям);
			Запрос.Текст = РазмерРегламентированныхРасчетныхПоказателейТекст;
			Запрос.Выполнить();
			РазмерРегламентированныхРасчетныхПоказателейТекст = "ВТ_РазмерРегламентированныхРасчетныхПоказателей";
			
			// присоединяем данные о размере регламентированных расчетных показателей
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + РазмерРегламентированныхРасчетныхПоказателейТекст + " КАК РазмерРегламентированныхРасчетныхПоказателей
			|ПО Основной.НомерСтроки = РазмерРегламентированныхРасчетныхПоказателей.ОсновнойНомерСтроки";
			
		КонецЕсли;
		
		Если НеобходимыеДанные.НакопленныеДанныеПоВидуРасчета Тогда
			Запрос.Текст = НакопленныеДанныеНачисленийТекст;
			Запрос.Выполнить();
			НакопленныеДанныеНачисленийТекст = "ВТ_НакопленныеДанныеНачислений";
			
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + НакопленныеДанныеНачисленийТекст + " КАК НакопленныеДанныеНачислений
			|ПО Основной.НомерСтроки = НакопленныеДанныеНачислений.НомерСтроки";

		КонецЕсли;
		
		Если НеобходимыеДанные.РасчетОтОбратного Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|" + РасчетОтОбратногоСоединенияТекст;
		КонецЕсли;


		ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ " + ВнешнееУсловие;
		
	ИначеЕсли 	ИмяРегистра = "УправленческиеНачисления" или 
				ИмяРегистра = "УправленческиеУдержания" Тогда
		
		Запрос.УстановитьПараметр("ПоДням", Перечисления.ВидыУчетаВремени.ПоДням);
		Запрос.УстановитьПараметр("ПоказательВремяВДнях", Справочники.ПоказателиСхемМотивации.ВремяВДнях);
		Запрос.УстановитьПараметр("ПоказательВремяВЧасах", Справочники.ПоказателиСхемМотивации.ВремяВЧасах);
		Запрос.УстановитьПараметр("ПоказательНормаВремениВДнях", Справочники.ПоказателиСхемМотивации.НормаВремениВДнях);
		Запрос.УстановитьПараметр("ПоказательНормаВремениВЧасах", Справочники.ПоказателиСхемМотивации.НормаВремениВЧасах);
		Запрос.УстановитьПараметр("ПоказательРасчетнаяБаза", Справочники.ПоказателиСхемМотивации.РасчетнаяБаза);
		Запрос.УстановитьПараметр("ПоказательСтаж", Справочники.ПоказателиСхемМотивации.Стаж);
		
		ПроцентныеПоказатели = Новый Массив;
		ПроцентныеПоказатели.Добавить(Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная);
		ПроцентныеПоказатели.Добавить(Перечисления.ТипыПоказателейСхемМотивации.Процентный);
		Запрос.УстановитьПараметр("ПроцентныеПоказатели", ПроцентныеПоказатели);
		
		ТекстЗапроса = 
		"ВЫБРАТЬ 
		|Основной.Регистратор Как Регистратор, 
		|Основной.НомерСтроки Как НомерСтроки,
		|Основной.Физлицо КАК Сотрудник,
		|Основной.Физлицо.Наименование Как СотрудникНаименование,
		|Основной.ВидРасчета.Наименование КАК ВидРасчетаНаименование,
		|Основной.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|ЛОЖЬ КАК ВидРасчетаЯвляетсяПочасовымОтклонением,
		|ЕСТЬNULL(ПорядокОкругленияВР.ПорядокОкругления, ПорядокОкругленияОбщ.ПорядокОкругления) КАК ПорядокОкругления,
		|ЕСТЬNULL(ПорядокОкругленияВР.МетодОкругления, ПорядокОкругленияОбщ.МетодОкругления) КАК МетодОкругления";
		
		Если КомментироватьРасчет Тогда
			// прочие общие поля, необходимые для комментариев к расчету
			ТекстЗапроса = ТекстЗапроса + ",
			|ЛОЖЬ КАК ВычитатьИзБазыИПН,
			|ЛОЖЬ КАК ВычитатьИзБазыВОСМС,
			|ЛОЖЬ КАК ВычитатьИзБазыОПВ";
		КонецЕсли;
		
		Если ИмяРегистра = "УправленческиеНачисления" Тогда		
			ТекстЗапроса = ТекстЗапроса + ", 
			|Основной.ВидРасчета.ЗачетОтработанногоВремени Как ЗачетОтработанногоВремени, 
			|ЛОЖЬ КАК УчетОтработанногоВремени,
			|Основной.ВидУчетаВремени Как ВидУчетаВремени";
		КонецЕсли;

		ДобавитьПоказатели(НеобходимыеДанные, КоличествоПоказателей, ТекстЗапроса, Показатель1Текст, Показатель1ТекстПредопределенный);
		
		
		Если НеобходимаБаза Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|База.РезультатБаза";
		КонецЕсли;
		
		Если НеобходимыеДанные.НормаВремениЗаМесяц Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|ДанныеГрафика.ОсновноеЗначениеПериодДействия";
		КонецЕсли;
		
		Если НеобходимыеДанные.ОтработаноВремени Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия Как ОтработаноВремениОсновное, 
			|ДанныеГрафика.ДополнительноеЗначениеФактическийПериодДействия Как ОтработаноВремениДополнительное";
		КонецЕсли;
		
		Если НеобходимыеДанные.СдельныйЗаработок Тогда
			// размер сдельного заработка
			ТекстЗапроса = ТекстЗапроса + ", 
			|ДанныеОСдельномЗаработке.СуммаЗаработка КАК РазмерСдельногоЗаработка";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|ИЗ 
		|	РегистрРасчета." + ИмяРегистра + " Как Основной
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации) КАК ПорядокОкругленияВР
		|		ПО Основной.ВидРасчета = ПорядокОкругленияВР.ВидРасчета
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(
		|			&парамПериодРегистрации,
		|			ВидРасчета = НЕОПРЕДЕЛЕНО) КАК ПорядокОкругленияОбщ	
		|		ПО ИСТИНА";
		
		
		Если НеобходимыеДанные.ПоказателиСхемМотивации Тогда
			Если КоличествоПоказателей > 0 Тогда
				ТекстЗапроса = ТекстЗапроса + "			
				|ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
				|ПО Показатели.ВидРасчета = Основной.ВидРасчета";
			КонецЕсли;
			
			Для Каждого ВидСтажа Из МассивСтажей Цикл
				
				КодСтажа = "Стаж_"+СокрП(ВидСтажа.Значение); // код стажа
				Запрос.УстановитьПараметр(КодСтажа, ВидСтажа.Ключ); // ссылка на вид стажа
				
				ТекстЗапроса = ТекстЗапроса + "
				
				|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.Стажи КАК "+ КодСтажа + "
				|	ПО Основной.ФизЛицо = " + КодСтажа + ".Ссылка И
				|	&" + КодСтажа + " = "+КодСтажа+".ВидСтажа";
				
				
			КонецЦикла;
		КонецЕсли;

		Если НеобходимыеДанные.Стаж Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|						Основной.НомерСтроки,
			|						МАКСИМУМ(Работники.Период) КАК Период
			|					ИЗ
			|						РегистрРасчета." + ИмяРегистра + " КАК Основной
			|						
			|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК Работники
			|							ПО Основной.ФизЛицо = Работники.ФизЛицо
			|								И Работники.Период <= Основной." + ?(ИмяРегистра = "УправленческиеНачисления", "ПериодДействияНачало", "ПериодРегистрации") + "
			|								И Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
			|					ГДЕ
			|						" + ВнешнееУсловие + "
			|					СГРУППИРОВАТЬ ПО
			|						Основной.НомерСтроки) КАК ДанныеОСтаже
			|	ПО Основной.НомерСтроки = ДанныеОСтаже.НомерСтроки";
		КонецЕсли;
		
		Если НеобходимаБаза Тогда
			// присоединяем к базе
			
			БазаТекст = "
			|ВЫБРАТЬ
			|	СУММА(ЕСТЬNULL(База.РезультатБаза, 0)) КАК РезультатБаза,
			|	База.Регистратор,
			|	База.НомерСтроки
			|ПОМЕСТИТЬ ВТ_База
			|ИЗ
			|	РегистрРасчета." + ИмяРегистра + ".БазаУправленческиеНачисления(&парамИзмеренияОсновного, &парамИзмеренияБазового, , " + Условие + ") Как База
			|СГРУППИРОВАТЬ ПО
			|	База.Регистратор,
			|	База.НомерСтроки
			|";
			
			Запрос.Текст = БазаТекст;
			Запрос.Выполнить();
			БазаТекст = "ВТ_База";
			
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + БазаТекст + " Как База
			|ПО База.Регистратор = Основной.Регистратор И База.НомерСтроки = Основной.НомерСтроки";
		КонецЕсли;
		
		Если НеобходимГрафик Тогда
			// присоединяем к данным графика
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета." + ИмяРегистра + ".ДанныеГрафика(" + Условие +  ") Как ДанныеГрафика
			|	ПО Основной.Регистратор = ДанныеГрафика.Регистратор 
			|		И Основной.НомерСтроки = ДанныеГрафика.НомерСтроки";
		КонецЕсли;
		
		Если НеобходимыеДанные.СдельныйЗаработок Тогда
			// присоединяем данные о сдельном заработке
			Запрос.УстановитьПараметр("ПоказательСдельнаяВыработка", Справочники.ПоказателиСхемМотивации.СдельнаяВыработка);
			Запрос.Текст = СдельныйЗаработокКомпанииТекст;
			Запрос.Выполнить();
			СдельныйЗаработокКомпанииТекст = "ВТ_СдельныйЗаработокКомпании";
			
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + СдельныйЗаработокКомпанииТекст + " КАК ДанныеОСдельномЗаработке
			|	ПО Основной.НомерСтроки = ДанныеОСдельномЗаработке.ОсновнойНомерСтроки";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ " + ВнешнееУсловие;
		
	ИначеЕсли ИмяРегистра = "ДополнительныеНачисленияРаботниковОрганизаций" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ 
		|Основной.Регистратор Как Регистратор, 
		|Основной.НомерСтроки Как НомерСтроки, 
		|Основной.Сотрудник КАК Сотрудник,
		|Основной.Сотрудник.Наименование Как СотрудникНаименование,
		|Основной.Сотрудник.ФизЛицо КАК ФизЛицо,
		|Основной.ВидРасчета.Наименование КАК ВидРасчетаНаименование,
		|ЛОЖЬ Как УчетОтработанногоВремени, 
		|ВЫБОР 
		|	КОГДА Основной.ВидРасчета.СпособРасчета = &парамПустойСпособРасчета 
		|		ТОГДА Основной.ВидРасчета 
		|	ИНАЧЕ Основной.ВидРасчета.СпособРасчета 
		|КОНЕЦ Как СпособРасчета,
		|ЕСТЬNULL(ПорядокОкругленияВР.ПорядокОкругления, ПорядокОкругленияОбщ.ПорядокОкругления) КАК ПорядокОкругления,
		|ЕСТЬNULL(ПорядокОкругленияВР.МетодОкругления, ПорядокОкругленияОбщ.МетодОкругления) КАК МетодОкругления";

		Если КомментироватьРасчет Тогда
			// прочие общие поля, необходимые для комментариев к расчету
			ТекстЗапроса = ТекстЗапроса + ",
			|ЛОЖЬ КАК ВычитатьИзБазыИПН,
			|ЛОЖЬ КАК ВычитатьИзБазыВОСМС,
			|ЛОЖЬ КАК ВычитатьИзБазыОПВ";
		КонецЕсли;

		Если НеобходимыеДанные.ПоказателиСхемМотивации Тогда
			
			ДобавитьПоказатели(НеобходимыеДанные, КоличествоПоказателей, ТекстЗапроса, Показатель1Текст, Показатель1ТекстПредопределенный);
		
		КонецЕсли;
		
		Если НеобходимаБаза Тогда
			// если присоединяем к базе
			ТекстЗапроса = ТекстЗапроса + ",
			|ЕСТЬNULL(База.РезультатБаза, 0) Как РезультатБаза";
		КонецЕсли;
		
		Если НеобходимыеДанные.СреднийЗаработок Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|ДанныеДляРасчетаСреднего.ОтработаноДней Как ОтработаноДней, 
			|ДанныеДляРасчетаСреднего.ОтработаноЧасов Как ОтработаноЧасов, 
			|ДанныеДляРасчетаСреднего.НормаЧасов Как НормаЧасов, 
			|ДанныеДляРасчетаСреднего.КалендарныхДней Как КалендарныхДней, 
			|ДанныеДляРасчетаСреднего.СреднийЗаработок Как СреднийЗаработок,
			|ДанныеДляРасчетаСреднего.ДатаНачалаРасчетногоПериода,
			|ДанныеДляРасчетаСреднего.ДатаОкончанияРасчетногоПериода,
			|ВЫБОР
			|	КОГДА Основной.ГрафикРаботы ССЫЛКА Справочник.ГрафикиРаботыФизЛиц
			|		ТОГДА ЕСТЬNULL(Основной.ГрафикРаботы.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ)
			|	ИНАЧЕ ЕСТЬNULL(Основной.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ) 
			|КОНЕЦ КАК СуммированныйУчетРабочегоВремени";
			
		КонецЕсли;
		
		Если НеобходимыеДанные.РазмерРегламентированныхРасчетныхПоказателей Тогда
			// размер регламентированных расчетных показателей
			ТекстЗапроса = ТекстЗапроса + ", 
			|РазмерРегламентированныхРасчетныхПоказателей.РазмерМРП КАК РазмерМесячногоРасчетногоПоказателя,
			|РазмерРегламентированныхРасчетныхПоказателей.РазмерМЗП КАК РазмерМинимальнойЗаработнойПлаты";
		КонецЕсли;
		
		Если НеобходимыеДанные.РасчетОтОбратного Тогда
			ТекстЗапроса = ТекстЗапроса + ",
			|" + РасчетОтОбратногоПоляТекст;
		КонецЕсли;

		ТекстЗапроса = ТекстЗапроса + "
		|ИЗ 
		|	РегистрРасчета."+ИмяРегистра+" Как Основной
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации) КАК ПорядокОкругленияВР
		|		ПО Основной.ВидРасчета = ПорядокОкругленияВР.ВидРасчета
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(
		|			&парамПериодРегистрации,
		|			ВидРасчета = НЕОПРЕДЕЛЕНО) КАК ПорядокОкругленияОбщ	
		|		ПО ИСТИНА";
		
		
		Если НеобходимыеДанные.ПоказателиСхемМотивации Тогда

			ТекстЗапроса = ТекстЗапроса + "			
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
			|ПО Показатели.ВидРасчета = Основной.ВидРасчета";
			
			Для Каждого ВидСтажа Из МассивСтажей Цикл
				
				КодСтажа = "Стаж_" + СокрП(ВидСтажа.Значение); // код стажа
				Запрос.УстановитьПараметр(КодСтажа, ВидСтажа.Ключ); // ссылка на вид стажа
				
				ТекстЗапроса = ТекстЗапроса + "
				
				|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.Стажи КАК "+ КодСтажа + "
				|	ПО Основной.Сотрудник.ФизЛицо = " + КодСтажа + ".Ссылка И
				|	&" + КодСтажа + " = "+КодСтажа+".ВидСтажа";
				
				
			КонецЦикла;
			
		КонецЕсли;	

		Если НеобходимыеДанные.Стаж Тогда
			// присоединение к данным о стаже
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДанныеОСтаже			
			|	ПО Основной.Сотрудник = ДанныеОСтаже.Сотрудник
			|		И Основной.Организация = ДанныеОСтаже.Организация
			|		И ДанныеОСтаже.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)";
		КонецЕсли;
		
		// если перерасчет - нужно сузить выборку 
		Если Перерасчет И Сотрудники = Неопределено Тогда
			// перерасчет по всем физлицам перерасчета
			ТекстЗапроса = ТекстЗапроса + "
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СотрудникиДляПерерасчетаТекст + ") КАК СотрудникиДляПерерасчета
			|ПО СотрудникиДляПерерасчета.Сотрудник = Основной.Сотрудник";
					
		КонецЕсли;
		
		Если НеобходимаБаза Тогда
			// присоединяем к базе
			БазаТекст = "
			|ВЫБРАТЬ
            |	СУММА(База.РезультатБаза) КАК РезультатБаза,
            |	База.Регистратор КАК Регистратор,
            |	База.НомерСтроки КАК НомерСтроки
            |ПОМЕСТИТЬ ВТ_База
            |ИЗ
            |	(ВЫБРАТЬ
            |		База1.РезультатБаза КАК РезультатБаза,
            |		База1.Регистратор КАК Регистратор,
            |		База1.НомерСтроки КАК НомерСтроки
            |	ИЗ
            |		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.БазаОсновныеНачисленияРаботниковОрганизаций(&парамИзмеренияОсновного, &парамИзмеренияБазового, &Разрезы, " + Условие + ") КАК База1
            |	ГДЕ
            |		((НЕ База1.Сторно)
            |				ИЛИ База1.ПериодРегистрацииРазрез < База1.ПериодРегистрации)
            |	
            |	ОБЪЕДИНИТЬ ВСЕ
            |	
            |	ВЫБРАТЬ
            |		База2.РезультатБаза,
            |		База2.Регистратор,
            |		База2.НомерСтроки
            |	ИЗ
            |		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.БазаДополнительныеНачисленияРаботниковОрганизаций(&парамИзмеренияОсновного, &парамИзмеренияБазового, &Разрезы, " + Условие + ") КАК База2
            |	ГДЕ
            |		((НЕ База2.Сторно)
            |				ИЛИ База2.ПериодРегистрацииРазрез < База2.ПериодРегистрации)) КАК База
            |СГРУППИРОВАТЬ ПО
            |	База.Регистратор,
            |	База.НомерСтроки
            |
            |ИНДЕКСИРОВАТЬ ПО
            |	База.НомерСтроки,
            |	База.Регистратор
            |";
			
			Разрезы = Новый Массив;
			Разрезы.Добавить("ПериодРегистрации");
			Запрос.УстановитьПараметр("Разрезы", Разрезы);
			Запрос.Текст = БазаТекст;
			Запрос.Выполнить();
			БазаТекст = "ВТ_База";
			
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + БазаТекст + " Как База
			|	ПО База.Регистратор = Основной.Регистратор 
			|		И База.НомерСтроки = Основной.НомерСтроки";
		КонецЕсли;
		
		Если НеобходимыеДанные.СреднийЗаработок Тогда
			ОсновнойЗаработок = Новый Массив(3);
			ОсновнойЗаработок[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
			ОсновнойЗаработок[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
			ОсновнойЗаработок[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпуск;
			
			ВсеВидыОсновногоЗаработка = Новый Массив(6);
			ВсеВидыОсновногоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
			ВсеВидыОсновногоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБезИндексации;
			ВсеВидыОсновногоЗаработка[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
			ВсеВидыОсновногоЗаработка[3] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛБезИндексации;
			ВсеВидыОсновногоЗаработка[4] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпуск;
			ВсеВидыОсновногоЗаработка[5] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпускБезИндексации;
			
			ПоПремиям = Новый Массив(2);
			ПоПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;
			ПоПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБезИндексации;
			
			ПоФиксПремиям = Новый Массив(2);
			ПоФиксПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;
			ПоФиксПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБезИндексации;
			
			Запрос.УстановитьПараметр("ОсновнойЗаработок", 		   ОсновнойЗаработок);
			Запрос.УстановитьПараметр("ВсеВидыОсновногоЗаработка", ВсеВидыОсновногоЗаработка);
			Запрос.УстановитьПараметр("ПоЗаработкуОтпуск", 		   ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпуск);
			Запрос.УстановитьПараметр("ПоПремиям", 				   ПоПремиям);
			Запрос.УстановитьПараметр("ПоФиксПремиям",			   ПоФиксПремиям);
			
			Запрос.Текст = ДанныеОСреднемЗаработкеТекст;
			Запрос.Выполнить();
			ДанныеОСреднемЗаработкеТекст = "ВТ_ДанныеОСреднемЗаработке";
			
			// присоединяем данные для расчета среднего заработка
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + ДанныеОСреднемЗаработкеТекст + " КАК ДанныеДляРасчетаСреднего
			|	ПО Основной.Сотрудник = ДанныеДляРасчетаСреднего.Сотрудник
			|		И Основной.Организация = ДанныеДляРасчетаСреднего.Организация
			|		И Основной.ВидРасчета.СпособРасчета = ДанныеДляРасчетаСреднего.СпособРасчета
			|		И Основной.ПериодРасчетаСреднегоЗаработкаНачало = ДанныеДляРасчетаСреднего.ДатаНачалаРасчетногоПериода 
			|		И Основной.ПериодРасчетаСреднегоЗаработкаОкончание = ДанныеДляРасчетаСреднего.ДатаОкончанияРасчетногоПериода";
			

		КонецЕсли;
		
		Если НеобходимыеДанные.РазмерРегламентированныхРасчетныхПоказателей Тогда
			// РазмерРегламентированныхРасчетныхПоказателей
			//	Поля:
			//		ОсновнойНомерСтроки - номер строки расчитываемых движений
			//		РазмерМРП - размер МРП
			//		РазмерМЗП - размер МЗП
			//	Описание:
			//		получает размер регламентированных расчетных показателей
			//
			РазмерРегламентированныхРасчетныхПоказателейТекст = 
			"ВЫБРАТЬ
			|	РасчетныеПоказателиСрезПоследних.НомерСтроки КАК ОсновнойНомерСтроки,
			|	РасчетныеПоказатели.РазмерМРП  КАК РазмерМРП,
			|	РасчетныеПоказатели.РазмерМЗП  КАК РазмерМЗП
			|ПОМЕСТИТЬ ВТ_РазмерРегламентированныхРасчетныхПоказателей
			|ИЗ
			|	(ВЫБРАТЬ
			|		Дополнительный.НомерСтроки КАК НомерСтроки,
			|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
			|	ИЗ
			|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК Дополнительный
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
			|			ПО РасчетныеПоказатели.Период <= Дополнительный.БазовыйПериодНачало
			|	
			|	ГДЕ
			|		Дополнительный.Регистратор = &парамРегистратор
			|		И Дополнительный.Авторасчет
			|		И Дополнительный.ВидРасчета.СпособРасчета В (&СпособыРасчетаПоРегламентированнымПоказателям)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Дополнительный.НомерСтроки) КАК РасчетныеПоказателиСрезПоследних
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
			|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза";
			
			СпособыРасчетаПоРегламентированнымПоказателям = Новый СписокЗначений;
			СпособыРасчетаПоРегламентированнымПоказателям.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателю);
			СпособыРасчетаПоРегламентированнымПоказателям.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателюПоДням);
			СпособыРасчетаПоРегламентированнымПоказателям.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателюПоЧасам);
			СпособыРасчетаПоРегламентированнымПоказателям.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМинимальнойЗаработнойПлате);
			СпособыРасчетаПоРегламентированнымПоказателям.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМинимальнойЗаработнойПлатеПоДням);
			СпособыРасчетаПоРегламентированнымПоказателям.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМинимальнойЗаработнойПлатеПоЧасам);
			
			Запрос.УстановитьПараметр("СпособыРасчетаПоРегламентированнымПоказателям", СпособыРасчетаПоРегламентированнымПоказателям);
			
			Запрос.Текст = РазмерРегламентированныхРасчетныхПоказателейТекст;
			запрос.Выполнить();
			РазмерРегламентированныхРасчетныхПоказателейТекст = "ВТ_РазмерРегламентированныхРасчетныхПоказателей";
			
			// присоединяем данные о размере регламентированных расчетных показателей
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + РазмерРегламентированныхРасчетныхПоказателейТекст + " КАК РазмерРегламентированныхРасчетныхПоказателей
			|	ПО Основной.НомерСтроки = РазмерРегламентированныхРасчетныхПоказателей.ОсновнойНомерСтроки";
			
		КонецЕсли;

		Если НеобходимыеДанные.РасчетОтОбратного Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|" + РасчетОтОбратногоСоединенияТекст;
		КонецЕсли;

		ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ " + ВнешнееУсловие;

	ИначеЕсли ИмяРегистра = "УдержанияРаботниковОрганизаций" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ 
		|Основной.Регистратор Как Регистратор, 
		|Основной.НомерСтроки Как НомерСтроки,
		|Основной.ФизЛицо КАК Сотрудник,
		|Основной.Физлицо.Наименование Как СотрудникНаименование,
		|Основной.ВидРасчета.Наименование КАК ВидРасчетаНаименование,
		|Основной.ВидРасчета Как ВидРасчета,
		|ЛОЖЬ Как УчетОтработанногоВремени,
		|ВЫБОР 
		|	КОГДА Основной.ВидРасчета.СпособРасчета = &парамПустойСпособРасчета 
		|		ТОГДА Основной.ВидРасчета 
		|	ИНАЧЕ Основной.ВидРасчета.СпособРасчета 
		|КОНЕЦ Как СпособРасчета,
		|Основной.ВидРасчета.ВычитатьИзБазыИПН КАК ВычитатьИзБазыИПН,
		|Основной.ВидРасчета.ВычитатьИзБазыВОСМС КАК ВычитатьИзБазыВОСМС,
		|Основной.ВидРасчета.ВычитатьИзБазыОПВ КАК ВычитатьИзБазыОПВ,
		|ЕСТЬNULL(ПорядокОкругленияВР.ПорядокОкругления, ПорядокОкругленияОбщ.ПорядокОкругления) КАК ПорядокОкругления,
		|ЕСТЬNULL(ПорядокОкругленияВР.МетодОкругления, ПорядокОкругленияОбщ.МетодОкругления) КАК МетодОкругления";

		Если НеобходимыеДанные.ПоказателиСхемМотивации Тогда
			
			ДобавитьПоказатели(НеобходимыеДанные, КоличествоПоказателей, ТекстЗапроса, Показатель1Текст, Показатель1ТекстПредопределенный);
			
		КонецЕсли;
		
		Если НеобходимыеДанные.ПределПоДокументуОснованию Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|Основной.ДокументОснование.Предел Как ПределПоДокументуОснованию";
		КонецЕсли; 
		
		Если НеобходимаБаза Тогда
			// если присоединяем к базе
			ТекстЗапроса = ТекстЗапроса + ",
			|ЕСТЬNULL(База.РезультатБаза, 0) Как РезультатБаза";
	    КонецЕсли;
		
		Если НеобходимыеДанные.НакопленныеДанныеПоДокументуОснованию Тогда
			// если присоединяем к базе
			ТекстЗапроса = ТекстЗапроса + ",
			|НакопленныеДанные.УжеНачисленоВТекущемПериоде,
			|НакопленныеДанные.УжеНачисленоЗаВсюИсторию";
	    КонецЕсли;
		
		Если НеобходимыеДанные.ИсчисленныйИПН Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|ИсчисленныйИПН.ИсчисленныйНалог Как ИсчисленныйНалог";
		КонецЕсли;
		
		Если НеобходимыеДанные.ИсчисленныйОПВ Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|ИсчисленныйОПВ.ИсчисленныйВзнос Как ИсчисленныйВзнос";
		КонецЕсли;
		
		Если НеобходимыеДанные.ИсчисленныеВОСМС Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|ИсчисленныеВОСМС.ИсчисленныйВзнос Как ИсчисленныйВзносОСМС";
		КонецЕсли;
		
		Если НеобходимыеДанные.СреднийЗаработок Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|ДанныеДляРасчетаСреднего.ОтработаноДней Как ОтработаноДней, 
			|ДанныеДляРасчетаСреднего.ОтработаноЧасов Как ОтработаноЧасов,
			|ДанныеДляРасчетаСреднего.НормаЧасов Как НормаЧасов, 
			|ДанныеДляРасчетаСреднего.КалендарныхДней Как КалендарныхДней,
			|ДанныеДляРасчетаСреднего.СреднийЗаработок Как СреднийЗаработок,
			|ВЫБОР
			|	КОГДА Основной.ГрафикРаботы ССЫЛКА Справочник.ГрафикиРаботыФизЛиц
			|		ТОГДА ЕСТЬNULL(Основной.ГрафикРаботы.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ)
			|	ИНАЧЕ ЕСТЬNULL(Основной.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ) 
			|КОНЕЦ КАК СуммированныйУчетРабочегоВремени";
	
		ИначеЕсли НеобходимыеДанные.ПочтовыеПереводы Тогда
			ТекстЗапроса = ТекстЗапроса + ", 
			|ЕСТЬNULL(ПочтовыеПереводы.РазмерПочтовогоПеревода, 0) Как РазмерПочтовогоПеревода,
			|ЕСТЬNULL(ШкалаСтавокПочтовогоСбора.Величина, 0) КАК ВеличинаСтавкиПочтовогоСбора,
			|ЕСТЬNULL(ШкалаСтавокПочтовогоСбора.МинСумма, 0) КАК МинСуммаПочтовогоСбора
			|";
			
			Запрос.УстановитьПараметр("СпособРасчетаПочтовыйСбор", Перечисления.СпособыРасчетаОплатыТруда.ПочтовыйСбор);
			
		КонецЕсли;
		
		Если НеобходимыеДанные.РазмерРегламентированныхРасчетныхПоказателей Тогда
			// размер регламентированных расчетных показателей
			ТекстЗапроса = ТекстЗапроса + ", 
			|РазмерРегламентированныхРасчетныхПоказателей.РазмерМРП КАК РазмерМесячногоРасчетногоПоказателя";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|ИЗ 
		|	РегистрРасчета." + ИмяРегистра + " Как Основной
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации) КАК ПорядокОкругленияВР
		|		ПО Основной.ВидРасчета = ПорядокОкругленияВР.ВидРасчета
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(
		|			&парамПериодРегистрации,
		|			ВидРасчета = НЕОПРЕДЕЛЕНО) КАК ПорядокОкругленияОбщ	
		|		ПО ИСТИНА";
		
				// если перерасчет - нужно сузить выборку 
		Если Перерасчет И Сотрудники = Неопределено Тогда
			// перерасчет по всем физлицам перерасчета
			ТекстЗапроса = ТекстЗапроса + "
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + Сотрудники + ") КАК СотрудникиДляПерерасчета
			|	ПО СотрудникиДляПерерасчета.Сотрудник = Основной.Сотрудник";
					
		КонецЕсли;
		
		Если НеобходимыеДанные.ПоказателиСхемМотивации Тогда

			ТекстЗапроса = ТекстЗапроса + "			
            |ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
			|ПО Показатели.ВидРасчета = Основной.ВидРасчета";
			
			Для Каждого ВидСтажа Из МассивСтажей Цикл
				
				КодСтажа = "Стаж_" + СокрП(ВидСтажа.Значение); // код стажа
				Запрос.УстановитьПараметр(КодСтажа, ВидСтажа.Ключ); // ссылка на вид стажа
				
				ТекстЗапроса = ТекстЗапроса + "
				
				|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.Стажи КАК " + КодСтажа + "
				|	ПО Основной.ФизЛицо = " + КодСтажа + ".Ссылка И
				|	&" + КодСтажа + " = " + КодСтажа + ".ВидСтажа";
				
				
			КонецЦикла;
			
		КонецЕсли;

		Если НеобходимаБаза Тогда
			// присоединяем к базе
			БазаТекст = "
			|ВЫБРАТЬ
			|	База.Регистратор,
			|	База.НомерСтроки,
			|	СУММА(База.РезультатБаза) КАК РезультатБаза
			|ПОМЕСТИТЬ ВТ_База
			|ИЗ
			|	(ВЫБРАТЬ
			|	Основной.Регистратор,
			|	Основной.НомерСтроки,
			|	ЕСТЬNULL(ОсновныеНачисления.Результат, 0) КАК РезультатБаза
			|ИЗ
			|	РегистрРасчета." + ИмяРегистра + " КАК Основной
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК БазовыеВидыРасчета
			|		ПО Основной.ВидРасчета = БазовыеВидыРасчета.Ссылка 
			|			И БазовыеВидыРасчета.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
			|		ПО ОсновныеНачисления.ФизЛицо = Основной.ФизЛицо 
			|			И ОсновныеНачисления.ОбособленноеПодразделение = Основной.ОбособленноеПодразделение 
			|			И ОсновныеНачисления.ПериодРегистрации МЕЖДУ Основной.БазовыйПериодНачало И Основной.БазовыйПериодКонец 
			|			И ОсновныеНачисления.ВидРасчета = БазовыеВидыРасчета.ВидРасчета
			|
			|ГДЕ
			|	" + ВнешнееУсловие + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Основной.Регистратор,
			|	Основной.НомерСтроки,
			|	ЕСТЬNULL(ДополнительныеНачисления.Результат, 0) КАК РезультатБаза
			|ИЗ
			|	РегистрРасчета." + ИмяРегистра + " КАК Основной
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК БазовыеВидыРасчета
			|		ПО Основной.ВидРасчета = БазовыеВидыРасчета.Ссылка 
			|			И БазовыеВидыРасчета.ВидРасчета ССЫЛКА ПланВидовРасчета.ДополнительныеНачисленияОрганизаций
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
			|		ПО ДополнительныеНачисления.ФизЛицо = Основной.ФизЛицо 
			|			И ДополнительныеНачисления.ОбособленноеПодразделение = Основной.ОбособленноеПодразделение
			|			И ДополнительныеНачисления.ПериодРегистрации МЕЖДУ Основной.БазовыйПериодНачало И Основной.БазовыйПериодКонец 
			|			И ДополнительныеНачисления.ВидРасчета = БазовыеВидыРасчета.ВидРасчета
			|
			|ГДЕ
			|	" + ВнешнееУсловие + " ) КАК База
			|
			|СГРУППИРОВАТЬ ПО
			|	База.Регистратор,
			|	База.НомерСтроки
			|";
			
			Запрос.Текст = БазаТекст;
			Запрос.Выполнить();
			БазаТекст = "ВТ_База";
			
	
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + БазаТекст + " Как База
			|	ПО База.Регистратор = Основной.Регистратор 
			|		И База.НомерСтроки = Основной.НомерСтроки";
		КонецЕсли;
		
		Если НеобходимыеДанные.НакопленныеДанныеПоДокументуОснованию Тогда
			
			Запрос.Текст = НакопленныеДанныеТекст;
			Запрос.Выполнить();
			НакопленныеДанныеТекст = "ВТ_НакопленныеДанные";
			
			// присоединяем сводные данные по документу основанию
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + НакопленныеДанныеТекст + " КАК НакопленныеДанные
			|	ПО НакопленныеДанные.Физлицо = Основной.Физлицо
			|		И НакопленныеДанные.ДокументОснование = Основной.ДокументОснование
			|		И НакопленныеДанные.ВидРасчета = Основной.ВидРасчета";
		КонецЕсли;
		
		Если НеобходимыеДанные.ИсчисленныйИПН Тогда
			
			Запрос.УстановитьПараметр("парамОрганизация", 				Организация);
			Запрос.УстановитьПараметр("парамОбособленноеПодразделение", ОбособленноеПодразделение);
			Запрос.УстановитьПараметр("парамПериодРегистрации", 		ПериодРегистрации);
			Запрос.УстановитьПараметр("парамПриход", 					ВидДвиженияНакопления.Приход);
			Запрос.УстановитьПараметр("парамВидСтроки", 				Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
			
			Запрос.Текст = ИсчисленныйИПНТекст;
			Запрос.Выполнить();
			ИсчисленныйИПНТекст = "ВТ_ИсчисленныйИПН";
			
			// присоединяем данные по исчисленному ИПН
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + ИсчисленныйИПНТекст + " КАК ИсчисленныйИПН
			|	ПО Основной.ФизЛицо = ИсчисленныйИПН.ФизЛицо";

		КонецЕсли;
		
		Если НеобходимыеДанные.ИсчисленныйОПВ Тогда
			
			Запрос.УстановитьПараметр("парамОрганизация", 				Организация);
			Запрос.УстановитьПараметр("парамОбособленноеПодразделение", ОбособленноеПодразделение);
			Запрос.УстановитьПараметр("парамПериодРегистрации", 		ПериодРегистрации);
			Запрос.УстановитьПараметр("парамПриход", 					ВидДвиженияНакопления.Приход);
			Запрос.УстановитьПараметр("парамВидПлатежа", 				Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
			Запрос.УстановитьПараметр("парамВидСтроки", 				Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
			
			Запрос.Текст = ИсчисленныйОПВТекст;
			Запрос.Выполнить();
			ИсчисленныйОПВТекст = "ВТ_ИсчисленныйОПВ";
			
			// присоединяем данные по исчисленным ОПВ
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + ИсчисленныйОПВТекст + " КАК ИсчисленныйОПВ
			|	ПО Основной.ФизЛицо = ИсчисленныйОПВ.ФизЛицо";

		КонецЕсли;
		
		Если НеобходимыеДанные.ИсчисленныеВОСМС Тогда
			
			Запрос.УстановитьПараметр("парамОрганизация", 				Организация);
			Запрос.УстановитьПараметр("парамОбособленноеПодразделение", ОбособленноеПодразделение);
			Запрос.УстановитьПараметр("парамПериодРегистрации", 		ПериодРегистрации);
			Запрос.УстановитьПараметр("парамПриход", 					ВидДвиженияНакопления.Приход);
			Запрос.УстановитьПараметр("парамВидПлатежа", 				Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
			Запрос.УстановитьПараметр("парамВидСтроки", 				Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
			
			Запрос.Текст = ИсчисленныеВОСМСТекст;
			Запрос.Выполнить();
			ИсчисленныеВОСМСТекст = "ВТ_ИсчисленныеВОСМС";
			
			// присоединяем данные по исчисленным ВОСМС
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + ИсчисленныеВОСМСТекст + " КАК ИсчисленныеВОСМС
			|	ПО Основной.ФизЛицо = ИсчисленныеВОСМС.ФизЛицо";

		КонецЕсли;

		Если НеобходимыеДанные.СреднийЗаработок Тогда
			
			ОсновнойЗаработок = Новый Массив(3);
			ОсновнойЗаработок[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
			ОсновнойЗаработок[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
			ОсновнойЗаработок[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпуск;

			ВсеВидыОсновногоЗаработка = Новый Массив(6);
			ВсеВидыОсновногоЗаработка[0] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработку;
			ВсеВидыОсновногоЗаработка[1] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБезИндексации;
			ВсеВидыОсновногоЗаработка[2] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛ;
			ВсеВидыОсновногоЗаработка[3] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛБезИндексации;
			ВсеВидыОсновногоЗаработка[4] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпуск;
			ВсеВидыОсновногоЗаработка[5] = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпускБезИндексации;
			
			ПоПремиям = Новый Массив(2);
			ПоПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиям;
			ПоПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямБезИндексации;
			
			ПоФиксПремиям = Новый Массив(2);
			ПоФиксПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиям;
			ПоФиксПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямБезИндексации;
			
			Запрос.УстановитьПараметр("ОсновнойЗаработок", 		   ОсновнойЗаработок);
			Запрос.УстановитьПараметр("ВсеВидыОсновногоЗаработка", ВсеВидыОсновногоЗаработка);
			Запрос.УстановитьПараметр("ПоЗаработкуОтпуск",		   ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуОтпуск);
			Запрос.УстановитьПараметр("ПоПремиям",				   ПоПремиям);
			Запрос.УстановитьПараметр("ПоФиксПремиям",			   ПоФиксПремиям);
			
			Запрос.Текст = ДанныеОСреднемЗаработкеТекст;
			запрос.Выполнить();
			ДанныеОСреднемЗаработкеТекст = "ВТ_ДанныеОСреднемЗаработке";
			
			// присоединяем данные для расчета среднего заработка
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + ДанныеОСреднемЗаработкеТекст + " КАК ДанныеДляРасчетаСреднего
			|	ПО Основной.ФизЛицо = ДанныеДляРасчетаСреднего.ФизЛицо
			|		И Основной.Сотрудник = ДанныеДляРасчетаСреднего.Сотрудник
			|		И Основной.Организация = ДанныеДляРасчетаСреднего.Организация
			|		И Основной.ВидРасчета.СпособРасчета = ДанныеДляРасчетаСреднего.СпособРасчета
			|		И Основной.ПериодРасчетаСреднегоЗаработкаНачало = ДанныеДляРасчетаСреднего.ДатаНачалаРасчетногоПериода
			|		И Основной.ПериодРасчетаСреднегоЗаработкаОкончание = ДанныеДляРасчетаСреднего.ДатаОкончанияРасчетногоПериода";

		КонецЕсли;
		
		Если НеобходимыеДанные.РазмерРегламентированныхРасчетныхПоказателей Тогда
			// РазмерРегламентированныхРасчетныхПоказателей
			//	Поля:
			//		ОсновнойНомерСтроки - номер строки расчитываемых движений
			//		РазмерМРП - размер МРП
			//	Описание:
			//		получает размер регламентированных расчетных показателей
			//
			РазмерРегламентированныхРасчетныхПоказателейТекст = 
			"ВЫБРАТЬ
			|	РасчетныеПоказателиСрезПоследних.НомерСтроки КАК ОсновнойНомерСтроки,
			|	РасчетныеПоказатели.РазмерМРП  КАК РазмерМРП
			|ПОМЕСТИТЬ ВТ_РазмерРегламентированныхРасчетныхПоказателей
			|ИЗ
			|	(ВЫБРАТЬ
			|		Удержания.НомерСтроки КАК НомерСтроки,
			|		МАКСИМУМ(РасчетныеПоказатели.Период) КАК ПериодСреза
			|	ИЗ
			|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
			|			ПО РасчетныеПоказатели.Период <= Удержания.БазовыйПериодНачало
			|	
			|	ГДЕ
			|		Удержания.Регистратор = &парамРегистратор
			|		И Удержания.Авторасчет
			|		И Удержания.ВидРасчета.СпособРасчета = &СпособРасчетаПоРегламентированнымПоказателям
			|	
			|	СГРУППИРОВАТЬ ПО
			|		Удержания.НомерСтроки) КАК РасчетныеПоказателиСрезПоследних
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РасчетныеПоказатели
			|		ПО РасчетныеПоказатели.Период = РасчетныеПоказателиСрезПоследних.ПериодСреза";
			
			Запрос.УстановитьПараметр("СпособРасчетаПоРегламентированнымПоказателям", Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателю);
			
			Запрос.Текст = РазмерРегламентированныхРасчетныхПоказателейТекст;
			запрос.Выполнить();
			РазмерРегламентированныхРасчетныхПоказателейТекст = "ВТ_РазмерРегламентированныхРасчетныхПоказателей";
			
			// присоединяем данные о размере регламентированных расчетных показателей
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + РазмерРегламентированныхРасчетныхПоказателейТекст + " КАК РазмерРегламентированныхРасчетныхПоказателей
			|	ПО Основной.НомерСтроки = РазмерРегламентированныхРасчетныхПоказателей.ОсновнойНомерСтроки";
			
		КонецЕсли;

		Если НеобходимыеДанные.ПочтовыеПереводы Тогда
			
			ПочтовыеПереводыТекст = 
			"ВЫБРАТЬ
			|	Основная.ФизЛицо,
			|	Основная.ОбособленноеПодразделение,
			|	Основная.Сотрудник,
			|	Основная.ДокументОснование,
			|	СУММА(Дополнительная.Результат) КАК РазмерПочтовогоПеревода
			|ПОМЕСТИТЬ ВТ_ПочтовыеПереводы
			|ИЗ
			|	РегистрРасчета.УдержанияРаботниковОрганизаций КАК Основная
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.УдержанияРаботниковОрганизаций КАК Дополнительная
			|		ПО Основная.ПериодРегистрации = Дополнительная.ПериодРегистрации 
			|			И Основная.ФизЛицо = Дополнительная.ФизЛицо 
			|			И Основная.ОбособленноеПодразделение = Дополнительная.ОбособленноеПодразделение 
			|			И Основная.ДокументОснование = Дополнительная.ДокументОснование 
			|			И Основная.Сотрудник = Дополнительная.Сотрудник 
			|			И Дополнительная.ВидРасчета.СпособРасчета В (&парамМассивСпособовУдержанийИЛ)
			|
			|ГДЕ
			|	Основная.Регистратор = &парамРегистратор
			|	И Основная.Авторасчет
			|	И Основная.ВидРасчета.СпособРасчета = &СпособРасчетаПочтовыйСбор
			|
			|СГРУППИРОВАТЬ ПО
			|	Основная.ФизЛицо,
			|	Основная.ОбособленноеПодразделение,
			|	Основная.Сотрудник,
			|	Основная.ПериодРегистрации,
			|	Основная.ДокументОснование";
			
			МассивСпособовУдержанийИЛ = Новый Массив;
			МассивСпособовУдержанийИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентом);
			МассивСпособовУдержанийИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентомДоПредела);
			МассивСпособовУдержанийИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.УдержаниеФиксированнойСуммой);
			МассивСпособовУдержанийИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистФиксСуммойДоПредела);
			МассивСпособовУдержанийИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателю);
			
			Запрос.УстановитьПараметр("парамМассивСпособовУдержанийИЛ", МассивСпособовУдержанийИЛ);

			Запрос.Текст = ПочтовыеПереводыТекст;
			Запрос.Выполнить();
			ПочтовыеПереводыТекст = "ВТ_ПочтовыеПереводы";
			
			// присоединяем данные для расчета почтового перевода
			ТекстЗапроса = ТекстЗапроса + "
			|ЛЕВОЕ СОЕДИНЕНИЕ " + ПочтовыеПереводыТекст + " КАК ПочтовыеПереводы
			|	ПО Основной.ФизЛицо = ПочтовыеПереводы.ФизЛицо
			|		И Основной.ОбособленноеПодразделение = ПочтовыеПереводы.ОбособленноеПодразделение
			|		И Основной.Сотрудник = ПочтовыеПереводы.Сотрудник
			|		И Основной.ДокументОснование = ПочтовыеПереводы.ДокументОснование
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|						Основной.Регистратор,
			|						Основной.НомерСтроки,
			|						Основной.ВидРасчета,
			|						МАКСИМУМ(ШкалаСтавокУдержаний.Период) КАК Период
			|					ИЗ
			|						РегистрРасчета.УдержанияРаботниковОрганизаций КАК Основной
			|
			|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШкалаСтавокУдержаний КАК ШкалаСтавокУдержаний
			|							ПО Основной.ВидРасчета = ШкалаСтавокУдержаний.ВидРасчета
			|								И ШкалаСтавокУдержаний.Период <= КОНЕЦПЕРИОДА(Основной.ПериодРегистрации) 
			|					ГДЕ
			|						Основной.Регистратор = &парамРегистратор
			|						И Основной.Авторасчет
			|						И Основной.ВидРасчета.СпособРасчета = &СпособРасчетаПочтовыйСбор
			|					СГРУППИРОВАТЬ ПО
			|						Основной.Регистратор,
			|						Основной.НомерСтроки,
			|						Основной.ВидРасчета) КАК ШкалаСтавокПочтовогоСбораСрезПоследних
			|	ПО Основной.Регистратор = ШкалаСтавокПочтовогоСбораСрезПоследних.Регистратор
			|		И Основной.НомерСтроки = ШкалаСтавокПочтовогоСбораСрезПоследних.НомерСтроки
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШкалаСтавокУдержаний КАК ШкалаСтавокПочтовогоСбора
			|	ПО ШкалаСтавокПочтовогоСбораСрезПоследних.ВидРасчета = ШкалаСтавокПочтовогоСбора.ВидРасчета
			|		И ШкалаСтавокПочтовогоСбораСрезПоследних.Период = ШкалаСтавокПочтовогоСбора.Период
			|		И ШкалаСтавокПочтовогоСбора.НижнийПредел < ПочтовыеПереводы.РазмерПочтовогоПеревода
			|		И ПочтовыеПереводы.РазмерПочтовогоПеревода <= ШкалаСтавокПочтовогоСбора.ВерхнийПредел
			|";

			
		КонецЕсли;

		ТекстЗапроса = ТекстЗапроса + "
		|ГДЕ " + ВнешнееУсловие;

	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|УПОРЯДОЧИТЬ ПО НомерСтроки";
	
    Запрос.Текст = ТекстЗапроса;
	Возврат Запрос.Выполнить();
		
КонецФункции  // ПолучитьДанныеДляРасчета

Функция ПолучитьТекстПоказателя(НеобходимыеДанные, ИмяРегистра, Предопределенный = Ложь)		

	МассивСтажей = НеобходимыеДанные["ПроизвольныеСтажи"];
		
	Если НеобходимыеДанные.СдельныйЗаработок или 
		НеобходимыеДанные.ОтработаноВремени или 
		НеобходимыеДанные.НормаВремениЗаМесяц или
		НеобходимыеДанные.Стаж или
		МассивСтажей.Количество() > 0 или
		НеобходимыеДанные.База Тогда
		
		Если ИмяРегистра = "УдержанияРаботниковОрганизаций" Или ИмяРегистра = "ДополнительныеНачисленияРаботниковОрганизаций" Или ИмяРегистра = "УправленческиеУдержания" Тогда
			
			Показатель1Текст = "ВЫБОР "+
			?(НеобходимыеДанные.Стаж, "                 
			|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.Стаж)
			|		ТОГДА РАЗНОСТЬДАТ(ДанныеОСтаже.Период, Основной.БазовыйПериодКонец, МЕСЯЦ)", ""); 
			
			Для Каждого ВидСтажа Из МассивСтажей Цикл
				
				КодСтажа = "Стаж_"+СокрП(ВидСтажа.Значение); // код стажа
				
				Показатель1Текст = Показатель1Текст +
				"	КОГДА Показатели.Показатель1.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Стаж) И Показатели.Показатель1.ВидСтажа = "+КодСтажа+".ВидСтажа 
				|	ТОГДА РАЗНОСТЬДАТ(ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(" + КодСтажа+".ДатаОтсчета, МЕСЯЦ, -" + КодСтажа+".РазмерМесяцев), ДЕНЬ, -" + КодСтажа+".РазмерДней), Основной.БазовыйПериодКонец, МЕСЯЦ)
				|";
			КонецЦикла;
			
		Иначе
			
			Показатель1Текст = "ВЫБОР "+
			?(НеобходимыеДанные.Стаж, "                 
			|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.Стаж)
			|		ТОГДА РАЗНОСТЬДАТ(ДанныеОСтаже.Период, КОНЕЦПЕРИОДА(Основной.ПериодДействия, МЕСЯЦ), МЕСЯЦ)", "") + 
			?(НеобходимыеДанные.СдельныйЗаработок, "
			|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.СдельнаяВыработка) 
			|		ТОГДА ДанныеОСдельномЗаработке.СуммаЗаработка", "");  
			
			Если ИмяРегистра = "УправленческиеНачисления" Тогда
				
				Показатель1Текст = Показатель1Текст +		
				?(НеобходимыеДанные.ОтработаноВремени, "
				|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВДнях)  
				|		ТОГДА ВЫБОР
				|			КОГДА Основной.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
				|				ТОГДА ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия, 0)
				|			ИНАЧЕ ЕСТЬNULL(ДанныеГрафика.ДополнительноеЗначениеФактическийПериодДействия, 0)
				|		КОНЕЦ 
				|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВЧасах)
				|		ТОГДА ВЫБОР
				|			КОГДА Основной.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
				|				ТОГДА ЕСТЬNULL(ДанныеГрафика.ДополнительноеЗначениеФактическийПериодДействия, 0)
				|			ИНАЧЕ ЕСТЬNULL(ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия, 0)
				|		КОНЕЦ", "") +
				?(НеобходимыеДанные.НормаВремениЗаМесяц, "
				|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.НормаВремениВДнях)
				|		ТОГДА ВЫБОР 
				|			КОГДА Основной.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням) 
				|				ТОГДА ДанныеГрафика.ОсновноеЗначениеНормаПериодДействия 
				|			ИНАЧЕ ДанныеГрафика.ДополнительноеЗначениеНормаПериодДействия 
				|		КОНЕЦ
				|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.НормаВремениВЧасах)
				|		ТОГДА ВЫБОР 
				|			КОГДА Основной.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням) 
				|				ТОГДА ДанныеГрафика.ДополнительноеЗначениеНормаПериодДействия 
				|			ИНАЧЕ ДанныеГрафика.ОсновноеЗначениеНормаПериодДействия 
				|		КОНЕЦ", "");
				
			Иначе
				
				Показатель1Текст = Показатель1Текст +		
				?(НеобходимыеДанные.ОтработаноВремени, "
				|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВДнях)  
				|		ТОГДА ВЫБОР
				|				КОГДА Основной.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
				|					ТОГДА ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия
				|				ИНАЧЕ ДанныеГрафика.ДополнительноеЗначениеФактическийПериодДействия
				|			  КОНЕЦ 
				|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВЧасах)
				|		ТОГДА ВЫБОР
				|				КОГДА Основной.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
				|					ТОГДА ДанныеГрафика.ДополнительноеЗначениеФактическийПериодДействия
				|				ИНАЧЕ ДанныеГрафика.ОсновноеЗначениеФактическийПериодДействия
				|			  КОНЕЦ", "") +
				?(НеобходимыеДанные.НормаВремениЗаМесяц, "
				|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.НормаВремениВДнях)
				|		ТОГДА ВЫБОР 
				|				КОГДА Основной.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням) 
				|					ТОГДА ДанныеГрафика.ОсновноеЗначениеНормаПериодДействия 
				|				ИНАЧЕ ДанныеГрафика.ДополнительноеЗначениеНормаПериодДействия 
				|			КОНЕЦ
				|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.НормаВремениВЧасах)
				|		ТОГДА ВЫБОР 
				|				КОГДА Основной.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням) 
				|					ТОГДА ДанныеГрафика.ДополнительноеЗначениеНормаПериодДействия 
				|				ИНАЧЕ ДанныеГрафика.ОсновноеЗначениеНормаПериодДействия 
				|			КОНЕЦ", "");
				
			КонецЕсли;
			
			Для Каждого ВидСтажа Из МассивСтажей Цикл

				КодСтажа = "Стаж_"+СокрП(ВидСтажа.Значение); // код стажа
				
				Показатель1Текст = Показатель1Текст +
				"	КОГДА Показатели.Показатель1.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Стаж) И Показатели.Показатель1.ВидСтажа = "+КодСтажа+".ВидСтажа 
				|	ТОГДА РАЗНОСТЬДАТ(ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(" + КодСтажа+".ДатаОтсчета, МЕСЯЦ, -" + КодСтажа+".РазмерМесяцев), ДЕНЬ, -" + КодСтажа+".РазмерДней), Основной.ПериодДействияКонец, МЕСЯЦ)
				|";
			КонецЦикла;
			
		КонецЕсли;
		
		Показатель1Текст = Показатель1Текст +		
		?(НеобходимыеДанные.База, "
		|	КОГДА Показатели.Показатель1 = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.РасчетнаяБаза)
		|		ТОГДА ЕСТЬNULL(База.РезультатБаза,0)", "");	
		
		Если Предопределенный Тогда

			Показатель1Текст = Показатель1Текст + "				
			|ИНАЧЕ 0
			|КОНЕЦ ";
		Иначе
			Показатель1Текст = Показатель1Текст + "				
			|ИНАЧЕ ВЫБОР КОГДА Показатели.Показатель1.ТипПоказателя В (&ШкальныеПоказатели)
			|		ТОГДА Показатели.Показатель1
			|	    ИНАЧЕ  Основной.Показатель1 / ВЫБОР КОГДА Показатели.Показатель1.ТипПоказателя В (&ПроцентныеПоказатели) ТОГДА 100 ИНАЧЕ 1 КОНЕЦ
			|КОНЕЦ КОНЕЦ";
			
		КонецЕсли;
		
	Иначе
		Если Предопределенный Тогда

			Показатель1Текст = "				
			|0 ";
		Иначе

			Показатель1Текст = "ВЫБОР 
			|КОГДА Показатели.Показатель1.ТипПоказателя В (&ШкальныеПоказатели)
			|		ТОГДА Показатели.Показатель1
			|	  	ИНАЧЕ  Основной.Показатель1 / ВЫБОР КОГДА Показатели.Показатель1.ТипПоказателя В (&ПроцентныеПоказатели) ТОГДА 100 ИНАЧЕ 1 КОНЕЦ
			|КОНЕЦ";
		КонецЕсли;
	КонецЕсли;
	
	Возврат Показатель1Текст;
	
КонецФункции //ПолучитьТекстПоказателя

Процедура ДобавитьПоказатели(НеобходимыеДанные, КоличествоПоказателей, ТекстЗапроса, Показатель1Текст, Показатель1ТекстПредопределенный) Экспорт
	
	Если НеобходимыеДанные.ПоказателиСхемМотивации Тогда
		
		Если КоличествоПоказателей = 0 Тогда
			ТекстЗапроса = ТекстЗапроса + ",
			|	ВЫБОР
			|		КОГДА Основной.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом),ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ОтСтажаПроцентом),ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработка))
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК РасчетИмеетБазовыеНачисления,
			|	Ложь КАК РасчетИмеетОтработанноеВремя,
			|	0 КАК КоличествоПоказателей,";
		Иначе
			ТекстЗапроса = ТекстЗапроса + ",
			|	ВЫБОР
			|		КОГДА Основной.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Процентом),ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ОтСтажаПроцентом),ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработка))
			|			ТОГДА ИСТИНА
			|		КОГДА Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула)
			|			ТОГДА Показатели.РасчетИмеетБазовыеНачисления
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК РасчетИмеетБазовыеНачисления,
			|	Показатели.РасчетИмеетОтработанноеВремя КАК РасчетИмеетОтработанноеВремя,
			|	Показатели.КоличествоПоказателей КАК КоличествоПоказателей,";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		| Основной.ВидРасчета.ФормулаРасчета КАК ФормулаРасчета";

		Для СчПоказателей = 1 По КоличествоПоказателей Цикл
			Если СчПоказателей > 6 Тогда					
				ПоказательТекст = СтрЗаменить(Показатель1ТекстПредопределенный, "Показатель1", "Показатель"+СчПоказателей);
			ИначеЕсли СчПоказателей > 1 Тогда
				ПоказательТекст = СтрЗаменить(Показатель1Текст, "Показатель1", "Показатель"+СчПоказателей);
			Иначе
				ПоказательТекст = Показатель1Текст;
			КонецЕсли;					
			
			ТекстЗапроса = ТекстЗапроса + ",
			|	Показатели.Показатель" + СчПоказателей + " КАК ПоказательМотивации" + СчПоказателей + ",
			|	Показатели.Показатель" + СчПоказателей + "ЯвляетсяРасчетнойБазой Как Показатель" + СчПоказателей + "ЯвляетсяРасчетнойБазой,
			|	Показатели.Показатель" + СчПоказателей+".Наименование Как Показатель" + СчПоказателей + "Наименование,
			|	" + ПоказательТекст + " Как Показатель"+СчПоказателей;
			
		КонецЦикла;			
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПрименятьКорректировкуПрочихНалоговВзносовОтчислений(Организация, МесяцНачисления) Экспорт
       	
	Если МесяцНачисления >= Дата(2021, 1, 1) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;	
    
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДатаАктуальности", МесяцНачисления);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УчетнаяПолитикаНУ.НеПрименятьКорректировкуПрочихНалоговВзносовОтчислений
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&ДатаАктуальности, Организация = &парамОрганизация) КАК УчетнаяПолитикаНУ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
    	Возврат НЕ Выборка.НеПрименятьКорректировкуПрочихНалоговВзносовОтчислений;
	Иначе
    	Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ПрименятьВычетВОСМСДляФизическихЛицИГПХ(Организация, МесяцНачисления) Экспорт
	
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДатаАктуальности", МесяцНачисления);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УчетнаяПолитикаНУ.ПрименятьВычетВОСМСДляФизическихЛицИГПХ
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&ДатаАктуальности, Организация = &парамОрганизация) КАК УчетнаяПолитикаНУ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
    	Возврат Выборка.ПрименятьВычетВОСМСДляФизическихЛицИГПХ;
	Иначе
    	Возврат Ложь;
	КонецЕсли;
	
КонецФункции
