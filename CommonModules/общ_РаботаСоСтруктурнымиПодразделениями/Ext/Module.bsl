////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для работы со структурными подразделениями

#Если Сервер ИЛИ ТолстыйКлиентОбычноеПриложение ИЛИ ВнешнееСоединение Тогда

// Процедура вызывается при изменении значения реквизита формы "СтруктурноеПодразделениеОрганизация" и устанавливает значения реквизитов объекта
//
// Параметры
//  ВыбранноеЗначение - СправочникСсылка.Организации, СправочникСсылка.ПодразделенияОрганизаций - выбранное значение в поле "СтруктурноеПодразделениеОрганизация" формы
//  Организация - СправочникСсылка.Организации - значение реквизита "Организация" объекта
//  СтруктурноеПодразделение - СправочникСсылка.ПодразделенияОрганизаций - значение реквизита "СтруктурноеПодразделение" объекта
//  СтруктураПараметров - Структура - дополнительные параметры, передаваемые из формы, также в этот параметр возвращается структура изменений реквизитов
//
Процедура СтруктурноеПодразделениеПриИзменении(ВыбранноеЗначение, Организация, СтруктурноеПодразделение, СтруктураПараметров = Неопределено) Экспорт
	
	Если СтруктураПараметров = Неопределено Тогда 
		СтруктураПараметров = Новый Структура;
	КонецЕсли;
	
	Если ВыбранноеЗначение = Неопределено Тогда 
		СтруктураПараметров.Вставить("ИзмененаОрганизация", Ложь);
		СтруктураПараметров.Вставить("ИзмененоСтруктурноеПодразделение", Ложь);
	КонецЕсли;
	
	ИсходнаяОрганизация 	 		 = Организация;
	ИсходноеСтруктурноеПодразделение = СтруктурноеПодразделение;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Организации") Тогда 
		Организация = ВыбранноеЗначение;
		СтруктурноеПодразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	Иначе 
		Организация = фин_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ВыбранноеЗначение, "Владелец");
		СтруктурноеПодразделение = ВыбранноеЗначение;
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ИзмененаОрганизация", 			 ИсходнаяОрганизация <> Организация);
	СтруктураПараметров.Вставить("ИзмененоСтруктурноеПодразделение", ИсходноеСтруктурноеПодразделение <> СтруктурноеПодразделение);
							
КонецПроцедуры

// Процедура выполняет установку начального значения реквизита "СтруктурноеПодразделениеОрганизация" формы
// 
// Параметры
//  Организация - СправочникСсылка.Организации - значение реквизита "Организация" объекта
//  СтруктурноеПодразделение - СправочникСсылка.ПодразделенияОрганизаций - значение реквизита "СтруктурноеПодразделение" объекта
//  СтруктурноеПодразделениеОрганизация - СправочникСсылка.Организации, СправочникСсылка.ПодразделенияОрганизаций - значение реквизита "СтруктурноеПодразделениеОрганизация" формы
//  ПоддержкаРаботыСоСтруктурнымиПодразделениями - Булево - (НЕ ИСПОЛЬЗУЕТСЯ, в последующем будет удален)признак поддержки работы со структурными подразделениями
//
Процедура УстановитьВидимостьСтруктурногоПодразделения(Организация, СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация, ПоддержкаРаботыСоСтруктурнымиПодразделениями = Ложь) Экспорт
	
	Если ЗначениеЗаполнено(СтруктурноеПодразделение) Тогда 
		СтруктурноеПодразделениеОрганизация = СтруктурноеПодразделение;
	Иначе 
		СтруктурноеПодразделениеОрганизация = Организация;
	КонецЕсли;
	
КонецПроцедуры


// Процедура устанавливает заголовок переданного элемента управления формы в зависимости от заполненности реквзиита объекта "СтруктурноеПодразделение"
// и включенного/отключенного признака поддержки работы со структурными подразделениями
//
// Параметры
//  Элемент - СправочникСсылка.Организации, СправочникСсылка.ПодразделенияОрганизаций - элемент формы, для которого необходимо определить заголовок
//  СтруктурноеПодразделение - СправочникСсылка.ПодразделенияОрганизаций - значение реквизита "СтруктурноеПодразделение" объекта
//  ПоддержкаРаботыСоСтруктурнымиПодразделениями - Булево - признак поддержки работы со структурными подразделениями
//  
Процедура УстановитьСвойстваЭлементаСтруктурноеПодразделениеОрганизация(Элемент, СтруктурноеПодразделение, ПоддержкаРаботыСоСтруктурнымиПодразделениями) Экспорт
	
	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ ЗначениеЗаполнено(СтруктурноеПодразделение) Тогда
		Элемент.Заголовок 				= НСтр("ru = 'Структурная единица'");
		Элемент.ТолькоПросмотр 			= Ложь;
		Элемент.КнопкаВыпадающегоСписка	= Ложь;
		Элемент.КнопкаВыбора 			= Истина И (НЕ Элемент.ТолькоПросмотр И Элемент.Доступность);
		Элемент.ОтображениеКнопкиВыбора	= ОтображениеКнопкиВыбора.ОтображатьВПолеВвода;
	Иначе 
		Элемент.Заголовок 				= НСтр("ru = 'Организация'");
		Элемент.ТолькоПросмотр 			= НЕ фин_ОбщегоНазначенияСервер.ПолучитьЗначениеПоУмолчанию(ПользователиКлиентСервер.ТекущийПользователь(), "УчетПоВсемОрганизациям");
		Элемент.КнопкаВыпадающегоСписка	= Истина И (НЕ Элемент.ТолькоПросмотр И Элемент.Доступность);
		Элемент.КнопкаВыбора 			= Ложь;
		Элемент.ОтображениеКнопкиВыбора	= ОтображениеКнопкиВыбора.Авто;
	КонецЕсли;
	
	Элемент.ВыбиратьТип = Ложь;
	
КонецПроцедуры

Процедура ПриИзмененииЗначенияОрганизации(ДанныеОбъекта, СтруктураПараметровДляПолученияДоговора = Неопределено, СтруктураРезультатаВыполнения = Неопределено) Экспорт

	ТекПользователь = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеОбъекта)=Тип("ДанныеФормыСтруктура") Тогда
		
		Если ДанныеОбъекта.Свойство("Организация") Тогда  
			Если ДанныеОбъекта.Свойство("ПодразделениеОрганизации")
			   И ЗначениеЗаполнено(ДанныеОбъекта.Организация) Тогда
				
				ПодразделениеПоУмолчанию = фин_ОбщегоНазначенияСервер.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновноеПодразделениеОрганизации");
				
				// Если ПодразделениеОрганизации не заполнено.
				Если НЕ ЗначениеЗаполнено(ДанныеОбъекта.ПодразделениеОрганизации) Тогда
					
					// Если ПодразделениеПоУмолчанию сооответствует выбранной организации, подставляем его.
					Если ПодразделениеПоУмолчанию.Владелец = ДанныеОбъекта.Организация Тогда
						ДанныеОбъекта.ПодразделениеОрганизации = ПодразделениеПоУмолчанию;
					КонецЕсли;
					
				Иначе // Если ПодразделениеОрганизации заполнено.
					
					// Если ПодразделениеОрганизации не соответствует выбранной организации.
					Если НЕ ДанныеОбъекта.ПодразделениеОрганизации.Владелец = ДанныеОбъекта.Организация Тогда
						
						// Если ПодразделениеПоУмолчанию сооответствует выбранной организации, подставляем его.
						Если ПодразделениеПоУмолчанию.Владелец = ДанныеОбъекта.Организация Тогда
							ДанныеОбъекта.ПодразделениеОрганизации = ПодразделениеПоУмолчанию;
						Иначе // Выбрана не основная организация. ПодразделениеОрганизации нужно очистить.
							ДанныеОбъекта.ПодразделениеОрганизации = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Значение в поле ""Подразделение"" не соответствует выбранной организации и было очищено.'"));
						КонецЕсли;   					
					КонецЕсли;       				
				КонецЕсли;           			
			КонецЕсли;               

			Если ДанныеОбъекта.Свойство("ДоговорКонтрагента") Тогда
				Если ЗначениеЗаполнено(ДанныеОбъекта.Организация) Тогда
					
				Иначе
					ДанныеОбъекта.ДоговорКонтрагента = Неопределено;
				КонецЕсли;
			КонецЕсли;

			
			Если ДанныеОбъекта.Свойство("УчитыватьНДС") Тогда			
				ДанныеОбъекта.УчитыватьНДС = фин_ЗаполнениеДокументов.ПолучитьПризнакПлательщикаНДС(ДанныеОбъекта.Организация, ДанныеОбъекта.Дата);	
				
				Если НЕ ДанныеОбъекта.УчитыватьНДС И ДанныеОбъекта.Свойство("СуммаВключаетНДС") Тогда
					ДанныеОбъекта.СуммаВключаетНДС = Ложь;
				КонецЕсли;			
			КонецЕсли;			

		КонецЕсли;
		
		СписокТЧ = Новый СписокЗначений;
		Для Каждого ТЧ Из ДанныеОбъекта.Ссылка.Метаданные().ТабличныеЧасти Цикл
			
			Если (ТЧ.Реквизиты.Найти("Цена") <> Неопределено) И (ТЧ.Реквизиты.Найти("Номенклатура") <> Неопределено) Тогда
				СписокТЧ.Добавить(ТЧ.Имя);
			КонецЕсли;
			
		КонецЦикла;
		
		ТипЦен = "";
		Если ДанныеОбъекта.Свойство("ТипЦен") Тогда
			ТипЦен = ДанныеОбъекта.ТипЦен;
		КонецЕсли;
		
		Если СписокТЧ.Количество() > 0 Тогда
			
			Если СписокТЧ.Количество() = 1 Тогда
				
				ТЧ = ДанныеОбъекта[СписокТЧ[0].Значение];
				МассивНоменклатуры = ТЧ.Выгрузить(,"Номенклатура").ВыгрузитьКолонку("Номенклатура");
				
			Иначе
				
				МассивНоменклатуры = Новый Массив;
				
				Для Каждого ЭлементСписка Из СписокТЧ Цикл
					
					ТЧ = ДанныеОбъекта[ЭлементСписка.Значение];

					Для Каждого СтрокаТабличнойЧасти Из ТЧ Цикл
						
						МассивНоменклатуры.Добавить(СтрокаТабличнойЧасти.Номенклатура);
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если СтруктураРезультатаВыполнения = Неопределено Тогда 
				СтруктураРезультатаВыполнения = Новый Структура;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТипЦен) Тогда
				
				СоответствиеЦенНоменклатуры = Новый Соответствие;
				ТаблицаЦенНоменклатуры = дог_УправлениеЦенообразованием.ПолучитьТаблицуЦенНоменклатуры(МассивНоменклатуры, ТипЦен, ДанныеОбъекта.Дата, ДанныеОбъекта.Организация);
				
				Для Каждого СтрокаТаблицыЦен Из ТаблицаЦенНоменклатуры Цикл
					
					ПолученнаяЦена = СтрокаТаблицыЦен.Цена;

					Если СтрокаТаблицыЦен.Валюта <> ДанныеОбъекта.ВалютаДокумента Тогда
						
						СтруктураКурсаЦены = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(СтрокаТаблицыЦен.Валюта, ДанныеОбъекта.Дата);
						
											
						ПолученнаяЦена     = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(
							ПолученнаяЦена, СтрокаТаблицыЦен.Валюта, ДанныеОбъекта.ВалютаДокумента, 
						    СтрокаТаблицыЦен.Курс, ДанныеОбъекта.КурсВзаиморасчетов, 
						    СтрокаТаблицыЦен.Кратность, ДанныеОбъекта.КратностьВзаиморасчетов);

					КонецЕсли;
						
					СоответствиеЦенНоменклатуры.Вставить(СтрокаТаблицыЦен.Номенклатура, Новый Структура("Цена, Валюта", ПолученнаяЦена, СтрокаТаблицыЦен.Валюта));		
				КонецЦикла;
				
				СтруктураРезультатаВыполнения.Вставить("СоответствиеЦенНоменклатуры", СоответствиеЦенНоменклатуры);
				СтруктураРезультатаВыполнения.Вставить("ТипЦен", ТипЦен);
				СтруктураРезультатаВыполнения.Вставить("ТипЦенЦенаВключаетНДС", ТипЦен.ЦенаВключаетНДС);
				
			КонецЕсли;
			
			СтруктураРезультатаВыполнения.Вставить("СписокТЧ", СписокТЧ);
					
		КонецЕсли;
		
	Иначе
		ДокументОбъект = ДанныеОбъекта;
		МетаданныеДокумента = ДокументОбъект.Метаданные();
		Если фин_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("Организация", МетаданныеДокумента) Тогда  
			Если фин_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("ПодразделениеОрганизации", МетаданныеДокумента)
			   И ЗначениеЗаполнено(ДокументОбъект.Организация) Тогда
				
				ПодразделениеПоУмолчанию = фин_ОбщегоНазначенияСервер.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновноеПодразделениеОрганизации");
				
				// Если ПодразделениеОрганизации не заполнено.
				Если НЕ ЗначениеЗаполнено(ДокументОбъект.ПодразделениеОрганизации) Тогда
					
					// Если ПодразделениеПоУмолчанию сооответствует выбранной организации, подставляем его.
					Если ПодразделениеПоУмолчанию.Владелец = ДокументОбъект.Организация Тогда
						ДокументОбъект.ПодразделениеОрганизации = ПодразделениеПоУмолчанию;
					КонецЕсли;
					
				Иначе // Если ПодразделениеОрганизации заполнено.
					
					// Если ПодразделениеОрганизации не соответствует выбранной организации.
					Если НЕ ДокументОбъект.ПодразделениеОрганизации.Владелец = ДокументОбъект.Организация Тогда
						
						// Если ПодразделениеПоУмолчанию сооответствует выбранной организации, подставляем его.
						Если ПодразделениеПоУмолчанию.Владелец = ДокументОбъект.Организация Тогда
							ДокументОбъект.ПодразделениеОрганизации = ПодразделениеПоУмолчанию;
						Иначе // Выбрана не основная организация. ПодразделениеОрганизации нужно очистить.
							ДокументОбъект.ПодразделениеОрганизации = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Значение в поле ""Подразделение"" не соответствует выбранной организации и было очищено.");
						КонецЕсли;   					
					КонецЕсли;       				
				КонецЕсли;           			
			КонецЕсли;               

			Если фин_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("ДоговорКонтрагента", МетаданныеДокумента) Тогда
				Если ЗначениеЗаполнено(ДокументОбъект.Организация) Тогда

				Иначе
					ДокументОбъект.ДоговорКонтрагента = Неопределено;
				КонецЕсли;
			КонецЕсли;

			Если фин_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("БанковскийСчетОрганизации", МетаданныеДокумента) Тогда
				ДокументОбъект.БанковскийСчетОрганизации = ДокументОбъект.Организация.ОсновнойБанковскийСчет;
			КонецЕсли;
			
			// Устанавливаем признак учета НДС
			// в зависимости от того, является ли организация плательщиком НДС
			УчетнаяПолитикаПоНалоговомуУчету = Неопределено;
			
			Если фин_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("УчитыватьНДС", МетаданныеДокумента) Тогда			
				ДокументОбъект.УчитыватьНДС = фин_ЗаполнениеДокументов.ПолучитьПризнакПлательщикаНДС(ДокументОбъект.Организация, ДокументОбъект.Дата, УчетнаяПолитикаПоНалоговомуУчету);	
				
				Если НЕ ДокументОбъект.УчитыватьНДС и фин_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокумента) Тогда
					ДокументОбъект.СуммаВключаетНДС = Ложь;
				КонецЕсли;			
			КонецЕсли;			


		КонецЕсли;
		
	КонецЕсли

КонецПроцедуры // ПриИзмененииЗначенияОрганизации()

#КонецЕсли

#Если Клиент Тогда

// Процедура вызывается из формы объекта после выбора значения в поле "СтруктурноеПодразделениеОрганизация" и выполняет общие действия для всех объектов.
// А именно, заполняет реквизиты "Организация" и "СтруктурноеПодразделение" объекта и устанавливает значение реквизита формы "СтруктурноеПодразделениеОрганизация"
//
// Параметры
//  Результат - Структура - результат обработки выбора значения из формы "ФормаВыбораСтруктурногоПодразделения"
//  Организация - СправочникСсылка.Организации - значение реквизита "Организация" объекта
//  СтруктурноеПодразделение - СправочникСсылка.ПодразделенияОрганизаций - значение реквизита "СтруктурноеПодразделение" объекта
//  ЗначениеЭлементаФормы - СправочникСсылка.Организации, СправочникСсылка.ПодразделенияОрганизаций - значение реквизита формы, который хранит информацию о выбранной структурной единице
//
Процедура ПослеВыбораСтруктурногоПодразделения(Результат, Организация, СтруктурноеПодразделение, ЗначениеЭлементаФормы = Неопределено) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если НЕ Результат.Свойство("ИзмененаОрганизация") Тогда 
			Результат.Вставить("ИзмененаОрганизация", Ложь);
		КонецЕсли;
		Если НЕ Результат.Свойство("ИзмененоСтруктурноеПодразделение") Тогда 
			Результат.Вставить("ИзмененоСтруктурноеПодразделение", Ложь);
		КонецЕсли;		
		Если Организация = Результат.Организация Тогда
			Результат.ИзмененаОрганизация = Ложь;
		Иначе 
			Результат.ИзмененаОрганизация = Истина;
		КонецЕсли;		
		
		Организация = Результат.Организация;
		РезультатСтруктурноеПодразделение = СтруктурноеПодразделение;
		Если Результат.Свойство("СтруктурноеПодразделение") Тогда 
			РезультатСтруктурноеПодразделение = Результат.СтруктурноеПодразделение;
		ИначеЕсли Результат.Свойство("Подразделение") Тогда 
			РезультатСтруктурноеПодразделение = Результат.Подразделение;
		КонецЕсли;
		
		ТипПодразделения = "СправочникСсылка.ПодразделенияОрганизаций";
    	ОграничениеТипа = Новый ОписаниеТипов(ТипПодразделения);    
    	РезультатСтруктурноеПодразделение = ОграничениеТипа.ПривестиЗначение(РезультатСтруктурноеПодразделение);
		
		Если СтруктурноеПодразделение = РезультатСтруктурноеПодразделение Тогда
			Результат.ИзмененоСтруктурноеПодразделение = Ложь;
		Иначе 
			Результат.ИзмененоСтруктурноеПодразделение = Истина;
		КонецЕсли;
		
		СтруктурноеПодразделение = РезультатСтруктурноеПодразделение;
		
		Если ЗначениеЗаполнено(СтруктурноеПодразделение) Тогда 
			ЗначениеЭлементаФормы = СтруктурноеПодразделение;
		Иначе 
			ЗначениеЭлементаФормы = Организация;
		КонецЕсли;
	Иначе 
		Результат = Новый Структура("Организация, СтруктурноеПодразделение, ИзмененаОрганизация, ИзмененоСтруктурноеПодразделение", 
									Организация, 
									СтруктурноеПодразделение,
									Ложь,
									Ложь);
	КонецЕсли;
	
КонецПроцедуры


// Процедура должна использоваться при начале выбора значения в поле "СтруктурноеПодразделениеОрганизация" форм
// 
// Параметры
//  Форма - УправляемаяФорма - Форма из которой происходит вызов процедуры
//  СтандартнаяОбработка - Булево - признак стандартной обработки события начала выбора
//  Организация - СправочникСсылка.Организации - значение реквизита "Организация"  объекта или аналогичного по свойствам и смыловой нагрузке реквизита объекта
//  СтруктурноеПодразделение - СправочникСсылка.ПодразделенияОрганизаций - значение реквизита "СтруктурноеПодразделение" объекта
//  ДоступностьИзмененияОрганизации - Булево - флаг, влияющий на доступность поля "Организация" форме "ФормаВыбораСтруктурногоПодразделения"
//  ИмяПроцедурыОбработкиВыбора - Строка - имя процедуры в модуле формы, которая будет вызвана после выбора значения в форме "ФормаВыбораСтруктурногоПодразделения"
//  ДополнительныеПараметры - Структура - дополнительные параметры, которые необходимо передать в обработчик события после выбора
//
Процедура СтруктурноеПодразделениеНачалоВыбора(Форма, СтандартнаяОбработка, Организация, СтруктурноеПодразделение, ДоступностьИзмененияОрганизации = Истина, ИмяПроцедурыОбработкиВыбора = "ПослеВыбораСтруктурногоПодразделения", ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Форма.ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ ЗначениеЗаполнено(СтруктурноеПодразделение) Тогда
		СтандартнаяОбработка = Ложь;
		ОписаниеОповещения = Новый ОписаниеОповещения(ИмяПроцедурыОбработкиВыбора, Форма, ДополнительныеПараметры);
		ОткрытьФорму("ОбщаяФорма.общ_ФормаВыбораСтруктурногоПодразделения", Новый Структура("Организация, СтруктурноеПодразделение, ДоступноИзменениеОрганизации", Организация, СтруктурноеПодразделение, ДоступностьИзмененияОрганизации), Форма, Истина,,, ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

// В функции проверяется измененность реквизита формы "СтруктурноеПодразделениеОрганизация" по отношению к реквизитам объекта
// 
// Параметры
//  СтруктурноеПодразделениеОрганизация - СправочникСсылка.Организации, СправочникСсылка.ПодразделенияОрганизаций - значение реквизита формы, содержащее значение организации или структурного подразделения
//  Организация - СправочникСсылка.Организации - значение реквизита "Организация" объекта
//  СтруктурноеПодразделение - СправочникСсылка.ПодразделенияОрганизаций - значение реквизита "СтруктурноеПодразделение" объекта
//
// Возвращаемое значение
//  Структура - Структура - структура, содержащая информацию об изменениях. Ключи структуры: ИзмененаОрганизация, ИзмененоСтруктурноеПодразделение. Ключи заполняются если изменена организация или структурное подразделение соответственно.
//
Функция ПроверитьИзменениеЗначенийОрганизацииСтруктурногоПодразделения(СтруктурноеПодразделениеОрганизация, Организация, СтруктурноеПодразделение) Экспорт 
	
	ИзмененаОрганизация = Ложь;
	ИзмененоСтруктурноеПодразделение = Ложь;
	
	Если ТипЗнч(СтруктурноеПодразделениеОрганизация) = Тип("СправочникСсылка.Организации") 
		И (СтруктурноеПодразделениеОрганизация <> Организация 
			ИЛИ ЗначениеЗаполнено(СтруктурноеПодразделение)) Тогда 
		ИзмененаОрганизация = Истина;
		ИзмененоСтруктурноеПодразделение = Истина;
	ИначеЕсли ТипЗнч(СтруктурноеПодразделениеОрганизация) = Тип("СправочникСсылка.ПодразделенияОрганизаций") 
		И СтруктурноеПодразделениеОрганизация <> СтруктурноеПодразделение Тогда 
		ИзмененоСтруктурноеПодразделение = Истина;
	КонецЕсли;
	
	Возврат Новый Структура("ИзмененаОрганизация, ИзмененоСтруктурноеПодразделение, НеобходимоИзменитьЗначенияРеквизитовОбъекта", ИзмененаОрганизация, ИзмененоСтруктурноеПодразделение, ИзмененаОрганизация ИЛИ ИзмененоСтруктурноеПодразделение);
	
КонецФункции

#КонецЕсли