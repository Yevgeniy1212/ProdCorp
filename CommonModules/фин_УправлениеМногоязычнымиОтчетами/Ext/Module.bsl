// Получает структуру используемых служебных слов на языке отчета
//
Функция ПолучитьСтруктуруПереводаСлужебныхСлов(ЯзыкПеревода) Экспорт
	СтруктураПеревода = Новый Структура();
	СтруктураПеревода.Вставить("Январь");
	СтруктураПеревода.Вставить("Февраль");
	СтруктураПеревода.Вставить("Март");
	СтруктураПеревода.Вставить("Апрель");
	СтруктураПеревода.Вставить("Май");
	СтруктураПеревода.Вставить("Июнь");
	СтруктураПеревода.Вставить("Июль");
	СтруктураПеревода.Вставить("Август");
	СтруктураПеревода.Вставить("Сентябрь");
	СтруктураПеревода.Вставить("Октябрь");
	СтруктураПеревода.Вставить("Ноябрь");
	СтруктураПеревода.Вставить("Декабрь");
	СтруктураПеревода.Вставить("День");
	СтруктураПеревода.Вставить("Неделя");
	СтруктураПеревода.Вставить("Декада");
	СтруктураПеревода.Вставить("Месяц");
	СтруктураПеревода.Вставить("Квартал");
	СтруктураПеревода.Вставить("Полугодие");
	СтруктураПеревода.Вставить("Год");
	СтруктураПеревода.Вставить("Валюта");
	СтруктураПеревода.Вставить("ВалютаУпр");
	СтруктураПеревода.Вставить("ВалютаРегл");
	СтруктураПеревода.Вставить("Сумма");
	СтруктураПеревода.Вставить("СуммаУпр");
	СтруктураПеревода.Вставить("СуммаСценария");
	СтруктураПеревода.Вставить("ВалютнаяСумма");
	СтруктураПеревода.Вставить("Количество");
	СтруктураПеревода.Вставить("СуммаКорректировки");
	СтруктураПеревода.Вставить("СуммаБезКорректировки");
	СтруктураПеревода.Вставить("КоличествоКорректировки");
	СтруктураПеревода.Вставить("КоличествоБезКорректировки");
	СтруктураПеревода.Вставить("Итого");
	СтруктураПеревода.Вставить("Период");
	СтруктураПеревода.Вставить("Эталон");
	СтруктураПеревода.Вставить("Цена");
	СтруктураПеревода.Вставить("Номенклатура");
	СтруктураПеревода.Вставить("Контрагент");
	СтруктураПеревода.Вставить("СтатьяБюджета");
	СтруктураПеревода.Вставить("Проект");
	СтруктураПеревода.Вставить("УправленческоеПодразделение");
	СтруктураПеревода.Вставить("АнализИсполненияБюджета");
	СтруктураПеревода.Вставить("РазрядностьПланирования");
	СтруктураПеревода.Вставить("СравнениеС");
	СтруктураПеревода.Вставить("ФактическиеДанные");
	СтруктураПеревода.Вставить("ИсполнениеАбсолютное");
	СтруктураПеревода.Вставить("ИсполнениеОтносительное");
	СтруктураПеревода.Вставить("ОтклонениеАбсолютное");
	СтруктураПеревода.Вставить("ОтклонениеОтносительное");
	СтруктураПеревода.Вставить("НачальныеОстатки");
	СтруктураПеревода.Вставить("ОборотыПоСтатьям");
	СтруктураПеревода.Вставить("КонечныеОстатки");
	СтруктураПеревода.Вставить("Миллионы");
	СтруктураПеревода.Вставить("СотниТысяч");
	СтруктураПеревода.Вставить("ДесяткиТысяч");
	СтруктураПеревода.Вставить("Тысячи");
	СтруктураПеревода.Вставить("Сотни");
	СтруктураПеревода.Вставить("Единицы");
	СтруктураПеревода.Вставить("Регистратор");
	СтруктураПеревода.Вставить("Организация");
	СтруктураПеревода.Вставить("ФинансовыйПоказатель");
	СтруктураПеревода.Вставить("Сценарий");
	СтруктураПеревода.Вставить("КонтролирующийСценарий");
	СтруктураПеревода.Вставить("СравнительныйАнализОборотов");
	СтруктураПеревода.Вставить("СравнительныйАнализОстатков");                
	СтруктураПеревода.Вставить("ОборотыПоСчетамБюджетов");
	СтруктураПеревода.Вставить("ЦелевоеЗначение");
	СтруктураПеревода.Вставить("Исполнение");
	СтруктураПеревода.Вставить("Остаток");   
	СтруктураПеревода.Вставить("МониторингКонтролируемыхЗначенийПоБюджетам");
	СтруктураПеревода.Вставить("Разрез1");   
	СтруктураПеревода.Вставить("Разрез2");   
	СтруктураПеревода.Вставить("Разрез3");   
	СтруктураПеревода.Вставить("Разрез4");   
	СтруктураПеревода.Вставить("Разрез5");   
	СтруктураПеревода.Вставить("Разрез6");   
	СтруктураПеревода.Вставить("Разрез7");   
	СтруктураПеревода.Вставить("Разрез8");   
	СтруктураПеревода.Вставить("Разрез9");   
	СтруктураПеревода.Вставить("Разрез10");   
	СтруктураПеревода.Вставить("ПричинаКорректировки");
	СтруктураПеревода.Вставить("ПричинаОтклонения");
	СтруктураПеревода.Вставить("СпособКорректировки");
	СтруктураПеревода.Вставить("ВидОперации");
	СтруктураПеревода.Вставить("ЕдиницаИзмерения");
	СтруктураПеревода.Вставить("АнализПричинОтклонений");
	СтруктураПеревода.Вставить("АнализПричинКорректировок");
	СтруктураПеревода.Вставить("СводКорректировокИОтклонений");
	СтруктураПеревода.Вставить("ПериодПланирования");   
	СтруктураПеревода.Вставить("ИсходноеЗначение");   
	СтруктураПеревода.Вставить("ВеличинаКорректировки");   
	СтруктураПеревода.Вставить("ОтклоненнаяВеличина");   
	СтруктураПеревода.Вставить("РезультирующееЗначение");   
	СтруктураПеревода.Вставить("СальдоНаНачало");   
	СтруктураПеревода.Вставить("СальдоНаКонец");   
	СтруктураПеревода.Вставить("ОборотыЗаПериодИСальдоНаКонец");   
	СтруктураПеревода.Вставить("ДвиженияПериода");   
	СтруктураПеревода.Вставить("Дата");   
	СтруктураПеревода.Вставить("АналитикаДт");   
	СтруктураПеревода.Вставить("АналитикаКт");   
	СтруктураПеревода.Вставить("СчетДт");   
	СтруктураПеревода.Вставить("СчетКт");   
	СтруктураПеревода.Вставить("Счет");   
	СтруктураПеревода.Вставить("КорСчет");   
	СтруктураПеревода.Вставить("КорСубконто");   
	СтруктураПеревода.Вставить("Показатели");   
	СтруктураПеревода.Вставить("Дебет");   
	СтруктураПеревода.Вставить("Кредит");   
	СтруктураПеревода.Вставить("ТекущееСальдо");   
	СтруктураПеревода.Вставить("Оборот");   
	СтруктураПеревода.Вставить("ДокументРассмотрения");   
	СтруктураПеревода.Вставить("ОтветственноеЛицо");   
	СтруктураПеревода.Вставить("ВидВлиянияНаФинансовыйРезультат");   
	СтруктураПеревода.Вставить("ВидСтруктурногоОтклонения");   
	СтруктураПеревода.Вставить("СтруктурноеОтклонение");   
	СтруктураПеревода.Вставить("ВидОтклонения");   
	СтруктураПеревода.Вставить("ПричинаОтклоненияФактическихДанных");   
	СтруктураПеревода.Вставить("РассмотренныеОтклонения");
	СтруктураПеревода.Вставить("ПроцентОтПлана");
	СтруктураПеревода.Вставить("АнализРассогласованияСтатей");
	СтруктураПеревода.Вставить("ЦенаУпр");
	СтруктураПеревода.Вставить("ВалютнаяЦена");
	СтруктураПеревода.Вставить("ЦенаСценария");
	СтруктураПеревода.Вставить("АнализПричинОтклоненийФактическихДанныхБюджетов");
	                                       
	Если ЯзыкПеревода=ЯзыкИнформационнойБазы() ИЛИ ЯзыкПеревода=Справочники[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"ЯзыкиНародовМира"].ПустаяСсылка() Тогда
		Для Каждого ЭлементСтруктуры Из СтруктураПеревода Цикл
			Если Найти(ЭлементСтруктуры.Ключ,"Разрез")<>0 И СтрДлина(ЭлементСтруктуры.Ключ)<=СтрДлина("Разрез")+2 Тогда
				СтруктураПеревода.Вставить(ЭлементСтруктуры.Ключ,фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(Перечисления.фин_ФактическиеПоказателиБюджетирования[ЭлементСтруктуры.Ключ]));
			Иначе
				ЭлементСправочника = Справочники.фин_СлужебныеТерминыБюджетирования[ЭлементСтруктуры.Ключ];
				СтруктураПеревода.Вставить(ЭлементСтруктуры.Ключ,ЭлементСправочника.Наименование);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
		             |	СлужебныеТерминыБюджетирования.Наименование,
		             |	СлужебныеТерминыБюджетирования.Ссылка,
		             |	СловарьТерминовБюджетирования.Перевод
		             |ИЗ
		             |	Справочник.фин_СлужебныеТерминыБюджетирования КАК СлужебныеТерминыБюджетирования
		             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.фин_СловарьТерминовБюджетирования КАК СловарьТерминовБюджетирования
		             |		ПО СлужебныеТерминыБюджетирования.Ссылка = СловарьТерминовБюджетирования.Термин
		             |			И (СловарьТерминовБюджетирования.ЯзыкПеревода = &ЯзыкПеревода)
		             |			И (СловарьТерминовБюджетирования.ГруппаТерминов = &ГруппаТерминов)
		             |ГДЕ
		             |	СлужебныеТерминыБюджетирования.Предопределенный";
		Запрос.УстановитьПараметр("ЯзыкПеревода",	ЯзыкПеревода);
		Запрос.УстановитьПараметр("ГруппаТерминов",	Справочники.фин_СлужебныеТерминыБюджетирования.ПустаяСсылка());
		Выборка = Запрос.Выполнить().Выбрать();
		Для Каждого ЭлементСтруктуры Из СтруктураПеревода Цикл
			ЭлементСправочника = Справочники.фин_СлужебныеТерминыБюджетирования[ЭлементСтруктуры.Ключ];
			Выборка.Сбросить();
			Если Выборка.НайтиСледующий(Новый Структура("Ссылка",ЭлементСправочника)) Тогда
				СтруктураПеревода.Вставить(ЭлементСтруктуры.Ключ,Выборка.Перевод);
			Иначе
				СтруктураПеревода.Вставить(ЭлементСтруктуры.Ключ,ЭлементСправочника.Наименование);
				//Сообщить("Не найден перевод для служебного слова "+ЭлементСправочника.Наименование);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	СтруктураПеревода.Вставить("ЦФО",СтруктураПеревода["УправленческоеПодразделение"]);
	СтруктураПеревода.Вставить("Подразделение",СтруктураПеревода["УправленческоеПодразделение"]);
	Возврат СтруктураПеревода;
КонецФункции //ПолучитьСтруктуруПереводаСлужебныхСлов

// возвращает перевод термина
//
Функция ПолучитьПереводТермина(Знач Термин,ЯзыкПеревода,СтруктураПеревода=Неопределено,КЭШ=Неопределено) Экспорт
	Если НЕ ЗначениеЗаполнено(Термин) Тогда
		Возврат "";
	КонецЕсли;
	Если КЭШ <> Неопределено Тогда
		ЯзыковойНабор 		= КЭШ.Получить(ЯзыкПеревода);
		Если ЯзыковойНабор = Неопределено Тогда
			ЯзыковойНабор = Новый Соответствие;
		КонецЕсли;
		СуществующийПеревод = ЯзыковойНабор.Получить(Термин);
		Если СуществующийПеревод <> Неопределено Тогда
			Возврат СуществующийПеревод;
		КонецЕсли;
	КонецЕсли;
	Если ТипЗнч(Термин)=Тип("Дата") ИЛИ ТипЗнч(Термин)=Тип("Число") Тогда
		Термин = Строка(Термин);
	КонецЕсли;
	Если ТипЗнч(Термин)=Тип("Булево") Тогда
		Термин = Формат(Термин,"БЛ=Нет; БИ=Да");
	КонецЕсли;
	Если ТипЗнч(Термин)=Тип("Строка") Тогда
		Если Найти(Термин," ")<>0 И (ЯзыкПеревода=ЯзыкИнформационнойБазы() ИЛИ ЯзыкПеревода=Справочники[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"ЯзыкиНародовМира"].ПустаяСсылка()) Тогда
			Перевод = Термин;
		Иначе
			Если СтруктураПеревода = Неопределено Тогда
				СтруктураПеревода = ПолучитьСтруктуруПереводаСлужебныхСлов(ЯзыкПеревода);
			КонецЕсли;
			ИскатьПеревод = Истина;
			Попытка
				Если Найти(Термин," ")=0 И СтруктураПеревода.Свойство(Термин) Тогда
					Перевод = СтруктураПеревода[Термин];
					ИскатьПеревод = Ложь;
				КонецЕсли;
			Исключение
			КонецПопытки;
			Если ИскатьПеревод Тогда
				Перевод = Термин;
				Для Каждого ЭлементСтруктуры Из СтруктураПеревода Цикл
					Перевод = СтрЗаменить(НРег(Перевод),НРег(ЭлементСтруктуры.Ключ),ЭлементСтруктуры.Значение);
				КонецЦикла;
				Перевод = СтрЗаменить(НРег(Перевод),"г.",НРег(Лев(СтруктураПеревода["Год"],1))+".");
				Перевод = ?(СтрДлина(Перевод)=0,"",ВРег(Лев(Перевод,1)))+Сред(Перевод,2);
			КонецЕсли;
		КонецЕсли;

		Если КЭШ <> Неопределено Тогда
			ПоместитьПереводВКЭШ(Термин,Перевод,ЯзыковойНабор,КЭШ,ЯзыкПеревода);
		КонецЕсли;
		Возврат Перевод;
	КонецЕсли;
	Если ЯзыкПеревода=ЯзыкИнформационнойБазы() ИЛИ ЯзыкПеревода=Справочники[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"ЯзыкиНародовМира"].ПустаяСсылка() Тогда
		Если Найти(Термин.Метаданные().ПолноеИмя(),"Перечисление.")<>0 Тогда
			Перевод = Строка(Термин);
		Иначе
			Перевод = ?(Термин.Метаданные().Реквизиты.Найти("НаименованиеПолное")=Неопределено ИЛИ Термин.Метаданные().Имя="Валюты" ИЛИ Термин.ЭтоГруппа,?(ТипЗнч(Термин)=Тип("ПланСчетовСсылка.фин_Бюджетирование"),Термин.Наименование,Строка(Термин)),?(СокрЛП(Термин.НаименованиеПолное)="",Термин.Наименование,Термин.НаименованиеПолное));
		КонецЕсли;
		Если КЭШ <> Неопределено Тогда
			ПоместитьПереводВКЭШ(Термин,Перевод,ЯзыковойНабор,КЭШ,ЯзыкПеревода);
		КонецЕсли;
		Возврат Перевод;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	             |	СловарьТерминовБюджетирования.Перевод
	             |ИЗ
	             |	РегистрСведений.фин_СловарьТерминовБюджетирования КАК СловарьТерминовБюджетирования
	             |ГДЕ
	             |	СловарьТерминовБюджетирования.Термин = &Термин
	             |	И СловарьТерминовБюджетирования.ЯзыкПеревода = &ЯзыкПеревода
	             |	И СловарьТерминовБюджетирования.ГруппаТерминов = &ГруппаТерминов";
	Запрос.УстановитьПараметр("ЯзыкПеревода",		ЯзыкПеревода);
	Запрос.УстановитьПараметр("ГруппаТерминов",		?(Найти(Термин.Метаданные().ПолноеИмя(),"Справочник.")<>0,
														Справочники[Термин.Метаданные().Имя].ПустаяСсылка(),
														?(Найти(Термин.Метаданные().ПолноеИмя(),"Перечисление.")<>0,
															Перечисления[Термин.Метаданные().Имя].ПустаяСсылка(),
															?(Найти(Термин.Метаданные().ПолноеИмя(),"ПланСчетов.")<>0,
																ПланыСчетов[Термин.Метаданные().Имя].ПустаяСсылка(),
																ПланыВидовРасчета[Термин.Метаданные().Имя].ПустаяСсылка()
															  )
														  )
													  ));
	Запрос.УстановитьПараметр("Термин",				Термин);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если КЭШ <> Неопределено Тогда
			ПоместитьПереводВКЭШ(Термин,Выборка.Перевод,ЯзыковойНабор,КЭШ,ЯзыкПеревода);
		КонецЕсли;
		Возврат Выборка.Перевод;
	Иначе
		Сообщить("Не найден перевод для термина "+Термин+", справочник: "+Термин.Метаданные().Синоним);
		Попытка
			Перевод = ?(Термин.Метаданные().Реквизиты.Найти("НаименованиеПолное")=Неопределено ИЛИ Термин.Метаданные().Имя = "Валюты",Строка(Термин),Термин.НаименованиеПолное);
		Исключение
			Перевод = Строка(Термин);
		КонецПопытки;
		Если КЭШ <> Неопределено Тогда
			ПоместитьПереводВКЭШ(Термин,Перевод,ЯзыковойНабор,КЭШ,ЯзыкПеревода);
		КонецЕсли;
		Возврат Перевод;
	КонецЕсли;
КонецФункции  //ПолучитьПереводТермина

// помещает перевод в КЭШ переведенных слов
//
Процедура ПоместитьПереводВКЭШ(Термин,Перевод,ПодмножествоКЭШа,КЭШ,ЯзыкПеревода)
	ПодмножествоКЭШа.Вставить(Термин,Перевод);
	КЭШ.Вставить(ЯзыкПеревода,ПодмножествоКЭШа);
КонецПроцедуры //ПоместитьПереводВКЭШ

//Функция ПолучитьПредставлениеЭлементаСтруктурыСлужебныхТерминов
//
Функция ПолучитьПредставлениеЭлементаСтруктурыСлужебныхТерминов(СтруктураПеревода,ПолеСтруктуры) Экспорт
	Возврат СтруктураПеревода[ПолеСтруктуры];
КонецФункции //ПолучитьПредставлениеЭлементаСтруктурыСлужебныхТерминов


//функция возвращает перевод строкового термина
//
Функция ПолучитьПереводСтроковогоТермина(Термин,СтруктураБыстрогоПеревода,ЯзыкПеревода,КЭШ=Неопределено,ЗначениеПоУмолчанию=Неопределено) Экспорт
	Если КЭШ <> Неопределено Тогда
		ЯзыковойНабор 		= КЭШ.Получить(ЯзыкПеревода);
		Если ЯзыковойНабор = Неопределено Тогда
			ЯзыковойНабор = Новый Соответствие;
		КонецЕсли;
		СуществующийПеревод = ЯзыковойНабор.Получить(Термин);
		Если СуществующийПеревод <> Неопределено Тогда
			Возврат СуществующийПеревод;
		КонецЕсли;
	КонецЕсли;
	Если СтруктураБыстрогоПеревода.Свойство(Термин) Тогда
		Возврат СтруктураБыстрогоПеревода[Термин];
	ИначеЕсли Справочники.фин_СлужебныеТерминыБюджетирования.НайтиПоНаименованию(Термин).Пустая() Тогда
		Возврат ?(ЗначениеПоУмолчанию=Неопределено,Термин,ЗначениеПоУмолчанию);
	Иначе
		ТерминСсылка = Справочники.фин_СлужебныеТерминыБюджетирования.НайтиПоНаименованию(Термин);
		Запрос = Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	СловарьТерминовБюджетирования.Перевод
		             |ИЗ
		             |	РегистрСведений.фин_СловарьТерминовБюджетирования КАК СловарьТерминовБюджетирования
		             |ГДЕ
		             |	СловарьТерминовБюджетирования.Термин = &Термин
		             |	И СловарьТерминовБюджетирования.ЯзыкПеревода = &ЯзыкПеревода
		             |	И СловарьТерминовБюджетирования.ГруппаТерминов = &ГруппаТерминов";
		Запрос.УстановитьПараметр("ЯзыкПеревода",		ЯзыкПеревода);
		Запрос.УстановитьПараметр("ГруппаТерминов",		Справочники.фин_СлужебныеТерминыБюджетирования.ПустаяСсылка());
		Запрос.УстановитьПараметр("Термин",				ТерминСсылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если КЭШ <> Неопределено Тогда
				ПоместитьПереводВКЭШ(Термин,Выборка.Перевод,ЯзыковойНабор,КЭШ,ЯзыкПеревода);
				ПоместитьПереводВКЭШ(ТерминСсылка,Выборка.Перевод,ЯзыковойНабор,КЭШ,ЯзыкПеревода);
			КонецЕсли;
			Возврат Выборка.Перевод;
		ИначеЕсли (НЕ ЗначениеЗаполнено(ЯзыкПеревода) ИЛИ ЯзыкПеревода=ЯзыкИнформационнойБазы()) И СокрЛП(ТерминСсылка.ПредставлениеНаРусскомЯзыке)<>"" Тогда
			Возврат СокрЛП(ТерминСсылка.ПредставлениеНаРусскомЯзыке);
		Иначе
			Если ТипЗнч(Термин)=Тип("Строка") Тогда
				Если ЗначениеЗаполнено(ЯзыкПеревода) И ЯзыкПеревода<>Справочники[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"ЯзыкиНародовМира"].Русский Тогда
					Сообщить("Не найден перевод для термина "+Термин);
				КонецЕсли;
				Перевод = ?(ЗначениеПоУмолчанию=Неопределено,Термин,ЗначениеПоУмолчанию);
			Иначе
				Если ЗначениеЗаполнено(ЯзыкПеревода) И ЯзыкПеревода<>ЯзыкИнформационнойБазы() Тогда
					Сообщить("Не найден перевод для термина "+Термин+", справочник: "+Термин.Метаданные().Синоним);
				КонецЕсли;
				Перевод = ?(ЗначениеПоУмолчанию=Неопределено,?(Термин.Метаданные().Реквизиты.Найти("НаименованиеПолное")=Неопределено ИЛИ Термин.Метаданные().Имя = "Валюты",Строка(Термин),Термин.НаименованиеПолное),ЗначениеПоУмолчанию);
			КонецЕсли;
			Если КЭШ <> Неопределено Тогда
				ПоместитьПереводВКЭШ(Термин,Перевод,ЯзыковойНабор,КЭШ,ЯзыкПеревода);
				ПоместитьПереводВКЭШ(ТерминСсылка,Перевод,ЯзыковойНабор,КЭШ,ЯзыкПеревода);
			КонецЕсли;
			Возврат Перевод;
		КонецЕсли;
	КонецЕсли;
КонецФункции //ПолучитьПереводСтроковогоТермина

Функция ЯзыкИнформационнойБазы()
	Попытка 
		Язык = Справочники[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"ЯзыкиНародовМира"].Русский;
	Исключение
		Язык = Справочники[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"ЯзыкиНародовМира"].НайтиПоНаименованию("Русский");
	КонецПопытки;
	Возврат Язык;
КонецФункции
