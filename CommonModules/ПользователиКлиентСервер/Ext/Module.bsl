////////////////////////////////////////////////////////////////////////////////
// Подсистема "Пользователи".
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает текущего пользователя или текущего внешнего пользователя,
// в зависимости от того, кто выполнил вход в сеанс.
//  Рекомендуется использовать в коде, который поддерживает работу
// в обоих случаях.
//
// Возвращаемое значение:
//  СправочникСсылка.Пользователи или СправочникСсылка.ВнешниеПользователи.
// 
Функция АвторизованныйПользователь() Экспорт
	
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат ?(ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПользователь),
	          ПараметрыСеанса.ТекущийПользователь,
	          фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("глТекущийПользователь"));
#Иначе
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("глТекущийПользователь");
#КонецЕсли
	
КонецФункции

// Возвращает текущего пользователя.
//  Рекомендуется использовать в коде, который не поддерживает
// работу с внешними пользователями.
//
//  Если вход в сеанс выполнил внешний пользователь,
// тогда будет вызвано исключение.
//
// Возвращаемое значение:
//  СправочникСсылка.Пользователи
//
Функция ТекущийПользователь() Экспорт
	
	АвторизованныйПользователь = АвторизованныйПользователь();
	
	Если ТипЗнч(АвторизованныйПользователь) <> Тип("СправочникСсылка.Пользователи") Тогда
		ВызватьИсключение
			НСтр("ru = 'Невозможно получить текущего пользователя
			           |в сеансе внешнего пользователя.'");
	КонецЕсли;
	
	Возврат АвторизованныйПользователь;
	
КонецФункции


