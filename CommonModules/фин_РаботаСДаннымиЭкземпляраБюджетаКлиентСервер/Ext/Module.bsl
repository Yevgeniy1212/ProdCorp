// суммирует итоги по группам статей
//
Процедура СобратьСуммыПоГруппам(СтрокаДереваКОбработке,ДеревоСтрокБюджета,Объект,Форма) Экспорт
	
	ВалютаСводаБаланса 				= Форма.ВалютаСводаБаланса;
	ПродолжительностьЦикла			= Форма.ПродолжительностьЦикла;
	БазовыйНаборКолонок				= Форма.БазовыйНаборКолонок;
	СтруктураПоказателей 			= Форма.СтруктураПоказателей;
	ОбратноеСоответствиеПериодов 	= Форма.ОбратноеСоответствиеПериодов;
	КЭШКурсов 						= Форма.КЭШКурсов;
	
	СтрокаДерева = ?(ТипЗнч(СтрокаДереваКОбработке)=Тип("Число"),ДеревоСтрокБюджета.НайтиПоИдентификатору(СтрокаДереваКОбработке),СтрокаДереваКОбработке);
	СтрокаДерева_ЯвляетсяГруппой = ЭтоГруппа(СтрокаДерева.СтатьяБюджета,Форма);
	ЭтоКоллекцияДанныхФормы = ТипЗнч(СтрокаДереваКОбработке)=Тип("Число") ИЛИ ТипЗнч(СтрокаДереваКОбработке)=Тип("ДанныеФормыЭлементДерева");
	Сценарий 				= Объект.Сценарий;
	ПериодПланирования 		= Объект.ПериодПланирования;
	ФормулаРасчетаИтога		= ИтоговаяФункцияСтроки(СтрокаДерева.СтатьяБюджета,Форма);
	Если Не ЗначениеЗаполнено(ФормулаРасчетаИтога) Тогда
		ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ИтоговыеФункции.Сумма");
	КонецЕсли;
	Если СтрокаДерева.ВидГруппировки <> "" И СтрокаДерева.ВидГруппировки <> "СтатьяБюджета" Тогда
		Возврат;
	КонецЕсли;
	ПодчиненныеСтроки = ?(ЭтоКоллекцияДанныхФормы,СтрокаДерева.ПолучитьЭлементы(),СтрокаДерева.Строки);
	Если ПродолжительностьЦикла > 1 Тогда
		СтрокаДерева.ИтогоКоличество 	= 0;
		СтрокаДерева.ИтогоСумма 		= 0;
		ЗначениеСуммаЗапомнить 			= 0;
		ЗначениеКоличествоЗапомнить 	= 0;
		МассивСумма 					= Новый Массив(БазовыйНаборКолонок);
		МассивКоличество 				= Новый Массив(БазовыйНаборКолонок);
		МассивПервые 					= Новый Массив(БазовыйНаборКолонок);
		Если ПодчиненныеСтроки.Количество()>0 Тогда
			Для Инд=1 По БазовыйНаборКолонок Цикл
				МассивСумма[Инд-1]		= 0;
				МассивКоличество[Инд-1]	= 0;
				Если СтруктураПоказателей.Сумма Тогда
					ИмяКолонки 			= "ИтогоСумма"+Строка(Инд);
					СтрокаДерева[ИмяКолонки] = 0;
				КонецЕсли;
				Если СтруктураПоказателей.Количество Тогда
					ИмяКолонки 			= "ИтогоКоличество"+Строка(Инд);
					СтрокаДерева[ИмяКолонки] = 0;
				КонецЕсли;
			КонецЦикла;
			ИсключеноСтрок=0;
			Для Каждого Строка2 Из ПодчиненныеСтроки Цикл
				Если Строка2.ВидГруппировки = "" Тогда
					СобратьСуммыПоГруппам(Строка2,ДеревоСтрокБюджета,Объект,Форма);
				КонецЕсли;
				Если Строка2.СтатьяБюджета<>СтрокаДерева.СтатьяБюджета И ИсключитьИзИтогов(Строка2.СтатьяБюджета,Форма) Тогда
					ИсключеноСтрок = ИсключеноСтрок + 1;
					Продолжить;
				КонецЕсли;
				Первая = Истина;
				Строка2_ДетальнаяСтрока = НЕ ЭтоГруппа(Строка2.СтатьяБюджета,Форма);
				Для Инд=1 По БазовыйНаборКолонок Цикл
					Если СтруктураПоказателей.Сумма Тогда
						ИмяКолонки = "ИтогоСумма"+Строка(Инд);
						СуммаКДобавлениюВГруппу = Строка2[ИмяКолонки];
						Если Строка2_ДетальнаяСтрока И (НЕ Строка2.ВалютаОперации = ?(СтрокаДерева_ЯвляетсяГруппой,ВалютаСводаБаланса,СтрокаДерева.ВалютаОперации)) Тогда
							КурсПоСтроке = ПолучитьКурсВалютыИзКЭШа(Форма,Строка2.ВалютаОперации,Форма.ОбратноеСоответствиеПериодов.Получить(Инд));
							// пересчитать сумму
							СуммаКДобавлениюВГруппу = ПересчитатьВВалюту(СуммаКДобавлениюВГруппу,?(Объект.ЕдинаяВалюта,Объект.ВалютаДокумента,Строка2.ВалютаОперации),ОбратноеСоответствиеПериодов[Инд],КурсПоСтроке.Курс,КурсПоСтроке.Кратность,ВалютаСводаБаланса,Сценарий,КЭШКурсов);
						КонецЕсли;
						ПодсчетИтога(МассивСумма[Инд-1],СуммаКДобавлениюВГруппу,ФормулаРасчетаИтога,Первая,Инд=БазовыйНаборКолонок,Истина);
					КонецЕсли;
					Если СтруктураПоказателей.Количество Тогда
						ИмяКолонки = "ИтогоКоличество"+Строка(Инд);
						ПодсчетИтога(МассивКоличество[Инд-1],Строка2[ИмяКолонки],ФормулаРасчетаИтога,Первая,Инд=БазовыйНаборКолонок,Истина);
					КонецЕсли;
					Первая = Ложь;
				КонецЦикла;
			КонецЦикла;
			Для Инд=1 По БазовыйНаборКолонок Цикл
				Если ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ИтоговыеФункции.Среднее") Тогда
					МассивСумма[Инд-1] = МассивСумма[Инд-1] / (ПодчиненныеСтроки.Количество()-ИсключеноСтрок);
					МассивКоличество[Инд-1] = МассивКоличество[Инд-1] / (ПодчиненныеСтроки.Количество()-ИсключеноСтрок);
				КонецЕсли;
				Если СтруктураПоказателей.Сумма Тогда
					ИмяКолонки = "ИтогоСумма"+Строка(Инд);
					СтрокаДерева[ИмяКолонки]=МассивСумма[Инд-1];
				КонецЕсли;
				Если СтруктураПоказателей.Количество Тогда
					ИмяКолонки = "ИтогоКоличество"+Строка(Инд);
					СтрокаДерева[ИмяКолонки]=МассивКоличество[Инд-1];
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Первая = Истина;
		Для Инд=1 По БазовыйНаборКолонок Цикл
			Если СтруктураПоказателей.Сумма Тогда
				ИмяКолонки = "ИтогоСумма"+Строка(Инд);
				СтрокаДерева.ИтогоСумма = СтрокаДерева.ИтогоСумма +СтрокаДерева[ИмяКолонки]; 
				ПодсчетИтога(ЗначениеСуммаЗапомнить,СтрокаДерева[ИмяКолонки],ФормулаРасчетаИтога,Первая,Инд=БазовыйНаборКолонок);
			КонецЕсли;
			Если СтруктураПоказателей.Количество Тогда
				ИмяКолонки = "ИтогоКоличество"+Строка(Инд);
				ПодсчетИтога(ЗначениеКоличествоЗапомнить,СтрокаДерева[ИмяКолонки],ФормулаРасчетаИтога,Первая,Инд=БазовыйНаборКолонок);  
			КонецЕсли;
			Первая = Ложь;
		КонецЦикла;
		Если ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ИтоговыеФункции.Среднее") Тогда
			ЗначениеСуммаЗапомнить = ЗначениеСуммаЗапомнить / БазовыйНаборКолонок;
			ЗначениеКоличествоЗапомнить = ЗначениеКоличествоЗапомнить / БазовыйНаборКолонок;
		КонецЕсли;
		СтрокаДерева.ИтогоСумма = ЗначениеСуммаЗапомнить;
		СтрокаДерева.ИтогоКоличество = ЗначениеКоличествоЗапомнить;
	Иначе
		Если ПодчиненныеСтроки.Количество()>0 Тогда
			СтрокаДерева.ИтогоКоличество = 0;
			СтрокаДерева.ИтогоСумма = 0;
			ЗначениеСуммаЗапомнить = 0;
			ЗначениеКоличествоЗапомнить = 0;
			Первая = Истина;
			Для Каждого Строка2 Из ПодчиненныеСтроки Цикл
				Если Строка2.ВидГруппировки = "" Тогда
					СобратьСуммыПоГруппам(Строка2,ДеревоСтрокБюджета,Объект,Форма);
				КонецЕсли;
				Если СтруктураПоказателей.Сумма Тогда
					ИмяКолонки = "ИтогоСумма";
					СуммаКДобавлениюВГруппу = Строка2[ИмяКолонки];
					Если (НЕ ЭтоГруппа(Строка2.СтатьяБюджета,Форма)) И (НЕ Строка2.ВалютаОперации = ?(ЭтоГруппа(СтрокаДерева.СтатьяБюджета,Форма),ВалютаСводаБаланса,СтрокаДерева.ВалютаОперации)) Тогда
						КурсПоСтроке = ПолучитьКурсВалютыИзКЭШа(Форма,Строка2.ВалютаОперации,Объект.ПериодПланирования);
						// пересчитать сумму
						СуммаКДобавлениюВГруппу = ПересчитатьВВалюту(СуммаКДобавлениюВГруппу,?(Объект.ЕдинаяВалюта,Объект.ВалютаДокумента,Строка2.ВалютаОперации),ПериодПланирования,КурсПоСтроке.Курс,КурсПоСтроке.Кратность,ВалютаСводаБаланса,Сценарий,КЭШКурсов);
					КонецЕсли;
					ПодсчетИтога(ЗначениеСуммаЗапомнить,СуммаКДобавлениюВГруппу,ФормулаРасчетаИтога,Истина,Истина);
				КонецЕсли;
				Если СтруктураПоказателей.Количество Тогда
					ИмяКолонки = "ИтогоКоличество";
					ПодсчетИтога(ЗначениеКоличествоЗапомнить,Строка2[ИмяКолонки],ФормулаРасчетаИтога,Истина,Истина);
				КонецЕсли;
				Первая = Ложь;
			КонецЦикла;
			Если ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ИтоговыеФункции.Среднее") Тогда
				ЗначениеСуммаЗапомнить = ЗначениеСуммаЗапомнить / ПодчиненныеСтроки.Количество();
				ЗначениеКоличествоЗапомнить = ЗначениеКоличествоЗапомнить / ПодчиненныеСтроки.Количество();
			КонецЕсли;
			СтрокаДерева.ИтогоСумма = ЗначениеСуммаЗапомнить;
			СтрокаДерева.ИтогоКоличество  = ЗначениеКоличествоЗапомнить;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //СобратьСуммыПоГруппам

Функция ПолучитьКурсВалютыИзКЭШа(Форма,Валюта,Период) Экспорт
	Если Валюта = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета") Тогда
		Возврат Новый Структура("Курс,Кратность",1,1);
	КонецЕсли;
	ПоВалютеИПериодуСтроки = Форма.КЭШКурсов.НайтиСтроки(Новый Структура("Валюта,Период",Валюта,Период));
	Если ПоВалютеИПериодуСтроки.Количество()=0 Тогда
		Если Форма.Объект.ЗадаватьКурсыВалютВДокументе Тогда
			СтрокиКурс = Форма.Объект.КурсыВалютДокумента.НайтиСтроки(Новый Структура("Валюта,ПериодПланирования",Валюта,Период));
			Если СтрокиКурс.Количество()>0 Тогда
				СтруктураКурсов=Новый Структура("Курс,Кратность",СтрокиКурс[0].Курс,СтрокиКурс[0].Кратность);
			Иначе
				СтруктураКурсов=ПолучитьКурсВалюты(Валюта,Период,Форма.Объект.Сценарий);
				НоваяСтрока = Форма.Объект.КурсыВалютДокумента.Добавить();
				НоваяСтрока.Валюта 		= Валюта;
				НоваяСтрока.ПериодПланирования	= Период;
				НоваяСтрока.Курс 		= СтруктураКурсов.Курс;
				НоваяСтрока.Кратность 	= СтруктураКурсов.Кратность;
			КонецЕсли;
		Иначе
			СтруктураКурсов=ПолучитьКурсВалюты(Валюта,Период,Форма.Объект.Сценарий);
		КонецЕсли;
		НоваяСтрока = Форма.КЭШКурсов.Добавить();
		НоваяСтрока.Валюта 		= Валюта;
		НоваяСтрока.Период 		= Период;
		НоваяСтрока.Курс 		= СтруктураКурсов.Курс;
		НоваяСтрока.Кратность 	= СтруктураКурсов.Кратность;
		Возврат СтруктураКурсов;
	Иначе
		Возврат Новый Структура("Курс,Кратность",ПоВалютеИПериодуСтроки[0].Курс,ПоВалютеИПериодуСтроки[0].Кратность);
	КонецЕсли;
КонецФункции

// Процедура СобратьСуммы
// 
Процедура СобратьСуммы(СтрокаДерева,ДеревоСтрокБюджета,Объект,Форма) Экспорт
	
	СтруктураПоказателей 			= Форма.СтруктураПоказателей;
	ПродолжительностьЦикла 			= Форма.ПродолжительностьЦикла;
	БазовыйНаборКолонок 			= Форма.БазовыйНаборКолонок;
	ЕдинаяЦенаВБюджетномПериоде		= Форма.ЕдинаяЦенаВБюджетномПериоде;
	
	Строка1 = ?(ТипЗнч(СтрокаДерева)=Тип("Число"),ДеревоСтрокБюджета.НайтиПоИдентификатору(СтрокаДерева),СтрокаДерева);
	Сценарий = Объект.Сценарий;
	КЭШКурсов 						= Форма.КЭШКурсов;
	ОбратноеСоответствиеПериодов 	= Форма.ОбратноеСоответствиеПериодов;
	РасчетЦены = Ложь;
	ЭтоКоллекцияДанныхФормы = ТипЗнч(СтрокаДерева) = Тип("Число") ИЛИ ТипЗнч(СтрокаДерева) = Тип("ДанныеФормыЭлементДерева");
	Если Строка1.ВидГруппировки = "СтатьяБюджета" И УчетЦены(Строка1.ФинансовыйПоказатель,Форма) Тогда
		Если СтруктураПоказателей.Цена И НЕ УчетПоСтатьеПоРазрезу(Строка1.ФинансовыйПоказатель,ПредопределенноеЗначение("Перечисление.фин_ФактическиеПоказателиБюджетирования.Номенклатура"),Форма) Тогда
			РасчетЦены = Истина;
		КонецЕсли;
	КонецЕсли;
	Если Строка1.ВидГруппировки = "СтатьяБюджета" Тогда
		ФормулаРасчетаИтога = ИтоговаяФункцияСтроки(Строка1.СтатьяБюджета,Форма);
	Иначе
		РодительСтроки = ?(ЭтоКоллекцияДанныхФормы,Строка1.ПолучитьРодителя(),Строка1.Родитель);
		Пока РодительСтроки<>Неопределено И РодительСтроки.ВидГруппировки <> "СтатьяБюджета" Цикл
			РодительСтроки = ?(ЭтоКоллекцияДанныхФормы,РодительСтроки.ПолучитьРодителя(),РодительСтроки.Родитель);
		КонецЦикла;
		Если РодительСтроки<>Неопределено Тогда
			ФормулаРасчетаИтога=ИтоговаяФункцияСтроки(РодительСтроки.СтатьяБюджета,Форма);
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ФормулаРасчетаИтога) Тогда
		ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ИтоговыеФункции.Сумма");
	КонецЕсли;
	Если ПродолжительностьЦикла > 1 Тогда
		Строка1.ИтогоКоличество 	= 0;
		Строка1.ИтогоСумма 			= 0;
		ЗначениеСуммаЗапомнить 		= 0;
		ЗначениеКоличествоЗапомнить	= 0;
		Первая 						= Истина;
		МассивСумма 				= Новый Массив(БазовыйНаборКолонок);
		МассивКоличество 			= Новый Массив(БазовыйНаборКолонок);
		МассивПервые 				= Новый Массив(БазовыйНаборКолонок);
		ПодчиненныеСтроки 			= ?(ЭтоКоллекцияДанныхФормы,Строка1.ПолучитьЭлементы(),Строка1.Строки);
		Если ПодчиненныеСтроки.Количество()>0 Тогда
			Для Инд=1 По БазовыйНаборКолонок Цикл
				МассивСумма[Инд-1]		= 0;
				МассивКоличество[Инд-1]	= 0;
				МассивПервые[Инд-1]		= Истина;
				Если СтруктураПоказателей.Сумма Тогда
					ИмяКолонки 			= "ИтогоСумма"+Строка(Инд);
					Строка1[ИмяКолонки]	= 0;
				КонецЕсли;
				Если СтруктураПоказателей.Количество Тогда
					ИмяКолонки 			= "ИтогоКоличество"+Строка(Инд);
					Строка1[ИмяКолонки]	= 0;
				КонецЕсли;
			КонецЦикла;
			Для Каждого Строка2 Из ПодчиненныеСтроки Цикл
				СобратьСуммы(Строка2,ДеревоСтрокБюджета,Объект,Форма);
				Для Инд=1 По БазовыйНаборКолонок Цикл
					Если СтруктураПоказателей.Сумма Тогда
						ИмяКолонки 		= "ИтогоСумма"+Строка(Инд);
						СуммаКДобавлениюВГруппу = Строка2[ИмяКолонки];
						Если Объект.ЕдинаяВалюта = Ложь И Строка2.ВалютаОперации<>Строка1.ВалютаОперации Тогда
							КурсПоСтроке = ПолучитьКурсВалютыИзКЭШа(Форма,Строка2.ВалютаОперации,Форма.ОбратноеСоответствиеПериодов.Получить(Инд));
							// пересчитать сумму
							СуммаКДобавлениюВГруппу = ПересчитатьВВалюту(СуммаКДобавлениюВГруппу,Строка2.ВалютаОперации,ОбратноеСоответствиеПериодов[Инд],КурсПоСтроке.Курс,КурсПоСтроке.Кратность,?(Строка1.ВидСтроки=ПредопределенноеЗначение("Перечисление.фин_ВидыСтрокБюджета.ИерархияБюджета"),Форма.ВалютаСводаБаланса,Строка1.ВалютаОперации),Сценарий,КЭШКурсов);
						КонецЕсли;
						ПодсчетИтога(МассивСумма[Инд-1],СуммаКДобавлениюВГруппу,ФормулаРасчетаИтога,МассивПервые[Инд-1],Инд=БазовыйНаборКолонок);
					КонецЕсли;
					Если СтруктураПоказателей.Количество Тогда
						ИмяКолонки 		= "ИтогоКоличество"+Строка(Инд);
						ПодсчетИтога(МассивКоличество[Инд-1],Строка2[ИмяКолонки],ФормулаРасчетаИтога,МассивПервые[Инд-1],Инд=БазовыйНаборКолонок);
					КонецЕсли;
					Если РасчетЦены ИЛИ ((НЕ Объект.ЕдинаяВалюта) И Строка1.ВидГруппировки = "Номенклатура" И МультивалютнаяСтрока(Строка1)) Тогда
						ИмяКолонки = "Цена"+?(ЕдинаяЦенаВБюджетномПериоде,"",Строка(Инд));
						Строка1[ИмяКолонки]=?(МассивКоличество[Инд-1]=0,0,МассивСумма[Инд-1]/МассивКоличество[Инд-1]);
					КонецЕсли;
					МассивПервые[Инд-1] = Ложь;
				КонецЦикла;
			КонецЦикла;
			Для Инд=1 По БазовыйНаборКолонок Цикл
				Если ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ИтоговыеФункции.Среднее") Тогда
					МассивСумма[Инд-1] = МассивСумма[Инд-1] / ПодчиненныеСтроки.Количество();
					МассивКоличество[Инд-1] = МассивКоличество[Инд-1] / ПодчиненныеСтроки.Количество();
				КонецЕсли;
				Если СтруктураПоказателей.Сумма Тогда
					ИмяКолонки = "ИтогоСумма"+Строка(Инд);
					Строка1[ИмяКолонки]=МассивСумма[Инд-1];
				КонецЕсли;
				Если СтруктураПоказателей.Количество Тогда
					ИмяКолонки = "ИтогоКоличество"+Строка(Инд);
					Строка1[ИмяКолонки]=МассивКоличество[Инд-1];
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Для Инд=1 По БазовыйНаборКолонок Цикл
			Если СтруктураПоказателей.Сумма Тогда
				ИмяКолонки 				= "ИтогоСумма"+Строка(Инд);
				ПодсчетИтога(ЗначениеСуммаЗапомнить,Строка1[ИмяКолонки],ФормулаРасчетаИтога,Первая,Инд=БазовыйНаборКолонок);
			КонецЕсли;
			Если СтруктураПоказателей.Количество Тогда
				ИмяКолонки 				= "ИтогоКоличество"+Строка(Инд);
				ПодсчетИтога(ЗначениеКоличествоЗапомнить,Строка1[ИмяКолонки],ФормулаРасчетаИтога,Первая,Инд=БазовыйНаборКолонок);
			КонецЕсли;
			Первая = Ложь;
		КонецЦикла;
		Если ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ИтоговыеФункции.Среднее") Тогда
			ЗначениеСуммаЗапомнить 		= ЗначениеСуммаЗапомнить / БазовыйНаборКолонок;
			ЗначениеКоличествоЗапомнить	= ЗначениеКоличествоЗапомнить / БазовыйНаборКолонок;
		КонецЕсли;
		Строка1.ИтогоСумма 				= ЗначениеСуммаЗапомнить;
		Строка1.ИтогоКоличество 		= ЗначениеКоличествоЗапомнить;
	Иначе
		ПодчиненныеСтроки = ?(ЭтоКоллекцияДанныхФормы,Строка1.ПолучитьЭлементы(),Строка1.Строки);
		Если ПодчиненныеСтроки.Количество()>0 Тогда
			Строка1.ИтогоКоличество = 0;
			Строка1.ИтогоСумма = 0;
			ЗначениеСуммаЗапомнить = 0;
			ЗначениеКоличествоЗапомнить = 0;
			Первая = Истина;
			Для Каждого Строка2 Из ПодчиненныеСтроки Цикл
				СобратьСуммы(Строка2,ДеревоСтрокБюджета,Объект,Форма);
				Если СтруктураПоказателей.Сумма Тогда
					ИмяКолонки = "ИтогоСумма";
					СуммаКДобавлениюВГруппу = Строка2[ИмяКолонки];
					Если Объект.ЕдинаяВалюта = Ложь И Строка2.ВалютаОперации<>Строка1.ВалютаОперации Тогда
						КурсПоСтроке = ПолучитьКурсВалютыИзКЭШа(Форма,Строка2.ВалютаОперации,Объект.ПериодПланирования);
						// пересчитать сумму
						СуммаКДобавлениюВГруппу = ПересчитатьВВалюту(СуммаКДобавлениюВГруппу,Строка2.ВалютаОперации,Объект.ПериодПланирования,КурсПоСтроке.Курс,КурсПоСтроке.Кратность,?(Строка1.ВидСтроки=ПредопределенноеЗначение("Перечисление.фин_ВидыСтрокБюджета.ИерархияБюджета"),Форма.ВалютаСводаБаланса,Строка1.ВалютаОперации),Сценарий,КЭШКурсов);
					КонецЕсли;
					ПодсчетИтога(ЗначениеСуммаЗапомнить,СуммаКДобавлениюВГруппу,ФормулаРасчетаИтога,Истина,Истина);
				КонецЕсли;
				Если СтруктураПоказателей.Количество Тогда
					ИмяКолонки = "ИтогоКоличество";
					Строка1[ИмяКолонки]=Строка1[ИмяКолонки]+Строка2[ИмяКолонки];
					ПодсчетИтога(ЗначениеКоличествоЗапомнить,Строка2[ИмяКолонки],ФормулаРасчетаИтога,Истина,Истина);
				КонецЕсли;
				Первая = Ложь;
			КонецЦикла;
			Если ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ИтоговыеФункции.Среднее") Тогда
				ЗначениеСуммаЗапомнить = ЗначениеСуммаЗапомнить / ПодчиненныеСтроки.Количество();
				ЗначениеКоличествоЗапомнить = ЗначениеКоличествоЗапомнить / ПодчиненныеСтроки.Количество();
			КонецЕсли;
			Строка1.ИтогоСумма = ЗначениеСуммаЗапомнить;
			Строка1.ИтогоКоличество  = ЗначениеКоличествоЗапомнить;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры //СобратьСуммы

Функция МультивалютнаяСтрока(СтрокаДерева) Экспорт
	ВалютаСтроки 		= СтрокаДерева.ВалютаОперации;
	ПодчиненныеСтроки 	= ?(ТипЗнч(СтрокаДерева)=Тип("ДанныеФормыЭлементДерева"),СтрокаДерева.ПолучитьЭлементы(),СтрокаДерева.Строки);
	Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
		Если ПодчиненнаяСтрока.ВалютаОперации <> ВалютаСтроки ИЛИ МультивалютнаяСтрока(ПодчиненнаяСтрока) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

Процедура ПодсчетИтога(ЗначениеОсновное,ЗначениеДобавляемое,ФормулаРасчетаИтога,Первая,Последняя,СуммироватьДляОстаточных = Ложь) Экспорт
	Если ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ИтоговыеФункции.Сумма") Тогда
		ЗначениеОсновное = ЗначениеОсновное + ЗначениеДобавляемое;
	ИначеЕсли ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ИтоговыеФункции.НеРассчитывать") Тогда
		Возврат;
	ИначеЕсли ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ИтоговыеФункции.Количество") Тогда
		ЗначениеОсновное = ЗначениеОсновное + 1;
	ИначеЕсли ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ИтоговыеФункции.Максимум") Тогда
		ЗначениеОсновное = ?(Первая,ЗначениеДобавляемое,Макс(ЗначениеОсновное,ЗначениеДобавляемое));
	ИначеЕсли ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ИтоговыеФункции.Минимум") Тогда
		ЗначениеОсновное = ?(Первая,ЗначениеДобавляемое,Мин(ЗначениеОсновное,ЗначениеДобавляемое));
	ИначеЕсли ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ИтоговыеФункции.Среднее") Тогда
		ЗначениеОсновное = ЗначениеОсновное + ЗначениеДобавляемое;
	ИначеЕсли ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ПризнакиПеретекающихОстатковМеждуПериодами.ОстатокНаНачалоПериода") И (Первая ИЛИ СуммироватьДляОстаточных) Тогда
		ЗначениеОсновное = ЗначениеОсновное + ЗначениеДобавляемое;
	ИначеЕсли ФормулаРасчетаИтога = ПредопределенноеЗначение("Перечисление.фин_ПризнакиПеретекающихОстатковМеждуПериодами.ОстатокНаКонецПериода") И (Последняя ИЛИ СуммироватьДляОстаточных) Тогда
		ЗначениеОсновное = ЗначениеОсновное + ЗначениеДобавляемое;
	КонецЕсли;	
КонецПроцедуры

#Область РаботаСДаннымиСтатей

Функция ИтоговаяФункцияСтроки(Статья,Форма) Экспорт
	#Если Сервер ИЛИ ВнешнееСоединение Тогда
		Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.ИтоговаяФункцияСтроки(Статья,Форма.Объект.ФормируемыйБюджет);
	#Иначе
		Возврат фин_ОбщегоНазначенияКлиентПовтИсп.ИтоговаяФункцияСтроки(Статья,Форма.Объект.ФормируемыйБюджет);
	#КонецЕсли
КонецФункции

Функция ЕстьРодитель(Статья,Форма) Экспорт
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.ЕстьРодитель(Статья,Форма.Объект.ФормируемыйБюджет);
КонецФункции
 
Функция КодСтрокиБюджета(Статья,Форма) Экспорт
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.КодСтрокиБюджета(Статья,Форма.Объект.ФормируемыйБюджет);
КонецФункции
 
Функция КодСтатьи(Статья,Форма) Экспорт
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.КодСтатьи(Статья,Форма.Объект.ФормируемыйБюджет);
КонецФункции
 
Функция НаименованиеСтатьи(Статья,Форма) Экспорт
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.НаименованиеСтатьи(Статья,Форма.Объект.ФормируемыйБюджет);
КонецФункции
 
Функция СтатьяБюджетаПоПоказателю(ФинансовыйПоказатель,Форма) Экспорт
	#Если Сервер ИЛИ ВнешнееСоединение Тогда
		Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.СтатьяБюджетаПоПоказателю(ФинансовыйПоказатель,Форма.Объект.ФормируемыйБюджет,Форма.Версия);
	#Иначе
		Возврат фин_ОбщегоНазначенияКлиентПовтИсп.СтатьяБюджетаПоПоказателю(ФинансовыйПоказатель,Форма.Объект.ФормируемыйБюджет,Форма.Версия);
	#КонецЕсли
КонецФункции

Функция ИсключитьИзИтогов(Статья,Форма) Экспорт
	#Если Сервер ИЛИ ВнешнееСоединение Тогда
		Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.ИсключитьИзИтогов(Статья,Форма.Объект.ФормируемыйБюджет);
	#Иначе
		Возврат фин_ОбщегоНазначенияКлиентПовтИсп.ИсключитьИзИтогов(Статья,Форма.Объект.ФормируемыйБюджет);
	#КонецЕсли
КонецФункции

Функция ЭтоГруппа(Статья,Форма) Экспорт
	#Если Сервер ИЛИ ВнешнееСоединение Тогда
		Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.ЭтоГруппа(Статья,Форма.Объект.ФормируемыйБюджет);
	#Иначе
		Возврат фин_ОбщегоНазначенияКлиентПовтИсп.ЭтоГруппа(Статья,Форма.Объект.ФормируемыйБюджет);
	#КонецЕсли
КонецФункции
 
Функция РодительСтатьиБюджета(Статья,Форма) Экспорт
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.РодительСтатьиБюджета(Статья,Форма.Объект.ФормируемыйБюджет);
КонецФункции

Функция ИспользоватьРасчетыТолькоДляПервоначальногоЗаполнения(Показатель,Форма) Экспорт
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.ИспользоватьРасчетыТолькоДляПервоначальногоЗаполнения(Показатель,Форма.Объект.ФормируемыйБюджет);
КонецФункции

#КонецОбласти

#Область РаботаСДаннымиФинансовыхПоказателей

Функция ВыводитьЦенуПоПоказателю(Показатель,Форма) Экспорт
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.ВыводитьЦенуПоПоказателю(Показатель,Форма.Объект.ФормируемыйБюджет);
КонецФункции

Функция УчетЦены(Показатель,Форма) Экспорт
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.УчетЦены(Показатель,Форма.Объект.ФормируемыйБюджет);
КонецФункции

Функция УчетПоСумме(Показатель,Форма) Экспорт
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.УчетПоСумме(Показатель,Форма.Объект.ФормируемыйБюджет);
КонецФункции

Функция УчетПоКоличеству(Показатель,Форма) Экспорт
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.УчетПоКоличеству(Показатель,Форма.Объект.ФормируемыйБюджет);
КонецФункции

Функция УчетПоПлановойНоменклатуре(Показатель,Форма) Экспорт
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.УчетПоПлановойНоменклатуре(Показатель,Форма.Объект.ФормируемыйБюджет);
КонецФункции

Функция УчетПоСтатьеПоРазрезу(ФинансовыйПоказатель,Разрез,Форма) Экспорт
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.ОпределитьНаличиеРазрезаВФинансовомПоказателе(ФинансовыйПоказатель,Разрез,Форма.объект.ФормируемыйБюджет);
КонецФункции

Функция ОписаниеТиповНоменклатурногоПеречня(ФинансовыйПоказатель,Сценарий,ВестиУчетПоПлановойНоменклатуре,Форма) Экспорт
	Если Форма.ПоНоменклатурнымГруппам Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(фин_ОбщегоНазначенияВызовСервераПовтИсп.ТипНоменклатурныеГруппыСсылка());
		Возврат Новый ОписаниеТипов(МассивТипов);
	Иначе
		Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.ОписаниеТиповНоменклатурногоПеречня(ФинансовыйПоказатель);
	КонецЕсли;
КонецФункции

Функция СтруктураРазрезовФинансовогоПоказателя(ФинансовыйПоказатель,Форма) Экспорт
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.СтруктураРазрезовФинансовогоПоказателя(ФинансовыйПоказатель,Форма.объект.ФормируемыйБюджет);
КонецФункции

#КонецОбласти

Функция ПересчитатьВВалюту(Сумма,Валюта,Период,Курс,Кратность,ВалютаСводаБаланса,Сценарий,КЭШКурсов) Экспорт
	
	Если Сумма =0 ИЛИ Валюта = ВалютаСводаБаланса Тогда
		Возврат Сумма;
	КонецЕсли;
	
	ПоВалютеИПериоду = КЭШКурсов.НайтиСтроки(Новый Структура("Валюта,Период",ВалютаСводаБаланса,Период));
	
	СтарыйКурс		= Курс;
	СтараяКратность	= Кратность;
	Если СтарыйКурс = 0 ИЛИ СтараяКратность=0 Тогда
		ПоВалютеИПериодуСтроки = КЭШКурсов.НайтиСтроки(Новый Структура("Валюта,Период",Валюта,Период));
		Если ПоВалютеИПериодуСтроки.Количество()=0 Тогда
			СтруктураКурсов=ПолучитьКурсВалюты(Валюта,Период,Сценарий);
			СтарыйКурс		= СтруктураКурсов.Курс;
			СтараяКратность	= СтруктураКурсов.Кратность;
	
			НоваяСтрока = КЭШКурсов.Добавить();
			НоваяСтрока.Валюта 		= Валюта;
			НоваяСтрока.Период 		= Период;
			НоваяСтрока.Курс 		= СтарыйКурс;
			НоваяСтрока.Кратность 	= СтараяКратность;
		Иначе	
			СтарыйКурс		= ПоВалютеИПериодуСтроки[0].Курс;
			СтараяКратность	= ПоВалютеИПериодуСтроки[0].Кратность;
		КонецЕсли;
	КонецЕсли;
	Если СтарыйКурс = 0 Тогда
		СтарыйКурс = 1;
	КонецЕсли;
	Если СтараяКратность = 0 Тогда
		СтараяКратность = 1;
	КонецЕсли;
	Если ПоВалютеИПериоду.Количество()=0 Тогда
		
		СтруктураКурсов=ПолучитьКурсВалюты(ВалютаСводаБаланса,Период,Сценарий);
		
        СтруктураКурс = Новый Структура("Курс,Кратность",СтруктураКурсов.Курс,СтруктураКурсов.Кратность);
		НовыйКурсОперации		= СтруктураКурсов.Курс;
		НоваяКратностьОперации	= СтруктураКурсов.Кратность;
	
		НоваяСтрока = КЭШКурсов.Добавить();
		НоваяСтрока.Валюта 		= ВалютаСводаБаланса;
		НоваяСтрока.Период 		= Период;
		НоваяСтрока.Курс 		= НовыйКурсОперации;
		НоваяСтрока.Кратность 	= НоваяКратностьОперации;
	Иначе	
		НовыйКурсОперации		= ПоВалютеИПериоду[0].Курс;
		НоваяКратностьОперации	= ПоВалютеИПериоду[0].Кратность;
	КонецЕсли;
	
		
	Возврат фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Сумма,
											Валюта,ВалютаСводаБаланса,
											СтарыйКурс,НовыйКурсОперации,
											СтараяКратность,НоваяКратностьОперации);
	
КонецФункции //ПересчитатьВВалютуСценария

Функция ПолучитьКурсВалюты(Валюта,Дата,Сценарий) Экспорт
	Возврат фин_РаботаСДаннымиЭкземпляраБюджетаСервер.ПолучитьКурсВалюты(Валюта,Дата,Сценарий);	
КонецФункции

