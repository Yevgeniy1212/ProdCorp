
// Процедура показывает формы Напоминаний.
// 
//  Параметры
//   ТаблицаНапоминаний - ТаблицаЗначений, с Напоминаниями
//
Процедура ОбработкаСпискаНапоминаний(ТаблицаНапоминаний)

	ФормаНапоминания = ПолучитьОбщуюФорму("ФормаНапоминания",,"Уникум");
	ФормаНапоминания.ОбновитьТаблицуНапоминаний(ТаблицаНапоминаний);

	Если ФормаНапоминания.Открыта() Тогда
		ФормаНапоминания.Активизировать();
	Иначе
		ФормаНапоминания.Открыть();
	КонецЕсли;

КонецПроцедуры // ОбработкаСпискаНапоминаний()

// Процедура проверяет Напоминания из регистра.
// 
//  Параметры
//   ТаблицаНапоминаний - ТаблицаЗначений, с Напоминаниями
//
Процедура ПроверитьНапоминанияПользователя(ВыбПользователь) Экспорт

	РезультирующаяТаблица = Новый ТаблицаЗначений;
	РезультирующаяТаблица.Колонки.Добавить("ДокументНапоминания");
	РезультирующаяТаблица.Колонки.Добавить("Пользователь");
	РезультирующаяТаблица.Колонки.Добавить("ДатаНапоминания");
	РезультирующаяТаблица.Колонки.Добавить("Тема");
	РезультирующаяТаблица.Колонки.Добавить("КонтактноеЛицо");
	РезультирующаяТаблица.Колонки.Добавить("ТекстНапоминания");
	РезультирующаяТаблица.Колонки.Добавить("ФлагДеньРождения");
		
	Запрос = Новый Запрос;

	ДатаСреза = ТекущаяДата() + Константы.ИнтервалПроверкиНапоминанийВСекундах.Получить();
	
	Запрос.УстановитьПараметр("ДатаСреза"       , ДатаСреза);
	Запрос.УстановитьПараметр("ВыбПользователь" , ВыбПользователь);
	Запрос.УстановитьПараметр("СостояниеСобытия", Перечисления.СостоянияСобытий.Запланировано);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Событие.Ссылка           КАК ДокументНапоминания,
	|	Событие.Ответственный    КАК Пользователь,
	|	Событие.ВремяНапоминания КАК ДатаНапоминания,
	|	Событие.ВидСобытия       КАК Тема,
	|	Событие.КонтактноеЛицо   КАК КонтактноеЛицо,
	|	Событие.ОписаниеСобытия  КАК ОписаниеСобытия,
	|	Событие.НачалоСобытия    КАК НачалоСобытия,
	|	Событие.ОкончаниеСобытия КАК ОкончаниеСобытия
	|ИЗ
	|	Документ.Событие КАК Событие
	|	
	|ГДЕ 
	|	Событие.НапомнитьОСобытии = Истина
	|	И Событие.ВремяНапоминания <= &ДатаСреза
	|	И Событие.Ответственный = &ВыбПользователь
	|	И Событие.Проведен
	|	И Событие.СостояниеСобытия = &СостояниеСобытия
	|";

	РезультатЗапроса = Запрос.Выполнить();

	Если НЕ РезультатЗапроса.Пустой() Тогда

		ТаблицаЗапроса = РезультатЗапроса.Выгрузить();

		Для каждого Напоминание Из ТаблицаЗапроса Цикл

			Если ЗначениеЗаполнено(Напоминание.ДокументНапоминания) Тогда

				Док = Напоминание.ДокументНапоминания;

				СтрокаРезТаблицы = РезультирующаяТаблица.Добавить();
				СтрокаРезТаблицы.ДокументНапоминания = Напоминание.ДокументНапоминания;
				СтрокаРезТаблицы.Пользователь        = ВыбПользователь;
				СтрокаРезТаблицы.ДатаНапоминания     = Напоминание.ДатаНапоминания;
				СтрокаРезТаблицы.КонтактноеЛицо      = Напоминание.КонтактноеЛицо;
				
				СтрокаРезТаблицы.ТекстНапоминания = Строка(Док);
				Если ТипЗнч(Док) = Тип("ДокументСсылка.Событие") И СтрЧислоВхождений(Док.ОписаниеСобытия, "День рождения") > 0 Тогда
					СтрокаРезТаблицы.ФлагДеньРождения = Истина;
				Иначе
					СтрокаРезТаблицы.ФлагДеньРождения = Ложь;
				КонецЕсли; 
				
				Если ТипЗнч(Док) = Тип("ДокументСсылка.Событие") Тогда
					СтрокаРезТаблицы.Тема = Строка(Напоминание.Тема);
					СтрокаРезТаблицы.ТекстНапоминания = Напоминание.ОписаниеСобытия + Символы.ПС + "с " + ?(ЗначениеЗаполнено(Напоминание.НачалоСобытия),Формат(Напоминание.НачалоСобытия, "ДФ='dd.MM.yyyy (HH:mm)'"), "Не задано") + " по " + ?(ЗначениеЗаполнено(Напоминание.ОкончаниеСобытия),Формат(Напоминание.ОкончаниеСобытия, "ДФ='dd.MM.yyyy (HH:mm)'"), "Не задано") + Символы.ПС + СтрокаРезТаблицы.ТекстНапоминания;
				КонецЕсли;

			КонецЕсли;
		КонецЦикла; 

	КонецЕсли;

	ОбработкаСпискаНапоминаний(РезультирующаяТаблица);

КонецПроцедуры // ПроверитьНапоминанияПользователя()
