
// Процедура, вызываемая из форм документов из процедуры ПриОткрытии(), проверяет
// доступен ли документ для редактирования, если нет, то устанавливает свойство
// формы ТолькоПросмотр в значеине Истина
Процедура УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма) Экспорт
	
		
	Если Пользователи.ЭтоПолноправныйПользователь() Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(ЭтотОбъект));
	ПолноеИмя = ОбъектМетаданных.ПолноеИмя();
	
	Если НЕ ОбщегоНазначения.ЭтоДокумент(ОбъектМетаданных) Тогда
		Возврат;
	КонецЕсли;
	
	Источник = ЭтотОбъект;
	ИдентификаторДанных = ЭтотОбъект.Ссылка;
	
	///
	
	Если НЕ ЗначениеЗаполнено(ИдентификаторДанных) Тогда
		Возврат;
	КонецЕсли;
	РежимПросмотра = Ложь;
	ТекстСообщения = "";
	НастройкаПравДоступа.ПроверкаПериодаДокумента(ЭтотОбъект, РежимПросмотра);
	Если РежимПросмотра Тогда
		ТекстСообщения = "Редактирование данных этого периода запрещено. Документ открыт в режиме просмотра...";
	КонецЕсли;
	ЗапрещеноРедактироватьДокумент = Ложь;
	АвторДокументаТекст = "";
	НастройкаПравДоступа.ПроверкаРазрешенияРедактированияЧужихДокументов(ЭтотОбъект, ЗапрещеноРедактироватьДокумент, АвторДокументаТекст);
	Если ЗапрещеноРедактироватьДокумент Тогда
		РежимПросмотра = Истина;
		Если Не ПустаяСтрока(ТекстСообщения) Тогда
			ТекстСообщения = ТекстСообщения + Символы.ПС;
		КонецЕсли;
		ТекстСообщения = ТекстСообщения + "Редактирование документов пользователя """ + АвторДокументаТекст + """ запрещено. Документ открыт в режиме просмотра...";
	КонецЕсли;
	Если РежимПросмотра Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры


Процедура ВыполнитьОбменПриЗавершенииРаботыПрограммы() Экспорт 
	Если Метаданные.Обработки.Найти("АвтообменДанными")=Неопределено Тогда
		Возврат;
	КонецЕсли;
	Выполнить("ПроцедурыОбменаДанными.ВыполнитьОбменПриЗавершенииРаботыПрограммы(Обработки.АвтоОбменДанными.Создать())");
КонецПроцедуры

Процедура НастройкаЗаголовка(ЗаголовокСистемы) Экспорт
	Если Метаданные.ПараметрыСеанса.Найти("ИспользованиеРИБ")<>Неопределено  И ПараметрыСеанса.ИспользованиеРИБ Тогда
		Если Не ПустаяСтрока(ПланыОбмена.Полный.ЭтотУзел().Наименование) Тогда
			ЗаголовокСистемы = ЗаголовокСистемы + " / " + СокрЛП(ПланыОбмена.Полный.ЭтотУзел());
		Иначе
			ЗаголовокСистемы = ЗаголовокСистемы + " / " + СокрЛП(ПланыОбмена.ПоОрганизации.ЭтотУзел());
		КонецЕсли;
	КонецЕсли;
	ЗаголовокСистемы = ЗаголовокСистемы + " / "+ СокрЛП(ПользователиКлиентСервер.АвторизованныйПользователь());
КонецПроцедуры

Функция ОбменДаннымиДоступен() Экспорт
	Возврат	Метаданные.Обработки.Найти("АвтоОбменДанными")<>Неопределено И ПравоДоступа("Использование", Метаданные.Обработки.АвтоОбменДанными);
КонецФункции

 // Процедура предназначена для преобразования номера документа.
//
// Параметры:
//  Документ - (ДокументСсылка), документ, чей номер надо получить для печати.
//
// Возвращаемое значение.
//  Строка - номер документа для печати
//
Функция ПолучитьНомерНаПечать(Документ, глСписокПрефиксовУзлов = Неопределено, ПредставлениеНомераДокумента = Неопределено) Экспорт

	Если Документ = Неопределено Тогда 
		Возврат 0;
	КонецЕсли;

	Номер = СокрЛП(Документ.Номер);
	
	// Если номер документа по стандарту БСП 8.2, сформируем номер через стандартную процедуру БСП.
	Если Метаданные.ФункциональныеОпции.Найти("ИспользоватьОбменДанными")<>Неопределено Тогда
		Если ПолучитьФункциональнуюОпцию("ИспользоватьОбменДанными") = Истина Тогда
		
			Если Сред(Номер, 5, 1) = "-" Тогда
				Если фин_ОбщегоНазначенияСервер.ЕстьОбщийМодуль("ПрефиксацияОбъектовКлиентСервер") Тогда
					Номер = Вычислить("ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать("""+Номер+""",Ложь,Истина)");
					КонецЕсли;
				Возврат Номер;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	Если НЕ (Метаданные.Константы.Найти("ПредставлениеНомераДокументов")<>Неопределено И Метаданные.Перечисления.Найти("ВидыПредставленийНомеровДокументов")<>Неопределено) Тогда
		Возврат Номер;
	КонецЕсли;
	Если ПредставлениеНомераДокумента = Неопределено Тогда
		ПредставлениеНомераДокумента = Константы.ПредставлениеНомераДокументов.Получить();
	КонецЕсли;	
	
	Если (ПредставлениеНомераДокумента <> Перечисления.ВидыПредставленийНомеровДокументов.ПустаяСсылка()) И (ПредставлениеНомераДокумента <> 
		 Перечисления.ВидыПредставленийНомеровДокументов.ПрефиксИНули) Тогда
		 
		Попытка
			ПрефиксОрганизации = СокрЛП(Документ.Организация.Префикс); 
		Исключение
			Попытка
				ПрефиксОрганизации = СокрЛП(Документ.ДокументОснование.Организация.Префикс); 
			Исключение
				ПрефиксОрганизации = "";
			КонецПопытки;
		КонецПопытки;
		СписокПрефиксовУзлов = ?(глСписокПрефиксовУзлов<>Неопределено, глСписокПрефиксовУзлов, Новый Структура);
		ДополнительныйПрефикс = ПолучитьДополнительныйПрефиксНомераДокумента(Документ);
		
		ПолныйПрефиксНайден = Ложь;
		
		//в номере может быть префикс любого узла
		Для Каждого ЭлементСпискаПрефиксовУзлов Из СписокПрефиксовУзлов Цикл
			ПрефиксУзла = СокрЛП(ЭлементСпискаПрефиксовУзлов.Значение);
			ПолныйПрефикс = ПрефиксУзла + ПрефиксОрганизации + ДополнительныйПрефикс;
			ПозицияПолногоПрефикса = Найти(Номер, ПолныйПрефикс);
			Если ПозицияПолногоПрефикса = 1 Тогда
				Номер = Прав(Номер, СтрДлина(Номер) - СтрДлина(ПолныйПрефикс));
				ПолныйПрефиксНайден = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;	
		
		//так же возможно в номере нет префикса узла
		Если Не ПолныйПрефиксНайден Тогда
			ПолныйПрефикс = ПрефиксОрганизации + ДополнительныйПрефикс;
			Если Не ПустаяСтрока(ПолныйПрефикс) Тогда 
				ПозицияПолногоПрефикса = Найти(Номер, ПолныйПрефикс);
				Если ПозицияПолногоПрефикса = 1 Тогда
					Номер = Прав(Номер, СтрДлина(Номер) - СтрДлина(ПолныйПрефикс));
					ПолныйПрефиксНайден = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		//возможно в номере есть только префикс организации
		Если Не ПолныйПрефиксНайден Тогда
			ПолныйПрефикс = ПрефиксОрганизации;
			Если Не ПустаяСтрока(ПолныйПрефикс) Тогда 
				ПозицияПолногоПрефикса = Найти(Номер, ПолныйПрефикс);
				Если ПозицияПолногоПрефикса = 1 Тогда
					Номер = Прав(Номер, СтрДлина(Номер) - СтрДлина(ПолныйПрефикс));
					ПолныйПрефиксНайден = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Пока Лев(Номер, 1) = "0" Цикл
			Номер = Прав(Номер, СтрДлина(Номер) - 1);
		КонецЦикла;
		
		Если ПредставлениеНомераДокумента = Перечисления.ВидыПредставленийНомеровДокументов.ПрефиксБезНулей Тогда
			Если ПолныйПрефиксНайден Тогда
				Номер = ПолныйПрефикс + Номер;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Номер;
	
КонецФункции // ПолучитьНомерНаПечать()

Функция ПолучитьДополнительныйПрефиксНомераДокумента(Документ)
     Возврат "";
КонецФункции

Функция ПрефиксУзлаРаспределеннойИнформационнойБазы() Экспорт
	Если Метаданные.ПараметрыСеанса.Найти("ПрефиксУзлаРаспределеннойИнформационнойБазы")=Неопределено Тогда
		Возврат "";
	КонецЕсли;
	Возврат ПараметрыСеанса.ПрефиксУзлаРаспределеннойИнформационнойБазы;	
КонецФункции

Процедура ПровестиОбменДанными() Экспорт
	Если Метаданные.Обработки.Найти("АвтообменДанными")=Неопределено Тогда
		Возврат;
	КонецЕсли;
	Обработки.АвтоОбменДанными.Создать().ПровестиОбменДанными(); 
КонецПроцедуры
