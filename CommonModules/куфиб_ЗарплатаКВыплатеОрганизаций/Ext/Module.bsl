
// По переданным ссылкам на ЗарплатаКВыплате возвращает таблицу значений со ссылкой на документ и его состояние (проведен, удален, выплачивается)
//
// Параметры:
//	Ссылкы - массив документ-ссылка ЗарплатаКВыплатеОрганизаций
//
// Возвращаемое значение:
//	Таблица значений
//
Функция ПолучитьСостояние(Ссылки, УчитыватьРеглДокументы = Истина, УчитыватьУпрДокументы = Ложь) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = ПолучитьТекстЗапросаСостояния(УчитыватьРеглДокументы, УчитыватьУпрДокументы);
	Запрос.УстановитьПараметр("Ссылки", Ссылки);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции //ПолучитьСостояние()

// Возвращает текст запроса со ссылкой на документ и его состояние (проведен, удален, выплачивается)
//
// Параметры:
//
// Возвращаемое значение:
//	Текст запроса
//
Функция ПолучитьТекстЗапросаСостояния(УчитыватьРеглДокументы = Истина, УчитыватьУпрДокументы = Ложь) Экспорт
	
	ДоступныРеглДокументы 	= ПравоДоступа("Чтение", Метаданные.Документы.ЗарплатаКВыплатеОрганизаций);
	ДоступныУпрДокументы	= ПравоДоступа("Чтение", Метаданные.Документы.ЗарплатаКВыплате);
	
	ТекстЗапроса = "";
	
	Если ДоступныРеглДокументы И УчитыватьРеглДокументы Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПлатежноеПоручениеИсходящееПеречислениеЗаработнойПлаты.Ведомость КАК Ведомость
		|ПОМЕСТИТЬ ВыплатаРегламентированнойЗарплаты
		|ИЗ
		|	Документ.ПлатежноеПоручениеИсходящее.ПеречислениеЗаработнойПлаты КАК ПлатежноеПоручениеИсходящееПеречислениеЗаработнойПлаты
		|ГДЕ
		|	ПлатежноеПоручениеИсходящееПеречислениеЗаработнойПлаты.Ведомость В(&Ссылки)
		|	И ПлатежноеПоручениеИсходящееПеречислениеЗаработнойПлаты.Ссылка.Проведен
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям.Ведомость
		|ИЗ
		|	РегистрСведений.СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям КАК СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям
		|ГДЕ
		|	СведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям.Ведомость В(&Ссылки)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ведомость"
		+Символы.ПС+ 
		";";
	КонецЕсли;
	
	//Если ДоступныУпрДокументы И УчитыватьУпрДокументы Тогда
	//	ТекстЗапроса = ТекстЗапроса 
	//	+Символы.ПС+ 
	//	"////////////////////////////////////////////////////////////////////////////////" 
	//	+Символы.ПС+ 
	//	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	//	|	СведенияОВыплатах.Ведомость КАК Ведомость
	//	|ПОМЕСТИТЬ ВыплатаУправленческойЗарплаты
	//	|ИЗ
	//	|	РегистрСведений.СведенияОВыплатахРаботникамПоПлатежнымВедомостям КАК СведенияОВыплатах
	//	|ГДЕ
	//	|	СведенияОВыплатах.Ведомость В(&Ссылки)
	//	|
	//	|ИНДЕКСИРОВАТЬ ПО
	//	|	Ведомость"
	//	+Символы.ПС+ 
	//	";";
	//КонецЕсли;
	
	Если ДоступныРеглДокументы И УчитыватьРеглДокументы Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗарплатаКВыплате.Ссылка,
		|	ВЫБОР
		|		КОГДА ВыплатаРегламентированнойЗарплаты.Ведомость ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Выплачивается
		|ИЗ
		|	Документ.ЗарплатаКВыплатеОрганизаций КАК ЗарплатаКВыплате
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВыплатаРегламентированнойЗарплаты КАК ВыплатаРегламентированнойЗарплаты
		|		ПО (ВыплатаРегламентированнойЗарплаты.Ведомость = ЗарплатаКВыплате.Ссылка)
		|ГДЕ
		|	ЗарплатаКВыплате.Ссылка В(&Ссылки)";
		Если ДоступныУпрДокументы И УчитыватьУпрДокументы Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗарплатаКВыплате.Ссылка,
			|	ВЫБОР
			|		КОГДА ВыплатаУправленческойЗарплаты.Ведомость ЕСТЬ NULL 
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ
			|ИЗ
			|	Документ.ЗарплатаКВыплате КАК ЗарплатаКВыплате
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВыплатаУправленческойЗарплаты КАК ВыплатаУправленческойЗарплаты
			|		ПО (ВыплатаУправленческойЗарплаты.Ведомость = ЗарплатаКВыплате.Ссылка)
			|ГДЕ
			|	ЗарплатаКВыплате.Ссылка В(&Ссылки)";
		КонецЕсли;
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ЗарплатаКВыплате.Ссылка,
		|	Истина КАК Выплачивается
		//|	ВЫБОР
		//|		КОГДА ВыплатаУправленческойЗарплаты.Ведомость ЕСТЬ NULL 
		//|			ТОГДА ЛОЖЬ
		//|		ИНАЧЕ ИСТИНА
		//|	КОНЕЦ КАК Выплачивается
		|ИЗ
		|	Документ.ЗарплатаКВыплате КАК ЗарплатаКВыплате
		//|		ЛЕВОЕ СОЕДИНЕНИЕ ВыплатаУправленческойЗарплаты КАК ВыплатаУправленческойЗарплаты
		//|		ПО (ВыплатаУправленческойЗарплаты.Ведомость = ЗарплатаКВыплате.Ссылка)
		|ГДЕ
		|	ЗарплатаКВыплате.Ссылка В(&Ссылки)";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции //ПолучитьТекстЗапросаСостояния()

#Если ТолстыйКлиентОбычноеПриложение Тогда

// Визуализирует состояние документа (проведен, удален, выплачивается)
//
// Параметры:
//	СостояниеДокументов
//	ОформленияСтрок
//	ЯчейкаВыплаты
//
// Возвращаемое значение:
//	Таблица значений
//
Процедура ПоказатьСостояние(СостояниеДокументов, ОформленияСтрок, ИмяЯчейкиВыплаты = "Выплачивается") Экспорт
	
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ЯчейкаВыплаты = ОформлениеСтроки.Ячейки[ИмяЯчейкиВыплаты];	
	
		СостояниеДокумента = СостояниеДокументов.Найти(ОформлениеСтроки.ДанныеСтроки.Ссылка, "Ссылка");
		
		Если СостояниеДокумента = Неопределено Тогда
			ЯчейкаВыплаты.ОтображатьКартинку = Ложь;
		ИначеЕсли СостояниеДокумента.Выплачивается Тогда
			ЯчейкаВыплаты.Картинка = БиблиотекаКартинок.ЗначокЗарплата16;
			ЯчейкаВыплаты.ОтображатьКартинку = Истина
		Иначе
			ЯчейкаВыплаты.ОтображатьКартинку = Ложь;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры	

#КонецЕсли
