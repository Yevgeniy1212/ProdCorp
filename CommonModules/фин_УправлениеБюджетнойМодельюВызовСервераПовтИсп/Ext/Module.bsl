Функция ПолучитьПоказательИнформационнойБазыПоИдентификатору(Идентификатор) Экспорт
	Если ТипЗнч(Идентификатор)=Тип("ПеречислениеСсылка.фин_КлассификаторБюджетов") Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	фин_Бюджеты.Ссылка
			|ИЗ
			|	Справочник.фин_Бюджеты КАК фин_Бюджеты
			|ГДЕ
			|	фин_Бюджеты.ПозицияКлассификатора = &Идентификатор
			|	И НЕ фин_Бюджеты.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Возврат ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;

	ИначеЕсли ТипЗнч(Идентификатор)=Тип("ПеречислениеСсылка.фин_КлассификаторРасчетныхПоказателей") Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	фин_РасчетныеПоказатели.Ссылка
			|ИЗ
			|	Справочник.фин_РасчетныеПоказатели КАК фин_РасчетныеПоказатели
			|ГДЕ
			|	фин_РасчетныеПоказатели.ПозицияКлассификатора = &Идентификатор
			|	И НЕ фин_РасчетныеПоказатели.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Возврат ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;

	ИначеЕсли ТипЗнч(Идентификатор)=Тип("ПеречислениеСсылка.фин_КлассификаторСписковДанных") Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	фин_СпискиДанных.Ссылка
			|ИЗ
			|	Справочник.фин_СпискиДанных КАК фин_СпискиДанных
			|ГДЕ
			|	фин_СпискиДанных.ПозицияКлассификатора = &Идентификатор
			|	И НЕ фин_СпискиДанных.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Возврат ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;

	ИначеЕсли ТипЗнч(Идентификатор)=Тип("ПеречислениеСсылка.фин_КлассификаторСоответствийПервичныхДанных") Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	фин_ВариантыПолученияСоответствийДляПервичныхДанных.Ссылка
			|ИЗ
			|	Справочник.фин_ВариантыПолученияСоответствийДляПервичныхДанных КАК фин_ВариантыПолученияСоответствийДляПервичныхДанных
			|ГДЕ
			|	фин_ВариантыПолученияСоответствийДляПервичныхДанных.ПозицияКлассификатора = &Идентификатор
			|	И НЕ фин_ВариантыПолученияСоответствийДляПервичныхДанных.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Возврат ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;

	ИначеЕсли ТипЗнч(Идентификатор)=Тип("ПеречислениеСсылка.фин_КлассификаторРазрезовБюджетов") Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	фин_ВидыСубконтоБюджетирования.Ссылка
			|ИЗ
			|	ПланВидовХарактеристик.фин_ВидыСубконтоБюджетирования КАК фин_ВидыСубконтоБюджетирования
			|ГДЕ
			|	фин_ВидыСубконтоБюджетирования.ПозицияКлассификатора = &Идентификатор
			|	И НЕ фин_ВидыСубконтоБюджетирования.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Возврат ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;

	ИначеЕсли ТипЗнч(Идентификатор)=Тип("ПеречислениеСсылка.фин_КлассификаторСтатейБюджетов") Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	фин_ФинансовыеПоказатели.Ссылка
			|ИЗ
			|	Справочник.фин_ФинансовыеПоказатели КАК фин_ФинансовыеПоказатели
			|ГДЕ
			|	фин_ФинансовыеПоказатели.ПозицияКлассификатора = &Идентификатор
			|	И НЕ фин_ФинансовыеПоказатели.ПометкаУдаления
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	фин_СтатьиБюджета.Ссылка
			|ИЗ
			|	Справочник.фин_СтатьиБюджета КАК фин_СтатьиБюджета
			|ГДЕ
			|	фин_СтатьиБюджета.ПозицияКлассификатора = &Идентификатор
			|	И НЕ фин_СтатьиБюджета.ПометкаУдаления
			|	И фин_СтатьиБюджета.ЭтоГруппа";
		
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Возврат ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;

	КонецЕсли;
КонецФункции

Функция ПолучитьИзмерениеПоИдентификатору(ПозицияКлассификатора) Экспорт
	
	Если ПозицияКлассификатора = Перечисления.фин_КлассификаторРазрезовБюджетов.УправленческоеПодразделение Тогда
		Возврат Перечисления.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение;
	ИначеЕсли ПозицияКлассификатора = Перечисления.фин_КлассификаторРазрезовБюджетов.Проект Тогда
		Возврат Перечисления.фин_ФактическиеПоказателиБюджетирования.Проект;
	ИначеЕсли ПозицияКлассификатора = Перечисления.фин_КлассификаторРазрезовБюджетов.Номенклатура Тогда
		Возврат Перечисления.фин_ФактическиеПоказателиБюджетирования.Номенклатура;
	КонецЕсли;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_НастройкаДополнительныхРазрезовБюджетирования.Измерение
		|ИЗ
		|	РегистрСведений.фин_НастройкаДополнительныхРазрезовБюджетирования КАК фин_НастройкаДополнительныхРазрезовБюджетирования
		|ГДЕ
		|	фин_НастройкаДополнительныхРазрезовБюджетирования.Разрез.ПозицияКлассификатора = &ПозицияКлассификатора";
	
	Запрос.УстановитьПараметр("ПозицияКлассификатора", ПозицияКлассификатора);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Измерение;
	КонецЦикла;
	
	Возврат Перечисления.фин_ФактическиеПоказателиБюджетирования.ПустаяСсылка();
	
КонецФункции

Функция ПолучитьАктуальныйРегламент(ПериодПланирования=Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПрименяемыеРегламенты.Регламент
		|ИЗ
		|	РегистрСведений.фин_ПрименяемыеРегламентыФормированияБюджетов.СрезПоследних(&ПериодПланирования, ) КАК ПрименяемыеРегламенты";
	
	Запрос.УстановитьПараметр("ПериодПланирования", ?(ПериодПланирования=Неопределено,ТекущаяДата(),ПериодПланирования));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Регламент;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

Функция ПолучитьПараметрыКомплектаБюджетов(АктуальныйРегламент = Неопределено) Экспорт
	Если АктуальныйРегламент = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_УстановленныеКомпонентыКомплектаБюджетов.Компонент
		|ИЗ
		|	РегистрСведений.фин_УстановленныеКомпонентыКомплектаБюджетов КАК фин_УстановленныеКомпонентыКомплектаБюджетов
		|ГДЕ
		|	фин_УстановленныеКомпонентыКомплектаБюджетов.Регламент = &Регламент";
	
	Запрос.УстановитьПараметр("Регламент", АктуальныйРегламент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Компонент");
	
КонецФункции

Функция ПолучитьПользовательскийПараметрКомплектаБюджетов(АктуальныйРегламент,Параметр) Экспорт
	Если АктуальныйРегламент = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_ЗначенияПользовательскихПараметровКомплектаБюджетов.Характеристика
		|ИЗ
		|	РегистрСведений.фин_ЗначенияПользовательскихПараметровКомплектаБюджетов КАК фин_ЗначенияПользовательскихПараметровКомплектаБюджетов
		|ГДЕ
		|	фин_ЗначенияПользовательскихПараметровКомплектаБюджетов.Регламент = &Регламент
		|	И фин_ЗначенияПользовательскихПараметровКомплектаБюджетов.Параметр = &Параметр";
	
	Запрос.УстановитьПараметр("Регламент", АктуальныйРегламент);
	Запрос.УстановитьПараметр("Регламент", Параметр);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Характеристика;	
	КонецЕсли;                         
	Возврат Неопределено;
	
КонецФункции
