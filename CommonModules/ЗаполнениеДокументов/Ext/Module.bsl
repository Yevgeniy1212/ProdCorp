////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ЗАПОЛНЕНИЯ РЕКВИЗИТОВ
 
// Процедура предназначена для заполнения общих реквизитов документов,
// вызывается в обработчиках событий "ПриОткрытии" в модулех форм всех документов.
//
// Параметры:
//  ДокументОбъект                 - объект редактируемого документа,
//  ТекПользователь                - ссылка на справочник, определяет текущего пользователя  
//  ВалютаРегламентированногоУчета - валюта регламентированного учета
//  ТипОперации                    - необязаетельный, строка вида операции ("Покупка" или "Продажа"),
//                                   если не передан, то реквизиты, зависящие от вида операции, не заполняются
//
Процедура ЗаполнитьШапкуДокумента(ДокументОбъект, ТекПользователь, ВалютаРегламентированногоУчета = Неопределено, ТипОперации = "", НеИзменятьРеквизитыПоНДС = Ложь,ПараметрОбъектКопирования = Неопределено, ПараметрОснование = Неопределено) Экспорт

	Перем ТипЦен;

	МетаданныеДокумента = ДокументОбъект.Метаданные();

	
	// Флаги принадлежности к учету заполняем, только если оба не заполнены
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ОтражатьВУправленческомУчете", МетаданныеДокумента) 
		И ОбщегоНазначения.ЕстьРеквизитДокумента("ОтражатьВБухгалтерскомУчете", МетаданныеДокумента) Тогда
		
		//По умолчанию все документы требуют отражения в бухгалтерском учете
		Если ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
			ДокументОбъект.ОтражатьВБухгалтерскомУчете = ПараметрОбъектКопирования.ОтражатьВБухгалтерскомУчете;
			ДокументОбъект.ОтражатьВУправленческомУчете =ПараметрОбъектКопирования.ОтражатьВБухгалтерскомУчете;
		Иначе
			Если Не (ДокументОбъект.ОтражатьВУправленческомУчете 
				или ДокументОбъект.ОтражатьВБухгалтерскомУчете) Тогда
				
				ДокументОбъект.ОтражатьВУправленческомУчете = Ложь;
				ДокументОбъект.ОтражатьВБухгалтерскомУчете  = Истина;				
			КонецЕсли;
		КонецЕсли;   	
		
	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("ОтражатьВБухгалтерскомУчете", МетаданныеДокумента) Тогда

		//По умолчанию все документы требуют отражения в бухгалтерском учете
		Если ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
			ДокументОбъект.ОтражатьВБухгалтерскомУчете =ПараметрОбъектКопирования.ОтражатьВБухгалтерскомУчете;
		Иначе
			//По умолчанию все документы требуют отражения в бухгалтерском учете
			ДокументОбъект.ОтражатьВБухгалтерскомУчете = Истина
		КонецЕсли;

	КонецЕсли; 
	
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Организация", МетаданныеДокумента) 
	  И (НЕ ЗначениеЗаполнено(ДокументОбъект.Организация)) Тогда
		ДокументОбъект.Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнаяОрганизация");
	КонецЕсли;

	//
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Подразделение", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.Подразделение)) Тогда
	   
	   Если ОбщегоНазначения.ЕстьПредопределенныйЭлемент("Подразделение",Метаданные.ПланыВидовХарактеристик.НастройкиПользователей) Тогда
		ДокументОбъект.Подразделение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновноеПодразделение");
	   КонецЕсли;
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ПодразделениеОрганизации", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.ПодразделениеОрганизации)) Тогда
		ДокументОбъект.ПодразделениеОрганизации = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновноеПодразделениеОрганизации");
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурноеПодразделение", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.СтруктурноеПодразделение)) Тогда
	   	СтруктурноеПодразделение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновноеСтруктурноеПодразделениеОрганизации");
		Если СтруктурноеПодразделение = Неопределено Тогда
			ДокументОбъект.СтруктурноеПодразделение = ДокументОбъект.Организация;
		ИначеЕсли ТипЗнч(СтруктурноеПодразделение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
			ДокументОбъект.СтруктурноеПодразделение = СтруктурноеПодразделение;
		Иначе
			ДокументОбъект.СтруктурноеПодразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();							
		КонецЕсли;
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурноеПодразделениеОтправитель", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.СтруктурноеПодразделениеОтправитель)) Тогда
	   	СтруктурноеПодразделение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновноеСтруктурноеПодразделениеОрганизации");
		Если СтруктурноеПодразделение = Неопределено Тогда
			ДокументОбъект.СтруктурноеПодразделениеОтправитель = ДокументОбъект.Организация;
		ИначеЕсли ТипЗнч(СтруктурноеПодразделение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
			ДокументОбъект.СтруктурноеПодразделениеОтправитель = СтруктурноеПодразделение;
		Иначе
			ДокументОбъект.СтруктурноеПодразделениеОтправитель = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();							
		КонецЕсли;
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурнаяЕдиница", МетаданныеДокумента)
	   И НЕ ЗначениеЗаполнено(ДокументОбъект.СтруктурнаяЕдиница) 
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("Организация", МетаданныеДокумента) Тогда
		ДокументОбъект.СтруктурнаяЕдиница = ДокументОбъект.Организация.ОсновнойБанковскийСчет;
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Ответственный", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.Ответственный)) Тогда
		ДокументОбъект.Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнойОтветственный");
	КонецЕсли;

	//+++ Oleg SmartT. 2021-03-09	
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Ответственный", МетаданныеДокумента)
	   И (
	   ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.РеализацияТоваровУслуг") ИЛИ
	   ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.СписаниеТоваров") ИЛИ
	   ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ЗакрытиеМесяца") ИЛИ
	   ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОперацияБух") ИЛИ
	   ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") ИЛИ
	   ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПлатежноеПоручениеИсходящее") ИЛИ
	   ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.РеализацияТоваровУслуг") 
	   ) Тогда
		ДокументОбъект.Ответственный = ТекПользователь;
	КонецЕсли;
	//--- Oleg SmartT. 2021-03-09	
	
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Автор", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.Автор)) Тогда
		ДокументОбъект.Автор = ТекПользователь;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВидОперации", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.ВидОперации)) Тогда
		ДокументОбъект.ВидОперации = Перечисления[ДокументОбъект.ВидОперации.Метаданные().Имя][0];
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Склад", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.Склад)) Тогда
		ДокументОбъект.Склад = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнойСклад");
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СкладОрдер", МетаданныеДокумента)
	   И НЕ ЗначениеЗаполнено(ДокументОбъект.СкладОрдер) Тогда
		ДокументОбъект.СкладОрдер = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнойСклад");
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СтавкаНДС", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.СтавкаНДС)) Тогда
		ДокументОбъект.СтавкаНДС = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнаяСтавкаНДС");
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("БанковскийСчетОрганизации", МетаданныеДокумента)
	   И НЕ ЗначениеЗаполнено(ДокументОбъект.БанковскийСчетОрганизации)
	   И (ЗначениеЗаполнено(ДокументОбъект.Организация)) Тогда
	    СчетПоУмолчанию = ДокументОбъект.Организация.ОсновнойБанковскийСчет;
		ДокументОбъект.БанковскийСчетОрганизации = СчетПоУмолчанию;
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВалютаДокумента", МетаданныеДокумента) Тогда
			ДокументОбъект.ВалютаДокумента = СчетПоУмолчанию.ВалютаДенежныхСредств;
		КонецЕсли;
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СчетОрганизации", МетаданныеДокумента)
	   И НЕ ЗначениеЗаполнено(ДокументОбъект.СчетОрганизации)
	   И (ЗначениеЗаполнено(ДокументОбъект.Организация)) Тогда
		СчетПоУмолчанию = ДокументОбъект.Организация.ОсновнойБанковскийСчет;
		ДокументОбъект.СчетОрганизации = СчетПоУмолчанию;
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВалютаДокумента", МетаданныеДокумента) Тогда
			ДокументОбъект.ВалютаДокумента =  СчетПоУмолчанию.ВалютаДенежныхСредств;
		КонецЕсли;
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВалютаДокумента", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.ВалютаДокумента)) Тогда
		ДокументОбъект.ВалютаДокумента = ВалютаРегламентированногоУчета;
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("КурсДокумента", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.КурсДокумента)) Тогда
		СтруктураКурсаДокумента      = ОбщегоНазначения.ПолучитьКурсВалюты(ДокументОбъект.ВалютаДокумента, ДокументОбъект.Дата);
		ДокументОбъект.КурсДокумента = СтруктураКурсаДокумента.Курс;

		Если ОбщегоНазначения.ЕстьРеквизитДокумента("КратностьДокумента", МетаданныеДокумента) Тогда
			ДокументОбъект.КратностьДокумента = СтруктураКурсаДокумента.Кратность;
		КонецЕсли;
	КонецЕсли;

	// Если тип цен оказался не заполненным, то берем его из установок пользователя
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ТипЦен", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.ТипЦен)) Тогда
		Если ТипОперации = "Продажа" Тогда
			ДокументОбъект.ТипЦен = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнойТипЦенПродажи");
		КонецЕсли;
	КонецЕсли;
	
	//если документ скопирован, флаги учета переносим как есть
	Если ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
		// Флаги учета налогов заполняем, только если флаг УчитыватьНДС не заполнен.
		
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьНДС", МетаданныеДокумента)   Тогда
			ДокументОбъект.УчитыватьНДС =  ПараметрОбъектКопирования.УчитыватьНДС ;	
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокумента)   Тогда
				ДокументОбъект.СуммаВключаетНДС =  ПараметрОбъектКопирования.СуммаВключаетНДС ;	
			КонецЕсли;			
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьАкциз", МетаданныеДокумента) Тогда
			ДокументОбъект.УчитыватьАкциз =  ПараметрОбъектКопирования.УчитыватьАкциз;
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетАкциз", МетаданныеДокумента) Тогда			
				ДокументОбъект.СуммаВключаетАкциз = ПараметрОбъектКопирования.СуммаВключаетАкциз;
			КонецЕсли;				
		КонецЕсли; 	
		
	ИначеЕсли ЗначениеЗаполнено(ПараметрОснование) Тогда
		
		Если Метаданные.Документы.Найти(ПараметрОснование.Метаданные().Имя)<>Неопределено Тогда
			
			МетаданныеОснования = ПараметрОснование.Метаданные();
			
			// если в основании есть реквизит Учитывать НДС, подставляем оттуда
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьНДС", МетаданныеДокумента) И
				ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьНДС", МетаданныеОснования) Тогда
				
				ДокументОбъект.УчитыватьНДС =  ПараметрОснование.УчитыватьНДС ;	
				
				// Флаги учета налогов заполняем, только если флаг УчитыватьНДС не заполнен.
			ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьНДС", МетаданныеДокумента) И (Не НеИзменятьРеквизитыПоНДС) Тогда
				
				ДокументОбъект.УчитыватьНДС =  ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНДС(ДокументОбъект.Организация, ДокументОбъект.Дата) ;		
				
			КонецЕсли;
			
			// если в основании есть реквизит Учитывать акциз, подставляем оттуда
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьАкциз", МетаданныеДокумента) И
				ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьАкциз", МетаданныеОснования) Тогда
				
				ДокументОбъект.УчитыватьАкциз =  ПараметрОснование.УчитыватьАкциз;
				
			ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьАкциз", МетаданныеДокумента) Тогда
				
				ДокументОбъект.УчитыватьАкциз =  ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаАкциза(ДокументОбъект.Организация, ДокументОбъект.Дата) ;
				
			КонецЕсли;
			
			Если (ОбщегоНазначения.ЕстьРеквизитДокумента("ТипЦен", МетаданныеДокумента))
				И (ЗначениеЗаполнено(ДокументОбъект.ТипЦен)) Тогда
				
				УстановитьПризнакиИзТипаЦен = Истина;
				// Если ТипЦен - элемент справочника ТипыЦенНоменклатуры и цены выбранного типа расчетные, 
				// то флаги включения налогов надо брать из базовой цены
				Если ДокументОбъект.ТипЦен.Метаданные().Реквизиты.Найти("Рассчитывается") <> Неопределено Тогда
					ТипЦен = ?(ДокументОбъект.ТипЦен.Рассчитывается, ДокументОбъект.ТипЦен.БазовыйТипЦен, ДокументОбъект.ТипЦен);
				Иначе
					ТипЦен = ДокументОбъект.ТипЦен;
				КонецЕсли;
				
			Иначе
				
				УстановитьПризнакиИзТипаЦен = Ложь;
				
			КонецЕсли;
			
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокумента) И
				ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеОснования)Тогда
				
				ДокументОбъект.СуммаВключаетНДС =  ПараметрОснование.СуммаВключаетНДС ;	
				
			ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьНДС", МетаданныеДокумента) И ДокументОбъект.УчитыватьНДС И ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокумента) Тогда
				
				Если УстановитьПризнакиИзТипаЦен Тогда
					ДокументОбъект.СуммаВключаетНДС = ТипЦен.ЦенаВключаетНДС;
				Иначе
					ДокументОбъект.СуммаВключаетНДС = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетАкциз", МетаданныеДокумента) И 
				ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетАкциз", МетаданныеОснования)Тогда			
				
				ДокументОбъект.СуммаВключаетАкциз = ПараметрОснование.СуммаВключаетАкциз;
				
			ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьАкциз", МетаданныеДокумента) И ДокументОбъект.УчитыватьАкциз и ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетАкциз", МетаданныеДокумента) Тогда
				
				Если УстановитьПризнакиИзТипаЦен Тогда
					ДокументОбъект.СуммаВключаетАкциз = ТипЦен.ЦенаВключаетАкциз;
				Иначе
					ДокументОбъект.СуммаВключаетАкциз = Истина;
				КонецЕсли;
				
			КонецЕсли;							
		КонецЕсли;
		
	Иначе
		
		// Флаги учета налогов заполняем, только если флаг УчитыватьНДС не заполнен.
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьНДС", МетаданныеДокумента)  И (Не НеИзменятьРеквизитыПоНДС) Тогда
			ДокументОбъект.УчитыватьНДС =  ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНДС(ДокументОбъект.Организация, ДокументОбъект.Дата) ;		
		КонецЕсли; 
		
		// Флаги учета налогов заполняем, только если флаг УчитыватьНДС не заполнен.
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьАкциз", МетаданныеДокумента) Тогда
			ДокументОбъект.УчитыватьАкциз =  ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаАкциза(ДокументОбъект.Организация, ДокументОбъект.Дата) ;		
		КонецЕсли; 
		
		Если (ОбщегоНазначения.ЕстьРеквизитДокумента("ТипЦен", МетаданныеДокумента))
			И (ЗначениеЗаполнено(ДокументОбъект.ТипЦен)) Тогда
			
			// Если ТипЦен - элемент справочника ТипыЦенНоменклатуры и цены выбранного типа расчетные, 
			// то флаги включения налогов надо брать из базовой цены
			ТипЦен = ДокументОбъект.ТипЦен;
			
			// Флаги учета налогов заполняем, только если флаг УчитыватьНДС заполнен.
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьНДС", МетаданныеДокумента) И ДокументОбъект.УчитыватьНДС и ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокумента) И (Не НеИзменятьРеквизитыПоНДС) Тогда
				ДокументОбъект.СуммаВключаетНДС = ТипЦен.ЦенаВключаетНДС;
			КонецЕсли; 
			
			// Флаги учета налогов заполняем, только если флаг УчитыватьАкциз заполнен.
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьАкциз", МетаданныеДокумента) И ДокументОбъект.УчитыватьАкциз и ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетАкциз", МетаданныеДокумента)Тогда			
				ДокументОбъект.СуммаВключаетАкциз = ТипЦен.ЦенаВключаетАкциз;
			КонецЕсли; 		
		Иначе          
			// Заполним значениями по умолчанию (нет, либо не заполнен ТипЦен).
			// Флаги учета налогов заполняем, только если флаг УчитыватьНДС не заполнен.
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьНДС", МетаданныеДокумента) И ДокументОбъект.УчитыватьНДС и ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокумента) И (Не НеИзменятьРеквизитыПоНДС) Тогда			
				ДокументОбъект.СуммаВключаетНДС = Истина;
			КонецЕсли; 
			
			// Заполним значениями по умолчанию (нет, либо не заполнен ТипЦен).
			// Флаги учета налогов заполняем, только если флаг УчитыватьНДС не заполнен.
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьАкциз", МетаданныеДокумента) И ДокументОбъект.УчитыватьАкциз и ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетАкциз", МетаданныеДокумента)Тогда			
				ДокументОбъект.СуммаВключаетАкциз = Истина;
			КонецЕсли;		
		КонецЕсли;
	КонецЕсли;
	
	
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьКПН", МетаданныеДокумента) Тогда
		
		ТекЗначениеПлательщикаНаПрибыль = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ДокументОбъект.Организация, ДокументОбъект.Дата);
		
		Если ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда			
			Если ТекЗначениеПлательщикаНаПрибыль Тогда
				ДокументОбъект.УчитыватьКПН =ПараметрОбъектКопирования.УчитыватьКПН;
			Иначе
				ДокументОбъект.УчитыватьКПН = Ложь;            
			КонецЕсли;			
		Иначе
			ДокументОбъект.УчитыватьКПН = ТекЗначениеПлательщикаНаПрибыль;
		КонецЕсли;
		
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВидУчетаНУ", МетаданныеДокумента) И ДокументОбъект.УчитыватьКПН Тогда								
			ОтражатьДокументыВНалоговомУчете = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОтражатьДокументыВНалоговомУчете"); 
			Если ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда	
				ДокументОбъект.ВидУчетаНУ = ПараметрОбъектКопирования.ВидУчетаНУ;
			Иначе
				ДокументОбъект.ВидУчетаНУ  = ?(ОтражатьДокументыВНалоговомУчете, Справочники.ВидыУчетаНУ.НУ, Справочники.ВидыУчетаНУ.НеОтражаетсяВНУ);			
			КонецЕсли;			
			
		КонецЕсли; 
	КонецЕсли;


	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ЗанимаемыхСтавок", МетаданныеДокумента)
		И (НЕ ЗначениеЗаполнено(ДокументОбъект.ЗанимаемыхСтавок)) Тогда
		ДокументОбъект.ЗанимаемыхСтавок = 1;
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ДатаС", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.ДатаС)) Тогда
		ДокументОбъект.ДатаС = ДокументОбъект.Дата;
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ПериодРегистрации", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.ПериодРегистрации)) Тогда
		ДокументОбъект.ПериодРегистрации = НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
	КонецЕсли;
	
	СтруктураДокументовПоступления = Новый Структура;
	СтруктураДокументовПоступления.Вставить("ПоступлениеТоваровУслуг");
	СтруктураДокументовПоступления.Вставить("Доверенность");
	СтруктураДокументовПоступления.Вставить("ПоступлениеДопРасходов");
	СтруктураДокументовПоступления.Вставить("ПоступлениеНМА");
	СтруктураДокументовПоступления.Вставить("ВозвратТоваровПоставщику");
	СтруктураДокументовРеализации = Новый Структура;
	СтруктураДокументовРеализации.Вставить("РеализацияТоваровУслуг");
	СтруктураДокументовРеализации.Вставить("АктОбОказанииПроизводственныхУслуг");
	СтруктураДокументовРеализации.Вставить("РеализацияУслугПоПереработке");
	СтруктураДокументовРеализации.Вставить("ВозвратТоваровОтПокупателя");
	СтруктураДокументовРеализации.Вставить("СчетНаОплатуПокупателю");
	
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Контрагент", МетаданныеДокумента)
	   И (НЕ ЗначениеЗаполнено(ДокументОбъект.Контрагент)) Тогда
	   	Если СтруктураДокументовРеализации.Свойство(МетаданныеДокумента.Имя) Тогда
			ДокументОбъект.Контрагент = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнойПокупатель");
	    ИначеЕсли СтруктураДокументовПоступления.Свойство(МетаданныеДокумента.Имя) Тогда
			ДокументОбъект.Контрагент = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнойПоставщик");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьШапкуДокумента()

// Процедура предназначена для заполнения общих реквизитов документов по документу основанию,
//	вызывается в обработчиках событий "ОбработкаЗаполнения" в модулях документов.
//
// Параметры:
//  ДокументОбъект  - объект редактируемого документа,
//  ДокументОснование - объект документа основания
//
Процедура ЗаполнитьШапкуДокументаПоОснованию(ДокументОбъект, ДокументОснование) Экспорт

	МетаданныеДокумента          = ДокументОбъект.Метаданные();
	МетаданныеДокументаОснования = ДокументОснование.Метаданные();
	мОтображатьСтруктурныеПодразделения = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений();

	//заполнение даты
	Если Не ЗначениеЗаполнено(ДокументОбъект.Дата) Тогда
	  	ДокументОбъект.Дата = НачалоДня(ОбщегоНазначения.ПолучитьРабочуюДату());
	КонецЕсли;
	
	// Организация.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Организация", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("Организация", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.Организация = ДокументОснование.Организация;
	КонецЕсли;
	
	// Подразделение.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Подразделение", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("Подразделение", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.Подразделение = ДокументОснование.Подразделение;
	КонецЕсли;

	// Проект.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Проект", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("Проект", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.Проект = ДокументОснование.Проект;
	КонецЕсли;

	// ПодразделениеОрганизации.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ПодразделениеОрганизации", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("ПодразделениеОрганизации", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.ПодразделениеОрганизации = ДокументОснование.ПодразделениеОрганизации;
	КонецЕсли;

	// СтруктурноеПодразделение.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурноеПодразделение", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурноеПодразделение", МетаданныеДокументаОснования)
	   	И мОтображатьСтруктурныеПодразделения Тогда
	   	Если ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений() Тогда 
			ДокументОбъект.СтруктурноеПодразделение = ДокументОснование.СтруктурноеПодразделение;
		КонецЕсли;
	КонецЕсли;
	
	// СтруктурноеПодразделение-отправитель.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурноеПодразделениеОтправитель", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурноеПодразделениеОтправитель", МетаданныеДокументаОснования)
	   	И мОтображатьСтруктурныеПодразделения Тогда
	   	Если ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений() Тогда 
			ДокументОбъект.СтруктурноеПодразделениеОтправитель = ДокументОснование.СтруктурноеПодразделениеОтправитель;
		КонецЕсли;
	КонецЕсли;
	
	// СтруктурноеПодразделение-отправитель.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурноеПодразделениеОтправитель", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурноеПодразделение", МетаданныеДокументаОснования)
	   	И мОтображатьСтруктурныеПодразделения Тогда
	   	Если ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений() Тогда 
			ДокументОбъект.СтруктурноеПодразделениеОтправитель = ДокументОснование.СтруктурноеПодразделение;
		КонецЕсли;
	КонецЕсли;

	// СтруктурноеПодразделение-отправитель.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурноеПодразделение", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурноеПодразделениеОтправитель", МетаданныеДокументаОснования)
	   	И мОтображатьСтруктурныеПодразделения Тогда
	   	Если ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений() Тогда 
			ДокументОбъект.СтруктурноеПодразделение = ДокументОснование.СтруктурноеПодразделениеОтправитель;
		КонецЕсли;
	КонецЕсли;
	// СтруктурноеПодразделение-получатель.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурноеПодразделениеПолучатель", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурноеПодразделениеПолучатель", МетаданныеДокументаОснования)
	   	И мОтображатьСтруктурныеПодразделения Тогда
	   	Если ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений() Тогда 
			ДокументОбъект.СтруктурноеПодразделениеПолучатель = ДокументОснование.СтруктурноеПодразделениеПолучатель;
		КонецЕсли;
	КонецЕсли; 
	
	// СтруктурноеПодразделение-получатель.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурноеПодразделениеПолучатель", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурноеПодразделение", МетаданныеДокументаОснования)
	   	И мОтображатьСтруктурныеПодразделения Тогда
	   	Если ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений() Тогда 
			ДокументОбъект.СтруктурноеПодразделениеПолучатель = ДокументОснование.СтруктурноеПодразделение;
		КонецЕсли;
	КонецЕсли;	
	
	// Склад.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Склад", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("Склад", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.Склад = ДокументОснование.Склад;
	КонецЕсли;
	
	// Ответственный.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Ответственный", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("Ответственный", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.Ответственный = ДокументОснование.Ответственный;
	КонецЕсли;

	// Контрагент.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Контрагент", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("Контрагент", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.Контрагент = ДокументОснование.Контрагент;
	КонецЕсли;

	// ДоговорКонтрагента.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ДоговорКонтрагента", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("ДоговорКонтрагента", МетаданныеДокументаОснования) 
	   И (НЕ ОбщегоНазначения.ЕстьРеквизитДокумента("Организация", МетаданныеДокумента) 
	      ИЛИ ДокументОбъект.Организация = ДокументОснование.ДоговорКонтрагента.Организация) Тогда

		ДокументОбъект.ДоговорКонтрагента = ДокументОснование.ДоговорКонтрагента;

		// КурсВзаиморасчетов.
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("КурсВзаиморасчетов", МетаданныеДокумента) Тогда
			// Определим дату получения курсов
			ДатаСреза = ?(ЗначениеЗаполнено(ДокументОбъект.Дата), ДокументОбъект.Дата, ОбщегоНазначения.ПолучитьРабочуюДату());
						
			СтруктураКурсаВзаиморасчетов = ОбщегоНазначения.ПолучитьКурсВалюты(ДокументОбъект.ДоговорКонтрагента.ВалютаВзаиморасчетов, ДатаСреза);
			ДокументОбъект.КурсВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Курс;

			// КратностьВзаиморасчетов.
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("КратностьВзаиморасчетов", МетаданныеДокумента) Тогда
				ДокументОбъект.КратностьВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Кратность;
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

	// Касса
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Касса", МетаданныеДокумента) Тогда

		// Если в документе-основании есть структурная единица(или касса), то берем ее оттуда
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурнаяЕдиница", МетаданныеДокументаОснования) Тогда
			Если ЗначениеЗаполнено(ДокументОснование.СтруктурнаяЕдиница) 
			   И ТипЗнч(ДокументОснование.СтруктурнаяЕдиница) = Тип("СправочникСсылка.Кассы") Тогда
				ДокументОбъект.Касса = ДокументОснование.СтруктурнаяЕдиница;
			КонецЕсли;
		ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("Касса", МетаданныеДокументаОснования) Тогда
			Если ЗначениеЗаполнено(ДокументОснование.Касса) Тогда
				ДокументОбъект.Касса = ДокументОснование.Касса;
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

	// Банковский счет 
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("БанковскийСчет", МетаданныеДокумента) Тогда

		// Если в документе-основании есть структурная единица(или касса), то берем ее оттуда
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурнаяЕдиница", МетаданныеДокументаОснования) Тогда
			Если ЗначениеЗаполнено(ДокументОснование.СтруктурнаяЕдиница) 
			   И ТипЗнч(ДокументОснование.СтруктурнаяЕдиница) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
				ДокументОбъект.БанковскийСчет = ДокументОснование.СтруктурнаяЕдиница;
			КонецЕсли;
		ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("БанковскийСчет", МетаданныеДокументаОснования) Тогда
			Если ЗначениеЗаполнено(ДокументОснование.БанковскийСчет) Тогда
				ДокументОбъект.БанковскийСчет = ДокументОснование.БанковскийСчет;
			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	// Банковский счет организации
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("БанковскийСчетОрганизации", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("БанковскийСчет", МетаданныеДокументаОснования) Тогда

		Если НЕ ЗначениеЗаполнено(ДокументОбъект.БанковскийСчетОрганизации)
		  И ЗначениеЗаполнено(ДокументОбъект.БанковскийСчет)Тогда
			ДокументОбъект.БанковскийСчетОрганизации = ДокументОснование.БанковскийСчет;
		КонецЕсли;
	КонецЕсли;

	// Структурная единица
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурнаяЕдиница", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("СтруктурнаяЕдиница", МетаданныеДокументаОснования) Тогда

		Если НЕ ЗначениеЗаполнено(ДокументОбъект.СтруктурнаяЕдиница)
		  И ЗначениеЗаполнено(ДокументОснование.СтруктурнаяЕдиница)Тогда
			ДокументОбъект.СтруктурнаяЕдиница = ДокументОснование.СтруктурнаяЕдиница;
		КонецЕсли;
	КонецЕсли;

	// ВалютаДокумента.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВалютаДокумента", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("ВалютаДокумента", МетаданныеДокументаОснования) Тогда

		// Если есть касса или банковский счет, то валюта должна браться только оттуда
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("Касса", МетаданныеДокумента) Тогда
			Если ЗначениеЗаполнено(ДокументОбъект.Касса) Тогда
				ДокументОбъект.ВалютаДокумента = ДокументОбъект.Касса.ВалютаДенежныхСредств;
			КонецЕсли;
		ИначеЕсли ОбщегоНазначения.ЕстьРеквизитДокумента("БанковскийСчет", МетаданныеДокумента) Тогда
			Если ЗначениеЗаполнено(ДокументОбъект.БанковскийСчет) Тогда
				ДокументОбъект.ВалютаДокумента = ДокументОбъект.БанковскийСчет.ВалютаДенежныхСредств;
		    КонецЕсли;
		Иначе
			ДокументОбъект.ВалютаДокумента = ДокументОснование.ВалютаДокумента;
		КонецЕсли;

		// КурсДокумента.
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("КурсДокумента", МетаданныеДокумента) Тогда
			// Определим дату получения курсов
			ДатаСреза = ?(ЗначениеЗаполнено(ДокументОбъект.Дата), ДокументОбъект.Дата, ОбщегоНазначения.ПолучитьРабочуюДату());
			
			СтруктураКурсаДокумента = ОбщегоНазначения.ПолучитьКурсВалюты(ДокументОбъект.ВалютаДокумента, ДатаСреза);
			ДокументОбъект.КурсДокумента = СтруктураКурсаДокумента.Курс;

			// КратностьДокумента.
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("КратностьДокумента", МетаданныеДокумента) Тогда
				ДокументОбъект.КратностьДокумента = СтруктураКурсаДокумента.Кратность;
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;
	
	// ТипЦен.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ТипЦен", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("ТипЦен", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.ТипЦен = ДокументОснование.ТипЦен;
	КонецЕсли;

	// Тип скидки.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ТипСкидкиНаценки", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("ТипСкидкиНаценки", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.ТипСкидкиНаценки = ДокументОснование.ТипСкидкиНаценки;
	КонецЕсли;
	
	// Дисконтная карта
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ДисконтнаяКарта", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("ДисконтнаяКарта", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.ДисконтнаяКарта = ДокументОснование.ДисконтнаяКарта;
	КонецЕсли;

	// УчитыватьНДС.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьНДС", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьНДС", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.УчитыватьНДС = ДокументОснование.УчитыватьНДС;
	КонецЕсли;

	// СуммаВключаетНДС.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетНДС", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.СуммаВключаетНДС = ДокументОснование.СуммаВключаетНДС;
	КонецЕсли;
    		
	// УчитыватьАкциз.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьАкциз", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьАкциз", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.УчитыватьАкциз = ДокументОснование.УчитыватьАкциз;
	КонецЕсли;

	// СуммаВключаетАкциз.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетАкциз", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("СуммаВключаетАкциз", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.СуммаВключаетАкциз = ДокументОснование.СуммаВключаетАкциз;
	КонецЕсли;
    
	// ОтражатьВУправленческомУчете.
	// Если есть в основании, копируем из основания, иначе - Истина.
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ОтражатьВУправленческомУчете", МетаданныеДокумента) Тогда
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("ОтражатьВУправленческомУчете", МетаданныеДокументаОснования) Тогда
			ДокументОбъект.ОтражатьВУправленческомУчете = ДокументОснование.ОтражатьВУправленческомУчете;
		Иначе
			ДокументОбъект.ОтражатьВУправленческомУчете = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ОтражатьВБухгалтерскомУчете", МетаданныеДокумента) Тогда
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("ОтражатьВБухгалтерскомУчете", МетаданныеДокументаОснования) Тогда
			ДокументОбъект.ОтражатьВБухгалтерскомУчете = ДокументОснование.ОтражатьВБухгалтерскомУчете;
		Иначе
			ДокументОбъект.ОтражатьВБухгалтерскомУчете = Истина;
		КонецЕсли;
	КонецЕсли;

	//установка признака "УчитыватьКПН"
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьКПН", МетаданныеДокумента) Тогда
		ТекЗначениеПлательщикаНаПрибыль = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(ДокументОбъект.Организация, ДокументОбъект.Дата);
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("УчитыватьКПН", МетаданныеДокументаОснования) Тогда
			Если ТекЗначениеПлательщикаНаПрибыль Тогда
				ДокументОбъект.УчитыватьКПН =ДокументОснование.УчитыватьКПН;
			Иначе
				ДокументОбъект.УчитыватьКПН = Ложь;            
			КонецЕсли;			
		КонецЕсли;
		ДокументОбъект.УчитыватьКПН =ТекЗначениеПлательщикаНаПрибыль;		
		
		Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВидУчетаНУ", МетаданныеДокумента) Тогда								
			Если ОбщегоНазначения.ЕстьРеквизитДокумента("ВидУчетаНУ", МетаданныеДокументаОснования) Тогда				
				ДокументОбъект.ВидУчетаНУ = ?(ДокументОбъект.УчитыватьКПН, ДокументОснование.ВидУчетаНУ, Справочники.ВидыУчетаНУ.НеОтражаетсяВНУ);
			Иначе				
				ОтражатьДокументыВНалоговомУчете = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОтражатьДокументыВНалоговомУчете"); 
				Если ДокументОбъект.УчитыватьКПН Тогда
					ДокументОбъект.ВидУчетаНУ  = ?(ОтражатьДокументыВНалоговомУчете, Справочники.ВидыУчетаНУ.НУ, Справочники.ВидыУчетаНУ.НеОтражаетсяВНУ);			
				Иначе
					ДокументОбъект.ВидУчетаНУ  = Справочники.ВидыУчетаНУ.НеОтражаетсяВНУ;				
				КонецЕсли;			
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;
	
	//данные по доверенности
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ДоверенностьНомер", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("ДоверенностьНомер", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.ДоверенностьНомер = ДокументОснование.ДоверенностьНомер;
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ДоверенностьДата", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("ДоверенностьДата", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.ДоверенностьДата = ДокументОснование.ДоверенностьДата;
	КонецЕсли;

	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ДоверенностьЛицо", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("ДоверенностьЛицо", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.ДоверенностьЛицо = ДокументОснование.ДоверенностьЛицо;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("ДоверенностьВыдана", МетаданныеДокумента)
	   И ОбщегоНазначения.ЕстьРеквизитДокумента("ДоверенностьВыдана", МетаданныеДокументаОснования) Тогда
		ДокументОбъект.ДоверенностьВыдана = ДокументОснование.ДоверенностьВыдана;
	КонецЕсли;     

	//-=-=
	Если ТипЗнч(ДокументОснование) = Тип("ДокументОбъект.ур_РеализацияЗерна") Тогда
		 ДокументОбъект.ДоговорКонтрагента = ДокументОснование.ДоговорКонтрагента;
	КонецЕсли;
	//-=-=
	
КонецПроцедуры // ЗаполнитьШапкуДокументаПоОснованию()

// Процедура предназначена для заполнения общих реквизитов документов
//	вызывается в обработчиках событий "ПередЗаписью" документов.
Процедура ПередЗаписьюДокументаУстановкаАвтораПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитДокумента("Автор", Источник.Метаданные())
	   И (НЕ ЗначениеЗаполнено(Источник.Автор)) Тогда
		Источник.Автор = глЗначениеПеременной("глТекущийПользователь");
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписьюДокументаУстановкаАвтораПередЗаписью

// Проверяет. можно ли использовать переданный договор в соответствии с переданными параметрами.
//
// Параметры
//  Договор                                 – ссылка на договор, который нужно проверить,
//  Контрагент                              - ссылка на контрагента, которому должен принадлежать договор,
//  Организация                             - ссылка на организацию, от имени которой должен быть выписан договор,
//  СтруктураПараметровДляПолученияДоговора - структура, содержащая параметры для определения договора:
//                                            список допустимых видов договоров и
//                                            список допустимых способов ведения взаиморасчетов.
//
// Возвращаемое значение:
//   Логическое, Истина - можно использовать, ложь - нельзя.
//
Функция МожноИспользоватьДоговорДляДокумента(Договор, Контрагент, Организация, СтруктураПараметровДляПолученияДоговора) Экспорт

	Перем СписокДопустимыхВидовДоговоров, СписокДопустимыхВидовВзаиморасчетов, ВалютаВзаиморасчетовДоговора, ВидСравненияВалютыВзаиморасчетов;


	Если Не ЗначениеЗаполнено(Договор) Тогда
		Возврат Ложь; // Если не передали параметры, то считаем, что нельзя использовать.
	КонецЕсли;

	Если СтруктураПараметровДляПолученияДоговора <> Неопределено Тогда
		СтруктураПараметровДляПолученияДоговора.Свойство("СписокДопустимыхВидовДоговоров", СписокДопустимыхВидовДоговоров);
		СтруктураПараметровДляПолученияДоговора.Свойство("СписокДопустимыхВидовВзаиморасчетов", СписокДопустимыхВидовВзаиморасчетов);
		СтруктураПараметровДляПолученияДоговора.Свойство("ВалютаВзаиморасчетовДоговора", ВалютаВзаиморасчетовДоговора);
		СтруктураПараметровДляПолученияДоговора.Свойство("ВидСравненияВалютыВзаиморасчетов", ВидСравненияВалютыВзаиморасчетов);
	КонецЕсли;

	// Организация должна совпадать.
	//Если ЗначениеЗаполнено(Организация)
	//   И Организация <> Договор.Организация Тогда
	//	Возврат Ложь;
	//КонецЕсли;

	// Контрагент должен совпадать, если в документе невыбран контрагент, то любой договор не подходит.
	Если Контрагент <> Договор.Владелец Тогда
		Возврат Ложь;
	КонецЕсли;

	// Проверка по виду договора.
	//Если СписокДопустимыхВидовДоговоров <> Неопределено 
	//   И СписокДопустимыхВидовДоговоров.НайтиПоЗначению(Договор.ВидДоговора) = Неопределено Тогда
	//	Возврат Ложь;
	//КонецЕсли;

	// Проверка по виду взаиморасчетов.
	//Если СписокДопустимыхВидовВзаиморасчетов <> Неопределено 
	//   И СписокДопустимыхВидовВзаиморасчетов.НайтиПоЗначению(Договор.ВедениеВзаиморасчетов) = Неопределено Тогда
	//	Возврат Ложь;
	//КонецЕсли;

	// Проверка по валюте взаиморасчетов.
	Если ВалютаВзаиморасчетовДоговора <> Неопределено
	   И ВидСравненияВалютыВзаиморасчетов <> Неопределено Тогда
		Если ВидСравненияВалютыВзаиморасчетов = "=" Тогда
			Если Договор.ВалютаВзаиморасчетов <> ВалютаВзаиморасчетовДоговора Тогда
				Возврат Ложь;
			КонецЕсли;
		Иначе // ВидСравненияВалютыВзаиморасчетов может принимать только два значения: "=" и "<>".
			Если Договор.ВалютаВзаиморасчетов = ВалютаВзаиморасчетовДоговора Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Возврат Истина;

КонецФункции // МожноИспользоватьДоговорДляДокумента()

// Функция определяет договор, соответствующий указанным значениям
// организации и контрагента, а также переданным параметрам.
// Если всем параметрам удовлетворяет основной договор, то выбирается он.
//
// Параметры
//  Организация                             - организация, по которой определяется договор
//  Контрагент                              - конрагент, по которому определяется договор
//  СтруктураПараметровДляПолученияДоговора - структура, содержащая параметры для определения договора:
//                                            список допустимых видов договоров и
//                                            список допустимых способов ведения взаиморасчетов, не обязательный.
//
// Возвращаемое значение:
//  Договор - договор контрагентов
//
Функция ПолучитьДоговорПоОрганизацииИКонтрагенту(Организация, Контрагент, СтруктураПараметровДляПолученияДоговора = Неопределено) Экспорт

	Перем СписокДопустимыхВидовДоговоров, СписокДопустимыхВидовВзаиморасчетов, ВалютаВзаиморасчетовДоговора, ВидСравненияВалютыВзаиморасчетов;

	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Возврат Неопределено;
	КонецЕсли;

	// Если не передана организация, то проверим, можно ли использовать основной договор. 
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Договор = ОбщегоНазначения.ПолучитьОсновнойДоговорКонтрагента(Контрагент);
		Если МожноИспользоватьДоговорДляДокумента(Договор, Контрагент, Организация, СтруктураПараметровДляПолученияДоговора) Тогда
			Возврат Договор;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;

	РезультатЗапроса = ПолучитьДоступныеДоговорыКонтрагента(Контрагент, СтруктураПараметровДляПолученияДоговора, Истина, Организация );
	ТаблицаДоговоров = РезультатЗапроса.Выгрузить();

	Если ТаблицаДоговоров.Количество() = 1 Тогда
		Возврат ТаблицаДоговоров[0].Договор;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции // ПолучитьДоговорПоОрганизацииИКонтрагенту()

// Функция возвращает таблицу договоров данного контрагента, доступных для выбора
//
// Параметры
//  Контрагент                              - конрагент, по которому определяется договор
//  СтруктураПараметровДляПолученияДоговора - структура, содержащая параметры для определения договора:
//                                            список допустимых видов договоров и
//                                            список допустимых способов ведения взаиморасчетов, не обязательный.
// 	ВозвращатьТолькоПервые                  - булево, Истина - нужно вернуть только первые два договора,
//                                          - ложь - нужно вернуть весь список.
//  Организация                             - необязательный, организация, по которой определяется договор,
//                                            если не передана, то возвращается список договоров по всем орагнизациям.
//  ДополнительныеРеквизиты                 - необязательный, массив дополнительных реквизитов договора,
//                                            которые необходимо вернуть в результате запроса.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция ПолучитьДоступныеДоговорыКонтрагента(Контрагент, СтруктураПараметровДляПолученияДоговора, ВозвращатьТолькоПервые, Организация = Неопределено, ДополнительныеРеквизиты = Неопределено) Экспорт

	Перем СписокДопустимыхВидовДоговоров, СписокДопустимыхВидовВзаиморасчетов, ВалютаВзаиморасчетовДоговора, ВидСравненияВалютыВзаиморасчетов;

	Если СтруктураПараметровДляПолученияДоговора <> Неопределено Тогда
		СтруктураПараметровДляПолученияДоговора.Свойство("СписокДопустимыхВидовДоговоров", СписокДопустимыхВидовДоговоров);
		СтруктураПараметровДляПолученияДоговора.Свойство("СписокДопустимыхВидовВзаиморасчетов", СписокДопустимыхВидовВзаиморасчетов);
		СтруктураПараметровДляПолученияДоговора.Свойство("ВалютаВзаиморасчетовДоговора", ВалютаВзаиморасчетовДоговора);
		СтруктураПараметровДляПолученияДоговора.Свойство("ВидСравненияВалютыВзаиморасчетов", ВидСравненияВалютыВзаиморасчетов);
	КонецЕсли;

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("ПарКонтрагент",  Контрагент);
	Запрос.УстановитьПараметр("ПарВидДоговора", СписокДопустимыхВидовДоговоров);
	Запрос.УстановитьПараметр("ПарВидВзаиморасчетов", СписокДопустимыхВидовВзаиморасчетов);
	Запрос.УстановитьПараметр("ПарВалютаВзаиморасчетов", ВалютаВзаиморасчетовДоговора);
	Запрос.УстановитьПараметр("ПарОрганизация", Организация);

	ПсевдонимТаблицы = "ДоговорыКонтрагентов"; 
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ"
	+?(ВозвращатьТолькоПервые," ПЕРВЫЕ 2","") + "
	|	ДоговорыКонтрагентов.Ссылка КАК Договор";
	
	Если ЗначениеЗаполнено(ДополнительныеРеквизиты) Тогда
		
		Для Каждого НаименованиеРеквизита Из ДополнительныеРеквизиты Цикл
		
			Запрос.Текст = Запрос.Текст  + ", " + ПсевдонимТаблицы + "." + НаименованиеРеквизита;
		
		КонецЦикла; 		
	
	КонецЕсли; 
	
	Запрос.Текст = Запрос.Текст  + "
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК " + ПсевдонимТаблицы + "
	|ГДЕ
	|	(НЕ ДоговорыКонтрагентов.ПометкаУдаления)"
	+?(ЗначениеЗаполнено(Организация), "	И ДоговорыКонтрагентов.Организация = &ПарОрганизация", "") + "
	|	И ДоговорыКонтрагентов.Владелец    = &ПарКонтрагент"
	+?(ВалютаВзаиморасчетовДоговора = Неопределено, "", "
	|	И ДоговорыКонтрагентов.ВалютаВзаиморасчетов " 
	+?(ВидСравненияВалютыВзаиморасчетов = Неопределено, "=", ВидСравненияВалютыВзаиморасчетов) + "(&ПарВалютаВзаиморасчетов)
	|")
	+?(СписокДопустимыхВидовДоговоров = Неопределено, "", "
	|	И ДоговорыКонтрагентов.ВидДоговора В (&ПарВидДоговора)
	|")
	+?(СписокДопустимыхВидовВзаиморасчетов = Неопределено, "", "
	|	И ДоговорыКонтрагентов.ВедениеВзаиморасчетов В (&ПарВидВзаиморасчетов)
	|");

	Если ЗначениеЗаполнено(Организация) Тогда 

		Запрос.Текст = Запрос.Текст + "
		|	И (ВЫБОР КОГДА ДоговорыКонтрагентов.Владелец.ОсновнойДоговорКонтрагента.Организация = &ПарОрганизация"
		+?(ВалютаВзаиморасчетовДоговора = Неопределено, "", "
		|	И ДоговорыКонтрагентов.Владелец.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов " 
		+?(ВидСравненияВалютыВзаиморасчетов = Неопределено, "=", ВидСравненияВалютыВзаиморасчетов) + "&ПарВалютаВзаиморасчетов
		|")
		+?(СписокДопустимыхВидовДоговоров = Неопределено, "", "
		|	И ДоговорыКонтрагентов.Владелец.ОсновнойДоговорКонтрагента.ВидДоговора В (&ПарВидДоговора)
		|")
		+?(СписокДопустимыхВидовВзаиморасчетов = Неопределено, "", "
		|	И ДоговорыКонтрагентов.Владелец.ОсновнойДоговорКонтрагента.ВедениеВзаиморасчетов В (&ПарВидВзаиморасчетов)
		|")
		+ "
		|	         ТОГДА ДоговорыКонтрагентов.Ссылка  = ДоговорыКонтрагентов.Владелец.ОсновнойДоговорКонтрагента
		|	         ИНАЧЕ ДоговорыКонтрагентов.Ссылка <> ДоговорыКонтрагентов.Владелец.ОсновнойДоговорКонтрагента КОНЕЦ)";

	КонецЕсли;

	Возврат Запрос.Выполнить();

КонецФункции // ПолучитьДоступныеДоговорыКонтрагента()

// Функция возвращает таблицу договоров данного контрагента, доступных для выбора
//
// Параметры
//  Контрагент                              - конрагент, по которому определяется договор
//  СтруктураПараметровДляПолученияДоговора - структура, содержащая параметры для определения договора:
//                                            список допустимых видов договоров и
//                                            список допустимых способов ведения взаиморасчетов, не обязательный.
// 	ВозвращатьТолькоПервые                  - булево, Истина - нужно вернуть только первые два договора,
//                                          - ложь - нужно вернуть весь список.
//  Организация                             - необязательный, организация, по которой определяется договор,
//                                            если не передана, то возвращается список договоров по всем орагнизациям.
//  ДополнительныеРеквизиты                 - необязательный, массив дополнительных реквизитов договора,
//                                            которые необходимо вернуть в результате запроса.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция ЗаполнитьТабличнуюЧастьУчастникиСовместнойДеятельности(ДоговорКонтрагента,УчастникиСовместнойДеятельности) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДоговорыКонтрагентовУчастникиСовместнойДеятельности.НомерСтроки КАК НомерСтроки,
	               |	ДоговорыКонтрагентовУчастникиСовместнойДеятельности.УчастникСовместнойДеятельности,
	               |	ДоговорыКонтрагентовУчастникиСовместнойДеятельности.ДоляУчастия
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов.УчастникиСовместнойДеятельности КАК ДоговорыКонтрагентовУчастникиСовместнойДеятельности
	               |ГДЕ
	               |	ДоговорыКонтрагентовУчастникиСовместнойДеятельности.Ссылка = &ДоговорКонтрагента
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки";
				   
	Результат = Запрос.Выполнить();			   
	
	Если Результат.Пустой() Тогда 
		Возврат УчастникиСовместнойДеятельности;
	КонецЕсли;	
	
	ЗаписиРезультата = Результат.Выбрать();
	
	Пока ЗаписиРезультата.Следующий() Цикл 
		
		Строка = УчастникиСовместнойДеятельности.Добавить();
		Строка.УчастникСовместнойДеятельности = ЗаписиРезультата.УчастникСовместнойДеятельности;
		Строка.ДоляУчастия					  = ЗаписиРезультата.ДоляУчастия;
				
	КонецЦикла;
	
	Возврат УчастникиСовместнойДеятельности;

КонецФункции // ПолучитьДоступныеДоговорыКонтрагента()

// Процедура предназначена для получения начислений и действий с ними
// в зависимости от действия с сотрудником.
//
// Параметры:
//  ДанныеДокумента					- исходные данные для выполнения запроса: ссылка на сотрудника, 
//									  если сотрудник один, таблица значений в случае, если их несколько
//  ДокументСсылка					- ссылка на документ
//  ДокументДата					- дата документа
//  Организация						- ссылка на организацию
//	ИмяДатыДействия					- в разных документах поле с датой действия 
//									  имеет разное имя: ДатаНачала, ДатаДействия, ДатаПриема
//	КоэффициентИндексацииЗаработка 	- необязательный, по умолчанию - 1 (нет индексации), 
//									  используется для пересчета значений при заполнении документа 
//									  Кадровое перемещение сотрудников организаций
//	ПоДаннымТрудовогоДоговора 		- необязательный, по умолчанию - Ложь, признак необходимости 
//									  получать данные трудового договора
//	ПолучатьПлановыеНачисления 		- необязательный, по умолчанию - Истина, признак необходимости 
//									  получать плановые начисления
//
Функция ПолучитьТаблицуДействийСНачислениями(ДанныеДокумента, ДокументСсылка, ДокументДата, Организация, ИмяДатыДействия, КоэффициентИндексацииЗаработка = 1, ПоДаннымТрудовогоДоговора = Ложь, ПолучатьПлановыеНачисления = Истина, ОбособленноеПодразделение = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.УстановитьПараметр("ПолучатьПлановыеНачисления", 	ПолучатьПлановыеНачисления);
	Запрос.УстановитьПараметр("КоэффициентИндексацииЗаработка", ?(КоэффициентИндексацииЗаработка > 0, КоэффициентИндексацииЗаработка, 1));
	Запрос.УстановитьПараметр("ПоДаннымТрудовогоДоговора", 		ПоДаннымТрудовогоДоговора);
                                        
	Если ТипЗнч(ДанныеДокумента) = Тип("ТаблицаЗначений") Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДанныеДокумента.Сотрудник,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента." + ИмяДатыДействия + " <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА ДанныеДокумента." + ИмяДатыДействия + "
		|		ИНАЧЕ ДанныеДокумента.ДатаДокумента
		|	КОНЕЦ КАК ДатаДействия,
		|	ДанныеДокумента.ОбособленноеПодразделение,
		|	ДанныеДокумента.ПодразделениеОрганизации,
		|	ДанныеДокумента.Должность,
		|	ДанныеДокумента.ТарифныйРазряд,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.ДатаДокумента
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	&ДанныеДокумента КАК ДанныеДокумента
		|		
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Организация,
		|	ДатаДействия
		|
		|;";
		
		Если ДанныеДокумента.Колонки.Найти("ПодразделениеОрганизации") = Неопределено Тогда 
			ДанныеДокумента.Колонки.Добавить("ПодразделениеОрганизации", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
			ДанныеДокумента.Колонки.Добавить("Должность", Новый ОписаниеТипов("СправочникСсылка.ДолжностиОрганизаций"));
		КонецЕсли;
		
		// дополним таблицу данными шапки документа
		ДанныеДокумента.Колонки.Добавить("ДатаДокумента", 	ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
		ДанныеДокумента.Колонки.Добавить("Организация", 	Новый ОписаниеТипов("СправочникСсылка.Организации"));
		ДанныеДокумента.Колонки.Добавить("ОбособленноеПодразделение", Новый ОписаниеТипов("СправочникСсылка.Организации"));
		
		ДанныеДокумента.ЗаполнитьЗначения(ДокументДата,		"ДатаДокумента");
		ДанныеДокумента.ЗаполнитьЗначения(?(ЗначениеЗаполнено(Организация.ГоловнаяОрганизация), Организация.ГоловнаяОрганизация, Организация), "Организация");
		ДанныеДокумента.ЗаполнитьЗначения(?(ЗначениеЗаполнено(ОбособленноеПодразделение), ОбособленноеПодразделение, Организация), "ОбособленноеПодразделение");
		
		Запрос.УстановитьПараметр("ДанныеДокумента", ДанныеДокумента);
	Иначе	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СотрудникиОрганизаций.Ссылка КАК Сотрудник,
		|	&ДатаДокумента КАК ДатаДействия,
		|	&ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	NULL КАК ПодразделениеОрганизации,
		|	NULL КАК Должность,
		|	NULL КАК ТарифныйРазряд,
		|	&Организация,
		|	&ДатаДокумента
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|ГДЕ
		|	СотрудникиОрганизаций.Ссылка = &Сотрудник
		|;";
		
		Запрос.УстановитьПараметр("Сотрудник", ДанныеДокумента);
		Запрос.УстановитьПараметр("Организация", ?(ЗначениеЗаполнено(Организация.ГоловнаяОрганизация), Организация.ГоловнаяОрганизация, Организация));
		Запрос.УстановитьПараметр("ОбособленноеПодразделение", ?(ЗначениеЗаполнено(ОбособленноеПодразделение), ОбособленноеПодразделение, Организация));
		Запрос.УстановитьПараметр("ДатаДокумента", ДокументДата);
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +  "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Сотрудник,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.ДатаДействия,
	|	МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период
	|ПОМЕСТИТЬ РаботникиСрезПоследнихДаты
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ПО ДанныеДокумента.Сотрудник = РаботникиОрганизаций.Сотрудник
	|			И ДанныеДокумента.Организация = РаботникиОрганизаций.Организация
	|			И ДанныеДокумента.ДатаДействия >= РаботникиОрганизаций.Период
	|			И (&Ссылка <> РаботникиОрганизаций.Регистратор)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Сотрудник,
	|	ДанныеДокумента.ДатаДействия,
	|	ДанныеДокумента.Организация
	|		
	|ИНДЕКСИРОВАТЬ ПО
	|	ДанныеДокумента.Сотрудник,
	|	ДанныеДокумента.Организация,
	|	Период
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.ПодразделениеОрганизации,
	|	ДанныеДокумента.Должность,
	|	ДанныеДокумента.ТарифныйРазряд,
	|	МАКСИМУМ(ШтатноеРасписаниеОрганизаций.Период) КАК Период
	|ПОМЕСТИТЬ ШтатноеРасписаниеОрганизацийСрезПоследних
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШтатноеРасписаниеОрганизаций КАК ШтатноеРасписаниеОрганизаций
	|		ПО ДанныеДокумента.ПодразделениеОрганизации = ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации
	|			И ДанныеДокумента.Должность = ШтатноеРасписаниеОрганизаций.Должность
	|           И (ВЫБОР
	|				КОГДА ДанныеДокумента.Сотрудник.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА ДанныеДокумента.ТарифныйРазряд = ШтатноеРасписаниеОрганизаций.ТарифныйРазряд
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И ДанныеДокумента.ДатаДействия >= ШтатноеРасписаниеОрганизаций.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.ПодразделениеОрганизации,
	|	ДанныеДокумента.Должность,
	|	ДанныеДокумента.ТарифныйРазряд
	|		
	|ИНДЕКСИРОВАТЬ ПО
	|	ДанныеДокумента.ПодразделениеОрганизации,
	|	ДанныеДокумента.Должность,
	|	ДанныеДокумента.ТарифныйРазряд,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизацийПоказатели.Ссылка КАК ВидРасчета,
	|	ОсновныеНачисленияОрганизацийПоказатели.НомерСтроки КАК НомерПоказателя,
	|	ОсновныеНачисленияОрганизацийПоказатели.Показатель,
	|	ОсновныеНачисленияОрганизацийПоказатели.Показатель.Валюта КАК ВалютаПоказателя
	|ПОМЕСТИТЬ ПоказателиВидовРасчета
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияОрганизацийПоказатели
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаботникиСрезПоследних.Сотрудник,
	|	РаботникиСрезПоследних.Организация,
	|	РаботникиСрезПоследних.ДатаДействия,
	|	РаботникиСрезПоследних.Период,
	|	РаботникиОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	РаботникиОрганизаций.Должность КАК Должность,
	|	РаботникиОрганизаций.ОбособленноеПодразделение КАК ОбособленноеПодразделение
	|ПОМЕСТИТЬ РаботникиСрезПоследних
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаботникиСрезПоследнихДаты КАК РаботникиСрезПоследних
	|		ПО РаботникиОрганизаций.Сотрудник = РаботникиСрезПоследних.Сотрудник
	|			И РаботникиОрганизаций.Организация = РаботникиСрезПоследних.Организация
	|			И РаботникиОрганизаций.Период = РаботникиСрезПоследних.Период
	|			И (РаботникиОрганизаций.Регистратор <> &Ссылка)
	|		
	|ИНДЕКСИРОВАТЬ ПО
	|	РаботникиСрезПоследних.Сотрудник,
	|	РаботникиСрезПоследних.Организация,
	|	РаботникиСрезПоследних.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Сотрудник,
	|	ДанныеДокумента.ДатаДействия,
	|	ДанныеДокумента.Организация,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ОбособленноеПодразделение = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.Сотрудник.СтруктурнаяЕдиница
	|		ИНАЧЕ ДанныеДокумента.ОбособленноеПодразделение
	|	КОНЕЦ КАК ОбособленноеПодразделение,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ПодразделениеОрганизации ЕСТЬ NULL 
	|				ИЛИ ДанныеДокумента.ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА РаботникиСрезПоследних.ПодразделениеОрганизации
	|		ИНАЧЕ ДанныеДокумента.ПодразделениеОрганизации
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Должность ЕСТЬ NULL 
	|				ИЛИ ДанныеДокумента.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяСсылка)
	|			ТОГДА РаботникиСрезПоследних.Должность
	|		ИНАЧЕ ДанныеДокумента.Должность
	|	КОНЕЦ КАК Должность,
	|	РаботникиСрезПоследних.Организация КАК СтараяОрганизация,
	|	РаботникиСрезПоследних.ОбособленноеПодразделение КАК СтароеОбособленноеПодразделение,
	|	РаботникиСрезПоследних.ПодразделениеОрганизации КАК СтароеПодразделениеОрганизации,
	|	РаботникиСрезПоследних.Должность КАК СтараяДолжность,
	|	СотрудникиОрганизаций.ВидРасчета,
	|	СотрудникиОрганизаций.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	СотрудникиОрганизаций.ТарифнаяСтавка,
	|	СотрудникиОрганизаций.ВалютаТарифнойСтавки,
	|	СотрудникиОрганизаций.ТарифныйРазряд
	|ПОМЕСТИТЬ ДанныеСотрудников
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РаботникиСрезПоследних КАК РаботникиСрезПоследних
	|		ПО ДанныеДокумента.Сотрудник = РаботникиСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ПО ДанныеДокумента.Сотрудник = СотрудникиОрганизаций.Ссылка
	|		
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Сотрудник,
	|	ДанныеДокумента.ДатаДействия,
	|	МАКСИМУМ(Начисления.Период) КАК Период
	|ПОМЕСТИТЬ ОсновныеНачисленияСрезПоследних
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК Начисления
	|		ПО ДанныеДокумента.Сотрудник = Начисления.Сотрудник
	|			И ДанныеДокумента.Организация = Начисления.Организация
	|			И (ВЫБОР
	|				КОГДА ДанныеДокумента.ДатаДействия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ДанныеДокумента.ДатаДействия >= Начисления.Период
	|			КОНЕЦ)
	|			И Начисления.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
	|			И Начисления.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
	|			И Начисления.Регистратор <> &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Сотрудник,
	|	ДанныеДокумента.ДатаДействия,
	|	ДанныеДокумента.Организация
	|		
	|ИНДЕКСИРОВАТЬ ПО
	|	ДанныеДокумента.Сотрудник,
	|	ДанныеДокумента.Организация,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеНачисленияСрезПоследних.Организация,
	|	ОсновныеНачисленияСрезПоследних.Сотрудник,
	|	ОсновныеНачисленияСрезПоследних.ДатаДействия,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= ОсновныеНачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Начисления.ПериодЗавершения
	|		ИНАЧЕ Начисления.Период
	|	КОНЕЦ КАК Период,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= ОсновныеНачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Начисления.ВидРасчетаЗавершения
	|		ИНАЧЕ Начисления.ВидРасчета
	|	КОНЕЦ КАК ВидРасчета,
	|	Начисления.ВидРасчетаЗавершения,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= ОсновныеНачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ТОГДА NULL
	|					ИНАЧЕ Начисления.Показатель1Завершения
	|				КОНЕЦ
	|		КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|			ТОГДА NULL
	|		ИНАЧЕ Начисления.Показатель1
	|	КОНЕЦ КАК Показатель1,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= ОсновныеНачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ТОГДА Начисления.ТарифныйРазряд1Завершения
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА Начисления.ТарифныйРазряд1
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК ТарифныйРазряд1,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= ОсновныеНачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Начисления.Валюта1Завершения
	|		ИНАЧЕ Начисления.Валюта1
	|	КОНЕЦ КАК Валюта1
	|ПОМЕСТИТЬ ОсновныеНачисленияСотрудников
	|ИЗ
	|	ОсновныеНачисленияСрезПоследних КАК ОсновныеНачисленияСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК Начисления
	|		ПО ОсновныеНачисленияСрезПоследних.Сотрудник = Начисления.Сотрудник
	|			И ОсновныеНачисленияСрезПоследних.Организация = Начисления.Организация
	|			И ОсновныеНачисленияСрезПоследних.Период = Начисления.Период
	|			И (ВЫБОР
	|				КОГДА Начисления.ПериодЗавершения <= ОсновныеНачисленияСрезПоследних.ДатаДействия
	|						И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА Начисления.ДействиеЗавершения <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|				ИНАЧЕ Начисления.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|			КОНЕЦ)
	|			И Начисления.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
	|			И Начисления.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
	|			И Начисления.Регистратор <> &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Сотрудник,
	|	ДанныеДокумента.ДатаДействия,
	|	ВЫБОР
	|		КОГДА Начисления.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
	|			ТОГДА ""Основные""
	|		ИНАЧЕ ""Дополнительные""
	|	КОНЕЦ КАК ВидНачислений,
	|	МАКСИМУМ(Начисления.Период) КАК Период,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= ДанныеДокумента.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Начисления.ВидРасчетаЗавершения
	|		ИНАЧЕ Начисления.ВидРасчета
	|	КОНЕЦ КАК ВидРасчета
	|ПОМЕСТИТЬ НачисленияСрезПоследних
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК Начисления
	|		ПО ДанныеДокумента.Сотрудник = Начисления.Сотрудник
	|			И ДанныеДокумента.Организация = Начисления.Организация
	|			И ДанныеДокумента.ДатаДействия >= Начисления.Период
	|			И (ВЫБОР
	|				КОГДА ДанныеДокумента.ДатаДействия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ДанныеДокумента.ДатаДействия >= Начисления.Период
	|			КОНЕЦ)
	|			И Начисления.ВидРасчетаИзмерение <> НЕОПРЕДЕЛЕНО
	|			И Начисления.Регистратор <> &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Сотрудник,
	|	ДанныеДокумента.ДатаДействия,
	|	ДанныеДокумента.Организация,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= ДанныеДокумента.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Начисления.ВидРасчетаЗавершения
	|		ИНАЧЕ Начисления.ВидРасчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Начисления.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
	|			ТОГДА ""Основные""
	|		ИНАЧЕ ""Дополнительные""
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачисленияСрезПоследних.Сотрудник,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Начисления.ВидРасчетаЗавершения
	|		ИНАЧЕ Начисления.ВидРасчета
	|	КОНЕЦ КАК ВидРасчета,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ТОГДА NULL
	|					ИНАЧЕ Начисления.Показатель1Завершения
	|				КОНЕЦ
	|		КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|			ТОГДА NULL
	|		ИНАЧЕ Начисления.Показатель1
	|	КОНЕЦ КАК Показатель1,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ТОГДА NULL
	|					ИНАЧЕ Начисления.Показатель2Завершения
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА NULL
	|				ИНАЧЕ Начисления.Показатель2
	|			КОНЕЦ
	|	КОНЕЦ КАК Показатель2,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ТОГДА NULL
	|					ИНАЧЕ Начисления.Показатель3Завершения
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА NULL
	|				ИНАЧЕ Начисления.Показатель3
	|			КОНЕЦ
	|	КОНЕЦ КАК Показатель3,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ТОГДА NULL
	|					ИНАЧЕ Начисления.Показатель4Завершения
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА NULL
	|				ИНАЧЕ Начисления.Показатель4
	|			КОНЕЦ
	|	КОНЕЦ КАК Показатель4,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ТОГДА NULL
	|					ИНАЧЕ Начисления.Показатель5Завершения
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА NULL
	|				ИНАЧЕ Начисления.Показатель5
	|			КОНЕЦ
	|	КОНЕЦ КАК Показатель5,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ТОГДА NULL
	|					ИНАЧЕ Начисления.Показатель6Завершения
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА NULL
	|				ИНАЧЕ Начисления.Показатель6
	|			КОНЕЦ
	|	КОНЕЦ КАК Показатель6,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ТОГДА Начисления.ТарифныйРазряд1Завершения
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА Начисления.ТарифныйРазряд1
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК ТарифныйРазряд1,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ТОГДА Начисления.ТарифныйРазряд2Завершения
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА Начисления.ТарифныйРазряд2
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК ТарифныйРазряд2,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ТОГДА Начисления.ТарифныйРазряд3Завершения
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА Начисления.ТарифныйРазряд3
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК ТарифныйРазряд3,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ТОГДА Начисления.ТарифныйРазряд4Завершения
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА Начисления.ТарифныйРазряд4
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК ТарифныйРазряд4,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ТОГДА Начисления.ТарифныйРазряд5Завершения
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА Начисления.ТарифныйРазряд5
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК ТарифныйРазряд5,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|						ТОГДА Начисления.ТарифныйРазряд6Завершения
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА Начисления.ТарифныйРазряд6
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|			КОНЕЦ
	|	КОНЕЦ КАК ТарифныйРазряд6,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Начисления.Валюта1Завершения
	|		ИНАЧЕ Начисления.Валюта1
	|	КОНЕЦ КАК Валюта1,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Начисления.Валюта2Завершения
	|		ИНАЧЕ Начисления.Валюта2
	|	КОНЕЦ КАК Валюта2,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Начисления.Валюта3Завершения
	|		ИНАЧЕ Начисления.Валюта3
	|	КОНЕЦ КАК Валюта3,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Начисления.Валюта4Завершения
	|		ИНАЧЕ Начисления.Валюта4
	|	КОНЕЦ КАК Валюта4,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Начисления.Валюта5Завершения
	|		ИНАЧЕ Начисления.Валюта5
	|	КОНЕЦ КАК Валюта5,
	|	ВЫБОР
	|		КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|				И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА Начисления.Валюта6Завершения
	|		ИНАЧЕ Начисления.Валюта6
	|	КОНЕЦ КАК Валюта6,
	|	НачисленияСрезПоследних.ДатаДействия,
	|	ЛОЖЬ КАК ЭтоДанныеТрудовогоДоговора,
	|	НачисленияСрезПоследних.ВидНачислений
	|
	|ПОМЕСТИТЬ НачисленияСотрудника
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияСрезПоследних КАК НачисленияСрезПоследних
	|		ПО (Начисления.Регистратор <> &Ссылка)
	|			И Начисления.Сотрудник = НачисленияСрезПоследних.Сотрудник
	|			И Начисления.Организация = НачисленияСрезПоследних.Организация
	|			И Начисления.Период = НачисленияСрезПоследних.Период
	|			И (ВЫБОР
	|				КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|						И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА Начисления.ВидРасчетаЗавершения = НачисленияСрезПоследних.ВидРасчета
	|				ИНАЧЕ Начисления.ВидРасчета = НачисленияСрезПоследних.ВидРасчета
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА Начисления.ПериодЗавершения <= НачисленияСрезПоследних.ДатаДействия
	|						И Начисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА Начисления.ДействиеЗавершения
	|				ИНАЧЕ Начисления.Действие
	|			КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить))
	|			И Начисления.ДокументОснование = ЗНАЧЕНИЕ(Документ.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка)
	|			И &ПолучатьПлановыеНачисления
	|			И Начисления.ВидРасчетаИзмерение <> НЕОПРЕДЕЛЕНО
	|			И Начисления.Регистратор <> &Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ОсновныеНачисленияСотрудников.Сотрудник,
	|	ОсновныеНачисленияСотрудников.ВидРасчета,
	|	ОсновныеНачисленияСотрудников.Показатель1,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ОсновныеНачисленияСотрудников.ТарифныйРазряд1,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ОсновныеНачисленияСотрудников.Валюта1,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ОсновныеНачисленияСотрудников.ДатаДействия,
	|	ЛОЖЬ,
	|	""Основные""
	|ИЗ
	|	ОсновныеНачисленияСотрудников КАК ОсновныеНачисленияСотрудников";
	
	Если ПоДаннымТрудовогоДоговора Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ 
		|	ДанныеСотрудников.Сотрудник,
		|	СотрудникиОрганизацийПерсональныеНадбавки.Надбавка,
		|	СотрудникиОрганизацийПерсональныеНадбавки.Показатель1,
		|	СотрудникиОрганизацийПерсональныеНадбавки.Показатель2,
		|	СотрудникиОрганизацийПерсональныеНадбавки.Показатель3,
		|	СотрудникиОрганизацийПерсональныеНадбавки.Показатель4,
		|	СотрудникиОрганизацийПерсональныеНадбавки.Показатель5,
		|	СотрудникиОрганизацийПерсональныеНадбавки.Показатель6,
		|	СотрудникиОрганизацийПерсональныеНадбавки.ТарифныйРазряд1,
		|	СотрудникиОрганизацийПерсональныеНадбавки.ТарифныйРазряд2,
		|	СотрудникиОрганизацийПерсональныеНадбавки.ТарифныйРазряд3,
		|	СотрудникиОрганизацийПерсональныеНадбавки.ТарифныйРазряд4,
		|	СотрудникиОрганизацийПерсональныеНадбавки.ТарифныйРазряд5,
		|	СотрудникиОрганизацийПерсональныеНадбавки.ТарифныйРазряд6,
		|	СотрудникиОрганизацийПерсональныеНадбавки.Валюта1,
		|	СотрудникиОрганизацийПерсональныеНадбавки.Валюта2,
		|	СотрудникиОрганизацийПерсональныеНадбавки.Валюта3,
		|	СотрудникиОрганизацийПерсональныеНадбавки.Валюта4,
		|	СотрудникиОрганизацийПерсональныеНадбавки.Валюта5,
		|	СотрудникиОрганизацийПерсональныеНадбавки.Валюта6,
		|	ДанныеСотрудников.ДатаДействия,
		|	ИСТИНА,
		|	""Основные""
		|ИЗ
		|	ДанныеСотрудников КАК ДанныеСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций.ПерсональныеНадбавки КАК СотрудникиОрганизацийПерсональныеНадбавки
		|		ПО ДанныеСотрудников.Сотрудник = СотрудникиОрганизацийПерсональныеНадбавки.Ссылка
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ДанныеСотрудников.Сотрудник,
		|	ДанныеСотрудников.ВидРасчета,
		|	ВЫБОР
		|		КОГДА &ПоДаннымТрудовогоДоговора И ДанныеСотрудников.ТарифнаяСтавка > 0
		|			ТОГДА ДанныеСотрудников.ТарифнаяСтавка
		|		ИНАЧЕ ВЫБОР
		|			КОГДА ДанныеСотрудников.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам))
		|					И ЕСТЬNULL(ШтатноеРасписаниеСтавка.ВидТарифнойСтавки, NULL) = ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.Месячная)
		|				ТОГДА ЕСТЬNULL(ШтатноеРасписаниеСтавка.УстановленнаяТарифнаяСтавка, 0)
		|			КОГДА ДанныеСотрудников.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке)
		|					И ЕСТЬNULL(ШтатноеРасписаниеСтавка.ВидТарифнойСтавки, NULL) = ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.Дневная)
		|				ТОГДА ЕСТЬNULL(ШтатноеРасписаниеСтавка.УстановленнаяТарифнаяСтавка, 0)
		|			КОГДА ДанныеСотрудников.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок))
		|					И ЕСТЬNULL(ШтатноеРасписаниеСтавка.ВидТарифнойСтавки, NULL) = ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.Часовая)
		|				ТОГДА ЕСТЬNULL(ШтатноеРасписаниеСтавка.УстановленнаяТарифнаяСтавка, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ
		|	КОНЕЦ,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ВЫБОР
		|		КОГДА ДанныеСотрудников.ТарифныйРазряд = ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
		|			ТОГДА NULL
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ДанныеСотрудников.Сотрудник.ВидРасчета.ТребуетВводаТарифногоРазряда
		|					ТОГДА ДанныеСотрудников.ТарифныйРазряд
		|				ИНАЧЕ NULL
		|			КОНЕЦ
		|	КОНЕЦ,		
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ВЫБОР
		|		КОГДА ДанныеСотрудников.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам))
		|				И ЕСТЬNULL(ШтатноеРасписаниеСтавка.ВидТарифнойСтавки, NULL) = ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.Месячная)
		|			ТОГДА ЕСТЬNULL(ШтатноеРасписаниеСтавка.ВалютаТарифнойСтавки, NULL)
		|		КОГДА ДанныеСотрудников.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке)
		|				И ЕСТЬNULL(ШтатноеРасписаниеСтавка.ВидТарифнойСтавки, NULL) = ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.Дневная)
		|			ТОГДА ЕСТЬNULL(ШтатноеРасписаниеСтавка.ВалютаТарифнойСтавки, NULL)
		|		КОГДА ДанныеСотрудников.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок))
		|				И ЕСТЬNULL(ШтатноеРасписаниеСтавка.ВидТарифнойСтавки, NULL) = ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.Часовая)
		|			ТОГДА ЕСТЬNULL(ШтатноеРасписаниеСтавка.ВалютаТарифнойСтавки, NULL)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ДанныеСотрудников.ВалютаТарифнойСтавки = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
		|					ТОГДА NULL
		|				ИНАЧЕ ДанныеСотрудников.ВалютаТарифнойСтавки
		|			КОНЕЦ
		|	КОНЕЦ,		
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	ДанныеСотрудников.ДатаДействия,
		|	ИСТИНА,
		|	""Основные""
		|ИЗ
		|	ДанныеСотрудников КАК ДанныеСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ ШтатноеРасписаниеОрганизацийСрезПоследних КАК ШтатноеРасписание
		|		ПО ДанныеСотрудников.Подразделение = ШтатноеРасписание.ПодразделениеОрганизации
		|			И ДанныеСотрудников.Должность = ШтатноеРасписание.Должность
		|			И (ВЫБОР
		|				КОГДА ДанныеСотрудников.Сотрудник.ВидРасчета.ТребуетВводаТарифногоРазряда
		|					ТОГДА ДанныеСотрудников.ТарифныйРазряд = ШтатноеРасписание.ТарифныйРазряд
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтатноеРасписаниеОрганизаций КАК ШтатноеРасписаниеСтавка
		|		ПО (ШтатноеРасписание.ПодразделениеОрганизации = ШтатноеРасписаниеСтавка.ПодразделениеОрганизации)
		|			И (ШтатноеРасписание.Должность = ШтатноеРасписаниеСтавка.Должность)
		|			И (ВЫБОР
		|				КОГДА ДанныеСотрудников.Сотрудник.ВидРасчета.ТребуетВводаТарифногоРазряда
		|					ТОГДА ШтатноеРасписание.ТарифныйРазряд = ШтатноеРасписаниеСтавка.ТарифныйРазряд
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|			И (ШтатноеРасписание.Период = ШтатноеРасписаниеСтавка.Период)
		|ГДЕ
		|	ДанныеСотрудников.ВидРасчета <> ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	NULL КАК Сотрудник,
	|	NULL КАК ВидНадбавки,
	|	NULL КАК Показатель1,
	|	NULL КАК Показатель2,
	|	NULL КАК Показатель3,
	|	NULL КАК Показатель4,
	|	NULL КАК Показатель5,
	|	NULL КАК Показатель6,
	|	NULL КАК Валюта1,
	|	NULL КАК Валюта2,
	|	NULL КАК Валюта3,
	|	NULL КАК Валюта4,
	|	NULL КАК Валюта5,
	|	NULL КАК Валюта6,
	|	NULL КАК ДатаДействия,
	|	NULL КАК ТарифныйРазряд1,
	|	NULL КАК ТарифныйРазряд2,
	|	NULL КАК ТарифныйРазряд3,
	|	NULL КАК ТарифныйРазряд4,
	|	NULL КАК ТарифныйРазряд5,
	|	NULL КАК ТарифныйРазряд6,
	|	""Основные"" КАК ВидНачислений
	|ПОМЕСТИТЬ НачисленияСтаройПозицииСрезПоследних
	|";

	ЗаполнениеНачислениямиДополнительный.ДобавитьОбъединенияВЗапросПолученияДействийСНачислениями(ТекстЗапроса, "СтароеПодразделениеОрганизации", "СтараяДолжность");

	ТекстЗапроса = ТекстЗапроса + "
	|		
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	NULL КАК Сотрудник,
	|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка) КАК ВидНадбавки,
	|	NULL КАК Показатель1,
	|	NULL КАК Показатель2,
	|	NULL КАК Показатель3,
	|	NULL КАК Показатель4,
	|	NULL КАК Показатель5,
	|	NULL КАК Показатель6,
	|	NULL КАК Валюта1,
	|	NULL КАК Валюта2,
	|	NULL КАК Валюта3,
	|	NULL КАК Валюта4,
	|	NULL КАК Валюта5,
	|	NULL КАК Валюта6,
	|	NULL КАК ДатаДействия,
	|	NULL КАК ТарифныйРазряд1,
	|	NULL КАК ТарифныйРазряд2,
	|	NULL КАК ТарифныйРазряд3,
	|	NULL КАК ТарифныйРазряд4,
	|	NULL КАК ТарифныйРазряд5,
	|	NULL КАК ТарифныйРазряд6,
	|	""Основные"" КАК ВидНачислений
	|
	|ПОМЕСТИТЬ НачисленияНовойПозицииСрезПоследних
	|ГДЕ
	|	ЛОЖЬ";

	ЗаполнениеНачислениямиДополнительный.ДобавитьОбъединенияВЗапросПолученияДействийСНачислениями(ТекстЗапроса, "Подразделение", "Должность");

	// В оставшейся части запроса объединяются выборки, сформированные по следующим условиям:
	//	- часть 1: вид расчета есть в наборах старой и новой позиций, в "наборе сотруднике" (везде)
	//  и все записи равны по показателям - не изменять
	//	- часть 2: есть везде, в старой и новой позициях по показателям равны, в сотруднике 
	//  значения показателей отличаются	- не изменять
	//	- часть 3: есть в наборе новой позиции, но нет в наборе старой - начать
	//	- часть 4: есть в наборе старой позиции, но нет в наборе новой - прекратить
	//	- часть 5: есть в наборе старой позиции, есть в наборе новой, но нет в наборе сотрудника - начать
	//	- часть 6: есть в наборе старой, есть в наборе новой, есть в наборе сотрудника, 
	//	отличаются значения показателей - изменить (занулить показатели)
	//	- часть 7: все, чего нет ни в наборе старой ни в наборе новой позиций - не изменять
	
	ТекстЗапроса = ТекстЗапроса + "
	|		
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	НачисленияСотрудника.Сотрудник,
	|	НачисленияСотрудника.ВидРасчета КАК ВидРасчета,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.ВидРасчета.ЗачетОтработанногоВремени
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ НачисленияСотрудника.ВидРасчета
	|	КОНЕЦ КАК ВидРасчетаИзмерение,
	|	НачисленияСотрудника.Показатель1,
	|	НачисленияСотрудника.Показатель2,
	|	НачисленияСотрудника.Показатель3,
	|	НачисленияСотрудника.Показатель4,
	|	НачисленияСотрудника.Показатель5,
	|	НачисленияСотрудника.Показатель6,
	|	НачисленияСотрудника.ТарифныйРазряд1,
	|	НачисленияСотрудника.ТарифныйРазряд2,
	|	НачисленияСотрудника.ТарифныйРазряд3,
	|	НачисленияСотрудника.ТарифныйРазряд4,
	|	НачисленияСотрудника.ТарифныйРазряд5,
	|	НачисленияСотрудника.ТарифныйРазряд6,
	|	НачисленияСотрудника.Валюта1,
	|	НачисленияСотрудника.Валюта2,
	|	НачисленияСотрудника.Валюта3,
	|	НачисленияСотрудника.Валюта4,
	|	НачисленияСотрудника.Валюта5,
	|	НачисленияСотрудника.Валюта6,
	|	НачисленияСотрудника.ДатаДействия,
	|	НачисленияСотрудника.ВидНачислений
	|ПОМЕСТИТЬ НазначаемыеНачисленияПоИсточникам
	|ИЗ
	|	НачисленияСотрудника КАК НачисленияСотрудника
	|ГДЕ
	|	&ПоДаннымТрудовогоДоговора <> ИСТИНА
	|	И НачисленияСотрудника.ЭтоДанныеТрудовогоДоговора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	НачисленияНовойПозиции.Сотрудник,
	|	НачисленияНовойПозиции.ВидНадбавки,
	|	ВЫБОР
	|		КОГДА НачисленияНовойПозиции.ВидНадбавки.ЗачетОтработанногоВремени
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ НачисленияНовойПозиции.ВидНадбавки
	|	КОНЕЦ,
	|	НачисленияНовойПозиции.Показатель1,
	|	НачисленияНовойПозиции.Показатель2,
	|	НачисленияНовойПозиции.Показатель3,
	|	НачисленияНовойПозиции.Показатель4,
	|	НачисленияНовойПозиции.Показатель5,
	|	НачисленияНовойПозиции.Показатель6,
	|	НачисленияНовойПозиции.ТарифныйРазряд1,
	|	НачисленияНовойПозиции.ТарифныйРазряд2,
	|	НачисленияНовойПозиции.ТарифныйРазряд3,
	|	НачисленияНовойПозиции.ТарифныйРазряд4,
	|	НачисленияНовойПозиции.ТарифныйРазряд5,
	|	НачисленияНовойПозиции.ТарифныйРазряд6,
	|	НачисленияНовойПозиции.Валюта1,
	|	НачисленияНовойПозиции.Валюта2,
	|	НачисленияНовойПозиции.Валюта3,
	|	НачисленияНовойПозиции.Валюта4,
	|	НачисленияНовойПозиции.Валюта5,
	|	НачисленияНовойПозиции.Валюта6,
	|	НачисленияНовойПозиции.ДатаДействия,
	|	""Основные""
	|ИЗ
	|	НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозиции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НазначаемыеНачисления.Сотрудник,
	|	НазначаемыеНачисления.ВидРасчета,
	|	НазначаемыеНачисления.Показатель1,
	|	НазначаемыеНачисления.Показатель2,
	|	НазначаемыеНачисления.Показатель3,
	|	НазначаемыеНачисления.Показатель4,
	|	НазначаемыеНачисления.Показатель5,
	|	НазначаемыеНачисления.Показатель6,
	|	НазначаемыеНачисления.ТарифныйРазряд1,
	|	НазначаемыеНачисления.ТарифныйРазряд2,
	|	НазначаемыеНачисления.ТарифныйРазряд3,
	|	НазначаемыеНачисления.ТарифныйРазряд4,
	|	НазначаемыеНачисления.ТарифныйРазряд5,
	|	НазначаемыеНачисления.ТарифныйРазряд6,
	|	НазначаемыеНачисления.Валюта1,
	|	НазначаемыеНачисления.Валюта2,
	|	НазначаемыеНачисления.Валюта3,
	|	НазначаемыеНачисления.Валюта4,
	|	НазначаемыеНачисления.Валюта5,
	|	НазначаемыеНачисления.Валюта6,
	|	НазначаемыеНачисления.ДатаДействия,
	|	НазначаемыеНачисления.ВидНачислений
	|ПОМЕСТИТЬ НазначаемыеНачисления
	|ИЗ
	|	НазначаемыеНачисленияПоИсточникам КАК НазначаемыеНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МИНИМУМ(НазначаемыеНачисления.Приоритет) КАК Приоритет,
	|			НазначаемыеНачисления.Сотрудник КАК Сотрудник,
	|			НазначаемыеНачисления.ВидРасчетаИзмерение КАК ВидРасчетаИзмерение
	|		ИЗ
	|			НазначаемыеНачисленияПоИсточникам КАК НазначаемыеНачисления
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НазначаемыеНачисления.Сотрудник,
	|			НазначаемыеНачисления.ВидРасчетаИзмерение) КАК Источники
	|		ПО НазначаемыеНачисления.Сотрудник = Источники.Сотрудник
	|			И НазначаемыеНачисления.ВидРасчетаИзмерение = Источники.ВидРасчетаИзмерение
	|			И НазначаемыеНачисления.Приоритет = Источники.Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять) КАК Действие,
	|	НачисленияСотрудника.Сотрудник,
	|	НачисленияСотрудника.ВидРасчета,
	|	НачисленияСотрудника.Показатель1,
	|	НачисленияСотрудника.Показатель2,
	|	НачисленияСотрудника.Показатель3,
	|	НачисленияСотрудника.Показатель4,
	|	НачисленияСотрудника.Показатель5,
	|	НачисленияСотрудника.Показатель6,
	|	НачисленияСотрудника.ТарифныйРазряд1,
	|	НачисленияСотрудника.ТарифныйРазряд2,
	|	НачисленияСотрудника.ТарифныйРазряд3,
	|	НачисленияСотрудника.ТарифныйРазряд4,
	|	НачисленияСотрудника.ТарифныйРазряд5,
	|	НачисленияСотрудника.ТарифныйРазряд6,
	|	НачисленияСотрудника.Валюта1,
	|	НачисленияСотрудника.Валюта2,
	|	НачисленияСотрудника.Валюта3,
	|	НачисленияСотрудника.Валюта4,
	|	НачисленияСотрудника.Валюта5,
	|	НачисленияСотрудника.Валюта6,
	|	НачисленияСотрудника.ДатаДействия,
	|	НачисленияСотрудника.ВидНачислений
	|ПОМЕСТИТЬ Начисления
	|ИЗ
	|	НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидНадбавки = НачисленияНовойПозицииСрезПоследних.ВидНадбавки
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель1 = НачисленияНовойПозицииСрезПоследних.Показатель1
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель2 = НачисленияНовойПозицииСрезПоследних.Показатель2
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель3 = НачисленияНовойПозицииСрезПоследних.Показатель3
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель4 = НачисленияНовойПозицииСрезПоследних.Показатель4
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель5 = НачисленияНовойПозицииСрезПоследних.Показатель5
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель6 = НачисленияНовойПозицииСрезПоследних.Показатель6
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияНовойПозицииСрезПоследних.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияСотрудника КАК НачисленияСотрудника
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидНадбавки = НачисленияСотрудника.ВидРасчета
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель1 = НачисленияСотрудника.Показатель1
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель2 = НачисленияСотрудника.Показатель2
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель3 = НачисленияСотрудника.Показатель3
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель4 = НачисленияСотрудника.Показатель4
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель5 = НачисленияСотрудника.Показатель5
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель6 = НачисленияСотрудника.Показатель6
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияСотрудника.Сотрудник
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять),
	|	НачисленияСотрудника.Сотрудник,
	|	НачисленияСотрудника.ВидРасчета,
	|	НачисленияСотрудника.Показатель1,
	|	НачисленияСотрудника.Показатель2,
	|	НачисленияСотрудника.Показатель3,
	|	НачисленияСотрудника.Показатель4,
	|	НачисленияСотрудника.Показатель5,
	|	НачисленияСотрудника.Показатель6,
	|	НачисленияСотрудника.ТарифныйРазряд1,
	|	НачисленияСотрудника.ТарифныйРазряд2,
	|	НачисленияСотрудника.ТарифныйРазряд3,
	|	НачисленияСотрудника.ТарифныйРазряд4,
	|	НачисленияСотрудника.ТарифныйРазряд5,
	|	НачисленияСотрудника.ТарифныйРазряд6,
	|	НачисленияСотрудника.Валюта1,
	|	НачисленияСотрудника.Валюта2,
	|	НачисленияСотрудника.Валюта3,
	|	НачисленияСотрудника.Валюта4,
	|	НачисленияСотрудника.Валюта5,
	|	НачисленияСотрудника.Валюта6,
	|	НачисленияСотрудника.ДатаДействия,
	|	НачисленияСотрудника.ВидНачислений
	|ИЗ
	|	НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидНадбавки = НачисленияНовойПозицииСрезПоследних.ВидНадбавки
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель1 = НачисленияНовойПозицииСрезПоследних.Показатель1
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель2 = НачисленияНовойПозицииСрезПоследних.Показатель2
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель3 = НачисленияНовойПозицииСрезПоследних.Показатель3
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель4 = НачисленияНовойПозицииСрезПоследних.Показатель4
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель5 = НачисленияНовойПозицииСрезПоследних.Показатель5
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель6 = НачисленияНовойПозицииСрезПоследних.Показатель6
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияНовойПозицииСрезПоследних.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияСотрудника КАК НачисленияСотрудника
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидНадбавки = НачисленияСотрудника.ВидРасчета
	|			И (НачисленияСтаройПозицииСрезПоследних.Показатель1 <> НачисленияСотрудника.Показатель1
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель2 <> НачисленияСотрудника.Показатель2
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель3 <> НачисленияСотрудника.Показатель3
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель4 <> НачисленияСотрудника.Показатель4
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель5 <> НачисленияСотрудника.Показатель5
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель6 <> НачисленияСотрудника.Показатель6)
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияСотрудника.Сотрудник
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать),
	|	ДанныеСотрудников.Сотрудник,
	|	НазначаемыеНачисления.ВидРасчета,
	|	НазначаемыеНачисления.Показатель1,
	|	НазначаемыеНачисления.Показатель2,
	|	НазначаемыеНачисления.Показатель3,
	|	НазначаемыеНачисления.Показатель4,
	|	НазначаемыеНачисления.Показатель5,
	|	НазначаемыеНачисления.Показатель6,
	|	НазначаемыеНачисления.ТарифныйРазряд1,
	|	НазначаемыеНачисления.ТарифныйРазряд2,
	|	НазначаемыеНачисления.ТарифныйРазряд3,
	|	НазначаемыеНачисления.ТарифныйРазряд4,
	|	НазначаемыеНачисления.ТарифныйРазряд5,
	|	НазначаемыеНачисления.ТарифныйРазряд6,
	|	НазначаемыеНачисления.Валюта1,
	|	НазначаемыеНачисления.Валюта2,
	|	НазначаемыеНачисления.Валюта3,
	|	НазначаемыеНачисления.Валюта4,
	|	НазначаемыеНачисления.Валюта5,
	|	НазначаемыеНачисления.Валюта6,
	|	ДанныеСотрудников.ДатаДействия,
	|	НазначаемыеНачисления.ВидНачислений
	|ИЗ
	|	НазначаемыеНачисления КАК НазначаемыеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ПО (НачисленияСтаройПозицииСрезПоследних.ВидНадбавки = НазначаемыеНачисления.ВидРасчета)
	|			И НазначаемыеНачисления.Сотрудник = НачисленияСтаройПозицииСрезПоследних.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеСотрудников КАК ДанныеСотрудников
	|		ПО НазначаемыеНачисления.Сотрудник = ДанныеСотрудников.Сотрудник
	|ГДЕ
	|	НачисленияСтаройПозицииСрезПоследних.ВидНадбавки ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить),
	|	ДанныеСотрудников.Сотрудник,
	|	НачисленияСтаройПозицииСрезПоследних.ВидНадбавки,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель1,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель2,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель3,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель4,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель5,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель6,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта1,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта2,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта3,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта4,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта5,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта6,
	|	ДанныеСотрудников.ДатаДействия,
	|	НачисленияСтаройПозицииСрезПоследних.ВидНачислений
	|ИЗ
	|	НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидНадбавки = НачисленияНовойПозицииСрезПоследних.ВидНадбавки
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияНовойПозицииСрезПоследних.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеСотрудников КАК ДанныеСотрудников
	|		ПО НачисленияСтаройПозицииСрезПоследних.Сотрудник = ДанныеСотрудников.Сотрудник
	|ГДЕ
	|	НачисленияНовойПозицииСрезПоследних.ВидНадбавки ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать),
	|	ДанныеСотрудников.Сотрудник,
	|	НачисленияНовойПозицииСрезПоследних.ВидНадбавки,
	|	НачисленияНовойПозицииСрезПоследних.Показатель1,
	|	НачисленияНовойПозицииСрезПоследних.Показатель2,
	|	НачисленияНовойПозицииСрезПоследних.Показатель3,
	|	НачисленияНовойПозицииСрезПоследних.Показатель4,
	|	НачисленияНовойПозицииСрезПоследних.Показатель5,
	|	НачисленияНовойПозицииСрезПоследних.Показатель6,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	НачисленияНовойПозицииСрезПоследних.Валюта1,
	|	НачисленияНовойПозицииСрезПоследних.Валюта2,
	|	НачисленияНовойПозицииСрезПоследних.Валюта3,
	|	НачисленияНовойПозицииСрезПоследних.Валюта4,
	|	НачисленияНовойПозицииСрезПоследних.Валюта5,
	|	НачисленияНовойПозицииСрезПоследних.Валюта6,
	|	ДанныеСотрудников.ДатаДействия,
	|	НачисленияНовойПозицииСрезПоследних.ВидНачислений
	|ИЗ
	|	НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ПО (НачисленияСтаройПозицииСрезПоследних.ВидНадбавки = НачисленияНовойПозицииСрезПоследних.ВидНадбавки)
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияНовойПозицииСрезПоследних.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеСотрудников КАК ДанныеСотрудников
	|		ПО НачисленияСтаройПозицииСрезПоследних.Сотрудник = ДанныеСотрудников.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачисленияСотрудника КАК НачисленияСотрудника
	|		ПО НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияСотрудника.Сотрудник
	|			И (НачисленияСтаройПозицииСрезПоследних.ВидНадбавки = НачисленияСотрудника.ВидРасчета)
	|ГДЕ
	|	НачисленияСотрудника.Сотрудник ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Изменить),
	|	НачисленияСотрудника.Сотрудник,
	|	НачисленияСтаройПозицииСрезПоследних.ВидНадбавки,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.Показатель1 = НачисленияСтаройПозицииСрезПоследних.Показатель1
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.Показатель1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.Показатель2 = НачисленияСтаройПозицииСрезПоследних.Показатель2
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.Показатель2
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.Показатель3 = НачисленияСтаройПозицииСрезПоследних.Показатель3
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.Показатель3
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.Показатель4 = НачисленияСтаройПозицииСрезПоследних.Показатель4
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.Показатель4
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.Показатель5 = НачисленияСтаройПозицииСрезПоследних.Показатель5
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.Показатель5
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.Показатель6 = НачисленияСтаройПозицииСрезПоследних.Показатель6
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.Показатель6
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.ТарифныйРазряд1 = НачисленияСтаройПозицииСрезПоследних.ТарифныйРазряд1
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.ТарифныйРазряд1
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.ТарифныйРазряд2 = НачисленияСтаройПозицииСрезПоследних.ТарифныйРазряд2
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.ТарифныйРазряд2
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.ТарифныйРазряд3 = НачисленияСтаройПозицииСрезПоследних.ТарифныйРазряд3
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.ТарифныйРазряд3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.ТарифныйРазряд4 = НачисленияСтаройПозицииСрезПоследних.ТарифныйРазряд4
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.ТарифныйРазряд4
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.ТарифныйРазряд5 = НачисленияСтаройПозицииСрезПоследних.ТарифныйРазряд5
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.ТарифныйРазряд5
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.ТарифныйРазряд6 = НачисленияСтаройПозицииСрезПоследних.ТарифныйРазряд6
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.ТарифныйРазряд6
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТарифныеРазряды.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.Валюта1 = НачисленияСтаройПозицииСрезПоследних.Валюта1
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.Валюта1
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.Валюта2 = НачисленияСтаройПозицииСрезПоследних.Валюта2
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.Валюта2
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.Валюта3 = НачисленияСтаройПозицииСрезПоследних.Валюта3
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.Валюта3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.Валюта4 = НачисленияСтаройПозицииСрезПоследних.Валюта4
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.Валюта4
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.Валюта5 = НачисленияСтаройПозицииСрезПоследних.Валюта5
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.Валюта5
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НачисленияСотрудника.Валюта6 = НачисленияСтаройПозицииСрезПоследних.Валюта6
	|			ТОГДА НачисленияНовойПозицииСрезПоследних.Валюта6
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|	КОНЕЦ,
	|	НачисленияСотрудника.ДатаДействия,
	|	НачисленияСотрудника.ВидНачислений
	|ИЗ
	|	НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидНадбавки = НачисленияНовойПозицииСрезПоследних.ВидНадбавки
	|			И (НачисленияСтаройПозицииСрезПоследних.Показатель1 <> НачисленияНовойПозицииСрезПоследних.Показатель1
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель2 <> НачисленияНовойПозицииСрезПоследних.Показатель2
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель3 <> НачисленияНовойПозицииСрезПоследних.Показатель3
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель4 <> НачисленияНовойПозицииСрезПоследних.Показатель4
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель5 <> НачисленияНовойПозицииСрезПоследних.Показатель5
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель6 <> НачисленияНовойПозицииСрезПоследних.Показатель6)
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияНовойПозицииСрезПоследних.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияСотрудника КАК НачисленияСотрудника
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидНадбавки = НачисленияСотрудника.ВидРасчета
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияСотрудника.Сотрудник
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять),
	|	НачисленияСотрудника.Сотрудник,
	|	НачисленияСотрудника.ВидРасчета,
	|	НачисленияСотрудника.Показатель1,
	|	НачисленияСотрудника.Показатель2,
	|	НачисленияСотрудника.Показатель3,
	|	НачисленияСотрудника.Показатель4,
	|	НачисленияСотрудника.Показатель5,
	|	НачисленияСотрудника.Показатель6,
	|	НачисленияСотрудника.ТарифныйРазряд1,
	|	НачисленияСотрудника.ТарифныйРазряд2,
	|	НачисленияСотрудника.ТарифныйРазряд3,
	|	НачисленияСотрудника.ТарифныйРазряд4,
	|	НачисленияСотрудника.ТарифныйРазряд5,
	|	НачисленияСотрудника.ТарифныйРазряд6,
	|	НачисленияСотрудника.Валюта1,
	|	НачисленияСотрудника.Валюта2,
	|	НачисленияСотрудника.Валюта3,
	|	НачисленияСотрудника.Валюта4,
	|	НачисленияСотрудника.Валюта5,
	|	НачисленияСотрудника.Валюта6,
	|	НачисленияСотрудника.ДатаДействия,
	|	НачисленияСотрудника.ВидНачислений
	|ИЗ
	|	НачисленияСотрудника КАК НачисленияСотрудника
	|		ЛЕВОЕ СОЕДИНЕНИЕ НазначаемыеНачисления КАК НазначаемыеНачисления
	|		ПО НачисленияСотрудника.ВидРасчета = НазначаемыеНачисления.ВидРасчета
	|			И НачисленияСотрудника.Сотрудник = НазначаемыеНачисления.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ПО (НачисленияСтаройПозицииСрезПоследних.ВидНадбавки = НачисленияСотрудника.ВидРасчета)
	|			И НачисленияСотрудника.Сотрудник = НачисленияСтаройПозицииСрезПоследних.Сотрудник
	|ГДЕ
	|	НазначаемыеНачисления.ВидРасчета ЕСТЬ NULL 
	|	И НачисленияСтаройПозицииСрезПоследних.ВидНадбавки ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА Начисления.Действие = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(Начисления.Показатель1, 0) * ВЫБОР
	|							КОГДА Начисления.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
	|								ТОГДА ВЫБОР
	|										КОГДА Начисления.ВидРасчета.ЗачетОтработанногоВремени = ИСТИНА
	|											ТОГДА &КоэффициентИндексацииЗаработка
	|										ИНАЧЕ 1
	|									КОНЕЦ
	|							ИНАЧЕ 1
	|						КОНЕЦ = ЕСТЬNULL(Начисления.Показатель1, 0)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Изменить)
	|				КОНЕЦ
	|		ИНАЧЕ Начисления.Действие
	|	КОНЕЦ КАК Действие,
	|	Начисления.ДатаДействия,
	|	Начисления.Сотрудник,
	|	Начисления.Сотрудник.Физлицо КАК Физлицо,
	|	Начисления.ВидРасчета,
	|	ЕСТЬNULL(Начисления.Показатель1, 0) * ВЫБОР
	|		КОГДА Начисления.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ВидРасчета.ЗачетОтработанногоВремени = ИСТИНА
	|						ТОГДА &КоэффициентИндексацииЗаработка
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Показатель1,
	|	ЕСТЬNULL(Начисления.Показатель2, 0) КАК Показатель2,
	|	ЕСТЬNULL(Начисления.Показатель3, 0) КАК Показатель3,
	|	ЕСТЬNULL(Начисления.Показатель4, 0) КАК Показатель4,
	|	ЕСТЬNULL(Начисления.Показатель5, 0) КАК Показатель5,
	|	ЕСТЬNULL(Начисления.Показатель6, 0) КАК Показатель6,
	|	Начисления.ТарифныйРазряд1,
	|	Начисления.ТарифныйРазряд2,
	|	Начисления.ТарифныйРазряд3,
	|	Начисления.ТарифныйРазряд4,
	|	Начисления.ТарифныйРазряд5,
	|	Начисления.ТарифныйРазряд6,
	|	ЕСТЬNULL(Начисления.Валюта1, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта1,
	|	ЕСТЬNULL(Начисления.Валюта2, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта2,
	|	ЕСТЬNULL(Начисления.Валюта3, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта3,
	|	ЕСТЬNULL(Начисления.Валюта4, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта4,
	|	ЕСТЬNULL(Начисления.Валюта5, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта5,
	|	ЕСТЬNULL(Начисления.Валюта6, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта6,
	|	Начисления.ВидНачислений
	|ИЗ
	|	Начисления КАК Начисления";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьТаблицуДействийСНачислениями

// Процедура предназначена для получения начислений и действий с ними
// в зависимости от кадрового события.
//
// Параметры:
//  ДанныеДокумента					- исходные данные для выполнения запроса: ссылка на сотрудника, 
//									  если сотрудник один, таблица значений в случае, если их несколько
//  ДокументСсылка					- ссылка на документ
//  ДокументДата					- дата документа
//  Организация						- ссылка на организацию
//	ИмяДатыДействия					- в разных документах поле с датой действия 
//									  имеет разное имя: ДатаНачала, ДатаДействия, ДатаПриема
//	КоэффициентИндексацииЗаработка 	- необязательный, по умолчанию - 1 (нет индексации), 
//									  используется для пересчета значений при заполнении документа 
//									  Кадровое перемещение сотрудников организаций
//	ПоДаннымТрудовогоДоговора 		- необязательный, по умолчанию - Ложь, признак необходимости 
//									  получать данные трудового договора
//	ПолучатьПлановыеНачисления 		- необязательный, по умолчанию - Истина, признак необходимости 
//									  получать плановые начисления
//
Функция ПолучитьТаблицуДействийСУправленческимиНачислениями(ДанныеДокумента, ДокументСсылка, ДокументДата, ПолучатьПлановыеНачисления = Истина) Экспорт
	
	// некоторые поля в разных документах носят разные имена 
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПриемНаРаботу") Тогда
		ПолеПодразделение 	= "Подразделение";
		ПолеДолжность 		= "Должность";
		ПолеДатаДействия 	= "ДатаПриема";
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КадровоеПеремещение") Тогда
		ПолеПодразделение 	= "НовоеПодразделение";
		ПолеДолжность 		= "НоваяДолжность";
		ПолеДатаДействия 	= "ДатаНачала";
	КонецЕсли;	
	
	// дополним таблицу данными шапки документа
	ДанныеДокумента.Колонки.Добавить("ДатаДокумента", 	ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	ДанныеДокумента.ЗаполнитьЗначения(ДокументДата,		"ДатаДокумента");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ДанныеДокумента", ДанныеДокумента);

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Сотрудник,
	|	ДанныеДокумента.Физлицо,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента." + ПолеДатаДействия + " <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ДанныеДокумента." + ПолеДатаДействия + "
	|		ИНАЧЕ ДанныеДокумента.ДатаДокумента
	|	КОНЕЦ КАК ДатаДействия,
	|	ДанныеДокумента." + ПолеПодразделение + " КАК Подразделение,
	|	ДанныеДокумента." + ПолеДолжность + " КАК Должность,
	|	ДанныеДокумента.ДатаДокумента
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	&ДанныеДокумента КАК ДанныеДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Физлицо КАК Физлицо,
	|	ДанныеДокумента.ДатаДействия,
	|	МАКСИМУМ(Работники.Период) КАК Период
	|ПОМЕСТИТЬ РаботникиСрезПоследнихДаты
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК Работники
	|		ПО ДанныеДокумента.Физлицо = Работники.ФизЛицо
	|			И ДанныеДокумента.ДатаДействия >= Работники.Период
	|			И (&Ссылка <> Работники.Регистратор)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Физлицо,
	|	ДанныеДокумента.ДатаДействия
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаботникиСрезПоследних.Физлицо КАК Физлицо,
	|	РаботникиСрезПоследних.ДатаДействия,
	|	РаботникиСрезПоследних.Период,
	|	Работники.Подразделение КАК Подразделение,
	|	Работники.Должность КАК Должность
	|ПОМЕСТИТЬ РаботникиСрезПоследних
	|ИЗ
	|	РегистрСведений.Работники КАК Работники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаботникиСрезПоследнихДаты КАК РаботникиСрезПоследних
	|		ПО Работники.ФизЛицо = РаботникиСрезПоследних.Физлицо
	|			И Работники.Период = РаботникиСрезПоследних.Период
	|			И (Работники.Регистратор <> &Ссылка)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Сотрудник КАК Сотрудник,
	|	ДанныеДокумента.Физлицо КАК Физлицо,
	|	ДанныеДокумента.ДатаДействия,
	|	ЕСТЬNULL(ДанныеДокумента.Подразделение, РаботникиСрезПоследних.Подразделение) КАК Подразделение,
	|	ЕСТЬNULL(ДанныеДокумента.Должность, РаботникиСрезПоследних.Должность) КАК Должность,
	|	РаботникиСрезПоследних.Подразделение КАК СтароеПодразделение,
	|	РаботникиСрезПоследних.Должность КАК СтараяДолжность
	|ПОМЕСТИТЬ ДанныеСотрудников
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РаботникиСрезПоследних КАК РаботникиСрезПоследних
	|		ПО ДанныеДокумента.Физлицо = РаботникиСрезПоследних.Физлицо
	|
	|;
	|";
	Если ПолучатьПлановыеНачисления Тогда
		
		ТекстЗапроса = ТекстЗапроса +  
		"ВЫБРАТЬ
		|	УправленческиеНачисленияПоказатели.Ссылка КАК ВидРасчета,
		|	УправленческиеНачисленияПоказатели.НомерСтроки КАК НомерПоказателя,
		|	ВЫБОР
		|		КОГДА УправленческиеНачисленияПоказатели.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ТребуетВводаТарифногоРазряда
		|ПОМЕСТИТЬ ДанныеВидаРасчетаНачисления
		|ИЗ
		|	ПланВидовРасчета.УправленческиеНачисления.Показатели КАК УправленческиеНачисленияПоказатели
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Сотрудник,
		|	ДанныеДокумента.Физлицо КАК Физлицо,
		|	ДанныеДокумента.ДатаДействия,
		|	МАКСИМУМ(Начисления.Период) КАК Период,
		|	Начисления.ВидРасчета КАК ВидРасчета
		|ПОМЕСТИТЬ НачисленияСрезПоследних
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботников КАК Начисления
		|		ПО ДанныеДокумента.Физлицо = Начисления.ФизЛицо
		|			И ДанныеДокумента.ДатаДействия >= Начисления.Период
		|ГДЕ
		|	Начисления.ВидРасчета ССЫЛКА ПланВидовРасчета.УправленческиеНачисления
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокумента.Сотрудник,
		|	ДанныеДокумента.Физлицо,
		|	ДанныеДокумента.ДатаДействия,
		|	Начисления.ВидРасчета		
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Сотрудник,
		|	ДанныеДокумента.Физлицо КАК Физлицо,
		|	ДанныеДокумента.ДатаДействия,
		|	МАКСИМУМ(Удержания.Период) КАК Период,
		|	Удержания.ВидРасчета КАК ВидРасчета
		|ПОМЕСТИТЬ УдержанияСрезПоследних
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботников КАК Удержания
		|		ПО ДанныеДокумента.Физлицо = Удержания.ФизЛицо
		|			И ДанныеДокумента.ДатаДействия >= Удержания.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокумента.Сотрудник,
		|	ДанныеДокумента.Физлицо,
		|	ДанныеДокумента.ДатаДействия,
		|	Удержания.ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НачисленияСрезПоследних.Сотрудник КАК Сотрудник,
		|	НачисленияСрезПоследних.Физлицо КАК Физлицо,
		|	Начисления.ВидРасчета КАК ВидРасчета,
		|	ВЫБОР
		|		КОГДА ДанныеВидаРасчета1.ТребуетВводаТарифногоРазряда
		|			ТОГДА 0
		|		ИНАЧЕ Начисления.Показатель1
		|	КОНЕЦ КАК Показатель1,
		|	ВЫБОР
		|		КОГДА ДанныеВидаРасчета2.ТребуетВводаТарифногоРазряда
		|			ТОГДА 0
		|		ИНАЧЕ Начисления.Показатель2
		|			КОНЕЦ КАК Показатель2,
		|	ВЫБОР
		|		КОГДА ДанныеВидаРасчета3.ТребуетВводаТарифногоРазряда
		|			ТОГДА 0
		|		ИНАЧЕ Начисления.Показатель3
		|	КОНЕЦ КАК Показатель3,
		|	ВЫБОР
		|		КОГДА ДанныеВидаРасчета4.ТребуетВводаТарифногоРазряда
		|			ТОГДА 0
		|		ИНАЧЕ Начисления.Показатель4
		|	КОНЕЦ КАК Показатель4,
		|	ВЫБОР
		|		КОГДА ДанныеВидаРасчета5.ТребуетВводаТарифногоРазряда
		|			ТОГДА 0
		|		ИНАЧЕ Начисления.Показатель5
		|	КОНЕЦ КАК Показатель5,
		|	ВЫБОР
		|		КОГДА ДанныеВидаРасчета6.ТребуетВводаТарифногоРазряда
		|			ТОГДА 0
		|		ИНАЧЕ Начисления.Показатель6
		|	КОНЕЦ КАК Показатель6,
		|	Начисления.Валюта1 КАК Валюта1,
		|	Начисления.Валюта2 КАК Валюта2,
		|	Начисления.Валюта3 КАК Валюта3,
		|	Начисления.Валюта4 КАК Валюта4,
		|	Начисления.Валюта5 КАК Валюта5,
		|	Начисления.Валюта6 КАК Валюта6,
		|	НачисленияСрезПоследних.ДатаДействия
		|ПОМЕСТИТЬ НачисленияСотрудника
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботников КАК Начисления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияСрезПоследних КАК НачисленияСрезПоследних
		|		ПО Начисления.Регистратор <> &Ссылка
		|			И Начисления.ФизЛицо = НачисленияСрезПоследних.Физлицо
		|			И Начисления.Период = НачисленияСрезПоследних.Период 
		|			И Начисления.ВидРасчета = НачисленияСрезПоследних.ВидРасчета
		|			И Начисления.Действует
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеВидаРасчетаНачисления КАК ДанныеВидаРасчета1
		|		ПО Начисления.ВидРасчета = ДанныеВидаРасчета1.ВидРасчета
		|			И (ДанныеВидаРасчета1.НомерПоказателя = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеВидаРасчетаНачисления КАК ДанныеВидаРасчета2
		|		ПО Начисления.ВидРасчета = ДанныеВидаРасчета2.ВидРасчета
		|			И (ДанныеВидаРасчета2.НомерПоказателя = 2)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеВидаРасчетаНачисления КАК ДанныеВидаРасчета3
		|		ПО Начисления.ВидРасчета = ДанныеВидаРасчета3.ВидРасчета
		|			И (ДанныеВидаРасчета3.НомерПоказателя = 3)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеВидаРасчетаНачисления КАК ДанныеВидаРасчета4
		|		ПО Начисления.ВидРасчета = ДанныеВидаРасчета4.ВидРасчета
		|			И (ДанныеВидаРасчета4.НомерПоказателя = 4)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеВидаРасчетаНачисления КАК ДанныеВидаРасчета5
		|		ПО Начисления.ВидРасчета = ДанныеВидаРасчета5.ВидРасчета
		|			И (ДанныеВидаРасчета5.НомерПоказателя = 5)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеВидаРасчетаНачисления КАК ДанныеВидаРасчета6
		|		ПО Начисления.ВидРасчета = ДанныеВидаРасчета6.ВидРасчета
		|			И (ДанныеВидаРасчета6.НомерПоказателя = 6)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	УдержанияСрезПоследних.Сотрудник,
		|	УдержанияСрезПоследних.Физлицо,
		|	Удержания.ВидРасчета,
		|	Удержания.Показатель1,
		|	Удержания.Показатель2,
		|	Удержания.Показатель3,
		|	Удержания.Показатель4,
		|	Удержания.Показатель5,
		|	Удержания.Показатель6,
		|	Удержания.Валюта1,
		|	Удержания.Валюта2,
		|	Удержания.Валюта3,
		|	Удержания.Валюта4,
		|	Удержания.Валюта5,
		|	Удержания.Валюта6,
		|	УдержанияСрезПоследних.ДатаДействия
		|ИЗ
		|	РегистрСведений.ПлановыеУдержанияРаботников КАК Удержания
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УдержанияСрезПоследних КАК УдержанияСрезПоследних
		|		ПО (Удержания.Регистратор <> &Ссылка)
		|			И Удержания.ФизЛицо = УдержанияСрезПоследних.Физлицо
		|			И Удержания.Период = УдержанияСрезПоследних.Период
		|			И Удержания.ВидРасчета = УдержанияСрезПоследних.ВидРасчета
		|			И Удержания.Действует
		|;
		|";
	Иначе
		
		// здесь определяем "пустышку", если не выполняется запрос к регистру плановых начислений
		ТекстЗапроса = ТекстЗапроса +  
		"////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	NULL КАК Сотрудник,
		|	NULL КАК Физлицо,
		|	NULL КАК ВидРасчета,
		|	NULL КАК Показатель1,
		|	NULL КАК Показатель2,
		|	NULL КАК Показатель3,
		|	NULL КАК Показатель4,
		|	NULL КАК Показатель5,
		|	NULL КАК Показатель6,
		|	NULL КАК Валюта1,
		|	NULL КАК Валюта2,
		|	NULL КАК Валюта3,
		|	NULL КАК Валюта4,
		|	NULL КАК Валюта5,
		|	NULL КАК Валюта6,
		|	NULL КАК ДатаДействия
		|ПОМЕСТИТЬ НачисленияСотрудника
		|ГДЕ
		|	ЛОЖЬ
		|;
		|";
		
	КонецЕсли;
	
	ЗаполнениеНачислениямиДополнительный.ДобавитьТаблицыВЗапросПолученияДействийСУправленческимиНачислениями(ТекстЗапроса);
	
	ТекстЗапроса = ТекстЗапроса +  "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияСотрудника.Сотрудник КАК Сотрудник,
	|	НачисленияСотрудника.Физлицо,
	|	НачисленияСотрудника.ВидРасчета КАК ВидРасчета
	|ПОМЕСТИТЬ НачисленияЕстьВоВсехНаборах
	|ИЗ
	|	НачисленияСотрудника КАК НачисленияСотрудника
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ПО НачисленияСотрудника.Сотрудник = НачисленияСтаройПозицииСрезПоследних.Сотрудник
	|			И НачисленияСотрудника.ВидРасчета = НачисленияСтаройПозицииСрезПоследних.ВидРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ПО НачисленияСотрудника.ВидРасчета = НачисленияНовойПозицииСрезПоследних.ВидРасчета
	|			И НачисленияСотрудника.Сотрудник = НачисленияНовойПозицииСрезПоследних.Сотрудник
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияСтаройПозицииСрезПоследних.Сотрудник КАК Сотрудник,
	|	НачисленияСтаройПозицииСрезПоследних.ВидРасчета КАК ВидРасчета,
	|	НачисленияСтаройПозицииСрезПоследних.ДатаДействия КАК ДатаДействия,
	|	НачисленияСтаройПозицииСрезПоследних.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ НачисленияПозицийОтличаютсяЗначениямиПоказателей
	|ИЗ
	|	НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидРасчета = НачисленияНовойПозицииСрезПоследних.ВидРасчета
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияНовойПозицииСрезПоследних.Сотрудник
	|			И (НачисленияСтаройПозицииСрезПоследних.Показатель1 <> НачисленияНовойПозицииСрезПоследних.Показатель1
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель2 <> НачисленияНовойПозицииСрезПоследних.Показатель2
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель3 <> НачисленияНовойПозицииСрезПоследних.Показатель3
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель4 <> НачисленияНовойПозицииСрезПоследних.Показатель4
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель5 <> НачисленияНовойПозицииСрезПоследних.Показатель5
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель6 <> НачисленияНовойПозицииСрезПоследних.Показатель6)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияСтаройПозицииСрезПоследних.Сотрудник КАК Сотрудник,
	|	НачисленияСтаройПозицииСрезПоследних.ВидРасчета КАК ВидРасчета,
	|	НачисленияСтаройПозицииСрезПоследних.ДатаДействия КАК ДатаДействия,
	|	НачисленияСтаройПозицииСрезПоследних.Физлицо КАК Физлицо,
	|	НачисленияНовойПозицииСрезПоследних.Показатель1,
	|	НачисленияНовойПозицииСрезПоследних.Показатель2,
	|	НачисленияНовойПозицииСрезПоследних.Показатель3,
	|	НачисленияНовойПозицииСрезПоследних.Показатель4,
	|	НачисленияНовойПозицииСрезПоследних.Показатель5,
	|	НачисленияНовойПозицииСрезПоследних.Показатель6,
	|	НачисленияНовойПозицииСрезПоследних.Валюта1,
	|	НачисленияНовойПозицииСрезПоследних.Валюта2,
	|	НачисленияНовойПозицииСрезПоследних.Валюта3,
	|	НачисленияНовойПозицииСрезПоследних.Валюта4,
	|	НачисленияНовойПозицииСрезПоследних.Валюта5,
	|	НачисленияНовойПозицииСрезПоследних.Валюта6
	|
	|ПОМЕСТИТЬ НачисленияОтличаютсяЗначениямиПоказателей
	|ИЗ
	|	НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидРасчета = НачисленияНовойПозицииСрезПоследних.ВидРасчета
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияНовойПозицииСрезПоследних.Сотрудник
	|			И (НачисленияСтаройПозицииСрезПоследних.Показатель1 <> НачисленияНовойПозицииСрезПоследних.Показатель1
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель2 <> НачисленияНовойПозицииСрезПоследних.Показатель2
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель3 <> НачисленияНовойПозицииСрезПоследних.Показатель3
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель4 <> НачисленияНовойПозицииСрезПоследних.Показатель4
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель5 <> НачисленияНовойПозицииСрезПоследних.Показатель5
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель6 <> НачисленияНовойПозицииСрезПоследних.Показатель6)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НачисленияСотрудника.Сотрудник,
	|	НачисленияСотрудника.ВидРасчета,
	|	НачисленияСотрудника.ДатаДействия,
	|	НачисленияСотрудника.Физлицо,
	|	НачисленияНовойПозицииСрезПоследних.Показатель1,
	|	НачисленияНовойПозицииСрезПоследних.Показатель2,
	|	НачисленияНовойПозицииСрезПоследних.Показатель3,
	|	НачисленияНовойПозицииСрезПоследних.Показатель4,
	|	НачисленияНовойПозицииСрезПоследних.Показатель5,
	|	НачисленияНовойПозицииСрезПоследних.Показатель6,
	|	НачисленияНовойПозицииСрезПоследних.Валюта1,
	|	НачисленияНовойПозицииСрезПоследних.Валюта2,
	|	НачисленияНовойПозицииСрезПоследних.Валюта3,
	|	НачисленияНовойПозицииСрезПоследних.Валюта4,
	|	НачисленияНовойПозицииСрезПоследних.Валюта5,
	|	НачисленияНовойПозицииСрезПоследних.Валюта6
	|ИЗ
	|	НачисленияСотрудника КАК НачисленияСотрудника
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ПО НачисленияСотрудника.ВидРасчета = НачисленияНовойПозицииСрезПоследних.ВидРасчета
	|			И НачисленияСотрудника.Сотрудник = НачисленияНовойПозицииСрезПоследних.Сотрудник
	|			И (НачисленияСотрудника.Показатель1 <> НачисленияНовойПозицииСрезПоследних.Показатель1
	|				ИЛИ НачисленияСотрудника.Показатель2 <> НачисленияНовойПозицииСрезПоследних.Показатель2
	|				ИЛИ НачисленияСотрудника.Показатель3 <> НачисленияНовойПозицииСрезПоследних.Показатель3
	|				ИЛИ НачисленияСотрудника.Показатель4 <> НачисленияНовойПозицииСрезПоследних.Показатель4
	|				ИЛИ НачисленияСотрудника.Показатель5 <> НачисленияНовойПозицииСрезПоследних.Показатель5
	|				ИЛИ НачисленияСотрудника.Показатель6 <> НачисленияНовойПозицииСрезПоследних.Показатель6)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НачисленияСотрудника.Сотрудник,
	|	НачисленияСотрудника.ВидРасчета,
	|	НачисленияСотрудника.ДатаДействия,
	|	НачисленияСотрудника.Физлицо,
	|	НачисленияСотрудника.Показатель1,
	|	НачисленияСотрудника.Показатель2,
	|	НачисленияСотрудника.Показатель3,
	|	НачисленияСотрудника.Показатель4,
	|	НачисленияСотрудника.Показатель5,
	|	НачисленияСотрудника.Показатель6,
	|	НачисленияСотрудника.Валюта1,
	|	НачисленияСотрудника.Валюта2,
	|	НачисленияСотрудника.Валюта3,
	|	НачисленияСотрудника.Валюта4,
	|	НачисленияСотрудника.Валюта5,
	|	НачисленияСотрудника.Валюта6
	|ИЗ
	|	НачисленияСотрудника КАК НачисленияСотрудника
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ПО НачисленияСотрудника.ВидРасчета = НачисленияСтаройПозицииСрезПоследних.ВидРасчета
	|			И НачисленияСотрудника.Сотрудник = НачисленияСтаройПозицииСрезПоследних.Сотрудник
	|			И (НачисленияСотрудника.Показатель1 <> НачисленияСтаройПозицииСрезПоследних.Показатель1
	|				ИЛИ НачисленияСотрудника.Показатель2 <> НачисленияСтаройПозицииСрезПоследних.Показатель2
	|				ИЛИ НачисленияСотрудника.Показатель3 <> НачисленияСтаройПозицииСрезПоследних.Показатель3
	|				ИЛИ НачисленияСотрудника.Показатель4 <> НачисленияСтаройПозицииСрезПоследних.Показатель4
	|				ИЛИ НачисленияСотрудника.Показатель5 <> НачисленияСтаройПозицииСрезПоследних.Показатель5
	|				ИЛИ НачисленияСотрудника.Показатель6 <> НачисленияСтаройПозицииСрезПоследних.Показатель6)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять) КАК Действие,
	|	НачисленияСотрудника.Сотрудник,
	|	НачисленияСотрудника.Физлицо,
	|	НачисленияСотрудника.ВидРасчета,
	|	НачисленияСотрудника.Показатель1,
	|	НачисленияСотрудника.Показатель2,
	|	НачисленияСотрудника.Показатель3,
	|	НачисленияСотрудника.Показатель4,
	|	НачисленияСотрудника.Показатель5,
	|	НачисленияСотрудника.Показатель6,
	|	НачисленияСотрудника.Валюта1,
	|	НачисленияСотрудника.Валюта2,
	|	НачисленияСотрудника.Валюта3,
	|	НачисленияСотрудника.Валюта4,
	|	НачисленияСотрудника.Валюта5,
	|	НачисленияСотрудника.Валюта6,
	|	НачисленияСотрудника.ДатаДействия
	|ПОМЕСТИТЬ Начисления
	|ИЗ
	|	НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидРасчета = НачисленияНовойПозицииСрезПоследних.ВидРасчета
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель1 = НачисленияНовойПозицииСрезПоследних.Показатель1
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель2 = НачисленияНовойПозицииСрезПоследних.Показатель2
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель3 = НачисленияНовойПозицииСрезПоследних.Показатель3
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель4 = НачисленияНовойПозицииСрезПоследних.Показатель4
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель5 = НачисленияНовойПозицииСрезПоследних.Показатель5
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель6 = НачисленияНовойПозицииСрезПоследних.Показатель6
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияНовойПозицииСрезПоследних.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияСотрудника КАК НачисленияСотрудника
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидРасчета = НачисленияСотрудника.ВидРасчета
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель1 = НачисленияСотрудника.Показатель1
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель2 = НачисленияСотрудника.Показатель2
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель3 = НачисленияСотрудника.Показатель3
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель4 = НачисленияСотрудника.Показатель4
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель5 = НачисленияСотрудника.Показатель5
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель6 = НачисленияСотрудника.Показатель6
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияСотрудника.Сотрудник
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять),
	|	НачисленияСотрудника.Сотрудник,
	|	НачисленияСотрудника.Физлицо,
	|	НачисленияСотрудника.ВидРасчета,
	|	НачисленияСотрудника.Показатель1,
	|	НачисленияСотрудника.Показатель2,
	|	НачисленияСотрудника.Показатель3,
	|	НачисленияСотрудника.Показатель4,
	|	НачисленияСотрудника.Показатель5,
	|	НачисленияСотрудника.Показатель6,
	|	НачисленияСотрудника.Валюта1,
	|	НачисленияСотрудника.Валюта2,
	|	НачисленияСотрудника.Валюта3,
	|	НачисленияСотрудника.Валюта4,
	|	НачисленияСотрудника.Валюта5,
	|	НачисленияСотрудника.Валюта6,
	|	НачисленияСотрудника.ДатаДействия
	|ИЗ
	|	НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидРасчета = НачисленияНовойПозицииСрезПоследних.ВидРасчета
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель1 = НачисленияНовойПозицииСрезПоследних.Показатель1
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель2 = НачисленияНовойПозицииСрезПоследних.Показатель2
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель3 = НачисленияНовойПозицииСрезПоследних.Показатель3
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель4 = НачисленияНовойПозицииСрезПоследних.Показатель4
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель5 = НачисленияНовойПозицииСрезПоследних.Показатель5
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель6 = НачисленияНовойПозицииСрезПоследних.Показатель6
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияНовойПозицииСрезПоследних.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияСотрудника КАК НачисленияСотрудника
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидРасчета = НачисленияСотрудника.ВидРасчета
	|			И (НачисленияСтаройПозицииСрезПоследних.Показатель1 <> НачисленияСотрудника.Показатель1
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель2 <> НачисленияСотрудника.Показатель2
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель3 <> НачисленияСотрудника.Показатель3
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель4 <> НачисленияСотрудника.Показатель4
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель5 <> НачисленияСотрудника.Показатель5
	|				ИЛИ НачисленияСтаройПозицииСрезПоследних.Показатель6 <> НачисленияСотрудника.Показатель6)
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияСотрудника.Сотрудник
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать),
	|	ДанныеСотрудников.Сотрудник,
	|	ДанныеСотрудников.Физлицо,
	|	НачисленияНовойПозицииСрезПоследних.ВидРасчета,
	|	НачисленияНовойПозицииСрезПоследних.Показатель1,
	|	НачисленияНовойПозицииСрезПоследних.Показатель2,
	|	НачисленияНовойПозицииСрезПоследних.Показатель3,
	|	НачисленияНовойПозицииСрезПоследних.Показатель4,
	|	НачисленияНовойПозицииСрезПоследних.Показатель5,
	|	НачисленияНовойПозицииСрезПоследних.Показатель6,
	|	НачисленияНовойПозицииСрезПоследних.Валюта1,
	|	НачисленияНовойПозицииСрезПоследних.Валюта2,
	|	НачисленияНовойПозицииСрезПоследних.Валюта3,
	|	НачисленияНовойПозицииСрезПоследних.Валюта4,
	|	НачисленияНовойПозицииСрезПоследних.Валюта5,
	|	НачисленияНовойПозицииСрезПоследних.Валюта6,
	|	ДанныеСотрудников.ДатаДействия
	|ИЗ
	|	НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ПО (НачисленияСтаройПозицииСрезПоследних.ВидРасчета = НачисленияНовойПозицииСрезПоследних.ВидРасчета)
	|			И НачисленияНовойПозицииСрезПоследних.Сотрудник = НачисленияСтаройПозицииСрезПоследних.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеСотрудников КАК ДанныеСотрудников
	|		ПО НачисленияНовойПозицииСрезПоследних.Сотрудник = ДанныеСотрудников.Сотрудник
	|ГДЕ
	|	НачисленияСтаройПозицииСрезПоследних.ВидРасчета ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить),
	|	ДанныеСотрудников.Сотрудник,
	|	ДанныеСотрудников.Физлицо,
	|	НачисленияСтаройПозицииСрезПоследних.ВидРасчета,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель1,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель2,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель3,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель4,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель5,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель6,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта1,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта2,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта3,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта4,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта5,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта6,
	|	ДанныеСотрудников.ДатаДействия
	|ИЗ
	|	НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидРасчета = НачисленияНовойПозицииСрезПоследних.ВидРасчета
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияНовойПозицииСрезПоследних.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеСотрудников КАК ДанныеСотрудников
	|		ПО НачисленияСтаройПозицииСрезПоследних.Сотрудник = ДанныеСотрудников.Сотрудник
	|ГДЕ
	|	НачисленияНовойПозицииСрезПоследних.ВидРасчета ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать),
	|	ДанныеСотрудников.Сотрудник,
	|	ДанныеСотрудников.Физлицо,
	|	НачисленияСтаройПозицииСрезПоследних.ВидРасчета,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель1,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель2,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель3,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель4,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель5,
	|	НачисленияСтаройПозицииСрезПоследних.Показатель6,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта1,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта2,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта3,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта4,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта5,
	|	НачисленияСтаройПозицииСрезПоследних.Валюта6,
	|	ДанныеСотрудников.ДатаДействия
	|ИЗ
	|	НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ПО НачисленияСтаройПозицииСрезПоследних.ВидРасчета = НачисленияНовойПозицииСрезПоследних.ВидРасчета
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель1 = НачисленияНовойПозицииСрезПоследних.Показатель1
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель2 = НачисленияНовойПозицииСрезПоследних.Показатель2
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель3 = НачисленияНовойПозицииСрезПоследних.Показатель3
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель4 = НачисленияНовойПозицииСрезПоследних.Показатель4
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель5 = НачисленияНовойПозицииСрезПоследних.Показатель5
	|			И НачисленияСтаройПозицииСрезПоследних.Показатель6 = НачисленияНовойПозицииСрезПоследних.Показатель6
	|			И НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияНовойПозицииСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачисленияСотрудника КАК НачисленияСотрудника
	|		ПО НачисленияСтаройПозицииСрезПоследних.Сотрудник = НачисленияСотрудника.Сотрудник
	|			И НачисленияСтаройПозицииСрезПоследних.ВидРасчета = НачисленияСотрудника.ВидРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеСотрудников КАК ДанныеСотрудников
	|		ПО НачисленияСтаройПозицииСрезПоследних.Сотрудник = ДанныеСотрудников.Сотрудник
	|ГДЕ
	|	НачисленияСотрудника.ВидРасчета ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Изменить),
	|	НачисленияОтличаютсяЗначениямиПоказателей.Сотрудник,
	|	НачисленияОтличаютсяЗначениямиПоказателей.Физлицо,
	|	НачисленияОтличаютсяЗначениямиПоказателей.ВидРасчета,
	|	НачисленияОтличаютсяЗначениямиПоказателей.Показатель1,
	|	НачисленияОтличаютсяЗначениямиПоказателей.Показатель2,
	|	НачисленияОтличаютсяЗначениямиПоказателей.Показатель3,
	|	НачисленияОтличаютсяЗначениямиПоказателей.Показатель4,
	|	НачисленияОтличаютсяЗначениямиПоказателей.Показатель5,
	|	НачисленияОтличаютсяЗначениямиПоказателей.Показатель6,
	|	НачисленияОтличаютсяЗначениямиПоказателей.Валюта1,
	|	НачисленияОтличаютсяЗначениямиПоказателей.Валюта2,
	|	НачисленияОтличаютсяЗначениямиПоказателей.Валюта3,
	|	НачисленияОтличаютсяЗначениямиПоказателей.Валюта4,
	|	НачисленияОтличаютсяЗначениямиПоказателей.Валюта5,
	|	НачисленияОтличаютсяЗначениямиПоказателей.Валюта6,
	|	НачисленияОтличаютсяЗначениямиПоказателей.ДатаДействия
	|ИЗ
	|	НачисленияОтличаютсяЗначениямиПоказателей КАК НачисленияОтличаютсяЗначениямиПоказателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияЕстьВоВсехНаборах КАК НачисленияЕстьВоВсехНаборах
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачисленияПозицийОтличаютсяЗначениямиПоказателей КАК НачисленияПозицийОтличаютсяЗначениямиПоказателей
	|			ПО (НачисленияПозицийОтличаютсяЗначениямиПоказателей.Сотрудник = НачисленияЕстьВоВсехНаборах.Сотрудник)
	|				И (НачисленияПозицийОтличаютсяЗначениямиПоказателей.ВидРасчета = НачисленияЕстьВоВсехНаборах.ВидРасчета)
	|		ПО НачисленияОтличаютсяЗначениямиПоказателей.Сотрудник = НачисленияЕстьВоВсехНаборах.Сотрудник
	|			И НачисленияОтличаютсяЗначениямиПоказателей.ВидРасчета = НачисленияЕстьВоВсехНаборах.ВидРасчета
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять),
	|	НачисленияСотрудника.Сотрудник,
	|	НачисленияСотрудника.Физлицо,
	|	НачисленияСотрудника.ВидРасчета,
	|	НачисленияСотрудника.Показатель1,
	|	НачисленияСотрудника.Показатель2,
	|	НачисленияСотрудника.Показатель3,
	|	НачисленияСотрудника.Показатель4,
	|	НачисленияСотрудника.Показатель5,
	|	НачисленияСотрудника.Показатель6,
	|	НачисленияСотрудника.Валюта1,
	|	НачисленияСотрудника.Валюта2,
	|	НачисленияСотрудника.Валюта3,
	|	НачисленияСотрудника.Валюта4,
	|	НачисленияСотрудника.Валюта5,
	|	НачисленияСотрудника.Валюта6,
	|	НачисленияСотрудника.ДатаДействия
	|ИЗ
	|	НачисленияСотрудника КАК НачисленияСотрудника
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачисленияНовойПозицииСрезПоследних КАК НачисленияНовойПозицииСрезПоследних
	|		ПО НачисленияСотрудника.ВидРасчета = НачисленияНовойПозицииСрезПоследних.ВидРасчета
	|			И НачисленияСотрудника.Сотрудник = НачисленияНовойПозицииСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачисленияСтаройПозицииСрезПоследних КАК НачисленияСтаройПозицииСрезПоследних
	|		ПО (НачисленияСтаройПозицииСрезПоследних.ВидРасчета = НачисленияСотрудника.ВидРасчета)
	|			И НачисленияСотрудника.Сотрудник = НачисленияСтаройПозицииСрезПоследних.Сотрудник
	|ГДЕ
	|	НачисленияНовойПозицииСрезПоследних.ВидРасчета ЕСТЬ NULL 
	|	И НачисленияСтаройПозицииСрезПоследних.ВидРасчета ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА Начисления.ВидРасчета ССЫЛКА ПланВидовРасчета.УправленческиеНачисления
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоНачисление,
	|	Начисления.Действие КАК Действие,
	|	Начисления.ДатаДействия,
	|	Начисления.Сотрудник,
	|	Начисления.Физлицо КАК Физлицо,
	|	Начисления.ВидРасчета,
	|	ЕСТЬNULL(Начисления.Показатель1, 0) КАК Показатель1,
	|	ЕСТЬNULL(Начисления.Показатель2, 0) КАК Показатель2,
	|	ЕСТЬNULL(Начисления.Показатель3, 0) КАК Показатель3,
	|	ЕСТЬNULL(Начисления.Показатель4, 0) КАК Показатель4,
	|	ЕСТЬNULL(Начисления.Показатель5, 0) КАК Показатель5,
	|	ЕСТЬNULL(Начисления.Показатель6, 0) КАК Показатель6,
	|	ЕСТЬNULL(Начисления.Валюта1, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта1,
	|	ЕСТЬNULL(Начисления.Валюта2, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта2,
	|	ЕСТЬNULL(Начисления.Валюта3, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта3,
	|	ЕСТЬNULL(Начисления.Валюта4, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта4,
	|	ЕСТЬNULL(Начисления.Валюта5, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта5,
	|	ЕСТЬNULL(Начисления.Валюта6, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта6
	|ИЗ
	|	Начисления КАК Начисления";
	
	// В оставшейся части запроса объединяются выборки, сформированные по следующим условиям:
	//	- часть 1: вид расчета есть в наборах старой и новой позиций, в "наборе сотруднике" (везде)
	//  и все записи равны по показателям - не изменять
	//	- часть 2: есть везде, в старой и новой позициях по показателям равны, в сотруднике 
	//  значения показателей отличаются	- не изменять
	//	- часть 3: есть в наборе новой позиции, но нет в наборе старой - начать
	//	- часть 4: есть в наборе старой позиции, но нет в наборе новой - прекратить
	//	- часть 5: есть в наборе старой позиции, есть в наборе новой, но нет в наборе сотрудника - начать
	//	- часть 6: есть в наборе старой, есть в наборе новой, есть в наборе сотрудника, 
	//	отличаются значения показателей - изменить (занулить показатели)
	//	- часть 7: все, чего нет ни в наборе старой ни в наборе новой позиций - не изменять
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Процедура получает значения показателей по данным управленческого учета
//  для сотрудников, перечисленных во временной таблице запроса
//
Процедура СформироватьЗапросЗначенийПоказателейУправленческогоУчета(Запрос) Экспорт
	                                                              
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КурсыВалютДляРасчетовСПерсоналом.Валюта,
	|	КурсыВалютДляРасчетовСПерсоналом.Курс,
	|	КурсыВалютДляРасчетовСПерсоналом.Кратность
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК КурсыВалютДляРасчетовСПерсоналом
	|ГДЕ
	|	КурсыВалютДляРасчетовСПерсоналом.Период = &парамДатаВалютногоУчета
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Константы.ВалютаРегламентированногоУчета,
	|	1,
	|	1
	|ИЗ
	|	Константы КАК Константы
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка),
	|	1,
	|	1
	|;
	|";
	
	ТекстЗапроса = ТекстЗапроса + НачислениеЗарплатыРаботникамПереопределяемый.ТекстЗапросаПоказателейВидаРасчетов();
	
	ТекстЗапроса = ТекстЗапроса + "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗначенияПоказателейСхемМотивации.Период КАК ПериодДействия,
	|	ДвиженияРаботников.Физлицо КАК Физлицо,
	|	ЗначенияПоказателейСхемМотивации.Показатель КАК Показатель,
	|	ЗначенияПоказателейСхемМотивации.Значение КАК Значение,
	|	ЗначенияПоказателейСхемМотивации.Валюта КАК Валюта
	|ПОМЕСТИТЬ ЗначенияЕжемесячныхПоказателей
	|ИЗ
	|	ВТ_ТаблицаДвиженийРаботников КАК ДвиженияРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации
	|		ПО (ЗначенияПоказателейСхемМотивации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|			И (ЗначенияПоказателейСхемМотивации.Период = НАЧАЛОПЕРИОДА(&парамНачало, МЕСЯЦ))
	|			И (ВЫБОР
	|				КОГДА ЗначенияПоказателейСхемМотивации.Показатель.ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	|						ИЛИ ЗначенияПоказателейСхемМотивации.Показатель.ВидПоказателя ЕСТЬ NULL 
	|					ТОГДА ДвиженияРаботников.Физлицо = ЗначенияПоказателейСхемМотивации.Сотрудник.Физлицо
	|				КОГДА ЗначенияПоказателейСхемМотивации.Показатель.ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
	|					ТОГДА ДвиженияРаботников.Подразделение = ЗначенияПоказателейСхемМотивации.Подразделение
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|;
	|";
	
	НачислениеЗарплатыРаботникамПереопределяемый.ДобавитьОбъединениеЗначенийЕжемесячныхПоказателей(ТекстЗапроса);
	
	ТекстЗапроса = ТекстЗапроса + "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ПлановыеНачисленияРаботников.Период,
	|	ПлановыеНачисленияРаботников.ФизЛицо КАК ФизЛицо,
	|	ПлановыеНачисленияРаботников.Действует КАК Действует,
	|	ПлановыеНачисленияРаботников.ВидРасчета КАК ВидРасчета,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияРаботников.ВидРасчетаИзмерение = ЗНАЧЕНИЕ(ПланВидовРасчета.УправленческиеНачисления.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОсновноеНачисление,
	|	ПлановыеНачисленияРаботников.Показатель1 КАК Показатель1,
	|	ПлановыеНачисленияРаботников.Показатель2 КАК Показатель2,
	|	ПлановыеНачисленияРаботников.Показатель3 КАК Показатель3,
	|	ПлановыеНачисленияРаботников.Показатель4 КАК Показатель4,
	|	ПлановыеНачисленияРаботников.Показатель5 КАК Показатель5,
	|	ПлановыеНачисленияРаботников.Показатель6 КАК Показатель6,
	|	ПлановыеНачисленияРаботников.Валюта1 КАК Валюта1,
	|	ПлановыеНачисленияРаботников.Валюта2 КАК Валюта2,
	|	ПлановыеНачисленияРаботников.Валюта3 КАК Валюта3,
	|	ПлановыеНачисленияРаботников.Валюта4 КАК Валюта4,
	|	ПлановыеНачисленияРаботников.Валюта5 КАК Валюта5,
	|	ПлановыеНачисленияРаботников.Валюта6 КАК Валюта6
	|ПОМЕСТИТЬ ЗаписиПлановыхНачислений
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботников.СрезПоследних(
	|			&парамНачало,
	|			Физлицо В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Физлицо
	|				ИЗ
	|					ВТ_ТаблицаДвиженийРаботников)) КАК ПлановыеНачисленияРаботников
	|ГДЕ
	|	ПлановыеНачисленияРаботников.Действует
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеНачисленияРаботников.Период,
	|	ПлановыеНачисленияРаботников.ФизЛицо,
	|	ПлановыеНачисленияРаботников.Действует,
	|	ПлановыеНачисленияРаботников.ВидРасчета,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияРаботников.ВидРасчетаИзмерение = ЗНАЧЕНИЕ(ПланВидовРасчета.УправленческиеНачисления.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ПлановыеНачисленияРаботников.Показатель1,
	|	ПлановыеНачисленияРаботников.Показатель2,
	|	ПлановыеНачисленияРаботников.Показатель3,
	|	ПлановыеНачисленияРаботников.Показатель4,
	|	ПлановыеНачисленияРаботников.Показатель5,
	|	ПлановыеНачисленияРаботников.Показатель6,
	|	ПлановыеНачисленияРаботников.Валюта1,
	|	ПлановыеНачисленияРаботников.Валюта2,
	|	ПлановыеНачисленияРаботников.Валюта3,
	|	ПлановыеНачисленияРаботников.Валюта4,
	|	ПлановыеНачисленияРаботников.Валюта5,
	|	ПлановыеНачисленияРаботников.Валюта6
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботников КАК ПлановыеНачисленияРаботников
	|ГДЕ
	|	ПлановыеНачисленияРаботников.ФизЛицо В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				СписокРаботников.Физлицо
	|			ИЗ
	|				ВТ_ТаблицаДвиженийРаботников КАК СписокРаботников)
	|	И ПлановыеНачисленияРаботников.Период > &парамНачало
	|	И ПлановыеНачисленияРаботников.Период <= &парамКонец
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидРасчета
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиПлановыхНачислений.Период,
	|	ЗаписиПлановыхНачислений.ФизЛицо,
	|	ЗаписиПлановыхНачислений.Действует,
	|	ЗаписиПлановыхНачислений.ВидРасчета,
	|	ЗаписиПлановыхНачислений.ОсновноеНачисление,
	|	ЗаписиПлановыхНачислений.Показатель1 КАК Показатель1,
	|	ЗаписиПлановыхНачислений.Показатель2 КАК Показатель2,
	|	ЗаписиПлановыхНачислений.Показатель3 КАК Показатель3,
	|	ЗаписиПлановыхНачислений.Показатель4 КАК Показатель4,
	|	ЗаписиПлановыхНачислений.Показатель5 КАК Показатель5,
	|	ЗаписиПлановыхНачислений.Показатель6 КАК Показатель6,
	|	ЗаписиПлановыхНачислений.Валюта1 КАК Валюта1,
	|	ЗаписиПлановыхНачислений.Валюта2 КАК Валюта2,
	|	ЗаписиПлановыхНачислений.Валюта3 КАК Валюта3,
	|	ЗаписиПлановыхНачислений.Валюта4 КАК Валюта4,
	|	ЗаписиПлановыхНачислений.Валюта5 КАК Валюта5,
	|	ЗаписиПлановыхНачислений.Валюта6 КАК Валюта6,
	|	ПоказательВидаРасчета1.Показатель КАК ПоказательСсылка1,
	|	ПоказательВидаРасчета2.Показатель КАК ПоказательСсылка2,
	|	ПоказательВидаРасчета3.Показатель КАК ПоказательСсылка3,
	|	ПоказательВидаРасчета4.Показатель КАК ПоказательСсылка4,
	|	ПоказательВидаРасчета5.Показатель КАК ПоказательСсылка5,
	|	ПоказательВидаРасчета6.Показатель КАК ПоказательСсылка6
	|ПОМЕСТИТЬ ПлановыеНачисления
	|ИЗ
	|	ЗаписиПлановыхНачислений КАК ЗаписиПлановыхНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиВидаРасчета КАК ПоказательВидаРасчета1
	|		ПО ЗаписиПлановыхНачислений.ВидРасчета = ПоказательВидаРасчета1.ВидРасчета
	|			И (ПоказательВидаРасчета1.НомерПоказателя = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиВидаРасчета КАК ПоказательВидаРасчета2
	|		ПО ЗаписиПлановыхНачислений.ВидРасчета = ПоказательВидаРасчета2.ВидРасчета
	|			И (ПоказательВидаРасчета2.НомерПоказателя = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиВидаРасчета КАК ПоказательВидаРасчета3
	|		ПО ЗаписиПлановыхНачислений.ВидРасчета = ПоказательВидаРасчета3.ВидРасчета
	|			И (ПоказательВидаРасчета3.НомерПоказателя = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиВидаРасчета КАК ПоказательВидаРасчета4
	|		ПО ЗаписиПлановыхНачислений.ВидРасчета = ПоказательВидаРасчета4.ВидРасчета
	|			И (ПоказательВидаРасчета4.НомерПоказателя = 4)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиВидаРасчета КАК ПоказательВидаРасчета5
	|		ПО ЗаписиПлановыхНачислений.ВидРасчета = ПоказательВидаРасчета5.ВидРасчета
	|			И (ПоказательВидаРасчета5.НомерПоказателя = 5)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиВидаРасчета КАК ПоказательВидаРасчета6
	|		ПО ЗаписиПлановыхНачислений.ВидРасчета = ПоказательВидаРасчета6.ВидРасчета
	|			И (ПоказательВидаРасчета6.НомерПоказателя = 6)
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ПлановыеУдержанияРаботников.Период,
	|	ПлановыеУдержанияРаботников.ФизЛицо КАК ФизЛицо,
	|	ПлановыеУдержанияРаботников.Действует КАК Действует,
	|	ПлановыеУдержанияРаботников.ВидРасчета КАК ВидРасчета,
	|	ПлановыеУдержанияРаботников.Показатель1 КАК Показатель1,
	|	ПлановыеУдержанияРаботников.Показатель2 КАК Показатель2,
	|	ПлановыеУдержанияРаботников.Показатель3 КАК Показатель3,
	|	ПлановыеУдержанияРаботников.Показатель4 КАК Показатель4,
	|	ПлановыеУдержанияРаботников.Показатель5 КАК Показатель5,
	|	ПлановыеУдержанияРаботников.Показатель6 КАК Показатель6,
	|	ПлановыеУдержанияРаботников.Валюта1 КАК Валюта1,
	|	ПлановыеУдержанияРаботников.Валюта2 КАК Валюта2,
	|	ПлановыеУдержанияРаботников.Валюта3 КАК Валюта3,
	|	ПлановыеУдержанияРаботников.Валюта4 КАК Валюта4,
	|	ПлановыеУдержанияРаботников.Валюта5 КАК Валюта5,
	|	ПлановыеУдержанияРаботников.Валюта6 КАК Валюта6,
	|	ПлановыеУдержанияРаботников.ДокументОснование
	|ПОМЕСТИТЬ ЗаписиПлановыхУдержаний
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботников.СрезПоследних(
	|			&парамНачало,
	|			Физлицо В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Физлицо
	|				ИЗ
	|					ВТ_ТаблицаДвиженийРаботников)) КАК ПлановыеУдержанияРаботников
	|ГДЕ
	|	ПлановыеУдержанияРаботников.Действует
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеУдержанияРаботников.Период,
	|	ПлановыеУдержанияРаботников.ФизЛицо,
	|	ПлановыеУдержанияРаботников.Действует,
	|	ПлановыеУдержанияРаботников.ВидРасчета,
	|	ПлановыеУдержанияРаботников.Показатель1,
	|	ПлановыеУдержанияРаботников.Показатель2,
	|	ПлановыеУдержанияРаботников.Показатель3,
	|	ПлановыеУдержанияРаботников.Показатель4,
	|	ПлановыеУдержанияРаботников.Показатель5,
	|	ПлановыеУдержанияРаботников.Показатель6,
	|	ПлановыеУдержанияРаботников.Валюта1,
	|	ПлановыеУдержанияРаботников.Валюта2,
	|	ПлановыеУдержанияРаботников.Валюта3,
	|	ПлановыеУдержанияРаботников.Валюта4,
	|	ПлановыеУдержанияРаботников.Валюта5,
	|	ПлановыеУдержанияРаботников.Валюта6,
	|	ПлановыеУдержанияРаботников.ДокументОснование
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботников КАК ПлановыеУдержанияРаботников
	|ГДЕ
	|	ПлановыеУдержанияРаботников.ФизЛицо В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				СписокРаботников.Физлицо
	|			ИЗ
	|				ВТ_ТаблицаДвиженийРаботников КАК СписокРаботников)
	|	И ПлановыеУдержанияРаботников.Период > &парамНачало
	|	И ПлановыеУдержанияРаботников.Период <= &парамКонец
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидРасчета
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиПлановыхУдержаний.Период,
	|	ЗаписиПлановыхУдержаний.ФизЛицо,
	|	ЗаписиПлановыхУдержаний.Действует,
	|	ЗаписиПлановыхУдержаний.ВидРасчета,
	|	ЗаписиПлановыхУдержаний.Показатель1 КАК Показатель1,
	|	ЗаписиПлановыхУдержаний.Показатель2 КАК Показатель2,
	|	ЗаписиПлановыхУдержаний.Показатель3 КАК Показатель3,
	|	ЗаписиПлановыхУдержаний.Показатель4 КАК Показатель4,
	|	ЗаписиПлановыхУдержаний.Показатель5 КАК Показатель5,
	|	ЗаписиПлановыхУдержаний.Показатель6 КАК Показатель6,
	|	ЗаписиПлановыхУдержаний.Валюта1 КАК Валюта1,
	|	ЗаписиПлановыхУдержаний.Валюта2 КАК Валюта2,
	|	ЗаписиПлановыхУдержаний.Валюта3 КАК Валюта3,
	|	ЗаписиПлановыхУдержаний.Валюта4 КАК Валюта4,
	|	ЗаписиПлановыхУдержаний.Валюта5 КАК Валюта5,
	|	ЗаписиПлановыхУдержаний.Валюта6 КАК Валюта6,
	|	ПоказательВидаРасчета1.Показатель КАК ПоказательСсылка1,
	|	ПоказательВидаРасчета2.Показатель КАК ПоказательСсылка2,
	|	ПоказательВидаРасчета3.Показатель КАК ПоказательСсылка3,
	|	ПоказательВидаРасчета4.Показатель КАК ПоказательСсылка4,
	|	ПоказательВидаРасчета5.Показатель КАК ПоказательСсылка5,
	|	ПоказательВидаРасчета6.Показатель КАК ПоказательСсылка6,
	|	ЗаписиПлановыхУдержаний.ДокументОснование
	|ПОМЕСТИТЬ ПлановыеУдержания
	|ИЗ
	|	ЗаписиПлановыхУдержаний КАК ЗаписиПлановыхУдержаний
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиВидаРасчета КАК ПоказательВидаРасчета1
	|		ПО ЗаписиПлановыхУдержаний.ВидРасчета = ПоказательВидаРасчета1.ВидРасчета
	|			И (ПоказательВидаРасчета1.НомерПоказателя = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиВидаРасчета КАК ПоказательВидаРасчета2
	|		ПО ЗаписиПлановыхУдержаний.ВидРасчета = ПоказательВидаРасчета2.ВидРасчета
	|			И (ПоказательВидаРасчета2.НомерПоказателя = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиВидаРасчета КАК ПоказательВидаРасчета3
	|		ПО ЗаписиПлановыхУдержаний.ВидРасчета = ПоказательВидаРасчета3.ВидРасчета
	|			И (ПоказательВидаРасчета3.НомерПоказателя = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиВидаРасчета КАК ПоказательВидаРасчета4
	|		ПО ЗаписиПлановыхУдержаний.ВидРасчета = ПоказательВидаРасчета4.ВидРасчета
	|			И (ПоказательВидаРасчета4.НомерПоказателя = 4)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиВидаРасчета КАК ПоказательВидаРасчета5
	|		ПО ЗаписиПлановыхУдержаний.ВидРасчета = ПоказательВидаРасчета5.ВидРасчета
	|			И (ПоказательВидаРасчета5.НомерПоказателя = 5)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиВидаРасчета КАК ПоказательВидаРасчета6
	|		ПО ЗаписиПлановыхУдержаний.ВидРасчета = ПоказательВидаРасчета6.ВидРасчета
	|			И (ПоказательВидаРасчета6.НомерПоказателя = 6)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановыеПоказатели.Период,
	|	ПлановыеПоказатели.ФизЛицо,
	|	ВЫБОР
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 1
	|			ТОГДА ПлановыеПоказатели.ПоказательСсылка1
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 2
	|			ТОГДА ПлановыеПоказатели.ПоказательСсылка2
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 3
	|			ТОГДА ПлановыеПоказатели.ПоказательСсылка3
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 4
	|			ТОГДА ПлановыеПоказатели.ПоказательСсылка4
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 5
	|			ТОГДА ПлановыеПоказатели.ПоказательСсылка5
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 6
	|			ТОГДА ПлановыеПоказатели.ПоказательСсылка6
	|	КОНЕЦ КАК Показатель,
	|	ВЫБОР
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 1
	|			ТОГДА ПлановыеПоказатели.Показатель1
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 2
	|			ТОГДА ПлановыеПоказатели.Показатель2
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 3
	|			ТОГДА ПлановыеПоказатели.Показатель3
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 4
	|			ТОГДА ПлановыеПоказатели.Показатель4
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 5
	|			ТОГДА ПлановыеПоказатели.Показатель5
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 6
	|			ТОГДА ПлановыеПоказатели.Показатель6
	|	КОНЕЦ КАК Значение,
	|	ВЫБОР
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 1
	|			ТОГДА ПлановыеПоказатели.Валюта1
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 2
	|			ТОГДА ПлановыеПоказатели.Валюта2
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 3
	|			ТОГДА ПлановыеПоказатели.Валюта3
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 4
	|			ТОГДА ПлановыеПоказатели.Валюта4
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 5
	|			ТОГДА ПлановыеПоказатели.Валюта5
	|		КОГДА ПлановыеПоказатели.НомерПоказателя = 6
	|			ТОГДА ПлановыеПоказатели.Валюта6
	|	КОНЕЦ КАК Валюта
	|ПОМЕСТИТЬ ЗначенияПлановыхПоказателей
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПлановыеНачисления.Период КАК Период,
	|		ПлановыеНачисления.ФизЛицо КАК ФизЛицо,
	|		ПоказателиВидаРасчета.НомерПоказателя КАК НомерПоказателя,
	|		ПлановыеНачисления.ПоказательСсылка1 КАК ПоказательСсылка1,
	|		ПлановыеНачисления.ПоказательСсылка2 КАК ПоказательСсылка2,
	|		ПлановыеНачисления.ПоказательСсылка3 КАК ПоказательСсылка3,
	|		ПлановыеНачисления.ПоказательСсылка4 КАК ПоказательСсылка4,
	|		ПлановыеНачисления.ПоказательСсылка5 КАК ПоказательСсылка5,
	|		ПлановыеНачисления.ПоказательСсылка6 КАК ПоказательСсылка6,
	|		ПлановыеНачисления.Показатель1 КАК Показатель1,
	|		ПлановыеНачисления.Показатель2 КАК Показатель2,
	|		ПлановыеНачисления.Показатель3 КАК Показатель3,
	|		ПлановыеНачисления.Показатель4 КАК Показатель4,
	|		ПлановыеНачисления.Показатель5 КАК Показатель5,
	|		ПлановыеНачисления.Показатель6 КАК Показатель6,
	|		ПлановыеНачисления.Валюта1 КАК Валюта1,
	|		ПлановыеНачисления.Валюта2 КАК Валюта2,
	|		ПлановыеНачисления.Валюта3 КАК Валюта3,
	|		ПлановыеНачисления.Валюта4 КАК Валюта4,
	|		ПлановыеНачисления.Валюта5 КАК Валюта5,
	|		ПлановыеНачисления.Валюта6 КАК Валюта6
	|	ИЗ
	|		ПлановыеНачисления КАК ПлановыеНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиВидаРасчета КАК ПоказателиВидаРасчета
	|			ПО ПлановыеНачисления.ВидРасчета = ПоказателиВидаРасчета.ВидРасчета
	|	ГДЕ
	|		ПоказателиВидаРасчета.ЗапрашиватьПриКадровыхПеремещениях
	|		И ПоказателиВидаРасчета.Показатель.ВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПлановыеУдержания.Период КАК Период,
	|		ПлановыеУдержания.ФизЛицо КАК ФизЛицо,
	|		ПоказателиВидаРасчета.НомерПоказателя КАК НомерПоказателя,
	|		ПлановыеУдержания.ПоказательСсылка1 КАК ПоказательСсылка1,
	|		ПлановыеУдержания.ПоказательСсылка2 КАК ПоказательСсылка2,
	|		ПлановыеУдержания.ПоказательСсылка3 КАК ПоказательСсылка3,
	|		ПлановыеУдержания.ПоказательСсылка4 КАК ПоказательСсылка4,
	|		ПлановыеУдержания.ПоказательСсылка5 КАК ПоказательСсылка5,
	|		ПлановыеУдержания.ПоказательСсылка6 КАК ПоказательСсылка6,
	|		ПлановыеУдержания.Показатель1 КАК Показатель1,
	|		ПлановыеУдержания.Показатель2 КАК Показатель2,
	|		ПлановыеУдержания.Показатель3 КАК Показатель3,
	|		ПлановыеУдержания.Показатель4 КАК Показатель4,
	|		ПлановыеУдержания.Показатель5 КАК Показатель5,
	|		ПлановыеУдержания.Показатель6 КАК Показатель6,
	|		ПлановыеУдержания.Валюта1 КАК Валюта1,
	|		ПлановыеУдержания.Валюта2 КАК Валюта2,
	|		ПлановыеУдержания.Валюта3 КАК Валюта3,
	|		ПлановыеУдержания.Валюта4 КАК Валюта4,
	|		ПлановыеУдержания.Валюта5 КАК Валюта5,
	|		ПлановыеУдержания.Валюта6 КАК Валюта6
	|	ИЗ
	|		ПлановыеУдержания КАК ПлановыеУдержания
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиВидаРасчета КАК ПоказателиВидаРасчета
	|			ПО ПлановыеУдержания.ВидРасчета = ПоказателиВидаРасчета.ВидРасчета
	|	ГДЕ
	|		ПоказателиВидаРасчета.ЗапрашиватьПриКадровыхПеремещениях
	|		И ПоказателиВидаРасчета.Показатель.ВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)	) КАК ПлановыеПоказатели
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПоказателей.ПериодДействия,
	|	ЗначенияПоказателей.Физлицо,
	|	ЗначенияПоказателей.Показатель,
	|	ЗначенияПоказателей.Значение,
	|	ВЫБОР
	|		КОГДА ЗначенияПоказателей.Показатель.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ЗначенияПоказателей.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
	|						ТОГДА ЗначенияПоказателей.Показатель.Валюта
	|					КОГДА ЗначенияПоказателей.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.СуммаПоказателя)
	|							И ЗначенияПоказателей.Показатель.СуммируемыйПоказатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
	|						ТОГДА ЗначенияПоказателей.Показатель.СуммируемыйПоказатель.Валюта
	|					ИНАЧЕ ЗначенияПоказателей.Валюта
	|				КОНЕЦ
	|		ИНАЧЕ ЗначенияПоказателей.Показатель.Валюта
	|	КОНЕЦ КАК Валюта
	|ПОМЕСТИТЬ ЗначенияПоказателейИсходнаяВалюта
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗначенияЕжемесячныхПоказателей.ПериодДействия КАК ПериодДействия,
	|		ЗначенияЕжемесячныхПоказателей.Физлицо КАК Физлицо,
	|		ЗначенияЕжемесячныхПоказателей.Показатель КАК Показатель,
	|		ЗначенияЕжемесячныхПоказателей.Значение КАК Значение,
	|		ЗначенияЕжемесячныхПоказателей.Валюта КАК Валюта
	|	ИЗ
	|		ЗначенияЕжемесячныхПоказателей КАК ЗначенияЕжемесячныхПоказателей
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗначенияПлановыхПоказателей.Период,
	|		ЗначенияПлановыхПоказателей.Физлицо,
	|		ЗначенияПлановыхПоказателей.Показатель,
	|		ЗначенияПлановыхПоказателей.Значение,
	|		ЗначенияПлановыхПоказателей.Валюта
	|	ИЗ
	|		ЗначенияПлановыхПоказателей КАК ЗначенияПлановыхПоказателей) КАК ЗначенияПоказателей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПоказателей.ПериодДействия,
	|	ЗначенияПоказателей.Физлицо,
	|	ЗначенияПоказателей.Показатель,
	|	ЗначенияПоказателей.Значение КАК ИсходноеЗначение,
	|	ВЫБОР
	|		КОГДА ЗначенияПоказателей.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
	|			ТОГДА ЗначенияПоказателей.Значение * (КурсВалютыПоказателя.Курс / КурсВалютыПоказателя.Кратность) / (КурсВалютыУпрУчета.Курс / КурсВалютыУпрУчета.Кратность)
	|		ИНАЧЕ ЗначенияПоказателей.Значение
	|	КОНЕЦ КАК Значение,
	|	ЗначенияПоказателей.Валюта,
	|	ВЫБОР
	|		КОГДА ЗначенияПоказателей.Показатель.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
	|				И (НЕ ЗначенияПоказателей.Валюта В (Константы.ВалютаУправленческогоУчета, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВводитсяВВалюте,
	|	КурсВалютыПоказателя.Курс / КурсВалютыПоказателя.Кратность / (КурсВалютыУпрУчета.Курс / КурсВалютыУпрУчета.Кратность) КАК КурсВалюты
	|ПОМЕСТИТЬ ЗначенияПоказателейИсходныйПериодДействия
	|ИЗ
	|	ЗначенияПоказателейИсходнаяВалюта КАК ЗначенияПоказателей
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсВалютыПоказателя
	|		ПО ЗначенияПоказателей.Валюта = КурсВалютыПоказателя.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсВалютыУпрУчета
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|			ПО (ИСТИНА)
	|		ПО (КурсВалютыУпрУчета.Валюта = Константы.ВалютаУправленческогоУчета)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗначенияПоказателей.ПериодДействия,
	|	ЗначенияПоказателей.Физлицо,
	|	ЗначенияПоказателей.Показатель
	|";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры
