
&НаКлиенте
Процедура СпособРасчетаОценкиПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.Шкала.Видимость = Ложь;
	//Элементы.ГруппаПривязкаКРеквизитам.Видимость = Ложь;
	Если Объект.Предопределенный Тогда
		//ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Объект.СпособРасчетаОценки = ПредопределенноеЗначение("Перечисление.узп_СпособыРасчетаОценок.РасчетПоШкале") Тогда 
		Элементы.Шкала.Видимость = Истина;
	КонецЕсли;
	//Если Объект.СпособРасчетаОценки = ПредопределенноеЗначение("Перечисление.узп_СпособыРасчетаОценок.РасчетПоШкалеСПривязкой") Тогда 
	//	Элементы.Шкала.Видимость = Истина;
	//	Элементы.ГруппаПривязкаКРеквизитам.Видимость = Истина;
	//КонецЕсли;
	Если Не Объект.ТипЗначения.Типы().Найти(Тип("Число")) = Неопределено Тогда 
		Элементы.ГруппаШкала.Видимость = Истина;
	ИначеЕсли Не Объект.ТипЗначения.Типы().Найти(Тип("Булево")) = Неопределено Тогда 
		Элементы.ГруппаШкала.Видимость = Истина;
	ИначеЕсли Не Объект.ТипЗначения.Типы().Найти(Тип("Дата")) = Неопределено Тогда 
		//Элементы.ГруппаШкала.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
	//ПроверитьТипМетаданных(Объект.Привязка,"Привязка");
	//ПроверитьТипМетаданных(Объект.Ключ,"Ключ");
КонецПроцедуры

&НаКлиенте
Процедура ТипЗначенияПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПривязкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//ПараметрыФормы = Новый Структура("Адрес,Вид", Объект.Привязка,"Привязка");
	//ФормаВыбораМетаданных = ПолучитьФорму("ПланВидовХарактеристик.узп_КритерииОценкиПоставщиков.Форма.ФормаВыбораМетаданных",ПараметрыФормы,ЭтаФорма);
	//ФормаВыбораМетаданных.Открыть();
КонецПроцедуры

&НаСервере
Функция ПроверитьТипМетаданных(Знач Адрес,Вид)
	Результат = Истина;
	Если Вид = "Привязка" Тогда
		Если ЗначениеЗаполнено(Адрес) Тогда 
			Позиция = Найти(Адрес, ".");
			КореньДанных = Лев(Адрес,Позиция - 1);
			Адрес = Прав(Адрес,СтрДлина(Адрес) - Позиция);
			Позиция = Найти(Адрес, ".");
			ОбъектДанных = Лев(Адрес,Позиция - 1);
			Адрес = Прав(Адрес,СтрДлина(Адрес) - Позиция);
			РеквизитДанных = Адрес;
			ТипВыбранныхМетаданных = Метаданные[КореньДанных][ОбъектДанных].Реквизиты[РеквизитДанных].Тип;
			Если Элементы.ТипЗначения.ДоступныеТипы.СодержитТип(ТипВыбранныхМетаданных.типы()[0]) = Истина тогда
				Объект.ТипЗначения = ТипВыбранныхМетаданных;
				Элементы.КартинкаПривязкаУспех.Картинка = БиблиотекаКартинок.ОперацияВыполненаУспешно;
			Иначе
				Результат = Ложь;
				Элементы.КартинкаПривязкаУспех.Картинка = БиблиотекаКартинок.ОперацияВыполненаСОшибками;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Тип выбранного реквизита не соответствует выбранному типу значения!";
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Вид = "Ключ" Тогда
		Если ЗначениеЗаполнено(Адрес) Тогда 
			Позиция = Найти(Адрес, ".");
			КореньДанных = Лев(Адрес,Позиция - 1);
			Адрес = Прав(Адрес,СтрДлина(Адрес) - Позиция);
			Позиция = Найти(Адрес, ".");
			ОбъектДанных = Лев(Адрес,Позиция - 1);
			Адрес = Прав(Адрес,СтрДлина(Адрес) - Позиция);
			РеквизитДанных = Адрес;
			Если ВРег(РеквизитДанных) = ВРег("Ссылка") Тогда
				ТипВыбранныхМетаданных = Метаданные[КореньДанных][ОбъектДанных].СтандартныеРеквизиты[РеквизитДанных].Тип;
			Иначе
				ТипВыбранныхМетаданных = Метаданные[КореньДанных][ОбъектДанных].Реквизиты[РеквизитДанных].Тип;
			КонецЕсли;
			//Если ТипВыбранныхМетаданных.типы()[0] = Тип("СправочникСсылка.Контрагенты") тогда
			//	Элементы.КартинкаКлючУспех.Картинка = БиблиотекаКартинок.ОперацияВыполненаУспешно;
			//Иначе
			//	Результат = Ложь;
			//	Элементы.КартинкаКлючУспех.Картинка = БиблиотекаКартинок.ОперацияВыполненаСОшибками;
			//	Сообщение = Новый СообщениеПользователю;
			//	Сообщение.Текст = "Тип выбранного реквизита не соответствует выбранному типу значения!";
			//	Сообщение.Сообщить();
			//КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура КлючНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//ПараметрыФормы = Новый Структура("Адрес,Вид", Объект.Ключ, "Ключ");
	//ФормаВыбораМетаданных = ПолучитьФорму("ПланВидовХарактеристик.узп_КритерииОценкиПоставщиков.Форма.ФормаВыбораМетаданных",ПараметрыФормы,ЭтаФорма);
	//ФормаВыбораМетаданных.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура Шкала(Команда)
	ПараметрыФормы = Новый Структура("Отбор", Новый Структура("Шкала",Объект.Шкала));
	Форма = ПолучитьФорму("РегистрСведений.узп_ШкалаОценкиПоставщиков.ФормаСписка",ПараметрыФормы);
	Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ШкалаПриИзменении(Элемент)
	ШкалаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ШкалаПриИзмененииНаСервере()
	//Объект.ТипЗначения.ПривестиЗначение(Объект.Шкала.ТипЗначенияШкалы);
КонецПроцедуры


