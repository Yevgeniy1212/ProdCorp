Перем глТекущийПользователь Экспорт; // текущий пользователь
Перем глОбщиеЗначения Экспорт;       // хранилище общих значений

// Процедура выполняется при старте системы во внешнем соединении
//
Процедура ПриНачалеРаботыСистемы()

	глТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
КонецПроцедуры //ПриНачалеРаботыСистемы()

// Процедура инициализирует глобальную переменную глТекущийПользователь.
// Переменная содержит ссылку на элемент справочника "Пользователи", 
// соответствующий текущему пользователю информационной базы.
//
// Параметры:
//  Нет.
//
Процедура ОпределитьТекущегоПользователя()

	Если ПустаяСтрока(ИмяПользователя()) Тогда

		ИмяПользователя           = "ВнешнееCоединение";
		ПолноеИмяПользователя     = "Внешнее соединение";

	Иначе

		ИмяПользователя           = ИмяПользователя();

		Если ПустаяСтрока(ПолноеИмяПользователя()) Тогда
			ПолноеИмяПользователя = ИмяПользователя;
		Иначе
			ПолноеИмяПользователя = ПолноеИмяПользователя();
		КонецЕсли;

	КонецЕсли;

	глТекущийПользователь = Справочники.Пользователи.НайтиПоКоду(ИмяПользователя);

	Если глТекущийПользователь = Справочники.Пользователи.ПустаяСсылка() Тогда

		ОбъектПользователь = Справочники.Пользователи.СоздатьЭлемент();

		ОбъектПользователь.Код          = ИмяПользователя;
		ОбъектПользователь.Наименование = ПолноеИмяПользователя;
		ОбъектПользователь.Записать();

		глТекущийПользователь = ОбъектПользователь.Ссылка;

		// Запишем в качестве основного ответственного самого пользователя.
		ЗаписьРегистра = РегистрыСведений.НастройкиПользователей.СоздатьМенеджерЗаписи();
		ЗаписьРегистра.Пользователь = ОбъектПользователь.Ссылка;
		ЗаписьРегистра.Настройка    = ПланыВидовХарактеристик.НастройкиПользователей.ОсновнойОтветственный;
		ЗаписьРегистра.Значение     = ОбъектПользователь.Ссылка;
		ЗаписьРегистра.Записать();

	КонецЕсли;

КонецПроцедуры // ОпределитьТекущегоПользователя()

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ЗАПОЛНЕНИЯ ПАРАМЕТРОВ СЕАНСА

//
//
Функция глЗначениеПеременной(Имя) Экспорт
	
	Возврат ОбщегоНазначения.ПолучитьЗначениеПеременной(Имя, глОбщиеЗначения);

КонецФункции

// Процедура установки значения экспортных переменных модуля приложения
//
// Параметры
//  Имя - строка, содержит имя переменной целиком
// 	Значение - значение переменной
//
Процедура глЗначениеПеременнойУстановить(Имя, Значение, ОбновлятьВоВсехКэшах = Ложь) Экспорт
	
	ОбщегоНазначения.УстановитьЗначениеПеременной(Имя, глОбщиеЗначения, Значение, ОбновлятьВоВсехКэшах);
	
КонецПроцедуры
