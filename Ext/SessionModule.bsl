// Обработчик события УстановкаПараметровСеанса()
//
Процедура УстановкаПараметровСеанса(ТребуемыеПараметры)
	
	// инициализация параметра сеанса "ТекущийПользователь"
	ПолныеПрава.УстановитьПараметрСеансаТекущийПользователь();	
	ПолныеПрава.УстановитьИзменяемыеПараметрыСеансаПользователя();
	ПараметрыСеанса.ДатаНачалаЗапретаДляАудиторов = дата("20190101000000");
	ПараметрыСеанса.ДатаОкончанияЗапретаДляАудиторов = дата("20201231235959");
	ПараметрыСеанса.СчетЗарплаты = ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоОплатеТруда;

	Если ТребуемыеПараметры = Неопределено Тогда
		// раздел "безусловной" инициализации параметров сеанса
		
	Иначе		
		
		УстановленныеПараметры = Новый Массив;
		
		Для Каждого ИмяПараметра ИЗ ТребуемыеПараметры Цикл
			УстановитьЗначениеПараметраСеанса(ИмяПараметра, УстановленныеПараметры);
		КонецЦикла;
		
	КонецЕсли;    
	
	//ЦС
	Если РольДоступна("УтверждениеБюджета") Тогда
		ПараметрыСеанса.ЦС_ОграничиватьДоступНаУровнеПодразделенийВБюджетировании = Ложь;
	Иначе
		ПараметрыСеанса.ЦС_ОграничиватьДоступНаУровнеПодразделенийВБюджетировании = Истина;
	КонецЕсли;
	//ЦС
	
КонецПроцедуры // УстановкаПараметровСеанса()

// Процедура устанавливает значение для указанного параметра сеанса
//
Процедура УстановитьЗначениеПараметраСеанса(ИмяПараметра, УстановленныеПараметры)
	
	Если УстановленныеПараметры.Найти(ИмяПараметра) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыРИБ = Новый Структура;
	ПараметрыРИБ.Вставить("СоответствиеОрганизацийИУзловОбменаПоОрганизации");
	ПараметрыРИБ.Вставить("ИспользованиеРИБ");
	ПараметрыРИБ.Вставить("ПрефиксУзлаРаспределеннойИнформационнойБазы");
	ПараметрыРИБ.Вставить("НаличиеОбменаДаннымиПоОрганизации");
	
	ПараметрыМеханизмаОграниченияПравДоступа = Новый Структура;
	ПараметрыМеханизмаОграниченияПравДоступа.Вставить("ИспользоватьОграниченияПравДоступаНаУровнеЗаписей");
	ПараметрыМеханизмаОграниченияПравДоступа.Вставить("ДоступныКассовыеОперации");
	ПараметрыМеханизмаОграниченияПравДоступа.Вставить("ДоступныБухгалтерскиеОперации");
	ПараметрыМеханизмаОграниченияПравДоступа.Вставить("ДоступныОперацииВыплатыЗарплаты");
	ПараметрыМеханизмаОграниченияПравДоступа.Вставить("ДоступныОперацииПоРаботеСПодотчетнымиЛицами");
	ПараметрыМеханизмаОграниченияПравДоступа.Вставить("ДоступныОперацииПоРаботеСПодотчетнымиЛицамиЗарплата");
	ПараметрыМеханизмаОграниченияПравДоступа.Вставить("общ_ИспользоватьОграниченияПоКазначейству");
	ПараметрыМеханизмаОграниченияПравДоступа.Вставить("фин_ИспользоватьОграниченияПоБюджетам");
	Для Каждого ВидОбъектаДоступа Из Метаданные.Перечисления.ВидыОбъектовДоступа.ЗначенияПеречисления Цикл			
		ПараметрыМеханизмаОграниченияПравДоступа.Вставить("ИспользоватьОграничениеПо" + ВидОбъектаДоступа.Имя);
	КонецЦикла;	
	
	Если ИмяПараметра = "ОбщиеЗначения" Тогда
		ПараметрыСеанса.ОбщиеЗначения = Новый ХранилищеЗначения(Новый Структура);
		УстановленныеПараметры.Добавить("ОбщиеЗначения");
		
	ИначеЕсли ПараметрыРИБ.Свойство(ИмяПараметра) Тогда	
		ПолныеПрава.ОпределитьФактИспользованияРИБ();
		ДополнитьСписокУстановленныхПараметров(УстановленныеПараметры, ПараметрыРИБ);
		
	ИначеЕсли ИмяПараметра = "ТекущийПользователь" Тогда
		ПолныеПрава.УстановитьПараметрСеансаТекущийПользователь(Неопределено);
		УстановленныеПараметры.Добавить("ТекущийПользователь");
		
	ИначеЕсли ИмяПараметра = "ИдентификаторПередаваемыхДанных" Тогда
		ПараметрыСеанса.ИдентификаторПередаваемыхДанных=1;
		УстановленныеПараметры.Добавить("ИдентификаторПередаваемыхДанных");
		
	ИначеЕсли ИмяПараметра = "ПередаваемыеДанные" Тогда
		ПараметрыСеанса.ПередаваемыеДанные= Новый ФиксированноеСоответствие(Новый Соответствие);
		УстановленныеПараметры.Добавить("ПередаваемыеДанные");
		
	ИначеЕсли ИмяПараметра = "ИдентификаторВводаНаОсновании" Тогда
		ПараметрыСеанса.ИдентификаторВводаНаОсновании=1;
		УстановленныеПараметры.Добавить("ИдентификаторВводаНаОсновании");
		
	ИначеЕсли ПараметрыМеханизмаОграниченияПравДоступа.Свойство(ИмяПараметра) Тогда	
		ПолныеПрава.УстановитьПараметрыМеханизмаОграниченияПравДоступа();
		ДополнитьСписокУстановленныхПараметров(УстановленныеПараметры, ПараметрыМеханизмаОграниченияПравДоступа);
					
	ИначеЕсли ИмяПараметра = "ГраницыЗапретаИзмененияДанных" Тогда		
		ПолныеПрава.УстановитьПараметрГраницыЗапретаИзмененияДанных();
		УстановленныеПараметры.Добавить("ГраницыЗапретаИзмененияДанных");
		
	КонецЕсли;
	
	ОбменДаннымиСервер.УстановитьПараметрыСеанса(ИмяПараметра, УстановленныеПараметры);
	
КонецПроцедуры // УстановитьЗначениеПараметраСеанса()

// Процедура заносит в структуру имена инициализированных параметров
// 
Процедура ДополнитьСписокУстановленныхПараметров(УстановленныеПараметры, ПараметрыРаздела)
	
	Для Каждого КлючИЗначение ИЗ ПараметрыРаздела Цикл
		УстановленныеПараметры.Добавить(КлючИЗначение.Ключ);
	КонецЦикла;
		
КонецПроцедуры // ДополнитьСписокУстановленныхПараметров()
