#Если Клиент Тогда
	
Перем НП Экспорт;

// переменные для управления отображения структурного подразделения
Перем мОтображатьСтруктурныеПодразделения Экспорт;

Функция СформироватьТекстЗапроса()
		
	Текст	= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	     	  |	РасчетВычетаПоРеализованнымТоварам.ПериодРасчета КАК Период,
	     	  |	ЕСТЬNULL(РасчетВычетаПоРеализованнымТоварам.Номенклатура, ""Итого"") КАК Номенклатура,
	     	  |	ЕСТЬNULL(РасчетВычетаПоРеализованнымТоварам.Вычет, 0) КАК Вычет,
	     	  |	ЕСТЬNULL(РасчетВычетаПоРеализованнымТоварам.СуммаПриходПР, 0) КАК СуммаПриходПР,
	     	  |	ЕСТЬNULL(РасчетВычетаПоРеализованнымТоварам.СуммаРасходПР, 0) КАК СуммаРасходПР,
	     	  |	ЕСТЬNULL(РасчетВычетаПоРеализованнымТоварам.СуммаУменьшенияПР, 0) КАК СуммаУменьшенияПР,
	     	  |	ЕСТЬNULL(РасчетВычетаПоРеализованнымТоварам.РасчетнаяСуммаДляВычета, 0) КАК РасчетнаяСуммаДляВычета,
	     	  |	РасчетВычетаПоРеализованнымТоварам.СНДБУ КАК СНДБУ,
	     	  |	РасчетВычетаПоРеализованнымТоварам.СКДБУ КАК СКДБУ,
	     	  |	РасчетВычетаПоРеализованнымТоварам.ОборотДтБУ КАК ОборотДтБУ,
	     	  |	РасчетВычетаПоРеализованнымТоварам.ОборотДтПР КАК ОборотДтПР,
	     	  |	РасчетВычетаПоРеализованнымТоварам.ОборотКтНУ КАК ОборотКтНУ
	     	  |ИЗ
	     	  |	РегистрСведений.РасчетВычетаПоРеализованнымТоварам КАК РасчетВычетаПоРеализованнымТоварам
	     	  |ГДЕ
	     	  |	РасчетВычетаПоРеализованнымТоварам.ПериодРасчета МЕЖДУ &ДатаНач И &ДатаКон
	     	  |	И РасчетВычетаПоРеализованнымТоварам.Организация = &Организация
	     	  |	И РасчетВычетаПоРеализованнымТоварам.Активность
	     	  |	И РасчетВычетаПоРеализованнымТоварам.ПериодРасчета МЕЖДУ &ДатаНач И &ДатаКон
	     	  |	И РасчетВычетаПоРеализованнымТоварам.СтруктурноеПодразделение = &СтруктурноеПодразделение
	     	  |
	     	  |УПОРЯДОЧИТЬ ПО
	     	  |	Период,
	     	  |	РасчетВычетаПоРеализованнымТоварам.Номенклатура
	     	  |ИТОГИ
	     	  |	СУММА(Вычет),
	     	  |	СУММА(СуммаПриходПР),
	     	  |	СУММА(СуммаРасходПР),
	     	  |	СУММА(СуммаУменьшенияПР),
	     	  |	СУММА(РасчетнаяСуммаДляВычета),
	     	  |	МАКСИМУМ(СНДБУ),
	     	  |	МАКСИМУМ(СКДБУ),
	     	  |	МАКСИМУМ(ОборотДтБУ),
	     	  |	МАКСИМУМ(ОборотДтПР),
	     	  |	МАКСИМУМ(ОборотКтНУ)
	     	  |ПО
	     	  |	Период КАК Номенклатура";
	Возврат Текст;
	
КонецФункции
	
// Выполняет запрос и формирует табличный документ-результат отчета
	// в соответствии с настройками, заданными значениями реквизитов отчета.
	//
	// Параметры:
	//	ДокументРезультат - табличный документ, формируемый отчетом
	//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
	//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
	//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь, НачалоПодписи, ПоказыватьПодписи) Экспорт
	
	Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
		Предупреждение("Дата начала периода не может быть больше даты окончания периода");
		Возврат;
	КонецЕсли;
	
	НачалоПериода = НачалоДня(ДатаНач);
	КонецПериода  = КонецДня(ДатаКон);
	
	ДокументРезультат.Очистить();
	
	Макет      = ПолучитьМакет("Отчет");
	МакетОбщий = ПолучитьОбщийМакет("СправкаРасчет");
	
	ЗаголовокОтчета = МакетОбщий.ПолучитьОбласть("Заголовок");

	
	
	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",     НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",     КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", СтруктурноеПодразделение);
	
	ОграниченияПоПостроителюОтчета = Отчеты_БК.ПолучитьТекстОграниченийПоПостроителюОтчета(ПостроительОтчета, Запрос);
	
	Если Не ПустаяСтрока(ОграниченияПоПостроителюОтчета) Тогда
		
		ОграниченияПоПостроителюОтчета = " И " + ОграниченияПоПостроителюОтчета;			
		
	КонецЕсли;
	
	Запрос.Текст = СформироватьТекстЗапроса();
	
	Запрос.Текст  = СтрЗаменить(Запрос.Текст, ".Активность",".Активность " + ОграниченияПоПостроителюОтчета);
	            	
	Результат = Запрос.Выполнить();
	
	СтрОтбор = УправлениеОтчетами.СформироватьСтрокуОтборов(ПостроительОтчета.Отбор);
	
	
	Если Не ПустаяСтрока(СтрОтбор) Тогда
		ОбластьОтбор = МакетОбщий.ПолучитьОбласть("СтрокаОтбор");
		ОбластьОтбор.Параметры.ТекстПроОтбор = "Отбор: " + СтрОтбор;
		ДокументРезультат.Вывести(ОбластьОтбор);
	КонецЕсли;
	
	
	ОбластьШапкаНачДанные        = Макет.ПолучитьОбласть("ШапкаНачДанные|Общие");
	ОбластьСтрокаНачДанные       = Макет.ПолучитьОбласть("СтрокаНачДанные|Общие");
	ОбластьИтогоНачДанные 		 = Макет.ПолучитьОбласть("ИтогоНачДанные|Общие");	
	ОбластьШапкаНачДанныеВычет   = Макет.ПолучитьОбласть("ШапкаНачДанные|Вычет");
	ОбластьСтрокаНачДанныеВычет  = Макет.ПолучитьОбласть("СтрокаНачДанные|Вычет");
	ОбластьИтогоНачДанныеВычет   = Макет.ПолучитьОбласть("ИтогоНачДанные|Вычет");
	
	ОбластьПодвал             = МакетОбщий.ПолучитьОбласть("Подвал");
	
	ВыборкаПериод = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Всего = 0;
	
	Пока ВыборкаПериод.Следующий() Цикл
		
		ЗаголовокОтчета.Параметры.Период              = "" + ПредставлениеПериода(НачалоГода(ВыборкаПериод.Период), КонецМесяца(ВыборкаПериод.Период), "ФП = Истина");
		СведенияОбОрганизации = ОбщегоНазначения.СведенияОЮрФизЛице(Организация);
		НазваниеОрганизации = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		ЗаголовокОтчета.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		ЗаголовокОтчета.Параметры.ДатаСоставления     = КонецМесяца(ВыборкаПериод.Период);
		ЗаголовокОтчета.Параметры.НазваниеОтчета      = "Расчет вычета по реализованным товарам";
		ДокументРезультат.Вывести(ЗаголовокОтчета);
		
		ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;
		
		СтрОтбор = УправлениеОтчетами.СформироватьСтрокуОтборов(ПостроительОтчета.Отбор);
		Если Не ПустаяСтрока(СтрОтбор) Тогда
			ОбластьОтбор = МакетОбщий.ПолучитьОбласть("СтрокаОтбор");
			ОбластьОтбор.Параметры.ТекстПроОтбор = "Отбор: " + СтрОтбор;
			ДокументРезультат.Вывести(ОбластьОтбор);
		КонецЕсли;
		
		// Параметр для показа заголовка
		
		Если ВыборкаПериод.Вычет = 0 Тогда
			ОбластьШапкаНачДанные.Параметры.Вычет              = "Вычет = 0";			
			ОбластьШапкаНачДанные.Параметры.ТекстРасчетаВычета = "В указанном периоде не было списания ТМЗ по налоговому учету, с видом учета =  ""ПР""";
			ДокументРезультат.Вывести(ОбластьШапкаНачДанные);
		Иначе			
			ОбластьШапкаНачДанныеВычет.Параметры.Вычет            = ВыборкаПериод.Вычет;
			ОбластьШапкаНачДанныеВычет.Параметры.СуммаКВычету     = ВыборкаПериод.РасчетнаяСуммаДляВычета;
			ОбластьШапкаНачДанные.Параметры.ТекстРасчетаВычета    = "Вычет рассчитывается по данным таблицы ( участвуют гр.3, гр. 5-9)";
			
			
			ДокументРезультат.Вывести(ОбластьШапкаНачДанные);
			ДокументРезультат.Присоединить(ОбластьШапкаНачДанныеВычет);
		КонецЕсли;
	    						
		ВыборкаНоменклатура = ВыборкаПериод.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ИтоговыеДанные = Неопределено;
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			Если ВыборкаНоменклатура.Номенклатура  =  Null ИЛИ
				ВыборкаНоменклатура.Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда
				Продолжить;
			КонецЕсли;
			
			ОбластьСтрокаНачДанные.Параметры.Номенклатура     = ВыборкаНоменклатура.Номенклатура;
			
			ОбластьСтрокаНачДанные.Параметры.СуммаПриходПР       = ВыборкаНоменклатура.СуммаПриходПР;
			ОбластьСтрокаНачДанные.Параметры.СуммаРасходНУ       = -1* ВыборкаНоменклатура.СуммаПриходПР;
			ОбластьСтрокаНачДанные.Параметры.СуммаРасходВР       = ВыборкаНоменклатура.СуммаПриходПР;
			
			ДокументРезультат.Вывести(ОбластьСтрокаНачДанные);
			
			//данные для расчета вычета и распределение вычета
			Если НЕ ВыборкаПериод.Вычет = 0 Тогда				
				ОбластьСтрокаНачДанныеВычет.Параметры.СНДБУ               = ВыборкаНоменклатура.СНДБУ;
				ОбластьСтрокаНачДанныеВычет.Параметры.СКДБУ       	      = ВыборкаНоменклатура.СКДБУ;
				ОбластьСтрокаНачДанныеВычет.Параметры.ОборотДтБУ          = ВыборкаНоменклатура.ОборотДтБУ;
				ОбластьСтрокаНачДанныеВычет.Параметры.ОборотДтПР          = ВыборкаНоменклатура.ОборотДтПР;
				ОбластьСтрокаНачДанныеВычет.Параметры.ОборотКтНУ          = ВыборкаНоменклатура.ОборотКтНУ;
				ОбластьСтрокаНачДанныеВычет.Параметры.СуммаРасходПР		  = ВыборкаНоменклатура.СуммаРасходПР;
				ОбластьСтрокаНачДанныеВычет.Параметры.СуммаРасходНУ_Вычет = ВыборкаНоменклатура.СуммаУменьшенияПР;
				ОбластьСтрокаНачДанныеВычет.Параметры.СуммаРасходВР_Вычет = -1*ВыборкаНоменклатура.СуммаУменьшенияПР;
				    				
				ДокументРезультат.Присоединить(ОбластьСтрокаНачДанныеВычет);
			КонецЕсли; 			
		КонецЦикла;
		
		ОбластьИтогоНачДанные.Параметры.СуммаПриходПР       = ВыборкаПериод.СуммаПриходПР;
		ОбластьИтогоНачДанные.Параметры.СуммаРасходНУ       = -1* ВыборкаПериод.СуммаПриходПР;
		ОбластьИтогоНачДанные.Параметры.СуммаРасходВР       = ВыборкаПериод.СуммаПриходПР;

		ДокументРезультат.Вывести(ОбластьИтогоНачДанные);
		
		//итоговые данные для расчета вычета и распределение вычета
		Если НЕ ВыборкаПериод.Вычет = 0 Тогда						
			ОбластьИтогоНачДанныеВычет.Параметры.СНДБУ       	 = ВыборкаПериод.СНДБУ;
			ОбластьИтогоНачДанныеВычет.Параметры.СКДБУ       	 = ВыборкаПериод.СКДБУ;
			ОбластьИтогоНачДанныеВычет.Параметры.ОборотДтБУ       = ВыборкаПериод.ОборотДтБУ;
			ОбластьИтогоНачДанныеВычет.Параметры.ОборотДтПР       = ВыборкаПериод.ОборотДтПР;
			ОбластьИтогоНачДанныеВычет.Параметры.ОборотКтНУ       = ВыборкаПериод.ОборотКтНУ;
			ОбластьИтогоНачДанныеВычет.Параметры.СуммаРасходПР		= ВыборкаПериод.СуммаРасходПР;
			ОбластьИтогоНачДанныеВычет.Параметры.СуммаРасходНУ_Вычет = ВыборкаПериод.СуммаУменьшенияПР;
			ОбластьИтогоНачДанныеВычет.Параметры.СуммаРасходВР_Вычет = -1*ВыборкаПериод.СуммаУменьшенияПР ;
			
			ДокументРезультат.Присоединить(ОбластьИтогоНачДанныеВычет);
		КонецЕсли;
			
		//ПОДВАЛ
		ДокументРезультат.Вывести(ОбластьПодвал);
		
		ВысотаПодписи = ДокументРезультат.Области.Подвал.Низ - ДокументРезультат.Области.Подвал.Верх;
		
		ДокументРезультат.Области.Подвал.Видимость = ПоказыватьПодписи;
		
	КонецЦикла;    // Период	
	
		
	// Зафиксируем заголовок отчета
	ДокументРезультат.ФиксацияСверху = 7;
	
	// Первую колонку не печатаем
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
                                                      			
	// Присвоим имя для сохранения параметров печати табличного документа
	ДокументРезультат.ИмяПараметровПечати = "Расчет вычета по реализованным товарам";
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета, Строка(глЗначениеПеременной("глТекущийПользователь")));
	
КонецПроцедуры // СформироватьОтчет
	
Процедура ЗаполнитьНачальныеНастройки() Экспорт
 	СтарыеНастройки = УправлениеОтчетами.ПолучитьКопиюОтбораВТЗ(ПостроительОтчета.Отбор);
	
	СоотвСубконто = Новый Соответствие;
	
	Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	НалоговыйОбороты.СуммаОборотКт КАК СуммаОборотКт,
        |	НалоговыйОбороты.Субконто1 КАК Номенклатура
        |{ВЫБРАТЬ
        |	НалоговыйОбороты.Субконто1 КАК Номенклатура}
        |ИЗ
        |	РегистрБухгалтерии.Налоговый.Обороты(, , Месяц, Счет В ИЕРАРХИИ (&Счет), , {(Субконто1).* КАК Номенклатура}, , ) КАК НалоговыйОбороты
        |ИТОГИ
        |	СУММА(СуммаОборотКт)
        |ПО
        |	ОБЩИЕ
        |{ИТОГИ ПО
        |	НалоговыйОбороты.Субконто1.*}";


	Массив = Новый Массив;
	Массив.Добавить(ПланыСчетов.Налоговый.Товары);
	Массив.Добавить(ПланыСчетов.Налоговый.ГотоваяПродукция);
	Массив.Добавить(ПланыСчетов.Налоговый.СырьеИМатериалы);
	
	ПостроительОтчета.Параметры.Вставить("Счет", Массив);
	ПостроительОтчета.Параметры.Вставить("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
		
	ПостроительОтчета.Текст = Текст;

	СоотвСубконто = Новый Соответствие;
	СоотвСубконто.Вставить("Номенклатура",    ПланыВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура);
	
	Сч = 0;
	Для каждого Элемент Из СоотвСубконто Цикл
		Сч = Сч+1;
		Поле = ПостроительОтчета.ДоступныеПоля.Найти(Элемент.Ключ);
		Поле.ТипЗначения = Элемент.Значение.ТипЗначения;
		Поле.Представление = Элемент.Значение.Наименование;
		
		ПостроительОтчета.Отбор.Добавить(Элемент.Ключ);
	КонецЦикла;

	УправлениеОтчетами.УстановитьОтборИзТаблицы(ПостроительОтчета.Отбор, СтарыеНастройки);

	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
	// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
	// 
	
НП = Новый НастройкаПериода;

мОтображатьСтруктурныеПодразделения = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений();	

#КонецЕсли