#Если Клиент Тогда

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт

	СписокПустыхЗначений = Новый СписокЗначений;
	ТипыПВХ = Метаданные.ПланыВидовХарактеристик.ВопросыДляАнкетирования.Тип.Типы();
	Для каждого ТипИзХарактеристики из ТипыПВХ Цикл
		СписокПустыхЗначений.Добавить(ОбщегоНазначения.ПустоеЗначениеТипа(ТипИзХарактеристики));
	КонецЦикла;
	СписокПустыхЗначений.Добавить(Неопределено);
	
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("СписокПустыхЗначений",СписокПустыхЗначений);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ПервичнаяРассылка", ДокументРассылки);
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПроцедуры

Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ОбщийОтчет.ИмяРегистра = "-";
	ОбщийОтчет.мНазваниеОтчета = "Контроль ответов на рассылку";
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	// представление полей
	СтруктураПредставлениеПолей = Новый Структура();
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РассылкаАнкетПолучатели.Объект КАК Объект,
	               |	ВЫБОР КОГДА (Опрос.Ссылка) ЕСТЬ NULL  ТОГДА ""Не приславшие ответ"" ИНАЧЕ ВЫБОР КОГДА ПустыеОпросы.Ссылка = Опрос.Ссылка ТОГДА ""Прочие"" ИНАЧЕ ""Приславшие ответ"" КОНЕЦ КОНЕЦ КАК НаличиеОтвета,
	               |	РассылкаАнкетПолучатели.Получатель КАК Получатель,
	               |	РассылкаАнкетПолучатели.Ссылка КАК Рассылка,
	               |	Опрос.Ссылка КАК Ссылка,
	               |	ВЫРАЗИТЬ(Опрос.Комментарий КАК СТРОКА(250)) КАК Комментарий
				   |{ВЫБРАТЬ
	               |	РассылкаАнкетПолучатели.Объект.* КАК Объект,
	               |	ВЫБОР КОГДА (Опрос.Ссылка) ЕСТЬ NULL ТОГДА ""Не приславшие ответ"" ИНАЧЕ ВЫБОР КОГДА ПустыеОпросы.Ссылка = Опрос.Ссылка ТОГДА ""Прочие"" ИНАЧЕ ""Приславшие ответ"" КОНЕЦ КОНЕЦ КАК НаличиеОтвета,
	               |	РассылкаАнкетПолучатели.Получатель.* КАК Получатель,
	               |	РассылкаАнкетПолучатели.Ссылка.* КАК Рассылка,
	               |	Опрос.Ссылка.* КАК Ссылка,
	               |	ВЫРАЗИТЬ(Опрос.Комментарий КАК СТРОКА(250)) КАК Комментарий
				   |	//СВОЙСТВА
				   |}
	               |ИЗ
	               |	Документ.РассылкаАнкет.Получатели КАК РассылкаАнкетПолучатели
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Опрос КАК Опрос
	               |		ПО (РассылкаАнкетПолучатели.Объект = Опрос.ОпрашиваемоеЛицо И (РассылкаАнкетПолучатели.Ссылка = &ПервичнаяРассылка ИЛИ РассылкаАнкетПолучатели.Ссылка.ПервичнаяРассылка = &ПервичнаяРассылка) ИЛИ РассылкаАнкетПолучатели.Объект = Опрос.ОпрашиваемоеЛицо И (РассылкаАнкетПолучатели.Ссылка = &ПервичнаяРассылка ИЛИ РассылкаАнкетПолучатели.Ссылка.ПервичнаяРассылка = &ПервичнаяРассылка)) И РассылкаАнкетПолучатели.Ссылка.Анкета = Опрос.ТиповаяАнкета
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |			ОпросВопросы.Ссылка КАК Ссылка
	               |		ИЗ
	               |			Документ.Опрос.Вопросы КАК ОпросВопросы
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |					ОпросВопросы.Ссылка КАК Ссылка
	               |				ИЗ
	               |					Документ.Опрос.Вопросы КАК ОпросВопросы
	               |				
	               |				ГДЕ
	               |					ОпросВопросы.Ссылка.Рассылка = &ПервичнаяРассылка И
	               |					(НЕ(ОпросВопросы.ТиповойОтвет В (&СписокПустыхЗначений)))) КАК НеПустыеОпросы
	               |				ПО НеПустыеОпросы.Ссылка <> ОпросВопросы.Ссылка
	               |		
	               |		ГДЕ
	               |			ОпросВопросы.Ссылка.Рассылка = &ПервичнаяРассылка) КАК ПустыеОпросы
	               |		ПО РассылкаАнкетПолучатели.Ссылка = ПустыеОпросы.Ссылка.Рассылка
			       |		//СОЕДИНЕНИЯ
	               |
	               |ГДЕ
	               |	РассылкаАнкетПолучатели.Ссылка = &ПервичнаяРассылка
	               |{ГДЕ
	               |	РассылкаАнкетПолучатели.Объект.* КАК Объект,
	               |	ВЫБОР КОГДА (Опрос.Ссылка) ЕСТЬ NULL ТОГДА ""Не приславшие ответ"" ИНАЧЕ ВЫБОР КОГДА ПустыеОпросы.Ссылка = Опрос.Ссылка ТОГДА ""Прочие"" ИНАЧЕ ""Приславшие ответ"" КОНЕЦ КОНЕЦ КАК НаличиеОтвета,
	               |	РассылкаАнкетПолучатели.Получатель.* КАК Получатель,
	               |	РассылкаАнкетПолучатели.Ссылка.* КАК Рассылка,
	               |	Опрос.Ссылка.* КАК Ссылка,
	               |	ВЫРАЗИТЬ(Опрос.Комментарий КАК СТРОКА(250)) КАК Комментарий
   				   |	//СВОЙСТВА
				   |	//КАТЕГОРИИ
				   |}
				   |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РассылкаАнкетПолучатели.Объект КАК Объект,
	               |	ВЫБОР КОГДА (Опрос.Ссылка) ЕСТЬ NULL ТОГДА ""Не приславшие ответ"" ИНАЧЕ ВЫБОР КОГДА ПустыеОпросы.Ссылка = Опрос.Ссылка ТОГДА ""Прочие"" ИНАЧЕ ""Приславшие ответ"" КОНЕЦ КОНЕЦ КАК НаличиеОтвета,
	               |	РассылкаАнкетПолучатели.Получатель КАК Получатель,
	               |	РассылкаАнкетПолучатели.Ссылка КАК Рассылка,
	               |	Опрос.Ссылка КАК Ссылка,
	               |	ВЫРАЗИТЬ(Опрос.Комментарий КАК СТРОКА(250)) КАК Комментарий
	               |{ВЫБРАТЬ
	               |	РассылкаАнкетПолучатели.Объект.* КАК Объект,
	               |	ВЫБОР КОГДА (Опрос.Ссылка) ЕСТЬ NULL ТОГДА ""Не приславшие ответ"" ИНАЧЕ ВЫБОР КОГДА ПустыеОпросы.Ссылка = Опрос.Ссылка ТОГДА ""Прочие"" ИНАЧЕ ""Приславшие ответ"" КОНЕЦ КОНЕЦ КАК НаличиеОтвета,
	               |	РассылкаАнкетПолучатели.Получатель.* КАК Получатель,
	               |	РассылкаАнкетПолучатели.Ссылка.* КАК Рассылка,
	               |	Опрос.Ссылка.* КАК Ссылка,
	               |	ВЫРАЗИТЬ(Опрос.Комментарий КАК СТРОКА(250)) КАК Комментарий
				   |	//СВОЙСТВА
				   |}
	               |ИЗ
	               |	Документ.РассылкаАнкет.Получатели КАК РассылкаАнкетПолучатели
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Опрос КАК Опрос
	               |		ПО (РассылкаАнкетПолучатели.Объект = Опрос.ОпрашиваемоеЛицо И РассылкаАнкетПолучатели.Ссылка.ПервичнаяРассылка = &ПервичнаяРассылка ИЛИ РассылкаАнкетПолучатели.Объект = Опрос.ОпрашиваемоеЛицо И РассылкаАнкетПолучатели.Ссылка.ПервичнаяРассылка = &ПервичнаяРассылка И РассылкаАнкетПолучатели.Ссылка.Анкета = Опрос.ТиповаяАнкета)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |			ОпросВопросы.Ссылка КАК Ссылка
	               |		ИЗ
	               |			Документ.Опрос.Вопросы КАК ОпросВопросы
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |					ОпросВопросы.Ссылка КАК Ссылка
	               |				ИЗ
	               |					Документ.Опрос.Вопросы КАК ОпросВопросы
	               |				
	               |				ГДЕ
	               |					ОпросВопросы.Ссылка.Рассылка.ПервичнаяРассылка = &ПервичнаяРассылка И
	               |					(НЕ(ОпросВопросы.ТиповойОтвет В (&СписокПустыхЗначений)))) КАК НеПустыеОпросы
	               |				ПО НеПустыеОпросы.Ссылка <> ОпросВопросы.Ссылка
	               |		
	               |		ГДЕ
	               |			ОпросВопросы.Ссылка.Рассылка.ПервичнаяРассылка = &ПервичнаяРассылка) КАК ПустыеОпросы
	               |		ПО (РассылкаАнкетПолучатели.Ссылка = ПустыеОпросы.Ссылка.Рассылка ИЛИ РассылкаАнкетПолучатели.Ссылка.ПервичнаяРассылка = ПустыеОпросы.Ссылка.Рассылка)
			       |		//СОЕДИНЕНИЯ
	               |
	               |ГДЕ
	               |	РассылкаАнкетПолучатели.Ссылка.ПервичнаяРассылка = &ПервичнаяРассылка
	               |{ГДЕ
	               |	РассылкаАнкетПолучатели.Объект.* КАК Объект,
	               |	ВЫБОР КОГДА (Опрос.Ссылка) ЕСТЬ NULL  ТОГДА ""Не приславшие ответ"" ИНАЧЕ ВЫБОР КОГДА ПустыеОпросы.Ссылка = Опрос.Ссылка ТОГДА ""Прочие"" ИНАЧЕ ""Приславшие ответ"" КОНЕЦ КОНЕЦ КАК НаличиеОтвета,
	               |	РассылкаАнкетПолучатели.Получатель.* КАК Получатель,
	               |	РассылкаАнкетПолучатели.Ссылка.* КАК Рассылка,
	               |	Опрос.Ссылка.* КАК Ссылка,
	               |	ВЫРАЗИТЬ(Опрос.Комментарий КАК СТРОКА(250)) КАК Комментарий
   				   |	//СВОЙСТВА
				   |	//КАТЕГОРИИ
				   |}
				   |
				   |СГРУППИРОВАТЬ ПО
	               |	РассылкаАнкетПолучатели.Объект,
	               |	ВЫБОР КОГДА (Опрос.Ссылка) ЕСТЬ NULL  ТОГДА ""Не приславшие ответ"" ИНАЧЕ ВЫБОР КОГДА ПустыеОпросы.Ссылка = Опрос.Ссылка ТОГДА ""Прочие"" ИНАЧЕ ""Приславшие ответ"" КОНЕЦ КОНЕЦ,
	               |	РассылкаАнкетПолучатели.Получатель,
	               |	РассылкаАнкетПолучатели.Ссылка,
	               |	Опрос.Ссылка,
	               |	ВЫРАЗИТЬ(Опрос.Комментарий КАК СТРОКА(250))
				   |	//СГРУППИРОВАТЬПО
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НаличиеОтвета
	               |{УПОРЯДОЧИТЬ ПО
	               |	НаличиеОтвета,
	               |	Рассылка.*,
	               |	Объект.*
			       |	//СВОЙСТВА
	               |}
	               |
	               |ИТОГИ ПО
	               |	НаличиеОтвета,
	               |	Рассылка,
	               |	Объект
	               |{ИТОГИ ПО
	               |	НаличиеОтвета,
	               |	Рассылка.*,
	               |	Объект.*
			       |	//СВОЙСТВА
				   |}";

	// представление полей
	СтруктураПредставлениеПолей.Очистить();
	СтруктураПредставлениеПолей.Вставить("Объект", 			"Опрашиваемое лицо");
	СтруктураПредставлениеПолей.Вставить("Получатель", 		"e-mail");
	СтруктураПредставлениеПолей.Вставить("Ссылка", 			"Опрос");
	СтруктураПредставлениеПолей.Вставить("НаличиеОтвета", 	"Наличие ответа");

	// При использовании свойств и категорий в текст запроса добавляются дополнительные поля
	Если ОбщийОтчет.ИспользоватьСвойстваИКатегории Тогда

		// Свойства и категории, назначаемые пользователем:

		ТаблицаПолей = Новый ТаблицаЗначений;
		ТаблицаПолей.Колонки.Добавить("ПутьКДанным");  // описание поля запроса поля, для которого добавляются свойства и категории. Используется в условии соединения с регистром сведений, хранящим значения свойств или категорий
		ТаблицаПолей.Колонки.Добавить("Представление");// представление поля, для которого добавляются свойства и категории. 
		ТаблицаПолей.Колонки.Добавить("Назначение");   // назначение свойств/категорий объектов для данного поля
		ТаблицаПолей.Колонки.Добавить("ТипЗначения");  // тип значения поля, для которого добавляются свойства и категории. Используется, если не установлено назначение
		ТаблицаПолей.Колонки.Добавить("НетКатегорий"); // признак НЕиспользования категорий для объекта

		НоваяСтрока = ТаблицаПолей.Добавить();
		НоваяСтрока.ПутьКДанным = "РассылкаАнкетПолучатели.Объект";
		НоваяСтрока.Представление = "Опрашиваемое лицо";
		НоваяСтрока.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица;

		// Добавим строки запроса, необходимые для использования свойств и категорий
		ТекстПоляКатегорий = "";
		ТекстПоляСвойств = "";

		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, 
				ОбщийОтчет.мСоответствиеНазначений, ПостроительОтчета.Параметры
				,, ТекстПоляКатегорий, ТекстПоляСвойств,,,,,,ОбщийОтчет.мСтруктураДляОтбораПоКатегориям);

	КонецЕсли;								  
	
	ПостроительОтчета.Текст = ТекстЗапроса;							  
	ПостроительОтчета.ЗаполнитьНастройки();
	
	Если ОбщийОтчет.ИспользоватьСвойстваИКатегории = Истина Тогда
		УправлениеОтчетами.УстановитьТипыЗначенийСвойствИКатегорийДляОтбора(ПостроительОтчета, ТекстПоляКатегорий, ТекстПоляСвойств, ОбщийОтчет.мСоответствиеНазначений, СтруктураПредставлениеПолей);
	КонецЕсли;
	
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
	// группировки по умолчанию
	//ПостроительОтчета.ИзмеренияСтроки.Добавить("");
	//ПостроительОтчета.ИзмеренияСтроки.Добавить("");
	
	// отборы по умолчанию
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Рассылка");
	УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	
	// поля по умолчанию.
	ПостроительОтчета.ВыбранныеПоля.Очистить();
	ПостроительОтчета.ВыбранныеПоля.Добавить("Получатель");
	ПостроительОтчета.ВыбранныеПоля.Добавить("Ссылка");
	ПостроительОтчета.ВыбранныеПоля.Добавить("Комментарий");
	
	// настройки отчета
	ОбщийОтчет.РаскрашиватьИзмерения = Истина;
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Истина;
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	ОбщийОтчет.мРежимВводаПериода = 1; // Дата
	
	УправлениеОтчетами.УпорядочитьПоляПостроителяОтчета(ПостроительОтчета);
	
КонецПроцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

#КонецЕсли