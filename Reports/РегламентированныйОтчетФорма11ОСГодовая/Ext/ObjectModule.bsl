#Если Клиент Тогда
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит имя выбранной формы отчета
Перем мВыбраннаяФорма Экспорт;

// Хранит признак скопированной формы.
Перем мСкопированаФорма Экспорт;

// Хранит ссылку на документ, хранящий данные отчета
Перем мСохраненныйДок Экспорт;

// Следующие переменные хранят границы
// периода построения отчета
Перем мДатаНачалаПериодаОтчета Экспорт;
Перем мДатаКонцаПериодаОтчета  Экспорт;

Перем мВерсияФормы Экспорт;

Перем мПолноеИмяФайлаВнешнейОбработки Экспорт;

Перем мЗаписьЗапрещена Экспорт;

Перем мИнтервалАвтосохранения Экспорт;

Перем мТаблицаСтраницНаПечать Экспорт;

Перем ВсегоСтраниц Экспорт;
Перем ВсегоСтраниц2 Экспорт;
Перем ВсегоСтраниц3 Экспорт;

// Хранит ФИО исполнителя 
Перем мИсполнитель Экспорт;

Перем мСписокСтруктурныхЕдиниц Экспорт;

Перем мПризнакСистемыСотрудниковЗУП20 Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Функция получает основные сведения о выбранной организации
// 
Функция ЗаполнитьСведенияОбОрганизации()Экспорт //--
	
	Если (Организация  = Неопределено) Или (Организация = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.Организации")) Тогда
		Возврат 0;
	КонецЕсли;
	
	// Составляем список данных, необходимых для вывода в отчетную форму
	Сведения = Новый СписокЗначений;
			
	Сведения.Добавить("", "НаимЮЛПол"); // Полное название организации
			
	Сведения.Добавить("", "КодПоОКПО"); // ОКПО
			
	Сведения.Добавить("", "АдрЮР"); // Юридический адрес
	
	Сведения.Добавить("", "ФИОБухКраткое"); // ФИО гл. бухгалтера
	
	Сведения.Добавить("", "ФИОРукКраткое"); // ФИО руководителя ТелОрганизации
	
	Сведения.Добавить("", "ТелОрганизации"); // Телефон организации
	Сведения.Добавить("", "ИИН_БИН"); 		// ИИН БИН	                      
						  
	// Теперь получаем данные из глобальной общей функции
	ОргСведения = ОбщегоНазначения.ПолучитьСведенияОбОрганизации(Организация, ТекущаяДата(), Сведения);
	
	Возврат ОргСведения;
	
КонецФункции // ЗаполнитьСведенияОбОрганизации


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ 

ОписаниеТиповСтрока15  = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(15);
ОписаниеТиповСтрока50  = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(50);

мТаблицаСтраницНаПечать = Новый ТаблицаЗначений;
мТаблицаСтраницНаПечать.Колонки.Добавить("ПолеТабличногоДокумента");
мТаблицаСтраницНаПечать.Колонки.Добавить("ИмяЛиста");
мТаблицаСтраницНаПечать.Колонки.Добавить("ИмяЛистаДляЗаписи");

// определим ФИО исполнителя
Запрос =  Новый Запрос;
Запрос.УстановитьПараметр("Исполнитель", глТекущийПользователь.ФизЛицо);
Запрос.Текст = "
|ВЫБРАТЬ
|	ФИОФИзЛиц.Фамилия,
|	ФИОФИзЛиц.Имя,
|	ФИОФИзЛиц.Отчество
|ИЗ
|	РегистрСведений.ФИОФизЛиц.СрезПоследних(, ФизЛицо = &Исполнитель) КАК ФИОФизЛиц
|";

Выборка = Запрос.Выполнить().Выбрать();
Если Выборка.Следующий() Тогда
	мИсполнитель = Выборка.Фамилия + ?(Выборка.Имя <> "", " " + Лев(Выборка.Имя, 1) + ".", "") + ?(Выборка.Отчество <> "", " " + Лев(Выборка.Отчество, 1) + ".", "");
Иначе
	Если глТекущийПользователь.ФизЛицо.Пустая() Тогда
		мИсполнитель = глТекущийПользователь.Наименование;
	Иначе
		мИсполнитель = глТекущийПользователь.ФизЛицо.Наименование;
	КонецЕсли;
КонецЕсли;

мСписокСтруктурныхЕдиниц = Новый СписокЗначений;
мПризнакСистемыСотрудниковЗУП20  = Ложь;
Если Метаданные.РегистрыСведений.РаботникиОрганизаций.Измерения.Найти("ФизЛицо") = Неопределено Тогда
	мПризнакСистемыСотрудниковЗУП20 = Истина;
КонецЕсли;
#КонецЕсли
