Перем ЗаполнениеПараметров Экспорт;
Перем СохраненнаяНастройка Экспорт;
Перем ДополнительныеПараметры Экспорт;
Перем ПараметрыОформления Экспорт;
Перем СтруктураПеревода;
Перем КЭШ;
Перем ДоступныеПоказатели Экспорт;
Перем ДоступныеГруппировки Экспорт;
Перем ПереченьОсновныхРеквизитов Экспорт;
Перем ДополнительныеПредставления Экспорт;
Перем ДанныеРасшифровки Экспорт;
Перем ОтборыРасшифровки Экспорт;
Перем ТаблицаОтбора Экспорт;


////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПОДГОТОВКА ДАННЫХ ОТЧЕТА


Процедура ЗаполнитьСпискиПоказателейИГруппировок() Экспорт
	
   	ДоступныеПоказатели.Очистить();
	ДоступныеГруппировки.Очистить();
	//Если Бюджет.УчетПоСумме Тогда
		ДоступныеПоказатели.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.СуммаУпр);
		ДоступныеПоказатели.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма);
		ДоступныеПоказатели.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.СуммаСценария);
	//КонецЕсли;
	//Если Бюджет.УчетПоКоличеству Тогда
		ДоступныеПоказатели.Добавить(Перечисления.фин_РесурсыДанныхБюджетирования.Количество);
	//КонецЕсли;
	ДоступныеГруппировки.Добавить(Перечисления.фин_ДополнительныеРазрезыОтчетов.СтатьяБюджета,"Статья бюджета");
	//Если СПериодом Тогда
		ДоступныеГруппировки.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.ПериодПланирования,"Период планирования");
	//КонецЕсли;
	Для Каждого СтрокаРазрез Из фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПолучитьПолныйСписокРазрезов") Цикл
		ДоступныеГруппировки.Добавить(СтрокаРазрез.Значение,фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(СтрокаРазрез.Значение));
	КонецЦикла;
	ДоступныеГруппировки.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта,"Валюта операции");
	ДоступныеГруппировки.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.Организация,"Организация");
КонецПроцедуры

Функция ПроверитьЗаполнениеПараметров(Отбор)
	Ошибки = Ложь;
	Если ДанныеДляАнализа.Количество()=0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указаны данные для анализа!");
		Ошибки = Истина;
	КонецЕсли;
	Если Показатели.Количество()=0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указаны показатели отчета!");
		Ошибки = Истина;
	КонецЕсли;
	Если ВидыАналитическихДанных.Количество()=0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указаны виды аналитических данных!");
		Ошибки = Истина;
	КонецЕсли;
	Для Каждого СтрокаПоказатель Из Показатели Цикл
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.Показатель) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен показатель в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка показателей!");
			Ошибки = Истина;
		КонецЕсли;
		Если СтрокаПоказатель.Показатель=Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма И НЕ (ОсновнаяГруппировка = Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта ИЛИ Группировки.НайтиСтроки(Новый Структура("Измерение",Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта)).Количество()<>0) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя отражать валютную сумму в отчете без использования группировки по валюте!");
			Ошибки = Истина;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаПоказатель Из ВидыАналитическихДанных Цикл
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.ВидДанных) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен вид данных в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка видов аналитических данных!");
			Ошибки = Истина;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаПоказатель Из ДанныеДляАнализа Цикл
		Если СтрокаПоказатель.НачалоПериода='00010101' Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено начало периода в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка анализируемых данных!");
			Ошибки = Истина;
		КонецЕсли;
		Если СтрокаПоказатель.ОкончаниеПериода='00010101' Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен конец периода в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка анализируемых данных!");
			Ошибки = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.СтатьяБюджета) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена статья бюджета в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка анализируемых данных!");
			Ошибки = Истина;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаПоказатель Из Группировки Цикл
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.Измерение) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена группировка в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка группировок!");
			Ошибки = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.ВидГруппировки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен вид группировки в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка группировок!");
			Ошибки = Истина;
		КонецЕсли;
		Если СтрокаПоказатель.Измерение = Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта И Показатели.НайтиСтроки(Новый Структура("Показатель",Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма)).Количество()=0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя использовать группировку по валюте без отражения валютной суммы в отчете!");
			Ошибки = Истина;
		КонецЕсли;
	КонецЦикла;
	Если ОсновнаяГруппировка = Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта И Показатели.НайтиСтроки(Новый Структура("Показатель",Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма)).Количество()=0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя использовать разделение данных по валюте без отражения валютной суммы в отчете!");
		Ошибки = Истина;
	КонецЕсли;
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ИспользоватьОграниченияПоБюджетам")=Истина Тогда
		Бюджеты = Новый Массив;
		Для Каждого СтрокаДанных Из ДанныеДляАнализа Цикл
			Бюджеты.Добавить(СтрокаДанных.СтатьяБюджета.Владелец);
		КонецЦикла;
		Если НЕ фин_ПривилегированныеПроцедуры.РазрешеноПолучениеОтчета(Бюджеты,ДанныеДляАнализа.ВыгрузитьКолонку("ДанныеДляСравнения"),Отбор) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("У пользователя недостаточно прав!");
			Ошибки = Истина;
		КонецЕсли;
	КонецЕсли;
	Если ВыводитьСреднююЦену Тогда
		//Если (НЕ Бюджет.УчетПоКоличеству) ИЛИ (НЕ Бюджет.УчетПоСумме) Тогда
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для вывода средней цены бюджет должен содержать как количественные, так и суммовые показатели!");
		//	Ошибки = Истина;
		//КонецЕсли;
		Если Показатели.НайтиСтроки(Новый Структура("Показатель",Перечисления.фин_РесурсыДанныхБюджетирования.Количество)).Количество()=0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для вывода средней цены в отчете необходимо вывести показатель ""Количество""!");
			Ошибки = Истина;
		КонецЕсли;
		Если Показатели.НайтиСтроки(Новый Структура("Показатель",Перечисления.фин_РесурсыДанныхБюджетирования.СуммаУпр)).Количество()=0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для вывода средней цены в отчете необходимо вывести показатель ""Сумма (упр.)""!");
			Ошибки = Истина;
		КонецЕсли;
	КонецЕсли;
	Возврат НЕ Ошибки;	
КонецФункции

Функция ПолучитьТаблицуДанных(Отбор,мГруппировки)
	ТекстРазрядность = "";
	ТекстРазрядностьКоличество = "";
	РазрядностьПланирования = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("РазрядностьПланированияБюджетов");
	Если РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.Миллионы Тогда
		ТекстРазрядность="/1000000";
	ИначеЕсли РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.СотниТысяч Тогда
		ТекстРазрядность="/100000";
	ИначеЕсли РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.ДесяткиТысяч Тогда
		ТекстРазрядность="/10000";
	ИначеЕсли РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.Тысячи Тогда
		ТекстРазрядность="/1000";
	ИначеЕсли РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.Сотни Тогда
		ТекстРазрядность="/100";
	КонецЕсли;
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПрименятьРазрядностьДляКоличества") Тогда
		ТекстРазрядностьКоличество = ТекстРазрядность;
	КонецЕсли;
	
	ВРазрезеВалют = Показатели.НайтиСтроки(Новый Структура("Показатель",Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма)).Количество()<>0 И (ОсновнаяГруппировка = Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта ИЛИ Группировки.НайтиСтроки(Новый Структура("Измерение",Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта)).Количество()<>0);
	
	ТекстФильтраОбороты = "";
	ТекстОтбораОбороты = "";
	ТекстОтбораИтоговыеОбороты = "";
	фин_УправлениеОтчетамиБюджетирование.ЗаполнитьТекстУсловийОтбора(Отбор,ТекстОтбораОбороты,,ТекстФильтраОбороты,Новый Структура("СтатьяБюджета"));
	фин_УправлениеОтчетамиБюджетирование.ЗаполнитьТекстУсловийОтбора(Отбор,ТекстОтбораИтоговыеОбороты,,"",,Новый Структура("СтатьяБюджета"));
	
	СписокИсключаемыхТиповВнутригрупповыхОборотов = Новый Массив;
	//СписокИсключаемыхТиповВнутригрупповыхОборотов.Добавить(Перечисления.фин_ТипыВнутригрупповыхОборотовПоБюджету.ВнутригрупповыеОбороты);
	//Если мГруппировки.НайтиСтроки(Новый Структура("Измерение",Перечисления.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение)).Количество()>0 ИЛИ ОсновнаяГруппировка=Перечисления.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение Тогда
	//	СписокИсключаемыхТиповВнутригрупповыхОборотов.Добавить(Перечисления.фин_ТипыВнутригрупповыхОборотовПоБюджету.ВнутригрупповыеОборотыНаУровнеПодразделения);
	//КонецЕсли;
	//Если НЕ ЗначениеЗаполнено(Организация) Тогда
	//	СписокИсключаемыхТиповВнутригрупповыхОборотов.Добавить(Перечисления.фин_ТипыВнутригрупповыхОборотовПоБюджету.ВнутригрупповыеОборотыНаУровнеОрганизации);
	//КонецЕсли;
	
	ТекстОтборПоОрганизации = ?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_БюджетированиеПоОрганизациям") И ЗначениеЗаполнено(Организация),"Организация = &Организация","ИСТИНА");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокВГО",					СписокИсключаемыхТиповВнутригрупповыхОборотов);
	Запрос.УстановитьПараметр("ГраницаАктуальности",		?(ГраницаАктуальности='00010101','00010101',КонецДня(ГраницаАктуальности)));
	Запрос.УстановитьПараметр("ГраницаФактическихИПрогнозныхДанных", ?(ГраницаФактическихИПрогнозныхДанных='00010101',КонецДня(ТекущаяДата()),КонецДня(ГраницаФактическихИПрогнозныхДанных)));
	Запрос.УстановитьПараметр("Организация",				Организация);
	Запрос.УстановитьПараметр("Статьи",						ДанныеДляАнализа.ВыгрузитьКолонку("СтатьяБюджета"));
	
	ТаблицаОтбора.Очистить();
	НС = ТаблицаОтбора.Добавить();
	НС.Поле = "СтатьяБюджета";
	НС.Значение = ДанныеДляАнализа.ВыгрузитьКолонку("СтатьяБюджета");
	НС.ВидСравнения = "ВСписке";
	НС = ТаблицаОтбора.Добавить();
	НС.Поле = "СтатьяБюджета.ПометкаУдаления";
	НС.Значение = Ложь;
	НС.ВидСравнения = "Равно";
	НС = ТаблицаОтбора.Добавить();
	НС.Поле = "СтатьяБюджета.ПризнакВнутригрупповогоОборота";
	НС.Значение = СписокИсключаемыхТиповВнутригрупповыхОборотов;
	НС.ВидСравнения = "ВСписке";
	Если ГраницаАктуальности<>'00010101' Тогда
		НС = ТаблицаОтбора.Добавить();
		НС.Поле = "Период";
		НС.Значение = ГраницаАктуальности;
		НС.ВидСравнения = "МеньшеИЛИРавно";
	КонецЕсли;	
	
	// получим список показателей бюджета
	СписокФинансовыхПоказателей = Новый СписокЗначений;
	ЗапросПоказатели = Новый Запрос;
	ЗапросПоказатели.Текст = 
		"ВЫБРАТЬ
		|	СтатьиБюджета.ФинансовыйПоказатель
		|ИЗ
		|	Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
		|ГДЕ
		|	СтатьиБюджета.Ссылка В (&Статьи)
		|	И НЕ СтатьиБюджета.ЭтоГруппа
		|	И НЕ СтатьиБюджета.ПометкаУдаления
		|	И НЕ СтатьиБюджета.ПризнакВнутригрупповогоОборота В (&ВГО)";

	ЗапросПоказатели.УстановитьПараметр("Статьи", ДанныеДляАнализа.ВыгрузитьКолонку("СтатьяБюджета"));
	ЗапросПоказатели.УстановитьПараметр("ВГО", СписокИсключаемыхТиповВнутригрупповыхОборотов);

	Результат = ЗапросПоказатели.Выполнить();
	СписокФинансовыхПоказателей.ЗагрузитьЗначения(Результат.Выгрузить().ВыгрузитьКолонку("Финансовыйпоказатель"));
	Запрос.УстановитьПараметр("Показатели",				СписокФинансовыхПоказателей);
	// параметры отбора
	ОтборыПоДополнительнымРазрезам = Новый Массив;
	Для Каждого СтрокаОтбор Из Отбор Цикл
		Если СтрокаОтбор.Путь="" ИЛИ СтрокаОтбор.ВидСравнения.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		Если Найти(СтрокаОтбор.Путь,"Разрез")<>0 Тогда
			ОтборыПоДополнительнымРазрезам.Добавить(СтрокаОтбор.Путь);
		КонецЕсли;
		Запрос.УстановитьПараметр("ПараметрОтбора"+Строка(Отбор.Индекс(СтрокаОтбор)),СтрокаОтбор.Значение);
	КонецЦикла;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	// расчет по формулам
	ПересчетВНоменклатурныеГруппы = Ложь;
	Для Каждого СтрокаДанных Из ДанныеДляАнализа Цикл
		Если ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения) И СтрокаДанных.ДанныеДляСравнения.ДетализацияПланирования=фин_ОбщегоНазначенияВызовСервераПовтИсп.ДетализацияПланированияНоменклатурныеГруппы() Тогда
			ПересчетВНоменклатурныеГруппы = Истина;
		КонецЕсли;
		МеткаУровня = Строка(СтрокаДанных.НомерСтроки);
		Если (НЕ ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения)) Тогда
			СтруктураПараметровОтбора = Новый Структура;
			Для Каждого Параметр Из Запрос.Параметры Цикл
				Если Найти(Параметр.Ключ,"ПараметрОтбора")<>0 Тогда
					СтруктураПараметровОтбора.Вставить(Параметр.Ключ,Параметр.Значение);
				КонецЕсли;
			КонецЦикла;
			ТекстПоказателиСПсевдонимом = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаПоказатели(Показатели,,,"Оборот");
			ВерсииБюджета = Новый Массив();
			ВерсииБюджета.Добавить(СтрокаДанных.СтатьяБюджета.Версия);
			ТаблицаРасчетыПоФормулам = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьРасчетПоФормуламБюджета(СтрокаДанных.СтатьяБюджета.Владелец,ВерсииБюджета,Организация,СписокИсключаемыхТиповВнутригрупповыхОборотов,СтрокаДанных.НачалоПериода,СтрокаДанных.ОкончаниеПериода,?(ГраницаАктуальности='00010101','00010101',КонецДня(ГраницаАктуальности)),?((НЕ ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения)),Периодичность(),фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СтрокаДанных.ДанныеДляСравнения)),ТекстОтбораОбороты,ТекстФильтраОбороты,СтруктураПараметровОтбора,ВРазрезеВалют,СтрокаДанных.ДанныеДляСравнения,ГраницаФактическихИПрогнозныхДанных);
			МассивСуществующихКолонок = Новый Массив;
			Если ОтборыПоДополнительнымРазрезам.Количество()>0 Тогда
				Для Каждого ПутьОтбора Из ОтборыПоДополнительнымРазрезам Цикл
					Если ТаблицаРасчетыПоФормулам.Колонки.Найти(ПутьОтбора)<>Неопределено Тогда
						МассивСуществующихКолонок.Добавить(ПутьОтбора);
					Иначе
						ТаблицаРасчетыПоФормулам.Колонки.Добавить(ПутьОтбора,фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(Перечисления.фин_ФактическиеПоказателиБюджетирования[ПутьОтбора]).ТипЗначения);
					КонецЕсли;
				КонецЦикла;
				Для Каждого СтрокаТаблицы Из ТаблицаРасчетыПоФормулам Цикл
					Для Каждого ПутьОтбора Из ОтборыПоДополнительнымРазрезам Цикл
						Если МассивСуществующихКолонок.Найти(ПутьОтбора)<>Неопределено Тогда
							Продолжить;
						КонецЕсли;
						СтрокаТаблицы[ПутьОтбора] = СтрокаТаблицы.ДополнительныеРазрезы[ПутьОтбора];
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			Запрос.УстановитьПараметр("ВТ_Формулы"+МеткаУровня,ТаблицаРасчетыПоФормулам);
			ТекстФормированияВременныхТаблиц ="	
			|ВЫБРАТЬ
			|	Обороты.ФинансовыйПоказатель КАК Финансовыйпоказатель,
			|	Обороты.ДополнительныеРазрезы КАК ДополнительныеРазрезы"+фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаГруппировки(мГруппировки,Показатели,ОсновнаяГруппировка,?(ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения),Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СтрокаДанных.ДанныеДляСравнения)),Строка(Периодичность())),,,Истина)+ТекстПоказателиСПсевдонимом+"
			|ПОМЕСТИТЬ ВТ_ФормулыПредрасчет"+МеткаУровня+"
			|ИЗ &ВТ_Формулы"+МеткаУровня+" КАК Обороты
			|"+?(ТекстОтбораОбороты="" И ТекстФильтраОбороты="",""," ГДЕ ")+СтрЗаменить(ТекстОтбораОбороты,"ДополнительныеРазрезы.","")+?(ТекстОтбораОбороты="",""," И ")+СтрЗаменить(ТекстФильтраОбороты,"ДополнительныеРазрезы.","");
			//|";
			Запрос.Текст = ТекстФормированияВременныхТаблиц;
			Запрос.Выполнить();
		КонецЕсли;
	КонецЦикла;
	ТекстФормированияВременныхТаблиц = "";
	ТекстВсеПоказателиСПсевдонимом = "";
	ТекстВсеПоказатели = "";
	МассивРегистров = фин_ОбщегоНазначенияВызовСервераПовтИсп.РегистрыФактическихДанных();
	Для Каждого СтрокаДанных Из ДанныеДляАнализа Цикл
		ТекстИзмерения = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаГруппировки(мГруппировки,Показатели,ОсновнаяГруппировка,?(ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения),Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СтрокаДанных.ДанныеДляСравнения)),Строка(Периодичность())),ПересчетВНоменклатурныеГруппы);

		МеткаУровня = Строка(СтрокаДанных.НомерСтроки);
		ТекстПоказатели = "";
		ТекстПоказателиСПсевдонимом = "";
		ТекстПоказателиСМинусом = "";
		Если НЕ ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения) Тогда
			мТекстПоказатели = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаПоказатели(Показатели,ТекстРазрядность,ТекстРазрядностьКоличество,МеткаУровня);
			мТекстПоказателиСПсевдонимом = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаПоказатели(Показатели,ТекстРазрядность,ТекстРазрядностьКоличество,"Оборот"+МеткаУровня);
			мТекстПоказателиСМинусом = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаПоказатели(Показатели,ТекстРазрядность+"*(-1)",ТекстРазрядностьКоличество+"*(-1)","Оборот"+МеткаУровня);
		Иначе
			мТекстПоказатели = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаПоказатели(Показатели,,,МеткаУровня);
			мТекстПоказателиСПсевдонимом = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаПоказатели(Показатели,,,"Оборот"+МеткаУровня);
			мТекстПоказателиСМинусом = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаПоказатели(Показатели,"*(-1)","*(-1)","Оборот"+МеткаУровня);
		КонецЕсли;
		ТекстВсеПоказателиСПсевдонимом = ТекстВсеПоказателиСПсевдонимом + фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаПоказатели(Показатели,МеткаУровня,МеткаУровня,"Оборот"+МеткаУровня);
		ТекстВсеПоказатели = ТекстВсеПоказатели + фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаПоказатели(Показатели,МеткаУровня,МеткаУровня,МеткаУровня);
		Для Каждого СтрокаДанныхОбход Из ДанныеДляАнализа Цикл
			Если СтрокаДанных.НомерСтроки = СтрокаДанныхОбход.НомерСтроки Тогда
				ТекстПоказатели = ТекстПоказатели + мТекстПоказатели;
				ТекстПоказателиСПсевдонимом = ТекстПоказателиСПсевдонимом + мТекстПоказателиСПсевдонимом;
				ТекстПоказателиСМинусом = ТекстПоказателиСМинусом + мТекстПоказателиСМинусом;
			Иначе
				Для Каждого СтрокаПоказатель Из Показатели Цикл
					Имя = фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(СтрокаПоказатель.Показатель);
					ТекстПоказатели = ТекстПоказатели+",
					|	0 КАК "+Имя+Строка(СтрокаДанныхОбход.НомерСтроки);
					ТекстПоказателиСПсевдонимом = ТекстПоказателиСПсевдонимом+",
					|	0 КАК "+Имя+"Оборот"+Строка(СтрокаДанныхОбход.НомерСтроки);
					ТекстПоказателиСМинусом = ТекстПоказателиСМинусом+",
					|	0 КАК "+Имя+"Оборот"+Строка(СтрокаДанныхОбход.НомерСтроки);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Запрос.УстановитьПараметр("Сценарий"+МеткаУровня,					?(ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения),СтрокаДанных.ДанныеДляСравнения,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПустаяСсылкаСценарий()));
		Запрос.УстановитьПараметр("НачалоПланирования"+МеткаУровня,			СтрокаДанных.НачалоПериода);
		Запрос.УстановитьПараметр("ОкончаниеПланирования"+МеткаУровня,		СтрокаДанных.ОкончаниеПериода);
		Запрос.УстановитьПараметр("ФинансовыйПоказатель"+МеткаУровня,		СтрокаДанных.СтатьяБюджета.ФинансовыйПоказатель);
		
		ТекстФормированияВременныхТаблиц =ТекстФормированияВременныхТаблиц + ?(ТекстФормированияВременныхТаблиц="","","	
	    |ОБЪЕДИНИТЬ ВСЕ");
		Если (НЕ ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения)) Тогда
			ТекстФормированияВременныхТаблиц =ТекстФормированияВременныхТаблиц+"
			|ВЫБРАТЬ
			|	Обороты.ФинансовыйПоказатель КАК Финансовыйпоказатель"+СтрЗаменить(ТекстИзмерения,"Обороты.ДополнительныеРазрезы","Набор")+ТекстПоказателиСПсевдонимом+?(СтрокаДанных.НомерСтроки<>1,"","
			|ПОМЕСТИТЬ ВТ_ПредварительныеОбороты")+"
			|ИЗ ВТ_ФормулыПредрасчет"+МеткаУровня+" КАК Обороты
			|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.фин_КлассификаторНаборовДополнительныхРазрезов КАК Набор
			|		ПО Обороты.ДополнительныеРазрезы = Набор.Ссылка
			|
			|ОБЪЕДИНИТЬ ВСЕ";
		КонецЕсли;
		Если СтрокаДанных.ДанныеДляСравнения = Перечисления.фин_ВидыДанныхОтчета.Прогнозные Тогда
			ТекстФормированияВременныхТаблиц =ТекстФормированияВременныхТаблиц+"
			|ВЫБРАТЬ
			|	Обороты.ФинансовыйПоказатель КАК Финансовыйпоказатель"+ТекстИзмерения+ТекстПоказателиСПсевдонимом+?(СтрокаДанных.НомерСтроки<>1 ИЛИ (НЕ ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения)),"","
			|ПОМЕСТИТЬ ВТ_ПредварительныеОбороты")+"
			|ИЗ РегистрНакопления.фин_ПрогнозИсполненияБюджетов.Обороты(,&ГраницаАктуальности, ,"+ТекстОтборПоОрганизации+" И 
			|																							ПериодПланирования>=&НачалоПланирования"+МеткаУровня+" И ПериодПланирования<=&ОкончаниеПланирования"+МеткаУровня+"
			|																							И ФинансовыйПоказатель = &ФинансовыйПоказатель"+МеткаУровня+?(ТекстФильтраОбороты="",""," И "+ТекстФильтраОбороты)+") КАК Обороты
			|"+?(ТекстОтбораОбороты="",""," ГДЕ ")+ТекстОтбораОбороты;
		ИначеЕсли СтрокаДанных.ДанныеДляСравнения = Перечисления.фин_ВидыДанныхОтчета.ФактическиеСУчетомПрогнозных Тогда
			//ГраницаФактическихДанных = ?(ГраницаФактическихИПрогнозныхДанных='00010101',"&ГраницаАктуальности","&ГраницаФактическихИПрогнозныхДанных");
			ГраницаФактическихДанных = "&ГраницаФактическихИПрогнозныхДанных";
			Для Каждого ИмяРегистра Из МассивРегистров Цикл
				ТекстФормированияВременныхТаблиц =ТекстФормированияВременныхТаблиц+"
				|ВЫБРАТЬ
				|	Обороты.ФинансовыйПоказатель КАК Финансовыйпоказатель"+ТекстИзмерения+ТекстПоказателиСПсевдонимом+?(СтрокаДанных.НомерСтроки<>1 ИЛИ (НЕ ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения)),"","
				|ПОМЕСТИТЬ ВТ_ПредварительныеОбороты")+"
				|ИЗ РегистрНакопления."+ИмяРегистра+".Обороты(,&ГраницаАктуальности, ,"+ТекстОтборПоОрганизации+" И 
				|																							Сценарий = &Сценарий"+МеткаУровня+" И ПериодПланирования>=&НачалоПланирования"+МеткаУровня+" И ПериодПланирования<=&ОкончаниеПланирования"+МеткаУровня+"
				|																							И ФинансовыйПоказатель = &ФинансовыйПоказатель"+МеткаУровня+?(ТекстФильтраОбороты="",""," И "+ТекстФильтраОбороты)+") КАК Обороты
				|"+?(ТекстОтбораОбороты="",""," ГДЕ ")+ТекстОтбораОбороты+"
				|ОБЪЕДИНИТЬ ВСЕ";
			КонецЦикла;
			ТекстФормированияВременныхТаблиц =ТекстФормированияВременныхТаблиц+"
			|ВЫБРАТЬ
			|	Обороты.ФинансовыйПоказатель КАК Финансовыйпоказатель"+ТекстИзмерения+ТекстПоказателиСПсевдонимом+?(СтрокаДанных.НомерСтроки<>1 ИЛИ (НЕ ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения)),"","
			|ПОМЕСТИТЬ ВТ_ПредварительныеОбороты")+"
			|ИЗ РегистрНакопления.фин_ПрогнозИсполненияБюджетов.Обороты(,&ГраницаАктуальности, ,"+ТекстОтборПоОрганизации+" И 
			|																							ПериодПланирования>=&НачалоПланирования"+МеткаУровня+" И ПериодПланирования<=&ОкончаниеПланирования"+МеткаУровня+"  И ПериодПланирования >=&ГраницаФактическихИПрогнозныхДанных
			|																							И ФинансовыйПоказатель = &ФинансовыйПоказатель"+МеткаУровня+?(ТекстФильтраОбороты="",""," И "+ТекстФильтраОбороты)+") КАК Обороты
			|"+?(ТекстОтбораОбороты="",""," ГДЕ ")+ТекстОтбораОбороты;
		Иначе
			Если ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения) Тогда
				ТекстФормированияВременныхТаблиц =ТекстФормированияВременныхТаблиц+"
				|ВЫБРАТЬ
				|	Обороты.ФинансовыйПоказатель КАК Финансовыйпоказатель"+ТекстИзмерения+ТекстПоказателиСПсевдонимом+?(СтрокаДанных.НомерСтроки<>1 ИЛИ (НЕ ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения)),"","
				|ПОМЕСТИТЬ ВТ_ПредварительныеОбороты")+"
				|ИЗ РегистрНакопления.фин_ОборотыБюджетов.Обороты(,&ГраницаАктуальности, ,"+ТекстОтборПоОрганизации+" И 
				|																							Сценарий = &Сценарий"+МеткаУровня+" И ПериодПланирования>=&НачалоПланирования"+МеткаУровня+" И ПериодПланирования<=&ОкончаниеПланирования"+МеткаУровня+"
				|																							И ФинансовыйПоказатель = &ФинансовыйПоказатель"+МеткаУровня+?(ТекстФильтраОбороты="",""," И "+ТекстФильтраОбороты)+") КАК Обороты
				|"+?(ТекстОтбораОбороты="",""," ГДЕ ")+ТекстОтбораОбороты;
			Иначе
				Для Каждого ИмяРегистра Из МассивРегистров Цикл
					ТекстФормированияВременныхТаблиц = ТекстФормированияВременныхТаблиц+?(МассивРегистров.Найти(ИмяРегистра)=0,"","
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|") +"
					|ВЫБРАТЬ
					|	Обороты.ФинансовыйПоказатель КАК Финансовыйпоказатель"+ТекстИзмерения+ТекстПоказателиСПсевдонимом+?(СтрокаДанных.НомерСтроки<>1 ИЛИ (НЕ ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения)),"","
					|ПОМЕСТИТЬ ВТ_ПредварительныеОбороты")+"
					|ИЗ РегистрНакопления."+ИмяРегистра+".Обороты(,&ГраницаАктуальности, ,"+ТекстОтборПоОрганизации+" И 
					|																							Сценарий = &Сценарий"+МеткаУровня+" И ПериодПланирования>=&НачалоПланирования"+МеткаУровня+" И ПериодПланирования<=&ОкончаниеПланирования"+МеткаУровня+"
					|																							И ФинансовыйПоказатель = &ФинансовыйПоказатель"+МеткаУровня+?(ТекстФильтраОбороты="",""," И "+ТекстФильтраОбороты)+") КАК Обороты
					|"+?(ТекстОтбораОбороты="",""," ГДЕ ")+ТекстОтбораОбороты;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ТекстФормированияВременныхТаблиц =ТекстФормированияВременныхТаблиц+"
		|;
		|ВЫБРАТЬ
		|	Обороты.ФинансовыйПоказатель КАК Финансовыйпоказатель"+СтрЗаменить(ТекстИзмерения,"ДополнительныеРазрезы.","")+ТекстВсеПоказателиСПсевдонимом+"
		|ПОМЕСТИТЬ ВТ_Обороты
		|ИЗ ВТ_ПредварительныеОбороты КАК Обороты";
	Запрос.Текст = ТекстФормированияВременныхТаблиц;
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ 
	|	СтатьиБюджета.Ссылка КАК СтатьяБюджета,
	|	СтатьиБюджета.КодСтрокиБюджета КАК КодСтрокиБюджета"+ТекстВсеПоказатели+СтрЗаменить(ТекстИзмерения,"ДополнительныеРазрезы.","")+"
	|ИЗ
	|	Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Обороты КАК Обороты
	|		ПО СтатьиБюджета.ФинансовыйПоказатель = Обороты.ФинансовыйПоказатель
	|ГДЕ
	|	СтатьиБюджета.Ссылка В (&Статьи) "+?(ТекстОтбораИтоговыеОбороты="",""," И ")+ТекстОтбораИтоговыеОбороты;
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ЭтоПлановыеДанные(Данные)
	Возврат ЗначениеЗаполнено(Данные) И ТипЗнч(Данные)=фин_ОбщегоНазначенияВызовСервераПовтИсп.ТипСправочникСценариевПланирования();	
КонецФункции

Функция Периодичность()
	Для Каждого СтрокаДанных Из ДанныеДляАнализа Цикл
		Если ЭтоПлановыеДанные(СтрокаДанных.ДанныеДляСравнения) Тогда
			Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СтрокаДанных.ДанныеДляСравнения);
		КонецЕсли;
	КонецЦикла;
	Возврат Перечисления.фин_Периодичность.Месяц;
КонецФункции

Функция ПолучитьСКД(мГруппировки)
	//получаем схему компоновки данных
	СхемаКомпоновкиДанных=фин_УправлениеОтчетамиБюджетирование.ПолучитьСКД(ЭтотОбъект,мГруппировки,СтруктураПеревода,ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных"),КЭШ,"фин_АнализРассогласованияСтатей");
	Возврат СхемаКомпоновкиДанных;
КонецФункции

Функция ПолучитьНастройкиСКД()
	Настройки = фин_УправлениеОтчетамиБюджетирование.ПолучитьНастройкиСКД(ЭтотОбъект,КомпоновщикНастроек,СтруктураПеревода,КЭШ,Периодичность(),"фин_АнализРассогласованияСтатей");
	Возврат Настройки;
КонецФункции

Процедура Скомпоновать(ДокументРезультат,Отбор) Экспорт
	Если НЕ ПроверитьЗаполнениеПараметров(Отбор) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Отчет не сформирован!");
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаОтбор Из Отбор Цикл
		СтрокаОтбор.Путь = фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(СтрокаОтбор.ПолеОтбора);
	КонецЦикла;
	
	//ВЫБОР СХЕМЫ КОМПОНОВКИ И НАСТРОЙКА ПОЛЕЙ НАБОРА ДАННЫХ
	
	//Если Не ЗначениеЗаполнено(Параметр_Сценарий.Значение) Тогда
	//	Сообщить("Не указан сценарий!");
	//	Возврат;
	//КонецЕсли;
	
	мГруппировки = фин_УправлениеОтчетамиБюджетирование.ПромежуточныеГруппировкиОтчета(Группировки,ОсновнаяГруппировка);
	ТаблицаВнешнегоНабораДанных = ПолучитьТаблицуДанных(Отбор,мГруппировки);
	СхемаКомпоновкиДанных = ПолучитьСКД(мГруппировки);
	Настройки = ПолучитьНастройкиСКД();

	//ПОДГОТОВКА К ВЫПОЛНЕНИЮ - ФОРМИРОВАНИЕ МАКЕТА КОМПОНОВКИ
	Заголовок=фин_УправлениеМногоязычнымиОтчетами.ПолучитьПереводТермина("АнализРассогласованияСтатей",ЯзыкОтчета,,КЭШ)+Символы.ПС+фин_УправлениеМногоязычнымиОтчетами.ПолучитьПереводТермина(ЗаголовокОтчета,ЯзыкОтчета,,КЭШ);
	фин_УправлениеОтчетамиБюджетирование.ВыполнитьФормированиеОтчета(ЭтотОбъект,СхемаКомпоновкиДанных,КомпоновщикНастроек,Настройки,ДанныеРасшифровки,ДокументРезультат,ТаблицаВнешнегоНабораДанных,"фин_АнализРассогласованияСтатей",Заголовок);	
	
КонецПроцедуры

ДоступныеПоказатели = Новый СписокЗначений;
ДоступныеГруппировки = Новый СписокЗначений;
ПереченьОсновныхРеквизитов = Новый Массив;
ЗаполнениеПараметров = Новый Структура;
//ЗаполнениеПараметров.Вставить("ГраницаАктуальности",ТекущаяДата());
//ЗаполнениеПараметров.Вставить("ГраницаФактическихИПрогнозныхДанных",ТекущаяДата());
ЗаполнениеПараметров.Вставить("ЯзыкОтчета",фин_ОбщегоНазначенияСервер.ОсновнойЯзыкОтчетов());
ЗаполнениеПараметров.Вставить("ШиринаКолонкиПоказателя",12);
ЗаполнениеПараметров.Вставить("ШиринаКолонкиРеквизита",25);
ЗаполнениеПараметров.Вставить("ШиринаКолонкиСтатьиБюджета",25);
ЗаполнениеПараметров.Вставить("РасположениеИтоговОтчета",Перечисления.фин_РасположениеИтоговОтчета.Конец);

ДополнительныеПараметры = Новый Массив;
//ДополнительныеПараметры.Добавить("ГраницаАктуальности");
ДополнительныеПараметры.Добавить("Периодичность");
ДополнительныеПараметры.Добавить("ЯзыкОтчета");
ДополнительныеПараметры.Добавить("ВыводитьСреднююЦену");

ПараметрыОформления = Новый Массив;
ПараметрыОформления.Добавить("ЗаголовокОтчета");
ПараметрыОформления.Добавить("ВыводитьКодыСтрокБюджета");
//ПараметрыОформления.Добавить("УпорядочиваниеСтатей");
ПараметрыОформления.Добавить("ШиринаКолонкиРеквизита");
ПараметрыОформления.Добавить("ШиринаКолонкиСтатьиБюджета");
ПараметрыОформления.Добавить("ШиринаКолонкиПоказателя");
ПараметрыОформления.Добавить("ВыводитьГруппыСтатейВнизу");
ПараметрыОформления.Добавить("АналитическиеПоляВОднойКолонке");
ПараметрыОформления.Добавить("ПоказателиВОднойКолонке");
ПараметрыОформления.Добавить("РасположениеИтоговОтчета");

ДанныеРасшифровкиМакета = Новый Соответствие;

КЭШ = Новый Соответствие;

ДополнительныеПредставления = Новый СписокЗначений;

ОтборыРасшифровки = Новый Массив;

ТаблицаОтбора = Новый ТаблицаЗначений;
ТаблицаОтбора.Колонки.Добавить("Поле");
ТаблицаОтбора.Колонки.Добавить("ВидСравнения");
ТаблицаОтбора.Колонки.Добавить("Значение");
