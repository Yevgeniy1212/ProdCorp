Перем ЗаполнениеПараметров Экспорт;
Перем СохраненнаяНастройка Экспорт;
Перем ДополнительныеПараметры Экспорт;
Перем ПараметрыОформления Экспорт;
Перем СтруктураПеревода;
Перем КЭШ;
Перем ДоступныеПоказатели Экспорт;
Перем ДоступныеГруппировки Экспорт;
Перем ПереченьОсновныхРеквизитов Экспорт;
Перем ДополнительныеПредставления Экспорт;
Перем ДанныеРасшифровки Экспорт;
Перем ОтборыРасшифровки Экспорт;
Перем ТаблицаОтбора Экспорт;

Процедура ЗаполнитьСпискиПоказателейИГруппировок() Экспорт
	ДоступныеПоказатели.Очистить();
	ДоступныеГруппировки.Очистить();
	ДоступныеПоказатели.Добавить(Перечисления.фин_ДополнительныеПоказателиОтчетов.ЦелевоеЗначение);
	ДоступныеПоказатели.Добавить(Перечисления.фин_ДополнительныеПоказателиОтчетов.Исполнение);
	ДоступныеПоказатели.Добавить(Перечисления.фин_ДополнительныеПоказателиОтчетов.Остаток);
	ДоступныеГруппировки.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.ФинансовыйПоказатель,"Финансовый показатель");
	ДоступныеГруппировки.Добавить(Перечисления.фин_ДополнительныеРазрезыОтчетов.Сценарий,"Сценарий (контролируемый)");
	ДоступныеГруппировки.Добавить(Перечисления.фин_ДополнительныеРазрезыОтчетов.КонтролирующийСценарий,"Контролирующий сценарий");
	ДоступныеГруппировки.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.ПериодПланирования,"Период планирования");
	Для Каждого СтрокаРазрез Из фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПолучитьПолныйСписокРазрезов() Цикл
		ДоступныеГруппировки.Добавить(СтрокаРазрез.Значение,фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(СтрокаРазрез.Значение));
	КонецЦикла;
	ДоступныеГруппировки.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.Организация,"Организация");
КонецПроцедуры

Функция ПроверитьЗаполнениеПараметров()
	Ошибки = Ложь;
	Если ?(ИспользованиеКонтроля=Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриИсполнении,Группировки.НайтиСтроки(Новый Структура("Измерение",Перечисления.фин_ДополнительныеРазрезыОтчетов.КонтролирующийСценарий)).Количество()=0,Группировки.НайтиСтроки(Новый Структура("Измерение",Перечисления.фин_ДополнительныеРазрезыОтчетов.Сценарий)).Количество()=0) И (Группировки.НайтиСтроки(Новый Структура("Измерение",Перечисления.фин_ФактическиеПоказателиБюджетирования.ПериодПланирования)).Количество()<>0 ИЛИ ОсновнаяГруппировка = Перечисления.фин_ФактическиеПоказателиБюджетирования.ПериодПланирования) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя использовать группировку по периоду планирования без группировки по "+?(ИспользованиеКонтроля=Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриПланировании,"","контролирующему ")+"сценарию!");
		Ошибки = Истина;
	КонецЕсли;
	
	Для Каждого СтрокаПоказатель Из Показатели Цикл
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.Показатель) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен показатель в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка показателей!");
			Ошибки = Истина;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаПоказатель Из Группировки Цикл
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.Измерение) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена группировка в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка группировок!");
			Ошибки = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.ВидГруппировки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен вид группировки в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка группировок!");
			Ошибки = Истина;
		КонецЕсли;
		Если СтрокаПоказатель.Измерение = Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта И Показатели.НайтиСтроки(Новый Структура("Показатель",Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма)).Количество()=0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя использовать группировку по валюте без отражения валютной суммы в отчете!");
			Ошибки = Истина;
		КонецЕсли;
	КонецЦикла;
	Если ОсновнаяГруппировка = Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта И Показатели.НайтиСтроки(Новый Структура("Показатель",Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма)).Количество()=0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя использовать разделение данных по валюте без отражения валютной суммы в отчете!");
		Ошибки = Истина;
	КонецЕсли;
	//Если УпорядочиваниеСтатей="КодСтрокиБюджета" И НЕ ВыводитьКодыСтрокБюджета Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя упорядочивать статьи по коду строки, если он не выводится в отчет!");
	//	Ошибки = Истина;
	//КонецЕсли;
	Возврат НЕ Ошибки;	
КонецФункции

Функция ПолучитьТаблицуДанных(Отбор,мГруппировки)
	ТекстРазрядность = "";
	ТекстРазрядностьКоличество = "";
	Если ИспользованиеКонтроля = Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриИсполнении И Метаданные.Константы.Найти("фин_РазрядностьПланированияБюджетов") <> Неопределено Тогда
		РазрядностьПланирования = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("РазрядностьПланированияБюджетов");
		Если РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.Миллионы Тогда
			ТекстРазрядность="/1000000";
		ИначеЕсли РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.СотниТысяч Тогда
			ТекстРазрядность="/100000";
		ИначеЕсли РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.ДесяткиТысяч Тогда
			ТекстРазрядность="/10000";
		ИначеЕсли РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.Тысячи Тогда
			ТекстРазрядность="/1000";
		ИначеЕсли РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.Сотни Тогда
			ТекстРазрядность="/100";
		КонецЕсли;
		Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПрименятьРазрядностьДляКоличества") Тогда
			ТекстРазрядностьКоличество = ТекстРазрядность;
		КонецЕсли;
	Иначе
		РазрядностьПланирования = Неопределено;
	КонецЕсли;
	ГруппировкиБезПериода = Группировки.ВыгрузитьКолонки();
	ТекстПоляПромежуточныхТаблиц = "";
	ТекстСоединения = "";
	ТекстСоединенияЦелевых = "";
	ТекстСоединенияПервичного = "";
	ТекстПоляЗапросаГруппировки = "";
	ТекстПоляФинальныхТаблиц = "";
	Для Каждого СтрокаГруппа Из мГруппировки Цикл
		Если СтрокаГруппа.Измерение = Перечисления.фин_ФактическиеПоказателиБюджетирования.ПериодПланирования Тогда
			ТекстПоляЗапросаГруппировки = ТекстПоляЗапросаГруппировки + ",
			|	НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,День)";
			Продолжить;
		КонецЕсли;
		НС = ГруппировкиБезПериода.Добавить();
		ЗаполнитьЗначенияСвойств(НС,СтрокаГруппа);
		
		Если СтрокаГруппа.Измерение = Перечисления.фин_ДополнительныеРазрезыОтчетов.Сценарий Тогда
			ТекстПоляЗапросаГруппировки = ТекстПоляЗапросаГруппировки + ",
			|	Обороты.Сценарий";
			Продолжить;
		КонецЕсли;
		Если СтрокаГруппа.Измерение = Перечисления.фин_ДополнительныеРазрезыОтчетов.КонтролирующийСценарий Тогда
			ТекстПоляЗапросаГруппировки = ТекстПоляЗапросаГруппировки + ",
			|	Обороты.КонтролирующийСценарий";
			Продолжить;
		КонецЕсли;
		Если СтрокаГруппа.Измерение = Перечисления.фин_ФактическиеПоказателиБюджетирования.ФинансовыйПоказатель Тогда
			ТекстПоляЗапросаГруппировки = ТекстПоляЗапросаГруппировки + ",
			|	Обороты.ФинансовыйПоказатель";
			Продолжить;
		КонецЕсли;
		ИмяРазреза = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(СтрокаГруппа.Измерение);
		ТекстПоляПромежуточныхТаблиц = ТекстПоляПромежуточныхТаблиц+",
		|	Обороты."+?(Найти(ИмяРазреза,"Разрез")=0,"","ДополнительныеРазрезы.")+ИмяРазреза+" КАК "+ИмяРазреза+",
		|	ВЫБОР	КОГДА Обороты."+?(Найти(ИмяРазреза,"Разрез")=0,"","ДополнительныеРазрезы.")+ИмяРазреза+".Ссылка.Ссылка ЕСТЬ NULL ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ КАК "+ИмяРазреза+"НеЗаполнено";
		ТекстПоляФинальныхТаблиц = ТекстПоляФинальныхТаблиц+",
		|	Обороты."+ИмяРазреза+" КАК "+ИмяРазреза+",
		|	Обороты."+ИмяРазреза+"НеЗаполнено КАК "+ИмяРазреза+"НеЗаполнено";
		ТекстСоединения = ТекстСоединения+"
		|			И (Обороты."+ИмяРазреза+" = КонтролируемыеФинансовыеПоказателиОбороты."+ИмяРазреза+" ИЛИ (Обороты."+ИмяРазреза+"НеЗаполнено И КонтролируемыеФинансовыеПоказателиОбороты."+ИмяРазреза+"НеЗаполнено))";
		ТекстСоединенияПервичного = ТекстСоединенияПервичного+"
		|			И (Обороты."+?(Найти(ИмяРазреза,"Разрез")=0,"","ДополнительныеРазрезы.")+ИмяРазреза+" = КонтролируемыеФинансовыеПоказателиОбороты."+ИмяРазреза+" ИЛИ (ВЫБОР	КОГДА Обороты."+?(Найти(ИмяРазреза,"Разрез")=0,"","ДополнительныеРазрезы.")+ИмяРазреза+".Ссылка.Ссылка ЕСТЬ NULL ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ И КонтролируемыеФинансовыеПоказателиОбороты."+ИмяРазреза+"НеЗаполнено))";
		ТекстСоединенияЦелевых = ТекстСоединенияЦелевых+"
		|			И (Обороты."+ИмяРазреза+" = КонтролируемыеФинансовыеПоказателиОбороты."+ИмяРазреза+" ИЛИ (Обороты."+ИмяРазреза+"НеЗаполнено И КонтролируемыеФинансовыеПоказателиОбороты."+ИмяРазреза+"НеЗаполнено))";
		ТекстПоляЗапросаГруппировки = ТекстПоляЗапросаГруппировки+",
		|	Обороты."+?(Найти(ИмяРазреза,"Разрез")=0,"","ДополнительныеРазрезы.")+ИмяРазреза+",
		|	ВЫБОР	КОГДА Обороты."+?(Найти(ИмяРазреза,"Разрез")=0,"","ДополнительныеРазрезы.")+ИмяРазреза+".Ссылка.Ссылка ЕСТЬ NULL ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ";
	КонецЦикла;
		ТекстИзмеренияБезПериода = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаГруппировки(ГруппировкиБезПериода,Показатели,?(ОсновнаяГруппировка=Перечисления.фин_ФактическиеПоказателиБюджетирования.ПериодПланирования,Неопределено,ОсновнаяГруппировка),"День");
		ТекстИзмерения = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаГруппировки(мГруппировки,Показатели,ОсновнаяГруппировка,"День");
	//	ТекстПоляЗапросаГруппировки = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаГруппировки(Группировки,Показатели,ОсновнаяГруппировка,"День",,Истина);
	ТекстПоказатели = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаПоказатели(Показатели);
	ТекстПоказателиСПсевдонимом = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаПоказатели(Показатели,,,"Оборот");
	ТекстФильтраОбороты = "";
	ТекстОтбораОбороты = "";
	ТекстФильтраОборотыСИсключением = "";
	фин_УправлениеОтчетамиБюджетирование.ЗаполнитьТекстУсловийОтбора(Отбор,ТекстОтбораОбороты,,ТекстФильтраОбороты);
	фин_УправлениеОтчетамиБюджетирование.ЗаполнитьТекстУсловийОтбора(Отбор,"",,ТекстФильтраОборотыСИсключением,Новый Структура("КонтролирующийСценарий"));
	
	СписокИсключаемыхТиповВнутригрупповыхОборотов = Новый Массив;
	СписокИсключаемыхТиповВнутригрупповыхОборотов.Добавить(Перечисления.фин_ТипыВнутригрупповыхОборотовПоБюджету.ВнутригрупповыеОбороты);
	Если Группировки.НайтиСтроки(Новый Структура("Измерение",Перечисления.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение)).Количество()>0 ИЛИ ОсновнаяГруппировка=Перечисления.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение Тогда
		СписокИсключаемыхТиповВнутригрупповыхОборотов.Добавить(Перечисления.фин_ТипыВнутригрупповыхОборотовПоБюджету.ВнутригрупповыеОборотыНаУровнеПодразделения);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		СписокИсключаемыхТиповВнутригрупповыхОборотов.Добавить(Перечисления.фин_ТипыВнутригрупповыхОборотовПоБюджету.ВнутригрупповыеОборотыНаУровнеОрганизации);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПланирования",			НачалоПериодаКонтроля);
	Запрос.УстановитьПараметр("ОкончаниеПланирования",		КонецДня(ОкончаниеПериодаКонтроля));
	Запрос.УстановитьПараметр("ВидКонтроля",				ВидКонтроля);
	Запрос.УстановитьПараметр("ИспользованиеКонтроля",		ИспользованиеКонтроля);
	Запрос.УстановитьПараметр("ГраницаАктуальности",		?(ГраницаАктуальности='00010101','00010101',КонецДня(ГраницаАктуальности)));
	Запрос.УстановитьПараметр("Организация",				Организация);
	Запрос.УстановитьПараметр("ВалютаУпр",					фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета"));
	
	ТаблицаОтбора.Очистить();
	Если ГраницаАктуальности<>'00010101' Тогда
		НС = ТаблицаОтбора.Добавить();
		НС.Поле = "Период";
		НС.Значение = ГраницаАктуальности;
		НС.ВидСравнения = "МеньшеИЛИРавно";
	КонецЕсли;
	
	// параметры отбора
	Для Каждого СтрокаОтбор Из Отбор Цикл
		Если СтрокаОтбор.Путь="" ИЛИ СтрокаОтбор.ВидСравнения.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		Запрос.УстановитьПараметр("ПараметрОтбора"+Строка(Отбор.Индекс(СтрокаОтбор)),СтрокаОтбор.Значение);
	КонецЦикла;
	ПолеПериодичность = "Периодичность";
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Если ВидКонтроля = Перечисления.фин_ВидыКонтролируемогоЗначенияБюджета.Ограничивающее Тогда
		ТекстПериодПланирования = "ВЫБОР";
		Для Каждого ЗначениеПеречисления Из Метаданные.Перечисления.фин_Периодичность.ЗначенияПеречисления Цикл
			ТекстПериодПланирования =ТекстПериодПланирования+"
			|	КОГДА Обороты.КонтролирующийСценарий."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолеПериодичность()+"=ЗНАЧЕНИЕ(Перечисление.фин_Периодичность."+ЗначениеПеречисления.Имя+") ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,"+ЗначениеПеречисления.Имя+")";
		КонецЦикла;
		ТекстПериодПланирования = ТекстПериодПланирования+"
		|	ИНАЧЕ Обороты.ПериодПланирования
		|КОНЕЦ";
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Обороты.ФинансовыйПоказатель КАК ФинансовыйПоказатель,
		|	Обороты.Сценарий КАК Сценарий,
		|	Обороты.КонтролирующийСценарий КАК КонтролирующийСценарий,
		|	Обороты.ПериодПланирования КАК ПериодПланирования,
		|	Обороты.ИспользованиеКонтролируемогоЗначения КАК ИспользованиеКонтролируемогоЗначения"+ТекстПоляПромежуточныхТаблиц+"
		|ПОМЕСТИТЬ ВТ_УстановкаОграничений
		|ИЗ
		|	РегистрСведений.фин_УстановкаОграниченийПоБюджетам.СрезПоследних(
		|			&ГраницаАктуальности,
		|			ВидКонтролируемогоЗначения = &ВидКонтроля
		|				И ИспользованиеКонтролируемогоЗначения = &ИспользованиеКонтроля
		|				И (ПериодПланирования >= &НачалоПланирования
		|					И ПериодПланирования <= &ОкончаниеПланирования)
		|				И ВЫБОР
		|					КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ Организация = &Организация
		|				КОНЕЦ"+?(ТекстФильтраОбороты="",""," И "+ТекстФильтраОбороты)+") КАК Обороты
		|;
		|ВЫБРАТЬ
		|	Обороты.Сценарий,
		|	Обороты.КонтролирующийСценарий,
		|	Обороты.ФинансовыйПоказатель КАК ФинансовыйПоказатель,
		|	Обороты.ИспользованиеКонтролируемогоЗначения КАК ИспользованиеКонтролируемогоЗначения,
		|	"+ТекстПериодПланирования+" КАК ПериодПланирования"+ТекстПоляПромежуточныхТаблиц+",
		|	Обороты.СуммаСценарияКонтрольОборот КАК ЦелевоеЗначение,
		|	Обороты.СуммаСценарияИсполнениеОборот"+ТекстРазрядность+" КАК Исполнение,
		|	Обороты.СуммаСценарияКонтрольОборот - Обороты.СуммаСценарияИсполнениеОборот"+ТекстРазрядность+" КАК Остаток
		|ПОМЕСТИТЬ ВТ_КонтролируемыеОбороты
		|ИЗ
		|	РегистрНакопления.фин_КонтролируемыеФинансовыеПоказатели.Обороты(
		|				,
		|				,
		|				,
		|				ПериодПланирования>=&НачалоПланирования И ПериодПланирования<=&ОкончаниеПланирования И ИспользованиеКонтролируемогоЗначения = &ИспользованиеКонтроля
		|					И ВЫБОР
		|						КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ Организация = &Организация
		|					КОНЕЦ"+?(ТекстФильтраОбороты="",""," И "+ТекстФильтраОбороты)+") КАК Обороты
		|;
		|ВЫБРАТЬ
		|	Обороты.ФинансовыйПоказатель КАК ФинансовыйПоказатель,
		|	Обороты.ФинансовыйПоказатель.Код КАК Код,
		|	Обороты.ФинансовыйПоказатель.Наименование КАК Наименование,
		|	Обороты.ПериодПланирования КАК ПериодПланирования,
		|	КонтролируемыеФинансовыеПоказателиОбороты.ЦелевоеЗначение КАК ЦелевоеЗначениеОборот,
		|	КонтролируемыеФинансовыеПоказателиОбороты.Исполнение КАК ИсполнениеОборот,
		|	КонтролируемыеФинансовыеПоказателиОбороты.Остаток КАК ОстатокОборот"+СтрЗаменить(СтрЗаменить(СтрЗаменить(ТекстИзмеренияБезПериода,"ДополнительныеРазрезы.",""),"Обороты.Сценарий","КонтролируемыеФинансовыеПоказателиОбороты.Сценарий"),"Обороты.КонтролирующийСценарий","КонтролируемыеФинансовыеПоказателиОбороты.КонтролирующийСценарий")+"
		|ПОМЕСТИТЬ ВТ_Обороты
		|ИЗ
		|	ВТ_УстановкаОграничений КАК Обороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КонтролируемыеОбороты КАК КонтролируемыеФинансовыеПоказателиОбороты
		|		ПО Обороты.Сценарий = КонтролируемыеФинансовыеПоказателиОбороты.Сценарий
		|			И Обороты.ФинансовыйПоказатель = КонтролируемыеФинансовыеПоказателиОбороты.ФинансовыйПоказатель
		|			И Обороты.ИспользованиеКонтролируемогоЗначения = КонтролируемыеФинансовыеПоказателиОбороты.ИспользованиеКонтролируемогоЗначения"+ТекстСоединения+"
		|			И Обороты.ПериодПланирования = КонтролируемыеФинансовыеПоказателиОбороты.ПериодПланирования"+?(ТекстОтбораОбороты="","","
		|ГДЕ
		|	")+ТекстОтбораОбороты+"
		|;
		|ВЫБРАТЬ 
		|	Обороты.ФинансовыйПоказатель"+ТекстПоказатели+СтрЗаменить(ТекстИзмерения,"ДополнительныеРазрезы.","")+" 
		|ИЗ ВТ_Обороты КАК Обороты
		|";
	Иначе
		МассивРегистров = фин_ОбщегоНазначенияВызовСервераПовтИсп.РегистрыФактическихДанных();
		СценарийПериодичности = ?(ИспользованиеКонтроля=Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриИсполнении,"КонтролирующийСценарий","Сценарий");
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Обороты.ФинансовыйПоказатель КАК ФинансовыйПоказатель,
		|	Обороты.Сценарий КАК Сценарий,
		|	Обороты.КонтролирующийСценарий КАК КонтролирующийСценарий,
		|	Обороты.ПериодПланирования КАК ПериодПланирования"+ТекстПоляПромежуточныхТаблиц+"
		|ПОМЕСТИТЬ ВТ_УстановкаОграничений
		|ИЗ
		|	РегистрСведений.фин_УстановкаОграниченийПоБюджетам.СрезПоследних(
		|			&ГраницаАктуальности,
		|			ВидКонтролируемогоЗначения = &ВидКонтроля
		|				И ИспользованиеКонтролируемогоЗначения = &ИспользованиеКонтроля
		|				И (ПериодПланирования >= &НачалоПланирования
		|					И ПериодПланирования <= &ОкончаниеПланирования)
		|				И ВЫБОР
		|					КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ Организация = &Организация
		|				КОНЕЦ"+?(ТекстФильтраОбороты="",""," И "+ТекстФильтраОбороты)+") КАК Обороты
		|;
		|ВЫБРАТЬ
		|	Обороты.Сценарий,
		|	Обороты.КонтролирующийСценарий КАК КонтролирующийСценарий,
		|	Обороты.ФинансовыйПоказатель КАК ФинансовыйПоказатель,
		|	Обороты.ПериодПланирования КАК ПериодПланирования"+ТекстПоляПромежуточныхТаблиц+",
		|	СУММА(Обороты.СуммаСценарияКонтроль) КАК План
		|ПОМЕСТИТЬ ВТ_ЦелевыеОбороты
		|ИЗ
		|	РегистрСведений.фин_ЦелевыеЗначенияПоБюджетам КАК Обороты
		|ГДЕ Обороты.ПериодПланирования>=&НачалоПланирования И Обороты.ПериодПланирования<=&ОкончаниеПланирования И Обороты.ИспользованиеКонтролируемогоЗначения = &ИспользованиеКонтроля
		|					И ВЫБОР
		|						КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ Обороты.Организация = &Организация
		|					КОНЕЦ "+?(ТекстФильтраОбороты="",""," И "+ТекстФильтраОбороты)+"
		|СГРУППИРОВАТЬ ПО
		|	Обороты.Сценарий,
		|	Обороты.КонтролирующийСценарий,
		|	Обороты.ФинансовыйПоказатель,
		|	Обороты.ПериодПланирования"+ТекстПоляЗапросаГруппировки+"
		|;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЦелевыеОбороты.Сценарий,
		|	ВТ_ЦелевыеОбороты.ПериодПланирования
		|ПОМЕСТИТЬ ВТ_СценарииИПериоды
		|ИЗ
		|	ВТ_ЦелевыеОбороты КАК ВТ_ЦелевыеОбороты

		|СГРУППИРОВАТЬ ПО
		|	ВТ_ЦелевыеОбороты.Сценарий,
		|	ВТ_ЦелевыеОбороты.ПериодПланирования
		|;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СценарииИПериоды.Сценарий,
		|	ВТ_СценарииИПериоды.ПериодПланирования,
		|	ВТ_СценарииИПериоды.Сценарий.Валюта КАК Валюта,
		|	ВТ_СценарииИПериоды.Сценарий.ИспользоватьКурсыСценария КАК ИспользоватьКурсыСценария
		|ПОМЕСТИТЬ ВТ_ТаблицаСценариевПоПериодам
		|ИЗ
		|	ВТ_СценарииИПериоды КАК ВТ_СценарииИПериоды
		|;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаСценариевПоПериодам.ПериодПланирования,
		|	ВТ_ТаблицаСценариевПоПериодам.Валюта,
		|	МАКСИМУМ(КурсыВалют.Период) КАК ПериодКурса,
		|	МАКСИМУМ(КурсыВалютПоСценариям.Период) КАК ПериодКурсаСценария
		|ПОМЕСТИТЬ ВТ_ПериодыКурсовВалютСценариев
		|ИЗ
		|	ВТ_ТаблицаСценариевПоПериодам КАК ВТ_ТаблицаСценариевПоПериодам
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|		ПО ВТ_ТаблицаСценариевПоПериодам.Валюта = КурсыВалют.Валюта
		|			И ВТ_ТаблицаСценариевПоПериодам.ПериодПланирования >= КурсыВалют.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"КурсыВалютПоСценариям КАК КурсыВалютПоСценариям
		|		ПО ВТ_ТаблицаСценариевПоПериодам.Валюта = КурсыВалютПоСценариям.Валюта
		|			И ВТ_ТаблицаСценариевПоПериодам.ПериодПланирования >= КурсыВалютПоСценариям.Период

		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТаблицаСценариевПоПериодам.ПериодПланирования,
		|	ВТ_ТаблицаСценариевПоПериодам.Валюта
		|;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаСценариевПоПериодам.Сценарий,
		|	ВТ_ТаблицаСценариевПоПериодам.ПериодПланирования,
		|	ВТ_ТаблицаСценариевПоПериодам.Валюта,
		|	ВТ_ТаблицаСценариевПоПериодам.ИспользоватьКурсыСценария,
		|	ЕСТЬNULL(КурсыВалют.Курс, 0) КАК Курс,
		|	ЕСТЬNULL(КурсыВалют.Кратность, 0) КАК Кратность,
		|	ЕСТЬNULL(КурсыВалютПоСценариям.Курс, 0) КАК КурсСценария,
		|	ЕСТЬNULL(КурсыВалютПоСценариям.Кратность, 0) КАК КратностьСценария
		|ПОМЕСТИТЬ ВТ_РасчетныеКурсыВВалютеСценариев
		|ИЗ
		|	ВТ_ТаблицаСценариевПоПериодам КАК ВТ_ТаблицаСценариевПоПериодам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыКурсовВалютСценариев КАК ВТ_ПериодыКурсовСценариев
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|			ПО ВТ_ПериодыКурсовСценариев.Валюта = КурсыВалют.Валюта
		|				И ВТ_ПериодыКурсовСценариев.ПериодКурса = КурсыВалют.Период
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"КурсыВалютПоСценариям КАК КурсыВалютПоСценариям
		|			ПО ВТ_ПериодыКурсовСценариев.Валюта = КурсыВалютПоСценариям.Валюта
		|				И ВТ_ПериодыКурсовСценариев.ПериодКурсаСценария = КурсыВалютПоСценариям.Период
		|		ПО ВТ_ТаблицаСценариевПоПериодам.ПериодПланирования = ВТ_ПериодыКурсовСценариев.ПериодПланирования
		|			И ВТ_ТаблицаСценариевПоПериодам.Валюта = ВТ_ПериодыКурсовСценариев.Валюта
		|;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СценарииИПериоды.ПериодПланирования
		|ПОМЕСТИТЬ ВТ_Периоды
		|ИЗ
		|	ВТ_СценарииИПериоды КАК ВТ_СценарииИПериоды

		|СГРУППИРОВАТЬ ПО
		|	ВТ_СценарииИПериоды.ПериодПланирования
		|;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Периоды.ПериодПланирования,
		|	МАКСИМУМ(КурсыВалют.Период) КАК ПериодКурса,
		|	МАКСИМУМ(КурсыВалютПоСценариям.Период) КАК ПериодКурсаСценария
		|ПОМЕСТИТЬ ВТ_ПериодыКурсовУпр
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|		ПО ВТ_Периоды.ПериодПланирования >= КурсыВалют.Период
		|			И (КурсыВалют.Валюта = &ВалютаУпр)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"КурсыВалютПоСценариям КАК КурсыВалютПоСценариям
		|		ПО ВТ_Периоды.ПериодПланирования >= КурсыВалютПоСценариям.Период
		|			И (КурсыВалютПоСценариям.Валюта = &ВалютаУпр)

		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.ПериодПланирования
		|;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПериодыКурсовУпр.ПериодПланирования,
		|	ЕСТЬNULL(КурсыВалют.Курс, 0) КАК Курс,
		|	ЕСТЬNULL(КурсыВалют.Кратность, 0) КАК Кратность,
		|	ЕСТЬNULL(КурсыВалютПоСценариям.Курс, 0) КАК КурсСценария,
		|	ЕСТЬNULL(КурсыВалютПоСценариям.Кратность, 0) КАК КратностьСценария
		|ПОМЕСТИТЬ ВТ_РасчетныеКурсыУпр
		|ИЗ
		|	ВТ_ПериодыКурсовУпр КАК ВТ_ПериодыКурсовУпр
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|		ПО ВТ_ПериодыКурсовУпр.ПериодКурса = КурсыВалют.Период
		|			И (КурсыВалют.Валюта = &ВалютаУпр)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"КурсыВалютПоСценариям КАК КурсыВалютПоСценариям
		|		ПО ВТ_ПериодыКурсовУпр.ПериодКурсаСценария = КурсыВалютПоСценариям.Период
		|			И (КурсыВалютПоСценариям.Валюта = &ВалютаУпр)
		|;
		|";
		Для Каждого ИмяРегистра Из МассивРегистров Цикл
			Запрос.Текст = Запрос.Текст+?(МассивРегистров.Найти(ИмяРегистра)=0,"","
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|") +"	
			|ВЫБРАТЬ
			|	Обороты.Сценарий,
			|	КонтролируемыеФинансовыеПоказателиОбороты.КонтролирующийСценарий КАК КонтролирующийСценарий,
			|	Обороты.ФинансовыйПоказатель КАК ФинансовыйПоказатель,
			|	ВЫБОР 
			|	КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+" = ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СценарииПланирования.ПустаяСсылка) ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,Месяц)
			|	КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Год) ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,ГОД)
			|	КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Полугодие) ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,Полугодие)
			|	КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Квартал) ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,Квартал)
			|	КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Месяц) ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,Месяц)
			|	КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Декада) ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,Декада)
			|	КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Неделя) ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,Неделя)
			|	ИНАЧЕ НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,ДЕНЬ)
			|	КОНЕЦ КАК ПериодПланирования"+ТекстПоляПромежуточныхТаблиц+",
	//		|	СУММА(Обороты.СуммаУпрОборот"+ТекстРазрядность+") КАК Исполнение
			|	СУММА(ВЫБОР
			|		КОГДА Обороты.Сценарий = КонтролируемыеФинансовыеПоказателиОбороты.Сценарий
			|			ТОГДА Обороты.СуммаСценарияОборот"+ТекстРазрядность+"
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты.Сценарий.Валюта = &ВалютаУпр
			|			ТОГДА Обороты.СуммаУпрОборот"+ТекстРазрядность+"
			|		КОГДА Обороты.Сценарий.ИспользоватьКурсыСценария
			|			ТОГДА ВЫРАЗИТЬ(ВЫБОР
			|						КОГДА ВТ_РасчетныеКурсыУпр.КурсСценария <> 0
			|								И ВТ_РасчетныеКурсыВВалютеСценариев.КурсСценария <> 0
			|							ТОГДА Обороты.СуммаУпрОборот * ВТ_РасчетныеКурсыУпр.КурсСценария * ВТ_РасчетныеКурсыВВалютеСценариев.КратностьСценария / (ВТ_РасчетныеКурсыВВалютеСценариев.КурсСценария * ВТ_РасчетныеКурсыУпр.КратностьСценария)
			|						ИНАЧЕ 0
			|					КОНЕЦ КАК ЧИСЛО(15, 2))"+ТекстРазрядность+"
			|		ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
			|					КОГДА ВТ_РасчетныеКурсыУпр.Курс <> 0
			|							И ВТ_РасчетныеКурсыВВалютеСценариев.Курс <> 0
			|						ТОГДА Обороты.СуммаУпрОборот * ВТ_РасчетныеКурсыУпр.Курс * ВТ_РасчетныеКурсыВВалютеСценариев.Кратность / (ВТ_РасчетныеКурсыВВалютеСценариев.Курс * ВТ_РасчетныеКурсыУпр.Кратность)
			|					ИНАЧЕ 0
			|				КОНЕЦ КАК ЧИСЛО(15, 2))"+ТекстРазрядность+"
			|		КОНЕЦ) КАК Исполнение
			|"+?(МассивРегистров.Найти(ИмяРегистра)=0,"ПОМЕСТИТЬ ВТ_ДостигнутыеПоказатели","")+"
			|ИЗ
			|	РегистрНакопления."+ИмяРегистра+".Обороты(
			|				,
			|				,
			|				,
			|				ПериодПланирования>=&НачалоПланирования И ПериодПланирования<=&ОкончаниеПланирования
			|					И ВЫБОР
			|						КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|							ТОГДА ИСТИНА
			|						ИНАЧЕ Организация = &Организация
			|					КОНЕЦ"+?(ТекстФильтраОборотыСИсключением="",""," И "+ТекстФильтраОборотыСИсключением)+") КАК Обороты
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЦелевыеОбороты КАК КонтролируемыеФинансовыеПоказателиОбороты
			|		ПО ВЫБОР КОГДА &ИспользованиеКонтроля = ЗНАЧЕНИЕ(Перечисление.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриПланировании) ТОГДА Обороты.Сценарий = КонтролируемыеФинансовыеПоказателиОбороты.Сценарий ИНАЧЕ Обороты.Сценарий = ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СценарииПланирования.ПустаяСсылка) КОНЕЦ
			|			И Обороты.ФинансовыйПоказатель = КонтролируемыеФинансовыеПоказателиОбороты.ФинансовыйПоказатель"+ТекстСоединенияПервичного+"
			|			И ВЫБОР 
			|	КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+" = ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СценарииПланирования.ПустаяСсылка) ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,Месяц)
			|	КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Год) ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,ГОД)
			|	КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Полугодие) ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,Полугодие)
			|	КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Квартал) ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,Квартал)
			|	КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Месяц) ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,Месяц)
			|	КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Декада) ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,Декада)
			|	КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Неделя) ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,Неделя)
			|	ИНАЧЕ НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,ДЕНЬ)
			|	КОНЕЦ = КонтролируемыеФинансовыеПоказателиОбороты.ПериодПланирования
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеКурсыВВалютеСценариев КАК ВТ_РасчетныеКурсыВВалютеСценариев
			|ПО (КонтролируемыеФинансовыеПоказателиОбороты.Сценарий = ВТ_РасчетныеКурсыВВалютеСценариев.Сценарий)
			|	И (ВЫБОР
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+" = ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СценарииПланирования.ПустаяСсылка)
			|			ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, МЕСЯЦ)
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Год)
			|			ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, ГОД)
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Полугодие)
			|			ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, ПОЛУГОДИЕ)
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Квартал)
			|			ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, КВАРТАЛ)
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Месяц)
			|			ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, МЕСЯЦ)
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Декада)
			|			ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, ДЕКАДА)
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Неделя)
			|			ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, НЕДЕЛЯ)
			|		ИНАЧЕ НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, ДЕНЬ)
			|	КОНЕЦ = ВТ_РасчетныеКурсыВВалютеСценариев.ПериодПланирования)
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетныеКурсыУпр КАК ВТ_РасчетныеКурсыУпр
			|ПО (ВЫБОР
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+" = ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СценарииПланирования.ПустаяСсылка)
			|			ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, МЕСЯЦ)
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Год)
			|			ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, ГОД)
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Полугодие)
			|			ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, ПОЛУГОДИЕ)
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Квартал)
			|			ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, КВАРТАЛ)
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Месяц)
			|			ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, МЕСЯЦ)
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Декада)
			|			ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, ДЕКАДА)
			|		КОГДА КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Неделя)
			|			ТОГДА НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, НЕДЕЛЯ)
			|		ИНАЧЕ НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования, ДЕНЬ)
			|	КОНЕЦ = ВТ_РасчетныеКурсыУпр.ПериодПланирования)

			|СГРУППИРОВАТЬ ПО
			|	Обороты.Сценарий,
			|	КонтролируемыеФинансовыеПоказателиОбороты.Сценарий,
			|	КонтролируемыеФинансовыеПоказателиОбороты."+СценарийПериодичности+"."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолеПериодичность()+",
			|	КонтролируемыеФинансовыеПоказателиОбороты.КонтролирующийСценарий,
			|	Обороты.ФинансовыйПоказатель,
			|	Обороты.ПериодПланирования"+СтрЗаменить(ТекстПоляЗапросаГруппировки,"Обороты.КонтролирующийСценарий","КонтролируемыеФинансовыеПоказателиОбороты.КонтролирующийСценарий")+"
			|";
		КонецЦикла;
	Запрос.Текст=Запрос.Текст+"
			|;
			|ВЫБРАТЬ
			|	Обороты.Сценарий,
			|	Обороты.КонтролирующийСценарий КАК КонтролирующийСценарий,
			|	Обороты.ФинансовыйПоказатель КАК ФинансовыйПоказатель,
			|	Обороты.ПериодПланирования КАК ПериодПланирования"+ТекстПоляПромежуточныхТаблиц+",
			|	СУММА(Обороты.Исполнение) КАК Исполнение
			|ПОМЕСТИТЬ ВТ_ДостигнутыеПоказателиИтог
			|ИЗ
			|	ВТ_ДостигнутыеПоказатели КАК Обороты

			|СГРУППИРОВАТЬ ПО
			|	Обороты.Сценарий,
			|	Обороты.КонтролирующийСценарий,
			|	Обороты.ФинансовыйПоказатель,
			|	Обороты.ПериодПланирования"+ТекстПоляЗапросаГруппировки+"
		|;
		|ВЫБРАТЬ
		|	Обороты.Сценарий,
		|	Обороты.ФинансовыйПоказатель КАК ФинансовыйПоказатель,
		|	КонтролируемыеФинансовыеПоказателиОбороты.КонтролирующийСценарий КАК КонтролирующийСценарий,
		|	Обороты.ПериодПланирования КАК ПериодПланирования"+ТекстПоляФинальныхТаблиц+",
		|	Обороты.План КАК ЦелевоеЗначение,
		|	ЕСТЬNULL(КонтролируемыеФинансовыеПоказателиОбороты.Исполнение,0) КАК Исполнение,
		|	Обороты.План - ЕСТЬNULL(КонтролируемыеФинансовыеПоказателиОбороты.Исполнение,0) КАК Остаток
		|ПОМЕСТИТЬ ВТ_КонтролируемыеОбороты
		|ИЗ
		|	ВТ_ЦелевыеОбороты КАК Обороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДостигнутыеПоказателиИтог КАК КонтролируемыеФинансовыеПоказателиОбороты
		|		ПО ВЫБОР КОГДА &ИспользованиеКонтроля = ЗНАЧЕНИЕ(Перечисление.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриПланировании) ТОГДА Обороты.Сценарий = КонтролируемыеФинансовыеПоказателиОбороты.Сценарий ИНАЧЕ Истина КОНЕЦ
		|			И Обороты.ФинансовыйПоказатель = КонтролируемыеФинансовыеПоказателиОбороты.ФинансовыйПоказатель"+ТекстСоединения+"
		|			И Обороты.ПериодПланирования = КонтролируемыеФинансовыеПоказателиОбороты.ПериодПланирования
		|;
		|ВЫБРАТЬ
		|	Обороты.ФинансовыйПоказатель КАК ФинансовыйПоказатель,
		|	Обороты.ФинансовыйПоказатель.Код КАК Код,
		|	Обороты.ФинансовыйПоказатель.Наименование КАК Наименование,
		|	Обороты.ПериодПланирования КАК ПериодПланирования,
		|	КонтролируемыеФинансовыеПоказателиОбороты.ЦелевоеЗначение КАК ЦелевоеЗначениеОборот,
		|	КонтролируемыеФинансовыеПоказателиОбороты.Исполнение КАК ИсполнениеОборот,
		|	КонтролируемыеФинансовыеПоказателиОбороты.Остаток КАК ОстатокОборот"+СтрЗаменить(СтрЗаменить(СтрЗаменить(ТекстИзмеренияБезПериода,"ДополнительныеРазрезы.",""),"Обороты.Сценарий","КонтролируемыеФинансовыеПоказателиОбороты.Сценарий"),"Обороты.КонтролирующийСценарий","КонтролируемыеФинансовыеПоказателиОбороты.КонтролирующийСценарий")+"
		|ПОМЕСТИТЬ ВТ_Обороты
		|ИЗ
		|	ВТ_УстановкаОграничений КАК Обороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КонтролируемыеОбороты КАК КонтролируемыеФинансовыеПоказателиОбороты
		|		ПО Обороты.Сценарий = КонтролируемыеФинансовыеПоказателиОбороты.Сценарий
		|			И Обороты.ФинансовыйПоказатель = КонтролируемыеФинансовыеПоказателиОбороты.ФинансовыйПоказатель"+ТекстСоединения+"
		|			И Обороты.ПериодПланирования = КонтролируемыеФинансовыеПоказателиОбороты.ПериодПланирования"+?(ТекстОтбораОбороты="","","
		|ГДЕ
		|	")+ТекстОтбораОбороты+"
		|;
		|ВЫБРАТЬ 
		|	Обороты.ФинансовыйПоказатель"+ТекстПоказатели+СтрЗаменить(ТекстИзмерения,"ДополнительныеРазрезы.","")+" 
		|ИЗ ВТ_Обороты КАК Обороты
		|";
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПолучитьСКД(мГруппировки)
	//получаем схему компоновки данных
	СхемаКомпоновкиДанных=фин_УправлениеОтчетамиБюджетирование.ПолучитьСКД(ЭтотОбъект,мГруппировки,СтруктураПеревода,ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных"),КЭШ,"фин_МониторингЛимитовИЦелевыхЗначенийПоБюджетам");
	Возврат СхемаКомпоновкиДанных;
КонецФункции

Функция ПолучитьНастройкиСКД()
	Настройки = фин_УправлениеОтчетамиБюджетирование.ПолучитьНастройкиСКД(ЭтотОбъект,КомпоновщикНастроек,СтруктураПеревода,КЭШ,Неопределено,"фин_МониторингЛимитовИЦелевыхЗначенийПоБюджетам");
	Возврат Настройки;
КонецФункции

Процедура Скомпоновать(ДокументРезультат,Отбор) Экспорт
	Если НЕ ПроверитьЗаполнениеПараметров() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Отчет не сформирован!");
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаОтбор Из Отбор Цикл
		СтрокаОтбор.Путь = фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(СтрокаОтбор.ПолеОтбора);
	КонецЦикла;
	
	//ВЫБОР СХЕМЫ КОМПОНОВКИ И НАСТРОЙКА ПОЛЕЙ НАБОРА ДАННЫХ
	
	//Если Не ЗначениеЗаполнено(Параметр_Сценарий.Значение) Тогда
	//	Сообщить("Не указан сценарий!");
	//	Возврат;
	//КонецЕсли;
	
	мГруппировки = фин_УправлениеОтчетамиБюджетирование.ПромежуточныеГруппировкиОтчета(Группировки,ОсновнаяГруппировка);
	ТаблицаВнешнегоНабораДанных = ПолучитьТаблицуДанных(Отбор,мГруппировки);
	СхемаКомпоновкиДанных = ПолучитьСКД(мГруппировки);
	Настройки = ПолучитьНастройкиСКД();
	
	//ПОДГОТОВКА К ВЫПОЛНЕНИЮ - ФОРМИРОВАНИЕ МАКЕТА КОМПОНОВКИ
	Заголовок=фин_УправлениеМногоязычнымиОтчетами.ПолучитьПереводТермина("МониторингКонтролируемыхЗначенийПоБюджетам",ЯзыкОтчета,,КЭШ)+Символы.ПС+Формат(НачалоПериодаКонтроля,"ДФ=dd.MM.yyyy")+" - "+Формат(ОкончаниеПериодаКонтроля,"ДФ=dd.MM.yyyy");
	фин_УправлениеОтчетамиБюджетирование.ВыполнитьФормированиеОтчета(ЭтотОбъект,СхемаКомпоновкиДанных,КомпоновщикНастроек,Настройки,ДанныеРасшифровки,ДокументРезультат,ТаблицаВнешнегоНабораДанных,,Заголовок);	
	
КонецПроцедуры

ДоступныеПоказатели = Новый СписокЗначений;
ДоступныеГруппировки = Новый СписокЗначений;
ПереченьОсновныхРеквизитов = Новый Массив;
ЗаполнениеПараметров = Новый Структура;
ЗаполнениеПараметров.Вставить("НачалоПериодаКонтроля",НачалоМесяца(ТекущаяДата()));
ЗаполнениеПараметров.Вставить("ОкончаниеПериодаКонтроля",КонецМесяца(ТекущаяДата()));
//ЗаполнениеПараметров.Вставить("ГраницаАктуальности",ТекущаяДата());
ЗаполнениеПараметров.Вставить("ЯзыкОтчета",фин_ОбщегоНазначенияСервер.ОсновнойЯзыкОтчетов());
ЗаполнениеПараметров.Вставить("ВидДанных",Перечисления.фин_ВидыДанныхОтчета.Фактические);
ЗаполнениеПараметров.Вставить("ВидКонтроля",Перечисления.фин_ВидыКонтролируемогоЗначенияБюджета.Ограничивающее);
ЗаполнениеПараметров.Вставить("ИспользованиеКонтроля",Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриИсполнении);
ЗаполнениеПараметров.Вставить("ШиринаКолонкиПоказателя",12);
ЗаполнениеПараметров.Вставить("ШиринаКолонкиРеквизита",25);
ЗаполнениеПараметров.Вставить("ШиринаКолонкиСтатьиБюджета",25);

ДополнительныеПараметры = Новый Массив;
//ДополнительныеПараметры.Добавить("ГраницаАктуальности");
ДополнительныеПараметры.Добавить("Периодичность");
ДополнительныеПараметры.Добавить("ЯзыкОтчета");
ДополнительныеПараметры.Добавить("ПрименятьРазрядностьПланирования");

ПараметрыОформления = Новый Массив;
ПараметрыОформления.Добавить("ВыводитьКодыСтрокБюджета");
ПараметрыОформления.Добавить("УпорядочиваниеСтатей");
ПараметрыОформления.Добавить("ФиксацияКолонок");
ПараметрыОформления.Добавить("ШиринаКолонкиРеквизита");
ПараметрыОформления.Добавить("ШиринаКолонкиСтатьиБюджета");
ПараметрыОформления.Добавить("ШиринаКолонкиПоказателя");
ПараметрыОформления.Добавить("ВыводитьГруппыСтатейВнизу");
ПараметрыОформления.Добавить("ПоказателиВОднойКолонке");

ДанныеРасшифровкиМакета = Новый Соответствие;

КЭШ = Новый Соответствие;

ДополнительныеПредставления = Новый СписокЗначений;
ДополнительныеПредставления.Добавить(Перечисления.фин_ФактическиеПоказателиБюджетирования.ФинансовыйПоказатель,"Финансовый показатель");

ОтборыРасшифровки = Новый Массив;

ТаблицаОтбора = Новый ТаблицаЗначений;
ТаблицаОтбора.Колонки.Добавить("Поле");
ТаблицаОтбора.Колонки.Добавить("ВидСравнения");
ТаблицаОтбора.Колонки.Добавить("Значение");


