Перем мСписокИсточниковФинансирования Экспорт;
Перем мСписокСтруктурныхЕдиниц Экспорт;
Перем мСписокПодразделений Экспорт;
Перем мДеревоСтруктурныхЕдиниц Экспорт;
Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;
Перем ПромежуточныеДанные Экспорт;
Перем РежимРасшифровки Экспорт;
Перем ВедётсяУчетПоПодразделениям Экспорт;

#Если Клиент Тогда

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	Результат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ВыводЗаголовкаОтчета(ЭтотОбъект, Результат);
	ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных);
	СтандартныеОтчеты.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных);
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	// Выполним дополнительную обработку Результата отчета
	ОбработкаРезультатаОтчета(Результат);
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(Результат, ПолучитьТекстЗаголовка(), Строка(глТекущийПользователь));
	
	Возврат;
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных) Экспорт
	
	мСписокВидовСубконтоЗаб = Новый Массив;
	мСписокВидовСубконтоЗаб.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
	мСписокВидовСубконтоЗаб.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Договоры);
	мСписокВидовСубконтоЗаб.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ТипыОпераций);
	мСписокВидовСубконтоЗаб.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Гарантии);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "мСписокВидовСубконтоЗаб", мСписокВидовСубконтоЗаб);

	СписокСчетовГарантий = Новый Массив;
	СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаТребованийПоГарантиям);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаТребованийПопредоставлениюПолучениюЗаймовВБудущим);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаТребованийПоПроизводнымФинИнструментам);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаОбязательствПоГарантиям);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаОбязательствПопредставлениюзаймов);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаОбязПопроизвФинИнструментам);
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "СписокСчетовГарантий", СписокСчетовГарантий);

	Если ЗначениеЗаполнено(НачалоПериода) Тогда
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоДня(НачалоПериода));
	Иначе
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", Дата(1, 1, 1));
	КонецЕсли;
	Если ЗначениеЗаполнено(КонецПериода) Тогда
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(КонецПериода));
	Иначе
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", Дата(3999, 11, 1));
	КонецЕсли;
	
	Если мДеревоСтруктурныхЕдиниц.Колонки.Количество() = 0 Тогда 
		
		СписокСтруктурныхЕдиниц = Новый СписокЗначений;
		СписокСтруктурныхЕдиниц.ЗагрузитьЗначения(мСписокСтруктурныхЕдиниц.ВыгрузитьЗначения());
		
		Для Каждого СтрПодразделение Из мСписокПодразделений Цикл 
			СписокСтруктурныхЕдиниц.Добавить(СтрПодразделение.Значение);
		КонецЦикла;		
				
		мДеревоСтруктурныхЕдиниц = СтандартныеОтчеты.СформироватьДеревоСЕ(, СписокСтруктурныхЕдиниц);
		
	КонецЕсли;
	
	//ВнешниеНаборыДанных = Новый Структура;
	//ВыборкаДанных = ПолучитьВыборку();
	//ВнешниеНаборыДанных.Вставить("ТаблицаДанных", ВыборкаДанных);
	
	ТиповыеОтчеты.ДобавитьОтборПоОрганизациямИПодразделениям(КомпоновщикНастроек, мДеревоСтруктурныхЕдиниц);
	//ТиповыеОтчеты.ДобавитьОтборПоИсточникамФинансирования(КомпоновщикНастроек, мСписокИсточниковФинансирования);
		
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	СтандартныеОтчеты.ИнициализацияОтчета(ЭтотОбъект);
	
КонецПроцедуры

Процедура ВыводЗаголовкаОтчета(ОтчетОбъект, Результат)
	
	СтандартныеОтчеты.ВыводЗаголовкаСпециализированногоОтчета(ОтчетОбъект, Результат);
			
КонецПроцедуры

Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина) Экспорт 
		
	ЗаголовокОтчета = "Отчет по гарантиям " + СтандартныеОтчеты.ПолучитьПредставлениеПериода(ЭтотОбъект);

	Возврат ?(ОрганизацияВНачале, ЗаголовокОтчета, ЗаголовокОтчета + " " + СтандартныеОтчеты.ПолучитьТекстОрганизация(ЭтотОбъект));
		
КонецФункции

Функция ПолучитьВыборку()
	
	Запрос = Новый Запрос;
	
	//Содержит текст построителя отчета
	
	Текст =
	"ВЫБРАТЬ
	|	Выборка.Организация КАК Организация,
	|	Выборка.ИсточникФинансирования КАК ИсточникФинансирования,
	|	Выборка.Контрагент КАК Контрагент,
	|	Выборка.Договор КАК Договор,
	|	Выборка.ТипОперации КАК ТипОперации,
	|	Выборка.Период КАК Период,
	|	Выборка.СуммаНачОстаток КАК СуммаНачОстаток,
	|	Выборка.СуммаНачОстатокВозн КАК СуммаНачОстатокВозн,
	|	Выборка.СуммаПогашения КАК СуммаПогашения,
	|	Выборка.СуммаПогашенияВозн КАК СуммаПогашенияВозн,
	|	Выборка.СуммаПолучения КАК СуммаПолучения,
	|	Выборка.СуммаПолученияВозн КАК СуммаПолученияВозн,
	|	Выборка.СуммаКонОстаток КАК СуммаКонОстаток,
	|	Выборка.СуммаКонОстатокВозн КАК СуммаКонОстатокВозн,
	|	Гарантии.СуммаКонОстатокГарантий КАК СуммаКонОстатокГарантий
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОстаткиИОборотыОсн.Организация КАК Организация,
	|		ОстаткиИОборотыОсн.ИсточникФинансирования КАК ИсточникФинансирования,
	|		ОстаткиИОборотыОсн.ПериодМесяц КАК Период,
	|		ОстаткиИОборотыОсн.Субконто1 КАК Контрагент,
	|		ОстаткиИОборотыОсн.Субконто2 КАК Договор,
	|		ОстаткиИОборотыОсн.Субконто3 КАК ТипОперации,
	|		СУММА(ОстаткиИОборотыОсн.СуммаНачальныйОстатокДт) КАК СуммаНачОстаток,
	|		0 КАК СуммаНачОстатокВозн,
	|		СУММА(ОстаткиИОборотыОсн.СуммаОборотКт) КАК СуммаПогашения,
	|		0 КАК СуммаПогашенияВозн,
	|		СУММА(ОстаткиИОборотыОсн.СуммаОборотДт) КАК СуммаПолучения,
	|		0 КАК СуммаПолученияВозн,
	|		СУММА(ОстаткиИОборотыОсн.СуммаКонечныйОстатокДт) КАК СуммаКонОстаток,
	|		0 КАК СуммаКонОстатокВозн,
	|		0 КАК СуммаКонОстатокГарантий
	|	ИЗ
	|		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Авто,
	|				,
	|				Счет В ИЕРАРХИИ
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СписокСчетов.СчетУчета
	|					ИЗ
	|						РегистрСведений.СчетаУчетаПоКредитамИЗаймам КАК СписокСчетов
	|					ГДЕ
	|						СписокСчетов.ТипСчетаУчета = ЗНАЧЕНИЕ(Перечисление.ТипыКредитовИЗаймов.Выданные)
	|					),
	|				,
	|				{(Организация).*, (ИсточникФинансирования).*}) КАК ОстаткиИОборотыОсн
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОстаткиИОборотыОсн.Организация,
	|		ОстаткиИОборотыОсн.ИсточникФинансирования,
	|		ОстаткиИОборотыОсн.Субконто1,
	|		ОстаткиИОборотыОсн.Субконто2,
	|		ОстаткиИОборотыОсн.Субконто3,
	|		ОстаткиИОборотыОсн.Период
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОстаткиИОборотыВозн.Организация КАК Организация,
	|		ОстаткиИОборотыВозн.ИсточникФинансирования КАК ИсточникФинансирования,
	|		ОстаткиИОборотыВозн.ПериодМесяц КАК Период,
	|		ОстаткиИОборотыВозн.Субконто1 КАК Контрагент,
	|		ОстаткиИОборотыВозн.Субконто2 КАК Договор,
	|		ОстаткиИОборотыВозн.Субконто3 КАК ТипОперации,
	|		0,
	|		СУММА(ОстаткиИОборотыВозн.СуммаНачальныйОстатокДт),
	|		0,
	|		СУММА(ОстаткиИОборотыВозн.СуммаОборотКт),
	|		0,
	|		СУММА(ОстаткиИОборотыВозн.СуммаОборотДт),
	|		0,
	|		СУММА(ОстаткиИОборотыВозн.СуммаКонечныйОстатокДт),
	|		0 КАК СуммаКонОстатокГарантий
	|	ИЗ
	|		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Авто,
	|				,
	|				Счет В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СписокСоответствияСчетов.СчетУчетаВознагрождений
	|					ИЗ
	|						РегистрСведений.СоответствиеСчетовУчетаРасчетовПоКредитамИЗаймам КАК СписокСоответствияСчетов
	|					ГДЕ
	|						СписокСоответствияСчетов.СчетУчета В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								СписокСчетов.СчетУчета
	|							ИЗ
	|								РегистрСведений.СчетаУчетаПоКредитамИЗаймам КАК СписокСчетов
	|							ГДЕ
	|								СписокСчетов.ТипСчетаУчета = ЗНАЧЕНИЕ(Перечисление.ТипыКредитовИЗаймов.Выданные)
	|						)),
	|				,
	|				{(Организация).*, (ИсточникФинансирования).*}) КАК ОстаткиИОборотыВозн
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОстаткиИОборотыВозн.Организация,
	|		ОстаткиИОборотыВозн.ИсточникФинансирования,
	|		ОстаткиИОборотыВозн.Субконто1,
	|		ОстаткиИОборотыВозн.Субконто2,
	|		ОстаткиИОборотыВозн.Субконто3,
	|		ОстаткиИОборотыВозн.Период
	|	
	|) КАК Выборка
	|	
	|Левое Соединение
	|	(ВЫБРАТЬ
	|		ТиповойОстаткиИОбороты.Организация КАК Организация,
	|		ТиповойОстаткиИОбороты.ИсточникФинансирования КАК ИсточникФинансирования,
	|		ТиповойОстаткиИОбороты.ПериодМесяц КАК Период,
	|		ТиповойОстаткиИОбороты.Субконто1 КАК Контрагент,
	|		ТиповойОстаткиИОбороты.Субконто2 КАК Договор,
	|		ТиповойОстаткиИОбороты.Субконто3 КАК ТипОперации,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	//|		Сумма(ТиповойОстаткиИОбороты.СуммаКонечныйОстаток) КАК СуммаКонОстатокГарантий
	|		ТиповойОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонОстатокГарантий
	|	ИЗ
	|		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Авто, , Счет в ИЕРАРХИИ(&СписоксчетовПоГарантиям), , {(Организация).*, (ИсточникФинансирования).*}) КАК ТиповойОстаткиИОбороты
	|	
	//|	СГРУППИРОВАТЬ ПО
	//|		ТиповойОстаткиИОбороты.Организация,
	//|		ТиповойОстаткиИОбороты.ИсточникФинансирования,
	//|		ТиповойОстаткиИОбороты.Субконто1,
	//|		ТиповойОстаткиИОбороты.Субконто2,
	//|		ТиповойОстаткиИОбороты.Субконто3,
	//|		ТиповойОстаткиИОбороты.Период
	|	) КАК Гарантии
	|	ПО ВЫБОРКА.организация = Гарантии.Организация	
	//|		И ВЫБОРКА.ИсточникФинансирования = Гарантии.ИсточникФинансирования	
	|		И ВЫБОРКА.Период = Гарантии.Период	
	|		И ВЫБОРКА.Контрагент = Гарантии.Контрагент	
	|		И ВЫБОРКА.Договор = Гарантии.Договор	
	|		И ВЫБОРКА.ТипОперации = Гарантии.ТипОперации	
	|	
	|";	
	
	СписокСчетовГарантий = Новый Массив;
	СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаТребованийПоГарантиям);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаТребованийПопредоставлениюПолучениюЗаймовВБудущим);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаТребованийПоПроизводнымФинИнструментам);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаОбязательствПоГарантиям);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаОбязательствПопредставлениюзаймов);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаОбязПопроизвФинИнструментам);
	
	Запрос.УстановитьПараметр("НачалоПериода",НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("СписоксчетовПоГарантиям", СписокСчетовГарантий);
	
	Запрос.Текст = Текст;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ОбработкаРезультатаОтчета(Результат)
	
	ТиповыеОтчеты.ОбработкаРезультатаОтчета(ЭтотОбъект, Результат);

КонецПроцедуры

// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт
	
	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	
	СтруктураНастроек.Вставить("мСписокПодразделений", мСписокПодразделений);
	СтруктураНастроек.Вставить("мСписокСтруктурныхЕдиниц", мСписокСтруктурныхЕдиниц);
	СтруктураНастроек.Вставить("мДеревоСтруктурныхЕдиниц", мДеревоСтруктурныхЕдиниц);
	
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);

КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры


Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли
мСписокИсточниковФинансирования = Новый СписокЗначений;
мСписокСтруктурныхЕдиниц = Новый СписокЗначений;
мСписокПодразделений = Новый СписокЗначений;
мДеревоСтруктурныхЕдиниц = Новый ДеревоЗначений;

ВедётсяУчетПоПодразделениям = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений();

РежимРасшифровки = Ложь;