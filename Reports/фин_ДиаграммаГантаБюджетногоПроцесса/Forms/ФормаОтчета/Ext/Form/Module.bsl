
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("Организация",Отчет.Организация);
	Параметры.Свойство("СценарийПланирования",Отчет.СценарийПланирования);
	Параметры.Свойство("БюджетныйРегламент",Отчет.БюджетныйРегламент);
	Параметры.Свойство("КалендарныйПлан",Отчет.КалендарныйПлан);
	Параметры.Свойство("Пользователь",Отчет.Пользователь);
	Параметры.Свойство("УровеньДетализации",Отчет.УровеньДетализации);
	Если Параметры.Свойство("Адрес") Тогда
		ДанныеХранилища = ПолучитьИзВременногоХранилища(Параметры.Адрес);
		Отчет.ГрафикПроцесса.Загрузить(ДанныеХранилища.ГрафикПроцесса);	
		Отчет.Детализация.Загрузить(ДанныеХранилища.Детализация);
	Иначе
		Если НЕ ЗначениеЗаполнено(Отчет.Пользователь) Тогда
			Отчет.Пользователь = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ТекущийПользователь");
		КонецЕсли;
		Если Отчет.Детализация.Количество()=0 Тогда
			НоваяСтрока = Отчет.Детализация.Добавить();
			НоваяСтрока.ВидДетализации = Перечисления.фин_ВидыДетализацииДиаграммыГантаБюджетногоПроцесса.Бюджет;
			НоваяСтрока = Отчет.Детализация.Добавить();
			НоваяСтрока.ВидДетализации = Перечисления.фин_ВидыДетализацииДиаграммыГантаБюджетногоПроцесса.ВидЗадачи;
			Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("БюджетированиеПоОрганизациям") Тогда
				НоваяСтрока = Отчет.Детализация.Добавить();
				НоваяСтрока.ВидДетализации = Перечисления.фин_ВидыДетализацииДиаграммыГантаБюджетногоПроцесса.Организация;
			КонецЕсли;
			Если фин_ОбщегоНазначенияВызовСервераПовтИсп.КоличествоСценариев()>1 Тогда
				НоваяСтрока = Отчет.Детализация.Добавить();
				НоваяСтрока.ВидДетализации = Перечисления.фин_ВидыДетализацииДиаграммыГантаБюджетногоПроцесса.Сценарий;
			КонецЕсли;
			НоваяСтрока = Отчет.Детализация.Добавить();
			НоваяСтрока.ВидДетализации = Перечисления.фин_ВидыДетализацииДиаграммыГантаБюджетногоПроцесса.КалендарныйПлан;
		КонецЕсли;
		Отчет.Вариант = Перечисления.фин_ВариантыДиаграммыБюджетногоПроцесса.НеисполненныеЗадачи;
	КонецЕсли;
	Элементы.ВидШкалыВремени.СписокВыбора.Добавить(ТипЕдиницыШкалыВремени.День);
	Элементы.ВидШкалыВремени.СписокВыбора.Добавить(ТипЕдиницыШкалыВремени.Неделя);
	Элементы.ВидШкалыВремени.СписокВыбора.Добавить(ТипЕдиницыШкалыВремени.Месяц);
	Элементы.ВидШкалыВремени.СписокВыбора.Добавить(ТипЕдиницыШкалыВремени.Квартал);
	Элементы.ВидШкалыВремени.СписокВыбора.Добавить(ТипЕдиницыШкалыВремени.Год);
	ВидШкалыВремени = ТипЕдиницыШкалыВремени.День;
	Элементы.Масштаб.СписокВыбора.Добавить(ПоддержкаМасштабаДиаграммыГанта.Авто);
	Элементы.Масштаб.СписокВыбора.Добавить(ПоддержкаМасштабаДиаграммыГанта.ВсеДанные);
	Элементы.Масштаб.СписокВыбора.Добавить(ПоддержкаМасштабаДиаграммыГанта.Период);
	Элементы.Масштаб.СписокВыбора.Добавить(ПоддержкаМасштабаДиаграммыГанта.Фиксированная);
	Масштаб = ПоддержкаМасштабаДиаграммыГанта.Период;
	Если Параметры.ИзОбъекта Тогда
		Элементы.БюджетныйРегламент.ТолькоПросмотр = Истина;
		Элементы.КалендарныйПлан.ТолькоПросмотр = Истина;
		Элементы.ГруппаПериод.ТолькоПросмотр = Истина;
	   СформироватьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	Отчеты.фин_ДиаграммаГантаБюджетногоПроцесса.СформироватьДиаграмму(Отчет,Диаграмма,ВидШкалыВремени,НЕ Параметры.ИзОбъекта,НЕ Параметры.ИзОбъекта);
	Если ЗначениеЗаполнено(Масштаб) Тогда
		Диаграмма.ПоддержкаМасштаба = Масштаб;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ПроверитьЗаполнение() Тогда
		СформироватьНаСервере();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ДиаграммаВыбор(Элемент, Значения, СтандартнаяОбработка, Дата)
	Если ТипЗнч(Значения)=Тип("Массив") Тогда
		Для Каждого Расшифровка Из Значения Цикл
			Если ТипЗнч(Расшифровка.Расшифровка)=Тип("Структура") Тогда
				СтандартнаяОбработка = Ложь;
				СписокДействий = Новый СписокЗначений;
				СписокДействий.Добавить("ОткрытьЗначение","Открыть значение");
				СписокДействий.Добавить("РегистрацияИсполнения","Регистрация исполнения");
				ОписаниеОповещенияВыбораДействия = Новый ОписаниеОповещения("ОбработкаВыбораДействия",ЭтотОбъект,Расшифровка.Расшифровка);
				ПоказатьВыборИзМеню(ОписаниеОповещенияВыбораДействия,СписокДействий,Элементы.Диаграмма);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаВыбораДействия(Результат,ДополнительныеПараметры) Экспорт
	Если Результат=Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Результат.Значение = "ОткрытьЗначение" Тогда
		Попытка
			ПоказатьЗначение(,ДополнительныеПараметры.ДанныеРасшифровки);
		Исключение
		КонецПопытки;
	ИначеЕсли Результат.Значение = "РегистрацияИсполнения" Тогда
		мСтруктура = Новый ФиксированнаяСтруктура(ДополнительныеПараметры.СтруктураРасшифровки);
		СтруктураЗаполнения = Новый Структура(мСтруктура);
		Если ЗначениеЗаполнено(Отчет.КалендарныйПлан) Тогда
			СтруктураЗаполнения.Вставить("КалендарныйПлан",Отчет.КалендарныйПлан);
		КонецЕсли;
		Если НЕ СтруктураЗаполнения.Свойство("Организация") Тогда
			СтруктураЗаполнения.Вставить("Организация",Отчет.Организация);
		КонецЕсли;
		Если НЕ СтруктураЗаполнения.Свойство("Сценарий") Тогда
			СтруктураЗаполнения.Вставить("Сценарий",Отчет.СценарийПланирования);
		КонецЕсли;
		СтруктураЗаполнения.Вставить("Пользователь",фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ТекущийПользователь"));
		ОткрытьФорму("Документ.фин_ОтчетОбИсполненииЗадачиБюджетногоПроцесса.ФормаОбъекта",Новый Структура("Основание",СтруктураЗаполнения),ЭтотОбъект,Новый УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МасштабПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Масштаб) Тогда
		Диаграмма.ПоддержкаМасштаба = Масштаб;
	КонецЕсли;
КонецПроцедуры
