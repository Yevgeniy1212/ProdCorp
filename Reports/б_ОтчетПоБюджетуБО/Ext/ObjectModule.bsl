Перем мСписокИсточниковФинансирования Экспорт;
Перем мСписокСтруктурныхЕдиниц Экспорт;
Перем мСписокПодразделений Экспорт;
Перем мДеревоСтруктурныхЕдиниц Экспорт;
Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;
Перем ПромежуточныеДанные Экспорт;
Перем РежимРасшифровки Экспорт;
Перем ВедётсяУчетПоПодразделениям Экспорт;

#Если Клиент Тогда

Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	СтандартныеОтчеты.ЗаполнитьДанныеОтчета(ЭтотОбъект);
	
КонецПроцедуры

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	Результат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ВыводЗаголовкаОтчета(ЭтотОбъект, Результат);
	ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных);
	СтандартныеОтчеты.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных);
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	// Выполним дополнительную обработку Результата отчета
	ОбработкаРезультатаОтчета(Результат);
	
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(Результат, ПолучитьТекстЗаголовка(), Строка(глТекущийПользователь));
	
	Возврат;
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных) Экспорт
	
	Если ЗначениеЗаполнено(НачалоПериода) Тогда
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоДня(НачалоПериода));
	Иначе
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", Дата(1, 1, 1));
	КонецЕсли;
	Если ЗначениеЗаполнено(КонецПериода) Тогда
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(КонецПериода));
	Иначе
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", Дата(3999, 11, 1));
	КонецЕсли;
	
	// Корректировка доход до налогооблажения и чистого дохода
	
	СтатьяБюджетаДоходДоНалогооблажения = Справочники.фин_СтатьиБюджета.НайтиПоКоду("ПР0000345").Ссылка;
	СтатьяБюджетаЧистыйДоход = Справочники.фин_СтатьиБюджета.НайтиПоКоду("ПР0000348").Ссылка;
	СтатьяБюджетаКорпоративныйПодоходныйНалог = Справочники.фин_СтатьиБюджета.НайтиПоКоду("ПР0000347").Ссылка;
	ВыборкаДанных = ПолучитьВыборку().Выгрузить();
	//Если ОкруглятьДоЦелых = Истина Тогда
	//	Для каждого Строка Из ВыборкаДанных Цикл
	//		Строка.СуммаЯнварь = Окр(Строка.СуммаЯнварь,0,1);
	//		Строка.СуммаФевраль = Окр(Строка.СуммаФевраль,0,1);
	//		Строка.СуммаМарт = Окр(Строка.СуммаМарт,0,1);
	//		Строка.СуммаАпрель = Окр(Строка.СуммаАпрель,0,1);
	//		Строка.СуммаМай = Окр(Строка.СуммаМай,0,1);
	//		Строка.СуммаИюнь = Окр(Строка.СуммаИюнь,0,1);
	//		Строка.СуммаИюль = Окр(Строка.СуммаИюль,0,1);
	//		Строка.СуммаАвгуст = Окр(Строка.СуммаАвгуст,0,1);
	//		Строка.СуммаСентябрь = Окр(Строка.СуммаСентябрь,0,1);
	//		Строка.СуммаОктябрь = Окр(Строка.СуммаОктябрь,0,1);
	//		Строка.СуммаНоябрь = Окр(Строка.СуммаНоябрь,0,1);
	//		Строка.СуммаДекабрь = Окр(Строка.СуммаДекабрь,0,1);
	//		Строка.СуммаПервыйКвартал = Строка.СуммаЯнварь + Строка.СуммаФевраль + Строка.СуммаМарт;
	//		Строка.СуммаВторойКвартал = Строка.СуммаАпрель + Строка.СуммаМай + Строка.СуммаИюнь;
	//		Строка.СуммаЗаПолугодие = Строка.СуммаПервыйКвартал + Строка.СуммаВторойКвартал;
	//		Строка.СуммаТретийКвартал = Строка.СуммаИюль + Строка.СуммаАвгуст + Строка.СуммаСентябрь;
	//		Строка.СуммаЗаДевятьМесяцев = Строка.СуммаЗаПолугодие + Строка.СуммаТретийКвартал;
	//		Строка.СуммаЧетвертыйКвартал = Строка.СуммаОктябрь + Строка.СуммаНоябрь + Строка.СуммаДекабрь;
	//		Строка.СуммаИтого = Строка.СуммаЗаДевятьМесяцев + Строка.СуммаЧетвертыйКвартал;
	//		Строка.СуммаИтогоФакт = Окр(Строка.СуммаИтогоФакт,0,1);
	//		Строка.СуммаПредыдущий = Окр(Строка.СуммаПредыдущий,0,1);
	//		Строка.СуммаПредществующий = Окр(Строка.СуммаПредществующий,0,1);
	//		Строка.СуммаТриГодаНазад = Окр(Строка.СуммаТриГодаНазад,0,1);
	//	КонецЦикла;	
	//КонецЕсли;	
	//ВыборкаДанных = Новый ТаблицаЗначений();
	//ВыборкаДанных.Колонки.Добавить("Организация");
	//ВыборкаДанных.Колонки.Добавить("СтатьяБюджета");
	//ВыборкаДанных.Колонки.Добавить("Статус");
	//ВыборкаДанных.Колонки.Добавить("ДокументДвижения");
	//ВыборкаДанных.Колонки.Добавить("СуммаЯнварь");
	//ВыборкаДанных.Колонки.Добавить("СуммаФевраль");
	//ВыборкаДанных.Колонки.Добавить("СуммаМарт");
	//ВыборкаДанных.Колонки.Добавить("СуммаАпрель");
	//ВыборкаДанных.Колонки.Добавить("СуммаМай");
	//ВыборкаДанных.Колонки.Добавить("СуммаИюнь");
	//ВыборкаДанных.Колонки.Добавить("СуммаИюль");
	//ВыборкаДанных.Колонки.Добавить("СуммаАвгуст");
	//ВыборкаДанных.Колонки.Добавить("СуммаСентябрь");
	//ВыборкаДанных.Колонки.Добавить("СуммаОктябрь");
	//ВыборкаДанных.Колонки.Добавить("СуммаНоябрь");
	//ВыборкаДанных.Колонки.Добавить("СуммаДекабрь");
	//ВыборкаДанных.Колонки.Добавить("СуммаПервыйКвартал");
	//ВыборкаДанных.Колонки.Добавить("СуммаВторойКвартал");
	//ВыборкаДанных.Колонки.Добавить("СуммаТретийКвартал");
	//ВыборкаДанных.Колонки.Добавить("СуммаЧетвертыйКвартал");
	//ВыборкаДанных.Колонки.Добавить("СуммаЗаПолугодие");
	//ВыборкаДанных.Колонки.Добавить("СуммаЗаДевятьМесяцев");
	//ВыборкаДанных.Колонки.Добавить("СуммаИтого");
	//ВыборкаДанных.Колонки.Добавить("СуммаИтогоФакт");
	//ВыборкаДанных.Колонки.Добавить("СуммаПредыдущий");
	//ВыборкаДанных.Колонки.Добавить("СуммаПредществующий");
	//ВыборкаДанных.Колонки.Добавить("СуммаТриГодаНазад");
	//ВыборкаДанных.Колонки.Добавить("ПризнакКоличество");
	//Для Каждого Строка из ТЗ Цикл
	//	Если Строка.СтатьяБюджета =  СтатьяБюджетаДоходДоНалогооблажения  и Строка.СуммаПредыдущий <>0 Тогда
	//	Продолжить;
	//	КонецЕсли;
	//	СтрокаВД = ВыборкаДанных.Добавить();
	//	СтрокаВД.Организация = Строка.Организация;
	//	СтрокаВД.СтатьяБюджета = Строка.СтатьяБюджета;
	//	СтрокаВД.Статус = Строка.Статус;
	//	СтрокаВД.ДокументДвижения = Строка.ДокументДвижения;
	//	СтрокаВД.СуммаЯнварь = Строка.СуммаЯнварь;
	//	СтрокаВД.СуммаФевраль = Строка.СуммаФевраль;
	//	СтрокаВД.СуммаМарт = Строка.СуммаМарт;
	//	СтрокаВД.СуммаАпрель = Строка.СуммаАпрель;
	//	СтрокаВД.СуммаМай = Строка.СуммаМай;
	//	СтрокаВД.СуммаИюнь = Строка.СуммаИюнь;
	//	СтрокаВД.СуммаИюль = Строка.СуммаИюль;
	//	СтрокаВД.СуммаАвгуст = Строка.СуммаАвгуст;
	//	СтрокаВД.СуммаСентябрь = Строка.СуммаСентябрь;
	//	СтрокаВД.СуммаОктябрь = Строка.СуммаОктябрь;
	//	СтрокаВД.СуммаНоябрь = Строка.СуммаНоябрь;
	//	СтрокаВД.СуммаДекабрь = Строка.СуммаДекабрь;
	//	СтрокаВД.СуммаПервыйКвартал = Строка.СуммаПервыйКвартал;
	//	СтрокаВД.СуммаВторойКвартал = Строка.СуммаВторойКвартал;
	//	СтрокаВД.СуммаТретийКвартал = Строка.СуммаТретийКвартал;
	//	СтрокаВД.СуммаЧетвертыйКвартал = Строка.СуммаЧетвертыйКвартал;
	//	СтрокаВД.СуммаЗаПолугодие = Строка.СуммаЗаПолугодие;
	//	СтрокаВД.СуммаЗаДевятьМесяцев = Строка.СуммаЗаДевятьМесяцев;
	//	СтрокаВД.СуммаИтого = Строка.СуммаИтого;
	//	СтрокаВД.СуммаИтогоФакт = Строка.СуммаИтогоФакт;
	//	СтрокаВД.СуммаПредыдущий = Строка.СуммаПредыдущий;
	//	СтрокаВД.СуммаПредществующий = Строка.СуммаПредществующий;
	//	СтрокаВД.СуммаТриГодаНазад = Строка.СуммаТриГодаНазад;
	//	СтрокаВД.ПризнакКоличество = Строка.ПризнакКоличество;
	//КонецЦикла;
	СвернутаяТЗ = ВыборкаДанных.Скопировать();
	СвернутаяТЗ.Свернуть("СтатьяБюджета","СуммаПредыдущий,СуммаПредществующий,СуммаТриГодаНазад");
	// Предыдущий
    ДоходыДоНалогоОблажения = 0;
	Для Каждого Строка Из ВыборкаДанных Цикл
		Если Строка.СтатьяБюджета = СтатьяБюджетаДоходДоНалогооблажения Тогда
			 НомерСтрокиКорректировкиСуммаДоходДоНалогооблажения = ВыборкаДанных.Индекс(Строка);
			 Прервать;
		 КонецЕсли;
	КонецЦикла;	 
	Для Каждого Строка Из ВыборкаДанных Цикл
		Если Строка.СтатьяБюджета = СтатьяБюджетаЧистыйДоход  Тогда
			 НомерСтрокиКорректировкиСуммаЧистыйДоход = ВыборкаДанных.Индекс(Строка);
			 Прервать;
		 КонецЕсли;
	 КонецЦикла;
	//
	// Предыдущий
	//
	ДоходыДоНалогоОблажения = 0; ЧистыйДоход = 0; КорпоративныйПодоходныйНалог = 0;
	Для Каждого Строка Из СвернутаяТЗ Цикл
		Если Строка.СтатьяБюджета = СтатьяБюджетаДоходДоНалогооблажения Тогда
			ДоходыДоНалогоОблажения = Строка.СуммаПредыдущий;
		КонецЕсли;	
		Если Строка.СтатьяБюджета = СтатьяБюджетаКорпоративныйПодоходныйНалог Тогда
			 КорпоративныйПодоходныйНалог = Строка.СуммаПредыдущий;
		КонецЕсли;	
		Если Строка.СтатьяБюджета = СтатьяБюджетаЧистыйДоход Тогда
			 ЧистыйДоход = Строка.СуммаПредыдущий;
		КонецЕсли;	
	КонецЦикла;
	Доходы = 0; Расходы = 0; СуммаКорректировки = 0;
	Для каждого Строка из ВыборкаДанных Цикл
		КодСтрокиБюджета = Строка.СтатьяБюджета.КодСтрокиБюджета;
		ПервыйСимволКодаСтатьиБюджета = Сред(КодСтрокиБюджета,1,1);
		Если ПервыйСимволКодаСтатьиБюджета = "1" Тогда
			 Доходы = Доходы + Строка.СуммаПредыдущий;
		 ИначеЕсли ПервыйСимволКодаСтатьиБюджета = "2" Тогда
			 Расходы = Расходы + Строка.СуммаПредыдущий;
		 Иначе
		КонецЕсли;	 
	КонецЦикла;
	СуммаКорректировки = ДоходыДоНалогоОблажения - Доходы + Расходы;
	ВыборкаДанных.Получить(НомерСтрокиКорректировкиСуммаДоходДоНалогооблажения).СуммаПредыдущий =  ВыборкаДанных.Получить(НомерСтрокиКорректировкиСуммаДоходДоНалогооблажения).СуммаПредыдущий  -СуммаКорректировки;
	ВыборкаДанных.Получить(НомерСтрокиКорректировкиСуммаЧистыйДоход).СуммаПредыдущий =    Доходы - Расходы - КорпоративныйПодоходныйНалог - ВыборкаДанных.Получить(НомерСтрокиКорректировкиСуммаЧистыйДоход).СуммаПредыдущий - ЧистыйДоход;
	//
	// Предшествующий
	//
    ДоходыДоНалогоОблажения = 0; ЧистыйДоход = 0; КорпоративныйПодоходныйНалог = 0;
    Для Каждого Строка Из СвернутаяТЗ Цикл
		Если Строка.СтатьяБюджета = СтатьяБюджетаДоходДоНалогооблажения Тогда
			ДоходыДоНалогоОблажения = Строка.СуммаПредществующий;
		КонецЕсли;	
		Если Строка.СтатьяБюджета = СтатьяБюджетаКорпоративныйПодоходныйНалог Тогда
			 КорпоративныйПодоходныйНалог = Строка.СуммаПредществующий;
		КонецЕсли;	
		Если Строка.СтатьяБюджета = СтатьяБюджетаЧистыйДоход Тогда
			 ЧистыйДоход = Строка.СуммаПредществующий;
		КонецЕсли;	
	КонецЦикла;
	Доходы = 0; Расходы = 0; СуммаКорректировки = 0;
	Для каждого Строка из ВыборкаДанных Цикл
		КодСтрокиБюджета = Строка.СтатьяБюджета.КодСтрокиБюджета;
		ПервыйСимволКодаСтатьиБюджета = Сред(КодСтрокиБюджета,1,1);
		Если ПервыйСимволКодаСтатьиБюджета = "1" Тогда
			 Доходы = Доходы + Строка.СуммаПредществующий;
		 ИначеЕсли ПервыйСимволКодаСтатьиБюджета = "2" Тогда
			 Расходы = Расходы + Строка.СуммаПредществующий;
		 Иначе
		КонецЕсли;	 
	КонецЦикла;
	СуммаКорректировки = ДоходыДоНалогоОблажения - Доходы + Расходы;
	ВыборкаДанных.Получить(НомерСтрокиКорректировкиСуммаДоходДоНалогооблажения).СуммаПредществующий =  ВыборкаДанных.Получить(НомерСтрокиКорректировкиСуммаДоходДоНалогооблажения).СуммаПредществующий  -СуммаКорректировки;
	ВыборкаДанных.Получить(НомерСтрокиКорректировкиСуммаЧистыйДоход).СуммаПредществующий =    Доходы - Расходы - КорпоративныйПодоходныйНалог - ВыборкаДанных.Получить(НомерСтрокиКорректировкиСуммаЧистыйДоход).СуммаПредществующий - ЧистыйДоход;
	//
	// Три года назад
	//
    ДоходыДоНалогоОблажения = 0; ЧистыйДоход = 0; КорпоративныйПодоходныйНалог = 0;
    Для Каждого Строка Из СвернутаяТЗ Цикл
		Если Строка.СтатьяБюджета = СтатьяБюджетаДоходДоНалогооблажения Тогда
			ДоходыДоНалогоОблажения = Строка.СуммаТриГодаНазад;
		КонецЕсли;	
		Если Строка.СтатьяБюджета = СтатьяБюджетаКорпоративныйПодоходныйНалог Тогда
			 КорпоративныйПодоходныйНалог = Строка.СуммаТриГодаНазад;
		КонецЕсли;	
		Если Строка.СтатьяБюджета = СтатьяБюджетаЧистыйДоход Тогда
			 ЧистыйДоход = Строка.СуммаТриГодаНазад;
		КонецЕсли;	
	КонецЦикла;
	Доходы = 0; Расходы = 0; СуммаКорректировки = 0;
	Для каждого Строка из ВыборкаДанных Цикл
		КодСтрокиБюджета = Строка.СтатьяБюджета.КодСтрокиБюджета;
		ПервыйСимволКодаСтатьиБюджета = Сред(КодСтрокиБюджета,1,1);
		Если ПервыйСимволКодаСтатьиБюджета = "1" Тогда
			 Доходы = Доходы + Строка.СуммаТриГодаНазад;
		 ИначеЕсли ПервыйСимволКодаСтатьиБюджета = "2" Тогда
			 Расходы = Расходы + Строка.СуммаТриГодаНазад;
		 Иначе
		КонецЕсли;	 
	КонецЦикла;
	СуммаКорректировки = ДоходыДоНалогоОблажения - Доходы + Расходы;
	ВыборкаДанных.Получить(НомерСтрокиКорректировкиСуммаДоходДоНалогооблажения).СуммаТриГодаНазад =  ВыборкаДанных.Получить(НомерСтрокиКорректировкиСуммаДоходДоНалогооблажения).СуммаТриГодаНазад  -СуммаКорректировки;
	ВыборкаДанных.Получить(НомерСтрокиКорректировкиСуммаЧистыйДоход).СуммаТриГодаНазад =    Доходы - Расходы - КорпоративныйПодоходныйНалог - ВыборкаДанных.Получить(НомерСтрокиКорректировкиСуммаЧистыйДоход).СуммаТриГодаНазад - ЧистыйДоход;
    //
	//
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТаблицаДанных", ВыборкаДанных);
	
	Поле = СхемаКомпоновкиДанных.НаборыДанных[0].Поля.Найти("СуммаИтого");
	Если Поле <> Неопределено Тогда
		Поле.Заголовок = "Итого " + Формат(Год(НачалоПериода),"ЧГ=0")+" год";
	КонецЕсли;
	
	Поле = СхемаКомпоновкиДанных.НаборыДанных[0].Поля.Найти("СуммаПредыдущий");
	Если Поле <> Неопределено Тогда
		// бит Романов 18.08.2020 ++
		//Если Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))) = 2016 Тогда
		//	Поле.Заголовок = "Факт " + Формат(Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))),"ЧГ=0")+" года";
		//ИначеЕсли Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))) = 2017 Тогда
		//	Поле.Заголовок = "Факт " + Формат(Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))),"ЧГ=0")+" года";
		//ИначеЕсли Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))) = 2018 Тогда
		//	Поле.Заголовок = "Факт " + Формат(Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))),"ЧГ=0")+" года";

		//Иначе
		//	Поле.Заголовок = "Оценка " + Формат(Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))),"ЧГ=0")+" года";
		//КонецЕсли;
		
		Если Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))) < Год(ТекущаяДатаСеанса()) Тогда
			Поле.Заголовок = "Факт " + Формат(Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))),"ЧГ=0")+" года";
		Иначе
			Поле.Заголовок = "Факт " + Формат(Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))),"ЧГ=0")+" года";
		КонецЕсли;
		// бит Романов 18.08.2020 --
		
	КонецЕсли;
	
	Поле = СхемаКомпоновкиДанных.НаборыДанных[0].Поля.Найти("СуммаПредществующий");
	Если Поле <> Неопределено Тогда
		Поле.Заголовок = "Факт " + Формат(Год( НачалоДня(Дата(Год(НачалоПериода)-2,1,1))),"ЧГ=0")+" года";
	КонецЕсли;
	
	Поле = СхемаКомпоновкиДанных.НаборыДанных[0].Поля.Найти("СуммаТриГодаНазад");
	Если Поле <> Неопределено Тогда
		Поле.Заголовок = "Факт " + Формат(Год( НачалоДня(Дата(Год(НачалоПериода)-3,1,1))),"ЧГ=0")+" года";
	КонецЕсли;
	
	Поле = СхемаКомпоновкиДанных.НаборыДанных[0].Поля.Найти("СуммаТриГодаНазад");
	Если Поле <> Неопределено Тогда
		Поле.Заголовок = "Факт " + Формат(Год( НачалоДня(Дата(Год(НачалоПериода)-3,1,1))),"ЧГ=0")+" года";
	КонецЕсли;
	Поле = СхемаКомпоновкиДанных.ВычисляемыеПоля.Найти("Отклонение1");
	Если Поле <> Неопределено Тогда
		Поле.Заголовок = "План " + Формат(Год( НачалоДня(Дата(Год(НачалоПериода),1,1))),"ЧГ=0")+" года к факту " + Формат(Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))),"ЧГ=0")+" года,%";
	КонецЕсли;
	Поле = СхемаКомпоновкиДанных.ВычисляемыеПоля.Найти("Отклонение2");
	Если Поле <> Неопределено Тогда
		Поле.Заголовок = "План " + Формат(Год( НачалоДня(Дата(Год(НачалоПериода),1,1))),"ЧГ=0")+" года к факту " + Формат(Год(НачалоДня(Дата(Год(НачалоПериода)-2,1,1))),"ЧГ=0")+" года,%";
	КонецЕсли;
	Поле = СхемаКомпоновкиДанных.ВычисляемыеПоля.Найти("Отклонение3");
	Если Поле <> Неопределено Тогда
		Поле.Заголовок = "План " + Формат(Год( НачалоДня(Дата(Год(НачалоПериода),1,1))),"ЧГ=0")+" года к факту " + Формат(Год(НачалоДня(Дата(Год(НачалоПериода)-3,1,1))),"ЧГ=0")+" года,%";
	КонецЕсли;
	
	
	Поле = СхемаКомпоновкиДанных.НаборыДанных[0].Поля.Найти("ПланПредыдущий");
	Если Поле <> Неопределено Тогда
		Поле.Заголовок = "План " + Формат(Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))),"ЧГ=0")+" года";
		
		// бит Романов 18.08.2020 ++
		//Если Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))) = 2019 Тогда
		//	
		//	Поле.Заголовок = "План " + Формат(Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))),"ЧГ=0") + " года (корректировка, оценка)";
		//	
		//КонецЕсли;
		
		Если Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))) >= Год(ТекущаяДатаСеанса()) Тогда
			
			Поле.Заголовок = "План " + Формат(Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1))),"ЧГ=0") + " года (корректировка, оценка)";
			
		КонецЕсли;
		// бит Романов 18.08.2020 --
		
	КонецЕсли;

	//Предыдущий период
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПредыдущегоПериода", НачалоДня(Дата(Год(НачалоПериода)-1,1,1)));
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПредыдущегоПериода", КонецДня(Дата(Год(НачалоПериода)-1,12,31)));

	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПредществующегоПериода", НачалоДня(Дата(Год(НачалоПериода)-2,1,1)));
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПредществующегоПериода", КонецДня(Дата(Год(НачалоПериода)-2,12,31)));

	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоТриГодаНазад", НачалоДня(Дата(Год(НачалоПериода)-3,1,1)));
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецТриГодаНазад", КонецДня(Дата(Год(НачалоПериода)-3,12,31)));
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ОкруглятьДоЦелых", ОкруглятьДоЦелых);
	
	Если мДеревоСтруктурныхЕдиниц.Колонки.Количество() = 0 Тогда 
		
		СписокСтруктурныхЕдиниц = Новый СписокЗначений;
		СписокСтруктурныхЕдиниц.ЗагрузитьЗначения(мСписокСтруктурныхЕдиниц.ВыгрузитьЗначения());
		
		Для Каждого СтрПодразделение Из мСписокПодразделений Цикл 
			СписокСтруктурныхЕдиниц.Добавить(СтрПодразделение.Значение);
		КонецЦикла;		
				
		мДеревоСтруктурныхЕдиниц = СтандартныеОтчеты.СформироватьДеревоСЕ(, СписокСтруктурныхЕдиниц);
		
	КонецЕсли;
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ФормируемыйБюджет", ФормируемыйБюджет);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ЕдиницаИзмерения", ЕдиницаИзмерения);
	
	ТиповыеОтчеты.ДобавитьОтборПоОрганизациямИПодразделениям(КомпоновщикНастроек, мДеревоСтруктурныхЕдиниц);
	
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	СтандартныеОтчеты.ИнициализацияОтчета(ЭтотОбъект);
	
КонецПроцедуры

Процедура ВыводПодписиОтчета(Результат)
	
	//Макет = ПолучитьОбщийМакет("ОбщиеОбластиСтандартногоОтчета");
	//ОбластьПодписи        = Макет.ПолучитьОбласть("ПодписиПроверил");
	//Результат.Вывести(ОбластьПодписи);
	
КонецПроцедуры

Процедура ВыводЗаголовкаОтчета(ОтчетОбъект, Результат)
	
	СтандартныеОтчеты.ВыводЗаголовкаСпециализированногоОтчета(ОтчетОбъект, Результат);
			
КонецПроцедуры

Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина) Экспорт 
		
	ЗаголовокОтчета = СокрЛП(ФормируемыйБюджет.Наименование) + СтандартныеОтчеты.ПолучитьПредставлениеПериода(ЭтотОбъект);

	Возврат ?(ОрганизацияВНачале, ЗаголовокОтчета, ЗаголовокОтчета + " " + СтандартныеОтчеты.ПолучитьТекстОрганизация(ЭтотОбъект));
		
КонецФункции

Функция ПолучитьВыборку()
	
	Запрос = Новый Запрос;
         
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БюджетОбороты.Организация КАК Организация,
	|	БюджетОбороты.СтатьяБюджета КАК СтатьяБюджета,
	|	БюджетОбороты.Статус,
	|	БюджетОбороты.Регистратор КАК ДокументДвижения,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) = 1
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаЯнварь,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) = 2
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаФевраль,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) = 3
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаМарт,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) = 4
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаАпрель,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) = 5
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаМай,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) = 6
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаИюнь,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) = 7
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаИюль,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) = 8
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаАвгуст,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) = 9
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаСентябрь,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) = 10
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаОктябрь,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) = 11
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНоябрь,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) = 12
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаДекабрь,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) < 4
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПервыйКвартал,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) > 3
	|				И МЕСЯЦ(БюджетОбороты.Период) < 7
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВторойКвартал,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) > 6
	|				И МЕСЯЦ(БюджетОбороты.Период) < 10
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаТретийКвартал,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) > 9
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаЧетвертыйКвартал,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) < 7
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаЗаПолугодие,
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(БюджетОбороты.Период) < 10
	|			ТОГДА ВЫБОР
	|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|					ИНАЧЕ ВЫБОР
	|							КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|								ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|							ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаЗаДевятьМесяцев,
	|	ВЫБОР
	|		КОГДА БюджетОбороты.Бюджет.ЦС_РасчетНеНакоплением
	|			ТОГДА ВЫБОР
	|					КОГДА МЕСЯЦ(БюджетОбороты.Период) = 12
	|						ТОГДА ВЫБОР
	|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|								ИНАЧЕ ВЫБОР
	|										КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|											ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|										ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|									КОНЕЦ
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|					ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
	|				ИНАЧЕ ВЫБОР
	|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
	|						ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СуммаИтого,
	|	0 КАК СуммаИтогоФакт,
	|	0 КАК СуммаПредыдущий,
	|	0 КАК СуммаПредществующий,
	|	0 КАК СуммаТриГодаНазад,
	|	0 КАК ПризнакКоличество,
	|	0 КАК ПланПредыдущий
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	РегистрНакопления.б_Бюджет.Обороты(&Началопериода, &КонецПериода, Регистратор, Бюджет = &ФормируемыйБюджет) КАК БюджетОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БюджетОборотыФакт.Организация,
	|	БюджетОборотыФакт.СтатьяБюджета,
	|	БюджетОборотыФакт.Статус,
	|	БюджетОборотыФакт.Регистратор,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА БюджетОборотыФакт.Бюджет.ЦС_РасчетНеНакоплением
	|			ТОГДА ВЫБОР
	|					КОГДА МЕСЯЦ(БюджетОборотыФакт.Период) = 12
	|						ТОГДА ВЫБОР
	|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|									ТОГДА ЕСТЬNULL(БюджетОборотыФакт.СуммаОборот, 0) / 1000000
	|								ИНАЧЕ ВЫБОР
	|										КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|											ТОГДА ЕСТЬNULL(БюджетОборотыФакт.СуммаОборот, 0) / 1000
	|										ИНАЧЕ ЕСТЬNULL(БюджетОборотыФакт.СуммаОборот, 0)
	|									КОНЕЦ
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|					ТОГДА ЕСТЬNULL(БюджетОборотыФакт.СуммаОборот, 0) / 1000000
	|				ИНАЧЕ ВЫБОР
	|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|							ТОГДА ЕСТЬNULL(БюджетОборотыФакт.СуммаОборот, 0) / 1000
	|						ИНАЧЕ ЕСТЬNULL(БюджетОборотыФакт.СуммаОборот, 0)
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	0,
	|	0,
	|	0,
	|	БюджетОборотыФакт.ПризнакКоличествоОборот,
	|	0
	|ИЗ
	|	РегистрНакопления.б_БюджетФакт.Обороты(&Началопериода, &КонецПериода, Регистратор, Бюджет = &ФормируемыйБюджет) КАК БюджетОборотыФакт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БюджетФактОбороты.Организация,
	|	БюджетФактОбороты.СтатьяБюджета,
	|	БюджетФактОбороты.Статус,
	|	БюджетФактОбороты.Регистратор,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА БюджетФактОбороты.Бюджет.ЦС_РасчетНеНакоплением
	|			ТОГДА ВЫБОР
	|					КОГДА МЕСЯЦ(БюджетФактОбороты.Период) = 12
	|						ТОГДА ВЫБОР
	|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|									ТОГДА ЕСТЬNULL(БюджетФактОбороты.СуммаОборот, 0) / 1000000
	|								ИНАЧЕ ВЫБОР
	|										КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|											ТОГДА ЕСТЬNULL(БюджетФактОбороты.СуммаОборот, 0) / 1000
	|										ИНАЧЕ ЕСТЬNULL(БюджетФактОбороты.СуммаОборот, 0)
	|									КОНЕЦ
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|					ТОГДА ЕСТЬNULL(БюджетФактОбороты.СуммаОборот, 0) / 1000000
	|				ИНАЧЕ ВЫБОР
	|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|							ТОГДА ЕСТЬNULL(БюджетФактОбороты.СуммаОборот, 0) / 1000
	|						ИНАЧЕ ЕСТЬNULL(БюджетФактОбороты.СуммаОборот, 0)
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	0,
	|	0,
	|	БюджетФактОбороты.ПризнакКоличествоОборот,
	|	0
	|ИЗ
	|	РегистрНакопления.б_БюджетФакт.Обороты(&НачалоПредыдущегопериода, &КонецПредыдущегоПериода, Регистратор, Бюджет = &ФормируемыйБюджет) КАК БюджетФактОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БюджетФактОбороты_Доп.Организация,
	|	БюджетФактОбороты_Доп.СтатьяБюджета,
	|	БюджетФактОбороты_Доп.Статус,
	|	БюджетФактОбороты_Доп.Регистратор,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА БюджетФактОбороты_Доп.Бюджет.ЦС_РасчетНеНакоплением
	|			ТОГДА ВЫБОР
	|					КОГДА МЕСЯЦ(БюджетФактОбороты_Доп.Период) = 12
	|						ТОГДА ВЫБОР
	|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|									ТОГДА ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0) / 1000000
	|								ИНАЧЕ ВЫБОР
	|										КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|											ТОГДА ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0) / 1000
	|										ИНАЧЕ ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0)
	|									КОНЕЦ
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|					ТОГДА ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0) / 1000000
	|				ИНАЧЕ ВЫБОР
	|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|							ТОГДА ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0) / 1000
	|						ИНАЧЕ ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0)
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	0,
	|	БюджетФактОбороты_Доп.ПризнакКоличествоОборот,
	|	0
	|ИЗ
	|	РегистрНакопления.б_БюджетФакт.Обороты(&НачалоПредществующегоПериода, &КонецПредществующегоПериода, Регистратор, Бюджет = &ФормируемыйБюджет) КАК БюджетФактОбороты_Доп
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БюджетФактОбороты_Доп.Организация,
	|	БюджетФактОбороты_Доп.СтатьяБюджета,
	|	БюджетФактОбороты_Доп.Статус,
	|	БюджетФактОбороты_Доп.Регистратор,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА БюджетФактОбороты_Доп.Бюджет.ЦС_РасчетНеНакоплением
	|			ТОГДА ВЫБОР
	|					КОГДА МЕСЯЦ(БюджетФактОбороты_Доп.Период) = 12
	|						ТОГДА ВЫБОР
	|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|									ТОГДА ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0) / 1000000
	|								ИНАЧЕ ВЫБОР
	|										КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|											ТОГДА ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0) / 1000
	|										ИНАЧЕ ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0)
	|									КОНЕЦ
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|					ТОГДА ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0) / 1000000
	|				ИНАЧЕ ВЫБОР
	|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|							ТОГДА ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0) / 1000
	|						ИНАЧЕ ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0)
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	БюджетФактОбороты_Доп.ПризнакКоличествоОборот,
	|	0
	|ИЗ
	|	РегистрНакопления.б_БюджетФакт.Обороты(&НачалоТриГодаНазад, &КонецТриГодаНазад, Регистратор, Бюджет = &ФормируемыйБюджет) КАК БюджетФактОбороты_Доп
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	б_БюджетОбороты.Организация,
	|	б_БюджетОбороты.СтатьяБюджета,
	|	б_БюджетОбороты.Статус,
	|	б_БюджетОбороты.Регистратор,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА б_БюджетОбороты.Бюджет.ЦС_РасчетНеНакоплением
	|			ТОГДА ВЫБОР
	|					КОГДА МЕСЯЦ(б_БюджетОбороты.Период) = 12
	|						ТОГДА ВЫБОР
	|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|									ТОГДА ЕСТЬNULL(б_БюджетОбороты.СуммаОборот, 0) / 1000000
	|								ИНАЧЕ ВЫБОР
	|										КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|											ТОГДА ЕСТЬNULL(б_БюджетОбороты.СуммаОборот, 0) / 1000
	|										ИНАЧЕ ЕСТЬNULL(б_БюджетОбороты.СуммаОборот, 0)
	|									КОНЕЦ
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|					ТОГДА ЕСТЬNULL(б_БюджетОбороты.СуммаОборот, 0) / 1000000
	|				ИНАЧЕ ВЫБОР
	|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|							ТОГДА ЕСТЬNULL(б_БюджетОбороты.СуммаОборот, 0) / 1000
	|						ИНАЧЕ ЕСТЬNULL(б_БюджетОбороты.СуммаОборот, 0)
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.б_Бюджет.Обороты(&НачалоПредыдущегопериода, &КонецПредыдущегоПериода, Регистратор, Бюджет = &ФормируемыйБюджет) КАК б_БюджетОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Организация,
	|	Данные.СтатьяБюджета,
	|	Данные.Статус,
	|	Данные.ДокументДвижения,
	|	СУММА(Данные.СуммаЯнварь) КАК СуммаЯнварь,
	|	СУММА(Данные.СуммаФевраль) КАК СуммаФевраль,
	|	СУММА(Данные.СуммаМарт) КАК СуммаМарт,
	|	СУММА(Данные.СуммаАпрель) КАК СуммаАпрель,
	|	СУММА(Данные.СуммаМай) КАК СуммаМай,
	|	СУММА(Данные.СуммаИюнь) КАК СуммаИюнь,
	|	СУММА(Данные.СуммаИюль) КАК СуммаИюль,
	|	СУММА(Данные.СуммаАвгуст) КАК СуммаАвгуст,
	|	СУММА(Данные.СуммаСентябрь) КАК СуммаСентябрь,
	|	СУММА(Данные.СуммаОктябрь) КАК СуммаОктябрь,
	|	СУММА(Данные.СуммаНоябрь) КАК СуммаНоябрь,
	|	СУММА(Данные.СуммаДекабрь) КАК СуммаДекабрь,
	|	СУММА(Данные.СуммаПервыйКвартал) КАК СуммаПервыйКвартал,
	|	СУММА(Данные.СуммаВторойКвартал) КАК СуммаВторойКвартал,
	|	СУММА(Данные.СуммаТретийКвартал) КАК СуммаТретийКвартал,
	|	СУММА(Данные.СуммаЧетвертыйКвартал) КАК СуммаЧетвертыйКвартал,
	|	СУММА(Данные.СуммаЗаПолугодие) КАК СуммаЗаПолугодие,
	|	СУММА(Данные.СуммаЗаДевятьМесяцев) КАК СуммаЗаДевятьМесяцев,
	|	СУММА(Данные.СуммаИтого) КАК СуммаИтого,
	|	СУММА(Данные.СуммаИтогоФакт) КАК СуммаИтогоФакт,
	|	СУММА(Данные.СуммаПредыдущий) КАК СуммаПредыдущий,
	|	СУММА(Данные.СуммаПредществующий) КАК СуммаПредществующий,
	|	СУММА(Данные.СуммаТриГодаНазад) КАК СуммаТриГодаНазад,
	|	СРЕДНЕЕ(Данные.ПризнакКоличество) КАК ПризнакКоличество,
	|	СУММА(Данные.ПланПредыдущий) КАК ПланПредыдущий
	|ПОМЕСТИТЬ ГруппированныеДанные
	|ИЗ
	|	Данные КАК Данные
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.Организация,
	|	Данные.СтатьяБюджета,
	|	Данные.Статус,
	|	Данные.ДокументДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппированныеДанные.Организация,
	|	ГруппированныеДанные.СтатьяБюджета,
	|	ГруппированныеДанные.Статус,
	|	ГруппированныеДанные.ДокументДвижения,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаЯнварь КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаЯнварь
	|	КОНЕЦ КАК СуммаЯнварь,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаФевраль КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаФевраль
	|	КОНЕЦ КАК СуммаФевраль,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаМарт КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаМарт
	|	КОНЕЦ КАК СуммаМарт,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаАпрель КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаАпрель
	|	КОНЕЦ КАК СуммаАпрель,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаМай КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаМай
	|	КОНЕЦ КАК СуммаМай,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаИюнь КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаИюнь
	|	КОНЕЦ КАК СуммаИюнь,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаИюль КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаИюль
	|	КОНЕЦ КАК СуммаИюль,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаАвгуст КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаАвгуст
	|	КОНЕЦ КАК СуммаАвгуст,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаСентябрь КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаСентябрь
	|	КОНЕЦ КАК СуммаСентябрь,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаОктябрь КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаОктябрь
	|	КОНЕЦ КАК СуммаОктябрь,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаНоябрь КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаНоябрь
	|	КОНЕЦ КАК СуммаНоябрь,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаДекабрь КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаДекабрь
	|	КОНЕЦ КАК СуммаДекабрь,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаПервыйКвартал КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаПервыйКвартал
	|	КОНЕЦ КАК СуммаПервыйКвартал,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаВторойКвартал КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаВторойКвартал
	|	КОНЕЦ КАК СуммаВторойКвартал,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаТретийКвартал КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаТретийКвартал
	|	КОНЕЦ КАК СуммаТретийКвартал,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаЧетвертыйКвартал КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаЧетвертыйКвартал
	|	КОНЕЦ КАК СуммаЧетвертыйКвартал,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаЗаПолугодие КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаЗаПолугодие
	|	КОНЕЦ КАК СуммаЗаПолугодие,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаЗаДевятьМесяцев КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаЗаДевятьМесяцев
	|	КОНЕЦ КАК СуммаЗаДевятьМесяцев,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаИтого КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаИтого
	|	КОНЕЦ КАК СуммаИтого,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаИтогоФакт КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаИтогоФакт
	|	КОНЕЦ КАК СуммаИтогоФакт,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаПредыдущий КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаПредыдущий
	|	КОНЕЦ КАК СуммаПредыдущий,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаПредществующий КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаПредществующий
	|	КОНЕЦ КАК СуммаПредществующий,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.СуммаТриГодаНазад КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.СуммаТриГодаНазад
	|	КОНЕЦ КАК СуммаТриГодаНазад,
	|	ГруппированныеДанные.ПризнакКоличество,
	|	ВЫБОР
	|		КОГДА &ОкруглятьДоЦелых
	|			ТОГДА ВЫРАЗИТЬ(ГруппированныеДанные.ПланПредыдущий КАК ЧИСЛО(19, 0))
	|		ИНАЧЕ ГруппированныеДанные.ПланПредыдущий
	|	КОНЕЦ КАК ПланПредыдущий
	|ИЗ
	|	ГруппированныеДанные КАК ГруппированныеДанные";

	Запрос.УстановитьПараметр("ЕдиницаИзмерения",ЕдиницаИзмерения);
	Запрос.УстановитьПараметр("ФормируемыйБюджет",ФормируемыйБюджет);
	Запрос.УстановитьПараметр("НачалоПериода",НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("НачалоПредыдущегопериода", НачалоДня(Дата(Год(НачалоПериода)-1,1,1)));
	Запрос.УстановитьПараметр("КонецПредыдущегоПериода",КонецДня(Дата(Год(НачалоПериода)-1,12,31)));
	Запрос.УстановитьПараметр("НачалоПредществующегоПериода",НачалоДня(Дата(Год(НачалоПериода)-2,1,1)));
	Запрос.УстановитьПараметр("КонецПредществующегоПериода", КонецДня(Дата(Год(НачалоПериода)-2,12,31)));
	Запрос.УстановитьПараметр("НачалоТриГодаНазад",НачалоДня(Дата(Год(НачалоПериода)-3,1,1)));
	Запрос.УстановитьПараметр("КонецТриГодаНазад", КонецДня(Дата(Год(НачалоПериода)-3,12,31)));
	Запрос.УстановитьПараметр("ОкруглятьДоЦелых", ОкруглятьДоЦелых);
	ТЗ = Запрос.Выполнить().Выгрузить();
	Возврат Запрос.Выполнить();


КонецФункции

Процедура ОбработкаРезультатаОтчета(Результат)
	
	ТиповыеОтчеты.ОбработкаРезультатаОтчета(ЭтотОбъект, Результат);

КонецПроцедуры

// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	//ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	ЗаполнитьНачальныеНастройки();
	
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт
	
	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	
	СтруктураНастроек.Вставить("мСписокПодразделений", мСписокПодразделений);
	СтруктураНастроек.Вставить("мСписокСтруктурныхЕдиниц", мСписокСтруктурныхЕдиниц);
	СтруктураНастроек.Вставить("мДеревоСтруктурныхЕдиниц", мДеревоСтруктурныхЕдиниц);
	
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);

КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры


Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли
мСписокИсточниковФинансирования = Новый СписокЗначений;
мСписокСтруктурныхЕдиниц = Новый СписокЗначений;
мСписокПодразделений = Новый СписокЗначений;
мДеревоСтруктурныхЕдиниц = Новый ДеревоЗначений;

ВедётсяУчетПоПодразделениям = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений();

РежимРасшифровки = Ложь;