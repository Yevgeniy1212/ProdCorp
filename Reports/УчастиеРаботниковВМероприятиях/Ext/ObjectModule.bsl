////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если Клиент Тогда

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Выполняет настройку отчета по умолчанию для заданного вида отчета
//
// Параметры: 
// 
Процедура ЗаполнитьНачальныеНастройки(ВосстанавливаемНастройку = Ложь) Экспорт
	
	ОбщийОтчет.ИмяРегистра = "-";
	ОбщийОтчет.мНазваниеОтчета = "Участие работников в мероприятиях";
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	// структура представлений полей
	СтруктураПредставлениеПолей = Новый Структура();
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.ДатаОкончания КАК ВремяОкончания,
		|	ВложенныйЗапрос.Период КАК ВремяНачала,
		|	ВложенныйЗапрос.ФизЛицо КАК ФизЛицо
		|
		|{ВЫБРАТЬ
		|	ВложенныйЗапрос.ФизЛицо КАК ФизЛицо,
		|	ВложенныйЗапрос.ДатаОкончания КАК ВремяОкончания,
		|	ВложенныйЗапрос.Мероприятие,
		|	ВложенныйЗапрос.ЧастьМероприятия,
		|	ВложенныйЗапрос.ХарактерУчастия,
		|	ВложенныйЗапрос.Период КАК ВремяНачала,
		|	РаботникиСрезПоследних.Подразделение КАК Подразделение,
		|	РаботникиСрезПоследних.Должность
		|	//СВОЙСТВА
		|}
		|
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		СобытийныйПланЗанятостиФизлицСрезПоследних.ФизЛицо КАК ФизЛицо,
		|		СобытийныйПланЗанятостиФизлицСрезПоследних.ДатаОкончания КАК ДатаОкончания,
		|		СобытийныйПланЗанятостиФизлицСрезПоследних.ЧастьМероприятия.Владелец КАК Мероприятие,
		|		СобытийныйПланЗанятостиФизлицСрезПоследних.ЧастьМероприятия КАК ЧастьМероприятия,
		|		СобытийныйПланЗанятостиФизлицСрезПоследних.ХарактерУчастия КАК ХарактерУчастия,
		|		СобытийныйПланЗанятостиФизлицСрезПоследних.Период КАК Период
		|	ИЗ
		|		РегистрСведений.СобытийныйПланЗанятостиФизлиц.СрезПоследних(&ДатаНач) КАК СобытийныйПланЗанятостиФизлицСрезПоследних
		|	
		|	ГДЕ
		|		СобытийныйПланЗанятостиФизлицСрезПоследних.ДатаОкончания > &ДатаНач И
		|		СобытийныйПланЗанятостиФизлицСрезПоследних.Состояние = &Мероприятие
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		СобытийныйПланЗанятостиФизлиц.ФизЛицо,
		|		СобытийныйПланЗанятостиФизлиц.ДатаОкончания,
		|		СобытийныйПланЗанятостиФизлиц.ЧастьМероприятия.Владелец,
		|		СобытийныйПланЗанятостиФизлиц.ЧастьМероприятия,
		|		СобытийныйПланЗанятостиФизлиц.ХарактерУчастия,
		|		СобытийныйПланЗанятостиФизлиц.Период
		|	ИЗ
		|		РегистрСведений.СобытийныйПланЗанятостиФизлиц КАК СобытийныйПланЗанятостиФизлиц
		|	
		|	ГДЕ
		|		СобытийныйПланЗанятостиФизлиц.Период >= &ДатаНач И
		|		СобытийныйПланЗанятостиФизлиц.Период < &ДатаКон И
		|		СобытийныйПланЗанятостиФизлиц.Состояние = &Мероприятие) КАК ВложенныйЗапрос
		|{		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники.СрезПоследних(&ДатаКон, ) КАК РаботникиСрезПоследних
		|		ПО ВложенныйЗапрос.ФизЛицо = РаботникиСрезПоследних.ФизЛицо
		|}
		|	//СОЕДИНЕНИЯ
		|{ГДЕ
		|	ВложенныйЗапрос.ФизЛицо КАК ФизЛицо,
		|	ВложенныйЗапрос.ДатаОкончания КАК ВремяОкончания,
		|	ВложенныйЗапрос.Мероприятие,
		|	ВложенныйЗапрос.ЧастьМероприятия,
		|	ВложенныйЗапрос.ХарактерУчастия,
		|	ВложенныйЗапрос.Период КАК ВремяНачала,
		|	РаботникиСрезПоследних.Подразделение КАК Подразделение,
		|	РаботникиСрезПоследних.Должность
		|	//СВОЙСТВА
		|	//КАТЕГОРИИ
		|}
		|
		|{УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.ФизЛицо КАК ФизЛицо,
		|	ВложенныйЗапрос.ДатаОкончания КАК ВремяОкончания,
		|	ВложенныйЗапрос.Мероприятие,
		|	ВложенныйЗапрос.ЧастьМероприятия,
		|	ВложенныйЗапрос.ХарактерУчастия,
		|	ВложенныйЗапрос.Период КАК ВремяНачала,
		|	РаботникиСрезПоследних.Подразделение КАК Подразделение,
		|	РаботникиСрезПоследних.Должность
		|	//СВОЙСТВА
		|}
		|
		|{ИТОГИ ПО
		|	Подразделение,
		|	ФизЛицо,
		|	Мероприятие,
		|	ЧастьМероприятия,
		|	ВремяНачала,
		|	ВремяОкончания
		|	//СВОЙСТВА
		|}
		|";

	
	// При использовании свойств и категорий в текст запроса добавляются дополнительные поля
	Если ОбщийОтчет.ИспользоватьСвойстваИКатегории Тогда

		// Свойства и категории, назначаемые пользователем:

		ТаблицаПолей = Новый ТаблицаЗначений;
		ТаблицаПолей.Колонки.Добавить("ПутьКДанным");  // описание поля запроса поля, для которого добавляются свойства и категории. Используется в условии соединения с регистром сведений, хранящим значения свойств или категорий
		ТаблицаПолей.Колонки.Добавить("Представление");// представление поля, для которого добавляются свойства и категории. 
		ТаблицаПолей.Колонки.Добавить("Назначение");   // назначение свойств/категорий объектов для данного поля
		ТаблицаПолей.Колонки.Добавить("ТипЗначения");  // тип значения поля, для которого добавляются свойства и категории. Используется, если не установлено назначение
		ТаблицаПолей.Колонки.Добавить("НетКатегорий"); // признак НЕиспользования категорий для объекта

		НоваяСтрока = ТаблицаПолей.Добавить();
		НоваяСтрока.ПутьКДанным = "ВложенныйЗапрос.ФизЛицо";
		НоваяСтрока.Представление = "Сотрудник";
		НоваяСтрока.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица;

		НоваяСтрока = ТаблицаПолей.Добавить();
		НоваяСтрока.ПутьКДанным = "РаботникиСрезПоследних.Подразделение";
		НоваяСтрока.Представление = "Подразделение";
		НоваяСтрока.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Подразделения;

		// Добавим строки запроса, необходимые для использования свойств и категорий
		ТекстПоляКатегорий = "";
		ТекстПоляСвойств = "";

		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, 
				ОбщийОтчет.мСоответствиеНазначений, ПостроительОтчета.Параметры
				,, ТекстПоляКатегорий, ТекстПоляСвойств,,,,,,ОбщийОтчет.мСтруктураДляОтбораПоКатегориям);
	КонецЕсли;	
	
	ПостроительОтчета.Текст = ТекстЗапроса;							  

	Если ОбщийОтчет.ИспользоватьСвойстваИКатегории = Истина Тогда
		УправлениеОтчетами.УстановитьТипыЗначенийСвойствИКатегорийДляОтбора(ПостроительОтчета, ТекстПоляКатегорий, ТекстПоляСвойств, ОбщийОтчет.мСоответствиеНазначений, СтруктураПредставлениеПолей);
	КонецЕсли;

 	// представление полей запроса
	СтруктураПредставлениеПолей.Вставить("ФизЛицо", "Сотрудник");
	СтруктураПредставлениеПолей.Вставить("ВремяОкончания", "Окончание мероприятия");
	СтруктураПредставлениеПолей.Вставить("ВремяНачала", "Начало мероприятия");
	СтруктураПредставлениеПолей.Вставить("ЧастьМероприятия", "Часть мероприятия");
	СтруктураПредставлениеПолей.Вставить("ХарактерУчастия", "Характер участия в мероприятии");
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
	// формат полей
	ОбщийОтчет.СтруктураФорматаПолей.Вставить("ВремяНачала", "ДЛФ=DDT");
	ОбщийОтчет.СтруктураФорматаПолей.Вставить("ВремяОкончания", "ДЛФ=DDT");
	
   Если Не ВосстанавливаемНастройку Тогда
		
		// группировки по умолчанию
		ПостроительОтчета.ИзмеренияСтроки.Добавить("Мероприятие");
		ПостроительОтчета.ИзмеренияСтроки.Добавить("Подразделение");
		
		// отборы по умолчанию
		МассивОтбора = Новый Массив;
		МассивОтбора.Добавить("Мероприятие");
		МассивОтбора.Добавить("Подразделение");
		МассивОтбора.Добавить("ФизЛицо");
		УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
		
		// поля по умолчанию
		ПостроительОтчета.ВыбранныеПоля.Очистить();
		ПостроительОтчета.ВыбранныеПоля.Добавить("ФизЛицо");
		ПостроительОтчета.ВыбранныеПоля.Добавить("ВремяНачала");
		ПостроительОтчета.ВыбранныеПоля.Добавить("ВремяОкончания");
	
		// настройки отчета
		ОбщийОтчет.РаскрашиватьИзмерения = Истина;
		ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Ложь;
		ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
		ОбщийОтчет.мРежимВводаПериода = 0; // Период
	КонецЕсли;
	
	УправлениеОтчетами.УпорядочитьПоляПостроителяОтчета(ПостроительОтчета);	
	
КонецПроцедуры

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//	ЕстьОшибки - флаг того, что при формировании произошли ошибки
//
//Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки = Ложь) Экспорт
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт

	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаКон", ОбщийОтчет.ДатаКон);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНач", ОбщийОтчет.ДатаНач);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("Мероприятие", Перечисления.ТипыПериодическихЗадачРаботника.Мероприятие);
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПроцедуры


#КонецЕсли