Перем ЗаполнениеПараметров Экспорт;
Перем мСписокСтруктурныхЕдиниц Экспорт;
Перем мДеревоСтруктурныхЕдиниц Экспорт;
Перем мСписокПодразделений Экспорт;
Перем СохраненнаяНастройка Экспорт;
Перем ДанныеРасшифровки Экспорт;

Процедура Скомпоновать(ДокументРезультат,ДеревоСЕ,СписокСЕ,СписокПодразделений) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	мСписокПодразделений = СписокПодразделений;
	мСписокСтруктурныхЕдиниц = СписокСЕ;
	мДеревоСтруктурныхЕдиниц = ДеревоСЕ;
	СкомпоноватьРезультат(ДокументРезультат,ДанныеРасшифровки);	
	общ_СтандартныеОтчетыСервер.НастроитьФиксацию(ДокументРезультат,КомпоновщикНастроек.Настройки);
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	УстановитьПривилегированныйРежим(Истина);

	Для Каждого Реквизит Из Метаданные().Реквизиты Цикл
		КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра(Реквизит.Имя,ЭтотОбъект[Реквизит.Имя]);
	КонецЦикла;
	Отчеты.дог_СверкаДанныхПоДоговорам.ДоработатьКомпоновщикПередВыводом(КомпоновщикНастроек,ОтображатьДанныеПоПодчиненнымДоговорамКонтрагента,ДоговорКонтрагента,мСписокСтруктурныхЕдиниц,мСписокПодразделений,мДеревоСтруктурныхЕдиниц);
	СтандартнаяОбработка = Ложь;
	////Вывод
	КомпоновщикМакетаСКД = Новый КомпоновщикМакетаКомпоновкиДанных();
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	МакетСКД = КомпоновщикМакетаСКД.Выполнить(СхемаКомпоновкиДанных,КомпоновщикНастроек.ПолучитьНастройки(),ДанныеРасшифровки);
	
	ПроцессорСКД = Новый ПроцессорКомпоновкиДанных();
	ПроцессорСКД.Инициализировать(МакетСКД,,ДанныеРасшифровки,Истина);
	
	ПроцессорВыводаСКД = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ДокументРезультат.Очистить();
	ПроцессорВыводаСКД.УстановитьДокумент(ДокументРезультат);
	ПроцессорВыводаСКД.Вывести(ПроцессорСКД);
	
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

мСписокПодразделений = Новый СписокЗначений;
мДеревоСтруктурныхЕдиниц = Новый ДеревоЗначений;
мСписокСтруктурныхЕдиниц = Новый СписокЗначений;
ЗаполнениеПараметров = Новый Структура;
//ЗаполнениеПараметров.Вставить("НачалоПериода",	НачалоМесяца(ТекущаяДата()));
//ЗаполнениеПараметров.Вставить("КонецПериода",	КонецМесяца(ТекущаяДата()));