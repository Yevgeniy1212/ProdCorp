#Если Клиент Тогда

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт

	ВысшееОбразование = Новый Массив;
	ВысшееОбразование.Добавить(Справочники.ВидыОбразованияФизЛиц.АспирантураОрдинатураАдъюнктура);
	ВысшееОбразование.Добавить(Справочники.ВидыОбразованияФизЛиц.ВысшееОбразование);
	ВысшееОбразование.Добавить(Справочники.ВидыОбразованияФизЛиц.Докторантура);
	
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("СреднееОбщееОбразование", Справочники.ВидыОбразованияФизЛиц.СреднееОбщееОбразование);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("НачальноеПрофессиональноеОбразование", Справочники.ВидыОбразованияФизЛиц.НачальноеПрофессиональноеОбразование);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("СреднееПрофессиональноеОбразование", Справочники.ВидыОбразованияФизЛиц.СреднееПрофессиональноеОбразование);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ВысшееОбразование", Справочники.ВидыОбразованияФизЛиц.ВысшееОбразование);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ПустоеОбразование", Справочники.ВидыОбразованияФизЛиц.ПустаяСсылка());
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("СписокВысшегоОбразования", ВысшееОбразование);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("Адрес", Перечисления.ТипыКонтактнойИнформации.Адрес);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ФактическийАдрес", Справочники.ВидыКонтактнойИнформации.ФактАдресФизЛица);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("АдресПрописки", Справочники.ВидыКонтактнойИнформации.ЮрАдресФизЛица);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("Телефон", Перечисления.ТипыКонтактнойИнформации.Телефон);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДомашнийТелефон", Справочники.ВидыКонтактнойИнформации.ТелефонФизЛица);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("Перемещение", Перечисления.ПричиныИзмененияСостояния.Перемещение);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("Прием", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("Увольнение", Перечисления.ПричиныИзмененияСостояния.Увольнение);	
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("Военнообязанный", Перечисления.ОтношениеКВоинскойОбязанности.Военнообязанный);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ВнутреннееСовместительство", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаАктуальности", ОбщийОтчет.ДатаКон);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_Год", Год(ОбщийОтчет.ДатаКон));
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_Месяц", Месяц(ОбщийОтчет.ДатаКон));
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_День", День(ОбщийОтчет.ДатаКон));
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаКонУвольнений", КонецДня(ОбщийОтчет.ДатаКон) + 1);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНачУвольнений", КонецДня(ОбщийОтчет.ДатаНач) + 1);
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);


КонецПроцедуры

Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ОбщийОтчет.ИмяРегистра = "-";
	ОбщийОтчет.мНазваниеОтчета = Метаданные().Синоним;
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	// структура представлений полей
	СтруктураПредставлениеПолей = Новый Структура();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Призывники.Физлицо
	|{ВЫБРАТЬ
	|	(ВЫБОР
	|			КОГДА ФИОФизЛиц.Фамилия ЕСТЬ NULL 
	|				ТОГДА Призывники.Физлицо.Наименование
	|			ИНАЧЕ ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество
	|		КОНЕЦ) КАК ФиоПолное,
	|	Призывники.ОтношениеКВоинскомуУчету,
	|	Призывники.Годность,
	|	Призывники.Звание.* КАК Звание,
	|	Призывники.Военкомат.* КАК Военкомат,
	|	Призывники.ЗабронированОрганизацией.* КАК ЗабронированОрганизацией,
	|	Призывники.НаличиеМобпредписания,
	|	Призывники.ВУС,
	|	Призывники.ГруппаУчета КАК ГруппаУчета,
	|	Призывники.КатегорияУчета КАК КатегорияУчета,
	|	Призывники.НомерКомандыПартии КАК НомерКомандыПартии,
	|	Призывники.Состав.* КАК Состав,
	|	Призывники.Организация.* КАК Организация,
	|	Призывники.Событие,
	|	Призывники.ДатаСобытия,
	|	Призывники.Физлицо.ДатаРождения КАК ДатаРождения,
	|	СемейноеПоложениеФизЛиц.СемейноеПоложение КАК СемейноеПоложение,
	|	(ПОДСТРОКА(ФактическийАдрес.Представление, 1, 250)) КАК ФактическийАдрес,
	|	(ПОДСТРОКА(АдресПрописки.Представление, 1, 250)) КАК АдресПрописки,
	|	ДомашнийТелефон.Представление КАК ДомашнийТелефон,
	|	(ВЫБОР
	|			КОГДА Призывники.УровеньОбразования = 4
	|				ТОГДА &ВысшееОбразование
	|			КОГДА Призывники.УровеньОбразования = 0
	|				ТОГДА ""Другое образование""
	|			ИНАЧЕ ФизическиеЛицаОбразование.ВидОбразования
	|		КОНЕЦ) КАК Образование
	|	//СВОЙСТВА
	|}
	|ИЗ
	|	(ВЫБРАТЬ
	|		Призывники.Физлицо КАК Физлицо,
	|		Призывники.ОтношениеКВоинскомуУчету КАК ОтношениеКВоинскомуУчету,
	|		Призывники.Годность КАК Годность,
	|		Призывники.Звание КАК Звание,
	|		Призывники.ЗабронированОрганизацией КАК ЗабронированОрганизацией,
	|		Призывники.НаличиеМобпредписания КАК НаличиеМобпредписания,
	|		Призывники.Военкомат КАК Военкомат,
	|		Призывники.ГруппаУчета КАК ГруппаУчета,
	|		Призывники.ВУС КАК ВУС,
	|		Призывники.КатегорияУчета КАК КатегорияУчета,
	|		Призывники.НомерКомандыПартии КАК НомерКомандыПартии,
	|		Призывники.Состав КАК Состав,
	|		Призывники.Организация КАК Организация,
	|		Призывники.Событие КАК Событие,
	|		Призывники.ДатаСобытия КАК ДатаСобытия,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ФизическиеЛицаОбразование.ВидОбразования В (&СписокВысшегоОбразования)
	|					ТОГДА 4
	|				КОГДА ФизическиеЛицаОбразование.ВидОбразования = &СреднееПрофессиональноеОбразование
	|					ТОГДА 3
	|				КОГДА ФизическиеЛицаОбразование.ВидОбразования = &НачальноеПрофессиональноеОбразование
	|					ТОГДА 2
	|				КОГДА ФизическиеЛицаОбразование.ВидОбразования = &СреднееОбщееОбразование
	|					ТОГДА 1
	|				КОГДА ФизическиеЛицаОбразование.ВидОбразования <> &ПустоеОбразование
	|					ТОГДА 1
	|				ИНАЧЕ -1
	|			КОНЕЦ) КАК УровеньОбразования
	|	ИЗ
	|		(ВЫБРАТЬ
	|			РаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо,
	|			ВоинскийУчетСрезПоследних.ОтношениеКВоинскомуУчету КАК ОтношениеКВоинскомуУчету,
	|			ВоинскийУчетСрезПоследних.Годность КАК Годность,
	|			ВоинскийУчетСрезПоследних.Звание КАК Звание,
	|			ВоинскийУчетСрезПоследних.ЗабронированОрганизацией КАК ЗабронированОрганизацией,
	|			ВоинскийУчетСрезПоследних.НаличиеМобпредписания КАК НаличиеМобпредписания,
	|			ВоинскийУчетСрезПоследних.Военкомат КАК Военкомат,
	|			ВоинскийУчетСрезПоследних.ВУС КАК ВУС,
	|			ВоинскийУчетСрезПоследних.НомерКомандыПартии КАК НомерКомандыПартии,
	|			ВоинскийУчетСрезПоследних.КатегорияУчета КАК КатегорияУчета,
	|			ВоинскийУчетСрезПоследних.ГруппаУчета КАК ГруппаУчета,
	|			ВоинскийУчетСрезПоследних.Состав КАК Состав,
	|			РаботникиОрганизации.ОбособленноеПодразделение КАК Организация,
	|			РаботникиОрганизации.ПричинаИзмененияСостояния КАК Событие,
	|			ВЫБОР
	|				КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Прием
	|					ТОГДА РаботникиОрганизации.Период
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
	|			КОНЕЦ КАК ДатаСобытия
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВоинскийУчет.СрезПоследних(&ДатаКон, ) КАК ВоинскийУчетСрезПоследних
	|				ПО РаботникиОрганизации.Сотрудник.Физлицо = ВоинскийУчетСрезПоследних.Физлицо
	|		ГДЕ
	|			(РаботникиОрганизации.Период МЕЖДУ &ДатаНач И &ДатаКон
	|						И РаботникиОрганизации.ПричинаИзмененияСостояния <> &Увольнение
	|					ИЛИ РаботникиОрганизации.Период МЕЖДУ &ДатаНачУвольнений И &ДатаКонУвольнений
	|						И РаботникиОрганизации.ПричинаИзмененияСостояния = &Увольнение)
	|			И РаботникиОрганизации.ПричинаИзмененияСостояния <> &Перемещение
	|			И ВоинскийУчетСрезПоследних.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|			И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство)
	|		{ГДЕ
	|			ВоинскийУчетСрезПоследних.Военкомат,
	|			РаботникиОрганизации.ПричинаИзмененияСостояния КАК Событие}) КАК Призывники
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.Образование КАК ФизическиеЛицаОбразование
	|			ПО Призывники.Физлицо = ФизическиеЛицаОбразование.Ссылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Призывники.Физлицо,
	|		Призывники.ОтношениеКВоинскомуУчету,
	|		Призывники.Годность,
	|		Призывники.Звание,
	|		Призывники.ЗабронированОрганизацией,
	|		Призывники.НаличиеМобпредписания,
	|		Призывники.Военкомат,
	|		Призывники.ВУС,
	|		Призывники.Организация,
	|		Призывники.Событие,
	|		Призывники.ДатаСобытия,
	|		Призывники.КатегорияУчета,
	|		Призывники.ГруппаУчета,
	|		Призывники.НомерКомандыПартии,
	|		Призывники.Состав) КАК Призывники
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СемейноеПоложениеФизЛиц.СрезПоследних(&ДатаКон, ) КАК СемейноеПоложениеФизЛиц
	|		ПО Призывники.Физлицо = СемейноеПоложениеФизЛиц.ФизЛицо}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаКон, ) КАК ФИОФизЛиц
	|		ПО Призывники.Физлицо = ФИОФизЛиц.ФизЛицо}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФактическийАдрес
	|		ПО Призывники.Физлицо = ФактическийАдрес.Объект
	|			И (ФактическийАдрес.Тип = &Адрес)
	|			И (ФактическийАдрес.Вид = &ФактическийАдрес)}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресПрописки
	|		ПО Призывники.Физлицо = АдресПрописки.Объект
	|			И (АдресПрописки.Тип = &Адрес)
	|			И (АдресПрописки.Вид = &АдресПрописки)}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ДомашнийТелефон
	|		ПО Призывники.Физлицо = ДомашнийТелефон.Объект
	|			И (ДомашнийТелефон.Тип = &Телефон)
	|			И (ДомашнийТелефон.Вид = &ДомашнийТелефон)}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.Образование КАК ФизическиеЛицаОбразование
	|		ПО Призывники.Физлицо = ФизическиеЛицаОбразование.Ссылка
	|			И (Призывники.УровеньОбразования = ВЫБОР
	|				КОГДА ФизическиеЛицаОбразование.ВидОбразования В (&ВысшееОбразование)
	|					ТОГДА 4
	|				КОГДА ФизическиеЛицаОбразование.ВидОбразования = &СреднееПрофессиональноеОбразование
	|					ТОГДА 3
	|				КОГДА ФизическиеЛицаОбразование.ВидОбразования = &НачальноеПрофессиональноеОбразование
	|					ТОГДА 2
	|				КОГДА ФизическиеЛицаОбразование.ВидОбразования = &СреднееОбщееОбразование
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ)}
	|		//СОЕДИНЕНИЯ
	|{ГДЕ
	|	Призывники.Организация
	|	//СВОЙСТВА
	|	//КАТЕГОРИИ
	|}
	|{УПОРЯДОЧИТЬ ПО
	|	(ВЫБОР
	|			КОГДА ФИОФизЛиц.Фамилия ЕСТЬ NULL 
	|				ТОГДА Призывники.Физлицо.Наименование
	|			ИНАЧЕ ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество
	|		КОНЕЦ) КАК ФиоПолное,
	|	Призывники.ОтношениеКВоинскомуУчету,
	|	Призывники.Годность,
	|	Призывники.Звание.* КАК Звание,
	|	Призывники.Военкомат.* КАК Военкомат,
	|	Призывники.ЗабронированОрганизацией.* КАК ЗабронированОрганизацией,
	|	Призывники.НаличиеМобпредписания,
	|	Призывники.ВУС,
	|	Призывники.ГруппаУчета КАК ГруппаУчета,
	|	Призывники.КатегорияУчета КАК КатегорияУчета,
	|	Призывники.НомерКомандыПартии КАК НомерКомандыПартии,
	|	Призывники.Состав.* КАК Состав,
	|	Призывники.Организация.* КАК Организация,
	|	Призывники.Событие,
	|	Призывники.ДатаСобытия,
	|	Призывники.Физлицо.ДатаРождения КАК ДатаРождения,
	|	СемейноеПоложениеФизЛиц.СемейноеПоложение КАК СемейноеПоложение,
	|	(ПОДСТРОКА(ФактическийАдрес.Представление, 1, 250)) КАК ФактическийАдрес,
	|	(ПОДСТРОКА(АдресПрописки.Представление, 1, 250)) КАК АдресПрописки,
	|	ДомашнийТелефон.Представление КАК ДомашнийТелефон,
	|	(ВЫБОР
	|			КОГДА Призывники.УровеньОбразования = 4
	|				ТОГДА &ВысшееОбразование
	|			КОГДА Призывники.УровеньОбразования = 0
	|				ТОГДА ""Другое образование""
	|			ИНАЧЕ ФизическиеЛицаОбразование.ВидОбразования
	|		КОНЕЦ) КАК Образование
	|	//СВОЙСТВА
	|}
	|
	|{ИТОГИ ПО
	|	Призывники.Военкомат.* КАК Военкомат,
	|	Призывники.Организация.* КАК Организация,
	|	Призывники.Событие
	|	//СВОЙСТВА
	|}";	
	
	СтруктураПредставлениеПолей.Вставить("ФизЛицо",					"Сотрудник");
	СтруктураПредставлениеПолей.Вставить("ФиоПолное",				"Сотрудник");
	СтруктураПредставлениеПолей.Вставить("ДатаСобытия",				"Дата");
	СтруктураПредставлениеПолей.Вставить("ДатаРождения",			"Дата рождения");
	СтруктураПредставлениеПолей.Вставить("ОтношениеКВоинскомуУчету","Отношение к воинскому учету");
	СтруктураПредставлениеПолей.Вставить("ЗабронированОрганизацией","Забронирован организацией");
	СтруктураПредставлениеПолей.Вставить("НаличиеМобпредписания",	"Мобпредписание");
	СтруктураПредставлениеПолей.Вставить("СемейноеПоложение",		"Семейное положение");
	СтруктураПредставлениеПолей.Вставить("ФактическийАдрес",		"Адрес проживания");
	СтруктураПредставлениеПолей.Вставить("АдресПрописки",			"Адрес прописки");
	СтруктураПредставлениеПолей.Вставить("ДомашнийТелефон",			"Домашний телефон");
	СтруктураПредставлениеПолей.Вставить("ГруппаУчета",				"Группа учета");
	СтруктураПредставлениеПолей.Вставить("КатегорияУчета",			"Категория учета");
	СтруктураПредставлениеПолей.Вставить("НомерКомандыПартии",		"Номер команды, партии");
							  
	Если ОбщийОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Свойства и категории, назначаемые пользователем:
		ТаблицаПолей = Новый ТаблицаЗначений;
		ТаблицаПолей.Колонки.Добавить("ПутьКДанным");  // описание поля запроса поля, для которого добавляются свойства и категории. Используется в условии соединения с регистром сведений, хранящим значения свойств или категорий
		ТаблицаПолей.Колонки.Добавить("Представление");// представление поля, для которого добавляются свойства и категории. 
		ТаблицаПолей.Колонки.Добавить("Назначение");   // назначение свойств/категорий объектов для данного поля
		ТаблицаПолей.Колонки.Добавить("ТипЗначения");  // тип значения поля, для которого добавляются свойства и категории. Используется, если не установлено назначение
		ТаблицаПолей.Колонки.Добавить("НетКатегорий"); // признак НЕиспользования категорий для объекта
		
		НоваяСтрока = ТаблицаПолей.Добавить();
		НоваяСтрока.ПутьКДанным = "Призывники.Физлицо";
		НоваяСтрока.Представление = "Физическое лицо";
		НоваяСтрока.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица;
		
		НоваяСтрока = ТаблицаПолей.Добавить();
		НоваяСтрока.ПутьКДанным = "Призывники.Организация";
		НоваяСтрока.Представление = "Организация";
		НоваяСтрока.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Организации;
		
		// Добавим строки запроса, необходимые для использования свойств и категорий
		ТекстПоляКатегорий = "";
		ТекстПоляСвойств = "";
		
		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, 
		ОбщийОтчет.мСоответствиеНазначений, ПостроительОтчета.Параметры
		,, ТекстПоляКатегорий, ТекстПоляСвойств,,,,,,ОбщийОтчет.мСтруктураДляОтбораПоКатегориям);		
		
	КонецЕсли;
	
		ПостроительОтчета.Текст = ТекстЗапроса;
		
	Если ОбщийОтчет.ИспользоватьСвойстваИКатегории Тогда			
		УправлениеОтчетами.УстановитьТипыЗначенийСвойствИКатегорийДляОтбора(ПостроительОтчета, ТекстПоляКатегорий, ТекстПоляСвойств, ОбщийОтчет.мСоответствиеНазначений, СтруктураПредставлениеПолей);
	КонецЕсли;
	
	//представление полей запроса
		
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
	// формат полей
	ОбщийОтчет.СтруктураФорматаПолей.Вставить("ДатаСобытия", "ДЛФ=DD");
	ОбщийОтчет.СтруктураФорматаПолей.Вставить("ДатаРождения", "ДЛФ=DD");
	ОбщийОтчет.СтруктураФорматаПолей.Вставить("НаличиеМобпредписания", "БЛ=Отсутствует; БИ=Присутствует");
	
	// группировки по умолчанию
	ПостроительОтчета.ИзмеренияСтроки.Добавить("Организация");
	ПостроительОтчета.ИзмеренияСтроки.Добавить("Событие");
	
	// отборы по умолчанию
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Организация");
	УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	
	// поля по умолчанию
	ПостроительОтчета.ВыбранныеПоля.Очистить();
	ПостроительОтчета.ВыбранныеПоля.Добавить("ДатаСобытия");
	ПостроительОтчета.ВыбранныеПоля.Добавить("ФиоПолное");
	ПостроительОтчета.ВыбранныеПоля.Добавить("Звание");
	ПостроительОтчета.ВыбранныеПоля.Добавить("ВУС");
	ПостроительОтчета.ВыбранныеПоля.Добавить("ДатаРождения");
	ПостроительОтчета.ВыбранныеПоля.Добавить("Образование");
	
	// настройки отчета
	ОбщийОтчет.РаскрашиватьИзмерения = Истина;
	ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Ложь;
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	ОбщийОтчет.мРежимВводаПериода = 0; // произвольный период
	ОбщийОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
	
	УправлениеОтчетами.УпорядочитьПоляПостроителяОтчета(ПостроительОтчета);

КонецПроцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

#КонецЕсли