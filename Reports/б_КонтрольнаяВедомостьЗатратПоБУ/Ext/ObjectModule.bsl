Перем мСписокИсточниковФинансирования Экспорт;
Перем мСписокСтруктурныхЕдиниц Экспорт;
Перем мСписокПодразделений Экспорт;
Перем мДеревоСтруктурныхЕдиниц Экспорт;
Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;
Перем ПромежуточныеДанные Экспорт;
Перем РежимРасшифровки Экспорт;
Перем ВедётсяУчетПоПодразделениям Экспорт;

#Если Клиент Тогда
	
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	СтандартныеОтчеты.ЗаполнитьДанныеОтчета(ЭтотОбъект);
	
КонецПроцедуры

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	Результат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ВыводЗаголовкаОтчета(ЭтотОбъект, Результат);
	ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных);
	//КомпоновщикНастроек.Восстановить();
	//НастройкаКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	
	СтандартныеОтчеты.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных);
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	// Выполним дополнительную обработку Результата отчета
	ОбработкаРезультатаОтчета(Результат);
	
	ВыводПодписиОтчета(Результат);
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(Результат, ПолучитьТекстЗаголовка(), Строка(глТекущийПользователь));
	
	Возврат;
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных) Экспорт
	мВидыСубконто = Новый Массив;
	мВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);
	
	Если ЗначениеЗаполнено(НачалоПериода) Тогда
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоДня(НачалоПериода));
	Иначе
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", Дата(1, 1, 1));
	КонецЕсли;
	Если ЗначениеЗаполнено(КонецПериода) Тогда
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(КонецПериода));
	Иначе
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", Дата(3999, 11, 1));
	КонецЕсли;
	
	Если мДеревоСтруктурныхЕдиниц.Колонки.Количество() = 0 Тогда 
		
		СписокСтруктурныхЕдиниц = Новый СписокЗначений;
		СписокСтруктурныхЕдиниц.ЗагрузитьЗначения(мСписокСтруктурныхЕдиниц.ВыгрузитьЗначения());
		
		Для Каждого СтрПодразделение Из мСписокПодразделений Цикл 
			СписокСтруктурныхЕдиниц.Добавить(СтрПодразделение.Значение);
		КонецЦикла;		
				
		мДеревоСтруктурныхЕдиниц = СтандартныеОтчеты.СформироватьДеревоСЕ(, СписокСтруктурныхЕдиниц);
		
	КонецЕсли;
	
	//ВнешниеНаборыДанных = Новый Структура;
	//ВнешниеНаборыДанных.Вставить("ТаблицаДанных", ВыборкаДанных);
	
	//
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "мВидыСубконто", мВидыСубконто);
	//ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ТипСчета", ФормируемыйБюджет.ИсточникФинансирования.ТипСчета);
	
	ТиповыеОтчеты.ДобавитьОтборПоОрганизациямИПодразделениям(КомпоновщикНастроек, мДеревоСтруктурныхЕдиниц);
	
	
	
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	СтандартныеОтчеты.ИнициализацияОтчета(ЭтотОбъект);
	
КонецПроцедуры

Процедура ВыводПодписиОтчета(Результат)
	
	
	Макет = ПолучитьОбщийМакет("ПодписиОтчета");
	ОбластьПодписи        = Макет.ПолучитьОбласть("Подписи");
	
	Если ЭтотОбъект <> Неопределено Тогда
		Организации                       = ЭтотОбъект.мСписокСтруктурныхЕдиниц;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организации) Тогда
		НомСтр = 0;
		Для Каждого Организация Из Организации Цикл 
			НомСтр= НомСтр + 1;
			Руководители = ОбщегоНазначения.ОтветственныеЛицаОрганизаций(Организация.Значение,КонецПериода);
		КонецЦикла;                                   		
		
		Если НомСтр >=14 Тогда
			Руководители = ОбщегоНазначения.ОтветственныеЛицаОрганизаций(Организации[0].Значение,КонецПериода);
		КонецЕсли;
		
	КонецЕсли;
	
	Руководитель = Руководители.Руководитель;
	РуководительДолжность = Руководители.РуководительДолжность;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	БухгалтерДолжность    = Руководители.ГлавныйБухгалтерДолжность;
	
	ОбластьПодписи.Параметры.Руководитель				= Руководитель;
	ОбластьПодписи.Параметры.РуководительДолжность		= РуководительДолжность;
	ОбластьПодписи.Параметры.ГлавныйБухгалтер 			= Бухгалтер;
	ОбластьПодписи.Параметры.ГлавныйБухгалтерДолжность 	= БухгалтерДолжность;
	
	Результат.Вывести(ОбластьПодписи);
	
КонецПроцедуры

Процедура ВыводЗаголовкаОтчета(ОтчетОбъект, Результат)
	
	СтандартныеОтчеты.ВыводЗаголовкаСпециализированногоОтчета(ОтчетОбъект, Результат);
			
КонецПроцедуры

Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина) Экспорт 
		
	ЗаголовокОтчета = "Контрольная ведомость затрат по БУ: "+СокрЛП(ФормируемыйБюджет.Наименование) + Формат(КонецПериода,"ДФ = ММММ.yyyy");

	Возврат ?(ОрганизацияВНачале, ЗаголовокОтчета, ЗаголовокОтчета + " " + СтандартныеОтчеты.ПолучитьТекстОрганизация(ЭтотОбъект));
		
КонецФункции

Функция ПолучитьВыборку()
	
	мСубконтоДоходы = Новый Массив;
	мСубконтоДоходы.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Доходы);
	
	мСубконтоТипыОпераций = Новый Массив;
	мСубконтоТипыОпераций.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ТипыОпераций);
	
	мСубконтоСтатьиЗатрат = Новый Массив;
	мСубконтоСтатьиЗатрат.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат);
	
	мСубконтоОС = Новый Массив;
	мСубконтоОС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ОсновныеСредства);
	
	мСубконтоНМА = Новый Массив;
	мСубконтоНМА.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.НематериальныеАктивы);
	
	мСписокСчетовПоставщиков = Новый Массив;
	мСписокСчетовПоставщиков.Добавить(ПланыСчетов.Типовой.КраткосрочнаяКредиторскаяЗадолженность);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("мСписокСчетовПоставщиков", мСписокСчетовПоставщиков);
	Запрос.УстановитьПараметр("мСубконтоОС", мСубконтоОС);
	Запрос.УстановитьПараметр("мСубконтоНМА", мСубконтоНМА);
	Запрос.УстановитьПараметр("мСубконтоСтатьиЗатрат", мСубконтоСтатьиЗатрат);
	Запрос.УстановитьПараметр("мСубконтоДоходы", мСубконтоДоходы);
	Запрос.УстановитьПараметр("мСубконтоТипыОпераций", мСубконтоТипыОпераций);
	Запрос.УстановитьПараметр("ФормируемыйБюджет", ФормируемыйБюджет);
	Запрос.УстановитьПараметр("ЕдиницаИзмерения", ЕдиницаИзмерения);
	Запрос.УстановитьПараметр("Статус", перечисления.СостоянияОбъектов.Утвержден);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("НачалоГода", НачалоДня(НачалоГода(НачалоПериода)));
	Запрос.УстановитьПараметр("КонецГода", КонецДня(КонецГода(КонецПериода)));
	
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	СтатьиБюджета.Ссылка КАК СтатьяБюджета,
	|	ОборотыБУ.Организация КАК Организация,
	|	ЕстьNull(ОборотыБУ.Регистратор,"""") КАК ДокументДвижения,
	|	ЕстьNull(ОборотыБУ.ПериодМесяц,"""") КАК Месяц,
	|	ЕстьNull(ОборотыБУ.ПериодКвартал,"""") КАК Квартал,
	|	ВЫБОР
	|		КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|			ТОГДА ЕстьNull(ОборотыБУ.Сумма,0) / 1000000
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|					ТОГДА ЕстьNull(ОборотыБУ.Сумма,0) / 1000
	|				ИНАЧЕ ЕстьNull(ОборотыБУ.Сумма,0)
	|			КОНЕЦ
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|			ТОГДА ЕстьNull(ОборотыБУ.СуммаПлан,0) / 1000000
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|					ТОГДА ЕстьNull(ОборотыБУ.СуммаПлан,0) / 1000
	|				ИНАЧЕ ЕстьNull(ОборотыБУ.СуммаПлан,0)
	|			КОНЕЦ
	|	КОНЕЦ КАК СуммаПлан,
	|	ВЫБОР
	|		КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
	|			ТОГДА ЕстьNull(ОборотыБУ.СуммаГодовойПлан,0) / 1000000
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
	|					ТОГДА ЕстьNull(ОборотыБУ.СуммаГодовойПлан,0) / 1000
	|				ИНАЧЕ ЕстьNull(ОборотыБУ.СуммаГодовойПлан,0)
	|			КОНЕЦ
	|	КОНЕЦ КАК СуммаГодовойПлан
	|	ИЗ
	|	Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
	|	Левое Соединение
	|		(ВЫБРАТЬ
	|		б_СоответствияСтатейБюджетаСчетамБУ.СтатьяБюджета КАК СтатьяБюджета,
	|		ЕстьNull(ТиповойОбороты.Организация,Значение(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|		ВЫБОР
	|			КОГДА б_СоответствияСтатейБюджетаСчетамБУ.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|				ТОГДА ЕСТЬNULL(ТиповойОбороты.СуммаОборотДт, 0) * б_СоответствияСтатейБюджетаСчетамБУ.ПризнакСуммы
	|			ИНАЧЕ ЕСТЬNULL(ТиповойОбороты.СуммаОборотКт, 0) * б_СоответствияСтатейБюджетаСчетамБУ.ПризнакСуммы
	|		КОНЕЦ КАК Сумма,
	|		0 КАК СуммаПлан,
	|		0 КАК СуммаГодовойПлан,
	|		ТиповойОбороты.Регистратор,
	|		ТиповойОбороты.ПериодМесяц КАК ПериодМесяц,
	|		ТиповойОбороты.ПериодКвартал КАК ПериодКвартал
	|	ИЗ
	|		РегистрСведений.б_СоответствияСтатейБюджетаСчетамБУ КАК б_СоответствияСтатейБюджетаСчетамБУ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Обороты(
	|					&НачалоПериода,
	|					&КонецПериода,
	|					Авто,
	|					Счет В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							СоответствияСтатейБюджетаСчетамБУ.Счет
	|						ИЗ
	|							РегистрСведений.б_СоответствияСтатейБюджетаСчетамБУ КАК СоответствияСтатейБюджетаСчетамБУ),
	|					,
	|					,
	|					,
	|					) КАК ТиповойОбороты
	|			ПО (ТиповойОбороты.Счет = б_СоответствияСтатейБюджетаСчетамБУ.Счет)
    |	
	|	Объединить Все
	|		ВЫБРАТЬ
	|			б_СоответствияСтатейБюджетаДоходамБУ.СтатьяБюджета,
	|			ЕстьNull(ТиповойОбороты.Организация,Значение(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|			ВЫБОР
	|				КОГДА б_СоответствияСтатейБюджетаДоходамБУ.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|					ТОГДА ЕСТЬNULL(ТиповойОбороты.СуммаОборотДт, 0) * б_СоответствияСтатейБюджетаДоходамБУ.ПризнакСуммы
	|				ИНАЧЕ ЕСТЬNULL(ТиповойОбороты.СуммаОборотКт, 0) * б_СоответствияСтатейБюджетаДоходамБУ.ПризнакСуммы
	|			КОНЕЦ КАК Сумма,
	|			0 КАК СуммаПлан,
	|			0 КАК СуммаГодовойПлан,
	|			ТиповойОбороты.Регистратор,
	|			ТиповойОбороты.ПериодМесяц КАК Месяц,
	|			ТиповойОбороты.ПериодКвартал КАК Квартал
	|		ИЗ
	|			РегистрСведений.б_СоответствияСтатейБюджетаДоходамБУ КАК б_СоответствияСтатейБюджетаДоходамБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Обороты(
	|						&НачалоПериода,
	|						&КонецПериода,
	|						Авто,
	|						Счет В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								СоответствияСтатейБюджетаДоходамБУ.Счет
	|							ИЗ
	|								РегистрСведений.б_СоответствияСтатейБюджетаДоходамБУ КАК СоответствияСтатейБюджетаДоходамБУ),
	|						&мСубконтоДоходы,
	|						,
	|						,
	|						) КАК ТиповойОбороты
	|				ПО (ТиповойОбороты.Счет = б_СоответствияСтатейБюджетаДоходамБУ.Счет)
	|					И (ТиповойОбороты.Субконто1 = б_СоответствияСтатейБюджетаДоходамБУ.Доход)
    |	
	|	Объединить Все
	|		ВЫБРАТЬ
	|			б_СоответствияСтатейБюджетаТипамОперацийБУ.СтатьяБюджета,
	|			ЕстьNull(ТиповойОбороты.Организация,Значение(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|		ВЫБОР
	|				КОГДА б_СоответствияСтатейБюджетаТипамОперацийБУ.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|					ТОГДА ЕСТЬNULL(ТиповойОбороты.СуммаОборотДт, 0) * б_СоответствияСтатейБюджетаТипамОперацийБУ.ПризнакСуммы
	|				ИНАЧЕ ЕСТЬNULL(ТиповойОбороты.СуммаОборотКт, 0) * б_СоответствияСтатейБюджетаТипамОперацийБУ.ПризнакСуммы
	|			КОНЕЦ КАК Сумма,
	|			0 КАК СуммаПлан,
	|			0 КАК СуммаГодовойПлан,
	|			ТиповойОбороты.Регистратор,
	|			ТиповойОбороты.ПериодМесяц КАК Месяц,
	|			ТиповойОбороты.ПериодКвартал КАК Квартал
	|		ИЗ
	|			РегистрСведений.б_СоответствияСтатейБюджетаТипамОперацийБУ КАК б_СоответствияСтатейБюджетаТипамОперацийБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Обороты(
	|						&НачалоПериода,
	|						&КонецПериода,
	|						Авто,
	|						Счет В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								СоответствияСтатейБюджетаТипамОперацийБУ.Счет
	|							ИЗ
	|								РегистрСведений.б_СоответствияСтатейБюджетаТипамОперацийБУ КАК СоответствияСтатейБюджетаТипамОперацийБУ),
	|						&мСубконтоТипыОпераций,
	|						,
	|						,
	|						) КАК ТиповойОбороты
	|				ПО (ТиповойОбороты.Счет = б_СоответствияСтатейБюджетаТипамОперацийБУ.Счет)
	|					И (ТиповойОбороты.Субконто1 = б_СоответствияСтатейБюджетаТипамОперацийБУ.ТипОперации)
    |	
	|	Объединить Все
	|		ВЫБРАТЬ
	|			б_СоответствияСтатейБюджетаСтатьямЗатратБУ.СтатьяБюджета,
	|			ЕстьNull(ТиповойОбороты.Организация,Значение(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|		ВЫБОР
	|				КОГДА б_СоответствияСтатейБюджетаСтатьямЗатратБУ.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|					ТОГДА ЕСТЬNULL(ТиповойОбороты.СуммаОборотДт, 0) * б_СоответствияСтатейБюджетаСтатьямЗатратБУ.ПризнакСуммы
	|				ИНАЧЕ ЕСТЬNULL(ТиповойОбороты.СуммаОборотКт, 0) * б_СоответствияСтатейБюджетаСтатьямЗатратБУ.ПризнакСуммы
	|			КОНЕЦ КАК Сумма,
	|			0 КАК СуммаПлан,
	|			0 КАК СуммаГодовойПлан,
	|			ТиповойОбороты.Регистратор,
	|			ТиповойОбороты.ПериодМесяц КАК Месяц,
	|			ТиповойОбороты.ПериодКвартал КАК Квартал
	|		ИЗ
	|			РегистрСведений.б_СоответствияСтатейБюджетаСтатьямЗатратБУ КАК б_СоответствияСтатейБюджетаСтатьямЗатратБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Обороты(
	|						&НачалоПериода,
	|						&КонецПериода,
	|						Авто,
	|						Счет В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								СоответствияСтатейБюджетаСтатьямЗатратБУ.Счет
	|							ИЗ
	|								РегистрСведений.б_СоответствияСтатейБюджетаСтатьямЗатратБУ КАК СоответствияСтатейБюджетаСтатьямЗатратБУ),
	|						&мСубконтоСтатьиЗатрат,
	|						,
	|						,
	|						) КАК ТиповойОбороты
	|				ПО (ТиповойОбороты.Счет = б_СоответствияСтатейБюджетаСтатьямЗатратБУ.Счет)
	|					И (ТиповойОбороты.Субконто1 = б_СоответствияСтатейБюджетаСтатьямЗатратБУ.СтатьяЗатрат)
    |	
	|	Объединить Все
	|		ВЫБРАТЬ
	|			б_СоответствияСтатейБюджетаГруппамОСБУ.СтатьяБюджета,
	|			ЕстьNull(ТиповойОбороты.Организация,Значение(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|			ЕСТЬNULL(ТиповойОбороты.СуммаОборотДт, 0) * б_СоответствияСтатейБюджетаГруппамОСБУ.ПризнакСуммы КАК Сумма,
	|			0 КАК СуммаПлан,
	|			0 КАК СуммаГодовойПлан,
	|			ТиповойОбороты.Регистратор,
	|			ТиповойОбороты.ПериодМесяц КАК Месяц,
	|			ТиповойОбороты.ПериодКвартал КАК Квартал
	|		ИЗ
	|			РегистрСведений.б_СоответствияСтатейБюджетаГруппамОСБУ КАК б_СоответствияСтатейБюджетаГруппамОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Обороты(
	|						&НачалоПериода,
	|						&КонецПериода,
	|						Авто,
	|						Счет В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								СоответствияСтатейБюджетаГруппамОСБУ.Счет
	|							ИЗ
	|								РегистрСведений.б_СоответствияСтатейБюджетаГруппамОСБУ КАК СоответствияСтатейБюджетаГруппамОСБУ),
	|						&мСубконтоОС,
	|						,
	|						КорСчет в ИЕРАРХИИ (&мСписокСчетовПоставщиков),
	|						) КАК ТиповойОбороты
	|				ПО (ТиповойОбороты.Счет = б_СоответствияСтатейБюджетаГруппамОСБУ.Счет)
	|					И (ТиповойОбороты.Субконто1.ГруппаОС = б_СоответствияСтатейБюджетаГруппамОСБУ.ГруппаОС)
    |	
	|	Объединить Все
	|		ВЫБРАТЬ
	|			б_СоответствияСтатейБюджетаВидамНМАБУ.СтатьяБюджета,
	|			ЕстьNull(ТиповойОбороты.Организация,Значение(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|			ЕСТЬNULL(ТиповойОбороты.СуммаОборотДт, 0) * б_СоответствияСтатейБюджетаВидамНМАБУ.ПризнакСуммы КАК Сумма,
	|			0 КАК СуммаПлан,
	|			0 КАК СуммаГодовойПлан,
	|			ТиповойОбороты.Регистратор,
	|			ТиповойОбороты.ПериодМесяц КАК Месяц,
	|			ТиповойОбороты.ПериодКвартал КАК Квартал
	|		ИЗ
	|			РегистрСведений.б_СоответствияСтатейБюджетаВидамНМАБУ КАК б_СоответствияСтатейБюджетаВидамНМАБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Обороты(
	|						&НачалоПериода,
	|						&КонецПериода,
	|						Авто,
	|						Счет В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								СоответствияСтатейБюджетаВидамНМАБУ.Счет
	|							ИЗ
	|								РегистрСведений.б_СоответствияСтатейБюджетаВидамНМАБУ КАК СоответствияСтатейБюджетаВидамНМАБУ),
	|						&мСубконтоНМА,
	|						,
	|						КорСчет в ИЕРАРХИИ (&мСписокСчетовПоставщиков),
	|						) КАК ТиповойОбороты
	|				ПО (ТиповойОбороты.Счет = б_СоответствияСтатейБюджетаВидамНМАБУ.Счет)
	|					И (ТиповойОбороты.Субконто1.ВидНМА = б_СоответствияСтатейБюджетаВидамНМАБУ.ВидНМА)
	|	
	|	Объединить Все
	|	ВЫБРАТЬ
	|		б_БюджетОбороты.СтатьяБюджета КАК СтатьяБюджета,
	|		б_БюджетОбороты.Организация КАК Организация,
	|		0 КАК Сумма,
	|		б_БюджетОбороты.СуммаОборот КАК СуммаПлан,
	|		0 КАК СуммаГодовойПлан,
	|		б_БюджетОбороты.Регистратор,
	|		б_БюджетОбороты.ПериодМесяц КАК Месяц,
	|		б_БюджетОбороты.ПериодКвартал КАК Квартал
	|	ИЗ
	|		РегистрНакопления.б_Бюджет.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Авто,
	|				Бюджет = &ФормируемыйБюджет
	|					И Статус = &Статус) КАК б_БюджетОбороты
    |	
	|	Объединить Все
	|		ВЫБРАТЬ
	|		б_БюджетОборотыГод.СтатьяБюджета КАК СтатьяБюджета,
	|		б_БюджетОборотыГод.Организация КАК Организация,
	|		0 КАК Сумма,
	|		0 КАК СуммаПлан,
	|		б_БюджетОборотыГод.СуммаОборот КАК СуммаГодовойПлан,
	|		б_БюджетОборотыГод.Регистратор,
	|		б_БюджетОборотыГод.ПериодМесяц КАК Месяц,
	|		б_БюджетОборотыГод.ПериодКвартал КАК Квартал
	|	ИЗ
	|		РегистрНакопления.б_Бюджет.Обороты(
	|				&НачалоГода,
	|				&КонецГода,
	|				Авто,
	|				Бюджет = &ФормируемыйБюджет
	|					И Статус = &Статус) КАК б_БюджетОборотыГод
    |	
	|	) КАК ОборотыБУ
	|	ПО (ОборотыБУ.СтатьяБюджета = СтатьиБюджета.ссылка)
	|	ГДЕ
	|	СтатьиБюджета.Владелец = &ФормируемыйБюджет
	|	И НЕ СтатьиБюджета.ЭтоГруппа
	|	И СтатьиБюджета.ссылка В ИЕРАРХИИ
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				СтатьиРасхода.СтатьяБюджета
	|			 ИЗ
	|			 	Регистрсведений.б_РасходныеСтатьиБюджета КАК СтатьиРасхода
	|			 ГДЕ
	|			 	СтатьиРасхода.ФормируемыйБюджет = &ФормируемыйБюджет)
	|";
	
	Возврат Запрос.Выполнить();
КонецФункции

Процедура ОбработкаРезультатаОтчета(Результат)
	
	ТиповыеОтчеты.ОбработкаРезультатаОтчета(ЭтотОбъект, Результат);

КонецПроцедуры

// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	//ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	ЗаполнитьНачальныеНастройки();
	
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт
	
	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	
	СтруктураНастроек.Вставить("мСписокПодразделений", мСписокПодразделений);
	СтруктураНастроек.Вставить("мСписокСтруктурныхЕдиниц", мСписокСтруктурныхЕдиниц);
	СтруктураНастроек.Вставить("мДеревоСтруктурныхЕдиниц", мДеревоСтруктурныхЕдиниц);
	
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);

КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры


Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли
мСписокИсточниковФинансирования = Новый СписокЗначений;
мСписокСтруктурныхЕдиниц = Новый СписокЗначений;
мСписокПодразделений = Новый СписокЗначений;
мДеревоСтруктурныхЕдиниц = Новый ДеревоЗначений;

ВедётсяУчетПоПодразделениям = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений();

РежимРасшифровки = Ложь;

