#Если Клиент Тогда

//Процедура СформироватьОтчет()
//
Процедура СформироватьОтчет() Экспорт

	Если Документ.Пустая() Тогда
		Предупреждение("Запишите и проведите документ, по которому Вы формируете отчет");
		Возврат;
	КонецЕсли;

	ТабДок = Новый ТабличныйДокумент;
	Построитель = Новый ПостроительОтчета;
	Макет = ПолучитьМакет("Макет");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ГлавныйЗаголовок");
	ОбластьЗаголовок.Параметры.Документ = Строка(Документ);
	ТабДок.Вывести(ОбластьЗаголовок);

	ТонкаяСплошнаяЛиния = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	ТолстаяСплошнаяЛиния = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 2);
	
	НомерРегистра = -1;
	КоличествоРегистров = Документ.Метаданные().Движения.Количество();
	
	Для Каждого СвойстваОбъекта Из Документ.Метаданные().Движения Цикл
		
		Если НЕ ПравоДоступа("Чтение", СвойстваОбъекта) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ПравоДоступа("Просмотр", СвойстваОбъекта) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерРегистра = НомерРегистра + 1;
		Построитель = Новый ПостроительОтчета;
		ТекстРесурсы = "";
		ТекстРеквизиты = "";
		ТекстИзмерения = "";
		СтруктураПредставлениеПолей = Новый Структура;
		Состояние("Обрабатывается регистр ("+Цел(НомерРегистра/КоличествоРегистров*100)+"%): "+СвойстваОбъекта.Синоним);
		Если (Метаданные.РегистрыНакопления.Индекс(СвойстваОбъекта)>=0) ИЛИ (Метаданные.РегистрыСведений.Индекс(СвойстваОбъекта)>=0) Тогда
			ВидРегистра = ?(Метаданные.РегистрыНакопления.Индекс(СвойстваОбъекта)>=0, "Накопления", "Сведений");
			Если ВидРегистра+"."+СвойстваОбъекта.Имя = "Сведений.СписанныеТовары" Тогда
				Продолжить;
			КонецЕсли;
			//это регистр накопления или сведений
			СтрокаПриходРасход = "";
			Если ВидРегистра = "Накопления" Тогда
				Если СвойстваОбъекта.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
					//СтрокаПриходРасход = СтрокаПриходРасход + 
					//", ВЫБОР Когда ВидДвижения = &Приход Тогда ""+"" Иначе ""-КОНЕЦ КАК ВидДвижения""";
					//Построитель.Параметры.Вставить("Приход", ВидДвиженияНакопления.Приход;
					СтрокаПриходРасход = СтрокаПриходРасход + ", ВидДвижения";
					СтруктураПредставлениеПолей.Вставить("ВидДвижения", "Вид движения");
				КонецЕсли;
			КонецЕсли;
			Для Каждого Ресурс Из СвойстваОбъекта.Ресурсы Цикл
				Текстресурсы = Текстресурсы + ", "+ Ресурс.Имя;
				СтруктураПредставлениеПолей.Вставить(Ресурс.Имя, Ресурс.Синоним);
			КонецЦикла;
			Для Каждого Измерение Из СвойстваОбъекта.Измерения Цикл
				ТекстИзмерения = ТекстИзмерения + ", "+ Измерение.Имя;
				СтруктураПредставлениеПолей.Вставить(Измерение.Имя, Измерение.Синоним);
			КонецЦикла;
			Для Каждого Реквизит Из СвойстваОбъекта.Реквизиты Цикл
				ТекстРеквизиты = ТекстРеквизиты + ", "+ Реквизит.Имя;
				СтруктураПредставлениеПолей.Вставить(Реквизит.Имя, Реквизит.Синоним);
			КонецЦикла;
			Построитель.Текст = "ВЫБРАТЬ "+Сред(СтрокаПриходРасход + ТекстИзмерения + ТекстРесурсы + ТекстРеквизиты, 2) + "
			|{ВЫБРАТЬ "+Сред(СтрокаПриходРасход + ТекстИзмерения + ТекстРесурсы + ТекстРеквизиты, 2) + "}
			|ИЗ Регистр"+ВидРегистра+"."+СвойстваОбъекта.Имя +" КАК Рег
			|ГДЕ Рег.Регистратор = &ДокументОтчета";
			Построитель.Параметры.Вставить("ДокументОтчета", Документ);
			УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, Построитель);
			МакетДетальныхЗаписей = Построитель.Макет.ПолучитьОбласть("Детали");
			МакетШапки = Построитель.Макет.ПолучитьОбласть("ШапкаТаблицы");
			
			КолСтрокВидДвижения = 1;
			НомерКолонкиВидДвижения = 0;
			СобратьПоляДетальнойЗаписи(СтрокаПриходРасход, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиВидДвижения, КолСтрокВидДвижения);
			
			КолСтрокИзмерения = 1;
			НомерКолонкиИзмерения = 0;
			СобратьПоляДетальнойЗаписи(ТекстИзмерения, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиИзмерения, КолСтрокИзмерения, "Измерения");
			
			КолСтрокРесурсы = 1;
			НомерКолонкиРесурсы = 0;
			СобратьПоляДетальнойЗаписи(ТекстРесурсы, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиРесурсы, КолСтрокРесурсы, "Ресурсы");
			
			КолСтрокРеквизиты = 1;
			НомерКолонкиРеквизиты = 0;
			СобратьПоляДетальнойЗаписи(ТекстРеквизиты, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиРеквизиты, КолСтрокРеквизиты, "Реквизиты");
			
			ВысотаМакета = Макс(КолСтрокИзмерения, КолСтрокРесурсы,КолСтрокРеквизиты);
			
			МакетДетальныхЗаписей.Область("Детали").Имя = "";
			МакетДетальныхЗаписей.Область(1, , ВысотаМакета,).Имя = "Детали";

			МакетДетальныхЗаписей.Область(1, , ВысотаМакета,).ШиринаКолонки = 20;
			МакетДетальныхЗаписей.Область(1,1, ВысотаМакета,1).ШиринаКолонки = 2;
			
			МакетШапки.Область("ШапкаТаблицы").Имя = "";
			МакетШапки.Область(1, , ВысотаМакета + 1,).Имя = "ШапкаТаблицы";
			МакетШапки.Область(1, , ВысотаМакета + 1,).ШиринаКолонки = 20;
			МакетШапки.Область(1, 1,ВысотаМакета + 1, 1).ШиринаКолонки = 2;
			
			НомерКолонки = 2;
			Если НомерКолонкиВидДвижения>0 Тогда
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 10;
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).ШиринаКолонки = 10;
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
				НомерКолонки = НомерКолонки + 1;
			КонецЕсли;
			Если НомерКолонкиИзмерения>0 Тогда
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 40;
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).ШиринаКолонки = 40;
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
				НомерКолонки = НомерКолонки + 1;
			КонецЕсли;
			
			Если НомерКолонкиРесурсы>0 Тогда
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 30;
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 30;
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ВыделятьОтрицательные = Истина;
				НомерКолонки = НомерКолонки + 1;
			КонецЕсли;
			
			Если НомерКолонкиРеквизиты>0 Тогда
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 20;
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).ШиринаКолонки = 20;
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
				НомерКолонки = НомерКолонки + 1;
			КонецЕсли;
			ОбластьДетальныхЗаписей = МакетДетальныхЗаписей.ПолучитьОбласть("Детали");
			ОбластьШапки = МакетШапки.ПолучитьОбласть("ШапкаТаблицы");
			Построитель.МакетДетальныхЗаписей = ОбластьДетальныхЗаписей;
			Построитель.МакетШапкиТаблицы = ОбластьШапки;
		ИначеЕсли Метаданные.РегистрыБухгалтерии.Индекс(СвойстваОбъекта)>=0 Тогда

			ВидРегистра = "Бухгалтерии";
		
			ТекстресурсыДт = "";
			ТекстресурсыКт = "";
			
			Для Каждого Ресурс из СвойстваОбъекта.Ресурсы Цикл
				Если Ресурс.Балансовый Тогда
					Текстресурсы = Текстресурсы + ", "+ Ресурс.Имя;
					СтруктураПредставлениеПолей.Вставить(Ресурс.Имя, Ресурс.Синоним);
				Иначе
					ТекстресурсыДт = ТекстресурсыДт + ", "+ Ресурс.Имя +"Дт";
					СтруктураПредставлениеПолей.Вставить(Ресурс.Имя + "Дт", Ресурс.Синоним + " Дт");
					ТекстресурсыКт = ТекстресурсыКт + ", "+ Ресурс.Имя +"Кт";
					СтруктураПредставлениеПолей.Вставить(Ресурс.Имя + "Кт", Ресурс.Синоним + " Кт");
				КонецЕсли;
			КонецЦикла;

			ТекстСубконтоДт = "";
			ТекстВидСубконтоДт = "";

			Для Инд = 1 По СвойстваОбъекта.ПланСчетов.МаксКоличествоСубконто Цикл
				//ТекстВидСубконтоДт = ТекстВидСубконтоДт + ", ВидСубконтоДт" +Инд;
				ТекстСубконтоДт = ТекстСубконтоДт + ", СубконтоДт" +Инд;
				СтруктураПредставлениеПолей.Вставить("СубконтоДт" +Инд, "Субконто Дт " + Инд);
			КонецЦикла;

			ТекстСубконтоКт = "";
			ТекстВидСубконтоКт = "";

			Для Инд = 1 По СвойстваОбъекта.ПланСчетов.МаксКоличествоСубконто Цикл
				//ТекстВидСубконтоКт = ТекстВидСубконтоКт + ", ВидСубконтоКт" +Инд;
				ТекстСубконтоКт = ТекстСубконтоКт + ", СубконтоКт" +Инд;
				СтруктураПредставлениеПолей.Вставить("СубконтоКт" +Инд, "Субконто Кт " + Инд);
			КонецЦикла;
			
			ТекстИзмеренияДт = ", СчетДт";
			СтруктураПредставлениеПолей.Вставить("СчетДт", "Счет Дт");
			ТекстИзмеренияКт = ", СчетКт";
			СтруктураПредставлениеПолей.Вставить("СчетКт", "Счет Кт");
			
			Для Каждого Измерение Из СвойстваОбъекта.Измерения Цикл
				Если Измерение.Балансовый Тогда
					ТекстИзмерения = ТекстИзмерения + ", "+ Измерение.Имя;
					СтруктураПредставлениеПолей.Вставить(Измерение.Имя, Измерение.Синоним);
				Иначе
					ТекстИзмеренияДт = ТекстИзмеренияДт + ", " + Измерение.Имя+"Дт";
					СтруктураПредставлениеПолей.Вставить(Измерение.Имя + "Дт", Измерение.Синоним + " Дт");
					ТекстИзмеренияКт = ТекстИзмеренияКт + ", " + Измерение.Имя+"Кт";
					СтруктураПредставлениеПолей.Вставить(Измерение.Имя + "Кт", Измерение.Синоним + " Дт");
				КонецЕсли;
			КонецЦикла;
			Для Каждого Реквизит Из СвойстваОбъекта.Реквизиты Цикл
				ТекстРеквизиты = ТекстРеквизиты + ", "+ Реквизит.Имя;
				СтруктураПредставлениеПолей.Вставить(Реквизит.Имя, Реквизит.Синоним);
			КонецЦикла;
			Построитель.Текст = "ВЫБРАТЬ "+Сред(ТекстИзмерения, 2)+
							ТекстИзмеренияДт + ТекстВидСубконтоДт + ТекстСубконтоДт + ТекстРесурсыДт + 
							ТекстИзмеренияКт + ТекстВидСубконтоКт + ТекстСубконтоКт + ТекстРесурсыКт +
					ТекстРесурсы + ТекстРеквизиты +"
			|{ВЫБРАТЬ "+Сред(ТекстИзмерения, 2)+
							ТекстИзмеренияДт + ТекстВидСубконтоДт + ТекстСубконтоДт + ТекстРесурсыДт + 
							ТекстИзмеренияКт + ТекстВидСубконтоКт + ТекстСубконтоКт + ТекстРесурсыКт +
					ТекстРесурсы + ТекстРеквизиты +"}
			|ИЗ РегистрБухгалтерии."+СвойстваОбъекта.Имя +".ДвиженияССубконто(,,Регистратор = &ДокументОтчета)
			|ГДЕ (РегистрБухгалтерии."+СвойстваОбъекта.Имя +".ДвиженияССубконто.Регистратор = &ДокументОтчета)";
			Построитель.Параметры.Вставить("ДокументОтчета", Документ);
			Попытка
				МакетНастройки = ПолучитьМакет ("МакетНастройкиРегистраРегистрБухгалтерии"+СвойстваОбъекта.Имя);
				Построитель.МакетШапкиТаблицы = МакетНастройки.ПолучитьОбласть("ШапкаТаблицы");
				Построитель.МакетДетальныхЗаписей = МакетНастройки.ПолучитьОбласть("Строка");
			Исключение
				УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, Построитель);
				МакетДетальныхЗаписей = Построитель.Макет.ПолучитьОбласть("Детали");
				МакетШапки = Построитель.Макет.ПолучитьОбласть("ШапкаТаблицы");
				
				//НомерСтроки = МакетДетальныхзаписей.Область("Детали").Верх;//МакетДетальныхЗаписей.Верх;
				
				//НомерСтолбца = 2;
				
				КолСтрокИзмеренияДт = 1;
				НомерКолонкиСИзмерениямиДт = 0;
				СобратьПоляДетальнойЗаписи(ТекстИзмеренияДт, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиСИзмерениямиДт, КолСтрокИзмеренияДт);

				КолСтрокИзмеренияКт = 1;
				НомерКолонкиСИзмерениямиКт = 0;
				СобратьПоляДетальнойЗаписи(ТекстИзмеренияКт, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиСИзмерениямиКт, КолСтрокИзмеренияКт);

				КолСтрокВидовСубконтоДт = 1;
				НомерКолонкиВидыСубконтоДт = 0;
				СобратьПоляДетальнойЗаписи(ТекстВидСубконтоДт, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиВидыСубконтоДт, КолСтрокВидовСубконтоДт);

				КолСтрокВидовСубконтоКт = 1;
				НомерКолонкиВидыСубконтоКт = 0;
				СобратьПоляДетальнойЗаписи(ТекстВидСубконтоКт, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиВидыСубконтоКт, КолСтрокВидовСубконтоКт);

				КолСтрокСубконтоДт = 1;
				НомерКолонкиСубконтоДт = 0;
				СобратьПоляДетальнойЗаписи(ТекстСубконтоДт, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиСубконтоДт, КолСтрокСубконтоДт);

				КолСтрокСубконтоКт = 1;
				НомерКолонкиСубконтоКт = 0;
				СобратьПоляДетальнойЗаписи(ТекстСубконтоКт, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиСубконтоКт, КолСтрокСубконтоКт);

				КолСтрокРесурсыДт = 1;
				НомерКолонкиРесурсыДт = 0;
				СобратьПоляДетальнойЗаписи(ТекстРесурсыДт, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиРесурсыДт, КолСтрокРесурсыДт);

				КолСтрокРесурсыКт = 1;
				НомерКолонкиРесурсыКт = 0;
				СобратьПоляДетальнойЗаписи(ТекстРесурсыКт, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиРесурсыКт, КолСтрокРесурсыКт);

				КолСтрокБИ = 1;
				НомерКолонкиБИ = 0;
				СобратьПоляДетальнойЗаписи(ТекстИзмерения, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиБИ, КолСтрокБИ);
				
				КолСтрокБР = 1;
				НомерКолонкиБР = 0;
				СобратьПоляДетальнойЗаписи(ТекстРесурсы, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиБР, КолСтрокБР);
				
				КолСтрокБРекв = 1;
				НомерКолонкиБРекв = 0;
				СобратьПоляДетальнойЗаписи(ТекстРеквизиты, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиБРекв, КолСтрокБРекв);
				
				ВысотаМакета = Макс(КолСтрокИзмеренияДт, КолСтрокИзмеренияКт, КолСтрокВидовСубконтоДт, КолСтрокВидовСубконтоКт, КолСтрокСубконтоДт, КолСтрокСубконтоКт, КолСтрокРесурсыДт, КолСтрокРесурсыКт, КолСтрокБИ, КолСтрокБР, КолСтрокБРекв);

				//МакетДетальныхЗаписей.Показать();
				//Область(1, , ВысотаМакета, ).Имя = ;

				МакетДетальныхЗаписей.Область("Детали").Имя = "";
				МакетДетальныхЗаписей.Область(1, , ВысотаМакета,).Имя = "Детали";

				МакетДетальныхЗаписей.Область(1, , ВысотаМакета,).ШиринаКолонки = 20;
				МакетДетальныхЗаписей.Область(1,1, ВысотаМакета,1).ШиринаКолонки = 2;

				МакетШапки.Область("ШапкаТаблицы").Имя = "";
				МакетШапки.Область(1, , ВысотаМакета,).Имя = "ШапкаТаблицы";
				МакетШапки.Область(1, , ВысотаМакета,).ШиринаКолонки = 20;
				МакетШапки.Область(1, 1,ВысотаМакета, 1).ШиринаКолонки = 2;
				
				НомерКолонки = 2;
				Если НомерКолонкиБИ>0 Тогда
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 24;
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 24;
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
					НомерКолонки = НомерКолонки + 1;
				КонецЕсли;
				
				Если НомерКолонкиСИзмерениямиДт>0 Тогда
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 9;
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 9;
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
					НомерКолонки = НомерКолонки + 1;
				КонецЕсли;
				
				Если НомерКолонкиВидыСубконтоДт>0 Тогда
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 16;
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 16;
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
					НомерКолонки = НомерКолонки + 1;
				КонецЕсли;
				
				Если НомерКолонкиСубконтоДт>0 Тогда
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 19;
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 19;
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
					НомерКолонки = НомерКолонки + 1;
				КонецЕсли;

				Если НомерКолонкиРесурсыДт>0 Тогда
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 15;
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 15;
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ВыделятьОтрицательные = Истина;
					НомерКолонки = НомерКолонки + 1;
				КонецЕсли;

				
				Если НомерКолонкиСИзмерениямиКт>0 Тогда
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 9;
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 9;
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
					НомерКолонки = НомерКолонки + 1;
				КонецЕсли;
				
				Если НомерКолонкиВидыСубконтоКт>0 Тогда
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 16;
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 16;
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
					НомерКолонки = НомерКолонки + 1;
				КонецЕсли;
				
				Если НомерКолонкиСубконтоКт>0 Тогда
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 19;
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 19;
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
					НомерКолонки = НомерКолонки + 1;
				КонецЕсли;
				
				Если НомерКолонкиРесурсыКт>0 Тогда
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 15;
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 15;
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ВыделятьОтрицательные = Истина;
					НомерКолонки = НомерКолонки + 1;
				КонецЕсли;
				Если НомерКолонкиБР>0 Тогда
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 15;
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 15;
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ВыделятьОтрицательные = Истина;
					НомерКолонки = НомерКолонки + 1;
				КонецЕсли;
				Если НомерКолонкиБРекв>0 Тогда
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 15;
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 15;
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
					МакетШапки.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
					МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ВыделятьОтрицательные = Истина;
					НомерКолонки = НомерКолонки + 1;
				КонецЕсли;
				
				//МакетДетальныхЗаписей.Показать();
				ОбластьДетальныхЗаписей = МакетДетальныхЗаписей.ПолучитьОбласть("Детали");
				ОбластьШапки = МакетШапки.ПолучитьОбласть("ШапкаТаблицы");
				Построитель.МакетДетальныхЗаписей = ОбластьДетальныхЗаписей;
				Построитель.МакетШапкиТаблицы = ОбластьШапки;
			КонецПопытки;
						
		ИначеЕсли Метаданные.РегистрыРасчета.Индекс(СвойстваОбъекта)>=0 Тогда
			
			ВидРегистра = "Расчета";
			
			Для Каждого Ресурс Из СвойстваОбъекта.Ресурсы Цикл
				Текстресурсы = Текстресурсы + ", " + Ресурс.Имя;
				СтруктураПредставлениеПолей.Вставить(Ресурс.Имя, Ресурс.Синоним);
			КонецЦикла;
			Для Каждого Измерение Из СвойстваОбъекта.Измерения Цикл
				ТекстИзмерения = ТекстИзмерения + ", " + Измерение.Имя;
				СтруктураПредставлениеПолей.Вставить(Измерение.Имя, Измерение.Синоним);
			КонецЦикла;
			Для Каждого Реквизит Из СвойстваОбъекта.Реквизиты Цикл
				ТекстРеквизиты = ТекстРеквизиты + ", " + Реквизит.Имя;
				СтруктураПредставлениеПолей.Вставить(Реквизит.Имя, Реквизит.Синоним);
			КонецЦикла;
			СпецифическиеДанныеРегистраРасчета = ", ВидРасчета, ПериодРегистрации, Сторно";
			СтруктураПредставлениеПолей.Вставить("ВидРасчета", "Вид расчета");
			СтруктураПредставлениеПолей.Вставить("ПериодРегистрации", "Период регистрации");
			Если СвойстваОбъекта.БазовыйПериод Тогда
				СпецифическиеДанныеРегистраРасчета = СпецифическиеДанныеРегистраРасчета + ", БазовыйПериодНачало, БазовыйПериодКонец";
				СтруктураПредставлениеПолей.Вставить("БазовыйПериодНачало", "Начало базового периода");
				СтруктураПредставлениеПолей.Вставить("БазовыйПериодКонец", "Конец базового периода");
			КонецЕсли;
			Если СвойстваОбъекта.ПериодДействия Тогда
				СпецифическиеДанныеРегистраРасчета = СпецифическиеДанныеРегистраРасчета + ", ПериодДействияНачало, ПериодДействияКонец";
				СтруктураПредставлениеПолей.Вставить("ПериодДействияНачало", "Начало периода действия");
				СтруктураПредставлениеПолей.Вставить("ПериодДействияКонец", "Конец периода действия");
			КонецЕсли;
			Построитель.Текст = "ВЫБРАТЬ " + Сред(СпецифическиеДанныеРегистраРасчета, 2) + ТекстИзмерения+ТекстРесурсы + ТекстРеквизиты +"
			|{ВЫБРАТЬ " + Сред(СпецифическиеДанныеРегистраРасчета, 2) + ТекстИзмерения+ТекстРесурсы + ТекстРеквизиты +"}
			|ИЗ РегистрРасчета."+СвойстваОбъекта.Имя+" КАК Рег
			|ГДЕ Рег.Регистратор = &ДокументОтчета";

			Построитель.Параметры.Вставить("ДокументОтчета", Документ);
			УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, Построитель);
			МакетДетальныхЗаписей = Построитель.Макет.ПолучитьОбласть("Детали");
			МакетШапки = Построитель.Макет.ПолучитьОбласть("ШапкаТаблицы");
			
			КолСтрокДанныеРР = 1;
			НомерКолонкиДанныеРР = 0;
			СобратьПоляДетальнойЗаписи(СпецифическиеДанныеРегистраРасчета, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиДанныеРР, КолСтрокДанныеРР, "Данные расчета");

			КолСтрокИзмерения = 1;
			НомерКолонкиИзмерения = 0;
			СобратьПоляДетальнойЗаписи(ТекстИзмерения, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиИзмерения, КолСтрокИзмерения, "Измерения");

			
			КолСтрокРесурсы = 1;
			НомерКолонкиРесурсы = 0;
			СобратьПоляДетальнойЗаписи(ТекстРесурсы, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиРесурсы, КолСтрокРесурсы, "Ресурсы");
			
			КолСтрокРеквизиты = 1;
			НомерКолонкиРеквизиты = 0;
			СобратьПоляДетальнойЗаписи(ТекстРеквизиты, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиРеквизиты, КолСтрокРеквизиты, "Реквизиты");
			
			ВысотаМакета = Макс(КолСтрокДанныеРР, КолСтрокИзмерения, КолСтрокРесурсы,КолСтрокРеквизиты);
			
			МакетДетальныхЗаписей.Область("Детали").Имя = "";
			МакетДетальныхЗаписей.Область(1, , ВысотаМакета,).Имя = "Детали";

			МакетДетальныхЗаписей.Область(1, , ВысотаМакета,).ШиринаКолонки = 20;
			МакетДетальныхЗаписей.Область(1,1, ВысотаМакета,1).ШиринаКолонки = 2;
			
			МакетШапки.Область("ШапкаТаблицы").Имя = "";
			МакетШапки.Область(1, , ВысотаМакета + 1,).Имя = "ШапкаТаблицы";
			МакетШапки.Область(1, , ВысотаМакета + 1,).ШиринаКолонки = 20;
			МакетШапки.Область(1, 1,ВысотаМакета + 1, 1).ШиринаКолонки = 2;
			
			НомерКолонки = 2;

			Если НомерКолонкиДанныеРР>0 Тогда
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 30;
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).ШиринаКолонки = 30;
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
				НомерКолонки = НомерКолонки + 1;
			КонецЕсли;
			
			Если НомерКолонкиИзмерения>0 Тогда
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 40;
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).ШиринаКолонки = 40;
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
				НомерКолонки = НомерКолонки + 1;
			КонецЕсли;
			
			Если НомерКолонкиРесурсы>0 Тогда
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 30;
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).ШиринаКолонки = 30;
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ВыделятьОтрицательные = Истина;
				НомерКолонки = НомерКолонки + 1;
			КонецЕсли;
			
			Если НомерКолонкиРеквизиты>0 Тогда
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).ШиринаКолонки = 20;
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).ШиринаКолонки = 20;
				МакетДетальныхЗаписей.Область(1, НомерКолонки,ВысотаМакета, НомерКолонки).Обвести(ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния, ТонкаяСплошнаяЛиния);
				МакетШапки.Область(1, НомерКолонки,ВысотаМакета + 1, НомерКолонки).Обвести(ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния, ТолстаяСплошнаяЛиния);
				НомерКолонки = НомерКолонки + 1;
			КонецЕсли;
			ОбластьДетальныхЗаписей = МакетДетальныхЗаписей.ПолучитьОбласть("Детали");
			ОбластьШапки = МакетШапки.ПолучитьОбласть("ШапкаТаблицы");
			Построитель.МакетДетальныхЗаписей = ОбластьДетальныхЗаписей;
			Построитель.МакетШапкиТаблицы = ОбластьШапки;
		Иначе
			// мало ли что нам передали
			продолжить;
		КонецЕсли;
		Построитель.Параметры.Вставить("ДокументОтчета", Документ);
		Построитель.ВыводитьПодвалОтчета = Истина;
		Построитель.ВыводитьОбщиеИтоги = Ложь;
		Построитель.ВыводитьПодвалТаблицы = Ложь;
		Построитель.ВыводитьЗаголовокОтчета = Ложь;

		Макет = ПолучитьМакет("Макет");
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокОтчета");
		Если Построитель.ПолучитьЗапрос().Выполнить().Пустой() Тогда
			//Построитель.ВыводитьШапкуТаблицы = Ложь;
			ОбластьЗаголовок.Параметры.ИмяРегистра = СвойстваОбъекта.Синоним+" - нет движений";
			Продолжить;
		иначе
			ОбластьЗаголовок.Параметры.ИмяРегистра = СвойстваОбъекта.Синоним;
			ОбластьЗаголовок.Параметры.ВидРегистра = НРег(ВидРегистра);
			ТабДок.Вывести(ОбластьЗаголовок);
		КонецЕсли;
		//Построитель.МакетЗаголовкаОтчета = ОбластьЗаголовок;
		ТабДок.НачатьГруппуСтрок();
		Построитель.Вывести(ТабДок);
		ТабДок.ЗакончитьГруппуСтрок();
	КонецЦикла;
	ТабДок.ОтображатьГруппировки = истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.Автомасштаб = Истина;
	ТабДок.Показать("Движения документа "+ Строка(Документ)+" по регистрам");
	Состояние("");

КонецПроцедуры

//Процедура СобратьПоляДетальнойЗаписи
//
Процедура СобратьПоляДетальнойЗаписи(СтрПолейДетальнойЗаписи, МакетДетальныхЗаписей, МакетШапки, НомерКолонкиКудаВсеСкладываем, НомерСтроки, ВставитьЗаголовок = "")
	НомерКолонкиКудаВсеСкладываем = 0;
	НомерСтолбца = 2;
	НомерСтрокиШапки = НомерСтроки;
	Пока ЗначениеЗаполнено(МакетДетальныхЗаписей.Область(МакетДетальныхзаписей.Область("Детали").Верх, НомерСтолбца).Параметр) Цикл
		Если Найти(СтрПолейДетальнойЗаписи+",", " "+МакетДетальныхЗаписей.Область(МакетДетальныхзаписей.Область("Детали").Верх, НомерСтолбца).Параметр+",")>0 Тогда
			Если НомерКолонкиКудаВсеСкладываем = 0 Тогда
				НомерКолонкиКудаВсеСкладываем = НомерСтолбца;
				Если ВставитьЗаголовок <> "" Тогда
					СтарыйТекст = МакетШапки.Область(МакетШапки.Область("ШапкаТаблицы").Верх, НомерСтолбца).Текст;
					МакетШапки.ВставитьОбласть(МакетШапки.Область(МакетШапки.Область("ШапкаТаблицы").Верх, НомерСтолбца), 
											   МакетШапки.Область(МакетШапки.Область("ШапкаТаблицы").Верх, НомерСтолбца), ТипСмещенияТабличногоДокумента.ПоВертикали, Ложь);
					МакетШапки.ВставитьОбласть(МакетШапки.Область(МакетШапки.Область("ШапкаТаблицы").Верх, НомерСтолбца), 
											   МакетШапки.Область(МакетШапки.Область("ШапкаТаблицы").Верх+1, НомерСтолбца), ТипСмещенияТабличногоДокумента.БезСмещения, Ложь);
					
					МакетШапки.Область(МакетШапки.Область("ШапкаТаблицы").Верх, НомерСтолбца).Текст = ВставитьЗаголовок;
					МакетШапки.Область(МакетШапки.Область("ШапкаТаблицы").Верх, НомерСтолбца).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
//					МакетШапки.Область(МакетШапки.Область("ШапкаТаблицы").Верх + 1, НомерСтолбца).Текст = СтарыйТекст;
					НомерСтрокиШапки = НомерСтрокиШапки + 1; 
				КонецЕсли;
			Иначе
				МакетДетальныхЗаписей.ВставитьОбласть(МакетДетальныхЗаписей.Область(МакетДетальныхзаписей.Область("Детали").Верх, НомерСтолбца), МакетДетальныхЗаписей.Область(МакетДетальныхзаписей.Область("Детали").Верх + НомерСтроки, НомерКолонкиКудаВсеСкладываем), ТипСмещенияТабличногоДокумента.ПоВертикали, Ложь);
				МакетШапки.ВставитьОбласть(МакетШапки.Область(МакетШапки.Область("ШапкаТаблицы").Верх, НомерСтолбца), МакетШапки.Область(МакетШапки.Область("ШапкаТаблицы").Верх + НомерСтрокиШапки, НомерКолонкиКудаВсеСкладываем), ТипСмещенияТабличногоДокумента.ПоВертикали, Ложь);
				НомерСтроки = НомерСтроки + 1;
				НомерСтрокиШапки = НомерСтрокиШапки + 1;
				Для инд = МакетДетальныхЗаписей.Область("Детали").Верх По МакетДетальныхЗаписей.Область("Детали").Низ+8 Цикл
					МакетДетальныхЗаписей.УдалитьОбласть(МакетДетальныхЗаписей.Область(инд, НомерСтолбца), ТипСмещенияТабличногоДокумента.ПоГоризонтали);
					МакетШапки.УдалитьОбласть(МакетШапки.Область(инд, НомерСтолбца), ТипСмещенияТабличногоДокумента.ПоГоризонтали);
				КонецЦикла;
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		НомерСтолбца = НомерСтолбца+1;
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли
