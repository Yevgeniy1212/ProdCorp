
#Если Клиент Тогда
	
Перем ИтогоСуммаБезНДС;
Перем ИтогоСуммаНДС;
Перем ИтогоСуммаАкциза;
Перем ИтогоСумма;
Перем мВалютаРегламентированногоУчета;
Перем СписокОснований;
Перем мСписокСтруктурныхЕдиниц Экспорт;

// Процедура предназначена для преобразования номера документа.
//
// Параметры:
//  Документ - (ДокументСсылка), документ, чей номер надо получить для печати.
//
// Возвращаемое значение.
//  Строка - номер документа для печати
//
Функция ПолучитьНомерБезПрефиксаНаПечать(Документ, глСписокПрефиксовУзлов = Неопределено) Экспорт
	
	Если Документ = Неопределено Тогда 
		Возврат 0;
	КонецЕсли;
	
	Номер = СокрЛП(Документ.Номер);
	
	ПредставлениеНомераДокумента = Константы.ПредставлениеНомераДокументов.Получить();
	
	
	Попытка
		ПрефиксОрганизации = СокрЛП(Документ.Организация.Префикс); 
	Исключение
		Попытка
			ПрефиксОрганизации = СокрЛП(Документ.ДокументОснование.Организация.Префикс); 
		Исключение
			ПрефиксОрганизации = "";
		КонецПопытки;
	КонецПопытки;
	СписокПрефиксовУзлов = ?(глСписокПрефиксовУзлов<>Неопределено, глСписокПрефиксовУзлов, Новый Структура);
		
	ПолныйПрефиксНайден = Ложь;
	
	//в номере может быть префикс любого узла
	Для Каждого ЭлементСпискаПрефиксовУзлов Из СписокПрефиксовУзлов Цикл
		ПрефиксУзла = СокрЛП(ЭлементСпискаПрефиксовУзлов.Значение);
		ПолныйПрефикс = ПрефиксУзла + ПрефиксОрганизации;
		ПозицияПолногоПрефикса = Найти(Номер, ПолныйПрефикс);
		Если ПозицияПолногоПрефикса = 1 Тогда
			Номер = Прав(Номер, СтрДлина(Номер) - СтрДлина(ПолныйПрефикс));
			ПолныйПрефиксНайден = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;	
	
	//так же возможно в номере нет префикса узла
	Если Не ПолныйПрефиксНайден Тогда
		ПолныйПрефикс = ПрефиксОрганизации;
		Если Не ПустаяСтрока(ПолныйПрефикс) Тогда 
			ПозицияПолногоПрефикса = Найти(Номер, ПолныйПрефикс);
			Если ПозицияПолногоПрефикса = 1 Тогда
				Номер = Прав(Номер, СтрДлина(Номер) - СтрДлина(ПолныйПрефикс));
				ПолныйПрефиксНайден = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	//возможно в номере есть только префикс организации
	Если Не ПолныйПрефиксНайден Тогда
		ПолныйПрефикс = ПрефиксОрганизации;
		Если Не ПустаяСтрока(ПолныйПрефикс) Тогда 
			ПозицияПолногоПрефикса = Найти(Номер, ПолныйПрефикс);
			Если ПозицияПолногоПрефикса = 1 Тогда
				Номер = Прав(Номер, СтрДлина(Номер) - СтрДлина(ПолныйПрефикс));
				ПолныйПрефиксНайден = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Пока Лев(Номер, 1) = "0" Цикл
		Номер = Прав(Номер, СтрДлина(Номер) - 1);
	КонецЦикла;                             	
	
	Возврат Номер;
	
КонецФункции // ПолучитьНомерБезПрефиксаНаПечать()


Функция  СформироватьСписокДокументовОснований(СФ)
	Если Не ЗначениеЗаполнено(СФ) Тогда
		Возврат "";
	КонецЕсли;
	НомерСтроки = 1;
	СписокДокументов = "";
	СписокОснований = Новый СписокЗначений;
	КоличествоСтрок = СФ.ДокументыОснования.Количество();
	
	Для Каждого Осн Из СФ.ДокументыОснования Цикл
		РасчетныйДокумент = Осн.ДокументОснование;
		РасчетныйДокументПредставление = "";			
		Если ЗначениеЗаполнено(Осн.ДокументОснование) Тогда
			
			//Возможны проблемы с RLS
			Попытка
				РасчетныйДокументПредставление = РасчетныйДокумент.Метаданные().Синоним +" " 
				+ ОбщегоНазначения.ПолучитьНомерНаПечать(РасчетныйДокумент, глСписокПрефиксовУзлов) + " от " 
				+ Формат(РасчетныйДокумент.Дата, "ДФ=dd.MM.yyyy");
			Исключение
			КонецПопытки;
			
		КонецЕсли;

		СписокДокументов = СписокДокументов + РасчетныйДокументПредставление + ?(НомерСтроки = КоличествоСтрок, "", ", ");
		СписокОснований.Добавить(Осн.ДокументОснование);
		НомерСтроки = НомерСтроки  + 1;
	КонецЦикла;
	
	Возврат СписокДокументов;
		
КонецФункции

// Формирование отчета в виде табличного документа.
// Параметры:
//  ТабличныйДокумент - макет отчета.
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
		
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	Макет = ПолучитьМакет("Макет");

	// Вывод шапки	
	Секция =  Макет.ПолучитьОбласть("Шапка|ОбластьОтчета");
	
	Секция.Параметры.НачалоПериода = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.КонецПериода = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	Секция.Параметры.НазваниеОрганизации = РаботаСДиалогами.ВыгрузитьСписокВСтроку(мСписокСтруктурныхЕдиниц);
	
	ТабличныйДокумент.Вывести(Секция);
	
	Если ОтображатьДоговора Тогда
		ДопСекция =  Макет.ПолучитьОбласть("Шапка|ОбластьДоговора");
		ТабличныйДокумент.Присоединить(ДопСекция);
	КонецЕсли;    
	
	Если ОтображатьКомментарий Тогда
		ДопСекция =  Макет.ПолучитьОбласть("Шапка|ОбластьКомментария");
		ТабличныйДокумент.Присоединить(ДопСекция);
	КонецЕсли;
	
	
	//выводим шапку таблицы	
	СекцияШапкаТаблицы =  Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьОтчета");	
	
	// именуем область для возможности повтора шапки таблицы при печати
	СекцияШапкаТаблицы.Область("R1:R3").Имя = "ШапкаТаблицы";
	
	ТабличныйДокумент.Вывести(СекцияШапкаТаблицы);
	
	Если ОтображатьДоговора Тогда
		ДопСекция =  Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьДоговора");
		ТабличныйДокумент.Присоединить(ДопСекция);
	КонецЕсли;    
	
	Если ОтображатьКомментарий Тогда
		ДопСекция =  Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьКомментария");
		ТабличныйДокумент.Присоединить(ДопСекция);
	КонецЕсли;
	
	// Выполнение запроса.
	Результат = ПодготовитьОтчетКВыводуНаПечать();
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		
	СекцияДоп 	= Макет.ПолучитьОбласть("ДопСтрока|ОбластьОтчета");
	Итог 		=  Макет.ПолучитьОбласть("Итог|ОбластьОтчета");
	
	СекцияДопКом      = Макет.ПолучитьОбласть("ДопСтрока|ОбластьКомментария");
	СекцияДопДоговора =  Макет.ПолучитьОбласть("ДопСтрока|ОбластьДоговора");
	
	ИтогКом        =  Макет.ПолучитьОбласть("Итог|ОбластьКомментария");
	ИтогДоговора   =  Макет.ПолучитьОбласть("Итог|ОбластьКомментария");
	
	Если Результат.Пустой() Тогда		
		Секция 	=  Макет.ПолучитьОбласть("Строка|ОбластьОтчета");		
        ТабличныйДокумент.Вывести(Секция);
		
		Если ОтображатьДоговора тогда
			СекцияДоговора =  Макет.ПолучитьОбласть("Строка|ОбластьДоговора");		
			ТабличныйДокумент.Присоединить(СекцияДоговора);
		КонецЕсли;
		Если ОтображатьКомментарий Тогда
			СекцияКом      = Макет.ПолучитьОбласть("Строка|ОбластьКомментария");
			ТабличныйДокумент.Присоединить(СекцияКом);
		КонецЕсли;
				
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глТекущийПользователь));
	    Возврат;
		
	КонецЕсли; 
	
	Секция 	=  Макет.ПолучитьОбласть("Строка|ОбластьОтчета");
	СекцияДоговора =  Макет.ПолучитьОбласть("Строка|ОбластьДоговора");
	СекцияКом      = Макет.ПолучитьОбласть("Строка|ОбластьКомментария");

	Счетчик = 1;
	ИтогоСуммаБезНДС = 0;
	ИтогоСуммаНДС 	 = 0;
	ИтогоСуммаАкциза = 0;
	ИтогоСумма		 = 0;
	
	Если ГруппироватьПоСпособуВыписки Тогда
		СекцияСпособВыписки = ?(ОтображатьКомментарий, Макет.ПолучитьОбласть("СпособВыписки"), Макет.ПолучитьОбласть("СпособВыписки|ОбластьОтчета"));
	КонецЕсли;

	Если  ГруппироватьПоКонтрагентам Тогда
		//Режим построения с группировкой по контрагенту
		СекцияКонтрагента	= ?(ОтображатьКомментарий, Макет.ПолучитьОбласть("Контрагент"), Макет.ПолучитьОбласть("Контрагент|ОбластьОтчета"));
		ГруппировкаПоКонтрагенту = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ГруппировкаПоКонтрагенту.Следующий() Цикл
			
			СекцияКонтрагента.Параметры.КонтрагентНаименование = ГруппировкаПоКонтрагенту.ПокупательНаименование;
			СекцияКонтрагента.Параметры.Контрагент			   = ГруппировкаПоКонтрагенту.Покупатель;
			
			ТабличныйДокумент.Вывести(СекцияКонтрагента,1);
			ТабличныйДокумент.НачатьГруппуСтрок();
			
			Если ГруппироватьПоСпособуВыписки Тогда
				
				ГруппировкаСпособВыписки = ГруппировкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

				Пока ГруппировкаСпособВыписки.Следующий() Цикл
					СекцияСпособВыписки.Параметры.СпособВыписки = ГруппировкаСпособВыписки.СпособВыписки;
					ТабличныйДокумент.Вывести(СекцияСпособВыписки, 1);
					ТабличныйДокумент.НачатьГруппуСтрок();
					
					Документ = ГруппировкаСпособВыписки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока Документ.Следующий() Цикл
						Секция.Параметры.Заполнить(Документ);
						ВыводСтроки(ТабличныйДокумент,Документ, Секция,СекцияДоговора, СекцияКом, СекцияДоп, СекцияДопДоговора, СекцияДопКом, Счетчик);
					КонецЦикла; 
					ТабличныйДокумент.ЗакончитьГруппуСтрок();
				КонецЦикла;
				
			Иначе
				
				Документ = ГруппировкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока Документ.Следующий() Цикл
					Секция.Параметры.Заполнить(Документ);
					
					ВыводСтроки(ТабличныйДокумент,Документ, Секция,СекцияДоговора, СекцияКом, СекцияДоп, СекцияДопДоговора, СекцияДопКом, Счетчик);
					
				КонецЦикла; 
				
			КонецЕсли;
			
			ТабличныйДокумент.ЗакончитьГруппуСтрок();
			
		КонецЦикла; 
		
	Иначе
		
		Если ГруппироватьПоСпособуВыписки Тогда
			
			ГруппировкаСпособВыписки = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ГруппировкаСпособВыписки.Следующий() Цикл
				СекцияСпособВыписки.Параметры.СпособВыписки = ГруппировкаСпособВыписки.СпособВыписки;
				ТабличныйДокумент.Вывести(СекцияСпособВыписки, 1);
				ТабличныйДокумент.НачатьГруппуСтрок();
				
				Документ = ГруппировкаСпособВыписки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока Документ.Следующий() Цикл
					Секция.Параметры.Заполнить(Документ);
					ВыводСтроки(ТабличныйДокумент,Документ, Секция,СекцияДоговора, СекцияКом, СекцияДоп, СекцияДопДоговора, СекцияДопКом, Счетчик);
				КонецЦикла; 
				ТабличныйДокумент.ЗакончитьГруппуСтрок();
			КонецЦикла;
			
		Иначе
			
			// Простой режим
			Документ = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока Документ.Следующий() Цикл
				Секция.Параметры.Заполнить(Документ);
				
				ВыводСтроки(ТабличныйДокумент,Документ, Секция,СекцияДоговора, СекцияКом, СекцияДоп, СекцияДопДоговора, СекцияДопКом, Счетчик);
				
			КонецЦикла;  
			
		КонецЕсли;
	
	КонецЕсли;
	
	Итог.Параметры.ИтогоСуммаБезНДС = ИтогоСуммаБезНДС;
	Итог.Параметры.ИтогоСуммаНДС    = ИтогоСуммаНДС;
	//Итог.Параметры.ИтогоСуммаАкциза = ИтогоСуммаАкциза;
	Итог.Параметры.ИтогоСумма	    = ИтогоСумма;
	
	ТабличныйДокумент.Вывести(Итог); 
	Если ОтображатьДоговора Тогда
		ТабличныйДокумент.Присоединить(ИтогДоговора); 					
	КонецЕсли;
	
	Если ОтображатьКомментарий Тогда				
		ТабличныйДокумент.Присоединить(ИтогКом);
	КонецЕсли;  	
	
	ИскомаяОрганизация = Неопределено;
	
	//выберм первую организацию в списке организаций
	Если ТипЗнч(мСписокСтруктурныхЕдиниц) = Тип("СписокЗначений") Тогда
		Если мСписокСтруктурныхЕдиниц.Количество() > 0 Тогда
			ИскомаяОрганизация = мСписокСтруктурныхЕдиниц[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если ИскомаяОрганизация = Неопределено Тогда
		ИскомаяОрганизация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	КонецЕсли;  	
	
	ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
	
	ОтветЛица = ОбщегоНазначения.ОтветственныеЛицаОрганизаций(ИскомаяОрганизация, КонецДня(КонецПериода), глЗначениеПеременной("глТекущийПользователь").ФизЛицо);
	ОбластьПодписи.Параметры.Заполнить(ОтветЛица);
	ТабличныйДокумент.Вывести(ОбластьПодписи);
	
	
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Области.ШапкаТаблицы;
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глТекущийПользователь));
	
КонецПроцедуры // СформироватьОтчет()

Процедура СформироватьОтчетОПроверке(ТабличныйДокумент) Экспорт
	
	ТабДокумент = ТабличныйДокумент;
	ТабДокумент.Очистить();
	Макет  = ПолучитьМакет("МакетПроверки");
	
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
	ОбластьОшибокНеВыявлено = Макет.ПолучитьОбласть("ОшибокНеВыявлено");
	
	ОбластьШапкаСоответствияРеквизитов 	= Макет.ПолучитьОбласть("ШапкаСоответствияРеквизитов");
	ОбластьСтрокаСоответствияРеквизитов = Макет.ПолучитьОбласть("СтрокаСоответствияРеквизитов");	
	ОбластьИтогиСоответствияРеквизитов = Макет.ПолучитьОбласть("ИтогиСоответствияРеквизитов");
	
	ОбластьШапкаСоответствияСумм 				= Макет.ПолучитьОбласть("ШапкаСоответствияСумм");
	ОбластьСтрокаСсылкаСоответствияСумм 		= Макет.ПолучитьОбласть("СтрокаСсылкаСоответствияСумм");
	ОбластьСтрокаРегистраторСоответствияСумм 	= Макет.ПолучитьОбласть("СтрокаРегистраторСоответствияСумм");
	ОбластьИтогиСоответствияСумм 				= Макет.ПолучитьОбласть("ИтогиСоответствияСумм");
	
	
	ОбластьШапка.Параметры.НазваниеОрганизации = РаботаСДиалогами.ВыгрузитьСписокВСтроку(мСписокСтруктурныхЕдиниц);;
	ОбластьШапка.Параметры.Дата1 = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.Дата2 = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	ТабДокумент.Вывести(ОбластьШапка);
	
	// Проверка Наличия выписанных счетов фактур
	ТаблицаРезультат = УчетНДСИАкциза.ОпределитьНаличиеСчетовФактур(?(НЕ ЗначениеЗаполнено(НачалоПериода), Неопределено, НачалоПериода), 
	?(НЕ ЗначениеЗаполнено(КонецПериода), Неопределено, КонецДня(КонецПериода)),
	?(мСписокСтруктурныхЕдиниц.Количество() = 0, Неопределено, мСписокСтруктурныхЕдиниц),
	Неопределено, Ложь, Неопределено, "СчетФактураВыданный");
	Если ТаблицаРезультат.Количество() > 0 Тогда
		ТабДокумент.НачатьАвтоГруппировкуСтрок();
		ТабДокумент.Вывести(ОбластьШапкаСоответствияРеквизитов,0);
		
		// Выведем строки таблицы.
		Номер = 0;
		Для Каждого СтрокаРезультат Из ТаблицаРезультат Цикл
			// не проведенные документы не отражаем
			Если НЕ СтрокаРезультат.СчетФактураПроведен Тогда
				Продолжить;
			КонецЕсли;					
			СчетФактура = СтрокаРезультат.СчетФактура;
			Нарушение = "";
			КонтрагентНаименование = "";
			ДокументОснование  = ?(ТипЗнч(СтрокаРезультат.ДокументОснование) = Тип("ДокументСсылка.Сторнирование"), СтрокаРезультат.ДокументОснование.ДокументОснование, СтрокаРезультат.ДокументОснование);
			Если ЗначениеЗаполнено(ДокументОснование) Тогда
				// проверка соответствия реквизитов
				МетаданныеОснования = ДокументОснование.Метаданные();
				
				Если ЗначениеЗаполнено(СчетФактура) И ОбщегоНазначения.ЕстьРеквизитДокумента("Организация",МетаданныеОснования) Тогда
					ОрганизацияОснования = ДокументОснование.Организация;
					Если НЕ ОрганизацияОснования = СчетФактура.Организация Тогда
						Нарушение = Нарушение + "Несоответствие организации. ";
					КонецЕсли;					
				КонецЕсли;
				
				Если ОбщегоНазначения.ЕстьРеквизитДокумента("Контрагент",МетаданныеОснования) Тогда
					КонтрагентОснования = ДокументОснование.Контрагент;
					КонтрагентНаименование = СокрЛП(КонтрагентОснования.Наименование);
					// Отбор по конрагенту, тольк при наличии реквизита метаданных
					Если ОтбиратьПоКонтрагенту И НЕ КонтрагентОснования = КонтрагентДляОтбора  И НЕ  УчетНДСИАкциза.ПолучитьПлательщикаНДСВСчетеФактуре(КонтрагентОснования) = КонтрагентДляОтбора Тогда
						Продолжить;
					КонецЕсли;	
					
					Если ЗначениеЗаполнено(СчетФактура) И НЕ КонтрагентОснования = СчетФактура.Контрагент Тогда
						Нарушение = Нарушение + "Несоответствие контрагентов. ";
					КонецЕсли;					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СчетФактура) И ОбщегоНазначения.ЕстьРеквизитДокумента("ВалютаДокумента", МетаданныеОснования) Тогда
					ВалютаОснования  = ДокументОснование.ВалютаДокумента;
					Если НЕ ВалютаОснования = СчетФактура.ВалютаДокумента Тогда
						Нарушение = Нарушение + "Несоответствие валюты. ";
					КонецЕсли;					
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СчетФактура) Тогда
					Нарушение = Нарушение + "Отсутствует счет-фактура. ";
				Иначе
					Если НЕ СтрокаРезультат.СчетФактураПроведен = ИСТИНА Тогда
						Нарушение = Нарушение + "Счет-фактура не проведен.";
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;    
			
			
			Если Не ЗначениеЗаполнено(Нарушение) Тогда
				Продолжить;
			КонецЕсли;
			Номер = Номер+ 1;
			
			ОбластьСтрокаСоответствияРеквизитов.Параметры.Заполнить(СтрокаРезультат);
			ОбластьСтрокаСоответствияРеквизитов.Параметры.Нарушение = Нарушение;
			ОбластьСтрокаСоответствияРеквизитов.Параметры.КонтрагентНаименование = КонтрагентНаименование;
			ОбластьСтрокаСоответствияРеквизитов.Параметры.Дата = СтрокаРезультат.ДокументОснование.Дата;
			
			ОбластьСтрокаСоответствияРеквизитов.Параметры.Номер = Номер;
			ТабДокумент.Вывести(ОбластьСтрокаСоответствияРеквизитов,1);	
			
		КонецЦикла;		
		ОбластьИтогиСоответствияРеквизитов.Параметры.Номер = Номер;
		ТабДокумент.Вывести(ОбластьИтогиСоответствияРеквизитов,0);	
	Иначе		
		ТабДокумент.Вывести(ОбластьОшибокНеВыявлено,0);				
	КонецЕсли;
	ТабДокумент.ЗакончитьАвтоГруппировкуСтрок();
	
	// Второй этап проверки
	ТабДокумент.НачатьАвтоГруппировкуСтрок();
	
	ТабДокумент.Вывести(ОбластьШапкаСоответствияСумм, 0);
	
	РезультатПроверкиСумм = УчетНДСИАкциза.ПроверитьСоответствиеСуммСчетовФактурВыданныхИДокументовОтгрузки(НачалоПериода, КонецДня(КонецПериода), мСписокСтруктурныхЕдиниц,?(ОтбиратьПоКонтрагенту, КонтрагентДляОтбора, Неопределено), Истина);
	Если НЕ РезультатПроверкиСумм.Пустой() Тогда
		
		
		ИтогоСуммаНДС 				= 0;
		ИтогоСуммаНДСОтгрузки	 	= 0;		
		ИтогоСуммаБезНДС			= 0;
		ИтогоСуммаБезНДСОтгрузки	= 0;		
		
		ВыборкаСсылка = РезультатПроверкиСумм.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСсылка.Следующий() Цикл
			СуммаНДСОтклонение = ВыборкаСсылка.СуммаНДС - ВыборкаСсылка.СуммаНДСОтгрузки;
			СуммаБезНДСОтклонение = ВыборкаСсылка.СуммаБезНДС - ВыборкаСсылка.СуммаБезНДСОтгрузки;
			Если СуммаНДСОтклонение = 0 И СуммаБезНДСОтклонение  = 0 Тогда 
				Продолжить
			КонецЕсли;
			
			ОбластьСтрокаСсылкаСоответствияСумм.Параметры.Заполнить(ВыборкаСсылка);
			
			ОбластьСтрокаСсылкаСоответствияСумм.Параметры.СуммаНДСОтклонение = СуммаНДСОтклонение;
			ОбластьСтрокаСсылкаСоответствияСумм.Параметры.СуммаБезНДСОтклонение = СуммаБезНДСОтклонение;
			ТабДокумент.Вывести(ОбластьСтрокаСсылкаСоответствияСумм, 1);				
			// Итоги на уровне счета фактуры
			ИтогоСуммаНДС 				= ИтогоСуммаНДС + ВыборкаСсылка.СуммаНДС;
			ИтогоСуммаНДСОтгрузки	 	= ИтогоСуммаНДСОтгрузки + ВыборкаСсылка.СуммаНДСОтгрузки;
			
			ИтогоСуммаБезНДС			= ИтогоСуммаБезНДС + ВыборкаСсылка.СуммаБезНДС;
			ИтогоСуммаБезНДСОтгрузки	= ИтогоСуммаБезНДСОтгрузки + ВыборкаСсылка.СуммаБезНДСОтгрузки;			
			
			// Детали по документам отгрузки
			ВыборкаРегистратор = ВыборкаСсылка.Выбрать();
			Пока ВыборкаРегистратор.Следующий() Цикл
				ОбластьСтрокаРегистраторСоответствияСумм.Параметры.Заполнить(ВыборкаРегистратор);
				ТабДокумент.Вывести(ОбластьСтрокаРегистраторСоответствияСумм, 2);							
			КонецЦикла;
		КонецЦикла;
		ТабДокумент.ЗакончитьАвтоГруппировкуСтрок();
		
		ОбластьИтогиСоответствияСумм.Параметры.СуммаНДС 			= ИтогоСуммаНДС;
		ОбластьИтогиСоответствияСумм.Параметры.СуммаНДСОтгрузки 	= ИтогоСуммаНДСОтгрузки;
		ОбластьИтогиСоответствияСумм.Параметры.СуммаНДСОтклонение 	= ИтогоСуммаНДС - ИтогоСуммаНДСОтгрузки;
		
		ОбластьИтогиСоответствияСумм.Параметры.СуммаБезНДС 			 = ИтогоСуммаБезНДС;
		ОбластьИтогиСоответствияСумм.Параметры.СуммаБезНДСОтгрузки 	 = ИтогоСуммаБезНДСОтгрузки;
		ОбластьИтогиСоответствияСумм.Параметры.СуммаБезНДСОтклонение = ИтогоСуммаБезНДС - ИтогоСуммаБезНДСОтгрузки;
		
		ТабДокумент.Вывести(ОбластьИтогиСоответствияСумм);						
	Иначе
		ТабДокумент.Вывести(ОбластьОшибокНеВыявлено);				
	КонецЕсли;	
	ТабДокумент.ПоказатьУровеньГруппировокСтрок(0);
	
	ТабДокумент.Показать();																   
КонецПроцедуры


// Функция вызывается из тела процедуры "Сформировать".
// Функция осуществляет первичную обработку результатов запроса к движениям регистра НДСПродажи,
// и по данным запроса заполняет таблицу значений, на основании которой, будет напечатана книга продаж
// Параметры:
// 	Результат - ссылка на результаты выполнения запроса к данным регистра "НДСПродажи"
//  МоментОпределенияНалоговойБазыНДС
Функция ПодготовитьОтчетКВыводуНаПечать()
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("ПустойАкциз", Справочники.СтавкиАкциза.ПустаяСсылка());
	Запрос.УстановитьПараметр("Организации", мСписокСтруктурныхЕдиниц);	
	Запрос.УстановитьПараметр("Контрагент", КонтрагентДляОтбора);
	
	ПризнакОтбораПоКонтрагенту = ОтбиратьПоКонтрагенту И НЕ КонтрагентДляОтбора = Справочники.Контрагенты.ПустаяСсылка();
	
	//SM
	Запрос.УстановитьПараметр("ТипОперации", 	ТипОперации);	
	ПризнакОтбораПоТипуОперации = ОтбиратьПоТипуОперации И НЕ ТипОперации = Справочники.ТипыОпераций.ПустаяСсылка();
	//SM
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СписокСчетовФактурТекст = "";
	
	Если ИсключатьПрекратившиеДействие Тогда
		СписокСчетовФактурТекст = СписокСчетовФактурТекст + "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СчетаФактурыПрекратившиеДействиеСрезПоследних.СчетФактура.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ПрекратившиеДействие
		|ИЗ
		|	РегистрСведений.СчетаФактурыПрекратившиеДействие.СрезПоследних(&КонецПериода,
		|                                                                СчетФактура.Организация В (&Организации)
		|                                                                И СчетФактура.Дата МЕЖДУ &НачалоПериода И &КонецПериода) КАК СчетаФактурыПрекратившиеДействиеСрезПоследних
		|;";		
	КонецЕсли;
	
	СписокСчетовФактурТекст = СписокСчетовФактурТекст + "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетФактураВыданный.Ссылка,
	|	СчетФактураВыданный.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	СчетФактураВыданный.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов
	|ПОМЕСТИТЬ СчетФактураВыданный
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.Проведен
	|	И СчетФактураВыданный.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СчетФактураВыданный.Организация В (&Организации)" +?(ПризнакОтбораПоТипуОперации," И СчетФактураВыданный.ДокументОснование.ТипОперации в Иерархии(&ТипОперации)","") + ?(ПризнакОтбораПоКонтрагенту, " И (СчетФактураВыданный.Контрагент В ИЕРАРХИИ (&Контрагент) ИЛИ СчетФактураВыданный.Покупатель В ИЕРАРХИИ (&Контрагент))",""); 	                          
	
	Если ИсключатьПрекратившиеДействие Тогда
		СписокСчетовФактурТекст = СписокСчетовФактурТекст + "
		|	И НЕ СчетФактураВыданный.Ссылка В(ВЫБРАТЬ ВТ_ПрекратившиеДействие.Ссылка ИЗ ВТ_ПрекратившиеДействие)";
	КонецЕсли;

	Запрос.Текст = СписокСчетовФактурТекст;
	Запрос.Выполнить();	
	
	Запрос.Текст   =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеТЧ.Ссылка КАК СФ,
	|	ДанныеТЧ.Ссылка.Дата КАК Дата,
	|	ДанныеТЧ.Ссылка.Номер КАК Номер,
    |	ДанныеТЧ.Ссылка.ДатаСовершенияОборотаПоРеализации КАК ДатаОборота,
	| 	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(ЭСФ.ДатаВыпискиНаБумажномНосителе, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1)
    |			ТОГДА ""Обоими способами""
    |		ИНАЧЕ ДанныеТЧ.Ссылка.СпособВыставления
	|	КОНЕЦ КАК СпособВыписки,
	|	ВЫБОР КОГДА ДанныеТЧ.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовФактур.Дополнительный) Тогда ИСТИНА Иначе ЛОЖЬ Конец Дополнительная,
	|	ДанныеТЧ.Ссылка.Контрагент КАК Контрагент,
	|	ДанныеТЧ.Ссылка.Покупатель КАК Покупатель,
	|	ДанныеТЧ.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДанныеТЧ.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ДанныеТЧ.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|	ДанныеТЧ.Ссылка.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ДанныеТЧ.Ссылка.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	ВЫРАЗИТЬ(ДанныеТЧ.Ссылка.Комментарий КАК СТРОКА(250)) КАК Комментарий,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ДанныеТЧ.Ссылка.Покупатель.НаименованиеПолное КАК СТРОКА(1000)) = """"
	|			ТОГДА ДанныеТЧ.Ссылка.Покупатель.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(ДанныеТЧ.Ссылка.Покупатель.НаименованиеПолное КАК СТРОКА(1000))
	|	КОНЕЦ КАК ПокупательНаименование,
	|	ЕСТЬNULL(ДанныеТЧ.СтавкаНДС, 0) КАК СтавкаНДС,
	|	ДанныеТЧ.СтавкаАкциза КАК СтавкаАкциза,
	|	ДанныеТЧ.СуммаНДС КАК СуммаНДС,
	|	ДанныеТЧ.СуммаАкциза КАК СуммаАкциза,
	|	ВЫБОР
	|		КОГДА ДанныеТЧ.Ссылка.УчитыватьНДС
	|				И ДанныеТЧ.Ссылка.СуммаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеТЧ.Ссылка.УчитыватьАкциз
	|							И ДанныеТЧ.Ссылка.СуммаВключаетАкциз
	|						ТОГДА ДанныеТЧ.Сумма - ДанныеТЧ.СуммаНДС
	|					ИНАЧЕ ДанныеТЧ.Сумма - ДанныеТЧ.СуммаНДС + ДанныеТЧ.СуммаАкциза
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДанныеТЧ.Ссылка.УчитыватьАкциз
	|						И ДанныеТЧ.Ссылка.СуммаВключаетАкциз
	|					ТОГДА ДанныеТЧ.Сумма
	|				ИНАЧЕ ДанныеТЧ.Сумма + ДанныеТЧ.СуммаАкциза
	|			КОНЕЦ
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ДанныеТЧ.Ссылка.УчитыватьНДС
	|				И ДанныеТЧ.Ссылка.СуммаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеТЧ.Ссылка.УчитыватьАкциз
	|							И ДанныеТЧ.Ссылка.СуммаВключаетАкциз
	|						ТОГДА ДанныеТЧ.Сумма
	|					ИНАЧЕ ДанныеТЧ.Сумма + ДанныеТЧ.СуммаАкциза
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДанныеТЧ.Ссылка.УчитыватьАкциз
	|						И ДанныеТЧ.Ссылка.СуммаВключаетАкциз
	|					ТОГДА ДанныеТЧ.Сумма + ДанныеТЧ.СуммаНДС
	|				ИНАЧЕ ДанныеТЧ.Сумма + ДанныеТЧ.СуммаНДС + ДанныеТЧ.СуммаАкциза
	|			КОНЕЦ
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ЕСТЬNULL(ДанныеОснований.Сумма, 0)) КАК Сумма,
	|		ДанныеОснований.СтавкаНДС КАК СтавкаНДС,
	|		ВЫБОР
	|			КОГДА ДанныеОснований.СтавкаАкциза = &ПустойАкциз
	|					ИЛИ ДанныеОснований.СтавкаАкциза ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ ДанныеОснований.СтавкаАкциза
	|		КОНЕЦ КАК СтавкаАкциза,
	|		СУММА(ЕСТЬNULL(ДанныеОснований.СуммаНДС, 0)) КАК СуммаНДС,
	|		СУММА(ЕСТЬNULL(ДанныеОснований.СуммаАкциза, 0)) КАК СуммаАкциза,
	|		СчетФактураВыданный.Ссылка КАК Ссылка
	|	ИЗ
	|		СчетФактураВыданный КАК СчетФактураВыданный
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СчетФактураВыданныйТовары.СтавкаНДС КАК СтавкаНДС,
	|			СчетФактураВыданныйТовары.СтавкаАкциза КАК СтавкаАкциза,
	|			СчетФактураВыданныйТовары.Сумма КАК Сумма,
	|			СчетФактураВыданныйТовары.СуммаНДС КАК СуммаНДС,
	|			СчетФактураВыданныйТовары.СуммаАкциза КАК СуммаАкциза,
	|			СчетФактураВыданныйТовары.Ссылка КАК Ссылка
	|		ИЗ
	|			Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ГДЕ
	|			СчетФактураВыданныйТовары.Ссылка В (ВЫБРАТЬ СчетФактураВыданный.Ссылка ИЗ СчетФактураВыданный)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СчетФактураВыданныйУслуги.СтавкаНДС,
	|			0,
	|			СчетФактураВыданныйУслуги.Сумма,
	|			СчетФактураВыданныйУслуги.СуммаНДС,
	|			0,
	|			СчетФактураВыданныйУслуги.Ссылка
	|		ИЗ
	|			Документ.СчетФактураВыданный.Услуги КАК СчетФактураВыданныйУслуги
	|		ГДЕ
	|			СчетФактураВыданныйУслуги.Ссылка В (ВЫБРАТЬ СчетФактураВыданный.Ссылка ИЗ СчетФактураВыданный)					  
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СчетФактураВыданныйОС.СтавкаНДС,
	|			0,
	|			СчетФактураВыданныйОС.Сумма,
	|			СчетФактураВыданныйОС.СуммаНДС,
	|			0,
	|			СчетФактураВыданныйОС.Ссылка
	|		ИЗ
	|			Документ.СчетФактураВыданный.ОС КАК СчетФактураВыданныйОС
	|		ГДЕ
	|			СчетФактураВыданныйОС.Ссылка В (ВЫБРАТЬ СчетФактураВыданный.Ссылка ИЗ СчетФактураВыданный)					  					                                                                                                                              	                  
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СчетФактураВыданныйНМА.СтавкаНДС,
	|			0,
	|			СчетФактураВыданныйНМА.Сумма,
	|			СчетФактураВыданныйНМА.СуммаНДС,
	|			0,
	|			СчетФактураВыданныйНМА.Ссылка
	|		ИЗ
	|			Документ.СчетФактураВыданный.НМА КАК СчетФактураВыданныйНМА
	|		ГДЕ
	|			СчетФактураВыданныйНМА.Ссылка В (ВЫБРАТЬ СчетФактураВыданный.Ссылка ИЗ СчетФактураВыданный)) КАК ДанныеОснований
	|	ПО СчетФактураВыданный.Ссылка = ДанныеОснований.Ссылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СчетФактураВыданный.Ссылка,
	|		ДанныеОснований.СтавкаНДС,
	|		ВЫБОР
	|			КОГДА ДанныеОснований.СтавкаАкциза = &ПустойАкциз
	|					ИЛИ ДанныеОснований.СтавкаАкциза ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ ДанныеОснований.СтавкаАкциза
	|		КОНЕЦ) КАК ДанныеТЧ	
	| ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭСФ КАК ЭСФ
	|		ПО ДанныеТЧ.Ссылка = ЭСФ.СчетФактура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Номер
	|ИТОГИ
	|	СУММА(СуммаНДС),
	|	СУММА(СуммаАкциза),
	|	СУММА(СуммаБезНДС),
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ";
	
	Если ГруппироватьПоКонтрагентам Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОБЩИЕ", ?(ГруппироватьПоСпособуВыписки, "Покупатель, СпособВыписки, СФ,СтавкаНДС","Покупатель, СФ,СтавкаНДС"));
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО
						|ПокупательНаименование, ");
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОБЩИЕ", ?(ГруппироватьПоСпособуВыписки, "СпособВыписки, СФ,СтавкаНДС", "СФ,СтавкаНДС"));
	КонецЕсли; 
	
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ВыводСтроки(ТабличныйДокумент,СтрокаДокумента, Секция,СекцияДоговора, СекцияКом, ДопСекция,ДопСекцияДоговора, ДопСекцияКом, НомерПП)
	
	//группировка по документу Счет-фактура
	ВыборкаПоДокументамСФ = СтрокаДокумента.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	УстановитьПараметр = истина;
	Пока ВыборкаПоДокументамСФ.Следующий() Цикл    				
		
		//по Ставке 		
		ВыборкаПоДокументамВРазрезеНДС =ВыборкаПоДокументамСФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоДокументамВРазрезеНДС.Следующий() Цикл
			ДокументОснование = СформироватьСписокДокументовОснований(ВыборкаПоДокументамВРазрезеНДС.СФ);
			Если УстановитьПараметр Тогда
				Секция.Параметры.ДокументОтгрузки = ДокументОснование;
				Секция.Параметры.СписокОснований  = СписокОснований;
				
				
				Секция.Параметры.СчетФактура = ВыборкаПоДокументамВРазрезеНДС.СФ;
				Если ВыводитьНомераБезНулейИПрефиксов Тогда					
					НомерСФ = ПолучитьНомерБезПрефиксаНаПечать(ВыборкаПоДокументамВРазрезеНДС.СФ, глСписокПрефиксовУзлов);
				Иначе
					НомерСФ = СокрЛП(ВыборкаПоДокументамВРазрезеНДС.Номер);
				КонецЕсли;
				
				
				Секция.Параметры.НомерПП	 = НомерПП;
				
				Секция.Параметры.Номер = НомерСФ + " / " + Формат(ВыборкаПоДокументамВРазрезеНДС.Дата, "ДФ=dd.MM.yy"); 
				Секция.Параметры.Дата  = Формат(ВыборкаПоДокументамВРазрезеНДС.Дата, "ДФ=dd.MM.yy");
				Секция.Параметры.ДатаОборота  = Формат(ВыборкаПоДокументамВРазрезеНДС.ДатаОборота, "ДФ=dd.MM.yy");
				
				СведенияОПокупателе    = ОбщегоНазначения.СведенияОЮрФизЛице(ВыборкаПоДокументамВРазрезеНДС.Покупатель, ВыборкаПоДокументамВРазрезеНДС.Дата);									  
				
				Секция.Параметры.Покупатель			    = ВыборкаПоДокументамВРазрезеНДС.Покупатель;	
				//Секция.Параметры.ПокупательНаименование = ВыборкаПоДокументамВРазрезеНДС.Покупатель.Наименование +", "+ ОбщегоНазначения.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес,");
				Секция.Параметры.ПокупательНаименование = ВыборкаПоДокументамВРазрезеНДС.Покупатель.Наименование;
				//Секция.Параметры.РННПокупателя 			= ОбщегоНазначения.ОписаниеОрганизации(СведенияОПокупателе, "РНН,", Ложь);
				Секция.Параметры.БИНПокупателя 			= ОбщегоНазначения.ОписаниеОрганизации(СведенияОПокупателе, "БИН_ИИН,", Ложь);
				
				
				Секция.Параметры.СуммаБезНДС = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту( ВыборкаПоДокументамВРазрезеНДС.СуммаБезНДС, ВыборкаПоДокументамВРазрезеНДС.ВалютаДокумента, мВалютаРегламентированногоУчета, 
				ВыборкаПоДокументамВРазрезеНДС.КурсВзаиморасчетов, 1, ВыборкаПоДокументамВРазрезеНДС.КратностьВзаиморасчетов = 1, 1); 
				
				Секция.Параметры.СтавкаНДС   = ВыборкаПоДокументамВРазрезеНДС.СтавкаНДС;												 
				
				//Секция.Параметры.СтавкаАкциза = ВыборкаПоДокументамВРазрезеНДС.СтавкаАкциза;												 
				
				Секция.Параметры.СуммаНДС    = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту( ВыборкаПоДокументамВРазрезеНДС.СуммаНДС, ВыборкаПоДокументамВРазрезеНДС.ВалютаДокумента, мВалютаРегламентированногоУчета, 
				ВыборкаПоДокументамВРазрезеНДС.КурсВзаиморасчетов, 1, ВыборкаПоДокументамВРазрезеНДС.КратностьВзаиморасчетов = 1, 1); 
				
				//Секция.Параметры.СуммаАкциза    = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту( ВыборкаПоДокументамВРазрезеНДС.СуммаАкциза, ВыборкаПоДокументамВРазрезеНДС.ВалютаДокумента, мВалютаРегламентированногоУчета, 
				//ВыборкаПоДокументамВРазрезеНДС.КурсВзаиморасчетов, 1, ВыборкаПоДокументамВРазрезеНДС.КратностьВзаиморасчетов = 1, 1); 								
				
				Секция.Параметры.Сумма  	 = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту( ВыборкаПоДокументамВРазрезеНДС.Сумма, ВыборкаПоДокументамВРазрезеНДС.ВалютаДокумента, мВалютаРегламентированногоУчета, 
				ВыборкаПоДокументамВРазрезеНДС.КурсВзаиморасчетов, 1, ВыборкаПоДокументамВРазрезеНДС.КратностьВзаиморасчетов = 1, 1); 
				
				ИтогоСуммаБезНДС = ИтогоСуммаБезНДС + Секция.Параметры.СуммаБезНДС;
				ИтогоСуммаНДС 	 = ИтогоСуммаНДС 	+ Секция.Параметры.СуммаНДС;
				//ИтогоСуммаАкциза = ИтогоСуммаАкциза	+ Секция.Параметры.СуммаАкциза;
				ИтогоСумма		 = ИтогоСумма		+ Секция.Параметры.Сумма;
				ТабличныйДокумент.Вывести(Секция,2);
				Если ОтображатьДоговора Тогда
					СекцияДоговора.Параметры.ДоговорКонтрагента = ВыборкаПоДокументамВРазрезеНДС.ДоговорКонтрагента;
					ТабличныйДокумент.Присоединить(СекцияДоговора,2); 					
				КонецЕсли;
				
				Если ОтображатьКомментарий Тогда				
					СекцияКом.Параметры.Комментарий = ВыборкаПоДокументамВРазрезеНДС.Комментарий;
					ТабличныйДокумент.Присоединить(СекцияКом,2);
				КонецЕсли;
				
				НомерПП = НомерПП +1;
				
			Иначе
				ДопСекция.Параметры.ДокументОтгрузки = ДокументОснование;
				ДопСекция.Параметры.СписокОснований  = СписокОснований;
				ДопСекция.Параметры.СуммаБезНДС = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту( ВыборкаПоДокументамВРазрезеНДС.СуммаБезНДС, ВыборкаПоДокументамВРазрезеНДС.ВалютаДокумента, мВалютаРегламентированногоУчета, 
				ВыборкаПоДокументамВРазрезеНДС.КурсВзаиморасчетов, 1, ВыборкаПоДокументамВРазрезеНДС.КратностьВзаиморасчетов = 1, 1); 
				
				ДопСекция.Параметры.СтавкаНДС   = ВыборкаПоДокументамВРазрезеНДС.СтавкаНДС;												 
				
				//ДопСекция.Параметры.СтавкаАкциза   = ВыборкаПоДокументамВРазрезеНДС.СтавкаАкциза;												 
				
				ДопСекция.Параметры.СуммаНДС    = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту( ВыборкаПоДокументамВРазрезеНДС.СуммаНДС, ВыборкаПоДокументамВРазрезеНДС.ВалютаДокумента, мВалютаРегламентированногоУчета, 
				ВыборкаПоДокументамВРазрезеНДС.КурсВзаиморасчетов, 1, ВыборкаПоДокументамВРазрезеНДС.КратностьВзаиморасчетов = 1, 1); 
				
				//ДопСекция.Параметры.СуммаАкциза    = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту( ВыборкаПоДокументамВРазрезеНДС.СуммаАкциза, ВыборкаПоДокументамВРазрезеНДС.ВалютаДокумента, мВалютаРегламентированногоУчета, 
				//ВыборкаПоДокументамВРазрезеНДС.КурсВзаиморасчетов, 1, ВыборкаПоДокументамВРазрезеНДС.КратностьВзаиморасчетов = 1, 1); 								
				
				
				
				ДопСекция.Параметры.Сумма  	 	= ОбщегоНазначения.ПересчитатьИзВалютыВВалюту( ВыборкаПоДокументамВРазрезеНДС.Сумма, ВыборкаПоДокументамВРазрезеНДС.ВалютаДокумента, мВалютаРегламентированногоУчета, 
				ВыборкаПоДокументамВРазрезеНДС.КурсВзаиморасчетов, 1, ВыборкаПоДокументамВРазрезеНДС.КратностьВзаиморасчетов = 1, 1); 
				
				
				
				ИтогоСуммаБезНДС = ИтогоСуммаБезНДС + ДопСекция.Параметры.СуммаБезНДС;
				ИтогоСуммаНДС 	 = ИтогоСуммаНДС 	+ ДопСекция.Параметры.СуммаНДС;
				//ИтогоСуммаАкциза = ИтогоСуммаАкциза	+ ДопСекция.Параметры.СуммаАкциза;
				ИтогоСумма		 = ИтогоСумма		+ ДопСекция.Параметры.Сумма;
				ТабличныйДокумент.Вывести(ДопСекция,2);	
				
				Если ОтображатьДоговора Тогда
					ТабличныйДокумент.Присоединить(ДопСекцияДоговора,2); 					
				КонецЕсли;
				
				Если ОтображатьКомментарий Тогда				
					ТабличныйДокумент.Присоединить(ДопСекцияКом,2);
				КонецЕсли;  				
			КонецЕсли;
			УстановитьПараметр = Ложь;
		КонецЦикла;					
	КонецЦикла;
	
	
КонецПроцедуры;


#КонецЕсли