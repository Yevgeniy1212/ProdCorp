////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//	ЕстьОшибки - флаг того, что при формировании произошли ошибки
//
Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки) Экспорт
	
	Если ТипЗнч(ПараметрОтбора) = Тип("СправочникСсылка.Организации") Тогда 
		Организация = ПараметрОтбора;
	Иначе
		ЕстьОшибки = Истина;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	СписокОфицерскихЗваний	=	Новый СписокЗначений;
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.МладшийЛейтенант);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Лейтенант);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.СтаршийЛейтенант);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Капитан);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Майор);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Подполковник);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.Полковник);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.ГенералМайор);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.ГенералЛейтенант);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.ГенералПолковник);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.ГенералАрмии);
	СписокОфицерскихЗваний.Добавить(Справочники.ВоинскиеЗвания.МаршалРеспубликиКазахстан);
	
	СписокГодныеКСлужбе = Новый СписокЗначений;
	СписокГодныеКСлужбе.Добавить(Перечисления.ГодностьКВоеннойСлужбе.Годен);
	СписокГодныеКСлужбе.Добавить(Перечисления.ГодностьКВоеннойСлужбе.ГоденКНестроевой);
	
	Запрос.УстановитьПараметр("ДатаАктуальности",	ДатаАктуальности);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Офицеры",			СписокОфицерскихЗваний);
	Запрос.УстановитьПараметр("Военнообязанный",	Перечисления.ОтношениеКВоинскойОбязанности.Военнообязанный);
	Запрос.УстановитьПараметр("СписокГодныеКСлужбе",СписокГодныеКСлужбе);
	Запрос.УстановитьПараметр("Призывник",			Перечисления.ОтношениеКВоинскойОбязанности.Призывник);
	Запрос.УстановитьПараметр("НеРаботает",			Перечисления.СостоянияРаботникаОрганизации.НеРаботает);
	Запрос.УстановитьПараметр("Руководители",		Перечисления.КатегорииДолжностейДляВоинскогоУчета.Руководители);
	Запрос.УстановитьПараметр("Специалисты",		Перечисления.КатегорииДолжностейДляВоинскогоУчета.СпециалистыСХ);
	Запрос.УстановитьПараметр("ДругиеСлужащие",		Перечисления.КатегорииДолжностейДляВоинскогоУчета.ДругиеСлужащие);
	Запрос.УстановитьПараметр("Рабочие",			Перечисления.КатегорииДолжностейДляВоинскогоУчета.РабочиеСХ);
	Запрос.УстановитьПараметр("Уволен",				Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("ВнутреннееСовместительство", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	
	ТекстОсновногоЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(1) КАК ВсегоРаботающих,
	|	СУММА(ВЫБОР
	|			КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВсегоВЗапасе,
	|	СУММА(ВЫБОР
	|			КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|					И ВУ.Звание.ОбщевойсковоеЗвание В (&Офицеры)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОфицеровВЗапасе,
	|	СУММА(ВЫБОР
	|			КОГДА ВУ.ЗабронированОрганизацией = &Организация
	|					И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВсегоВЗапасеЗабронировано,
	|	СУММА(ВЫБОР
	|			КОГДА ВУ.ЗабронированОрганизацией = &Организация
	|					И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|					И ВУ.Звание.ОбщевойсковоеЗвание В (&Офицеры)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОфицеровЗабронировано,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ВУ.ЗабронированОрганизацией = &Организация)
	|					И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|					И (НЕ ВУ.НаличиеМобпредписания)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НезабронированноБезМобпредписаний,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ВУ.ЗабронированОрганизацией = &Организация)
	|					И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|					И ВУ.НаличиеМобпредписания
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НезабронированноСМобпредписанием,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ВУ.ЗабронированОрганизацией = &Организация)
	|					И ВУ.ОтношениеКВоинскойОбязанности = &Военнообязанный
	|					И ВУ.НаличиеМобпредписания
	|					И ВУ.Звание.ОбщевойсковоеЗвание В (&Офицеры)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НезабронированноОфицеровСМобпредписанием,
	|	СУММА(ВЫБОР
	|			КОГДА ВУ.ОтношениеКВоинскойОбязанности = &Призывник
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Призывников
	|ИЗ
	|	(ВЫБРАТЬ
	|		РаботникиОрганизацииСрезПоследних.Должность КАК Должность,
	|		РаботникиОрганизацииСрезПоследних.Сотрудник.Физлицо КАК ФизЛицо
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				Организация = &ГоловнаяОрганизация
	|					И Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство) КАК РаботникиОрганизацииСрезПоследних
	|	ГДЕ
	|		РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение = &Организация
	|		И РаботникиОрганизацииСрезПоследних.ПричинаИзмененияСостояния <> &Уволен) КАК РаботникиОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВоинскийУчет.СрезПоследних(&ДатаАктуальности, ) КАК ВУ
	|		ПО РаботникиОрганизации.ФизЛицо = ВУ.Физлицо";
	
	ДокументРезультат.Очистить();
	Макет 			= ПолучитьМакет("Донесение");
	ОбластьШапка 	= Макет.ПолучитьОбласть("ШапкаФормы");
	ОбластьШапка.Параметры.НаДату				= "По состоянию на " + Формат(ДатаАктуальности, "ДЛФ=DD");
	ОбластьШапка.Параметры.Организация			= "по " + Организация.Наименование;
	ДокументРезультат.Присоединить(ОбластьШапка);
	
	Запрос.Текст = ТекстОсновногоЗапроса + "
	|ИТОГИ ПО ОБЩИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка	=	РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ОбластьСтрока 	= Макет.ПолучитьОбласть("СтрокаФормы");
		ОбластьСтрока.Параметры.ОрганизацияНаименование							= Организация.Наименование;
		ОбластьСтрока.Параметры.ВсегоРаботающих									= Выборка.ВсегоРаботающих;
		ОбластьСтрока.Параметры.ВсегоВЗапасе 									= Выборка.ВсегоВЗапасе;
		ОбластьСтрока.Параметры.ОфицеровВЗапасе 								= Выборка.ОфицеровВЗапасе;
		ОбластьСтрока.Параметры.ВсегоВЗапасеЗабронировано 						= Выборка.ВсегоВЗапасеЗабронировано;
		ОбластьСтрока.Параметры.ОфицеровЗабронировано 							= Выборка.ОфицеровЗабронировано;
		Если (Выборка.ВсегоВЗапасе <> 0) И (Выборка.ВсегоВЗапасе <> NULL) тогда
			ОбластьСтрока.Параметры.ЗабронированоПроцент				= (Выборка.ВсегоВЗапасеЗабронировано / Выборка.ВсегоВЗапасе)*100;
			ОбластьСтрока.Параметры.НезабронированноСМобпредписаниемПроцент	= (Выборка.НезабронированноСМобпредписанием / Выборка.ВсегоВЗапасе)*100;
		КонецЕсли;
		ОбластьСтрока.Параметры.НезабронированноСМобпредписанием 				= Выборка.НезабронированноСМобпредписанием;
		ОбластьСтрока.Параметры.НезабронированноОфицеровСМобпредписанием		= Выборка.НезабронированноОфицеровСМобпредписанием;
		ОбластьСтрока.Параметры.Призывников										= Выборка.Призывников;
		ДокументРезультат.Присоединить(ОбластьСтрока);
	КонецЕсли;
	
	ОбластьПодвал	=	Макет.ПолучитьОбласть("ПодвалФормы");
	Исполнитель	=	"";
	СтруктураОтветственныхЛиц = ОбщегоНазначения.ОтветственныеЛицаОрганизаций(Организация,ДатаАктуальности,Исполнитель);
	ОбластьПодвал.Параметры.ДолжностьРуководителя = СтруктураОтветственныхЛиц.РуководительДолжность;
	ОбластьПодвал.Параметры.ФИОРуководителя		  = СтруктураОтветственныхЛиц.Руководитель;
	
	
	Если ТипЗнч(ОбластьПодвал)	=	Тип("ТабличныйДокумент")	тогда
		ДокументРезультат.Присоединить(ОбластьПодвал);
	КонецЕсли;
	
	//Параметры документа
	ДокументРезультат.Автомасштаб 			= Истина;
	ДокументРезультат.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.Защита              	= Ложь;
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, "Донесение о количестве граждан пребывающих в запасе", Строка(глТекущийПользователь));
	
КонецПроцедуры

#КонецЕсли
