#Если Клиент Тогда
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит таблицу значений - состав показателей отчета.
Перем мТаблицаСоставПоказателей Экспорт; // (отчет)

// Хранит структуру - состав показателей отчета,
// значение которых автоматически заполняется по учетным данным.
Перем мСтруктураВариантыЗаполнения Экспорт; // (отчет)

// Хранит имя выбранной формы отчета
Перем мВыбраннаяФорма Экспорт; // (отчет)

// Хранит признак скопированной формы.
Перем мСкопированаФорма Экспорт; // (отчет)

// Хранит ссылку на документ, хранящий данные отчета
Перем мСохраненныйДок Экспорт; // (отчет)

// Следующие переменные хранят границы
// периода построения отчета
Перем мДатаНачалаПериодаОтчета Экспорт; // (отчет)
//хранит дату конца периода
Перем мДатаКонцаПериодаОтчета  Экспорт; // (отчет)

//хранит версию формы
Перем мВерсияФормы Экспорт; // (отчет)

//хранит полное имя файла
Перем мПолноеИмяФайлаВнешнейОбработки Экспорт; // (отчет)
//хранит флаг запрета на запись
Перем мЗаписьЗапрещена Экспорт; // (отчет)
//хранит интервал автосохранения
Перем мИнтервалАвтосохранения Экспорт; // (отчет)
//хранит таблицу страниц на печать
Перем мТаблицаСтраницНаПечать Экспорт; // (отчет)
// хранит количество страниц
Перем ВсегоСтраниц Экспорт; // (отчет)

// Хранит ФИО исполнителя 
Перем мИсполнитель Экспорт; // (отчет)

// Хранит список структурных единиц, по которым строится отчет
Перем мСписокСтруктурныхЕдиниц Экспорт; // (отчет)

// Хранит признак ведения учета по видам планов закупок
Перем ВедениеУчетаПоВидамПлановЗакупок Экспорт; // экспортная переменная

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Функция получает основные сведения о выбранной организации
// 
Функция ЗаполнитьСведенияОбОрганизации()Экспорт
	
	Если (Организация  = Неопределено) ИЛИ (Организация = гз_ОбщегоНазначения.мПустоеЗначениеТипа("СправочникСсылка.Организации")) Тогда
		Возврат 0;
	КонецЕсли;
	
	// Составляем список данных, необходимых для вывода в отчетную форму
	Сведения = Новый СписокЗначений;
			
	Сведения.Добавить("", "НаимЮЛПол"); // Полное название организации
			
	Сведения.Добавить("", "КодПоОКПО"); // ОКПО
			
	Сведения.Добавить("", "АдрЮР"); // Юридический адрес
	
	Сведения.Добавить("", "ТелОрганизации"); // Телефон организации
	
	Сведения.Добавить("", "ФИОБухКраткое"); // ФИО гл. бухгалтера
	
	Сведения.Добавить("", "ФИОРукКраткое"); // ФИО руководителя
	
	// Теперь получаем данные из глобальной общей функции
	ОргСведения = гз_ОбщегоНазначения.мПолучитьСведенияОбОрганизации(Организация, ТекущаяДата(), Сведения);
	
	Возврат ОргСведения;
	
КонецФункции // ЗаполнитьСведенияОбОрганизации


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ 

мСписокСтруктурныхЕдиниц = Новый СписокЗначений;

ОписаниеТиповСтрока15  = гз_ОбщегоНазначения.мПолучитьОписаниеТиповСтроки(15);
ОписаниеТиповСтрока50  = гз_ОбщегоНазначения.мПолучитьОписаниеТиповСтроки(50);

// Таблица значений хранит состав показателей отчета.
// В колонках таблицы хранятся следующие данные:
//    - имя поля табличного документа;
//    - код показатели по составу показателей;
//    - код показателя по форме (имя области табличного документа);
//    - признак многострочности;
//    - тип данных показателя.
//
мТаблицаСоставПоказателей    = Новый ТаблицаЗначений;
мТаблицаСоставПоказателей.Колонки.Добавить("ИмяПоляТаблДокумента",    ОписаниеТиповСтрока50);
мТаблицаСоставПоказателей.Колонки.Добавить("КодПоказателяПоСоставу",  ОписаниеТиповСтрока50);
мТаблицаСоставПоказателей.Колонки.Добавить("КодПоказателяПоФорме",    ОписаниеТиповСтрока50);
мТаблицаСоставПоказателей.Колонки.Добавить("ПризнакМногострочности",    ОписаниеТиповСтрока15);
мТаблицаСоставПоказателей.Колонки.Добавить("ТипДанныхПоказателя",     ОписаниеТиповСтрока15);
мТаблицаСоставПоказателей.Колонки.Добавить("КодПоказателяПоСтруктуре",ОписаниеТиповСтрока50);

мСтруктураВариантыЗаполнения = Новый Структура;

мТаблицаСтраницНаПечать = Новый ТаблицаЗначений;
мТаблицаСтраницНаПечать.Колонки.Добавить("ПолеТабличногоДокумента");
мТаблицаСтраницНаПечать.Колонки.Добавить("ИмяЛиста");
мТаблицаСтраницНаПечать.Колонки.Добавить("ИмяЛистаДляЗаписи");

Если гз_ОбщегоНазначения.АвтономныйРежимРаботы() Тогда
	мИсполнитель = глТекущийПользователь.Наименование;
Иначе
	мИсполнитель = глТекущийПользователь.ФизЛицо.Наименование;
КонецЕсли;

#КонецЕсли

ВедениеУчетаПоВидамПлановЗакупок = Константы.гз_ВестиУчетПоВидамПлановЗакупок.Получить();

