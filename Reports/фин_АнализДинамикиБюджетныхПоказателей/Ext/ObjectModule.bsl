Перем СохраненнаяНастройка Экспорт;

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ИспользоватьОграниченияПоБюджетам")=Истина Тогда
		Если НЕ фин_ПривилегированныеПроцедуры.РазрешеноПолучениеОтчета(ФинансовыйПоказатель,Сценарий,РазрезыУчета.Выгрузить()) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("У пользователя недостаточно прав!");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
    Поле = "СуммаУпр";
	Если АнализируемыйРесурс=Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма Тогда
		Поле = "ВалютнаяСумма";
	ИначеЕсли АнализируемыйРесурс=Перечисления.фин_РесурсыДанныхБюджетирования.СуммаСценария Тогда
		Поле = "СуммаСценария";
 	ИначеЕсли АнализируемыйРесурс=Перечисления.фин_РесурсыДанныхБюджетирования.Количество Тогда
		Поле = "Количество";
	КонецЕсли;
	ПредставлениеОтбора = "";
	СтруктураУсловий = фин_УправлениеОтчетамиБюджетирование.ПолучитьТекстУсловийОтбора(РазрезыУчета);
    Условие = СтруктураУсловий.Фильтр;
	Запрос = Новый Запрос;
	Для Каждого СтрокаОтбор Из РазрезыУчета Цикл
		Если СтрокаОтбор.Использование И ЗначениеЗаполнено(СтрокаОтбор.ВидСравнения) И СтрокаОтбор.Путь<>"" Тогда
			Если ТипЗнч(СтрокаОтбор.Значение) = Тип("СписокЗначений") Тогда
				ТекстЗначение = "";
				Для Каждого Элемент Из СтрокаОтбор.Значение Цикл
					ТекстЗначение=ТекстЗначение+?(ТекстЗначение="","",",")+Строка(Элемент);
				КонецЦикла;
			Иначе
				ТекстЗначение = Строка(СтрокаОтбор.Значение);
			КонецЕсли;
			Запрос.УстановитьПараметр("ПараметрОтбора"+Строка(РазрезыУчета.Индекс(СтрокаОтбор)),СтрокаОтбор.Значение);
			ПредставлениеОтбора = ПредставлениеОтбора+?(ПредставлениеОтбора="","",", ")+СтрокаОтбор.ПолеОтбора+" "+Строка(СтрокаОтбор.ВидСравнения)+" "+ТекстЗначение;
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(Сценарий) Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	НАЧАЛОПЕРИОДА(ОборотыБюджетовОбороты.ПериодПланирования, "+Строка(Периодичность)+") КАК Период,
			|	ОборотыБюджетовОбороты."+Поле+"Оборот КАК Величина
			|ИЗ
			|	РегистрНакопления.фин_ОборотыБюджетов.Обороты(
			|			,
			|			,
			|			,
			|			Сценарий = &Сценарий
			|				И ФинансовыйПоказатель = &ФинансовыйПоказатель
			|				И ПериодПланирования >= &Начало
			|				И ПериодПланирования <= &Конец "+?(СтруктураУсловий.Фильтр="",""," И ")+СтруктураУсловий.Фильтр+") КАК ОборотыБюджетовОбороты
			|  "+?(СтруктураУсловий.Условие="",""," ГДЕ ")+СтруктураУсловий.Условие+"
			|УПОРЯДОЧИТЬ ПО
			|	Период";
	Иначе
		МассивРегистров = фин_ОбщегоНазначенияВызовСервераПовтИсп.РегистрыФактическихДанных();
		Для Каждого ИмяРегистра Из МассивРегистров Цикл
			Запрос.Текст = Запрос.Текст+?(МассивРегистров.Найти(ИмяРегистра)=0,"","
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|") +"
			|ВЫБРАТЬ
			|	НАЧАЛОПЕРИОДА(ОборотыБюджетовОбороты.ПериодПланирования, "+Строка(Периодичность)+") КАК Период,
			|	ОборотыБюджетовОбороты."+Поле+"Оборот КАК Величина
			|ИЗ
			|	РегистрНакопления."+ИмяРегистра+".Обороты(
			|			,
			|			,
			|			,
			|			Сценарий = &Сценарий
			|				И ФинансовыйПоказатель = &ФинансовыйПоказатель
			|				И ПериодПланирования >= &Начало
			|				И ПериодПланирования <= &Конец "+?(СтруктураУсловий.Фильтр="",""," И ")+СтруктураУсловий.Фильтр+") КАК ОборотыБюджетовОбороты
			|  "+?(СтруктураУсловий.Условие="",""," ГДЕ ")+СтруктураУсловий.Условие;
		КонецЦикла;
		Запрос.Текст = Запрос.Текст+"
			|УПОРЯДОЧИТЬ ПО
			|	Период";
	КонецЕсли;

	Запрос.УстановитьПараметр("Начало", 				НачалоИнтервала);
	Запрос.УстановитьПараметр("Конец", 					КонецИнтервала);
	Запрос.УстановитьПараметр("Сценарий", 				Сценарий);
	Запрос.УстановитьПараметр("ФинансовыйПоказатель", 	ФинансовыйПоказатель);

	ТаблицаВычислений = Запрос.Выполнить().Выгрузить();
    ТаблицаВычислений.Колонки.Добавить("ТекстПериод",Новый ОписаниеТипов("Строка"));
    ТаблицаВычислений.Колонки.Добавить("ПриростБазисный",Новый ОписаниеТипов("Число"));
    ТаблицаВычислений.Колонки.Добавить("ПриростЦепной",Новый ОписаниеТипов("Число"));
    ТаблицаВычислений.Колонки.Добавить("ТемпРостаБазисный",Новый ОписаниеТипов("Число"));
    ТаблицаВычислений.Колонки.Добавить("ТемпРостаЦепной",Новый ОписаниеТипов("Число"));
    ТаблицаВычислений.Колонки.Добавить("ТемпПриростаБазисный",Новый ОписаниеТипов("Число"));
    ТаблицаВычислений.Колонки.Добавить("ТемпПриростаЦепной",Новый ОписаниеТипов("Число"));
    ТаблицаВычислений.Колонки.Добавить("КоличествоПериодов",Новый ОписаниеТипов("Число"));
	Базис = 0;
	
	СтрокиБазис = ТаблицаВычислений.НайтиСтроки(Новый Структура("Период",БазисныйПериод));
	Если СтрокиБазис.Количество()=0 Тогда
		Сообщить("Не найдено значений в периоде, указанном в качестве базисного!");
	Иначе
		Базис = СтрокиБазис[0].Величина;
	КонецЕсли;

	ПроизведениеКоэффициентовРоста = 1;
	РасчетДляСреднего = 0;
	Для Каждого СтрокаВычислений Из ТаблицаВычислений Цикл
		НомерСтроки = ТаблицаВычислений.Индекс(СтрокаВычислений)+1;
		СтрокаВычислений.ТекстПериод 			= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьПериодСтрокой(СтрокаВычислений.Период,Периодичность);
		СтрокаВычислений.ПриростБазисный 		= СтрокаВычислений.Величина - Базис;
		СтрокаВычислений.ПриростЦепной 			= ?(НомерСтроки=1,0,СтрокаВычислений.Величина-ТаблицаВычислений[НомерСтроки-2].Величина);
		СтрокаВычислений.ТемпРостаБазисный 		= ?(Базис = 0,0,СтрокаВычислений.Величина/Базис)*100;
		СтрокаВычислений.ТемпРостаЦепной 		= ?(НомерСтроки = 1,0,?(ТаблицаВычислений[НомерСтроки-2].Величина=0,0,СтрокаВычислений.Величина/ТаблицаВычислений[НомерСтроки-2].Величина))*100;
		СтрокаВычислений.ТемпПриростаБазисный	= СтрокаВычислений.ТемпРостаБазисный - 100;
		СтрокаВычислений.ТемпПриростаЦепной 	= ?(НомерСтроки=1,0,СтрокаВычислений.ТемпРостаЦепной - 100);
		Если НомерСтроки>1 Тогда
			ПроизведениеКоэффициентовРоста = ПроизведениеКоэффициентовРоста * ?(ТаблицаВычислений[НомерСтроки-2].Величина=0,0,СтрокаВычислений.Величина/ТаблицаВычислений[НомерСтроки-2].Величина);
		КонецЕсли;
		Если НомерСтроки<ТаблицаВычислений.Количество()-1 Тогда
			СледующийПериод = ТаблицаВычислений[НомерСтроки].Период;
			Инд = 0;
			Если СледующийПериод>СтрокаВычислений.Период Тогда
				Инд = 1;
				Пока фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(СтрокаВычислений.Период,Периодичность,Инд)<СледующийПериод Цикл
					Инд = Инд + 1;
				КонецЦикла;
			КонецЕсли;
			СтрокаВычислений.КоличествоПериодов =Инд;
		Иначе
			СтрокаВычислений.КоличествоПериодов = 1;
		КонецЕсли;
		РасчетДляСреднего = РасчетДляСреднего + СтрокаВычислений.КоличествоПериодов * СтрокаВычислений.Величина;
	КонецЦикла;
	
	СтруктураСводныхПоказателей = Новый Структура("СреднийАбсолютныйПрирост,ТемпРостаЗаПериод,СреднийТемпРоста,ТемпПриростаЗаПериод,СреднийТемпПрироста,КоэффициентВариации,АбсолютноеЗначениепроцентаПрироста,СреднийУровень",0,0,0,0,0,0,0,0);
	
	Если ТаблицаВычислений.Количество()>0 Тогда
		КоличествоПериодов = ТаблицаВычислений.Количество();
		СтруктураСводныхПоказателей.СреднийАбсолютныйПрирост = ?(КоличествоПериодов=1,ТаблицаВычислений[0].Величина,(ТаблицаВычислений[КоличествоПериодов-1].Величина-ТаблицаВычислений[0].Величина)/(КоличествоПериодов-1));
		СтруктураСводныхПоказателей.АбсолютноеЗначениепроцентаПрироста = ТаблицаВычислений[0].Величина/100;
		СтруктураСводныхПоказателей.СреднийТемпРоста = ?(КоличествоПериодов=1,1,Pow(ПроизведениеКоэффициентовРоста,1/(КоличествоПериодов-1)))*100;
		СтруктураСводныхПоказателей.СреднийТемпПрироста = СтруктураСводныхПоказателей.СреднийТемпРоста - 100;
		СтруктураСводныхПоказателей.ТемпРостаЗаПериод = ?(ТаблицаВычислений[0].Величина=0,0,ТаблицаВычислений[КоличествоПериодов-1].Величина/ТаблицаВычислений[0].Величина)*100;
		СтруктураСводныхПоказателей.ТемпПриростаЗаПериод = СтруктураСводныхПоказателей.ТемпРостаЗаПериод - 100;
		СтруктураСводныхПоказателей.СреднийУровень = ?(ТаблицаВычислений.Итог("КоличествоПериодов")=0,0,РасчетДляСреднего/ТаблицаВычислений.Итог("КоличествоПериодов"));
		КоэффициентВариации = 0;
		Сумма1 = 0;
		Для Каждого СтрокаВычислений Из ТаблицаВычислений Цикл
			Сумма1 = Сумма1 + Pow((СтрокаВычислений.Величина - СтруктураСводныхПоказателей.СреднийУровень),2);
		КонецЦикла;
		Если КоличествоПериодов>0 И СтруктураСводныхПоказателей.СреднийУровень<>0 Тогда
			КоэффициентВариации = (Sqrt(Сумма1/КоличествоПериодов)/СтруктураСводныхПоказателей.СреднийУровень)*100;
		КонецЕсли;
		СтруктураСводныхПоказателей.КоэффициентВариации = КоэффициентВариации;
	КонецЕсли;
	
	Макет = ПолучитьМакет("Макет");
	ДокументРезультат.Очистить();
	ОбластьШапка = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка.Параметры.Показатель = ФинансовыйПоказатель;
	ОбластьШапка.Параметры.ОбластьДанных = Строка(АнализируемыйРесурс)+" за период с "+фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьПериодСтрокой(НачалоИнтервала,Периодичность)+" по "+фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьПериодСтрокой(КонецИнтервала,Периодичность)+", базисный период: "+фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьПериодСтрокой(БазисныйПериод,Периодичность)+"
	|	Данные: "+?(Сценарий.Пустая(),"фактические",Сценарий.Наименование)+?(ПредставлениеОтбора="","",", по разрезу: "+ПредставлениеОтбора);
	ДокументРезультат.Вывести(ОбластьШапка);
	Ресурс = "Величина";
	Для Каждого ЗначениеПеречисления Из Метаданные.Перечисления.фин_ПоказателиАнализаДинамики.ЗначенияПеречисления Цикл
		Если Перечисления.фин_ПоказателиАнализаДинамики[ЗначениеПеречисления.Имя]=РесурсДиаграммы Тогда
			Ресурс = ЗначениеПеречисления.Имя;
		КонецЕсли;
	КонецЦикла;
	Если СДиаграммой Тогда
		ОбластьДиаграмма = Макет.ПолучитьОбласть("Диаграмма");
		Диаграмма = ОбластьДиаграмма.Рисунки[0].Объект;
		Точка=Диаграмма.УстановитьТочку("СуммаПродажи");
		Точка.Текст = Строка(Перечисления.фин_ПоказателиАнализаДинамики[Ресурс]);
		Для Каждого СтрокаВычислений Из ТаблицаВычислений Цикл
			Серия=Диаграмма.УстановитьСерию(СтрокаВычислений.Период);
			Серия.Текст = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьПериодСтрокой(СтрокаВычислений.Период,Периодичность);
			Диаграмма.УстановитьЗначение(Точка,Серия,СтрокаВычислений[Ресурс]);
		КонецЦикла;
		Диаграмма.ОбластьПостроения.ОтображатьТаблицуДанных=Истина;
		ДокументРезультат.Вывести(ОбластьДиаграмма);
	КонецЕсли;
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
	Для Каждого СтрокаТаблицы Из ТаблицаВычислений Цикл
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ОбластьСтрока.Параметры.Заполнить(СтрокаТаблицы);
		ДокументРезультат.Вывести(ОбластьСтрока);
	КонецЦикла;
	ОбластьСредние = Макет.ПолучитьОбласть("СредниеПоказатели");
	ОбластьСредние.Параметры.Заполнить(СтруктураСводныхПоказателей);
	ДокументРезультат.Вывести(ОбластьСредние);
	Если КоличествоПрогнозируемыхПериодов > 0 И ТаблицаВычислений.Количество()>0 Тогда
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыПрогноз");
		ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
		Для Инд = 1 По КоличествоПрогнозируемыхПериодов Цикл
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицыПрогноз");
			ОбластьСтрока.Параметры.Период = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(КонецИнтервала,Периодичность,Инд),Периодичность);
			ОбластьСтрока.Параметры.ТекстПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьПериодСтрокой(ОбластьСтрока.Параметры.Период,Периодичность);
			ОбластьСтрока.Параметры.Величина = ТаблицаВычислений[ТаблицаВычислений.Количество()-1].Величина * Pow(СтруктураСводныхПоказателей.СреднийТемпРоста/100,Инд);
			//ОбластьСтрока.Параметры.Величина = ТаблицаВычислений[ТаблицаВычислений.Количество()-1].Величина+ Инд * СтруктураСводныхПоказателей.СреднийТемпПрироста * СтруктураСводныхПоказателей.АбсолютноеЗначениепроцентаПрироста;
			ДокументРезультат.Вывести(ОбластьСтрока);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
