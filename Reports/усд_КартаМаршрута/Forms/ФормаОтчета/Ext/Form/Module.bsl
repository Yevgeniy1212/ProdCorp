////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Сформировать(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ФормироватьОтчет();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ФормироватьОтчет()
	
	// заполнение прав подписи
	ПраваПодписи = Новый ТаблицаЗначений;
	ПраваПодписи.Колонки.Добавить("Этап");
	ПраваПодписи.Колонки.Добавить("Пользователь");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПраваПодписиНаЭтапахМаршрутов.Этап,
	               |	ПраваПодписиНаЭтапахМаршрутов.Пользователь
	               |ИЗ
	               |	РегистрСведений.усд_ПраваПодписиНаЭтапахМаршрутов КАК ПраваПодписиНаЭтапахМаршрутов
	               |ГДЕ
	               |	ПраваПодписиНаЭтапахМаршрутов.Маршрут = &Маршрут";
	
	Запрос.УстановитьПараметр("Маршрут", Отчет.Маршрут);
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НС = ПраваПодписи.Добавить();
		ЗаполнитьЗначенияСвойств(НС,ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
	// создание таблицы координат условий
	КоординатыУсловий = Новый ТаблицаЗначений;
	КоординатыУсловий.Колонки.Добавить("Условие");
	КоординатыУсловий.Колонки.Добавить("Идентификатор");
	КоординатыУсловий.Колонки.Добавить("х1");
	КоординатыУсловий.Колонки.Добавить("х2");
	КоординатыУсловий.Колонки.Добавить("у1");
	КоординатыУсловий.Колонки.Добавить("у2");
	
	// настройка цветов
	ЦветЛинии					= Новый Цвет(46,139,87);
	ЦветБлока					= Новый Цвет(192,220,192);
	ЦветТекста					= Новый Цвет(0,100,0);
	ЦветЛинииСлужебногоБлока 	= Новый Цвет(255,140,0);
	ЦветСлужебногоБлока 		= Новый Цвет(255,236,139);
	ЦветТекстаСлужебногоБлока 	= Новый Цвет(178,34,34);
	
	
	Если ТекущийРежимЗапуска()=РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение Тогда
		// отрисовка карты
		фин_Защита.НарисоватьКарту(	Отчет.Маршрут, 
									ПолеГеографическойСхемы, 
									КоординатыУсловий,
									ПраваПодписи,
									Истина,
									ЦветБлока,
									ЦветЛинии,
									ЦветТекста,
									ЦветСлужебногоБлока,
									ЦветЛинииСлужебногоБлока,
									ЦветТекстаСлужебногоБлока,
									Отчет.Маршрут.ВысотаБлока,
									Отчет.Маршрут.ШиринаБлока,
									Отчет.Маршрут.РасстояниеМеждуЭтапами,
									Отчет.Маршрут.СимволовВСтроке,
									Отчет.Маршрут.КоличествоСтрок);
	Иначе
		// отрисовка карты
		фин_Защита.НарисоватьКартуТабличныйДокумент(	Отчет.Маршрут, 
									ПолеКарты, 
									КоординатыУсловий,
									ПраваПодписи,
									Истина,
									ЦветБлока,
									ЦветЛинии,
									ЦветТекста,
									ЦветСлужебногоБлока,
									ЦветЛинииСлужебногоБлока,
									ЦветТекстаСлужебногоБлока,
									Отчет.Маршрут.ВысотаБлока,
									Отчет.Маршрут.ШиринаБлока,
									Отчет.Маршрут.РасстояниеМеждуЭтапами,
									Отчет.Маршрут.СимволовВСтроке,
									Отчет.Маршрут.КоличествоСтрок,
									Отчет.Маршрут.Масштаб);
		ПолеЛегенды.ОтображатьЗаголовки	= Ложь;
		ПолеЛегенды.ОтображатьСетку		= Ложь;
		ПолеЛегенды.ТолькоПросмотр		= Истина;
		ПолеЛегенды.Защита				= Истина;
		Справочники.усд_МаршрутыДвиженияДокументов.НастроитьЛегенду(ПолеЛегенды,Истина,ЦветТекстаСлужебногоБлока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеКартыОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ТекущийРежимЗапуска()=РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение Тогда
		 Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.ГруппаПолеГеографическойСхемы;
	Иначе
		 Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.ГруппаТабличныйДокумент
	КонецЕсли;
КонецПроцедуры
