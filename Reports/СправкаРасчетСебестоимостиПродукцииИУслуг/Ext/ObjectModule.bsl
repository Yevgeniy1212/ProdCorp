#Если Клиент Тогда
	
Перем НП Экспорт;

// переменные для управления отображения структурного подразделения
Перем мОтображатьСтруктурныеПодразделения Экспорт;

Функция СформироватьТекстЗапроса(ВариантОтчета)
		
		Текст	= "ВЫБРАТЬ
		     	  |	РасчетСебестоимостиПродукции.ПериодРасчета КАК ПериодРасчета,
		     	  |	РасчетСебестоимостиПродукции.СчетУчета КАК СчетУчета,
		     	  |	РасчетСебестоимостиПродукции.Подразделение КАК Подразделение,
		     	  |	РасчетСебестоимостиПродукции.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		     	  |	РасчетСебестоимостиПродукции.Продукция КАК Продукция,
		     	  |	РасчетСебестоимостиПродукции.СуммаПлан КАК СуммаПлан,
		     	  |	ВЫБОР
		     	  |		КОГДА РасчетСебестоимостиПродукции.ВидУчета = &ВидУчетаНУ
		     	  |			ТОГДА РасчетСебестоимостиПродукции.СуммаПлан
		     	  |		ИНАЧЕ 0
		     	  |	КОНЕЦ КАК СуммаПланНУ,
		     	  |	ВЫБОР
		     	  |		КОГДА РасчетСебестоимостиПродукции.ВидУчета.Родитель = &ВидУчетаПР
		     	  |			ТОГДА РасчетСебестоимостиПродукции.СуммаПлан
		     	  |		ИНАЧЕ 0
		     	  |	КОНЕЦ КАК СуммаПланПР,
		     	  |	ВЫБОР
		     	  |		КОГДА РасчетСебестоимостиПродукции.ВидУчета = &ВидУчетаВР
		     	  |			ТОГДА РасчетСебестоимостиПродукции.СуммаПлан
		     	  |		ИНАЧЕ 0
		     	  |	КОНЕЦ КАК СуммаПланВР,
		     	  |	РасчетСебестоимостиПродукции.Сумма КАК Сумма,
		     	  |	ВЫБОР
		     	  |		КОГДА РасчетСебестоимостиПродукции.ВидУчета = &ВидУчетаНУ
		     	  |			ТОГДА РасчетСебестоимостиПродукции.Сумма
		     	  |		ИНАЧЕ 0
		     	  |	КОНЕЦ КАК СуммаНУ,
		     	  |	ВЫБОР
		     	  |		КОГДА РасчетСебестоимостиПродукции.ВидУчета.Родитель = &ВидУчетаПР
		     	  |			ТОГДА РасчетСебестоимостиПродукции.Сумма
		     	  |		ИНАЧЕ 0
		     	  |	КОНЕЦ КАК СуммаПР,
		     	  |	ВЫБОР
		     	  |		КОГДА РасчетСебестоимостиПродукции.ВидУчета = &ВидУчетаВР
		     	  |			ТОГДА РасчетСебестоимостиПродукции.Сумма
		     	  |		ИНАЧЕ 0
		     	  |	КОНЕЦ КАК СуммаВР,
		     	  |	РасчетСебестоимостиПродукции.СуммаНЗП КАК СуммаНЗП,
		     	  |	ВЫБОР
		     	  |		КОГДА РасчетСебестоимостиПродукции.ВидУчета = &ВидУчетаНУ
		     	  |			ТОГДА РасчетСебестоимостиПродукции.СуммаНЗП
		     	  |		ИНАЧЕ 0
		     	  |	КОНЕЦ КАК СуммаНЗПНУ,
		     	  |	ВЫБОР
		     	  |		КОГДА РасчетСебестоимостиПродукции.ВидУчета.Родитель = &ВидУчетаПР
		     	  |			ТОГДА РасчетСебестоимостиПродукции.СуммаНЗП
		     	  |		ИНАЧЕ 0
		     	  |	КОНЕЦ КАК СуммаНЗППР,
		     	  |	ВЫБОР
		     	  |		КОГДА РасчетСебестоимостиПродукции.ВидУчета = &ВидУчетаВР
		     	  |			ТОГДА РасчетСебестоимостиПродукции.СуммаНЗП
		     	  |		ИНАЧЕ 0
		     	  |	КОНЕЦ КАК СуммаНЗПВР
		     	  |ИЗ
		     	  |	РегистрСведений.РасчетСебестоимостиПродукции КАК РасчетСебестоимостиПродукции
		     	  |ГДЕ
		     	  |	РасчетСебестоимостиПродукции.Активность  ";
				  Если  ВариантОтчета = 1 Тогда 
					  Текст = Текст + "
					  | И (РасчетСебестоимостиПродукции.ВидУчета = Значение(Справочник.ВидыУчетаНУ.ПустаяСсылка)
					  |	ИЛИ  РасчетСебестоимостиПродукции.ВидУчета Есть Null) ";
				  Иначе
					  Текст = Текст + "
					  |	И РасчетСебестоимостиПродукции.ВидУчета В ИЕРАРХИИ(&ВидУчета) ";
				  КонецЕсли;							
				  
					Текст = Текст + "		  
		     	  |	И РасчетСебестоимостиПродукции.Организация = &Организация
		     	  |	И РасчетСебестоимостиПродукции.ПериодРасчета МЕЖДУ &ДатаНач И &ДатаКон
		     	  |	И РасчетСебестоимостиПродукции.СтруктурноеПодразделение = &СтруктурноеПодразделение
		     	  |
		     	  |УПОРЯДОЧИТЬ ПО
		     	  |	Подразделение,
		     	  |	НоменклатурнаяГруппа,
		     	  |	Продукция
		     	  |ИТОГИ
		     	  |	СУММА(СуммаПлан),
		     	  |	СУММА(СуммаПланНУ),
		     	  |	СУММА(СуммаПланПР),
		     	  |	СУММА(СуммаПланВР),
		     	  |	СУММА(Сумма),
		     	  |	СУММА(СуммаНУ),
		     	  |	СУММА(СуммаПР),
		     	  |	СУММА(СуммаВР),
		     	  |	СУММА(СуммаНЗП),
		     	  |	СУММА(СуммаНЗПНУ),
		     	  |	СУММА(СуммаНЗППР),
		     	  |	СУММА(СуммаНЗПВР)
		     	  |ПО
		     	  |	ПериодРасчета,
		     	  |	СчетУчета,
		     	  |	Подразделение,
		     	  |	НоменклатурнаяГруппа,
		     	  |	Продукция";	
				  
		Возврат Текст;
		
КонецФункции
	
// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
// 	
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь, НачалоПодписи, ПоказыватьПодписи) Экспорт
	
	Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
		Предупреждение("Дата начала периода не может быть больше даты окончания периода");
		Возврат;
	КонецЕсли;
	НачалоПериода = НачалоДня(ДатаНач);
	КонецПериода  = КонецДня(ДатаКон);
	
	ДокументРезультат.Очистить();
	
	Макет      = ПолучитьМакет("Отчет");
	МакетОбщий = ПолучитьОбщийМакет("СправкаРасчет");
	
	ЗаголовокОтчета = МакетОбщий.ПолучитьОбласть("Заголовок");
	
	
	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",     НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",     КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", СтруктурноеПодразделение);
	Запрос.УстановитьПараметр("ВидУчетаПР",  Справочники.ВидыУчетаНУ.ПР);
	Запрос.УстановитьПараметр("ВидУчетаНУ",  Справочники.ВидыУчетаНУ.НУ);
	Запрос.УстановитьПараметр("ВидУчетаВР",  Справочники.ВидыУчетаНУ.ВР);
	
	ОграниченияПоПостроителюОтчета = Отчеты_БК.ПолучитьТекстОграниченийПоПостроителюОтчета(ПостроительОтчета, Запрос);
	
	Если Не ПустаяСтрока(ОграниченияПоПостроителюОтчета) Тогда
		
		ОграниченияПоПостроителюОтчета = " И " + ОграниченияПоПостроителюОтчета;
		ОграниченияПоПостроителюОтчета = СтрЗаменить(ОграниченияПоПостроителюОтчета, "Субконто1", "Подразделение");
		ОграниченияПоПостроителюОтчета = СтрЗаменить(ОграниченияПоПостроителюОтчета, "Субконто2", "НоменклатурнаяГруппа");
		
	КонецЕсли;
	
	Запрос.Текст = СформироватьТекстЗапроса(ВариантОтчета);
	
	Запрос.Текст  = СтрЗаменить(Запрос.Текст, "Активность","Активность " + ОграниченияПоПостроителюОтчета);
	
	Если ВариантОтчета = 1  Тогда   		
		
	ИначеЕсли 	ВариантОтчета = 2 Тогда
		Запрос.УстановитьПараметр("ВидУчета",   Справочники.ВидыУчетаНУ.НУ);
		
	Иначе
		ВидУчета = Новый Массив;
		ВидУчета.Добавить(Справочники.ВидыУчетаНУ.НУ);
		ВидУчета.Добавить(Справочники.ВидыУчетаНУ.ПР);
		ВидУчета.Добавить(Справочники.ВидыУчетаНУ.ВР);
		Запрос.УстановитьПараметр("ВидУчета",   ВидУчета);
	КонецЕсли;	
	
	Если ВариантОтчета = 3 Тогда
		Запрос.Текст  = СтрЗаменить(Запрос.Текст, "И РасчетСебестоимостиПродукции.ВидУчета В Иерархии(&ВидУчета)","И РасчетСебестоимостиПродукции.ВидУчета В Иерархии(&ВидУчета) И РасчетСебестоимостиПродукции.ВидУчета <> Значение(Справочник.ВидыУчетаНУ.ПустаяСсылка)");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	ОбластьШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
	ОбластьПодСтрока        = Макет.ПолучитьОбласть("ПодСтрока");
	ОбластьПодСтрокаРазницы = Макет.ПолучитьОбласть("ПодСтрокаРазницы");
	ОбластьСтрокаРазницы    = Макет.ПолучитьОбласть("СтрокаРазницы");
	ОбластьИтого            = Макет.ПолучитьОбласть("Итого");
	ОбластьИтогоРазницы     = Макет.ПолучитьОбласть("ИтогоРазницы");
	ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
	ОбластьРазницыВсего     = Макет.ПолучитьОбласть("ВсегоРазницы");
	ОбластьОкончаниеТаблицы = Макет.ПолучитьОбласть("ОкончаниеТаблицы");
	ОбластьПодвал           = МакетОбщий.ПолучитьОбласть("Подвал");
	
	ВыборкаПериод = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Всего = 0;
	ВсегоПериодБаза = 0;
	ВсегоПериодБазаПР = 0;
	ВсегоПериодБазаВР = 0;
	Пока ВыборкаПериод.Следующий() Цикл
		
		ЗаголовокОтчета.Параметры.Период              = "" + ПредставлениеПериода(НачалоМесяца(ВыборкаПериод.ПериодРасчета), КонецМесяца(ВыборкаПериод.ПериодРасчета), "ФП = Истина");
		СведенияОбОрганизации = ОбщегоНазначения.СведенияОЮрФизЛице(Организация);
		НазваниеОрганизации = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");;
		ЗаголовокОтчета.Параметры.НазваниеОрганизации = "" + НазваниеОрганизации;
		ЗаголовокОтчета.Параметры.ДатаСоставления     = КонецМесяца(ВыборкаПериод.ПериодРасчета);
		ЗаголовокОтчета.Параметры.НазваниеОтчета      = ?(ВариантОтчета = 2, "Прямые расходы, приходящиеся на стоимость ", "Себестоимость выпущенной продукции и оказанных услуг производственного характера (" + ?(ВариантОтчета = 2, "налоговый учет", "бухгалтерский учет") + ")");
		ДокументРезультат.Вывести(ЗаголовокОтчета);
		
		СтрОтбор = УправлениеОтчетами.СформироватьСтрокуОтборов(ПостроительОтчета.Отбор);
		Если Не ПустаяСтрока(СтрОтбор) Тогда
			ОбластьОтбор = МакетОбщий.ПолучитьОбласть("СтрокаОтбор");
			ОбластьОтбор.Параметры.ТекстПроОтбор = "Отбор: " + СтрОтбор;
			ДокументРезультат.Вывести(ОбластьОтбор);
		КонецЕсли;
		
		// Параметр для показа заголовка
		ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;
		
		ОбластьШапка.Параметры.ТекстРасходов       =   "Производственные расходы";
		ОбластьШапка.Параметры.ТекстСебестоимости  = "Фактическая себестоимость(гр.6 * гр.9)";
		ДокументРезультат.Вывести(ОбластьШапка);
		
		ВыборкаСчет = ВыборкаПериод.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСчет.Следующий() Цикл
			ВыборкаПодразделение = ВыборкаСчет.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаПодразделение.Следующий() Цикл
				ВыборкаНомГруппа = ВыборкаПодразделение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаНомГруппа.Следующий() Цикл
					ПерваяСтрока = Истина;
					ПоказыватьСтрокуИтого = Истина; 
					Выборка = ВыборкаНомГруппа.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					ВсегоБаза = 0;
					ВсегоСумма = 0;
					ВсегоСуммаПР = 0;
					ВсегоСуммаВР = 0;
					
					ВсегоБазаПР = 0;
					ВсегоБазаВР = 0;
					Пока Выборка.Следующий() Цикл
						Если ВариантОтчета = 3 Тогда
							ВсегоБаза  = ВсегоБаза + Выборка.СуммаПланНУ;
							ВсегоСумма = ВсегоСумма + Выборка.СуммаПланНУ + Выборка.СуммаНУ;
							
							ВсегоСуммаПР = ВсегоСуммаПР + Выборка.СуммаПланПР + Выборка.СуммаПР;
							ВсегоСуммаВР = ВсегоСуммаВР + Выборка.СуммаПланВР + Выборка.СуммаВР;
							
							ВсегоБазаПР  = ВсегоБазаПР + Выборка.СуммаПланПР;
							ВсегоБазаВР  = ВсегоБазаВР + Выборка.СуммаПланВР;
						Иначе
							ВсегоБаза  = ВсегоБаза + Выборка.СуммаПлан;
							ВсегоСумма = ВсегоСумма + Выборка.СуммаПлан + Выборка.Сумма;
						КонецЕсли;
						
						
					КонецЦикла;
					Выборка = ВыборкаНомГруппа.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока Выборка.Следующий() Цикл
						
						Если ПерваяСтрока Тогда
							Область = ОбластьСтрока;
							ОбластьРазницы = ОбластьСтрокаРазницы;
							Область.Параметры.СчетЗатрат           = ВыборкаНомГруппа.СчетУчета;
							Область.Параметры.Подразделение        = ВыборкаНомГруппа.Подразделение;
							Область.Параметры.НоменклатурнаяГруппа = ВыборкаНомГруппа.НоменклатурнаяГруппа;
							
							Если ВариантОтчета = 3 Тогда										
								Область.Параметры.СуммаНЗП             = ВыборкаНомГруппа.СуммаНЗПНУ + ВыборкаНомГруппа.СуммаНЗППР;
								Область.Параметры.СуммаРасходов        = ВсегоСумма + ВсегоСуммаПР + ВсегоСуммаВР + ВыборкаНомГруппа.СуммаНЗПНУ +  ВыборкаНомГруппа.СуммаНЗППР;
								Область.Параметры.СуммаРасходовБезНЗП  = ВсегоСумма + ВсегоСуммаПР + ВсегоСуммаВР;
							Иначе
								Область.Параметры.СуммаНЗП             = ВыборкаНомГруппа.СуммаНЗП;
								Область.Параметры.СуммаРасходов        = ВсегоСумма + ВыборкаНомГруппа.СуммаНЗП;
								Область.Параметры.СуммаРасходовБезНЗП  = ВсегоСумма;
							КонецЕсли; 	
							
						Иначе
							Область =  ОбластьПодСтрока;
							ОбластьРазницы = ОбластьПодСтрокаРазницы;
						КонецЕсли;
						
						Область.Параметры.Продукция            = УправлениеПроизводством.ВыводНаименованияВыпуска(Выборка.Продукция, Ложь);
						Если ВариантОтчета = 3 Тогда
							Область.Параметры.Коэффициент          = ?(ВсегоБаза + ВсегоБазаПР + ВсегоБазаВР = 0, 0, (Выборка.СуммаПланНУ + Выборка.СуммаПланПР + Выборка.СуммаПланВР) / (ВсегоБаза + ВсегоБазаПР + ВсегоБазаВР));
							Область.Параметры.СуммаБазы            = Выборка.СуммаПланНУ + Выборка.СуммаПланПР + Выборка.СуммаПланВР;
							Область.Параметры.СуммаОтклонения      = Выборка.СуммаНУ + Выборка.СуммаПР + Выборка.СуммаВР;
							Область.Параметры.Сумма                = (Выборка.СуммаНУ + Выборка.СуммаПланНУ) + (Выборка.СуммаПР + Выборка.СуммаПланПР) + (Выборка.СуммаВР + Выборка.СуммаПланВР);
							//ПоказыватьСтрокуИтого                  = Не (Выборка.СуммаПланНУ = ВсегоБаза); 
							ВсегоПериодБаза = ВсегоПериодБаза +  Выборка.СуммаПланНУ +Выборка.СуммаПланПР + Выборка.СуммаПланВР; 								
							ВсегоПериодБазаПР = ВсегоПериодБазаПР +  Выборка.СуммаПланПР; 								
							ВсегоПериодБазаВР = ВсегоПериодБазаВР +  Выборка.СуммаПланВР; 								
						Иначе
							
							Область.Параметры.Коэффициент          = ?(ВсегоБаза = 0, 0, Выборка.СуммаПлан / ВсегоБаза);
							Область.Параметры.СуммаБазы            = Выборка.СуммаПлан;
							Область.Параметры.СуммаОтклонения      = Выборка.Сумма;
							Область.Параметры.Сумма                = Выборка.Сумма + Выборка.СуммаПлан;
							//ПоказыватьСтрокуИтого                  = Не (Выборка.СуммаПлан = ВсегоБаза); 
							ВсегоПериодБаза = ВсегоПериодБаза +  Выборка.СуммаПлан;
						КонецЕсли;
						
						ДокументРезультат.Вывести(Область);
						
						Если ВариантОтчета = 3 Тогда
							Если ПерваяСтрока Тогда
								ОбластьРазницы.Параметры.СуммаРасходов        = ПоказатьРазницы("ПР", ВсегоСуммаПР + ВыборкаНомГруппа.СуммаНЗППР);
								ОбластьРазницы.Параметры.СуммаРасходовБезНЗП  = ПоказатьРазницы("ПР", ВсегоСуммаПР);
								ОбластьРазницы.Параметры.СуммаНЗП             = ПоказатьРазницы("ПР", ВыборкаНомГруппа.СуммаНЗППР);
								
							КонецЕсли;
							ОбластьРазницы.Параметры.Сумма                = ПоказатьРазницы("ПР", Выборка.СуммаПР + Выборка.СуммаПланПР);
							
							ОбластьРазницы.Параметры.Коэффициент          = ПоказатьРазницы("ПР",?(ВсегоБазаПР = 0, 0, Выборка.СуммаПланПР / ВсегоБазаПР));
							ОбластьРазницы.Параметры.СуммаБазы            = ПоказатьРазницы("ПР",Выборка.СуммаПланПР);
							ОбластьРазницы.Параметры.СуммаОтклонения      = ПоказатьРазницы("ПР", Выборка.СуммаПР);
							
							
							Если Не ВсегоСуммаПР = 0 ИЛИ Не Выборка.СуммаНЗППР = 0 Тогда
								ДокументРезультат.Вывести(ОбластьРазницы);
							КонецЕсли;
							Если ПерваяСтрока Тогда
								ОбластьРазницы.Параметры.СуммаРасходов        = ПоказатьРазницы("ВР", ВсегоСуммаВР + ВыборкаНомГруппа.СуммаНЗПВР);
								ОбластьРазницы.Параметры.СуммаРасходовБезНЗП  = ПоказатьРазницы("ВР", ВсегоСуммаВР);
								ОбластьРазницы.Параметры.СуммаНЗП             = ПоказатьРазницы("ВР", ВыборкаНомГруппа.СуммаНЗПВР);
							КонецЕсли;
							ОбластьРазницы.Параметры.Сумма                = ПоказатьРазницы("ВР", Выборка.СуммаВР + Выборка.СуммаПланВР);
							
							ОбластьРазницы.Параметры.Коэффициент          = ПоказатьРазницы("ВР",1);
							ОбластьРазницы.Параметры.СуммаБазы            = ПоказатьРазницы("ВР",Выборка.СуммаПланВР);
							ОбластьРазницы.Параметры.СуммаОтклонения      = ПоказатьРазницы("ВР", Выборка.СуммаВР);
							
							
							Если Не ВсегоСуммаВР = 0  ИЛИ Не ВыборкаНомГруппа.СуммаНЗПВР = 0 Тогда
								ДокументРезультат.Вывести(ОбластьРазницы);
							КонецЕсли;
						
													
						КонецЕсли;
						
						ПерваяСтрока = Ложь;
					КонецЦикла; 						
					
					Если ПоказыватьСтрокуИтого Тогда
						
						Если ВариантОтчета = 3 Тогда								
							
							ОбластьИтого.Параметры.Сумма           = ВсегоСумма + ВсегоСуммаПР + ВсегоСуммаВР;
							ОбластьИтого.Параметры.СуммаБазы       = ВсегоБаза + ВсегоБазаПР +ВсегоБазаВР;
							ОбластьИтого.Параметры.СуммаОтклонения = (ОбластьИтого.Параметры.Сумма  - ОбластьИтого.Параметры.СуммаБазы);
							ДокументРезультат.Вывести(ОбластьИтого);    								
							Если Не ВсегоСуммаПР = 0  ИЛИ НЕ ВсегоБазаПР = 0  Тогда
								ОбластьИтогоРазницы.Параметры.Сумма           = ПоказатьРазницы("ПР", ВсегоСуммаПР);
								ОбластьИтогоРазницы.Параметры.СуммаБазы       = ПоказатьРазницы("ПР", ВсегоБазаПР);
								//ОбластьИтогоРазницы.Параметры.СуммаОтклонения = ПоказатьРазницы("ПР",(ОбластьИтого.Параметры.Сумма  - ОбластьИтого.Параметры.СуммаБазы));
								
								ДокументРезультат.Вывести(ОбластьИтогоРазницы);
							КонецЕсли;
							Если Не ВсегоСуммаВР = 0  ИЛИ НЕ ВсегоБазаВР = 0  Тогда
								ОбластьИтогоРазницы.Параметры.Сумма           = ПоказатьРазницы("ВР", ВсегоСуммаВР);
								ОбластьИтогоРазницы.Параметры.СуммаБазы       = ПоказатьРазницы("ВР", ВсегоБазаВР);
								//ОбластьИтогоРазницы.Параметры.СуммаОтклонения = ПоказатьРазницы("ВР",(ОбластьИтого.Параметры.Сумма  - ОбластьИтого.Параметры.СуммаБазы));
								
								ДокументРезультат.Вывести(ОбластьИтогоРазницы);
							КонецЕсли; 								
						Иначе 								
							ОбластьИтого.Параметры.Сумма           = ВсегоСумма;
							ОбластьИтого.Параметры.СуммаБазы       = ВсегоБаза;
							ОбластьИтого.Параметры.СуммаОтклонения = ВсегоСумма - ВсегоБаза;
							ДокументРезультат.Вывести(ОбластьИтого);  								
						КонецЕсли;   							
					КонецЕсли;
					
				КонецЦикла;  // НомГруппа
			КонецЦикла;  //  Подразделение
			
			
		КонецЦикла;  //  СчетУчета
		
		Область        =  ОбластьВсего;
		
		Если ВариантОтчета = 3 Тогда
			Область.Параметры.СуммаРасходовБезНЗП  = ВыборкаПериод.СуммаНУ + ВыборкаПериод.СуммаПР + ВыборкаПериод.СуммаВР  + ВсегоПериодБаза;
			Область.Параметры.СуммаНЗП             = ВыборкаПериод.СуммаНЗПНУ + ВыборкаПериод.СуммаНЗППР;
			Область.Параметры.СуммаРасходов        = ВыборкаПериод.СуммаНУ + ВсегоПериодБаза + ВыборкаПериод.СуммаНЗПНУ 
			+ ВыборкаПериод.СуммаНЗППР + ВыборкаПериод.СуммаПР  
			+ ВыборкаПериод.СуммаНЗПВР + ВыборкаПериод.СуммаВР;			
			Область.Параметры.Сумма                = ВыборкаПериод.СуммаНУ + ВыборкаПериод.СуммаПР + ВыборкаПериод.СуммаВР + ВсегоПериодБаза;			                			
		Иначе
			Область.Параметры.СуммаРасходовБезНЗП  = ВыборкаПериод.Сумма + ВсегоПериодБаза;
			Область.Параметры.СуммаНЗП             = ВыборкаПериод.СуммаНЗП;
			Область.Параметры.СуммаРасходов        = ВыборкаПериод.Сумма + ВсегоПериодБаза + ВыборкаПериод.СуммаНЗП;			
			Область.Параметры.Сумма                = ВыборкаПериод.Сумма + ВсегоПериодБаза;
		КонецЕсли;
		
		
		ДокументРезультат.Вывести(Область);
		Если ВариантОтчета = 3 Тогда
			ОбластьРазницы =  ОбластьРазницыВсего;
			ОбластьРазницы.Параметры.СуммаРасходовБезНЗП  = ПоказатьРазницы("ПР", ВыборкаПериод.СуммаПР + ВсегоПериодБазаПР);
			ОбластьРазницы.Параметры.СуммаНЗП             = ПоказатьРазницы("ПР", ВыборкаПериод.СуммаНЗППР);
			ОбластьРазницы.Параметры.СуммаРасходов        = ПоказатьРазницы("ПР", ВыборкаПериод.СуммаПР + ВсегоПериодБазаПР + ВыборкаПериод.СуммаНЗППР);
			ОбластьРазницы.Параметры.Сумма                = ПоказатьРазницы("ПР", ВыборкаПериод.СуммаПР + ВсегоПериодБазаПР);   				
			
			Если НЕ ВыборкаПериод.СуммаПР = 0  ИЛИ НЕ ВсегоПериодБазаПР = 0 Тогда
				ДокументРезультат.Вывести(ОбластьРазницы);
			КонецЕсли;
			
			ОбластьРазницы.Параметры.СуммаРасходовБезНЗП  = ПоказатьРазницы("ВР", ВыборкаПериод.СуммаВР + ВсегоПериодБазаВР);
			ОбластьРазницы.Параметры.СуммаНЗП             = ПоказатьРазницы("ВР", ВыборкаПериод.СуммаНЗПВР);
			ОбластьРазницы.Параметры.СуммаРасходов        = ПоказатьРазницы("ВР", ВыборкаПериод.СуммаВР + ВсегоПериодБазаВР + ВыборкаПериод.СуммаНЗПВР);
			ОбластьРазницы.Параметры.Сумма                = ПоказатьРазницы("ВР", ВыборкаПериод.СуммаВР + ВсегоПериодБазаВР);  
			
			Если Не ВыборкаПериод.СуммаВР = 0 ИЛИ НЕ ВсегоПериодБазаПР = 0 Тогда
				ДокументРезультат.Вывести(ОбластьРазницы);
			КонецЕсли;
		КонецЕсли;
		
		ДокументРезультат.Вывести(ОбластьОкончаниеТаблицы);			
		
		ОбластьПодвал.Параметры.ТекстПримечания = ?(ВариантОтчета = 3, "ПР: Постоянные разницы в оценке стоимости активов и обязательств. ВР: Временные разницы в оценке стоимости активов и обязательств.", "");
		ДокументРезультат.Вывести(ОбластьПодвал);
		
		ВысотаПодписи = ДокументРезультат.Области.Подвал.Низ - ДокументРезультат.Области.Подвал.Верх;
		
		ДокументРезультат.Области.Подвал.Видимость = ПоказыватьПодписи;
		
	КонецЦикла;    // Период	
	
	
	Если Не Результат.Пустой() Тогда
		// Зафиксируем заголовок отчета
		ДокументРезультат.ФиксацияСверху = 10;
	КонецЕсли;
	
	// Первую колонку не печатаем
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
	
	// Присвоим имя для сохранения параметров печати табличного документа
	ДокументРезультат.ИмяПараметровПечати = "Расчет себестоимости продукции";
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета, Строка(глЗначениеПеременной("глТекущийПользователь")));
		
КонецПроцедуры // СформироватьОтчет
	
Функция ПоказатьРазницы(Разницы, СуммаРазниц)
	
	Если СуммаРазниц = 0 Тогда
		Возврат "";
	Иначе
		Возврат Разницы + ": " + Формат(СуммаРазниц, "ЧДЦ=2");
	КонецЕсли;
	
КонецФункции


Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	СтарыеНастройки = УправлениеОтчетами.ПолучитьКопиюОтбораВТЗ(ПостроительОтчета.Отбор);
	
	СоотвСубконто = Новый Соответствие;
	
	Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТиповойОбороты.СуммаОборотКт КАК СуммаОборотКт
	|{ВЫБРАТЬ
	|	ТиповойОбороты.Субконто1 КАК Субконто1,
	|	ТиповойОбороты.Субконто2 КАК Субконто2}
	|ИЗ
	|	РегистрБухгалтерии.Типовой.Обороты(, , Месяц, Счет В ИЕРАРХИИ (&Счет), , {(Субконто1).*, (Субконто2).*}, , ) КАК ТиповойОбороты
	|ИТОГИ
	|	СУММА(СуммаОборотКт)
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	ТиповойОбороты.Субконто1.*,
	|	ТиповойОбороты.Субконто2.*}";
	
	Массив = Новый Массив;
	Массив.Добавить(ПланыСчетов.Типовой.ОсновноеПроизводство);
	Массив.Добавить(ПланыСчетов.Типовой.ВспомогательныеПроизводства);
	
	ПостроительОтчета.Параметры.Вставить("Счет", Массив);
	ПостроительОтчета.Параметры.Вставить("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	
	ПостроительОтчета.Текст = Текст;
	
	СоотвСубконто = Новый Соответствие;
	СоотвСубконто.Вставить("Субконто1",    ПланыВидовХарактеристик.ВидыСубконтоТиповые.Подразделения);
	СоотвСубконто.Вставить("Субконто2",    ПланыВидовХарактеристик.ВидыСубконтоТиповые.НоменклатурныеГруппы);
	
	
	Сч = 0;
	Для каждого Элемент Из СоотвСубконто Цикл
		Сч = Сч+1;
		Поле = ПостроительОтчета.ДоступныеПоля.Найти(Элемент.Ключ);
		Поле.ТипЗначения = Элемент.Значение.ТипЗначения;
		Поле.Представление = Элемент.Значение.Наименование;
		
		ПостроительОтчета.Отбор.Добавить(Элемент.Ключ);
	КонецЦикла;
	
	УправлениеОтчетами.УстановитьОтборИзТаблицы(ПостроительОтчета.Отбор, СтарыеНастройки);
	
КонецПроцедуры

// Функция преобразует дату в представление периода
//
// Параметры:
//   ПериодОтчета - Дата периода
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьПредставлениеПериодаОтчета(ПериодОтчета) Экспорт

	Возврат Формат(ПериодОтчета, "ДФ='MMMM yyyy'");

КонецФункции

// Обрабатывает установку периода в формах отчета
// с шагом в 1 месяц
//
// Параметры
//  Направление  - направление регулирования периода 
//                 (1 - добавить месяц, -1 - убавить месяц)
//
Процедура УстановитьПериодОтчета(Направление) Экспорт

	Если Направление = 1 Тогда
		ДатаНач = КонецМесяца(ДатаНач) + 1;
		ДатаКон = КонецДня(КонецМесяца(ДатаНач));
	ИначеЕсли Направление = -1 Тогда
		ДатаНач = НачалоМесяца(ДатаНач - 1);
		ДатаКон = КонецДня(КонецМесяца(ДатаНач));
	КонецЕсли;

КонецПроцедуры // УстановитьПериодОтчета()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;

мОтображатьСтруктурныеПодразделения = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений();

#КонецЕсли