#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета по метаданным регистра накопления
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "";
	УниверсальныйОтчет.ИмяРегистра = "-";
	
	
	//Содержит текст построителя отчета
	
	Текст =
	"ВЫБРАТЬ
	|	Выборка.БанковскийСчет КАК БанковскийСчет,
	|	Выборка.СуммаДепозита КАК СуммаДепозита,
	|	Выборка.СуммаВознагрождения КАК СуммаВознагрождения,
	|	Выборка.СуммаКПН КАК СуммаКПН,
	|	Выборка.СуммаВознагрождения - Выборка.СуммаКПН КАК Вознагрождение
	|{ВЫБРАТЬ
	|	БанковскийСчет.*,
	|	Выборка.Организация.*,
	|	Выборка.ИсточникФинансирования.*,
	|	СуммаДепозита,
	|	СуммаВознагрождения,
	|	СуммаКПН,
	|	Вознагрождение}
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТиповойОстаткиИОбороты.Организация КАК Организация,
	|		ТиповойОстаткиИОбороты.ИсточникФинансирования КАК ИсточникФинансирования,
	|		ВЫРАЗИТЬ(ТиповойОстаткиИОбороты.Субконто1 КАК Справочник.БанковскиеСчета) КАК БанковскийСчет,
	|		СУММА(ТиповойОстаткиИОбороты.СуммаНачальныйОстатокДт + ТиповойОстаткиИОбороты.СуммаОборотДт) КАК СуммаДепозита,
	|		СУММА(ЕСТЬNULL(Вознагрождения.СуммаОборотДт, 0)) КАК СуммаВознагрождения,
	|		СУММА(ЕСТЬNULL(КПН.СуммаОборот, 0)) КАК СуммаКПН
	|	ИЗ
	|		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(
	|				&ДатаНач,
	|				&ДатаКон,
	|						,
	|						,
	|				Счет В ИЕРАРХИИ (&мСчет),
	|				&мСписокВидовСубконто,
	|				{(Организация).*,
	|				(ИсточникФинансирования).*}) КАК ТиповойОстаткиИОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Обороты(
	|					&ДатаНач,
	|					&ДатаКон,
	|					,
	|					Счет В ИЕРАРХИИ (&мСчетВознагрождения),
	|					&мСписокВидовСубконто,
	|					{(Организация).*, (ИсточникФинансирования).*},
	|					,
	|					) КАК Вознагрождения
	|			ПО ТиповойОстаткиИОбороты.Субконто1 = Вознагрождения.Субконто1
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.ОборотыДтКт(
	|					&ДатаНач,
	|					&ДатаКон,
	|					,
	|					СчетДТ В ИЕРАРХИИ (&мСчетКПН),
	|					,
	|					СчетКт В ИЕРАРХИИ (&мСчетВознагрождения),
	|					&мСписокВидовСубконто,
	|					{(Организация).*, (ИсточникФинансирования).*}) КАК КПН
	|			ПО ТиповойОстаткиИОбороты.Субконто1 = КПН.СубконтоКт1
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТиповойОстаткиИОбороты.Организация,
	|		ТиповойОстаткиИОбороты.ИсточникФинансирования,
	|		ТиповойОстаткиИОбороты.Субконто1) КАК Выборка
	|{ГДЕ
	|	Выборка.БанковскийСчет.*,
	|	Выборка.Организация.*,
	|	Выборка.ИсточникФинансирования.*}
	|{УПОРЯДОЧИТЬ ПО
	|	Выборка.Организация.*,
	|	Выборка.ИсточникФинансирования.*,
	|	БанковскийСчет.*}
	|ИТОГИ
	|	СУММА(СуммаДепозита),
	|	СУММА(СуммаВознагрождения),
	|	СУММА(СуммаКПН),
	|	СУММА(Вознагрождение)
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	БанковскийСчет,
	|	Выборка.Организация,
	|	Выборка.ИсточникФинансирования}
	|АВТОУПОРЯДОЧИВАНИЕ";

	УниверсальныйОтчет.ПостроительОтчета.Текст = Текст;
	
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	 УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	//УниверсальныйОтчет.ДобавитьПолеГруппировка("БазоваяЕдиницаИзмерения", "Номенклатура", "БазоваяЕдиницаИзмерения", "Базовая единица измерения");
	//
	
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаДепозита",       "Сумма депозита",       Истина, "ЧЦ=17; ЧДЦ=2", ,"Сумма" );
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаВознагрождения", "Сумма вознагрождения", Истина, "ЧЦ=17; ЧДЦ=2", ,"Сумма" );
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаКПН",  			 "Сумма КПН",  			 Истина, "ЧЦ=15; ЧДЦ=2", ,"Сумма" );
	УниверсальныйОтчет.ДобавитьПоказатель("Вознагрождение",      "Вознагрождение",       Истина, "ЧЦ=17; ЧДЦ=2", ,"Сумма" );
	
	//отборы по умолчанию
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("мСчет", Планысчетов.Типовой.ДенежныеСредстваНаСберегательныхСчетах);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("мСчетВознагрождения", Планысчетов.Типовой.КраткосрочныеВознагражденияКПолучению);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("мСчетКПН", Планысчетов.Типовой.ПрочиеНалогиИДругиеОбязательныеПлатежиВБюджет);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("мСписокВидовСубконто", ПланыВидовХарактеристик.ВидыСубконтоТиповые.ДенежныеСредства);

	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ИсточникФинансирования");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("БанковскийСчет");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("ИсточникФинансирования");
	
	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("БанковскийСчет.ПроцентВознагрождения","В отдельных колонках", 3);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("БанковскийСчет.ДатаОкончанияДоговора","В отдельных колонках", 3);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);

КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно перередать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли