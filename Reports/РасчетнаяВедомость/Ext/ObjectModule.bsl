#Если Клиент Тогда

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ТолькоЗаголовок = Ложь) Экспорт
	
	ДокументРезультат.Очистить();
	
	Макет = ПолучитьМакет("Макет");
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОтчета.Параметры.Период = "Период: " + ПредставлениеПериода(НачалоМесяца(Период), КонецМесяца(Период), "ФП = Истина");
	Если ПостроительОтчета.Отбор.ФизЛицо.Использование Тогда
		ЗаголовокОтчета.Параметры.ФизЛицо = "Работник: " + ПостроительОтчета.Отбор.ФизЛицо.Значение;
	КонецЕсли;
	
	Если ТолькоЗаголовок Тогда
		ДокументРезультат.Вывести(ЗаголовокОтчета);
		Возврат;
	КонецЕсли;
	
	ПостроительОтчета.МакетЗаголовкаОтчета = ЗаголовокОтчета;
                                                                
	ПостроительОтчета.Параметры.Вставить("Период", Период);
	ПостроительОтчета.Параметры.Вставить("СледующийПериод", НачалоМесяца(КонецМесяца(Период)+1));
	ПостроительОтчета.Выполнить();
	ПостроительОтчета.ОформитьМакет();
	ПостроительОтчета.Вывести(ДокументРезультат);
	
	Ширина = ДокументРезультат.ШиринаТаблицы;
	ВысотаЗаголовка = 4;
	
	// удалим из документа итог по строкам - последняя колонка отчета
	Область = ДокументРезультат.Область(, Ширина, ВысотаЗаголовка + 1, Ширина);
	ДокументРезультат.УдалитьОбласть(Область, ТипСмещенияТабличногоДокумента.ПоГоризонтали);

	Если ДокументРезультат.Область(ВысотаЗаголовка + 1, Ширина - 2, ВысотаЗаголовка + 1, Ширина - 2).Текст = "Я" Тогда
		// удалим из документа колонку "Я", соответствующую виртуальному виду расчета "Конечное сальдо" 
		Область = ДокументРезультат.Область(, Ширина - 1, ВысотаЗаголовка + 1, Ширина - 1);
		Область.Разгруппировать();
		Область = ДокументРезультат.Область(, Ширина - 2, ВысотаЗаголовка + 1, Ширина - 2);
		ДокументРезультат.УдалитьОбласть(Область, ТипСмещенияТабличногоДокумента.ПоГоризонтали);
	КонецЕсли;
	
	Если ДокументРезультат.Область(ВысотаЗаголовка + 1, 3, ВысотаЗаголовка + 1, 3).Текст = "А" Тогда
		// удалим из документа колонку "А", соответствующую виртуальному виду расчета "Начальное сальдо" 
		Область = ДокументРезультат.Область(, 4, ВысотаЗаголовка + 1, 4);
		Область.Разгруппировать();
		Область = ДокументРезультат.Область(, 3, ВысотаЗаголовка + 1, 3);
		Область.Разгруппировать();
		ДокументРезультат.УдалитьОбласть(Область, ТипСмещенияТабличногоДокумента.ПоГоризонтали);
	КонецЕсли; 
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, "Расчетная ведомость", Строка(глТекущийПользователь));
КонецПроцедуры

Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ПостроительОтчета.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Данные.ФизЛицо,
	|	Данные.ФизЛицо.Представление КАК ФизЛицоПредставление,
	|	Данные.Группа,
	|	Данные.ПриоритетГруппы,
	|	Данные.ИмяВидаРасчета,
	|	Данные.ПриоритетВидаРасчета,
	|	СУММА(Данные.Результат) КАК Результат
	|ИЗ
	|	(ВЫБРАТЬ
	|		УправленческиеНачисления.ФизЛицо КАК ФизЛицо,
	|		УправленческиеНачисления.ВидРасчета.Наименование КАК ИмяВидаРасчета,
	|		УправленческиеНачисления.ВидРасчета.Код КАК ПриоритетВидаРасчета,
	|		""Всего начислено"" КАК Группа,
	|		2 КАК ПриоритетГруппы,
	|		УправленческиеНачисления.Результат КАК Результат
	|	ИЗ
	|		РегистрРасчета.УправленческиеНачисления КАК УправленческиеНачисления
	|	
	|	ГДЕ
	|		(УправленческиеНачисления.ПериодРегистрации = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ))
	|		И Результат <>0
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		УправленческиеУдержания.ФизЛицо,
	|		УправленческиеУдержания.ВидРасчета.Наименование,
	|		УправленческиеУдержания.ВидРасчета.Код,
	|		""Всего удержано"",
	|		3 КАК ПриоритетГруппы,
	|		УправленческиеУдержания.Результат
	|	ИЗ
	|		РегистрРасчета.УправленческиеУдержания КАК УправленческиеУдержания
	|	
	|	ГДЕ
	|		(УправленческиеУдержания.ПериодРегистрации = НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ))
	|		И Результат <>0
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПогашениеЗаймовРаботниками.ФизЛицо,
	|		""Погашение займа"",
	|		""ПогашениеЗайма"",
	|		""Всего удержано"",
	|		3 КАК ПриоритетГруппы,
	|		ПогашениеЗаймовРаботниками.ОсновнойДолг
	|	ИЗ
	|		РегистрНакопления.ПогашениеЗаймовРаботниками КАК ПогашениеЗаймовРаботниками
	|	
	|	ГДЕ
	|		(ПогашениеЗаймовРаботниками.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)) И
	|		ПогашениеЗаймовРаботниками.ВидДвижения = &Расход И
	|		ПогашениеЗаймовРаботниками.УдержаноИзЗарплаты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ФизЛицо,
	|		""Через кассу"",
	|		"""",
	|		""Всего выплачено"",
	|		4 КАК ПриоритетГруппы,
	|		СуммаУпр
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботниками КАК Взаиморасчеты
	|	
	|	ГДЕ
	|		Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|		И (Взаиморасчеты.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		СальдоНачальное.Физлицо,
	|		""Начальное сальдо"",
	|		NULL,
	|		""А"",
	|		1 КАК ПриоритетГруппы,
	|		СальдоНачальное.СуммаУпрОстаток
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботниками.Остатки(НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ), ) КАК СальдоНачальное
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СальдоКонечное.Физлицо,
	|		""Конечное сальдо"",
	|		NULL,
	|		""Я"",
	|		5 КАК ПриоритетГруппы,
	|		СальдоКонечное.СуммаУпрОстаток
	|	ИЗ
	|		РегистрНакопления.ВзаиморасчетыСРаботниками.Остатки(&СледующийПериод, ) КАК СальдоКонечное) КАК Данные
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.ФизЛицо,
	|	Данные.Группа,
	|	Данные.ПриоритетГруппы,
	|	Данные.ИмяВидаРасчета,
	|	Данные.ПриоритетВидаРасчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	Данные.ПриоритетГруппы,
	|	Данные.ПриоритетВидаРасчета
	|
	|// Максимум(ПриоритетГруппы) и МАКСИМУМ(ПриоритетВидаРасчета) исключительно для упорядочивания групп и видов расчетов
	|ИТОГИ СУММА(Результат), МАКСИМУМ(ПриоритетГруппы), МАКСИМУМ(ПриоритетВидаРасчета)   ПО
	|	ОБЩИЕ
	|
	|{ИТОГИ  ПО
	|	ФизЛицо,
	|	Группа,
	|	ИмяВидаРасчета
	|}
	|
	|{ГДЕ
	|	ФизЛицо
	|}
	|";
	

	СтруктураПредставлениеПолей = Новый Структура("ФизЛицоНаименование,Физлицо,ИмяВидаРасчета",
	"Сотрудник",
	"Сотрудник",
	"Вид расчета");
	
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
	ПостроительОтчета.Отбор.Добавить("ФизЛицо");
	ПостроительОтчета.ВыводитьОбщиеИтоги = Истина;
	
	ПостроительОтчета.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Интерфейс);
	ПостроительОтчета.Макет = ПолучитьМакет("Макет");
	
	ПостроительОтчета.ИзмеренияСтроки.Добавить("Физлицо");
	ПостроительОтчета.ИзмеренияКолонки.Добавить("Группа");
	ПостроительОтчета.ИзмеренияКолонки.Добавить("ИмяВидаРасчета");
	
	ПостроительОтчета.РазмещениеИзмеренийВКолонках = ТипРазмещенияИзмерений.Вместе;
	ПостроительОтчета.РазмещениеИзмеренийВСтроках = ТипРазмещенияИзмерений.Вместе;
	
	ПостроительОтчета.Параметры.Вставить("Приход", ВидДвиженияНакопления.Приход);
	ПостроительОтчета.Параметры.Вставить("Расход", ВидДвиженияНакопления.Расход);
	
	ПустаяСтруктура = Новый Структура;
	
КонецПроцедуры

#КонецЕсли