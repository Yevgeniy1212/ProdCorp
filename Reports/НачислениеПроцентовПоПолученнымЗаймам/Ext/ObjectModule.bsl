Перем мСписокИсточниковФинансирования Экспорт;
Перем мСписокСтруктурныхЕдиниц Экспорт;
Перем мСписокПодразделений Экспорт;
Перем мДеревоСтруктурныхЕдиниц Экспорт;
Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;
Перем ПромежуточныеДанные Экспорт;
Перем РежимРасшифровки Экспорт;
Перем ВедётсяУчетПоПодразделениям Экспорт;
Перем мВалютаРегламентированногоУчета Экспорт;

#Если Клиент Тогда

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	Результат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ВыводЗаголовкаОтчета(ЭтотОбъект, Результат);
	ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных);
	СтандартныеОтчеты.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных);
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	// Выполним дополнительную обработку Результата отчета
	ОбработкаРезультатаОтчета(Результат);
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(Результат, ПолучитьТекстЗаголовка(), Строка(глТекущийПользователь));
	
	Возврат;
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных) Экспорт
	
	Если ЗначениеЗаполнено(НачалоПериода) Тогда
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоДня(НачалоПериода));
	Иначе
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", Дата(1, 1, 1));
	КонецЕсли;
	Если ЗначениеЗаполнено(КонецПериода) Тогда
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(КонецПериода));
	Иначе
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", Дата(3999, 11, 1));
	КонецЕсли;
	
	Если мДеревоСтруктурныхЕдиниц.Колонки.Количество() = 0 Тогда 
		
		СписокСтруктурныхЕдиниц = Новый СписокЗначений;
		СписокСтруктурныхЕдиниц.ЗагрузитьЗначения(мСписокСтруктурныхЕдиниц.ВыгрузитьЗначения());
		
		Для Каждого СтрПодразделение Из мСписокПодразделений Цикл 
			СписокСтруктурныхЕдиниц.Добавить(СтрПодразделение.Значение);
		КонецЦикла;		
				
		мДеревоСтруктурныхЕдиниц = СтандартныеОтчеты.СформироватьДеревоСЕ(, СписокСтруктурныхЕдиниц);
		
	КонецЕсли;
	
	ВнешниеНаборыДанных = Новый Структура;
	ВыборкаДанных = ПолучитьВыборку();
	ВнешниеНаборыДанных.Вставить("ТаблицаДанных", ВыборкаДанных);
	
	ТиповыеОтчеты.ДобавитьОтборПоОрганизациямИПодразделениям(КомпоновщикНастроек, мДеревоСтруктурныхЕдиниц);
	ТиповыеОтчеты.ДобавитьОтборПоИсточникамФинансирования(КомпоновщикНастроек, мСписокИсточниковФинансирования);
		
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	СтандартныеОтчеты.ИнициализацияОтчета(ЭтотОбъект);
	
КонецПроцедуры

Процедура ВыводЗаголовкаОтчета(ОтчетОбъект, Результат)
	
	СтандартныеОтчеты.ВыводЗаголовкаСпециализированногоОтчета(ОтчетОбъект, Результат);
			
КонецПроцедуры

Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина) Экспорт 
		
	ЗаголовокОтчета = "Начисление % по полученным займам " + СтандартныеОтчеты.ПолучитьПредставлениеПериода(ЭтотОбъект);

	Возврат ?(ОрганизацияВНачале, ЗаголовокОтчета, ЗаголовокОтчета + " " + СтандартныеОтчеты.ПолучитьТекстОрганизация(ЭтотОбъект));
		
КонецФункции

Функция ПолучитьВыборку()
	
	Запрос = Новый Запрос;
	
	Текст =
	"ВЫБРАТЬ
	|   Выборка.Организация КАК Организация,
	|   Выборка.ИсточникФинансирования КАК ИсточникФинансирования,
	|   Выборка.Контрагент КАК Контрагент,
	|   Выборка.Договор КАК Договор,
	|   ВЫБОР КОГДА Выборка.Договор.ВалютаВзаиморасчетов = &мВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ Выборка.ВалСуммаНачОстаток 
	|	КОНЕЦ КАК ВалСуммаНачОстаток,
	|   Выборка.СуммаНачОстаток КАК СуммаНачОстаток,
	|   ВЫБОР КОГДА Выборка.Договор.ВалютаВзаиморасчетов = &мВалютаРегламентированногоУчета
	|		ТОГДА 0
	|   	ИНАЧЕ Выборка.ВалСуммаПогашения - Выборка.ВалСуммаКПН
	|	КОНЕЦ КАК ВалСуммаПогашения,
	|   Выборка.СуммаПогашения-Выборка.СуммаКурсПриПог - Выборка.ВалСуммаКПН КАК СуммаПогашения,
	|   ВЫБОР КОГДА Выборка.Договор.ВалютаВзаиморасчетов = &мВалютаРегламентированногоУчета
	|		ТОГДА 0
	|   	ИНАЧЕ Выборка.ВалСуммаПолучения 
	|	КОНЕЦ КАК ВалСуммаПолучения,
	|   Выборка.СуммаПолучения-Выборка.СуммаКурсПриПол КАК СуммаПолучения,
	|   ВЫБОР КОГДА Выборка.Договор.ВалютаВзаиморасчетов = &мВалютаРегламентированногоУчета
	|		ТОГДА 0
	|   	ИНАЧЕ Выборка.ВалСуммаКонОстаток 
	|	КОНЕЦ КАК ВалСуммаКонОстаток,
	|   Выборка.СуммаКонОстаток КАК СуммаКонОстаток,
	|   Выборка.СуммаКурсПриПол КАК СуммаКурсПриПол,
	|   Выборка.СуммаКурсПриПог КАК СуммаКурсПриПог,
	|   ВЫБОР КОГДА Выборка.Договор.ВалютаВзаиморасчетов = &мВалютаРегламентированногоУчета
	|		ТОГДА 0
	|   	ИНАЧЕ Выборка.ВалСуммаКПН 
	|	КОНЕЦ КАК ВалСуммаКПН,
	|   Выборка.СуммаКПН КАК СуммаКПН
	|ИЗ	
	|	(ВЫБРАТЬ
	|		ТиповойОстаткиИОбороты.Организация КАК Организация,
	|		ТиповойОстаткиИОбороты.ИсточникФинансирования КАК ИсточникФинансирования,
	|		ВЫРАЗИТЬ(ТиповойОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	|		ВЫРАЗИТЬ(ТиповойОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	|		СУММА(ТиповойОстаткиИОбороты.ВалютнаяСуммаНачальныйОстатокКт)  КАК ВалСуммаНачОстаток,
	|		СУММА(ТиповойОстаткиИОбороты.СуммаНачальныйОстатокКт ) КАК СуммаНачОстаток,
	|		СУММА(ТиповойОстаткиИОбороты.ВалютнаяСуммаОборотДт) КАК ВалСуммаПогашения,
	|		СУММА(ТиповойОстаткиИОбороты.СуммаОборотДт) КАК СуммаПогашения,
	|		СУММА(ТиповойОстаткиИОбороты.ВалютнаяСуммаОборотКт) КАК ВалСуммаПолучения,
	|		СУММА(ТиповойОстаткиИОбороты.СуммаОборотКт) КАК СуммаПолучения,
	|		СУММА(ТиповойОстаткиИОбороты.ВалютнаяСуммаКонечныйОстатокКт)  КАК ВалСуммаКонОстаток,
	|		СУММА(ТиповойОстаткиИОбороты.СуммаКонечныйОстатокКт) КАК СуммаКонОстаток,
	|		СУММА(ЕстьNull(КурсовыеРазницыПриПолучении.СуммаКурсПриПол,0)) КАК СуммаКурсПриПол,
	|		СУММА(ЕстьNull(КурсовыеРазницыПриПогашении.СуммаКурсПриПог,0)) КАК СуммаКурсПриПог,
	|		СУММА(ЕстьNull(КПН.ВалСуммаКПН,0)) КАК ВалСуммаКПН,
	|		СУММА(ЕстьNull(КПН.СуммаКПН,0)) КАК СуммаКПН
	|	ИЗ
	|		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|						,
	|						,
	|				Счет В (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							СписокСоответствияСчетов.СчетУчетаВознагрождений
	|						 ИЗ 
	|							РегистрСведений.СоответствиеСчетовУчетаРасчетовПоКредитамИЗаймам КАК СписокСоответствияСчетов
	|						 ГДЕ
	|							СписокСоответствияСчетов.счетУчета 
	|									в (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|										СписокСчетов.СчетУчета
	|									ИЗ
	|					   					РегистрСведений.СчетаУчетаПоКредитамИЗаймам КАК СписокСчетов
	|									ГДЕ
	|					   					СписокСчетов.ТипСчетаУчета = ЗНАЧЕНИЕ(Перечисление.ТипыКредитовИЗаймов.Полученные)
	|						)),
	|				,
	|				{(Организация).*,
	|				(ИсточникФинансирования).*}) КАК ТиповойОстаткиИОбороты
	|
	|   Левое соединение
	|         (ВЫБРАТЬ
	|				ВЫРАЗИТЬ(ОборотыДтКт.СубконтоКТ2 КАК Справочник.ДоговорыКонтрагентов) Как Договор,
	|				Сумма(ОборотыДтКт.СуммаОборот) Как СуммаКурсПриПол
	|          Из
	|			  РегистрБухгалтерии.Типовой.ОборотыДтКт(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				, 
	|				СчетДт в ИЕРАРХИИ (&СчетаУчетаКурсРазницПоПрих),
	|				, 
	|				СчетКт В (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							СписокСоответствияСчетов.СчетУчетаВознагрождений
	|						 ИЗ 
	|							РегистрСведений.СоответствиеСчетовУчетаРасчетовПоКредитамИЗаймам КАК СписокСоответствияСчетов
	|						 ГДЕ
	|							СписокСоответствияСчетов.счетУчета 
	|									в (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|										СписокСчетов.СчетУчета
	|									ИЗ
	|					   					РегистрСведений.СчетаУчетаПоКредитамИЗаймам КАК СписокСчетов
	|									ГДЕ
	|					   					СписокСчетов.ТипСчетаУчета = ЗНАЧЕНИЕ(Перечисление.ТипыКредитовИЗаймов.Полученные)
	|						)),
	|				,
	|				{(Организация).*,
	|					(ИсточникФинансирования).*}) КАК ОборотыДтКт
	|			СГРУППИРОВАТЬ ПО ОборотыДтКт.СубконтоКТ2
	|           ) КАК КурсовыеРазницыПриПолучении
	|     ПО  КурсовыеРазницыПриПолучении.Договор = ТиповойОстаткиИОбороты.Субконто2 
	|
	|   Левое соединение
	|         (ВЫБРАТЬ
	|				ВЫРАЗИТЬ(ОборотыДтКт.СубконтоДТ2 КАК Справочник.ДоговорыКонтрагентов) Как Договор,
	|				Сумма(ОборотыДтКт.СуммаОборот) Как СуммаКурсПриПог
	|          Из
	|			  РегистрБухгалтерии.Типовой.ОборотыДтКт(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				, 
	|				СчетДт В (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							СписокСоответствияСчетов.СчетУчетаВознагрождений
	|						 ИЗ 
	|							РегистрСведений.СоответствиеСчетовУчетаРасчетовПоКредитамИЗаймам КАК СписокСоответствияСчетов
	|						 ГДЕ
	|							СписокСоответствияСчетов.счетУчета 
	|									в (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|										СписокСчетов.СчетУчета
	|									ИЗ
	|					   					РегистрСведений.СчетаУчетаПоКредитамИЗаймам КАК СписокСчетов
	|									ГДЕ
	|					   					СписокСчетов.ТипСчетаУчета = ЗНАЧЕНИЕ(Перечисление.ТипыКредитовИЗаймов.Полученные)
	|						)),
	|				, 
	|				СчетКт в ИЕРАРХИИ (&СчетаУчетаКурсРазницПоРасх),
	|				,
	|				{(Организация).*,
	|					(ИсточникФинансирования).*}) КАК ОборотыДтКт
	|			СГРУППИРОВАТЬ ПО ОборотыДтКт.СубконтоДТ2
	|           ) КАК КурсовыеРазницыПриПогашении
	|     ПО  КурсовыеРазницыПриПогашении.Договор = ТиповойОстаткиИОбороты.Субконто2 
	|
	|
	|   Левое соединение
	|         (ВЫБРАТЬ
	|				ВЫРАЗИТЬ(ОборотыДтКт.СубконтоДТ2 КАК Справочник.ДоговорыКонтрагентов) Как Договор,
	|				Сумма(ОборотыДтКт.ВалютнаяСуммаОборотДт) Как ВалСуммаКПН,
	|				Сумма(ОборотыДтКт.СуммаОборот) Как СуммаКПН
	|          Из
	|			  РегистрБухгалтерии.Типовой.ОборотыДтКт(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				, 
	|				СчетДт В (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							СписокСоответствияСчетов.СчетУчетаВознагрождений
	|						 ИЗ 
	|							РегистрСведений.СоответствиеСчетовУчетаРасчетовПоКредитамИЗаймам КАК СписокСоответствияСчетов
	|						 ГДЕ
	|							СписокСоответствияСчетов.счетУчета 
	|									в (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|										СписокСчетов.СчетУчета
	|									ИЗ
	|					   					РегистрСведений.СчетаУчетаПоКредитамИЗаймам КАК СписокСчетов
	|									ГДЕ
	|					   					СписокСчетов.ТипСчетаУчета = ЗНАЧЕНИЕ(Перечисление.ТипыКредитовИЗаймов.Полученные)
	|						)),
	|				, 
	|				СчетКт в ИЕРАРХИИ (&СчетаУчетаКПН),
	|				,
	|				{(Организация).*,
	|					(ИсточникФинансирования).*}) КАК ОборотыДтКт
	|			СГРУППИРОВАТЬ ПО ОборотыДтКт.СубконтоДТ2
	|           ) КАК КПН
	|     ПО  КПН.Договор = ТиповойОстаткиИОбороты.Субконто2 
	|
	|	СГРУППИРОВАТЬ ПО
	|		ТиповойОстаткиИОбороты.Организация,
	|		ТиповойОстаткиИОбороты.ИсточникФинансирования,
	|		ТиповойОстаткиИОбороты.Субконто1,
	|		ТиповойОстаткиИОбороты.Субконто2
	|	) КАК Выборка
	|";	
	Запрос.УстановитьПараметр("НачалоПериода",НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
    Запрос.УстановитьПараметр("СчетаУчетаДС",ПланыСчетов.Типовой.ДенежныеСредства);
    Запрос.УстановитьПараметр("СчетаУчетаКурсРазницПоПрих",ПланыСчетов.Типовой.РасходыПоКурсовойРазнице);
    Запрос.УстановитьПараметр("СчетаУчетаКурсРазницПоРасх",ПланыСчетов.Типовой.ДоходыОтКурсовойРазницы);
    Запрос.УстановитьПараметр("мВалютаРегламентированногоУчета",мВалютаРегламентированногоУчета);
    Запрос.УстановитьПараметр("СчетаУчетаКПН",ПланыСчетов.Типовой.ПрочиеНалоги);
	
	Запрос.Текст = Текст;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ОбработкаРезультатаОтчета(Результат)
	
	ТиповыеОтчеты.ОбработкаРезультатаОтчета(ЭтотОбъект, Результат);

КонецПроцедуры

// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт
	
	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	
	СтруктураНастроек.Вставить("мСписокПодразделений", мСписокПодразделений);
	СтруктураНастроек.Вставить("мСписокСтруктурныхЕдиниц", мСписокСтруктурныхЕдиниц);
	СтруктураНастроек.Вставить("мДеревоСтруктурныхЕдиниц", мДеревоСтруктурныхЕдиниц);
	
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);

КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры


Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли
мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
мСписокИсточниковФинансирования = Новый СписокЗначений;
мСписокСтруктурныхЕдиниц = Новый СписокЗначений;
мСписокПодразделений = Новый СписокЗначений;
мДеревоСтруктурныхЕдиниц = Новый ДеревоЗначений;

ВедётсяУчетПоПодразделениям = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений();

РежимРасшифровки = Ложь;