Перем ЗаполнениеПараметров Экспорт;
Перем СохраненнаяНастройка Экспорт;
Перем ДополнительныеПараметры Экспорт;
Перем ПараметрыОформления Экспорт;
Перем СтруктураПеревода;
Перем КЭШ;
Перем ДоступныеПоказатели Экспорт;
Перем ДоступныеГруппировки Экспорт;
Перем ПереченьОсновныхРеквизитов Экспорт;
Перем ДополнительныеПредставления Экспорт;
Перем ДанныеРасшифровки Экспорт;
Перем ОтборыРасшифровки Экспорт;
Перем ТаблицаОтбора Экспорт;
Перем ТаблицаИтоговСтатей Экспорт;
Перем ВыводитьОтклонения Экспорт;
Перем СценарийДляОтклонений Экспорт;


////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПОДГОТОВКА ДАННЫХ ОТЧЕТА


Процедура ЗаполнитьСпискиПоказателейИГруппировок() Экспорт
	фин_УправлениеОтчетамиБюджетирование.ЗаполнитьСпискиПоказателейИГруппировок(ЭтотОбъект);	
КонецПроцедуры

Функция ПроверитьЗаполнениеПараметров(Отбор)
	Ошибки = Ложь;
	Если НЕ ЗначениеЗаполнено(Бюджет) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан бюджет!");
		Ошибки = Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Сценарий) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан сценарий!");
		Ошибки = Истина;
	КонецЕсли;
	Если Показатели.Количество()=0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указаны показатели отчета!");
		Ошибки = Истина;
	КонецЕсли;
	Если ВидыАналитическихДанных.Количество()=0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указаны виды аналитических данных!");
		Ошибки = Истина;
	КонецЕсли;
	Для Каждого СтрокаПоказатель Из Показатели Цикл
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.Показатель) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен показатель в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка показателей!");
			Ошибки = Истина;
		КонецЕсли;
		Если СтрокаПоказатель.Показатель=Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма И НЕ (ОсновнаяГруппировка = Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта ИЛИ Группировки.НайтиСтроки(Новый Структура("Измерение",Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта)).Количество()<>0) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя отражать валютную сумму в отчете без использования группировки по валюте!");
			Ошибки = Истина;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаПоказатель Из ВидыАналитическихДанных Цикл
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.ВидДанных) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен вид данных в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка видов аналитических данных!");
			Ошибки = Истина;
		//ИначеЕсли СтрокаПоказатель.ВидДанных = Перечисления.фин_ПоказателиОтчетаПоИсполнениюБюджета.РассмотренныеОтклонения И НЕ Отчеты.фин_ИсполнениеБюджета.ДоступенАнализОтклонений(ЭтотОбъект) Тогда
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Вид данных, выбранный в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка видов аналитических данных, не доступен при текущих настройках отчета!
		//	|	Для его использования необходимо сравнивать плановые и фактические данные за идентичный интервал времени");
		//	Ошибки = Истина;
		КонецЕсли;
	КонецЦикла;
	Если НачалоПериодаПланирования='00010101' Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено начало периода отчета!");
		Ошибки = Истина;
	КонецЕсли;
	Если КонецПериодаПланирования='00010101' Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен конец периода отчета!");
		Ошибки = Истина;
	КонецЕсли;
	Для Каждого СтрокаПоказатель Из Группировки Цикл
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.Измерение) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена группировка в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка группировок!");
			Ошибки = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.ВидГруппировки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен вид группировки в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка группировок!");
			Ошибки = Истина;
		КонецЕсли;
		Если СтрокаПоказатель.Измерение = Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта И Показатели.НайтиСтроки(Новый Структура("Показатель",Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма)).Количество()=0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя использовать группировку по валюте без отражения валютной суммы в отчете!");
			Ошибки = Истина;
		КонецЕсли;
	КонецЦикла;
	Если ОсновнаяГруппировка = Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта И Показатели.НайтиСтроки(Новый Структура("Показатель",Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма)).Количество()=0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя использовать разделение данных по валюте без отражения валютной суммы в отчете!");
		Ошибки = Истина;
	КонецЕсли;
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ИспользоватьОграниченияПоБюджетам")=Истина Тогда
		Если НЕ фин_ПривилегированныеПроцедуры.РазрешеноПолучениеОтчета(Бюджет,Сценарий,Отбор) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("У пользователя недостаточно прав!");
			Ошибки = Истина;
		КонецЕсли;
	КонецЕсли;
	Если ВыводитьСреднююЦену Тогда
		Если (НЕ Бюджет.УчетПоКоличеству) ИЛИ (НЕ Бюджет.УчетПоСумме) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для вывода средней цены бюджет должен содержать как количественные, так и суммовые показатели!");
			Ошибки = Истина;
		КонецЕсли;
		Если Показатели.НайтиСтроки(Новый Структура("Показатель",Перечисления.фин_РесурсыДанныхБюджетирования.Количество)).Количество()=0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для вывода средней цены в отчете необходимо вывести показатель ""Количество""!");
			Ошибки = Истина;
		КонецЕсли;
		Если Показатели.НайтиСтроки(Новый Структура("Показатель",Перечисления.фин_РесурсыДанныхБюджетирования.СуммаУпр)).Количество()=0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для вывода средней цены в отчете необходимо вывести показатель ""Сумма (упр.)""!");
			Ошибки = Истина;
		КонецЕсли;
	КонецЕсли;
	фин_УправлениеОтчетамиБюджетирование.ПроверитьКорректностьЦеновыхПоказателей(Показатели,Бюджет,Ошибки);
	Возврат НЕ Ошибки;	
КонецФункции

Процедура Скомпоновать(ДокументРезультат,Отбор) Экспорт
	Если НЕ ПроверитьЗаполнениеПараметров(Отбор) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Отчет не сформирован!");
		Возврат;
	КонецЕсли;
	
	СравнительныйАнализ = Отчеты.фин_СравнительныйАнализ.Создать();
	ЗаполнитьЗначенияСвойств(СравнительныйАнализ,ЭтотОбъект);
	СравнительныйАнализ.Показатели.Загрузить(ЭтотОбъект.Показатели.Выгрузить());
	СравнительныйАнализ.Группировки.Загрузить(ЭтотОбъект.Группировки.Выгрузить());
	СравнительныйАнализ.ВидыАналитическихДанных.Загрузить(ЭтотОбъект.ВидыАналитическихДанных.Выгрузить());
	
	НоваяСтрока = СравнительныйАнализ.ДанныеДляАнализа.Добавить();
	НоваяСтрока.ДанныеДляСравнения 	= Сценарий;
	НоваяСтрока.НачалоПериода 		= НачалоПериодаПланирования;
	НоваяСтрока.ОкончаниеПериода 	= КонецПериодаПланирования;
	
	НоваяСтрока = СравнительныйАнализ.ДанныеДляАнализа.Добавить();
	НоваяСтрока.ДанныеДляСравнения 	= ВидДанных;
	НоваяСтрока.НачалоПериода 		= НачалоПериодаПланирования;
	НоваяСтрока.ОкончаниеПериода 	= КонецПериодаПланирования;
	
	СравнительныйАнализ.Скомпоновать(ДокументРезультат,Отбор,Истина);
	ДанныеРасшифровки = СравнительныйАнализ.ДанныеРасшифровки;
	
	//
	//Для Каждого СтрокаОтбор Из Отбор Цикл
	//	СтрокаОтбор.Путь = ?(ТипЗнч(СтрокаОтбор.ПолеОтбора)=Тип("СправочникСсылка.фин_ДополнительныеРазрезыОтчетовПоБюджетам"),СтрокаОтбор.ПолеОтбора.Путь,фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(СтрокаОтбор.ПолеОтбора));
	//КонецЦикла;
	//
	////ВЫБОР СХЕМЫ КОМПОНОВКИ И НАСТРОЙКА ПОЛЕЙ НАБОРА ДАННЫХ
	//
	////Если Не ЗначениеЗаполнено(Параметр_Сценарий.Значение) Тогда
	////	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан сценарий!");
	////	Возврат;
	////КонецЕсли;
	//
	//ГенеральныйОтбор = Отбор;//Отбор.Скопировать(Новый Структура("Таблица",Справочники.фин_ТаблицыОтчетовПоБюджетам.ПустаяСсылка()));
	//
	//мГруппировки = фин_УправлениеОтчетамиБюджетирование.ПромежуточныеГруппировкиОтчета(Группировки,ОсновнаяГруппировка);
	//ТаблицаВнешнегоНабораДанных = ПолучитьТаблицуДанных(ГенеральныйОтбор,мГруппировки);
	//ДополнитьТаблицуИтогами(ТаблицаВнешнегоНабораДанных,ГенеральныйОтбор);
	//СхемаКомпоновкиДанных = ПолучитьСКД(мГруппировки);
	//Настройки = ПолучитьНастройкиСКД(Неопределено);//(Отбор);

	////ПОДГОТОВКА К ВЫПОЛНЕНИЮ - ФОРМИРОВАНИЕ МАКЕТА КОМПОНОВКИ
	//Заголовок=фин_УправлениеМногоязычнымиОтчетами.ПолучитьПереводТермина("АнализИсполненияБюджета",ЯзыкОтчета,,КЭШ)+": "+фин_УправлениеМногоязычнымиОтчетами.ПолучитьПереводТермина(Бюджет,ЯзыкОтчета,,КЭШ)+Символы.ПС+фин_УправлениеМногоязычнымиОтчетами.ПолучитьПереводТермина(ЗаголовокОтчета,ЯзыкОтчета,,КЭШ);
	//фин_УправлениеОтчетамиБюджетирование.ВыполнитьФормированиеОтчета(ЭтотОбъект,СхемаКомпоновкиДанных,КомпоновщикНастроек,Настройки,ДанныеРасшифровки,ДокументРезультат,ТаблицаВнешнегоНабораДанных,"фин_ИсполнениеБюджета",Заголовок,фин_ПроцедурыМеханизмовБюджетирования.ВерсииБюджетаЗаПериод(Бюджет,МинимальныйПериод(),МаксимальныйПериод()));	
	
КонецПроцедуры

ДоступныеПоказатели = Новый СписокЗначений;
ДоступныеГруппировки = Новый СписокЗначений;
ПереченьОсновныхРеквизитов = Новый Массив;
ПереченьОсновныхРеквизитов.Добавить("Бюджет");
ЗаполнениеПараметров = Новый Структура;
//ЗаполнениеПараметров.Вставить("ГраницаАктуальности",ТекущаяДата());
//ЗаполнениеПараметров.Вставить("ГраницаФактическихИПрогнозныхДанных",ТекущаяДата());
ЗаполнениеПараметров.Вставить("ЯзыкОтчета",фин_ОбщегоНазначенияСервер.ОсновнойЯзыкОтчетов());
ЗаполнениеПараметров.Вставить("ШиринаКолонкиПоказателя",12);
ЗаполнениеПараметров.Вставить("ШиринаКолонкиРеквизита",25);
ЗаполнениеПараметров.Вставить("ШиринаКолонкиСтатьиБюджета",25);
ЗаполнениеПараметров.Вставить("РасположениеИтоговОтчета",Перечисления.фин_РасположениеИтоговОтчета.Конец);
ЗаполнениеПараметров.Вставить("НачалоПериодаПланирования",НачалоМесяца(ТекущаяДата()));
ЗаполнениеПараметров.Вставить("КонецПериодаПланирования",КонецМесяца(ТекущаяДата()));
ЗаполнениеПараметров.Вставить("ВидДанных",Перечисления.фин_ВидыДанныхОтчета.Фактические);
ЗаполнениеПараметров.Вставить("Сценарий",фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ОсновнойСценарийПланирования"));
ЗаполнениеПараметров.Вставить("Периодичность",Перечисления.фин_Периодичность.Месяц);

ДополнительныеПараметры = Новый Массив;
//ДополнительныеПараметры.Добавить("ГраницаАктуальности");
ДополнительныеПараметры.Добавить("Периодичность");
ДополнительныеПараметры.Добавить("ЯзыкОтчета");
ДополнительныеПараметры.Добавить("ВыводитьСреднююЦену");

ПараметрыОформления = Новый Массив;
ПараметрыОформления.Добавить("ЗаголовокОтчета");
ПараметрыОформления.Добавить("ВыводитьКодыСтрокБюджета");
ПараметрыОформления.Добавить("УпорядочиваниеСтатей");
ПараметрыОформления.Добавить("ШиринаКолонкиРеквизита");
ПараметрыОформления.Добавить("ШиринаКолонкиСтатьиБюджета");
ПараметрыОформления.Добавить("ШиринаКолонкиПоказателя");
ПараметрыОформления.Добавить("ВыводитьГруппыСтатейВнизу");
ПараметрыОформления.Добавить("АналитическиеПоляВОднойКолонке");
ПараметрыОформления.Добавить("ПоказателиВОднойКолонке");
ПараметрыОформления.Добавить("РасположениеИтоговОтчета");

ДанныеРасшифровкиМакета = Новый Соответствие;

КЭШ = Новый Соответствие;

ДополнительныеПредставления = Новый СписокЗначений;

ОтборыРасшифровки = Новый Массив;

ТаблицаОтбора = Новый ТаблицаЗначений;
ТаблицаОтбора.Колонки.Добавить("Поле");
ТаблицаОтбора.Колонки.Добавить("ВидСравнения");
ТаблицаОтбора.Колонки.Добавить("Значение");
