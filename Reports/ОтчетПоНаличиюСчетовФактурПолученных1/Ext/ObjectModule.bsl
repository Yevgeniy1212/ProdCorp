#Если Клиент Тогда

Перем мСписокСтруктурныхЕдиниц Экспорт;

// Процедура формирует табличный документ с отчетом по наличию счетов-фактур.
//
// Параметры:
//  ДокументРезультат - табличный документ, в который выводится
//                      отчет по наличию счетов-фактур
//  ТаблицаРезультат - таблица значений, содержащая данные для построения
//                     отчета
//
// Возвращаемое значение:
//  Нет.
//
Процедура СформироватьОтчетПоНаличиюСчетовФактур(ДокументРезультат, ТаблицаРезультат) Экспорт
	
	ДокументРезультат.Очистить();
	
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ДокументРезультат.ПолеСверху         = 10;
	ДокументРезультат.ПолеСнизу          = 10;
	ДокументРезультат.ПолеСлева          = 20;
	ДокументРезультат.ПолеСправа         = 20;
	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетПоНаличиюСчетовФактур";
	
	// Получим макет и области макета.
	Макет = ПолучитьМакет("ОтчетПоНаличиюСчетовФактур");
	
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	Шапка           = Макет.ПолучитьОбласть("Шапка");
	Строка          = Макет.ПолучитьОбласть("Строка");
	Подвал          = Макет.ПолучитьОбласть("Подвал");
	
	// Выведем заголовок отчета.
			
	ЗаголовокОтчета.Параметры.НаименованиеОрганизации = РаботаСДиалогами.ВыгрузитьСписокВСтроку(мСписокСтруктурныхЕдиниц);
		
	Если ЗначениеЗаполнено(НачалоПериода) И НЕ ЗначениеЗаполнено(КонецПериода) Тогда
		ЗаголовокОтчета.Параметры.ОписаниеПериода = "С " + Формат(НачалоПериода, "ДЛФ=DD");
	ИначеЕсли НЕ ЗначениеЗаполнено(НачалоПериода) И ЗначениеЗаполнено(КонецПериода) Тогда
		ЗаголовокОтчета.Параметры.ОписаниеПериода = "По " + Формат(КонецПериода, "ДЛФ=DD");
	ИначеЕсли ЗначениеЗаполнено(НачалоПериода) И ЗначениеЗаполнено(КонецПериода) Тогда
		ЗаголовокОтчета.Параметры.ОписаниеПериода = ПредставлениеПериода(НачалоДня(НачалоПериода), КонецДня(КонецПериода), "ФП=Истина");
	Иначе
		ЗаголовокОтчета.Параметры.ОписаниеПериода = "(Без ограничения периода)";
	КонецЕсли;
		
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	// Выведем шапку таблицы.
	ДокументРезультат.Вывести(Шапка);
	
	// Выведем строки таблицы.
	Для Каждого СтрокаРезультат Из ТаблицаРезультат Цикл
		
	
		Если ВидДокумента = 1 И (ТипЗнч(СтрокаРезультат.ДокументОснование) = Тип("ДокументСсылка.АвансовыйОтчет") 
			ИЛИ ТипЗнч(СтрокаРезультат.ДокументОснование) = Тип("ДокументСсылка.Сторнирование")) Тогда  
			Продолжить;   			
		ИначеЕсли ВидДокумента = 2 И (ТипЗнч(СтрокаРезультат.ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
			ИЛИ ТипЗнч(СтрокаРезультат.ДокументОснование) = Тип("ДокументСсылка.Сторнирование")) Тогда
			Продолжить;
		ИначеЕсли ВидДокумента = 3 И (ТипЗнч(СтрокаРезультат.ДокументОснование) = Тип("ДокументСсылка.АвансовыйОтчет") 
			ИЛИ ТипЗнч(СтрокаРезультат.ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")) Тогда
			Продолжить;
		КонецЕсли;  	  
				
		Строка.Параметры.Заполнить(СтрокаРезультат);
		
		СуммаНДС = 0;
		СуммаБезНДС = 0;
		СчетЗатрат = "";
		Субконто1 = "";
		Строка.Параметры.Контрагент = "";
		Строка.Параметры.СуммаВсего = "";
		Строка.Параметры.Комментарий = "";
		
		Если ТипЗнч(СтрокаРезультат.ДокументОснование) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
			
			Выборка = ПолучитьСчетЗатрат(СтрокаРезультат.ДокументОснование);
			
			Пока Выборка.Следующий() Цикл
				
				СчетЗатрат = СчетЗатрат + ?(СчетЗатрат = "", Выборка.СчетЗатрат, ", "+Выборка.СчетЗатрат);
							
			КонецЦикла;
			
			Выборка = ПолучитьСубконтоЗатрат(СтрокаРезультат.ДокументОснование);
			
			Пока Выборка.Следующий() Цикл
				
				Субконто1 = Субконто1 + ?(Субконто1 = "", Выборка.Субконто1, ", "+Выборка.Субконто1);
				
			КонецЦикла;
			
			Если ТипЗнч(СтрокаРезультат.ДокументОснование) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда 
				Строка.Параметры.Контрагент = СтрокаРезультат.ДокументОснование.ФизЛицо;
			Иначе 				
				Строка.Параметры.Контрагент = СтрокаРезультат.ДокументОснование.Контрагент;
			КонецЕсли;
						
			Строка.Параметры.СуммаВсего = СтрокаРезультат.ДокументОснование.СуммаДокумента;
			Строка.Параметры.Комментарий = СтрокаРезультат.ДокументОснование.Комментарий;
			
			СуммаНДС = СтрокаРезультат.ДокументОснование.Прочее.Итог("СуммаНДС");
			Если СтрокаРезультат.ДокументОснование.СуммаВключаетНДС Тогда
				СуммаБезНДС = СтрокаРезультат.ДокументОснование.СуммаДокумента - СуммаНДС;
			Иначе
				СуммаБезНДС = СтрокаРезультат.ДокументОснование.СуммаДокумента;
			КонецЕсли;				
		ИначеЕсли ТипЗнч(СтрокаРезультат.ДокументОснование) <> Тип("ДокументСсылка.Сторнирование") Тогда
			
			Выборка = ПолучитьСчетЗатрат(СтрокаРезультат.ДокументОснование);
			
			Пока Выборка.Следующий() Цикл
				
				СчетЗатрат = СчетЗатрат + ?(СчетЗатрат = "", Выборка.СчетЗатрат, ", "+Выборка.СчетЗатрат);
							
			КонецЦикла;
			
			Выборка = ПолучитьСубконтоЗатрат(СтрокаРезультат.ДокументОснование);
			
			Пока Выборка.Следующий() Цикл
				
				Субконто1 = Субконто1 + ?(Субконто1 = "", Выборка.Субконто1, ", "+Выборка.Субконто1);
				
			КонецЦикла;
			
			Если ТипЗнч(СтрокаРезультат.ДокументОснование) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда 
				Строка.Параметры.Контрагент = СтрокаРезультат.ДокументОснование.ФизЛицо;
			Иначе 				
				Строка.Параметры.Контрагент = СтрокаРезультат.ДокументОснование.Контрагент;
			КонецЕсли;
			
			Строка.Параметры.СуммаВсего = СтрокаРезультат.ДокументОснование.СуммаДокумента;
			Строка.Параметры.Комментарий = СтрокаРезультат.ДокументОснование.Комментарий;
			
			Если ТипЗнч(СтрокаРезультат.ДокументОснование) = Тип("ДокументСсылка.ур_ПоступлениеЗерна") Тогда 
                 СуммаНДС = СтрокаРезультат.ДокументОснование.Услуги.Итог("СуммаНДС")
						+ СтрокаРезультат.ДокументОснование.Товары.Итог("СуммаНДС");
			Иначе
				СуммаНДС = СтрокаРезультат.ДокументОснование.Услуги.Итог("СуммаНДС")
						+ СтрокаРезультат.ДокументОснование.Товары.Итог("СуммаНДС") 
						+ СтрокаРезультат.ДокументОснование.ОС.Итог("СуммаНДС");
			КонецЕсли;
					
			Если СтрокаРезультат.ДокументОснование.СуммаВключаетНДС Тогда
				СуммаБезНДС = СтрокаРезультат.ДокументОснование.СуммаДокумента - СуммаНДС;
			Иначе
				СуммаБезНДС = СтрокаРезультат.ДокументОснование.СуммаДокумента;
			КонецЕсли;
		КонецЕсли;	
		
		Строка.Параметры.СуммаНДС = СуммаНДС;
		Строка.Параметры.СуммаБезНДС = СуммаБезНДС;
		Строка.Параметры.СчетЗатрат = СчетЗатрат;
		Строка.Параметры.Субконто1 = Субконто1;
		
		Строка.Параметры.СчетФактураПроведен = ?(СтрокаРезультат.СчетФактураПроведен = Истина, "●", "");
		
		Строка.Параметры.НомерСтроки = ТаблицаРезультат.Индекс(СтрокаРезультат) + 1;
		
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(Строка);
		СтрокаСПодвалом.Добавить(Подвал);

		Если НЕ УниверсальныеМеханизмы.ПроверитьВыводДляТабличногоДокумента(ДокументРезультат, СтрокаСПодвалом) Тогда
			
			ДокументРезультат.Вывести(Подвал);
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			ДокументРезультат.Вывести(Шапка);
			
		КонецЕсли;
		
		Если ТипЗнч(СтрокаРезультат.ДокументОснование) <> Тип("ДокументСсылка.Сторнирование") Тогда
			Если НЕ ИсточникФинансирования.Пустая() И СтрокаРезультат.ДокументОснование.ИсточникФинансирования <> ИсточникФинансирования Тогда
				Продолжить;
			КонецЕсли;
				
			Строка.Параметры.ИсточникФинансирования = СтрокаРезультат.ДокументОснование.ИсточникФинансирования;
		Конецесли;
		
		Если ТипЗнч(СтрокаРезультат.ДокументОснование) = Тип("ДокументСсылка.Сторнирование") Тогда
			
			ЗапросСтор = Новый Запрос;
			ЗапросСтор.Текст =
			"ВЫБРАТЬ
			|	ТиповойОбороты.КорСубконто1 КАК Контрагент,
			|	ТиповойОбороты.ИсточникФинансирования,
			|	ТиповойОбороты.Счет КАК СчетЗатрат,
			|	ТиповойОбороты.СуммаОборот КАК СуммаВсего,
			|	ТиповойОбороты.Регистратор КАК ДокументОснование
			|ПОМЕСТИТЬ ДанныеБУ
			|ИЗ
			|	РегистрБухгалтерии.Типовой.Обороты(, , Регистратор, , , , , &ВидКонтрагента) КАК ТиповойОбороты
			|ГДЕ
			|	ТиповойОбороты.Регистратор = &Документ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДанныеБУ.Контрагент,
			|	ДанныеБУ.ИсточникФинансирования,
			|	ДанныеБУ.СчетЗатрат,
			|	СУММА(ДанныеБУ.СуммаВсего) КАК СуммаВсего,
			|	ДанныеБУ.ДокументОснование,
			|	СУММА(ЕСТЬNULL(НДСКВозмещениюОбороты.СуммаНДСОборот, 0)) КАК СуммаНДС,
			|	СУММА(ДанныеБУ.СуммаВсего - ЕСТЬNULL(НДСКВозмещениюОбороты.СуммаНДСОборот, 0)) КАК СуммуБезНДС
			|ИЗ
			|	ДанныеБУ КАК ДанныеБУ
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСКВозмещению.Обороты(, , Регистратор, ) КАК НДСКВозмещениюОбороты
			|		ПО ДанныеБУ.Контрагент = НДСКВозмещениюОбороты.Контрагент
			|			И ДанныеБУ.ДокументОснование = НДСКВозмещениюОбороты.Регистратор
			|
			|СГРУППИРОВАТЬ ПО
			|	ДанныеБУ.Контрагент,
			|	ДанныеБУ.ИсточникФинансирования,
			|	ДанныеБУ.СчетЗатрат,
			|	ДанныеБУ.ДокументОснование";
			
			ЗапросСтор.УстановитьПараметр("Документ", СтрокаРезультат.ДокументОснование);
			ЗапросСтор.УстановитьПараметр("ВидКонтрагента", ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
			
			ВыборкаСтор = ЗапросСтор.Выполнить().Выбрать();
			Пока ВыборкаСтор.Следующий() Цикл
				Строка.Параметры.Заполнить(ВыборкаСтор);
			КонецЦикла;
			
			Строка.Параметры.Комментарий = СтрокаРезультат.ДокументОснование.Комментарий;
			
			ДополнитьСторнирование(Строка.Параметры, СтрокаРезультат.ДокументОснование, ВыборкаСтор.СчетЗатрат);
			
			Если НЕ ИсточникФинансирования.Пустая() И ВыборкаСтор.ИсточникФинансирования <> ИсточникФинансирования Тогда
				Продолжить;
			КонецЕсли;
			
		Иначе
			
			Строка.Параметры.ВидПоступления = ПолучитьВидПоступления(СтрокаРезультат.ДокументОснование);
						
		Конецесли; 	
		
		ДокументРезультат.Вывести(Строка);
		
	КонецЦикла;

	ДокументРезультат.Вывести(Подвал);
	
	ДокументРезультат.ТолькоПросмотр = Истина;
	
КонецПроцедуры // СформироватьОтчетПоНаличиюСчетовФактур()

Процедура ДополнитьСторнирование(Параметры, Документ, Счет)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТиповойОбороты.Субконто1 КАК СтатьяЗатрат
	|ИЗ
	|	РегистрБухгалтерии.Типовой.Обороты(, , Регистратор, Счет = &СчетЗатрат, , , , ) КАК ТиповойОбороты
	|ГДЕ
	|	ТиповойОбороты.Регистратор = &Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТиповойОбороты.Субконто1";
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.УстановитьПараметр("СчетЗатрат", Счет);
	
	СтатьиЗатрат = "";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если СтатьиЗатрат = "" Тогда
			СтатьиЗатрат = СтатьиЗатрат + Выборка.СтатьяЗатрат;
		Иначе  			
			СтатьиЗатрат = СтатьиЗатрат +", "+ Выборка.СтатьяЗатрат;
		КонецЕсли;		
	КонецЦикла;
	
	Параметры.Субконто1 = СтатьиЗатрат;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСКВозмещениюОбороты.ВидОперацииПоступления КАК ВидПоступления
	|ИЗ
	|	РегистрНакопления.НДСКВозмещению.Обороты(, , Регистратор, ) КАК НДСКВозмещениюОбороты
	|ГДЕ
	|	НДСКВозмещениюОбороты.Регистратор = &Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСКВозмещениюОбороты.ВидОперацииПоступления";
	Запрос.УстановитьПараметр("Документ", Документ);
		
	ВидПоступления = "";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ВидПоступления = "" Тогда
			ВидПоступления = ВидПоступления + Выборка.ВидПоступления;
		Иначе  			
			ВидПоступления = ВидПоступления +", "+ Выборка.ВидПоступления;
		КонецЕсли;
	КонецЦикла;
	
	Параметры.ВидПоступления = ВидПоступления;	
	
КонецПроцедуры

Функция ПолучитьВидПоступления(Документ)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.НДСВидПоступления
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугУслуги.НДСВидПоступления
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	|ГДЕ
	|	ПоступлениеТоваровУслугУслуги.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугОС.НДСВидПоступления
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ОС КАК ПоступлениеТоваровУслугОС
	|ГДЕ
	|	ПоступлениеТоваровУслугОС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансовыйОтчетПрочее.НДСВидПоступления
	|ИЗ
	|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
	|ГДЕ
	|	АвансовыйОтчетПрочее.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансовыйОтчетТовары.НДСВидПоступления
	|ИЗ
	|	Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчетТовары
	|ГДЕ
	|	АвансовыйОтчетТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансовыйОтчетТовары.НДСВидПоступления
	|ИЗ
	|	Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчетТовары
	|ГДЕ
	|	АвансовыйОтчетТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.НДСВидПоступления КАК ВидПоступления
	|ИЗ
	|	Данные КАК Данные
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.НДСВидПоступления";
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВидПоступления = "";
	
	Пока Выборка.Следующий() Цикл
		
		Если ВидПоступления = "" Тогда
			ВидПоступления = ВидПоступления + Выборка.ВидПоступления;
		Иначе  			
			ВидПоступления = ВидПоступления +", "+ Выборка.ВидПоступления;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ВидПоступления;
		
КонецФункции	

Функция ПолучитьСчетЗатрат(ДокументОснование)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АвансовыйОтчетПрочее.СчетЗатратБУ КАК СчетЗатрат
	|ИЗ
	|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
	|ГДЕ
	|	АвансовыйОтчетПрочее.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчетПрочее.СчетЗатратБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугУслуги.СчетЗатратБУ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	|ГДЕ
	|	ПоступлениеТоваровУслугУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугУслуги.СчетЗатратБУ";
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка;
	
КонецФункции

Функция ПолучитьСубконтоЗатрат(ДокументОснование)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АвансовыйОтчетПрочее.СубконтоЗатратБУ1 КАК Субконто1
	|ИЗ
	|	Документ.АвансовыйОтчет.Прочее КАК АвансовыйОтчетПрочее
	|ГДЕ
	|	АвансовыйОтчетПрочее.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансовыйОтчетПрочее.СубконтоЗатратБУ1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугУслуги.СубконтоЗатратБУ1
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	|ГДЕ
	|	ПоступлениеТоваровУслугУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугУслуги.СубконтоЗатратБУ1";
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка;
	
КонецФункции

#КонецЕсли