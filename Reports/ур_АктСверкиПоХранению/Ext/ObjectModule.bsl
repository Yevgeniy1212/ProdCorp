////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если Клиент Тогда

Функция СформироватьЗапрос(Типсчета)
	
	Запрос = Новый Запрос;
	
	ТекстУсловия = "";
	Союз = "";
	
	Если ОтборОрганизации Тогда
		
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Если ВидСравненияОрганизации = ВидСравнения.Равно Тогда
			ВидСравненияОрганизацииСтрокой = " = &Организация" 
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.НеРавно Тогда
			ВидСравненияОрганизацииСтрокой = " <> &Организация"
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.ВСписке Тогда
			ВидСравненияОрганизацииСтрокой = " В (&Организация)"
		Иначе
			ВидСравненияОрганизацииСтрокой = " НЕ В (&Организация)"
		КонецЕсли; 
		
		ТекстУсловия = ТекстУсловия + Союз + "Организация " + ВидСравненияОрганизацииСтрокой;
		Союз         = " И ";
		
	КонецЕсли;
	
	
	Если ОтборКонтрагент Тогда
		
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		
		Если ВидСравненияКонтрагент = ВидСравнения.Равно Тогда
			ВидСравненияКонтрагентСтрокой = " = &Контрагент" 
		ИначеЕсли ВидСравненияКонтрагент = ВидСравнения.НеРавно Тогда
			ВидСравненияКонтрагентСтрокой = " <> &Контрагент"
		ИначеЕсли ВидСравненияКонтрагент = ВидСравнения.ВСписке Тогда
			ВидСравненияКонтрагентСтрокой = " В (&Контрагент)"
		ИначеЕсли ВидСравненияКонтрагент = ВидСравнения.НеВСписке Тогда
			ВидСравненияКонтрагентСтрокой = " НЕ В (&Контрагент)"
		ИначеЕсли ВидСравненияКонтрагент = ВидСравнения.ВСпискеПоИерархии 
		      ИЛИ ВидСравненияКонтрагент = ВидСравнения.ВИерархии Тогда
			ВидСравненияКонтрагентСтрокой = " В ИЕРАРХИИ (&Контрагент)"
		ИначеЕсли ВидСравненияКонтрагент = ВидСравнения.НеВСпискеПоИерархии 
		      ИЛИ ВидСравненияКонтрагент = ВидСравнения.НеВИерархии Тогда
			ВидСравненияКонтрагентСтрокой = " НЕ В ИЕРАРХИИ (&Контрагент)"
		КонецЕсли; 
		
		ТекстУсловия = ТекстУсловия + Союз + "Субконто1 " + ВидСравненияКонтрагентСтрокой;
		Союз         = " И ";
		
	КонецЕсли;
	
	Если ОтборТипОперации Тогда
		
		Запрос.УстановитьПараметр("ТипОперации", ТипОперации);
		
		Если ВидСравненияТипОперации = ВидСравнения.Равно Тогда
			ВидСравненияТипОперацииСтрокой = " = &ТипОперации" 
		ИначеЕсли ВидСравненияТипОперации = ВидСравнения.НеРавно Тогда
			ВидСравненияТипОперацииСтрокой = " <> &ТипОперации"
		ИначеЕсли ВидСравненияТипОперации = ВидСравнения.ВСписке Тогда
			ВидСравненияТипОперацииСтрокой = " В (&ТипОперации)"
		ИначеЕсли ВидСравненияТипОперации = ВидСравнения.НеВСписке Тогда
			ВидСравненияТипОперацииСтрокой = " НЕ В (&ТипОперации)"
		ИначеЕсли ВидСравненияТипОперации = ВидСравнения.ВСпискеПоИерархии 
			  ИЛИ ВидСравненияТипОперации = ВидСравнения.ВИерархии Тогда
			ВидСравненияТипОперацииСтрокой = " В ИЕРАРХИИ (&ТипОперации)"
		ИначеЕсли ВидСравненияТипОперации = ВидСравнения.НеВСпискеПоИерархии 
			  ИЛИ ВидСравненияТипОперации = ВидСравнения.НеВИерархии Тогда
			ВидСравненияТипОперацииСтрокой = " НЕ В ИЕРАРХИИ (&ТипОперации)"
		КонецЕсли; 
		
		ТекстУсловия = ТекстУсловия + Союз + "Субконто2 " + ВидСравненияТипОперацииСтрокой;
		Союз         = " И ";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачПериода", НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонПериода", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ТипСчета", ТипСчета);
	
	
	мВидыСубконто = Новый Массив;
	мВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
	мВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ТипыОпераций);
	
	мСписокСчетов = Новый Массив;
	мСписокСчетов.Добавить(ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоставщикамИПодрядчикам);
	мСписокСчетов.Добавить(ПланыСчетов.Типовой.КраткосрочнаяКредиторскаяЗадолженностьДочернимОрганизациям);
	
	
	Запрос.УстановитьПараметр("мВидыСубконто", мВидыСубконто);
	Запрос.УстановитьПараметр("СчетУчета", мСписокСчетов);
	
	Текст =
	"ВЫБРАТЬ
	|	ТиповойОстаткиИОбороты.Период КАК Период,
	|	ЕстьNull(ТиповойОстаткиИОбороты.СуммаНачальныйОстатокКт,0) КАК НачальныйОстаток,
	|	ЕстьNull(ТиповойОстаткиИОбороты.СуммаКонечныйОстатокКт,0) КАК КонечныйОстаток,
	|	ЕстьNull(ТиповойОстаткиИОбороты.СуммаОборотКт,0) КАК Начислено,
	|	ЕстьNull(ТиповойОстаткиИОбороты.СуммаОборотДт,0) КАК Оплачено
	|ИЗ
	|	РегистрБухгалтерии.Типовой.ОстаткиИОбороты(&НачПериода, &КонПериода, 
	|							Месяц, , 
	|							Счет В ИЕРАРХИИ (&СчетУчета),
	|							&мВидыСубконто,"+ТекстУсловия+" 
	|							) КАК ТиповойОстаткиИОбороты
	//|ГДЕ
	//|	ТиповойОстаткиИОбороты.Счет.ТипСчета = &ТипСчета
	|ИТОГИ
	|	Сумма(НачальныйОстаток),
	|	Сумма(КонечныйОстаток),
	|	Сумма(Начислено),
	|	Сумма(Оплачено)
	|ПО
	|	ОБЩИЕ,Период
	|";
	
	Запрос.Текст = Текст;

	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапрос()


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 

Процедура СформироватьОтчет(ДокументРезультат) Экспорт	
	
	
	ДокументРезультат.Очистить();
	
	//ДокументРезультат.ОриентацияСтраницы = "Ландшафт";
	//ДокументРезультат.АвтоМасштаб = истина;
	
	Макет 		 				= ПолучитьМакет("АктСверки");
	ОбластьЗаголовок			= Макет.ПолучитьОбласть("Заголовок");
	ОбластьОстатокНаНачало		= Макет.ПолучитьОбласть("ОстатокНаНачало");
	ОбластьШапка				= Макет.ПолучитьОбласть("Шапка");
	ОбластьТипРесурса			= Макет.ПолучитьОбласть("ТипРесурса");
	ОбластьСтрока				= Макет.ПолучитьОбласть("Строка");
	ОбластьСтрокаЗадолжности	= Макет.ПолучитьОбласть("СтрокаЗадолжности");
	ОбластьПодвал				= Макет.ПолучитьОбласть("Подвал");
	ОбластьПустыеСтроки			= Макет.ПолучитьОбласть("ПустыеСтроки");
	
	НаименованиеОрганизации = Организация;
	НаименованиеКонтрагента = Контрагент.НаименованиеПолное;
	
	Руководители = ОбщегоНазначения.ОтветственныеЛицаОрганизаций(Организация, КонецДня(КонПериода),);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	
	ТекстЗаголовка = "взаимных расчетов "
					+ "между " + НаименованиеОрганизации + " и " + НаименованиеКонтрагента;
	
	СтрЗаголовокТаблица = НаименованиеОрганизации.НаименованиеПолное
				+ " в лице директора " + ?(ЗНАЧЕНИЕЗАПОЛНЕНО(Руководитель),Руководитель,"_______________________") 
				+ " и главного бухгалтера " + ?(ЗНАЧЕНИЕЗАПОЛНЕНО(Бухгалтер),Бухгалтер,"_______________________") 
				+ ", с одной стороны, "
				+ "и " + НаименованиеКонтрагента
				+ " в лице директора _______________________" 
				+ " и главного бухгалтера _______________________" 
				+ " с другй стороны произвели сверку взаимных расчетов"
				+ " с " + Формат(НачПериода, "ДФ=dd.MM.yyyy") + " по " + Формат(КонПериода, "ДФ=dd.MM.yyyy")
				+ " и согласились о нижеследующем:";
	
	ОбластьЗаголовок.Параметры.ТекстЗаголовка		 = ТекстЗаголовка;
	ОбластьЗаголовок.Параметры.СтрЗаголовокТаблица 	 = СтрЗаголовокТаблица;
	
	ДокументРезультат.Вывести(ОбластьЗаголовок);
	
	ОбластьТипРесурса.Параметры.ТипРесурса = "1.По государственным ресурсам зерна:";
	
	ДокументРезультат.Вывести(ОбластьТипРесурса);
	ДокументРезультат.Вывести(ОбластьШапка);
	
	СуммаЗадолжности =0;
	ОбщаяСуммаЗадолжности =0;
	
	//Результат = СформироватьЗапрос(Перечисления.ТипыСчетов.гос);
	
	//Если НЕ Результат.Пустой() Тогда
	//	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//	
	//	ВыборкаОбщийИтог.Следующий();// Общий итог
	//	
	//	ОбластьОстатокНаНачало.Параметры.Заполнить(ВыборкаОбщийИтог);
	//	ДокументРезультат.Вывести(ОбластьОстатокНаНачало);
	//	
	//	СуммаЗадолжности = ВыборкаОбщийИтог.КонечныйОстаток;
	//	
	//	ВыборкаПоПериодам = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период");
	//	Пока ВыборкаПоПериодам.Следующий() Цикл
	//		ОбластьСтрока.Параметры.Заполнить(ВыборкаПоПериодам);
	//		ДокументРезультат.Вывести(ОбластьСтрока);
	//	КонецЦикла;
	//Иначе
			ДокументРезультат.Вывести(ОбластьПустыеСтроки);
	//КонецЕсли;
	
	ПредставлениеЗадолжности = "Задолжность " + ?(СуммаЗадолжности < 0,НаименованиеКонтрагента,НаименованиеОрганизации)
								+ " по государственным ресурсам зера:";
								
							
	ОбластьСтрокаЗадолжности.Параметры.ПредставлениеЗадолжности =ПредставлениеЗадолжности;
	ОбластьСтрокаЗадолжности.Параметры.СуммаЗадолжности = ?(СуммаЗадолжности < 0,-СуммаЗадолжности,СуммаЗадолжности);
	ОбщаяСуммаЗадолжности =ОбщаяСуммаЗадолжности+СуммаЗадолжности;
	
	ДокументРезультат.Вывести(ОбластьСтрокаЗадолжности);
	
	
	ОбластьТипРесурса.Параметры.ТипРесурса = "2.По собственным ресурсам зерна:";
	
	ДокументРезультат.Вывести(ОбластьТипРесурса);
	ДокументРезультат.Вывести(ОбластьШапка);
	
	СуммаЗадолжности =0;
	
	Результат = СформироватьЗапрос(Перечисления.ТипыСчетов.соб);
	
	Если НЕ Результат.Пустой() Тогда
		ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ВыборкаОбщийИтог.Следующий();// Общий итог
		
		ОбластьОстатокНаНачало.Параметры.Заполнить(ВыборкаОбщийИтог);
		ДокументРезультат.Вывести(ОбластьОстатокНаНачало);
		
		СуммаЗадолжности = ВыборкаОбщийИтог.КонечныйОстаток;
		
		ВыборкаПоПериодам = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период");
		Пока ВыборкаПоПериодам.Следующий() Цикл
			ОбластьСтрока.Параметры.Заполнить(ВыборкаПоПериодам);
			ДокументРезультат.Вывести(ОбластьСтрока);
		КонецЦикла;
	Иначе
			ДокументРезультат.Вывести(ОбластьПустыеСтроки);
	Конецесли;
	
	ПредставлениеЗадолжности = "Задолжность " + ?(СуммаЗадолжности < 0,НаименованиеКонтрагента,НаименованиеОрганизации)
								+ " по собственным ресурсам зера:";
								
	ОбластьСтрокаЗадолжности.Параметры.ПредставлениеЗадолжности =ПредставлениеЗадолжности;
	ОбластьСтрокаЗадолжности.Параметры.СуммаЗадолжности = ?(СуммаЗадолжности < 0,-СуммаЗадолжности,СуммаЗадолжности);
	ОбщаяСуммаЗадолжности =ОбщаяСуммаЗадолжности+СуммаЗадолжности;
	
	ДокументРезультат.Вывести(ОбластьСтрокаЗадолжности);

	
	ПредставлениеЗадолжности = "Таким образом задолжность " + ?(ОбщаяСуммаЗадолжности < 0,НаименованиеКонтрагента,НаименованиеОрганизации)
								+ " перед "+ ?(ОбщаяСуммаЗадолжности < 0,НаименованиеОрганизации,НаименованиеКонтрагента)
								+ " по состоянию на "+Формат(КонПериода, "ДФ=dd.MM.yyyy");
	ОбластьСтрокаЗадолжности.Параметры.ПредставлениеЗадолжности =ПредставлениеЗадолжности;
	ОбластьСтрокаЗадолжности.Параметры.СуммаЗадолжности =?(ОбщаяСуммаЗадолжности < 0,- ОбщаяСуммаЗадолжности,ОбщаяСуммаЗадолжности);
	
	ДокументРезультат.Вывести(ОбластьСтрокаЗадолжности);
	
	ОбластьПодвал.Параметры.НазваниеОрганизации = НаименованиеОрганизации;
	ОбластьПодвал.Параметры.НазваниеКонтрагента = НаименованиеКонтрагента;
	ОбластьПодвал.Параметры.Руководитель 		= Руководитель;
	ОбластьПодвал.Параметры.Бухгалтер 			= Бухгалтер;

	ДокументРезультат.Вывести(ОбластьПодвал);
	
	
	
КонецПроцедуры // СформироватьОтчет()

#КонецЕсли
