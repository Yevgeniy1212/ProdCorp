Перем мСписокСтруктурныхЕдиниц Экспорт;
Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;
Перем ПромежуточныеДанные Экспорт;

#Если Клиент Тогда

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	Результат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ВыводЗаголовкаОтчета(ЭтотОбъект, Результат);
	ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных);
	ОтчетыДляРуководителя.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных);
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	
	// Выполним дополнительную обработку Результата отчета
	ОбработкаРезультатаОтчета(Результат);
	
	Возврат;
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных) Экспорт
	
	ВнешниеНаборыДанных = Новый Структура;
	ВыборкаДанных = ПолучитьВыборку();
	ВнешниеНаборыДанных.Вставить("ТаблицаДанных", ВыборкаДанных);

	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "Период", Период);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "Тенге",  Константы.ВалютаРегламентированногоУчета.Получить());
	Если ЗначениеЗаполнено(мСписокСтруктурныхЕдиниц) Тогда
		ТиповыеОтчеты.ДобавитьОтбор(КомпоновщикНастроек, "Организация", мСписокСтруктурныхЕдиниц, ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
	
	СтруктураПараметр   = ОтчетыДляРуководителя.ПолучитьОписаниеСтруктурыПараметра();
	ПромежуточныеДанные = ОтчетыДляРуководителя.ПолучитьОписаниеТаблицыПромежуточныеДанные();
	
	Выборка = ВыборкаДанных.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПараметр, Выборка);
		СтруктураПараметр.Знак         = "+";
		СтруктураПараметр.Сумма        = Выборка.Остаток;
		СтруктураПараметр.Субконто1    = Выборка.ВидДенежныхСредств;
		СтруктураПараметр.Субконто2    = Выборка.Аналитика;
		СтруктураПараметр.КорСубконто1 = Выборка.Валюта;
		ОтчетыДляРуководителя.ДобавитьЗаписьВТаблицуПромежуточныеДанные(ПромежуточныеДанные, СтруктураПараметр);
	КонецЦикла;

	ТиповыеОтчеты.ДоработатьТиповойОтчетПередВыводом(ЭтотОбъект);
	
КонецПроцедуры

Процедура ВыводЗаголовкаОтчета(ОтчетОбъект, Результат)
	
	МакетЗаголовок = ПолучитьОбщийМакет("ЗаголовокОтчета");
	ОбластьЗаголовок = МакетЗаголовок.ПолучитьОбласть("Заголовок");
	
	ОбластьЗаголовок.Параметры.ЗаголовокОтчета = ПолучитьТекстЗаголовка();

	Результат.Вывести(ОбластьЗаголовок);
			
КонецПроцедуры

Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина) Экспорт 
	
	ЗаголовокОтчета = "Остатки денежных средств";
	
	Возврат ТиповыеОтчеты.ПолучитьТекстЗаголовка(ЭтотОбъект, ЗаголовокОтчета, ОрганизацияВНачале);

КонецФункции

Процедура ОбработкаРезультатаОтчета(Результат)
	
	ТиповыеОтчеты.ОбработкаРезультатаОтчета(ЭтотОбъект, Результат);

КонецПроцедуры

// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	
КонецПроцедуры

Функция ПолучитьВыборку() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Типовой.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаКассы
	|ИЗ
	|	ПланСчетов.Типовой КАК Типовой
	|ГДЕ
	|	Типовой.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Типовой.ДенежныеСредстваВКассе))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Типовой.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаУчетаБезналичные
	|ИЗ
	|	ПланСчетов.Типовой КАК Типовой
	|ГДЕ
	|	(Типовой.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Типовой.ДенежныеСредстваНаТекущихБанковскихСчетах))
	|			ИЛИ Типовой.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Типовой.ДенежныеСредстваНаТекущихБанковскихСчетах))
	|			ИЛИ Типовой.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Типовой.ДенежныеСредстваНаСберегательныхСчетах))
	|			ИЛИ Типовой.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПрочиеДенежныеСредства)))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Типовой.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаУчетаПодотчет
	|ИЗ
	|	ПланСчетов.Типовой КАК Типовой
	|ГДЕ
	|	Типовой.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Типовой.КраткосрочнаяДебиторскаяЗадолженностьРаботников), ЗНАЧЕНИЕ(ПланСчетов.Типовой.ДолгосрочнаяДебиторскаяЗадолженностьРаботников))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетаКассы.Счет
	|ПОМЕСТИТЬ СчетаУчета
	|ИЗ
	|	СчетаКассы КАК СчетаКассы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаУчетаБезналичные.Счет
	|ИЗ
	|	СчетаУчетаБезналичные КАК СчетаУчетаБезналичные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаУчетаПодотчет.Счет
	|ИЗ
	|	СчетаУчетаПодотчет КАК СчетаУчетаПодотчет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоВалюта > 0
	|			ТОГДА ""Итого, тенге""
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Валюта
	|ПОМЕСТИТЬ Валюты
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|				КОГДА Таблица.Счет.Валютный
	|					ТОГДА Таблица.Валюта
	|				ИНАЧЕ &Тенге
	|			КОНЕЦ) КАК КоличествоВалюта
	|	ИЗ
	|		РегистрБухгалтерии.Типовой.Остатки(
	|				&Период,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаУчета.Счет
	|					ИЗ
	|						СчетаУчета КАК СчетаУчета),
	|				,
	|				Организация В (&Организация)) КАК Таблица
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА Таблица.Счет.Валютный
	|					ТОГДА Таблица.Валюта
	|				ИНАЧЕ &Тенге
	|			КОНЕЦ <> &Тенге) КАК ВложенныйЗапрос
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Деньги в кассе"" КАК ВидДенежныхСредств,
	|	Наличные.Организация КАК Организация,
	|	""Итого, тенге"" КАК Валюта,
	|	ВЫРАЗИТЬ(Наличные.Субконто1 КАК Справочник.Кассы) КАК Аналитика,
	|	Наличные.СуммаОстаток КАК Остаток,
	|	Наличные.Счет
	|ИЗ
	|	РегистрБухгалтерии.Типовой.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаКассы.Счет
	|				ИЗ
	|					СчетаКассы КАК СчетаКассы),
	|			,
	|			Организация В (&Организация)) КАК Наличные
	|ГДЕ
	|	""Итого, тенге"" В
	|			(ВЫБРАТЬ
	|				Валюты.Валюта
	|			ИЗ
	|				Валюты КАК Валюты)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Деньги в кассе"",
	|	Наличные.Организация,
	|	ВЫБОР
	|		КОГДА Наличные.Счет.Валютный
	|			ТОГДА Наличные.Валюта
	|		ИНАЧЕ &Тенге
	|	КОНЕЦ,
	|	ВЫРАЗИТЬ(Наличные.Субконто1 КАК Справочник.Кассы),
	|	ВЫБОР
	|		КОГДА Наличные.Счет.Валютный
	|			ТОГДА Наличные.ВалютнаяСуммаОстаток
	|		ИНАЧЕ Наличные.СуммаОстаток
	|	КОНЕЦ,
	|	Наличные.Счет
	|ИЗ
	|	РегистрБухгалтерии.Типовой.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаКассы.Счет
	|				ИЗ
	|					СчетаКассы КАК СчетаКассы),
	|			,
	|			Организация В (&Организация)) КАК Наличные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Деньги на расчетных счетах"",
	|	Безналичные.Организация,
	|	""Итого, тенге"",
	|	ВЫРАЗИТЬ(Безналичные.Субконто1 КАК Справочник.БанковскиеСчета),
	|	Безналичные.СуммаОстаток,
	|	Безналичные.Счет
	|ИЗ
	|	РегистрБухгалтерии.Типовой.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаУчетаБезналичные.Счет
	|				ИЗ
	|					СчетаУчетаБезналичные КАК СчетаУчетаБезналичные),
	|			,
	|			Организация В (&Организация)) КАК Безналичные
	|ГДЕ
	|	""Итого, тенге"" В
	|			(ВЫБРАТЬ
	|				Валюты.Валюта
	|			ИЗ
	|				Валюты КАК Валюты)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Деньги на расчетных счетах"",
	|	Безналичные.Организация,
	|	ВЫБОР
	|		КОГДА Безналичные.Счет.Валютный
	|			ТОГДА Безналичные.Валюта
	|		ИНАЧЕ &Тенге
	|	КОНЕЦ,
	|	ВЫРАЗИТЬ(Безналичные.Субконто1 КАК Справочник.БанковскиеСчета),
	|	ВЫБОР
	|		КОГДА Безналичные.Счет.Валютный
	|			ТОГДА Безналичные.ВалютнаяСуммаОстаток
	|		ИНАЧЕ Безналичные.СуммаОстаток
	|	КОНЕЦ,
	|	Безналичные.Счет
	|ИЗ
	|	РегистрБухгалтерии.Типовой.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаУчетаБезналичные.Счет
	|				ИЗ
	|					СчетаУчетаБезналичные КАК СчетаУчетаБезналичные),
	|			,
	|			Организация В (&Организация)) КАК Безналичные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Деньги у подотчетных лиц"",
	|	Подотчет.Организация,
	|	""Итого, тенге"",
	|	ВЫРАЗИТЬ(Подотчет.Субконто1 КАК Справочник.ФизическиеЛица),
	|	Подотчет.СуммаОстаток,
	|	Подотчет.Счет
	|ИЗ
	|	РегистрБухгалтерии.Типовой.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаУчетаПодотчет.Счет
	|				ИЗ
	|					СчетаУчетаПодотчет КАК СчетаУчетаПодотчет),
	|			,
	|			Организация В (&Организация)) КАК Подотчет
	|ГДЕ
	//|	Подотчет.СуммаОстаток > 0 И
	|	 ""Итого, тенге"" В
	|			(ВЫБРАТЬ
	|				Валюты.Валюта
	|			ИЗ
	|				Валюты КАК Валюты)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Деньги у подотчетных лиц"",
	|	Подотчет.Организация,
	|	ВЫБОР
	|		КОГДА Подотчет.Счет.Валютный
	|			ТОГДА Подотчет.Валюта
	|		ИНАЧЕ &Тенге
	|	КОНЕЦ,
	|	ВЫРАЗИТЬ(Подотчет.Субконто1 КАК Справочник.ФизическиеЛица),
	|	ВЫБОР
	|		КОГДА Подотчет.Счет.Валютный
	|			ТОГДА Подотчет.ВалютнаяСуммаОстаток
	|		ИНАЧЕ Подотчет.СуммаОстаток
	|	КОНЕЦ,
	|	Подотчет.Счет
	|ИЗ
	|	РегистрБухгалтерии.Типовой.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаУчетаПодотчет.Счет
	|				ИЗ
	|					СчетаУчетаПодотчет КАК СчетаУчетаПодотчет),
	|			,
	|			Организация В (&Организация)) КАК Подотчет
	|ГДЕ
	|	ВЫБОР
	|			КОГДА Подотчет.Счет.Валютный
	|				ТОГДА Подотчет.ВалютнаяСуммаОстаток
	|			ИНАЧЕ Подотчет.СуммаОстаток
	|		КОНЕЦ <> 0";
	
	Граница = Новый Граница(КонецДня(Период), ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("Период"	   , ?(ЗначениеЗаполнено(Период), Граница, '00010101'));
	Запрос.УстановитьПараметр("Организация", мСписокСтруктурныхЕдиниц);
	Запрос.УстановитьПараметр("Тенге"	   , Константы.ВалютаРегламентированногоУчета.Получить());
	
	Если мСписокСтруктурныхЕдиниц.Количество() = 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация В(&Организация)", "");
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
Конецфункции


Процедура СохранитьНастройку() Экспорт
	
	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	
	Если СохраненнаяНастройка = Неопределено Тогда
		СсылкаНаОбъект = ТиповыеОтчеты.ПолучитьИдентификаторОбъекта(ЭтотОбъект);
		Настройка = Справочники.СохраненныеНастройки.СоздатьЭлемент();
		Настройка.НастраиваемыйОбъект = СсылкаНаОбъект;
		Настройка.ТипНастройки = Перечисления.ТипыНастроек.НастройкиПользователяНастройкиОтчета;
		Настройка.Наименование = "НастройкиПользователяНастройкиОтчета";
		Настройка.ИспользоватьПриОткрытии = Истина;
		НовыйПользователь = Настройка.Пользователи.Добавить();
		НовыйПользователь.Пользователь = глЗначениеПеременной("глТекущийПользователь");
		Настройка.Записать();
		
		СохраненнаяНастройка = Настройка.Ссылка;
	КонецЕсли;
	
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	СтандартныеОтчеты.ИнициализацияОтчета(ЭтотОбъект);
	
КонецПроцедуры

Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли
мСписокСтруктурныхЕдиниц = Новый СписокЗначений;