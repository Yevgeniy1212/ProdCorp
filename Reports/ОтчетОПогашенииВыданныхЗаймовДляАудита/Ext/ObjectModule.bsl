Перем мСписокИсточниковФинансирования Экспорт;
Перем мСписокСтруктурныхЕдиниц Экспорт;
Перем мСписокПодразделений Экспорт;
Перем мДеревоСтруктурныхЕдиниц Экспорт;
Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;
Перем ПромежуточныеДанные Экспорт;
Перем РежимРасшифровки Экспорт;
Перем ВедётсяУчетПоПодразделениям Экспорт;

#Если Клиент Тогда

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	Результат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ВыводЗаголовкаОтчета(ЭтотОбъект, Результат);
	ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных);
	СтандартныеОтчеты.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных);
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	// Выполним дополнительную обработку Результата отчета
	ОбработкаРезультатаОтчета(Результат);
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(Результат, ПолучитьТекстЗаголовка(), Строка(глТекущийПользователь));
	
	Возврат;
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных) Экспорт
	
	СписокВидовСубконто = Новый Массив;
	СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
	СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Договоры);
	СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ТипыОпераций);
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "СписокВидовСубконто", СписокВидовСубконто);
	
	СписокСчетовГарантий = Новый Массив;
	СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаТребованийПоГарантиям);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаТребованийПопредоставлениюПолучениюЗаймовВБудущим);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаТребованийПоПроизводнымФинИнструментам);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаОбязательствПоГарантиям);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаОбязательствПопредставлениюзаймов);
	//СписокСчетовГарантий.Добавить(ПланыСчетов.Типовой.СчетаОбязПопроизвФинИнструментам);
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "СписокСчетовГарантий", СписокСчетовГарантий);
	
	НачалоМесяца = НачалоМесяца(Период);
	ДоОдногоМесяца = КонецМесяца(Период);
	ДоТрехМесяцев = КонецМесяца(ДобавитьМесяц(НачалоМесяца(Период),2));
	ДоШестиМесяцев = КонецМесяца(ДобавитьМесяц(НачалоМесяца(Период),6));
	ДоДевятиМесяцев = КонецМесяца(ДобавитьМесяц(НачалоМесяца(Период),8));
	ДоГода = КонецМесяца(ДобавитьМесяц(НачалоМесяца(Период),12));
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоМесяца", НачалоМесяца);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ДоОдногоМесяца", ДоОдногоМесяца);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ДоТрехМесяцев", ДоТрехМесяцев);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ДоШестиМесяцев", ДоШестиМесяцев);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ДоДевятиМесяцев", ДоДевятиМесяцев);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ДоГода", ДоГода);
	
	Если ЗначениеЗаполнено(Период) Тогда
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "Период", НачалоДня(Период));
	Иначе
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "Период", Дата(3999, 11, 1));
	КонецЕсли;
	
	Если мДеревоСтруктурныхЕдиниц.Колонки.Количество() = 0 Тогда 
		
		СписокСтруктурныхЕдиниц = Новый СписокЗначений;
		СписокСтруктурныхЕдиниц.ЗагрузитьЗначения(мСписокСтруктурныхЕдиниц.ВыгрузитьЗначения());
		
		Для Каждого СтрПодразделение Из мСписокПодразделений Цикл 
			СписокСтруктурныхЕдиниц.Добавить(СтрПодразделение.Значение);
		КонецЦикла;		
				
		мДеревоСтруктурныхЕдиниц = СтандартныеОтчеты.СформироватьДеревоСЕ(, СписокСтруктурныхЕдиниц);
		
	КонецЕсли;
	
	ТиповыеОтчеты.ДобавитьОтборПоОрганизациямИПодразделениям(КомпоновщикНастроек, мДеревоСтруктурныхЕдиниц);
	//ТиповыеОтчеты.ДобавитьОтборПоИсточникамФинансирования(КомпоновщикНастроек, мСписокИсточниковФинансирования);
		
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	СтандартныеОтчеты.ИнициализацияОтчета(ЭтотОбъект);
	
КонецПроцедуры

Процедура ВыводЗаголовкаОтчета(ОтчетОбъект, Результат)
	
	СтандартныеОтчеты.ВыводЗаголовкаСпециализированногоОтчета(ОтчетОбъект, Результат);
			
КонецПроцедуры

Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина) Экспорт 
		
	ЗаголовокОтчета = "Расшифровка остатков по срокам на " + Формат(Период, "ДФ=dd.MM.yyyy");

	Возврат ?(ОрганизацияВНачале, ЗаголовокОтчета, ЗаголовокОтчета + " " + СтандартныеОтчеты.ПолучитьТекстОрганизация(ЭтотОбъект));
		
КонецФункции

Процедура ОбработкаРезультатаОтчета(Результат)
	
	ТиповыеОтчеты.ОбработкаРезультатаОтчета(ЭтотОбъект, Результат);

КонецПроцедуры

// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт
	
	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	
	СтруктураНастроек.Вставить("мСписокПодразделений", мСписокПодразделений);
	СтруктураНастроек.Вставить("мСписокСтруктурныхЕдиниц", мСписокСтруктурныхЕдиниц);
	СтруктураНастроек.Вставить("мДеревоСтруктурныхЕдиниц", мДеревоСтруктурныхЕдиниц);
	
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);

КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры


Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли
мСписокИсточниковФинансирования = Новый СписокЗначений;
мСписокСтруктурныхЕдиниц = Новый СписокЗначений;
мСписокПодразделений = Новый СписокЗначений;
мДеревоСтруктурныхЕдиниц = Новый ДеревоЗначений;

ВедётсяУчетПоПодразделениям = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений();

РежимРасшифровки = Ложь;