//Перем ДанныеРасшифровки Экспорт;
Перем СохраненнаяНастройка Экспорт;

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
//	КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Период").Использование = Ложь;

	Схема2 = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных1");
	Для Каждого Параметр Из Схема2.Параметры Цикл
		Запрос.УстановитьПараметр(Параметр.Имя,Параметр.Значение);
	КонецЦикла;	
	Для Каждого Реквизит Из Метаданные().Реквизиты Цикл
		//КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра(Реквизит.Имя,?(Реквизит.Имя="ДатаОкончания",КонецДня(ДатаОкончания),ЭтотОбъект[Реквизит.Имя]));
		Запрос.УстановитьПараметр(Реквизит.Имя,?(Реквизит.Имя="ДатаОкончания",КонецДня(ДатаОкончания),ЭтотОбъект[Реквизит.Имя]));
	КонецЦикла;
		
	ТЗ = ВыводимыеПараметры.Выгрузить();
	ТЗ.Колонки.Добавить("ПорядокПараметра",Новый ОписаниеТипов("Число"));
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		СтрокаТЗ.ПорядокПараметра = СтрокаТЗ.НомерСтроки;
	КонецЦикла;
	ИмеютсяГруппировки = ТЗ.НайтиСтроки(Новый Структура("Группировка",Истина)).Количество()>0;
	
	Запрос.УстановитьПараметр("ВТ",ТЗ);
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("УчитыватьИсполнениеТоварныхДоговоров") Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	дог_ИсполнениеДоговоровОстаткиИОбороты.ДоговорКонтрагента КАК Договор,
		               |	дог_ИсполнениеДоговоровОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКИсполнению,
		               |	дог_ИсполнениеДоговоровОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКИсполнению,
		               |	ВЫБОР
		               |		КОГДА дог_ИсполнениеДоговоровОстаткиИОбороты.КоличествоПриход = 0
		               |			ТОГДА 0
		               |		ИНАЧЕ (дог_ИсполнениеДоговоровОстаткиИОбороты.КоличествоРасход / дог_ИсполнениеДоговоровОстаткиИОбороты.КоличествоПриход) * 100
		               |	КОНЕЦ КАК ПроцентИсполненияКоличество,
		               |	ВЫБОР
		               |		КОГДА дог_ИсполнениеДоговоровОстаткиИОбороты.СуммаПриход = 0
		               |			ТОГДА 0
		               |		ИНАЧЕ (дог_ИсполнениеДоговоровОстаткиИОбороты.СуммаРасход / дог_ИсполнениеДоговоровОстаткиИОбороты.СуммаПриход) * 100
		               |	КОНЕЦ КАК ПроцентИсполненияСумма
					   |ПОМЕСТИТЬ ВТ_РасчетИсполнения
		               |ИЗ
		               |	РегистрНакопления.дог_ИсполнениеДоговоров.ОстаткиИОбороты(, &ДатаОкончания, , , Организация = &Организация) КАК дог_ИсполнениеДоговоровОстаткиИОбороты
					   |ИНДЕКСИРОВАТЬ ПО
					   |Договор
					   |;";
		
	КонецЕсли;

	Запрос.Текст = Запрос.Текст+
		"ВЫБРАТЬ
		|	ВТ_ПараметрыДоговоров.Параметр,
		|	ВТ_ПараметрыДоговоров.ПорядокПараметра
		|ПОМЕСТИТЬ ВТ_ПолныйПереченьПараметров
		|ИЗ
		|	&ВТ КАК ВТ_ПараметрыДоговоров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТиповойВидыСубконто.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТ_Счета
		|ИЗ
		|	ПланСчетов.Типовой.ВидыСубконто КАК ТиповойВидыСубконто
		|ГДЕ
		|	ТиповойВидыСубконто.Ссылка В ИЕРАРХИИ(&Счета)
		|	И ТиповойВидыСубконто.ВидСубконто = &ВидСубконтоДоговоры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТиповойОбороты.Счет,
		|	ТиповойОбороты.Счет.Наименование,
		|	ВЫБОР
		|		КОГДА ТиповойОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|			ТОГДА ТиповойОбороты.СуммаОстатокДт
		|		ИНАЧЕ ТиповойОбороты.СуммаОстатокКт
		|	КОНЕЦ КАК СуммаОстаток,
		|	ВЫБОР
		|		КОГДА ТиповойОбороты.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
		|			ТОГДА ТиповойОбороты.ВалютнаяСуммаОстатокДт
		|		ИНАЧЕ ТиповойОбороты.ВалютнаяСуммаОстатокКт
		|	КОНЕЦ КАК ВалютнаяСуммаОстаток,
		|	ВЫБОР
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет1110)
		|			ТОГДА 1
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет1200)
		|			ТОГДА 1
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет1610)
		|			ТОГДА 1
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет2010)
		|			ТОГДА 1
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет2100)
		|			ТОГДА 1
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет2910)
		|			ТОГДА 1
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет2210)
		|			ТОГДА 1
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет3000)
		|			ТОГДА 2
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет3300)
		|			ТОГДА 2
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет3400)
		|			ТОГДА 2
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет3510)
		|			ТОГДА 2
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет3530)
		|				ИЛИ ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет3540)
		|			ТОГДА 2
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет4000)
		|			ТОГДА 2
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет4100)
		|			ТОГДА 2
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет4200)
		|			ТОГДА 2
		|		КОГДА ТиповойОбороты.Счет В ИЕРАРХИИ (&Счет4410)
		|			ТОГДА 2
		|	КОНЕЦ КАК ТипЗадолженности,
		|	ТиповойОбороты.Субконто1 КАК Контрагент,
		|	ТиповойОбороты.Субконто2 КАК Договор
		|ПОМЕСТИТЬ ВТ_Обороты
		|ИЗ
		|	РегистрБухгалтерии.Типовой.Остатки(
		|			&ДатаОкончания,
		|			Счет В ИЕРАРХИИ
		|				(ВЫБРАТЬ
		|					ВТ_Счета.Счет
		|				ИЗ
		|					ВТ_Счета),
		|			&ВидыСубконто,
		|			Организация = &Организация ) КАК ТиповойОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Обороты.ТипЗадолженности = 1
		|				ТОГДА ВТ_Обороты.СуммаОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЗадолженностьКонтрагентаРегл,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Обороты.ТипЗадолженности = 1
		|				ТОГДА ВТ_Обороты.ВалютнаяСуммаОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЗадолженностьКонтрагентаВал,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Обороты.ТипЗадолженности = 2
		|				ТОГДА ВТ_Обороты.СуммаОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЗадолженностьОрганизацииКонтрагентуРегл,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_Обороты.ТипЗадолженности = 2
		|				ТОГДА ВТ_Обороты.ВалютнаяСуммаОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЗадолженностьОрганизацииКонтрагентуВал,
		|	ВТ_Обороты.Контрагент КАК Контрагент,
		|	ВТ_Обороты.Договор КАК Договор
		|ПОМЕСТИТЬ ВТ_Суммы
		|ИЗ
		|	ВТ_Обороты КАК ВТ_Обороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Обороты.Контрагент,
		|	ВТ_Обороты.Договор
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.Договор КАК Договор,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ВидДоговораПоТоварнымОперациям,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ВидОперацииПоДоговору,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ВидОбязательства,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ВходящийНомер,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ДатаДоговора,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ДатаНачала,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ДатаОкончания,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.СпособОплаты,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ВидОплаты,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ДатаОплаты,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.График,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ПериодичностьОплаты,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ДатаНачалаОплаты,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ДатаОкончанияОплаты,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.СпособНачисленияПени,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.СтавкаПени,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.КоличествоДнейНачисленияПени,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.КоличествоДнейПросрочки,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.СпособРасчетаСуммыПлатежа,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.МинимальнаяСуммаПлатежа,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ВерхнийПределЗадолженности,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ФинансовыйПоказатель,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ДопСоглашение,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ВидОперацииЗаявки,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ОбщаяСуммаДоговора,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ПервоначальныйДоговор,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ЗамещающийДоговор,
		|	ВТ_Суммы.ЗадолженностьКонтрагентаРегл,
		|	ВТ_Суммы.ЗадолженностьКонтрагентаВал,
		|	ВТ_Суммы.ЗадолженностьОрганизацииКонтрагентуРегл,
		|	ВТ_Суммы.ЗадолженностьОрганизацииКонтрагентуВал,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.Договор.Владелец КАК Контрагент";
		Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("УчитыватьИсполнениеТоварныхДоговоров") Тогда
			Запрос.Текст = Запрос.Текст+",
			     |	ЕСТЬNULL(РасчетИсполнения.СуммаКИсполнению,0) КАК СуммаКИсполнению,
			     |	ЕСТЬNULL(РасчетИсполнения.КоличествоКИсполнению,0) КАК КоличествоКИсполнению,
			     |	ЕСТЬNULL(РасчетИсполнения.ПроцентИсполненияКоличество,0) КАК ПроцентИсполненияКоличество,
			     |	ЕСТЬNULL(РасчетИсполнения.ПроцентИсполненияСумма,0) КАК ПроцентИсполненияСумма";
		КонецЕсли;
		Запрос.Текст=Запрос.Текст+"
		|ПОМЕСТИТЬ ВТ_Реестр
		|ИЗ
		|	РегистрСведений.дог_ДоговорыИДополнительныеСоглашения.СрезПоследних(&ДатаОкончания, Организация = &Организация) КАК ДоговорыИДополнительныеСоглашенияСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Суммы КАК ВТ_Суммы
		|		ПО ДоговорыИДополнительныеСоглашенияСрезПоследних.Договор = ВТ_Суммы.Договор
		|			И ДоговорыИДополнительныеСоглашенияСрезПоследних.Договор.Владелец = ВТ_Суммы.Контрагент  ";
		Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("УчитыватьИсполнениеТоварныхДоговоров") Тогда
			Запрос.Текст = Запрос.Текст+"
			               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетИсполнения КАК РасчетИсполнения
						   |			ПО ДоговорыИДополнительныеСоглашенияСрезПоследних.Договор =  РасчетИсполнения.Договор";
			
		КонецЕсли;
		Запрос.Текст=Запрос.Текст+"
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Договор,
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор КАК Договор,
		|	ВТ_Реестр.Контрагент КАК Контрагент,
		|	""Вид товарного договора"" КАК Параметр,
		|	ВТ_Реестр.ВидДоговораПоТоварнымОперациям КАК Значение
		|ПОМЕСТИТЬ ВТ_ПараметрыДоговоров
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Первоначальный договор"",
		|	ВТ_Реестр.ПервоначальныйДоговор
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Замещающий договор"",
		|	ВТ_Реестр.ЗамещающийДоговор
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Вид обязательства нетоварного договора"",
		|	ВТ_Реестр.ВидОбязательства
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Входящий номер"",
		|	ВТ_Реестр.ВходящийНомер
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Дата договора"",
		|	ВТ_Реестр.ДатаДоговора
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Дата начала"",
		|	ВТ_Реестр.ДатаНачала
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Дата окончания"",
		|	ВТ_Реестр.ДатаОкончания
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Способ оплаты"",
		|	ВТ_Реестр.СпособОплаты
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Вид оплаты"",
		|	ВТ_Реестр.ВидОплаты
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Дата оплаты по разовым платежам"",
		|	ВТ_Реестр.ДатаОплаты
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""График платежей"",
		|	ВТ_Реестр.График
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Периодичность регулярных платежей"",
		|	ВТ_Реестр.ПериодичностьОплаты
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Начало регулярных платежей"",
		|	ВТ_Реестр.ДатаНачалаОплаты
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Окончание регулярных платежей"",
		|	ВТ_Реестр.ДатаОкончанияОплаты
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Способ начисления пени"",
		|	ВТ_Реестр.СпособНачисленияПени
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Ставка пени"",
		|	ВТ_Реестр.СтавкаПени
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Дней начисления пени"",
		|	ВТ_Реестр.КоличествоДнейНачисленияПени
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Допустимых дней просрочки"",
		|	ВТ_Реестр.КоличествоДнейПросрочки
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Способ расчета суммы платежа"",
		|	ВТ_Реестр.СпособРасчетаСуммыПлатежа
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Минимальная сумма платежа"",
		|	ВТ_Реестр.МинимальнаяСуммаПлатежа
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Верхний предел задолженности"",
		|	ВТ_Реестр.ВерхнийПределЗадолженности
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Финансовый показатель планирования"",
		|	ВТ_Реестр.ФинансовыйПоказатель
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Наличие доп. соглашений"",
		|	ВТ_Реестр.ДопСоглашение
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Вид операций документов планирования платежей"",
		|	ВТ_Реестр.ВидОперацииЗаявки
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Общая сумма договора"",
		|	ВТ_Реестр.ОбщаяСуммаДоговора
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Задолженность контрагента (регл.)"",
		|	ВТ_Реестр.ЗадолженностьКонтрагентаРегл
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Задолженность контрагента (вал.)"",
		|	ВТ_Реестр.ЗадолженностьКонтрагентаВал
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Задолженность организации контрагенту (регл.)"",
		|	ВТ_Реестр.ЗадолженностьОрганизацииКонтрагентуРегл
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	""Задолженность организации контрагенту (вал.)"",
		|	ВТ_Реестр.ЗадолженностьОрганизацииКонтрагентуВал
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр";
		Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("УчитыватьИсполнениеТоварныхДоговоров") Тогда
			Запрос.Текст = Запрос.Текст+"
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВТ_Реестр.Договор,
			|	ВТ_Реестр.Контрагент,
			|	""Остаток к исполнению (сумма)"",
			|	ВТ_Реестр.СуммаКИсполнению
			|ИЗ
			|	ВТ_Реестр КАК ВТ_Реестр
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВТ_Реестр.Договор,
			|	ВТ_Реестр.Контрагент,
			|	""Остаток к исполнению (количество)"",
			|	ВТ_Реестр.КоличествоКИсполнению
			|ИЗ
			|	ВТ_Реестр КАК ВТ_Реестр
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВТ_Реестр.Договор,
			|	ВТ_Реестр.Контрагент,
			|	""% исполнения (сумма)"",
			|	ВТ_Реестр.ПроцентИсполненияСумма
			|ИЗ
			|	ВТ_Реестр КАК ВТ_Реестр
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВТ_Реестр.Договор,
			|	ВТ_Реестр.Контрагент,
			|	""% исполнения (количество)"",
			|	ВТ_Реестр.ПроцентИсполненияКоличество
			|ИЗ
			|	ВТ_Реестр КАК ВТ_Реестр";
		КонецЕсли;
		Запрос.Текст=Запрос.Текст+"
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Договор,
		|	Контрагент,
		|	Параметр
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_Реестр.Договор КАК Договор,
		|	ВТ_Реестр.Контрагент,
		|	ДополнительныеПараметрыДоговоров.Ссылка КАК ДополнительныйПараметр
		|ПОМЕСТИТЬ ВТ_КортежДоговоровИПараметров
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.дог_ДополнительныеПараметрыДоговоров КАК ДополнительныеПараметрыДоговоров
		|		ПО (ИСТИНА)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Договор,
		|	ДополнительныйПараметр
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_КортежДоговоровИПараметров.Договор КАК Договор,
		|	ВТ_КортежДоговоровИПараметров.Контрагент КАК Контрагент,
		|	ВТ_КортежДоговоровИПараметров.ДополнительныйПараметр КАК ДополнительныйПараметр,
		|	ДополнительныеПараметрыДоговоровСрезПоследних.ЗначениеДополнительногоПараметра КАК Значение
		|ПОМЕСТИТЬ ВТ_ДополнительныеПараметрыДоговоров
		|ИЗ
		|	ВТ_КортежДоговоровИПараметров КАК ВТ_КортежДоговоровИПараметров
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дог_ДополнительныеПараметрыДоговоров.СрезПоследних(&ДатаОкончания, ) КАК ДополнительныеПараметрыДоговоровСрезПоследних
		|		ПО ВТ_КортежДоговоровИПараметров.Договор = ДополнительныеПараметрыДоговоровСрезПоследних.Договор
		|			И ВТ_КортежДоговоровИПараметров.ДополнительныйПараметр = ДополнительныеПараметрыДоговоровСрезПоследних.ДополнительныйПараметр
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Договор,
		|	Контрагент,
		|	ДополнительныйПараметр
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПараметрыДоговоров.Договор КАК Договор,
		|	ВТ_ПараметрыДоговоров.Контрагент КАК Контрагент,
		|	ВТ_ПараметрыДоговоров.Параметр,
		|	ВТ_ПараметрыДоговоров.Значение,
		|	ВТ_ПолныйПереченьПараметров.ПорядокПараметра
		|ПОМЕСТИТЬ ВТ_ОтобранныеПараметры
		|ИЗ
		|	ВТ_ПараметрыДоговоров КАК ВТ_ПараметрыДоговоров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПолныйПереченьПараметров КАК ВТ_ПолныйПереченьПараметров
		|		ПО ВТ_ПараметрыДоговоров.Параметр = ВТ_ПолныйПереченьПараметров.Параметр
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ДополнительныеПараметрыДоговоров.Договор,
		|	ВТ_ДополнительныеПараметрыДоговоров.Контрагент,
		|	ВТ_ДополнительныеПараметрыДоговоров.ДополнительныйПараметр,
		|	ВТ_ДополнительныеПараметрыДоговоров.Значение,
		|	ВТ_ПолныйПереченьПараметров.ПорядокПараметра
		|ИЗ
		|	ВТ_ДополнительныеПараметрыДоговоров КАК ВТ_ДополнительныеПараметрыДоговоров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПолныйПереченьПараметров КАК ВТ_ПолныйПереченьПараметров
		|		ПО ВТ_ДополнительныеПараметрыДоговоров.ДополнительныйПараметр = ВТ_ПолныйПереченьПараметров.Параметр
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Договор,
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	ВТ_ОтобранныеПараметры.Параметр,
		|	ВТ_ОтобранныеПараметры.Значение,
		|	ВТ_ОтобранныеПараметры.ПорядокПараметра
		|"+?(Отборы.Количество()>0,"ПОМЕСТИТЬ ВТ_ПредРасчет",?(ИмеютсяГруппировки,"ПОМЕСТИТЬ ВТ_Финальная",""))+"
		|ИЗ
		|	ВТ_Реестр КАК ВТ_Реестр
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтобранныеПараметры КАК ВТ_ОтобранныеПараметры
		|		ПО ВТ_Реестр.Договор = ВТ_ОтобранныеПараметры.Договор
		|			И ВТ_Реестр.Контрагент = ВТ_ОтобранныеПараметры.Контрагент";
		
	Если Отборы.Количество()>0 Тогда
		Запрос.УстановитьПараметр("Отборы",Отборы.Выгрузить());
		Запрос.Текст="ВЫБРАТЬ
		| Отборы.Параметр,
		| Отборы.ВидСравнения,
		| Отборы.Значение
		|ПОМЕСТИТЬ ВТ_Отборы
		| ИЗ &Отборы КАК Отборы
		|;
		|"+Запрос.Текст+"
		|;
		|ВЫБРАТЬ
		|	ВТ_ОтобранныеПараметры.Договор,
		|	ВТ_ОтобранныеПараметры.Контрагент,
		|	ВТ_ОтобранныеПараметры.Параметр
		|ПОМЕСТИТЬ ВТ_Фильтр
		|ИЗ ВТ_ПредРасчет КАК ВТ_ОтобранныеПараметры
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Отборы КАК Отборы
		|				ПО (ВТ_ОтобранныеПараметры.Параметр=Отборы.Параметр
		|                   И ВЫБОР
		|                         КОГДА Отборы.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.усд_ВидыСравненияДляУсловий.Равно)
		|                            ТОГДА ВТ_ОтобранныеПараметры.Значение = Отборы.Значение
		|                         КОГДА Отборы.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.усд_ВидыСравненияДляУсловий.НеРавно)
		|                            ТОГДА ВТ_ОтобранныеПараметры.Значение <> Отборы.Значение
		|                         КОГДА Отборы.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.усд_ВидыСравненияДляУсловий.Больше)
		|                            ТОГДА ВТ_ОтобранныеПараметры.Значение > Отборы.Значение
		|                         КОГДА Отборы.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.усд_ВидыСравненияДляУсловий.БольшеИлиРавно)
		|                            ТОГДА ВТ_ОтобранныеПараметры.Значение >= Отборы.Значение
		|                         КОГДА Отборы.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.усд_ВидыСравненияДляУсловий.Меньше)
		|                            ТОГДА ВТ_ОтобранныеПараметры.Значение < Отборы.Значение
		|                         КОГДА Отборы.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.усд_ВидыСравненияДляУсловий.МеньшеИлиРавно)
		|                            ТОГДА ВТ_ОтобранныеПараметры.Значение <= Отборы.Значение
		|                         ИНАЧЕ ЛОЖЬ
		|					 КОНЕЦ)
		|;
		|ВЫБРАТЬ
		|	ВТ_Реестр.Договор,
		|	ВТ_Реестр.Контрагент,
		|	ВТ_Отборы.Параметр
		|ПОМЕСТИТЬ ВТ_КортежПроверки
		|ИЗ ВТ_Отборы КАК ВТ_Отборы
		|  ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Реестр КАК ВТ_Реестр
		|    ПО ИСТИНА
		|;
		|ВЫБРАТЬ
		|	ВТ_КортежПроверки.Договор,
		|	ВТ_КортежПроверки.Контрагент,
		|	СУММА(ВЫБОР КОГДА ВТ_Фильтр.Параметр ЕСТЬ NULL ТОГДА 1 ИНАЧЕ 0 КОНЕЦ) КАК Ошибок
		|ПОМЕСТИТЬ ВТ_Несоответствия
		|ИЗ ВТ_КортежПроверки КАК ВТ_КортежПроверки
		|  ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Фильтр КАК ВТ_Фильтр
		|    ПО ВТ_КортежПроверки.Договор = ВТ_Фильтр.Договор
		|    	И ВТ_КортежПроверки.Контрагент = ВТ_Фильтр.Контрагент
		|    	И ВТ_КортежПроверки.Параметр = ВТ_Фильтр.Параметр
		|СГРУППИРОВАТЬ ПО
		|	ВТ_КортежПроверки.Договор,
		|	ВТ_КортежПроверки.Контрагент
		|;
		|ВЫБРАТЬ
		|	ВТ_ПредРасчет.Договор,
		|	ВТ_ПредРасчет.Контрагент,
		|	ВТ_ПредРасчет.Параметр,
		|	ВТ_ПредРасчет.Значение,
		|	ВТ_ПредРасчет.ПорядокПараметра
		|"+?(ИмеютсяГруппировки,"ПОМЕСТИТЬ ВТ_Финальная","")+"
		|ИЗ
		|	ВТ_ПредРасчет КАК ВТ_ПредРасчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Несоответствия КАК ВТ_Несоответствия
		|		ПО ВТ_ПредРасчет.Договор = ВТ_Несоответствия.Договор
		|			И ВТ_ПредРасчет.Контрагент = ВТ_Несоответствия.Контрагент
		|	ГДЕ ВТ_Несоответствия.Ошибок ЕСТЬ NULL ИЛИ ВТ_Несоответствия.Ошибок=0";
		
	КонецЕсли;
    НаборДанных = СхемаКомпоновкиДанных.НаборыДанных[0];
	ПоляУдалить = Новый Массив;
	СписокСтандартныхПолей = Новый Массив;
	СписокСтандартныхПолей.Добавить("Договор");
	СписокСтандартныхПолей.Добавить("Контрагент");
	СписокСтандартныхПолей.Добавить("Параметр");
	СписокСтандартныхПолей.Добавить("Значение");
	СписокСтандартныхПолей.Добавить("ПорядокПараметра");
	Для Каждого ПолеНабора Из НаборДанных.Поля Цикл
		Если СписокСтандартныхПолей.Найти(ПолеНабора.Поле )=Неопределено Тогда
			ПоляУдалить.Добавить(ПолеНабора);
		КонецЕсли;
	КонецЦикла;
	Для Каждого ПолеУдалить Из ПоляУдалить Цикл
		НаборДанных.Поля.Удалить(ПолеУдалить);
	КонецЦикла;
	
	Если ИмеютсяГруппировки Тогда
		Запрос.Текст = Запрос.Текст+"
		|;
		|ВЫБРАТЬ
		|	ВТ_Финальная.Договор,
		|	ВТ_Финальная.Контрагент,
		|	ВТ_Финальная.Параметр,
		|	ВТ_Финальная.Значение,
		|	ВТ_Финальная.ПорядокПараметра";
		Номер = 1;
		Для Каждого СтрокаГруппировка Из ТЗ.НайтиСтроки(Новый Структура("Группировка",Истина)) Цикл
			Запрос.Текст = Запрос.Текст+",
			|	ЕСТЬNULL(ЗапросГруппы"+Строка(Номер)+".Значение,"+ОписаниеПустогоЗначения(СтрокаГруппировка.Параметр)+") КАК ПолеГруппа"+Строка(Номер);
			Номер = Номер + 1;
		КонецЦикла;
		Запрос.Текст = Запрос.Текст+"
		|ИЗ
		|	ВТ_Финальная КАК ВТ_Финальная";
		Номер = 1;
		Для Каждого СтрокаГруппировка Из ТЗ.НайтиСтроки(Новый Структура("Группировка",Истина)) Цикл
			Запрос.УстановитьПараметр("ПараметрГруппировки"+Строка(Номер),СтрокаГруппировка.Параметр);
			Запрос.Текст = Запрос.Текст+"
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ * ИЗ ВТ_Финальная ГДЕ ВТ_Финальная.Параметр=&ПараметрГруппировки"+Строка(Номер)+") КАК ЗапросГруппы"+Строка(Номер)+"
			|			ПО ВТ_Финальная.Договор = ЗапросГруппы"+Строка(Номер)+".Договор
			|				И ВТ_Финальная.Договор = ЗапросГруппы"+Строка(Номер)+".Договор";
			Номер = Номер + 1;
		КонецЦикла;
		
		Номер = 1;
		Для Каждого СтрокаГруппировка Из ТЗ.НайтиСтроки(Новый Структура("Группировка",Истина)) Цикл
			НовоеПоле 				= НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
			НовоеПоле.Поле 			= "ПолеГруппа"+Строка(Номер);
			НовоеПоле.Заголовок 	= ?(ТипЗнч(СтрокаГруппировка.Параметр)=Тип("Строка"),СтрокаГруппировка.Параметр,Строка(СтрокаГруппировка.Параметр));
			НовоеПоле.ПутьКДанным 	= "ПолеГруппа"+Строка(Номер);
			НовоеПоле.ТипЗначения	= ПолучитьТипПараметра(СтрокаГруппировка.Параметр);
			Номер = Номер + 1;
		КонецЦикла;
	КонецЕсли;
	РезультатЗ = Запрос.Выполнить().Выгрузить();

    НастройкиСтруктурыСКД = КомпоновщикНастроек.Настройки.Структура[1];
	НастройкиСтруктурыСКД.Строки.Очистить();
	КорневаяНастройка = НастройкиСтруктурыСКД.Строки;
	Если ИмеютсяГруппировки Тогда
		Номер = 1;
		Для Каждого СтрокаГруппировка Из ТЗ.НайтиСтроки(Новый Структура("Группировка",Истина)) Цикл
			Группировка = КорневаяНастройка.Добавить();
			Группировка.Использование = Истина;
			ПолеГруппировка = Группировка.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
			ПолеГруппировка.Поле 			= Новый ПолеКомпоновкиДанных("ПолеГруппа"+Строка(Номер));
			ПолеГруппировка.ТипГруппировки	= ТипГруппировкиКомпоновкиДанных.Элементы;
			ПолеГруппировка.Использование	= Истина;
			ВыбранноеПолеГруппировка = Группировка.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПолеГруппировка.Использование	= Истина;
			
			Оформление = Группировка.УсловноеОформление.Элементы.Добавить();
			Оформление.Использование = Истина;
			Оформление.Оформление.УстановитьЗначениеПараметра("Текст",Новый ПолеКомпоновкиДанных("ПользовательскиеПоля.Поле1"));
			ПолеКОформлению = Оформление.Поля.Элементы.Добавить();
			ПолеКОформлению.Использование = Истина;
			ПолеКОформлению.Поле = Новый ПолеКомпоновкиДанных("Значение");     
			Отбор = Оформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			Отбор.Использование=Истина;
			Отбор.ВидСравнения=ВидСравненияКомпоновкиДанных.НеСодержит;
			Отбор.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Параметр");
			Отбор.ПравоеЗначение="%";
			
//			Оформление = Группировка.УсловноеОформление.Элементы.Добавить();
//			Оформление.Использование = Истина;
//			Оформление.Оформление.УстановитьЗначениеПараметра("Текст",Новый ПолеКомпоновкиДанных("ПользовательскиеПоля.Поле2"));
////			Оформление.Оформление.УстановитьЗначениеПараметра("Формат","ЧЦ=10; ЧДЦ=2");
//			ПолеКОформлению = Оформление.Поля.Элементы.Добавить();
//			ПолеКОформлению.Использование = Истина;
//			ПолеКОформлению.Поле = Новый ПолеКомпоновкиДанных("Значение");
//			Отбор = Оформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
//			Отбор.Использование=Истина;
//			Отбор.ВидСравнения=ВидСравненияКомпоновкиДанных.Содержит;
//			Отбор.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Параметр");
//			Отбор.ПравоеЗначение="%";
			
			КорневаяНастройка = Группировка.Структура;
			Номер = Номер + 1;
		КонецЦикла;
	КонецЕсли;
	
	Контрагенты = КорневаяНастройка.Добавить();
	Контрагенты.Использование = Истина;
	ПолеКонтрагент = Контрагенты.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ПолеКонтрагент.Поле 			= Новый ПолеКомпоновкиДанных("Контрагент");
	ПолеКонтрагент.ТипГруппировки	= ТипГруппировкиКомпоновкиДанных.Элементы;
	ПолеКонтрагент.Использование	= Истина;
	ВыбранноеПолеКонтрагент = Контрагенты.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПолеКонтрагент.Использование	= Истина;
	Оформление = Контрагенты.УсловноеОформление.Элементы.Добавить();
	Оформление.Использование = Истина;
	Оформление.Оформление.УстановитьЗначениеПараметра("Текст",Новый ПолеКомпоновкиДанных("ПользовательскиеПоля.Поле1"));
	ПолеКОформлению = Оформление.Поля.Элементы.Добавить();
	ПолеКОформлению.Использование = Истина;
	ПолеКОформлению.Поле = Новый ПолеКомпоновкиДанных("Значение");
	Отбор = Оформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.Использование=Истина;
	Отбор.ВидСравнения=ВидСравненияКомпоновкиДанных.НеСодержит;
	Отбор.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Параметр");
	Отбор.ПравоеЗначение="%";
			
//	Оформление = Контрагенты.УсловноеОформление.Элементы.Добавить();
//	Оформление.Использование = Истина;
//	Оформление.Оформление.УстановитьЗначениеПараметра("Текст",Новый ПолеКомпоновкиДанных("ПользовательскиеПоля.Поле2"));
////	Оформление.Оформление.УстановитьЗначениеПараметра("Формат","ЧЦ=10; ЧДЦ=2");
//	ПолеКОформлению = Оформление.Поля.Элементы.Добавить();
//	ПолеКОформлению.Использование = Истина;
//	ПолеКОформлению.Поле = Новый ПолеКомпоновкиДанных("Значение");
//	Отбор = Оформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
//	Отбор.Использование=Истина;
//	Отбор.ВидСравнения=ВидСравненияКомпоновкиДанных.Содержит;
//	Отбор.ЛевоеЗначение=Новый ПолеКомпоновкиДанных("Параметр");
//	Отбор.ПравоеЗначение="%";
	
	Договоры = Контрагенты.Структура.Добавить();
	Договоры.Использование = Истина;
	ПолеДоговоры = Договоры.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ПолеДоговоры.Поле 			= Новый ПолеКомпоновкиДанных("Договор");
	ПолеДоговоры.ТипГруппировки	= ТипГруппировкиКомпоновкиДанных.Элементы;
	ПолеДоговоры.Использование	= Истина;
	ВыбранноеПолеДоговоры = Договоры.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПолеДоговоры.Использование	= Истина;
	Оформление = Договоры.УсловноеОформление.Элементы.Добавить();
	Оформление.Использование = Истина;
	Оформление.Оформление.УстановитьЗначениеПараметра("МинимальнаяШирина",25);
	Оформление.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина",25);
	
	//Внешние наборы
	ВнешниеНаборы = Новый Структура("СписокПараметров", РезультатЗ);
	
	
	СтандартнаяОбработка = Ложь;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	////Вывод
	КомпоновщикМакетаСКД = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетСКД = КомпоновщикМакетаСКД.Выполнить(СхемаКомпоновкиДанных,КомпоновщикНастроек.ПолучитьНастройки(),ДанныеРасшифровки);
	
	ПроцессорСКД = Новый ПроцессорКомпоновкиДанных();
	ПроцессорСКД.Инициализировать(МакетСКД, ВнешниеНаборы,ДанныеРасшифровки);
	
	ПроцессорВыводаСКД = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ДокументРезультат.Очистить();
	ПроцессорВыводаСКД.УстановитьДокумент(ДокументРезультат);
	ПроцессорВыводаСКД.Вывести(ПроцессорСКД);
	
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

Функция ПолучитьТипПараметра(ПараметрДоговора) 
	Если ТипЗнч(ПараметрДоговора)=Тип("Строка") Тогда
		СтрокаОписания = ДоступныеПараметры.НайтиСтроки(Новый Структура("Параметр",ПараметрДоговора));
		Если СтрокаОписания.Количество()=0 Тогда
			Возврат Новый ОписаниеТипов("НЕОПРЕДЕЛЕНО");
		Иначе
			Возврат Новый ОписаниеТипов(СтрокаОписания[0].Описание);
		КонецЕсли;
	Иначе
		Возврат ПараметрДоговора.ТипЗначения;
	КонецЕсли;
КонецФункции

Функция ОписаниеПустогоЗначения(ПараметрДоговора) 
	Если ТипЗнч(ПараметрДоговора)=Тип("Строка") Тогда
		СтрокаОписания = ДоступныеПараметры.НайтиСтроки(Новый Структура("Параметр",ПараметрДоговора));
		Если СтрокаОписания.Количество()=0 Тогда
			Возврат "НЕОПРЕДЕЛЕНО";
		Иначе
			Если Найти(СтрокаОписания[0].Описание,"Ссылка.")<>0 Тогда
				Возврат "ЗНАЧЕНИЕ("+СтрЗаменить(СтрокаОписания[0].Описание,"Ссылка.",".")+".ПустаяСсылка)";
			ИначеЕсли СтрокаОписания[0].Описание="Число" Тогда
				Возврат "0";
			ИначеЕсли СтрокаОписания[0].Описание="Дата" Тогда
				Возврат "ДАТАВРЕМЯ(1,1,1,0,0,0)";
			ИначеЕсли СтрокаОписания[0].Описание="Булево" Тогда
				Возврат "ЛОЖЬ";
			ИначеЕсли СтрокаОписания[0].Описание="Строка" Тогда
				Возврат """""";
			Иначе
				Возврат "НЕОПРЕДЕЛЕНО";
			КонецЕсли;	
		КонецЕсли;
	Иначе
		Тип = ПараметрДоговора.ТипЗначения;
		Если Тип.Типы().Количество()>1 Тогда
			Возврат "НЕОПРЕДЕЛЕНО";
		Иначе
			Если Тип.СодержитТип(Тип("Число")) Тогда
				Возврат "0";
			ИначеЕсли Тип.СодержитТип(Тип("Дата")) Тогда
				Возврат "ДАТАВРЕМЯ(1,1,1,0,0,0)";
			ИначеЕсли Тип.СодержитТип(Тип("Булево")) Тогда
				Возврат "ЛОЖЬ";
			ИначеЕсли Тип.СодержитТип(Тип("Строка")) Тогда
				Возврат """""";
			Иначе
				Для Каждого Перечисление Из Метаданные.Перечисления Цикл
					Если Тип.СодержитТип(Тип("ПеречислениеСсылка."+Перечисление.Имя)) Тогда
						Возврат "ЗНАЧЕНИЕ(Перечисление."+Перечисление.Имя+".ПустаяСсылка)";
					КонецЕсли;
				КонецЦикла;
				Для Каждого Перечисление Из Метаданные.Справочники Цикл
					Если Тип.СодержитТип(Тип("СправочникСсылка."+Перечисление.Имя)) Тогда
						Возврат "ЗНАЧЕНИЕ(Справочник."+Перечисление.Имя+".ПустаяСсылка)";
					КонецЕсли;
				КонецЦикла;
				Для Каждого Перечисление Из Метаданные.ПланыСчетов Цикл
					Если Тип.СодержитТип(Тип("ПланСчетовСсылка."+Перечисление.Имя)) Тогда
						Возврат "ЗНАЧЕНИЕ(ПланСчетов."+Перечисление.Имя+".ПустаяСсылка)";
					КонецЕсли;
				КонецЦикла;
				Для Каждого Перечисление Из Метаданные.ПланыВидовРасчета Цикл
					Если Тип.СодержитТип(Тип("ПланВидовРасчетаСсылка."+Перечисление.Имя)) Тогда
						Возврат "ЗНАЧЕНИЕ(ПланВидовРасчета."+Перечисление.Имя+".ПустаяСсылка)";
					КонецЕсли;
				КонецЦикла;
				Возврат "НЕОПРЕДЕЛЕНО";
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
КонецФункции

