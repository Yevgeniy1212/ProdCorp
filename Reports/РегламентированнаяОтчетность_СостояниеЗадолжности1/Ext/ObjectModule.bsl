#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем НП Экспорт;
Перем ИмяРегистраБухгалтерии Экспорт;
Перем мСписокСтруктурныхЕдиниц Экспорт;

//////////////////////////////////////////////////////////
// ФОРМИРОВАНИЕ ЗАГОЛОВКА ОТЧЕТА

// Формирует заголовок отчета
//
Функция ЗаголовокОтчета() Экспорт
	Если ВидЗадолжности = Истина Тогда
		ТекстЗаголовка = "Информация о состоянии дебиторской задолжности";
	Иначе
		ТекстЗаголовка = "Информация о состоянии кредиторской задолжности";
	КонецЕсли;
	
	Возврат ТекстЗаголовка;
КонецФункции // ЗаголовокОтчета()

// Функция возвращает строку описания настроек отборов
//
// Параметры
//  Нет параметров
//
// Возвращаемое значение:
//   Строка   – Строка описания настроек, выводимая в шапку отчета
//
Функция ПолучитьОписаниеНастроек()
	
	СтрокаОписания = "";
	
	//Если ПоВалюте Тогда
	//	СтрокаОписания = СтрокаОписания+?(ПустаяСтрока(СтрокаОписания),"","; ")+"Валюта="+Строка(Валюта);
	//КонецЕсли;
	
	// добавь описание своих настроек
	
	СтрокаОписания = ?(ПустаяСтрока(СтрокаОписания),"фильтры не заданы",СтрокаОписания);
	
	Возврат СтрокаОписания;
	
КонецФункции // ПолучитьОписаниеНастроек()

// Выводит заголовок отчета
//
// Параметры:
//	Нет.
//
Функция СформироватьЗаголовок() Экспорт

	ОписаниеПериода = ЗаголовокОтчета()+" на " + Формат(ДатаКон+86400, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения"""); 
	НазваниеОрганизации = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация");
	ОписаниеПериода = ОписаниеПериода +" "+ НазваниеОрганизации;
	
	НазваниеОрганизаций ="Отбор по: "+РаботаСДиалогами.ВыгрузитьСписокВСтроку(мСписокСтруктурныхЕдиниц,,,Ложь);//Организация.Наименование;
	
	Макет = ПолучитьМакет("Макет");
	
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОтчета.Параметры.Заголовок           = ОписаниеПериода;
	ЗаголовокОтчета.Параметры.НазваниеОрганизаций           = НазваниеОрганизаций;
	

	Возврат(ЗаголовокОтчета);

КонецФункции // СформироватьЗаголовок()

//////////////////////////////////////////////////////////
// СОХРАНЕНИЕ И ВОССТАНОВЛЕНИЕ ПАРАМЕТРОВ ОТЧЕТА

// Формирование структуры для сохранения настроек отчета.
// В структуру заносятся значимые реквизиты отчета
//
// Возвращаемое значение:
//    Структура
Функция СформироватьСтруктуруДляСохраненияНастроек() Экспорт

	СтруктураНастроек = Новый Структура;
	
	СтруктураНастроек.Вставить("СписокОрганизаций", мСписокСтруктурныхЕдиниц);
	
	СтруктураНастроек.Вставить("ДатаНач"    , ДатаНач);
	СтруктураНастроек.Вставить("ДатаКон"    , ДатаКон);
	СтруктураНастроек.Вставить("ВидЗадолжности", ВидЗадолжности);
	
	Возврат СтруктураНастроек;

КонецФункции // СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок)

// Восстановление значимых реквизитов отчета из структуры
//
// Параметры:
//    Структура   - структура, которая содержит значения реквизитов отчета
Процедура ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт

	Если ТипЗнч(СтруктураСНастройками) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	СписокОрганизацийСохраняемый = "";
	СтруктураСНастройками.Свойство("СписокОрганизаций", СписокОрганизацийСохраняемый);
	Если ТипЗнч(СписокОрганизацийСохраняемый) = Тип("СписокЗначений") Тогда
		мСписокСтруктурныхЕдиниц = СписокОрганизацийСохраняемый;
	Иначе
		мСписокСтруктурныхЕдиниц = Новый СписокЗначений;
	КонецЕсли;
	ПредставлениеСпискаСтруктурныхЕдиниц = РаботаСДиалогами.ВыгрузитьСписокВСтроку(мСписокСтруктурныхЕдиниц);
//	СтруктураСНастройками.Свойство("Организация", Организация);
	
	СтруктураСНастройками.Свойство("ДатаНач"    , ДатаНач);
	СтруктураСНастройками.Свойство("ДатаКон"    , ДатаКон);
	
	Если СтруктураСНастройками.Свойство("ВидЗадолжности") Тогда
		
		СтруктураСНастройками.Свойство("ВидЗадолжности", ВидЗадолжности);
		
	Иначе
		
		ВидЗадолжности = Истина;
	
	КонецЕсли;
	
КонецПроцедуры

//////////////////////////////////////////////////////////
// ПОСТРОЕНИЕ ОТЧЕТА

Процедура ОбработкаРасшифровкиОтчета(ВыбРасшифровка) Экспорт
	
	ПараметрыОтбораКарточкиСчета = ВыбРасшифровка["КарточкаСчета"];
	
	Отчет = Отчеты.КарточкаСчетаТиповой.Создать();
	
	ФормаОтчета = Отчет.ПолучитьФорму(, , Новый УникальныйИдентификатор());
	
	Попытка
		
		Отчет.Настроить(ПараметрыОтбораКарточкиСчета);
		
		ФормаОтчета.ПоказыватьЗаголовок = ПараметрыОтбораКарточкиСчета["ПоказыватьЗаголовок"];
		
		ФормаОтчета.ОбновитьОтчет();
		
	Исключение
		
	КонецПопытки;
	
	ФормаОтчета.Открыть();
	
КонецПроцедуры

Функция ЗаполнитьРасшифровкуСтроки(Область,РасшифровываемыйСчет,КонтрагентДляОтбора,ДоговорДляОтбора)
	ПараметрыКарточкиСчета = Новый Соответствие;
	ПараметрыКарточкиСчета.Вставить("Счет", РасшифровываемыйСчет);
	ПараметрыКарточкиСчета.Вставить("НачалоПериода", ДатаНач);
	ПараметрыКарточкиСчета.Вставить("КонецПериода", ДатаКон);
	ПараметрыКарточкиСчета.Вставить("СписокОрганизаций", мСписокСтруктурныхЕдиниц);
	ПараметрыКарточкиСчета.Вставить("ПоказыватьЗаголовок", Истина);
	
	ДополнительныеОтборы = Отчеты_БК.СоздатьТаблицуДляХраненияОтбора(Истина);

	СтрокаОтбора = ДополнительныеОтборы.ДОбавить();
	СтрокаОтбора.Использование = ?(ТипЗнч(КонтрагентДляОтбора)=Тип("Справочникссылка.Контрагенты"),Истина,Ложь);
	СтрокаОтбора.Имя = "Субконто1";
	СтрокаОтбора.ПутьКДанным = "Субконто1";
	СтрокаОтбора.ВидСравнения = ВидСравнения.Равно;
	СтрокаОтбора.Значение = КонтрагентДляОтбора;
	
	СтрокаОтбора = ДополнительныеОтборы.ДОбавить();
	СтрокаОтбора.Использование = ?(ТипЗнч(ДоговорДляОтбора)=Тип("СправочникСсылка.ДоговорыКонтрагентов"),Истина,Ложь);
	СтрокаОтбора.Имя = "Субконто2";
	СтрокаОтбора.ПутьКДанным = "Субконто2";
	СтрокаОтбора.ВидСравнения = ВидСравнения.Равно;
	СтрокаОтбора.Значение = ДоговорДляОтбора;
	
	//СтрокаОтбора = ДополнительныеОтборы.ДОбавить();
	//СтрокаОтбора.Использование = ?(ТипЗнч(ТипОперацииДляОтбора)=Тип("СправочникСсылка.ТипыОпераций"),Истина,Ложь);
	//СтрокаОтбора.Имя = "Субконто3";
	//СтрокаОтбора.ПутьКДанным = "Субконто3";
	//СтрокаОтбора.ВидСравнения = ВидСравнения.Равно;
	//СтрокаОтбора.Значение = ТипОперацииДляОтбора;
	
	ПараметрыКарточкиСчета.Вставить("Отбор", ДополнительныеОтборы);
	
	СписокРасшифровки = Новый Структура;
	СписокРасшифровки.Вставить("КарточкаСчета",ПараметрыКарточкиСчета);
	
	Возврат СписокРасшифровки;	
	
КонецФункции

// Формирование текста запроса
//
// Параметры
//  Нет
//
// Возвращаемое значение:
//   Строка   – Текст запроса
//
Функция ПолучитьТекстЗапроса(Тип)
	
	Если Тип=1 тогда
		ТекстЗапроса=
		"ВЫБРАТЬ
		|   Ит_Список.ID,
		|   Ит_Список.Счет,
		|   Ит_Список.Контрагент,
		|   Ит_Список.Договор,
		|   Ит_Список.Комментарий,
		|   Ит_Список.Период,
		|   ВЫБОР КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|			ТОГДА Ит_Список.Договор.ДатаПогашения
		|			ИНАЧЕ Ит_Список.Договор.ДатаОкончанияДействияДоговора
		|	КОНЕЦ КАК ДатаОкончанияДействияДоговора,
		|	ВЫБОР
		|		КОГДА -ВЫБОР
		|				КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|					ТОГДА ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|							ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОНЕЦ <= 31
		|			ТОГДА Ит_Список.КонСальдо
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаДоОдногоМесяца,
		|	ВЫБОР
		|		КОГДА -ВЫБОР
		|					КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|						ТОГДА ВЫБОР
		|								КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|									ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				КОНЕЦ <= 63
		|				И -ВЫБОР
		|					КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|						ТОГДА ВЫБОР
		|								КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|									ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				КОНЕЦ > 31
		|			ТОГДА Ит_Список.КонСальдо
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаДоТрехМесяцев,
		|	ВЫБОР
		|		КОГДА -ВЫБОР
		|					КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|						ТОГДА ВЫБОР
		|								КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|									ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				КОНЕЦ <= 183
		|				И -ВЫБОР
		|					КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|						ТОГДА ВЫБОР
		|								КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|									ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				КОНЕЦ > 63
		|			ТОГДА Ит_Список.КонСальдо
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаДоШестиМесяцев,
		|	ВЫБОР
		|		КОГДА -ВЫБОР
		|					КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|						ТОГДА ВЫБОР
		|								КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|									ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				КОНЕЦ <= 366
		|				И -ВЫБОР
		|					КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|						ТОГДА ВЫБОР
		|								КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|									ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				КОНЕЦ > 183
		|			ТОГДА Ит_Список.КонСальдо
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаДоГода,
		|	ВЫБОР
		|		КОГДА -ВЫБОР
		|				КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|					ТОГДА ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|							ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОНЕЦ > 366
		|			ТОГДА Ит_Список.КонСальдо
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаБольшеГода,
		|   ВЫБОР КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|   		ТОГДА 
		|				ВЫБОР КОГДА Ит_Список.Период = Null
		|							ИЛИ Ит_Список.Договор.ДатаПогашения = Null
		|					ТОГДА 0
		|					ИНАЧЕ РазностьДат(Ит_Список.Период,Ит_Список.Договор.ДатаПогашения,День)
		|				КОНЕЦ
		|			ИНАЧЕ 
		|				ВЫБОР КОГДА Ит_Список.Период = Null
		|							ИЛИ Ит_Список.Договор.ДатаОкончанияДействияДоговора = Null
		|					ТОГДА 0
		|					ИНАЧЕ РазностьДат(Ит_Список.Период,Ит_Список.Договор.ДатаОкончанияДействияДоговора,День)
		|				КОНЕЦ
		|	КОНЕЦ КАК СрокЗадолжности,
		|   Ит_Список.НачСальдо,
		|   Ит_Список.КонСальдо,
		|   Ит_Список.Начислено,
		|   Ит_Список.Уплачено,
		//|   Ит_Список.ПросроченнаяЗадолжность
		|   ВЫБОР КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|   	ТОГДА 
		|			ВЫБОР 
		|				КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|       		ТОГДА Ит_Список.КонСальдо
		|       		ИНАЧЕ 0
		|			КОНЕЦ
		|       ИНАЧЕ 
		|			ВЫБОР 
		|				КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|       		ТОГДА Ит_Список.КонСальдо
		|       		ИНАЧЕ 0
		|			КОНЕЦ
		|   КОНЕЦ КАК ПросроченнаяЗадолжность,
		|   ВЫБОР КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|   		ТОГДА 
		|				ВЫБОР 
		|					КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|       			ТОГДА РазностьДат(&ДатаКон,Ит_Список.Договор.ДатаПогашения,День)
		|       			ИНАЧЕ """"
		|				КОНЕЦ
		|       	ИНАЧЕ 		
		|				ВЫБОР 
		|					КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|       			ТОГДА РазностьДат(&ДатаКон,Ит_Список.Договор.ДатаОкончанияДействияДоговора,День)
		|       			ИНАЧЕ """"
		|				КОНЕЦ
		|   КОНЕЦ КАК СрокПросроченнойЗадолжности
		|
		|ИЗ
		|	(Выбрать
		|	1 Как ID,
		|	ТиповойОбороты.Счет Как Счет,
		|	ТиповойОбороты.Субконто1 КАК Контрагент,
		|	ТиповойОбороты.Субконто2 КАК Договор,
		|	ТиповойОбороты.Субконто3 КАК Комментарий,
		|	ТиповойОбороты.Субконто2.ДатаДоговора КАК Период,
		//|   Выбор Когда ДанныеПоПериодам.Период = Null
		//|	Тогда	ТиповойОбороты.Субконто2.ДатаДоговора
		//|	Иначе  
		//|		Выбор Когда ТиповойОбороты.СуммаНачальныйОстатокДт>0
		//|		Тогда	ДанныеПоПериодам.Период
		//|		Иначе   &ДатаНач
		//|		Конец
		//|	Конец Как Период,
		|	ТиповойОбороты.СуммаНачальныйОстатокДт КАК НачСальдо,
		|	ТиповойОбороты.СуммаКонечныйОстатокДт КАК КонСальдо,
		|	ТиповойОбороты.СуммаОборотДт КАК Начислено,
		|	ТиповойОбороты.СуммаОборотКт КАК Уплачено,
		|	ВЫБОР Когда      
		|    (ТиповойОбороты.СуммаНачальныйОстатокДт-ТиповойОбороты.СуммаОборотКт)>0
		|	Тогда (ТиповойОбороты.СуммаНачальныйОстатокДт-ТиповойОбороты.СуммаОборотКт)
		|	Иначе 0
		|   Конец КАК ПросроченнаяЗадолжность
		|
		|	ИЗ
		|		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(&ДатаНач, 
		|										&ДатаКон, , ,
		|										Счет В (&СписокСчетов) И НЕ Счет В (&СписокСчетовИсключения),
		|										&мВидСубконтоКонтрагенты,
		|										Организация В (&СписокОрганизаций)) КАК ТиповойОбороты
		|	Левое Соединение 
		|				(Выбрать
		|					ОборотыДтКт.счетКТ Как СчетКт,
		|					ОборотыДтКт.СубконтоКТ1 Как Контрагент,
		|					ОборотыДтКт.СубконтоКТ2 Как Договор,
		|					ОборотыДтКт.СубконтоКТ3 Как Комментарий,
		|					максимум(ОборотыДтКт.Период) Как Период
		|				  ИЗ РегистрБухгалтерии.Типовой.ОборотыДтКт(&ДатаНачГода, 
		|															&ДатаКон, 
		|															Месяц, , , 
		|															СчетКт В (&Списоксчетов) И НЕ СчетКт В (&СписокСчетовИсключения), 
		|															&мВидСубконтоКонтрагенты,
		|															Организация В (&СписокОрганизаций)) КАК ОборотыДтКт
		|                СГРУППИРОВАТЬ ПО ОборотыДтКт.счетКТ,
		|								  ОборотыДтКт.СубконтоКТ1,
		|								   ОборотыДтКт.СубконтоКТ2,
		|								   ОборотыДтКт.СубконтоКТ3
		|				) КАК ДанныеПоПериодам
		|				По ТиповойОбороты.Счет = ДанныеПоПериодам.счетКт
		|					И ТиповойОбороты.Субконто1 = ДанныеПоПериодам.Контрагент
		|					И ТиповойОбороты.Субконто2 = ДанныеПоПериодам.Договор
		|					И ТиповойОбороты.Субконто3 = ДанныеПоПериодам.Комментарий
		|ГДЕ
		|	ТиповойОбороты.СуммаКонечныйОстатокДт <> 0
		//|	ОБЪЕДИНИТЬ ВСЕ
		//|		ВЫБРАТЬ
		//|		2 Как ID,
		//|		ВТ_Запрос.Счет Как Счет,
		//|		&ПредСотрудники КАК Контрагент,
		//|		"""" КАК Договор,
		//|		"""" КАК Комментарий,
		//|		&ДатаНач  Как Период,
		//|		ВТ_Запрос.НачСальдо КАК НачСальдо,
		//|		ВТ_Запрос.КонСальдо КАК КонСальдо,
		//|		ВТ_Запрос.Начислено КАК Начислено,
		//|		ВТ_Запрос.Уплачено КАК Уплачено,
		//|		ВЫБОР Когда      
		//|    	(ВТ_Запрос.НачСальдо-ВТ_Запрос.Уплачено)>0
		//|		Тогда (ВТ_Запрос.НачСальдо-ВТ_Запрос.Уплачено)
		//|		Иначе 0
		//|   	Конец КАК ПросроченнаяЗадолжность
		//|		ИЗ
		//|			(ВЫБРАТЬ
		//|			ТиповойОбороты.Счет Как Счет,
		//|			Сумма(ТиповойОбороты.СуммаНачальныйОстатокДт) КАК НачСальдо,
		//|			Сумма(ТиповойОбороты.СуммаКонечныйОстатокДт) КАК КонСальдо,
		//|			Сумма(ТиповойОбороты.СуммаОборотДт) КАК Начислено,
		//|			Сумма(ТиповойОбороты.СуммаОборотКт) КАК Уплачено
		//|			ИЗ РегистрБухгалтерии.Типовой.ОстаткиИОбороты(&ДатаНач, 
		//|										&ДатаКон, , ,
		//|										Счет В (&СписокСчетов),
		//|										&мВидСубконтоРаботники,
		//|										Организация В (&СписокОрганизаций)) КАК ТиповойОбороты
		//|		СГРУППИРОВАТЬ ПО СЧЕТ
		//|		) КАК ВТ_Запрос
		//|
		//|	ОБЪЕДИНИТЬ ВСЕ
		//|		ВЫБРАТЬ
		//|		3 Как ID,
		//|		ВТ_ЗапросНалоги.Счет Как Счет,
		//|		&ПредНалоги КАК Контрагент,
		//|		"""" КАК Договор,
		//|		"""" КАК Комментарий,
		//|		&ДатаНач  Как Период,
		//|		ВТ_ЗапросНалоги.НачСальдо КАК НачСальдо,
		//|		ВТ_ЗапросНалоги.КонСальдо КАК КонСальдо,
		//|		ВТ_ЗапросНалоги.Начислено КАК Начислено,
		//|		ВТ_ЗапросНалоги.Уплачено КАК Уплачено,
		//|		ВЫБОР Когда      
		//|    	(ВТ_ЗапросНалоги.НачСальдо-ВТ_ЗапросНалоги.Уплачено)>0
		//|		Тогда (ВТ_ЗапросНалоги.НачСальдо-ВТ_ЗапросНалоги.Уплачено)
		//|		Иначе 0
		//|   	Конец КАК ПросроченнаяЗадолжность
		//|		ИЗ
		//|			(ВЫБРАТЬ
		//|			ТиповойОбороты.Счет Как Счет,
		//|			Сумма(ТиповойОбороты.СуммаНачальныйОстатокДт) КАК НачСальдо,
		//|			Сумма(ТиповойОбороты.СуммаКонечныйОстатокДт) КАК КонСальдо,
		//|			Сумма(ТиповойОбороты.СуммаОборотДт) КАК Начислено,
		//|			Сумма(ТиповойОбороты.СуммаОборотКт) КАК Уплачено
		//|			ИЗ РегистрБухгалтерии.Типовой.ОстаткиИОбороты(&ДатаНач, 
		//|										&ДатаКон, , ,
		//|										Счет В (&СписокСчетов),
		//|										&мВидСубконтоНалоги,
		//|										Организация В (&СписокОрганизаций)) КАК ТиповойОбороты
		//|		СГРУППИРОВАТЬ ПО СЧЕТ
		//|		) КАК ВТ_ЗапросНалоги
		|	) КАК Ит_Список
		|УПОРЯДОЧИТЬ
		|	ПО ID,счет.Порядок,Контрагент.Наименование,Договор,Комментарий
		|";
	Иначе
		ТекстЗапроса=
		"ВЫБРАТЬ
		|	Ит_Список.ID,
		|	Ит_Список.Счет,
		|	Ит_Список.Контрагент КАК Контрагент,
		|	Ит_Список.Договор КАК Договор,
		|	Ит_Список.Комментарий,
		|	Ит_Список.Период,
		|	ВЫБОР
		|		КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|			ТОГДА Ит_Список.Договор.ДатаПогашения
		|		ИНАЧЕ Ит_Список.Договор.ДатаОкончанияДействияДоговора
		|	КОНЕЦ КАК ДатаОкончанияДействияДоговора,
		|	ВЫБОР
		|		КОГДА -ВЫБОР
		|				КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|					ТОГДА ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|							ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОНЕЦ <= 31
		|			ТОГДА Ит_Список.КонСальдо
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаДоОдногоМесяца,
		|	ВЫБОР
		|		КОГДА -ВЫБОР
		|					КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|						ТОГДА ВЫБОР
		|								КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|									ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				КОНЕЦ <= 63
		|				И -ВЫБОР
		|					КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|						ТОГДА ВЫБОР
		|								КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|									ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				КОНЕЦ > 31
		|			ТОГДА Ит_Список.КонСальдо
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаДоТрехМесяцев,
		|	ВЫБОР
		|		КОГДА -ВЫБОР
		|					КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|						ТОГДА ВЫБОР
		|								КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|									ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				КОНЕЦ <= 183
		|				И -ВЫБОР
		|					КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|						ТОГДА ВЫБОР
		|								КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|									ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				КОНЕЦ > 63
		|			ТОГДА Ит_Список.КонСальдо
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаДоШестиМесяцев,
		|	ВЫБОР
		|		КОГДА -ВЫБОР
		|					КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|						ТОГДА ВЫБОР
		|								КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|									ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				КОНЕЦ <= 366
		|				И -ВЫБОР
		|					КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|						ТОГДА ВЫБОР
		|								КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|									ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|								ИНАЧЕ 0
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				КОНЕЦ > 183
		|			ТОГДА Ит_Список.КонСальдо
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаДоГода,
		|	ВЫБОР
		|		КОГДА -ВЫБОР
		|				КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|					ТОГДА ВЫБОР
		|							КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|								ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|							ИНАЧЕ 0
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|							ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			КОНЕЦ > 366
		|			ТОГДА Ит_Список.КонСальдо
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаБольшеГода,
		|	ВЫБОР
		|		КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|			ТОГДА ВЫБОР
		|					КОГДА Ит_Список.Период = NULL
		|							ИЛИ Ит_Список.Договор.ДатаПогашения = NULL
		|						ТОГДА 0
		|					ИНАЧЕ РАЗНОСТЬДАТ(Ит_Список.Период, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Ит_Список.Период = NULL
		|						ИЛИ Ит_Список.Договор.ДатаОкончанияДействияДоговора = NULL
		|					ТОГДА 0
		|				ИНАЧЕ РАЗНОСТЬДАТ(Ит_Список.Период, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|			КОНЕЦ
		|	КОНЕЦ КАК СрокЗадолжности,
		|	Ит_Список.НачСальдо,
		|	Ит_Список.КонСальдо,
		|	Ит_Список.Начислено,
		|	Ит_Список.Уплачено,
		|	ВЫБОР
		|		КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|			ТОГДА ВЫБОР
		|					КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|						ТОГДА Ит_Список.КонСальдо
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|					ТОГДА Ит_Список.КонСальдо
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК ПросроченнаяЗадолжность,
		|	ВЫБОР
		|		КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|			ТОГДА ВЫБОР
		|					КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|						ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|					ИНАЧЕ """"
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|					ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|				ИНАЧЕ """"
		|			КОНЕЦ
		|	КОНЕЦ КАК СрокПросроченнойЗадолжности
		|ИЗ
		|	(ВЫБРАТЬ
		|		1 КАК ID,
		|		ТиповойОбороты.Счет КАК Счет,
		|		ТиповойОбороты.Субконто1 КАК Контрагент,
		|		ТиповойОбороты.Субконто2 КАК Договор,
		|		ТиповойОбороты.Субконто3 КАК Комментарий,
		|		ТиповойОбороты.Субконто2.ДатаДоговора КАК Период,
		|		ВЫБОР
		|			КОГДА ТиповойОбороты.СуммаНачальныйОстатокКт - ТиповойОбороты.СуммаОборотДт > 0
		|				ТОГДА ТиповойОбороты.СуммаНачальныйОстатокКт - ТиповойОбороты.СуммаОборотДт
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ПросроченнаяЗадолжность,
		|		ТиповойОбороты.СуммаНачальныйОстатокКт КАК НачСальдо,
		|		ТиповойОбороты.СуммаКонечныйОстатокКт КАК КонСальдо,
		|		ТиповойОбороты.СуммаОборотКт КАК Начислено,
		|		ТиповойОбороты.СуммаОборотДт КАК Уплачено
		|	ИЗ
		|		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(
		|				&ДатаНач,
		|				&ДатаКон,
		|				,
		|				,
		|				Счет В (&СписокСчетов)
		|					И НЕ Счет В (&СписокСчетовИсключения),
		|				&мВидСубконтоКонтрагенты,
		|				Организация В (&СписокОрганизаций)) КАК ТиповойОбороты
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ОборотыДтКт.СчетДт КАК СчетДт,
		|				ОборотыДтКт.СубконтоДт1 КАК Контрагент,
		|				ОборотыДтКт.СубконтоДт2 КАК Договор,
		|				ОборотыДтКт.СубконтоДт3 КАК Комментарий,
		|				МАКСИМУМ(ОборотыДтКт.Период) КАК Период
		|			ИЗ
		|				РегистрБухгалтерии.Типовой.ОборотыДтКт(
		|						&ДатаНачГода,
		|						&ДатаКон,
		|						Месяц,
		|						СчетДт В (&Списоксчетов)
		|							И НЕ СчетДт В (&СписокСчетовИсключения),
		|						&мВидСубконтоКонтрагенты,
		|						,
		|						,
		|						Организация В (&СписокОрганизаций)) КАК ОборотыДтКт
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ОборотыДтКт.СчетДт,
		|				ОборотыДтКт.СубконтоДт1,
		|				ОборотыДтКт.СубконтоДт2,
		|				ОборотыДтКт.СубконтоДт3) КАК ДанныеПоПериодам
		|			ПО ТиповойОбороты.Счет = ДанныеПоПериодам.СчетДт
		|				И ТиповойОбороты.Субконто1 = ДанныеПоПериодам.Контрагент
		|				И ТиповойОбороты.Субконто2 = ДанныеПоПериодам.Договор
		|				И ТиповойОбороты.Субконто3 = ДанныеПоПериодам.Комментарий
		|	ГДЕ
		|		ТиповойОбороты.СуммаКонечныйОстатокКт <> 0) КАК Ит_Список
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ит_Список.ID,
		|	Ит_Список.Счет.Порядок,
		|	Ит_Список.Контрагент.Наименование,
		|	Договор,
		|	Ит_Список.Комментарий";
	Конецесли;
	
	Возврат ТекстЗапроса;
КонецФункции // ПолучитьТекстЗапроса()

// Вывод отчета в табличный документ
//
Процедура ВывестиОтчет(ДокументРезультат, Макет)


	мВидСубконтоКонтрагенты = Новый массив;
	мВидСубконтоКонтрагенты.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
	мВидСубконтоКонтрагенты.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Договоры);
	мВидСубконтоКонтрагенты.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ТипыОпераций);
	
	//мВидСубконтоНалоги = Новый массив;
	//мВидСубконтоНалоги.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.НалогиСборыОтчисления);
	//
	//мВидСубконтоРаботники = Новый массив;
	//мВидСубконтоРаботники.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.РаботникиОрганизаций);
	
	Если ВидЗадолжности Тогда
		Тип=1;
	Иначе
		Тип=2;
	Конецесли;
	
	ТаблицаСчетовДляРасчетаЗадолжности = Отчеты_ФХД.ПолучитьСписокСчетовДляРасчетаЗадолженности(Тип);
	
	СписокСчетовИсключения = Новый Массив;
	СписокСчетовИсключения.Добавить(Планысчетов.Типовой.КраткосрочнаяДебиторскаяЗадолженностьПредставительств);
	СписокСчетовИсключения.Добавить(Планысчетов.Типовой.КраткосрочнаяКредиторскаяЗадолженностьПредставительств);
	
	
	СписокСчетов = Новый Массив;
	
	Для каждого СтрокаТЧ ИЗ ТаблицаСчетовДляРасчетаЗадолжности Цикл
		Если СтрокаТЧ.Использование = Истина Тогда
			СписокСчетов.Добавить(СтрокаТЧ.Ссылка);	
		КонецЕсли;
	КонецЦикла;
	
	ОблШапка = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОблСтрока = Макет.ПолучитьОбласть("Строка");
	ОблИтого = Макет.ПолучитьОбласть("Итого");
	
	НачалоМесяца = НачалоМесяца(ДатаКон);
	ДоОдногоМесяца = КонецМесяца(ДатаКон);
	ДоТрехМесяцев = КонецМесяца(ДобавитьМесяц(НачалоМесяца(ДатаКон),2));
	ДоШестиМесяцев = КонецМесяца(ДобавитьМесяц(НачалоМесяца(ДатаКон),6));
	ДоГода = КонецМесяца(ДобавитьМесяц(НачалоМесяца(ДатаКон),12));
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ПолучитьТекстЗапроса(Тип);
	Запрос.УстановитьПараметр("ПредСотрудники", "Сотрудники");
	Запрос.УстановитьПараметр("ПредНалоги", "Налоги и отчисления");
	Запрос.УстановитьПараметр("СписокОрганизаций", мСписокСтруктурныхединиц);
	Запрос.УстановитьПараметр("мВидСубконтоКонтрагенты", мВидСубконтоКонтрагенты);
	//Запрос.УстановитьПараметр("мВидСубконтоРаботники", мВидСубконтоРаботники);
	//Запрос.УстановитьПараметр("мВидСубконтоНалоги", мВидСубконтоНалоги);
	Запрос.УстановитьПараметр("СписокСчетов", СписокСчетов);
	Запрос.УстановитьПараметр("ДатаНачГода", НачалоДня(НачалоГода(ДатаНач)));
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("ТипДоговора", Перечисления.ВидыДоговоровКонтрагентов.Займа);
	Запрос.УстановитьПараметр("СписокСчетовИсключения", СписокСчетовИсключения);
	Запрос.УстановитьПараметр("ДоОдногоМесяца", ДоОдногоМесяца);
	Запрос.УстановитьПараметр("ДоТрехМесяцев", ДоТрехМесяцев);
	Запрос.УстановитьПараметр("ДоШестиМесяцев", ДоШестиМесяцев);
	Запрос.УстановитьПараметр("ДоГода", ДоГода);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца);
	
	//Запрос.УстановитьПараметр("ПустаяДата", КонецДня(ДатаКон));
	
	Состояние("Выполнение запроса");
	Результат = Запрос.Выполнить().Выбрать();
	НомПП=0;
	ИтНачСальдо=0;
	ИтКонСальдо=0;
	ИтНачислено=0; 
	ИтУплачено=0;
	ИтПросроченнаяЗадолжность=0;
	ИтСуммаДоОдногоМесяца = 0;
	ИтСуммаДоТрехМесяцев = 0;
	ИтСуммаДоШестиМесяцев = 0;
	ИтСуммаДоГода = 0;
	ИтСуммаБольшеГода = 0;
	
	//
	//ОблШапка.Параметры.ПредНачПериода = Формат(ДатаНач,"ДФ= ""дд.ММ.гггг""");
	ОблШапка.Параметры.ПредКонПериода = Формат(ДатаКон,"ДФ= ""дд.ММ.гггг""");
	ДокументРезультат.Вывести(ОблШапка, 1);
	Пока Результат.Следующий() Цикл
		
		ИтНачСальдо=ИтНачСальдо+Результат.НачСальдо;
		ИтКонСальдо=ИтКонСальдо+Результат.КонСальдо;
		ИтНачислено=ИтНачислено+Результат.Начислено; 
		ИТУплачено=ИТУплачено+Результат.Уплачено;
		ИтПросроченнаяЗадолжность=ИтПросроченнаяЗадолжность+Результат.ПросроченнаяЗадолжность;
		ИтСуммаДоОдногоМесяца = ИтСуммаДоОдногоМесяца + Результат.СуммаДоОдногоМесяца;
		ИтСуммаДоТрехМесяцев = ИтСуммаДоТрехМесяцев + Результат.СуммаДоТрехМесяцев;
		ИтСуммаДоШестиМесяцев = ИтСуммаДоШестиМесяцев + Результат.СуммаДоШестиМесяцев;
		ИтСуммаДоГода = ИтСуммаДоГода + Результат.СуммаДоГода;
		ИтСуммаБольшеГода = ИтСуммаБольшеГода + Результат.СуммаБольшеГода;
		НомПП=НомПП+1;
		//Период = Формат(Результат.Период,"ДФ = MMMM.yyyy");
		ОблСтрока.Параметры.Заполнить(Результат);
		//ОблСтрока.Параметры.Период=период;
		ОблСтрока.Параметры.НомПП=НомПП;
		
		// Параметры для расшифровки
		
		ОблСтрока.Параметры.Расшифровка = ЗаполнитьРасшифровкуСтроки(ОблСтрока,Результат.Счет, Результат.Контрагент, Результат.Договор);
		
		ДокументРезультат.Вывести(ОблСтрока);
	КонецЦикла;
	
	ОблИтого.Параметры.ИтНачСальдо=ИтНачСальдо;
	ОблИтого.Параметры.ИтКонСальдо=ИтКонСальдо;
	ОблИтого.Параметры.ИтНачислено=ИтНачислено;
	ОблИтого.Параметры.ИтУплачено=ИтУплачено;
	ОблИтого.Параметры.ИтСуммаДоОдногоМесяца=ИтСуммаДоОдногоМесяца;
	ОблИтого.Параметры.ИтСуммаДоТрехМесяцев=ИтСуммаДоТрехМесяцев;
	ОблИтого.Параметры.ИтСуммаДоШестиМесяцев=ИтСуммаДоШестиМесяцев;
	ОблИтого.Параметры.ИтСуммаДоГода=ИтСуммаДоГода;
	ОблИтого.Параметры.ИтСуммаБольшеГода=ИтСуммаБольшеГода;
	ДокументРезультат.Вывести(ОблИтого);

КонецПроцедуры

// Формирование отчета
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Истина, ВысотаЗаголовка = 0) Экспорт

	Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
		Предупреждение("Дата начала периода не может быть больше даты конца периода", 60);
		Возврат;
	КонецЕсли;

	Если Не Отчеты_БК.ПроверкаЗаполенияСпискаСтруктурныхЕдиниц(мСписокСтруктурныхЕдиниц, ПредставлениеСпискаСтруктурныхЕдиниц) Тогда
		Возврат;
    КонецЕсли;

	ДокументРезультат.Очистить();

	Макет = ПолучитьМакет("Макет");

	// Вывод заголовка отчета
	ОбластьЗаголовка = СформироватьЗаголовок();
	ВысотаЗаголовка  = ОбластьЗаголовка.ВысотаТаблицы;
	
	ДокументРезультат.Вывести(ОбластьЗаголовка, 1);

	/////////////////////////////////
	// здесь формируем отчет
	/////////////////////////////////
	ВывестиОтчет(ДокументРезультат, Макет);
	/////////////////////////////////
	
	// Зафиксируем заголовок отчета
	ДокументРезультат.ФиксацияСверху = ВысотаЗаголовка + 2;

	// Шапку таблицы печатаем на всех страницах
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаЗаголовка + 1,,ВысотаЗаголовка + 1);
	
	// Первую колонку не печатаем
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
	
	// Присвоим имя для сохранения параметров печати табличного документа
	ДокументРезультат.ИмяПараметровПечати = "ЗадолжностьДт/Кт "+ИмяРегистраБухгалтерии;

	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета(), Строка(глТекущийПользователь));
	
КонецПроцедуры

//////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Настраивает отчет по заданным параметрам (например, для расшифровки)
//
Процедура Настроить(СтруктураПараметров) Экспорт
	
	Параметры = Новый Соответствие;
	
	Для каждого Элемент Из СтруктураПараметров Цикл
		Параметры.Вставить(Элемент.Ключ, Элемент.Значение);
	КонецЦикла;

	Организация = Параметры["Организация"];
	Если ЗначениеЗаполнено(Организация) Тогда
		мСписокСтруктурныхЕдиниц = Новый СписокЗначений;
		мСписокСтруктурныхЕдиниц.Добавить(Организация);
	Иначе
		мСписокСтруктурныхЕдиниц = Параметры["СписокОрганизаций"];
		Если мСписокСтруктурныхЕдиниц = Неопределено Тогда
			мСписокСтруктурныхЕдиниц = Новый СписокЗначений;
		КонецЕсли;
	КонецЕсли;
	ПредставлениеСпискаСтруктурныхЕдиниц = РаботаСДиалогами.ВыгрузитьСписокВСтроку(мСписокСтруктурныхЕдиниц,,,);	
	
	ДатаНач = Параметры["ДатаНач"];
	ДатаКон = Параметры["ДатаКон"];
	ВидЗадолжности = Параметры["ВидЗадолжности"];

	
КонецПроцедуры

//////////////////////////////////////////////////////////
// МОДУЛЬ ОБЪЕКТА

НП = Новый НастройкаПериода;
НП.ВариантНастройки = ВариантНастройкиПериода.Период;

ИмяРегистраБухгалтерии = "Типовой";

мСписокСтруктурныхЕдиниц = Новый СписокЗначений;

#КонецЕсли