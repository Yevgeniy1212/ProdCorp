#Если Клиент Тогда
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит таблицу значений - состав показателей отчета.
Перем мТаблицаСоставПоказателей Экспорт;

// Хранит структуру - состав показателей отчета,
// значение которых автоматически заполняется по учетным данным.
Перем мСтруктураВариантыЗаполнения Экспорт;

// Хранит имя выбранной формы отчета
Перем мВыбраннаяФорма Экспорт;

// Хранит признак скопированной формы.
Перем мСкопированаФорма Экспорт;

// Хранит ссылку на документ, хранящий данные отчета
Перем мСохраненныйДок Экспорт;

// Следующие переменные хранят границы
// периода построения отчета
Перем мДатаНачалаПериодаОтчета Экспорт;
Перем мДатаКонцаПериодаОтчета  Экспорт;

Перем мВерсияФормы Экспорт;

Перем мПолноеИмяФайлаВнешнейОбработки Экспорт;

Перем мЗаписьЗапрещена Экспорт;

Перем мИнтервалАвтосохранения Экспорт;

Перем мТаблицаСтраницНаПечать Экспорт;

Перем ВсегоСтраниц Экспорт;

//Переменная хранит значение константы ПоддержкаРаботыСоСтруктурнымиПодразделениями
Перем мПоддержкаРаботыСоСтруктурнымиПодразделениями Экспорт;

// Хранит список структурных единиц, по которым стоится отчет
Перем мСписокСтруктурныхЕдиниц Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура формирует отчет по переданным параметрам 
//
// Параметры:
//	ДокументРезультат - табличный документ, куда вывести отчет
//	ДатаФормирования  - дату, на которую формируется отчет
//  ВыбНалогоплательщик	  - СправочникСсылка.Организации - налогоплательщик, по которому формировать отчет
//  ВыбФизЛицо		 	  - СправочникСсылка.ФизическиеЛица
//
Процедура СформироватьОтчетПоПараметрам(ДокументРезультат, ДатаФормирования, ВыбНалогоплательщик, ВыбФизЛицо) Экспорт

	мДатаНачалаПериодаОтчета = НачалоГода(ДатаФормирования);
	мДатаКонцаПериодаОтчета	 = КонецМесяца(ДатаФормирования);
	
	ОсновнаяФорма = ПолучитьФорму("ОсновнаяФорма");
	
	СтрокаФормаОтчета = ОсновнаяФорма.ПолучитьФормуДляПериода(ДатаФормирования);
	Если ЗначениеЗаполнено(СтрокаФормаОтчета) Тогда
		ФормаОтчета = ПолучитьФорму(СтрокаФормаОтчета);
		Налогоплательщик = ВыбНалогоплательщик;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			мСписокСтруктурныхЕдиниц = ПроцедурыНалоговогоУчета.СформироватьСписокСтруктурныхЕдиниц(Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты, Неопределено, Налогоплательщик);
		Иначе
			мСписокСтруктурныхЕдиниц.Очистить();
			мСписокСтруктурныхЕдиниц.Добавить(Налогоплательщик);
		КонецЕсли;
		ДатаПодписи = ДатаФормирования;
		ФормаОтчета.ФизЛицо = ВыбФизЛицо;
		ФормаОтчета.ЗаполнитьАвто();
		ДокументРезультат.Вывести(ФормаОтчета.ЭлементыФормы.ПолеТабличногоДокументаРасчет);
	КонецЕсли;

КонецПроцедуры // СформироватьОтчетПоПараметрам

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ 

мПоддержкаРаботыСоСтруктурнымиПодразделениями = Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить();

мСписокСтруктурныхЕдиниц = Новый СписокЗначений;

ОписаниеТиповСтрока15  = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(15);
ОписаниеТиповСтрока50  = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(50);

// Таблица значений хранит состав показателей отчета.
// В колонках таблицы хранятся следующие данные:
//    - имя поля табличного документа;
//    - код показатели по составу показателей;
//    - код показателя по форме (имя области табличного документа);
//    - признак многострочности;
//    - тип данных показателя.
//
мТаблицаСоставПоказателей    = Новый ТаблицаЗначений;
мТаблицаСоставПоказателей.Колонки.Добавить("ИмяПоляТаблДокумента",    ОписаниеТиповСтрока50);
мТаблицаСоставПоказателей.Колонки.Добавить("КодПоказателяПоСоставу",  ОписаниеТиповСтрока50);
мТаблицаСоставПоказателей.Колонки.Добавить("КодПоказателяПоФорме",    ОписаниеТиповСтрока50);
мТаблицаСоставПоказателей.Колонки.Добавить("ПризнМногострочности",    ОписаниеТиповСтрока15);
мТаблицаСоставПоказателей.Колонки.Добавить("ТипДанныхПоказателя",     ОписаниеТиповСтрока15);
мТаблицаСоставПоказателей.Колонки.Добавить("КодПоказателяПоСтруктуре",ОписаниеТиповСтрока50);

мСтруктураВариантыЗаполнения = Новый Структура;

мТаблицаСтраницНаПечать = Новый ТаблицаЗначений;
мТаблицаСтраницНаПечать.Колонки.Добавить("ПолеТабличногоДокумента");
мТаблицаСтраницНаПечать.Колонки.Добавить("ИмяЛиста");
мТаблицаСтраницНаПечать.Колонки.Добавить("ИмяЛистаДляЗаписи");

#КонецЕсли
