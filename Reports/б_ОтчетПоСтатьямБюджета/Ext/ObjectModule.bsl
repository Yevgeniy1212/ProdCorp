Перем мСписокИсточниковФинансирования Экспорт;
Перем мСписокСтруктурныхЕдиниц Экспорт;
Перем мСписокПодразделений Экспорт;
Перем мДеревоСтруктурныхЕдиниц Экспорт;
Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;
Перем ПромежуточныеДанные Экспорт;
Перем РежимРасшифровки Экспорт;
Перем ВедётсяУчетПоПодразделениям Экспорт;

#Если Клиент Тогда

Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	СтандартныеОтчеты.ЗаполнитьДанныеОтчета(ЭтотОбъект);
	
КонецПроцедуры

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	Результат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ВыводЗаголовкаОтчета(ЭтотОбъект, Результат);
	ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных);
	СтандартныеОтчеты.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных);
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	// Выполним дополнительную обработку Результата отчета
	ОбработкаРезультатаОтчета(Результат);
	
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(Результат, ПолучитьТекстЗаголовка(), Строка(глТекущийПользователь));
	
	Возврат;
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных) Экспорт
	
	Если ЗначениеЗаполнено(НачалоПериода) Тогда
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоДня(НачалоПериода));
	Иначе
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", Дата(1, 1, 1));
	КонецЕсли;
	Если ЗначениеЗаполнено(КонецПериода) Тогда
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(КонецПериода));
	Иначе
		ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", Дата(3999, 11, 1));
	КонецЕсли;
	
	ВнешниеНаборыДанных = Новый Структура;
	ВыборкаДанных = ПолучитьВыборку();
	ВнешниеНаборыДанных.Вставить("ТаблицаДанных", ВыборкаДанных);
	
	Поле = СхемаКомпоновкиДанных.НаборыДанных[0].Поля.Найти("СуммаИтого");
	Если Поле <> Неопределено Тогда
		Поле.Заголовок = "Итого "+Год(НачалоПериода)+" год";
	КонецЕсли;
	
	Поле = СхемаКомпоновкиДанных.НаборыДанных[0].Поля.Найти("СуммаПредыдущий");
	Если Поле <> Неопределено Тогда
		Поле.Заголовок = "Факт "+Год(НачалоДня(Дата(Год(НачалоПериода)-1,1,1)))+" года";
	КонецЕсли;
	
	Поле = СхемаКомпоновкиДанных.НаборыДанных[0].Поля.Найти("СуммаПредществующий");
	Если Поле <> Неопределено Тогда
		Поле.Заголовок = "Факт "+Год( НачалоДня(Дата(Год(НачалоПериода)-2,1,1)))+" года";
	КонецЕсли;
	
	//Предыдущий период
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПредыдущегоПериода", НачалоДня(Дата(Год(НачалоПериода)-1,1,1)));
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПредыдущегоПериода", КонецДня(Дата(Год(НачалоПериода)-1,12,31)));

	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПредществующегоПериода", НачалоДня(Дата(Год(НачалоПериода)-2,1,1)));
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПредществующегоПериода", КонецДня(Дата(Год(НачалоПериода)-2,12,31)));

	
	Если мДеревоСтруктурныхЕдиниц.Колонки.Количество() = 0 Тогда 
		
		СписокСтруктурныхЕдиниц = Новый СписокЗначений;
		СписокСтруктурныхЕдиниц.ЗагрузитьЗначения(мСписокСтруктурныхЕдиниц.ВыгрузитьЗначения());
		
		Для Каждого СтрПодразделение Из мСписокПодразделений Цикл 
			СписокСтруктурныхЕдиниц.Добавить(СтрПодразделение.Значение);
		КонецЦикла;		
				
		мДеревоСтруктурныхЕдиниц = СтандартныеОтчеты.СформироватьДеревоСЕ(, СписокСтруктурныхЕдиниц);
		
	КонецЕсли;
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ФормируемыйБюджет", ФормируемыйБюджет);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ЕдиницаИзмерения", ЕдиницаИзмерения);
	
	ТиповыеОтчеты.ДобавитьОтборПоОрганизациямИПодразделениям(КомпоновщикНастроек, мДеревоСтруктурныхЕдиниц);
	
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	СтандартныеОтчеты.ИнициализацияОтчета(ЭтотОбъект);
	
КонецПроцедуры

Процедура ВыводПодписиОтчета(Результат)
	
	//Макет = ПолучитьОбщийМакет("ОбщиеОбластиСтандартногоОтчета");
	//ОбластьПодписи        = Макет.ПолучитьОбласть("ПодписиПроверил");
	//Результат.Вывести(ОбластьПодписи);
	
КонецПроцедуры

Процедура ВыводЗаголовкаОтчета(ОтчетОбъект, Результат)
	
	СтандартныеОтчеты.ВыводЗаголовкаСпециализированногоОтчета(ОтчетОбъект, Результат);
			
КонецПроцедуры

Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина) Экспорт 
		
	ЗаголовокОтчета = СокрЛП(ФормируемыйБюджет.Наименование) + СтандартныеОтчеты.ПолучитьПредставлениеПериода(ЭтотОбъект);

	Возврат ?(ОрганизацияВНачале, ЗаголовокОтчета, ЗаголовокОтчета + " " + СтандартныеОтчеты.ПолучитьТекстОрганизация(ЭтотОбъект));
		
КонецФункции

Функция ПолучитьВыборку ()
	
	Запрос = Новый Запрос;
         
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БюджетОбороты.Организация КАК Организация,
	|	БюджетОбороты.СтатьяБюджета КАК СтатьяБюджета,
	|	БюджетОбороты.Статус,
	|	БюджетОбороты.Регистратор КАК ДокументДвижения,
	|	ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) = 1
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаЯнварь,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) = 2
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаФевраль,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) = 3
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаМарт,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) = 4
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаАпрель,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) = 5
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаМай,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) = 6
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаИюнь,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) = 7
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаИюль,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) = 8
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаАвгуст,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) = 9
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаСентябрь,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) = 10
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаОктябрь,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) = 11
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаНоябрь,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) = 12
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаДекабрь,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) < 4
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаПервыйКвартал,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) > 3
|					И МЕСЯЦ(БюджетОбороты.Период) < 7
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаВторойКвартал,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) > 6
|					И МЕСЯЦ(БюджетОбороты.Период) < 10
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаТретийКвартал,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) > 9
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаЧетвертыйКвартал,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) < 7
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаЗаПолугодие,
|		ВЫБОР
|			КОГДА МЕСЯЦ(БюджетОбороты.Период) < 10
|				ТОГДА ВЫБОР
|						КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|							ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|						ИНАЧЕ ВЫБОР
|								КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|									ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|								ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|							КОНЕЦ
|					КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ КАК СуммаЗаДевятьМесяцев,
|		ВЫБОР
|			КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|				ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000000
|			ИНАЧЕ ВЫБОР
|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|						ТОГДА ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0) / 1000
|					ИНАЧЕ ЕСТЬNULL(БюджетОбороты.СуммаОборот, 0)
|				КОНЕЦ
|		КОНЕЦ КАК СуммаИтого,
|		0 КАК СуммаИтогоФакт,
|		0 КАК СуммаПредыдущий,
|		0 КАК СуммаПредществующий,
|		0 КАК Количество
|	ИЗ
|		РегистрНакопления.б_Бюджет.Обороты(&Началопериода, &КонецПериода, Регистратор, Бюджет = &ФормируемыйБюджет И СтатьяБюджета в ИЕРАРХИИ (&СтатьяБюджета)) КАК БюджетОбороты
|	
|	ОБЪЕДИНИТЬ ВСЕ
|	ВЫБРАТЬ
|		БюджетОборотыФакт.Организация КАК Организация,
|		БюджетОборотыФакт.СтатьяБюджета КАК СтатьяБюджета,
|		БюджетОборотыФакт.Статус,
|		БюджетОборотыФакт.Регистратор КАК ДокументДвижения,
|		0 КАК СуммаЯнварь,
|		0 КАК СуммаФевраль,	
|		0 КАК СуммаМарт,
|		0 КАК СуммаАпрель,
|		0 КАК СуммаМай,
|		0 КАК СуммаИюнь,
|		0 КАК СуммаИюль,
|		0 КАК СуммаАвгуст,
|		0 КАК СуммаСентябрь,					
|		0 КАК СуммаОктябрь,					
|		0 КАК СуммаНоябрь,					
|		0 КАК СуммаДекабрь,							
|		0 КАК СуммапервыйКвартал,					
|		0 КАК СуммаВторойКвартал,
|		0 КАК СуммаТретийКвартал,					
|		0 КАК СуммаЧетвертыйКвартал,
|		0 КАК СуммаЗаПолугодие,					
|		0 КАК СуммаЗаДевятьМесяцев,
|		0 КАК СуммаИтого,					
|		ВЫБОР
|			КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|				ТОГДА ЕСТЬNULL(БюджетОборотыФакт.СуммаОборот, 0) / 1000000
|			ИНАЧЕ ВЫБОР
|					КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|						ТОГДА ЕСТЬNULL(БюджетОборотыФакт.СуммаОборот, 0) / 1000
|					ИНАЧЕ ЕСТЬNULL(БюджетОборотыФакт.СуммаОборот, 0)
|				КОНЕЦ
|		КОНЕЦ КАК СуммаИтогоФакт,
|		0 КАК СуммаПредыдущий,
|		0 КАК СуммаПредществующий,
|		БюджетОборотыФакт.КоличествоОборот КАК Количество
|	ИЗ
|		РегистрНакопления.б_БюджетФакт.Обороты(&Началопериода, &КонецПериода, Регистратор, Бюджет = &ФормируемыйБюджет И СтатьяБюджета в ИЕРАРХИИ (&СтатьяБюджета)) КАК БюджетОборотыФакт
|	
|ОБЪЕДИНИТЬ ВСЕ
|ВЫБРАТЬ
|	БюджетФактОбороты.Организация КАК Организация,
|	БюджетФактОбороты.СтатьяБюджета КАК СтатьяБюджета,
|	БюджетФактОбороты.Статус,
|	БюджетФактОбороты.Регистратор КАК ДокументДвижения,
|		0 КАК СуммаЯнварь,
|		0 КАК СуммаФевраль,	
|		0 КАК СуммаМарт,
|		0 КАК СуммаАпрель,
|		0 КАК СуммаМай,
|		0 КАК СуммаИюнь,
|		0 КАК СуммаИюль,
|		0 КАК СуммаАвгуст,
|		0 КАК СуммаСентябрь,					
|		0 КАК СуммаОктябрь,					
|		0 КАК СуммаНоябрь,					
|		0 КАК СуммаДекабрь,							
|		0 КАК СуммапервыйКвартал,					
|		0 КАК СуммаВторойКвартал,
|		0 КАК СуммаТретийКвартал,					
|		0 КАК СуммаЧетвертыйКвартал,
|		0 КАК СуммаЗаПолугодие,					
|		0 КАК СуммаЗаДевятьМесяцев,
|		0 КАК СуммаИтого,					
|		0 КАК СуммаИтогоФакт,					
|	ВЫБОР
|		КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|			ТОГДА ЕСТЬNULL(БюджетФактОбороты.СуммаОборот, 0) / 1000000
|		ИНАЧЕ ВЫБОР
|				КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|					ТОГДА ЕСТЬNULL(БюджетФактОбороты.СуммаОборот, 0) / 1000
|				ИНАЧЕ ЕСТЬNULL(БюджетФактОбороты.СуммаОборот, 0)
|			КОНЕЦ
|	КОНЕЦ КАК СуммаПредыдущий,
|	0 КАК СуммаПредществующий,
|	БюджетФактОбороты.КоличествоОборот КАК Количество
|ИЗ РегистрНакопления.б_БюджетФакт.Обороты(&НачалоПредыдущегопериода, &КонецПредыдущегоПериода, Регистратор, Бюджет = &ФормируемыйБюджет И СтатьяБюджета в ИЕРАРХИИ (&СтатьяБюджета)) КАК БюджетФактОбороты
|
|	
|ОБЪЕДИНИТЬ ВСЕ
|ВЫБРАТЬ
|	БюджетФактОбороты_Доп.Организация КАК Организация,
|	БюджетФактОбороты_Доп.СтатьяБюджета КАК СтатьяБюджета,
|	БюджетФактОбороты_Доп.Статус,
|	БюджетФактОбороты_Доп.Регистратор КАК ДокументДвижения,
|		0 КАК СуммаЯнварь,
|		0 КАК СуммаФевраль,	
|		0 КАК СуммаМарт,
|		0 КАК СуммаАпрель,
|		0 КАК СуммаМай,
|		0 КАК СуммаИюнь,
|		0 КАК СуммаИюль,
|		0 КАК СуммаАвгуст,
|		0 КАК СуммаСентябрь,					
|		0 КАК СуммаОктябрь,					
|		0 КАК СуммаНоябрь,					
|		0 КАК СуммаДекабрь,							
|		0 КАК СуммапервыйКвартал,					
|		0 КАК СуммаВторойКвартал,
|		0 КАК СуммаТретийКвартал,					
|		0 КАК СуммаЧетвертыйКвартал,
|		0 КАК СуммаЗаПолугодие,					
|		0 КАК СуммаЗаДевятьМесяцев,
|		0 КАК СуммаИтого,					
|	0 КАК СуммаИтогоФакт,					
|	0 КАК СуммаПредыдущий,
|	ВЫБОР
|		КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000000)
|			ТОГДА ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0) / 1000000
|		ИНАЧЕ ВЫБОР
|				КОГДА &ЕдиницаИзмерения = ЗНАЧЕНИЕ(Перечисление.ПорядкиОкругленияОтчетности.ОКР1000)
|					ТОГДА ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0) / 1000
|				ИНАЧЕ ЕСТЬNULL(БюджетФактОбороты_Доп.СуммаОборот, 0)
|			КОНЕЦ
|	КОНЕЦ КАК СуммаПредществующий,
|	БюджетФактОбороты_Доп.КоличествоОборот КАК Количество
|ИЗ РегистрНакопления.б_БюджетФакт.Обороты(&НачалоПредществующегоПериода, &КонецПредществующегоПериода, Регистратор, Бюджет = &ФормируемыйБюджет И СтатьяБюджета в ИЕРАРХИИ (&СтатьяБюджета)) КАК БюджетФактОбороты_Доп
|";

	Запрос.УстановитьПараметр("ЕдиницаИзмерения",ЕдиницаИзмерения);
	Запрос.УстановитьПараметр("ФормируемыйБюджет",ФормируемыйБюджет);
	Запрос.УстановитьПараметр("СтатьяБюджета",СтатьяБюджета);
	Запрос.УстановитьПараметр("НачалоПериода",НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("НачалоПредыдущегопериода", НачалоДня(Дата(Год(НачалоПериода)-1,1,1)));
	Запрос.УстановитьПараметр("КонецПредыдущегоПериода",КонецДня(Дата(Год(НачалоПериода)-1,12,31)));
	Запрос.УстановитьПараметр("НачалоПредществующегоПериода",НачалоДня(Дата(Год(НачалоПериода)-2,1,1)));
	Запрос.УстановитьПараметр("КонецПредществующегоПериода", КонецДня(Дата(Год(НачалоПериода)-2,12,31)));
	
	Возврат Запрос.Выполнить();


КонецФункции

Процедура ОбработкаРезультатаОтчета(Результат)
	
	ТиповыеОтчеты.ОбработкаРезультатаОтчета(ЭтотОбъект, Результат);

КонецПроцедуры

// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	//ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	ЗаполнитьНачальныеНастройки();
	
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт
	
	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	
	СтруктураНастроек.Вставить("мСписокПодразделений", мСписокПодразделений);
	СтруктураНастроек.Вставить("мСписокСтруктурныхЕдиниц", мСписокСтруктурныхЕдиниц);
	СтруктураНастроек.Вставить("мДеревоСтруктурныхЕдиниц", мДеревоСтруктурныхЕдиниц);
	
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);

КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры


Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли
мСписокИсточниковФинансирования = Новый СписокЗначений;
мСписокСтруктурныхЕдиниц = Новый СписокЗначений;
мСписокПодразделений = Новый СписокЗначений;
мДеревоСтруктурныхЕдиниц = Новый ДеревоЗначений;

ВедётсяУчетПоПодразделениям = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений();

РежимРасшифровки = Ложь;