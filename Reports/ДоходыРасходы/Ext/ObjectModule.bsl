Перем мСписокСтруктурныхЕдиниц Экспорт;
Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;
Перем СписокСчетовВозвратов;
Перем ПромежуточныеДанные Экспорт;


#Если Клиент Тогда

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	// Проверим заполнение обязательных реквизитов
	Если ПроверитьЗаполнениеОбязательныхРеквизитов() Тогда
		Возврат;
	КонецЕсли;
	
	Результат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ВыводЗаголовкаОтчета(ЭтотОбъект, Результат);
	ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных);
	ОтчетыДляРуководителя.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных);
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	                               	
	// Выполним дополнительную обработку Результата отчета
	ОбработкаРезультатаОтчета(Результат);
	
	Возврат;
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных) Экспорт
	
	ВнешниеНаборыДанных = Новый Структура;
	ВыборкаДанных = ПолучитьВыборку();
	ВнешниеНаборыДанных.Вставить("ТаблицаДанных", ВыборкаДанных);

	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "Периодичность", Интервал);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоПериода);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(КонецПериода));
	
	Если ЗначениеЗаполнено(мСписокСтруктурныхЕдиниц) Тогда
		ТиповыеОтчеты.ДобавитьОтбор(КомпоновщикНастроек, "Организация", мСписокСтруктурныхЕдиниц, ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
		
	ТипДополнения = ОтчетыДляРуководителя.ПолучитьТипДополненияПоИнтервалу(Интервал);
		
	Для каждого ЭлементСтруктуры Из КомпоновщикНастроек.Настройки.Структура Цикл
		Если ТипЗнч(ЭлементСтруктуры) = Тип("ДиаграммаКомпоновкиДанных") Тогда
			ЭлементГруппировок = ЭлементСтруктуры.Точки;
			Для каждого Группировка Из ЭлементГруппировок Цикл
				ОтчетыДляРуководителя.УстановитьДополнениеПоляГруппировки(Группировка, ТипДополнения);
			КонецЦикла; 
		КонецЕсли;	
	КонецЦикла;
	
	ПромежуточныеДанные = ОтчетыДляРуководителя.ПолучитьОписаниеТаблицыПромежуточныеДанные();
	
	Выборка = ВыборкаДанных.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Знак <> Null Тогда 			
			НоваяСтрока = ПромежуточныеДанные.Добавить();
			НоваяСтрока.Знак              = Выборка.Знак;
			НоваяСтрока.Счет              = Выборка.СчетДТ;
			НоваяСтрока.КорСчет           = Выборка.СчетКТ;
			НоваяСтрока.Сумма             = Выборка.Сумма;
			НоваяСтрока.Период            = Выборка.Период;
			Если Выборка.Вид = "Доходы без НДС" И СписокСчетовВозвратов.НайтиПоЗначению(Выборка.СчетДТ) = Неопределено Тогда
				НоваяСтрока.СтрокаРасшифровки = "Оборот Кт " + Выборка.СчетДТ + " """ + Выборка.СчетДТ.Наименование + """ Дт " + Выборка.СчетКТ + " """ + Выборка.СчетКТ.Наименование + """";
			Иначе
				НоваяСтрока.СтрокаРасшифровки = "Оборот Дт " + Выборка.СчетДТ + " """ + Выборка.СчетДТ.Наименование + """ Кт " + Выборка.СчетКТ + " """ + Выборка.СчетКТ.Наименование + """";
			КонецЕсли;		
			НоваяСтрока.Субконто1         = Выборка.Вид; 		
			НоваяСтрока.Субконто2         = Выборка.Аналитика; 		
		КонецЕсли; 		
	КонецЦикла;

	ТиповыеОтчеты.ДоработатьТиповойОтчетПередВыводом(ЭтотОбъект);
	
КонецПроцедуры

Процедура ВыводЗаголовкаОтчета(ОтчетОбъект, Результат)
	
	МакетЗаголовок = ПолучитьОбщийМакет("ЗаголовокОтчета");
	ОбластьЗаголовок = МакетЗаголовок.ПолучитьОбласть("Заголовок");
	
	ОбластьЗаголовок.Параметры.ЗаголовокОтчета = ПолучитьТекстЗаголовка();

	Результат.Вывести(ОбластьЗаголовок);
			
КонецПроцедуры

Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина) Экспорт 
	
	ЗаголовокОтчета = "Доходы и расходы (прибыль/убыток)";
	
    Возврат ТиповыеОтчеты.ПолучитьТекстЗаголовка(ЭтотОбъект, ЗаголовокОтчета, ОрганизацияВНачале);

КонецФункции

Процедура ОбработкаРезультатаОтчета(Результат)
	
	ТиповыеОтчеты.ОбработкаРезультатаОтчета(ЭтотОбъект, Результат);

	Для Каждого Рисунок Из Результат.Рисунки Цикл
		Для Каждого Серия Из Рисунок.Объект.Серии Цикл
			Если Серия.Текст = "Доходы без НДС"
				ИЛИ Серия.Текст = "Расходы" Тогда
				Серия.Индикатор = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

Процедура УстановитьИнтервал() Экспорт
	
	ОтчетыДляРуководителя.УстановитьИнтервал(ЭтотОбъект);
	
КонецПроцедуры

Функция ПроверитьЗаполнениеОбязательныхРеквизитов()
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(НачалоПериода) ИЛИ Не ЗначениеЗаполнено(КонецПериода) Тогда
		Сообщить("Не указан период формирования отчета", СтатусСообщения.Важное);
		Отказ = Истина;
	ИначеЕсли НачалоПериода > КонецПериода Тогда
		Сообщить("Дата начала периода не может быть больше даты конца периода", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Интервал) Тогда
		Сообщить("Не указан интервал", СтатусСообщения.Важное); 
		Отказ = Истина;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции
	
// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	
КонецПроцедуры
  
Функция ПолучитьВыборку() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетаДоходов.Счет КАК Счет
	|ПОМЕСТИТЬ СчетаДоходов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.ДоходОтРеализацииПродукцииИОказанияУслуг_) КАК Счет
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.ВозвратПроданнойПродукции)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.СкидкиСЦеныИПродаж)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.ДоходыОтФинансирования)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПрочиеДоходы_)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.ДоходыСвязанныеСПрекращаемойДеятельностью_)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.типовой.ДоляПрибылиОрганизацийУчитываемыхПоМетодуДолевогоУчастия)) КАК СчетаДоходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетаРасходов.Счет КАК Счет
	|ПОМЕСТИТЬ СчетаРасходов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.СебестоимостьРеализованнойПродукцииИОказанныхУслуг_) КАК Счет
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.РасходыПоРеализацииПродукцииИОказаниюУслуг_)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.АдминистративныеРасходы_)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.РасходыНаФинансирование)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.типовой.ПрочиеРасходы_)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.РасходыСвязанныеСПрекращаемойДеятельностью_)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.ДоляВУбыткеОрганизацийУчитываемыхМетодомДолевогоУчастия)
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланСчетов.Типовой.РасходыПоКорпоративномуПодоходномуНалогу_)) КАК СчетаРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""+"" КАК Знак,
	|	Расходы.СуммаОборотДт - Расходы.СуммаОборотКт КАК Сумма,
	|	Расходы.Период КАК Период,
	|	Расходы.Счет КАК Счет,
	|	""Расходы"" КАК Вид,
	|	Расходы.КорСчет,
	|	""Дт"" КАК БухВидРесурса,
	|	ВЫРАЗИТЬ(Расходы.Субконто1 КАК Справочник.СтатьиЗатрат) КАК Аналитика
	|ПОМЕСТИТЬ Расходы
	|ИЗ
	|	РегистрБухгалтерии.Типовой.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Месяц,
	|			Счет В ИЕРАРХИИ
	|				(ВЫБРАТЬ
	|					СчетаРасходов.Счет
	|				ИЗ
	|					СчетаРасходов КАК СчетаРасходов),
	|			,
	|			Организация В (&Организация),
	|			НЕ КорСчет В (&СчетаЗакрытия),
	|			) КАК Расходы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""+"" КАК Знак,
	|	Доходы.СуммаОборотКт - Доходы.СуммаОборотДт КАК Сумма,
	|	Доходы.Период КАК Период,
	|	Доходы.Счет КАК Счет,
	|	""Доходы без НДС"" КАК Вид,
	|	Доходы.КорСчет,
	|	""Кт"" КАК БухВидРесурса,
	|	ВЫРАЗИТЬ(Доходы.Субконто1 КАК Справочник.Доходы) КАК Аналитика
	|ПОМЕСТИТЬ Доходы
	|ИЗ
	|	РегистрБухгалтерии.Типовой.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Месяц,
	|			Счет В ИЕРАРХИИ
	|				(ВЫБРАТЬ
	|					СчетаДоходов.Счет
	|				ИЗ
	|					СчетаДоходов КАК СчетаДоходов),
	|			,
	|			Организация В (&Организация),
	|			НЕ КорСчет В (&СчетаЗакрытия),
	|			) КАК Доходы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Расходы.Знак,
	|	Расходы.Сумма,
	|	Расходы.Период,
	|	Расходы.Счет КАК СчетДТ,
	|	""Расходы"" КАК Вид,
	|	Расходы.КорСчет КАК СчетКТ,
	|	Расходы.БухВидРесурса,
	|	Расходы.Аналитика
	|ИЗ
	|	Расходы КАК Расходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Доходы.Знак,
	|	Доходы.Сумма,
	|	Доходы.Период,
	|	Доходы.Счет,
	|	""Доходы без НДС"",
	|	Доходы.КорСчет,
	|	Доходы.БухВидРесурса,
	|	Доходы.Аналитика
	|ИЗ
	|	Доходы КАК Доходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	ВложенныйЗапрос.Сумма,
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.Счет,
	|	ВложенныйЗапрос.Вид,
	|	"""",
	|	NULL,
	|	NULL
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСТЬNULL(ДоходыСвернуто.Сумма, 0) - ЕСТЬNULL(РасходыСвернуто.Сумма, 0) КАК Сумма,
	|		ВЫБОР
	|			КОГДА ДоходыСвернуто.Период ЕСТЬ NULL
	|				ТОГДА РасходыСвернуто.Период
	|			ИНАЧЕ ДоходыСвернуто.Период
	|		КОНЕЦ КАК Период,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ДоходыСвернуто.Сумма, 0) - ЕСТЬNULL(РасходыСвернуто.Сумма, 0) >= 0
	|				ТОГДА ""Прибыль""
	|			ИНАЧЕ ""Убыток""
	|		КОНЕЦ КАК Вид,
	|		NULL КАК Счет
	|	ИЗ
	|		(ВЫБРАТЬ
	|			СУММА(Доходы.Сумма) КАК Сумма,
	|			Доходы.Период КАК Период
	|		ИЗ
	|			Доходы КАК Доходы
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Доходы.Период) КАК ДоходыСвернуто
	|			ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				СУММА(Расходы.Сумма) КАК Сумма,
	|				Расходы.Период КАК Период
	|			ИЗ
	|				Расходы КАК Расходы
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Расходы.Период) КАК РасходыСвернуто
	|			ПО ДоходыСвернуто.Период = РасходыСвернуто.Период) КАК ВложенныйЗапрос";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);	
	Запрос.УстановитьПараметр("КонецПериода" , КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Организация"  , мСписокСтруктурныхЕдиниц);
	
	СписокСчетовВозвратов = Новый СписокЗначений;
	СписокСчетовВозвратов.Добавить(ПланыСчетов.Типовой.ВозвратПроданнойПродукции);
	СписокСчетовВозвратов.Добавить(ПланыСчетов.Типовой.СкидкиСЦеныИПродаж);
	Запрос.УстановитьПараметр("СписокСчетовВозвратов"  , СписокСчетовВозвратов);
	
	СписокЗакрытияИтогов = Новый СписокЗначений;
	СписокЗакрытияИтогов.Добавить(ПланыСчетов.Типовой.НераспределеннаяПрибыльНепокрытыйУбытокОтчетногоГода);
	СписокЗакрытияИтогов.Добавить(ПланыСчетов.Типовой.ИтоговаяПрибыльИтоговыйУбыток);
	Запрос.УстановитьПараметр("СчетаЗакрытия"  , СписокЗакрытияИтогов);
	

	Если Не ЗначениеЗаполнено(мСписокСтруктурныхЕдиниц) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация В(&Организация)", "");
	КонецЕсли;
	Если Интервал = 6 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "День");
	ИначеЕсли Интервал = 7 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Неделя");
	ИначеЕсли Интервал = 8 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Декада");
	ИначеЕсли Интервал = 10 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Квартал");
	ИначеЕсли Интервал = 11 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Полугодие");
	ИначеЕсли Интервал = 12 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Месяц", "Год");
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
Конецфункции
  
Процедура СохранитьНастройку() Экспорт
	
	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	
	Если СохраненнаяНастройка = Неопределено Тогда
		СсылкаНаОбъект = ТиповыеОтчеты.ПолучитьИдентификаторОбъекта(ЭтотОбъект);
		Настройка = Справочники.СохраненныеНастройки.СоздатьЭлемент();
		Настройка.НастраиваемыйОбъект = СсылкаНаОбъект;
		Настройка.ТипНастройки = Перечисления.ТипыНастроек.НастройкиПользователяНастройкиОтчета;
		Настройка.Наименование = "НастройкиПользователяНастройкиОтчета";
		Настройка.ИспользоватьПриОткрытии = Истина;
		НовыйПользователь = Настройка.Пользователи.Добавить();
		НовыйПользователь.Пользователь = глЗначениеПеременной("глТекущийПользователь");
		Настройка.Записать();
		
		СохраненнаяНастройка = Настройка.Ссылка;
	КонецЕсли;
	
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	
	// добавляем в настройки компоновщика ОтрицательноеКрасным
	УсловноеОформление = КомпоновщикНастроек.Настройки.УсловноеОформление;
	ВыделятьОтрицательные = Неопределено;
	Для Каждого ЭлементОформления Из УсловноеОформление.Элементы Цикл
		ПараметрВыделятьОтрицательные = ЭлементОформления.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыделятьОтрицательные"));
		Если ПараметрВыделятьОтрицательные.Использование Тогда
			ВыделятьОтрицательные = ПараметрВыделятьОтрицательные;
			ЭлементОформленияВыделятьОтрицательные = ЭлементОформления;
		КонецЕсли;
	КонецЦикла;
	Если ВыделятьОтрицательные <> Неопределено Тогда
		СохраненноеУсловноеОформление = СтруктураПараметров.НастройкиКомпоновщика.УсловноеОформление;
		ЕстьНастройка = Ложь;
		Для Каждого ЭлементОформления Из СохраненноеУсловноеОформление.Элементы Цикл
			ПараметрВыделятьОтрицательные = ЭлементОформления.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыделятьОтрицательные"));
			Если ПараметрВыделятьОтрицательные.Использование Тогда
				ЕстьНастройка = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЕстьНастройка Тогда
			НовоеОформление = СохраненноеУсловноеОформление.Элементы.Добавить();
			НовоеОформление.Использование = ЭлементОформленияВыделятьОтрицательные.Использование;
			НовоеОформление.Представление = ЭлементОформленияВыделятьОтрицательные.Представление;
			НовыйПараметр = НовоеОформление.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыделятьОтрицательные"));
			НовыйПараметр.Использование = ВыделятьОтрицательные.Использование;
			НовыйПараметр.Значение      = ВыделятьОтрицательные.Значение;
		КонецЕсли;
	КонецЕсли;
	
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	СтандартныеОтчеты.ИнициализацияОтчета(ЭтотОбъект);
	
КонецПроцедуры

Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли
мСписокСтруктурныхЕдиниц = Новый СписокЗначений;