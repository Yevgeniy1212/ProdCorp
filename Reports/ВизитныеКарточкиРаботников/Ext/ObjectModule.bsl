
#Если Клиент Тогда

// Макет отчета
Перем мМакет;

// Структура, содержащая связь полей быстрого отбора с путями к данным отбора Построителя
Перем мСтруктураСвязиЭлементовСДанными Экспорт;

// Структура, содержащая виды контактной информации и признак того, что она используется
Перем мСтруктураИспользованияВидовКИ Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура меняет видимость заголовка поля табличного документа
// 
// Параметры
//  Таб - табличный документ
//
// Возвращаемые значения
//  НЕТ
Процедура ИзменитьВидимостьЗаголовка(Таб) Экспорт

	ОбластьВидимости = Таб.Область(1,,0,);
	ОбластьВидимости.Видимость = ПоказыватьЗаголовок;

КонецПроцедуры

Процедура ЗаполнитьТаблицуВидовКИ() Экспорт
	
	СтрокаВКИ = ЭтотОбъект.ВидыКонтактнойИнформации.Добавить();
	СтрокаВКИ.ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Телефон;	
	
	СтрокаВКИ = ЭтотОбъект.ВидыКонтактнойИнформации.Добавить();
	СтрокаВКИ.ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Телефон;	
	
	СтрокаВКИ = ЭтотОбъект.ВидыКонтактнойИнформации.Добавить();
	СтрокаВКИ.ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Телефон;	
	
	СтрокаВКИ = ЭтотОбъект.ВидыКонтактнойИнформации.Добавить();
	СтрокаВКИ.ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Адрес;	
	
	СтрокаВКИ = ЭтотОбъект.ВидыКонтактнойИнформации.Добавить();
	СтрокаВКИ.ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;	

	СтрокаВКИ = ЭтотОбъект.ВидыКонтактнойИнформации.Добавить();
	СтрокаВКИ.ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.ВебСтраница;
КонецПроцедуры

// Процедура передает построителю отчета запрос
//
// Параметры
//  НЕТ
//
// Возвращаемое значение
//  НЕТ
//
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	МассивОтбора = Новый Массив;

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ	
	|	РаботникиСрезПоследних.ФизЛицо КАК ФизЛицо,
	|	РаботникиСрезПоследних.Должность КАК Должность,
	|	РаботникиСрезПоследних.Подразделение КАК Подразделение,	
	|	РаботникиСрезПоследних.Должность.Наименование КАК ДолжностьНаименование,
	|	РаботникиСрезПоследних.Подразделение.Наименование ПодразделениеНаименование,
	|	РаботникиСрезПоследних.ФизЛицо.ОсновноеИзображение КАК ОсновноеИзображение,
	|	РаботникиСрезПоследних.ФизЛицо.Наименование КАК ФизЛицоНаименование,
	|	ФИОФизЛицСрезПоследних.Фамилия КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация1.Представление КАК СТРОКА(30)) КАК Телефон1,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация2.Представление КАК СТРОКА(30)) КАК Телефон2,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация3.Представление КАК СТРОКА(30)) КАК Телефон3,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация4.Представление КАК СТРОКА(1000)) КАК Адрес,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация5.Представление КАК СТРОКА(100)) КАК АдресЭлектроннойПочты,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация6.Представление КАК СТРОКА(100)) КАК ВебСтраница
	|ИЗ
	|	РегистрСведений.Работники.СрезПоследних(&ДатаНач) КАК РаботникиСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаНач) КАК ФИОФизЛицСрезПоследних
	|		ПО РаботникиСрезПоследних.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация1
	|		ПО
	|			РаботникиСрезПоследних.ФизЛицо = КонтактнаяИнформация1.Объект И
	|			&ИспльзуетсяТелефон1 = ИСТИНА И
	|			&ВидТелефон1 = КонтактнаяИнформация1.Вид И
	|			&Телефон = КонтактнаяИнформация1.Тип
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация2
	|		ПО
	|			РаботникиСрезПоследних.ФизЛицо = КонтактнаяИнформация2.Объект И
	|			&ИспльзуетсяТелефон2 = ИСТИНА И
	|			&ВидТелефон2 = КонтактнаяИнформация2.Вид И
	|			&Телефон = КонтактнаяИнформация2.Тип
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация3
	|		ПО
	|			РаботникиСрезПоследних.ФизЛицо = КонтактнаяИнформация3.Объект И
	|			&ИспльзуетсяТелефон3 = ИСТИНА И
	|			&ВидТелефон3 = КонтактнаяИнформация3.Вид И
	|			&Телефон = КонтактнаяИнформация3.Тип
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация4
	|		ПО
	|			РаботникиСрезПоследних.ФизЛицо = КонтактнаяИнформация4.Объект И
	|			&ИспльзуетсяАдрес = ИСТИНА И
	|			&ВидАдрес = КонтактнаяИнформация4.Вид И
	|			&Адрес = КонтактнаяИнформация4.Тип
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация5
	|		ПО
	|			РаботникиСрезПоследних.ФизЛицо = КонтактнаяИнформация5.Объект И
	|			&ИспльзуетсяАдресЭлектроннойПочты = ИСТИНА И
	|			&ВидАдресЭлектроннойПочты = КонтактнаяИнформация5.Вид И
	|			&АдресЭлектроннойПочты = КонтактнаяИнформация5.Тип
	
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация6
	|		ПО
	|			РаботникиСрезПоследних.ФизЛицо = КонтактнаяИнформация6.Объект И
	|			&ИспльзуетсяВебСтраница = ИСТИНА И
	|			&ВидВебСтраница = КонтактнаяИнформация6.Вид И
	|			&ВебСтраница = КонтактнаяИнформация6.Тип	
	|
	|ГДЕ
	|	РаботникиСрезПоследних.ЗанимаемыхСтавок > 0
	|	
	|ИТОГИ ПО
	|	Подразделение,
	|	Должность
	|
	|{ВЫБРАТЬ
	|	ФизЛицо
	|	Фамилия,
	|	Имя,	
	|	Отчество,
	|	ПодразделениеНаименование,
	|	ДолжностьНаименование,
	|	ОсновноеИзображение,
	|	Телефон1,
	|	Телефон2,
	|	Телефон3,
	|	Адрес,
	|	АдресЭлектроннойПочты,
	|	ВебСтраница
	|}	
	|{УПОРЯДОЧИТЬ ПО	
	|	ПодразделениеНаименование,
	|	ДолжностьНаименование,
	|	ФизЛицоНаименование
	|}
	|
	|
	|{ГДЕ
	|	Подразделение,
	|	Должность,
	|	РаботникиСрезПоследних.ФизЛицо
	|}	
	|{ИТОГИ ПО
	|	Подразделение,
	|	Должность
	|}
	|";	 
	
	СтруктураПредставлениеПолей = Новый Структура("ПодразделениеНаименование,ДолжностьНаименование,Фамилия,Имя,Отчество,ОсновноеИзображение"
	+ ",Телефон1,Телефон2,Телефон3,Адрес,АдресЭлектроннойПочты,ВебСтраница",
		"Подразделение",
		"Должность",
		"Фамилия",
		"Имя",
		"Отчество",
		"ОсновноеИзображение",
		"Телефон1",
		"Телефон2",
		"Телефон3",
		"Адрес",
		"АдресЭлектроннойПочты",
		"ВебСтраница",
		"ОсновноеИзображение");

	ПостроительОтчета = Новый ПостроительОтчета;
	
		
	ПостроительОтчета.Текст = ТекстЗапроса;
	
	ПостроительОтчета.ТекстЗаголовка = "Визитные карточки работников";	
	
	МассивОтбора.Добавить("Подразделение");
	МассивОтбора.Добавить("Должность");	
	МассивОтбора.Добавить("Физлицо");		
	
	УправлениеОтчетами.ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	
	
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
	// Установим имена быстрых отборов
	Если ПостроительОтчета.Отбор.Найти("Подразделение") = Неопределено Тогда
		ПостроительОтчета.Отбор.Добавить("Подразделение");
	КонецЕсли; 
	Если ПостроительОтчета.Отбор.Найти("Должность") = Неопределено Тогда
		ПостроительОтчета.Отбор.Добавить("Должность");
	КонецЕсли;
	Если ПостроительОтчета.Отбор.Найти("Физлицо") = Неопределено Тогда
		ПостроительОтчета.Отбор.Добавить("Физлицо");
	КонецЕсли;						
	
	УправлениеОтчетами.УпорядочитьПоляПостроителяОтчета(ПостроительОтчета);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ФОРМИРОВАНИЕ ПЕЧАТНОЙ ФОРМЫ ОТЧЕТА

// Вывод строки отчета (с проверкой необходимости этого вывода)
//
// Параметры:
//	Выборка       - выборка из результата отчета, которая обходится в процедуре
//	СтруктураПараметров - структура параметров, необходимых для вывода строки
//
Процедура ВывестиСтроку(Выборка, СтруктураПараметров, ТипЗаписиВыборки, ИмяГруппировки, НомерВизитки, НовыйРаботник, СтарыйРаботник)
	
	ТабДок = СтруктураПараметров.ТабДок;
	Если ТипЗаписиВыборки = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
		
		ОбластьВизитки = СтруктураПараметров.ОбластьВизитки;
		
		Если НомерВизитки = 1 Тогда
			НомерВизитки = 2;
		Иначе	
			НомерВизитки = 1;
			Если НовыйРаботник Тогда
				ТабДок.Вывести(СтруктураПараметров.ОбластьВизиткиОбщийОтступ, Выборка.Уровень());
			КонецЕсли;
		КонецЕсли; 							
				
		ОбластьВизитки = СтруктураПараметров.ОбластьВизитки;					
		
		Если НовыйРаботник Тогда
			
			// Очистка всех полей визитки перед выводом
			Для К=0 по ОбластьВизитки.Рисунки.Количество()-1 Цикл
				Если ОбластьВизитки.Рисунки[К].ТипРисунка = ТипРисункаТабличногоДокумента.Текст тогда
					ОбластьВизитки.Рисунки[К].Текст = "";
				КонецЕсли;
			КонецЦикла; 
						
		КонецЕсли;						
		
		// Заполнение только выбранных полей визитки
		ОбластьВизитки.Рисунки["Фамилия"].Текст = Выборка.Фамилия;
		ОбластьВизитки.Рисунки["ИмяОтчество"].Текст = ?(Выборка.Имя = NULL, "", Выборка.Имя)  + " "+ ?(Выборка.Отчество = NULL, "", Выборка.Отчество);
		ОбластьВизитки.Рисунки["Работники__Подразделение"].Текст = Выборка.ПодразделениеНаименование;
		ОбластьВизитки.Рисунки["Работники__Должность"].Текст = Выборка.ДолжностьНаименование;
		
		Если Выборка.ОсновноеИзображение <> Справочники.ХранилищеДополнительнойИнформации.ПустаяСсылка() Тогда
			ОбластьВизитки.Рисунки["Фотография"].Картинка = Выборка.ОсновноеИзображение.Хранилище.Получить();
		Иначе	
			ОбластьВизитки.Рисунки["Фотография"].Картинка = СтруктураПараметров.ПустаяКартинка;
		КонецЕсли; 
		
		ОбластьВизитки.Рисунки["Телефон1"].Текст = СокрЛП(Выборка.Телефон1);
		ОбластьВизитки.Рисунки["Телефон2"].Текст = СокрЛП(Выборка.Телефон2);	
		ОбластьВизитки.Рисунки["Телефон3"].Текст = СокрЛП(Выборка.Телефон3);
		ОбластьВизитки.Рисунки["АдресЭлектроннойПочты"].Текст = СокрЛП(Выборка.АдресЭлектроннойПочты);
		ОбластьВизитки.Рисунки["Адрес"].Текст = СокрЛП(Выборка.Адрес);
		ОбластьВизитки.Рисунки["ВебСтраница"].Текст = СокрЛП(Выборка.ВебСтраница);
		
		// Вывод разделителя между двумя визитками строки 
		Если НовыйРаботник Тогда
			ТабДок.Присоединить(ОбластьВизитки,Выборка.Уровень());
			
			Если НомерВизитки = 1 Тогда
				ТабДок.Присоединить(СтруктураПараметров.ОбластьРазделительВизиток, Выборка.Уровень());
			КонецЕсли;
		КонецЕсли;
		
	Иначе// Группировка
		
		УровеньЗаписи   = Выборка.Уровень();
		ОбластьСтрокаГруппировки = СтруктураПараметров.ОбластьСтрокаГруппировки;
		
		ЗначениеГруппировки = Выборка[ИмяГруппировки];
		Если НЕ ЗначениеЗаполнено(ЗначениеГруппировки) Тогда
			ЗначениеГруппировки = "<...>";
		КонецЕсли;
		
		ЗначениеРасшифровки = Выборка[ИмяГруппировки];
		
		ОбластьСтрокаГруппировки.Параметры.ЗначениеГруппировки = ?(ТипЗнч(ЗначениеГруппировки) = Тип("Строка"),СокрЛП(ЗначениеГруппировки),ЗначениеГруппировки);
		ОбластьСтрокаГруппировки.Параметры.Расшифровка = ЗначениеРасшифровки;
		
		ОбластьСтрокаГруппировки.Область().Отступ = УровеньЗаписи;
		ТабДок.Вывести(ОбластьСтрокаГруппировки);
		
		Если УровеньЗаписи = 0 Тогда
			ТабДок.Область(ТабДок.ВысотаТаблицы, 2, ТабДок.ВысотаТаблицы, ТабДок.ШиринаТаблицы).ЦветФона = ЦветаСтиля.ЦветФонаКнопки;
		Иначе
			ТабДок.Область(ТабДок.ВысотаТаблицы, 2, ТабДок.ВысотаТаблицы, ТабДок.ШиринаТаблицы).ЦветФона = ЦветаСтиля.ФонГруппировкиПромежуточногоУровня;
		КонецЕсли;
		
		НомерВизитки = 0;
		
	КонецЕсли;
	
КонецПроцедуры

// Обход выборки из результата запроса по группировкам для вывода строк отчета
//
// Параметры:
//
//	Выборка       - выборка из результата отчета, которая обходится в процедуре,
//	СтруктураПараметров - структура параметров, передеваемых в процедуру вывода
//	                строки отчета,
//	Номер         - число, номер обходимой группировки
//	НомерТочки    - число, номер точки диаграммы
//
Процедура ВывестиВыборку(Выборка, СтруктураПараметров, Номер, СтарыйРаботник = Null)

	ОбработкаПрерыванияПользователя();

	НомерВизитки = 0;
	СтарыйРаботник1 = СтарыйРаботник;
	
	// Берутся группировки все подряд 
	Пока Выборка.Следующий() Цикл		
		ВывестиСтроку(Выборка, СтруктураПараметров, Выборка.ТипЗаписи(), Выборка.Группировка(), НомерВизитки, НЕ(СтарыйРаботник1 = Выборка.ФизЛицо), СтарыйРаботник1);
		СтарыйРаботник1 = Выборка.ФизЛицо;
		ВывестиВыборку(Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам), СтруктураПараметров, Номер + 1, СтарыйРаботник1);
	КонецЦикла;

	// Если в строку вывели только одну визитку, то присоединим пустую визитку
    Если НомерВизитки = 1  Тогда
		ТабДок = СтруктураПараметров.ТабДок;
		ТабДок.Присоединить(СтруктураПараметров.ОбластьПустойВизитки, Выборка.Уровень());
	КонецЕсли; 
	
КонецПроцедуры // ВывестиВыборку()

// Формирует "шапку" отчета
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
Функция ЗаголовокОтчета(Отчет) 

	ДокументРезультат = Новый ТабличныйДокумент;
	Макет = мМакет;

	// Строки списков для шапки отчета
	СтрПоказатели = "";
	СтрГруппировки = "";
	СтрФильтры = "";

	Для Каждого Строка Из ПостроительОтчета.ИзмеренияСтроки цикл

		Если ПустаяСтрока(Строка.Имя) Тогда
			Предупреждение("Не указано имя группировки!", 60);
			Возврат ДокументРезультат;		
		КонецЕсли;		
		// Если не задано представление, берем его из имени
		Если ПустаяСтрока(Строка.Имя) Тогда
			Строка.ПредставлениеГруппировки = Строка.Имя;
		КонецЕсли;
		СтрГруппировки=СтрГруппировки + ", " + Строка.Имя;

	КонецЦикла;

	Для Каждого СтрокаПоказатели Из ПостроительОтчета.ДоступныеПоля Цикл
		// Строка для шапки отчета
		Если (Найти(СтрокаПоказатели.Имя,"Наименование") > 0) Или (СтрокаПоказатели.Имя = "ФизЛицо") Тогда
			Продолжить;
		КонецЕсли;
		СтрПоказатели = СтрПоказатели + ", " + СтрокаПоказатели.Имя;
	КонецЦикла;


	Для Каждого Строка Из ПостроительОтчета.Отбор Цикл

		Если ПустаяСтрока(Строка.Имя) Тогда
			Предупреждение("Не указано имя отбора!", 60);
			Возврат ДокументРезультат;
		КонецЕсли;
		
		Если Строка.Использование Тогда
			СтрФильтры=СтрФильтры+", "+ Строка.Имя + " " + Строка.ВидСравнения + " " + Строка.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
	СтрПоказатели  = Сред(СтрПоказатели,  2);
	СтрГруппировки = Сред(СтрГруппировки, 2);
	СтрФильтры     = Сред(СтрФильтры,     2);

	Для Сч = 1 По 3 Цикл

		Если Сч = 1 Тогда
			Префикс = "Верх";
		ИначеЕсли Сч = 2 Тогда
			// Если нет фильтров, не выводим
			Если НЕ ЗначениеЗаполнено(СтрФильтры) Тогда
				Продолжить;
			КонецЕсли;
			Префикс = "Середина";
		ИначеЕсли Сч = 3 Тогда
			Префикс = "Низ";
		КонецЕсли;

		// Вывод шапки отчета
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка" + Префикс);

		Если Префикс = "Верх" Тогда
			ОбластьШапка.Параметры.ЗаголовокОтчета = Отчет.Метаданные().Синоним;			
		ИначеЕсли Префикс = "Середина" Тогда
			ОбластьШапка.Параметры.Фильтры = "Отбор: " + СтрФильтры;
		ИначеЕсли Префикс = "Низ" Тогда
			ОбластьШапка.Параметры.Группировки = "Группировки: " + СтрГруппировки;
			ОбластьШапка.Параметры.Показатели = "Показатели: " + СтрПоказатели;
		КонецЕсли;

        ДокументРезультат.Вывести(ОбластьШапка);

	КонецЦикла;

	Возврат ДокументРезультат

КонецФункции

// Процедура заполняет ПолеТабличногоДокумента
//
// Параметры - Таб - ПолеТабличногоДокумента
Процедура СформироватьОтчет(Таб, ТолькоЗаголовок = Ложь) Экспорт
	
	мСтруктураИспользованияВидовКИ = Новый Структура("Телефон1,Телефон2,Телефон3,Адрес,АдресЭлектроннойПочты,ВебСтраница",
											 ЭтотОбъект.ВидыКонтактнойИнформации[0].Использование,ЭтотОбъект.ВидыКонтактнойИнформации[1].Использование,ЭтотОбъект.ВидыКонтактнойИнформации[2].Использование,
											 ЭтотОбъект.ВидыКонтактнойИнформации[3].Использование,ЭтотОбъект.ВидыКонтактнойИнформации[4].Использование,ЭтотОбъект.ВидыКонтактнойИнформации[5].Использование);

                                          	
	ПостроительОтчета.Параметры.Вставить("ДатаНач", ДатаНач);
	ПостроительОтчета.Параметры.Вставить("Телефон", Перечисления.ТипыКонтактнойИнформации.Телефон);
	ПостроительОтчета.Параметры.Вставить("Адрес", Перечисления.ТипыКонтактнойИнформации.Адрес);
	ПостроительОтчета.Параметры.Вставить("АдресЭлектроннойПочты", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	ПостроительОтчета.Параметры.Вставить("ВебСтраница", Перечисления.ТипыКонтактнойИнформации.ВебСтраница);
	
	ПостроительОтчета.Параметры.Вставить("ВидТелефон1", ЭтотОбъект.ВидыКонтактнойИнформации[0].ВидКонтактнойИнформации);
	ПостроительОтчета.Параметры.Вставить("ВидТелефон2", ЭтотОбъект.ВидыКонтактнойИнформации[1].ВидКонтактнойИнформации);
	ПостроительОтчета.Параметры.Вставить("ВидТелефон3", ЭтотОбъект.ВидыКонтактнойИнформации[2].ВидКонтактнойИнформации);
	ПостроительОтчета.Параметры.Вставить("ВидАдрес", ЭтотОбъект.ВидыКонтактнойИнформации[3].ВидКонтактнойИнформации);
	ПостроительОтчета.Параметры.Вставить("ВидАдресЭлектроннойПочты", ЭтотОбъект.ВидыКонтактнойИнформации[4].ВидКонтактнойИнформации);
	ПостроительОтчета.Параметры.Вставить("ВидВебСтраница", ЭтотОбъект.ВидыКонтактнойИнформации[5].ВидКонтактнойИнформации);
	
	ПостроительОтчета.Параметры.Вставить("ИспльзуетсяТелефон1", мСтруктураИспользованияВидовКИ.Телефон1);
	ПостроительОтчета.Параметры.Вставить("ИспльзуетсяТелефон2", мСтруктураИспользованияВидовКИ.Телефон2);
	ПостроительОтчета.Параметры.Вставить("ИспльзуетсяТелефон3", мСтруктураИспользованияВидовКИ.Телефон3);
	ПостроительОтчета.Параметры.Вставить("ИспльзуетсяАдрес", мСтруктураИспользованияВидовКИ.Адрес);
	ПостроительОтчета.Параметры.Вставить("ИспльзуетсяАдресЭлектроннойПочты", мСтруктураИспользованияВидовКИ.АдресЭлектроннойПочты);
	ПостроительОтчета.Параметры.Вставить("ИспльзуетсяВебСтраница", мСтруктураИспользованияВидовКИ.ВебСтраница);
	
	ПостроительОтчета.Выполнить();
	
	
	ТекстЗапроса = ПостроительОтчета.Текст;
	
	Таб.Очистить();
			
	ОбластьЗаголовка = ЗаголовокОтчета(ЭтотОбъект);
	ВысотаЗаголовка = ОбластьЗаголовка.ВысотаТаблицы;
	Таб.Вывести(ОбластьЗаголовка);
	Таб.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;	
	
	// Вывод таблицы данных
    СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ТабДок", Таб);
	СтруктураПараметров.Вставить("ОбластьСтрокаГруппировки", мМакет.ПолучитьОбласть("СтрокаГруппировки"));
	СтруктураПараметров.Вставить("ОбластьВизиткиОбщийОтступ", мМакет.ПолучитьОбласть("СтрокаВизитки | ОбщийОтступ"));
	СтруктураПараметров.Вставить("ОбластьВизитки", мМакет.ПолучитьОбласть("СтрокаВизитки | КолонкаВизитка"));
	СтруктураПараметров.Вставить("ОбластьПустойВизитки", мМакет.ПолучитьОбласть("СтрокаВизитки | КолонкаПустаяВизитка"));
	СтруктураПараметров.Вставить("ОбластьРазделительВизиток", мМакет.ПолучитьОбласть("СтрокаВизитки | КолонкаРазделительВизиток"));
	СтруктураПараметров.Вставить("ПустаяКартинка", Новый Картинка);
	
	РезультатЗапроса = ПостроительОтчета.Результат;
	
	Таб.НачатьАвтогруппировкуСтрок();
	
	ВывестиВыборку(РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам), СтруктураПараметров, 0);	
	
	Таб.ЗакончитьАвтогруппировкуСтрок();

	//Параметры документа
	Таб.Автомасштаб 			= 	Истина;
	Таб.ОриентацияСтраницы	 	= 	ОриентацияСтраницы.Ландшафт;
	Таб.Защита              	= 	Ложь;
	Таб.ТолькоПросмотр      	= 	Истина;

	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(Таб, "Визитные карточки работников", Строка(глТекущийПользователь));

КонецПроцедуры

// Определим значения переменных объекта
мМакет = ПолучитьМакет("Макет");
ПоказыватьЗаголовок = Истина;

#КонецЕсли