////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

#Если Клиент Тогда

// Список значений, имена отборов построителя отчета, которые существуют постоянно
Перем мСписокОтбора Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

//Функция возвращают строку-представление двух чисел
//
Функция ПолучитьСтрокуИзДвухЧисел(Число1,Число2)
	Если Число1 = Число2 И Цел(Число1) = Окр(Число1,2) Тогда
		Возврат ""+Формат(Число1, "ЧЦ=15");
	ИначеЕсли Число1=Число2 Тогда
		Возврат ОбщегоНазначения.ФорматСумм(Число1);
	ИначеЕсли Цел(Число1) = Окр(Число1,2) И Цел(Число2) = Окр(Число2,2) Тогда
		Возврат ""+Формат(Число1, "ЧЦ=15")+" - "+Формат(Число2, "ЧЦ=15");
	Иначе
		Возврат ""+ОбщегоНазначения.ФорматСумм(Число1)+" - "+ОбщегоНазначения.ФорматСумм(Число2);
	КонецЕсли;
КонецФункции	 

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Формирует отчет в соответствии с переданными параметрам
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//	ЕстьОшибки - флаг того, что при формировании произошли ошибки
//	ДатаФормирования - дата, на которую сформировать отчет
//	Организация - организация, по которой сформировать отчет
//
Процедура СформироватьОтчетПоПараметрам(ДокументРезультат, ЕстьОшибки, ДатаФормирования, Организация) Экспорт
	
	ДатаАктуальности = ДатаФормирования;
	ЗаполнитьНачальныеНастройки();
	ПостроительОтчета.Отбор.Организация.Значение = Организация;
	СформироватьОтчет(ДокументРезультат, ЕстьОшибки);
КонецПроцедуры

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//	ЕстьОшибки - флаг того, что при формировании произошли ошибки
//
Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки) Экспорт
	
	ДокументРезультат.Очистить();	

	Организация = ПостроительОтчета.Отбор.Организация.Значение;
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	НазваниеВалютыРегУчета = ВалютаРегламентированногоУчета.НаименованиеПолное;
	
	// Заполнение параметров для запроса построителя отчета
	ПостроительОтчета.Параметры.Вставить("НачалоГода",	НачалоГода(ДатаАктуальности));
	ПостроительОтчета.Параметры.Вставить("ОкончаниеГода",	КонецГода(ДатаАктуальности));
	ПостроительОтчета.Параметры.Вставить("ПоДням",	Перечисления.ВидыУчетаВремени.ПоДням);
	ПостроительОтчета.Параметры.Вставить("СменныйГрафик",	Перечисления.ВидыРабочихГрафиков.Сменный);
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности",ДатаАктуальности);
	ПостроительОтчета.Параметры.Вставить("Организация",ПостроительОтчета.Отбор.Организация.Значение); 
	КурсВалютыОтчета = ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаРегламентированногоУчета,ДатаАктуальности).Курс;
	ПостроительОтчета.Параметры.Вставить("КурсВалютыОтчета",	?(КурсВалютыОтчета = 0,1,КурсВалютыОтчета));
	ПостроительОтчета.Параметры.Вставить("ВидСтавкиМесячная",	Перечисления.ВидыТарифныхСтавок.Месячная);
	ПостроительОтчета.Параметры.Вставить("ВидСтавкиДневная",	Перечисления.ВидыТарифныхСтавок.Дневная);
	ПостроительОтчета.Параметры.Вставить("НадбавкаПроцентом", Перечисления.СпособыРасчетаОплатыТруда.Процентом);
	Для Каждого КатегорияРасчета Из Метаданные.Перечисления.КатегорииРасчетов.ЗначенияПеречисления Цикл
		ПостроительОтчета.Параметры.Вставить(КатегорияРасчета.Имя, Перечисления.КатегорииРасчетов[КатегорияРасчета.Имя]);
	КонецЦикла;	

	ПостроительОтчета.Выполнить();
	РезультатЗапроса = ПостроительОтчета.Результат;

	// Выберем ФИО ответственных лиц
	МассивВидовРуководителей = Новый Массив();
	МассивВидовРуководителей.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
	МассивВидовРуководителей.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидЛица",		  МассивВидовРуководителей);
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("Организация",      Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность.Представление КАК ДолжностьРуководителя,
	|	ВЫБОР 
	|		КОГДА (ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество) ЕСТЬ NULL  
	|			ТОГДА ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование 
	|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество 
	|	КОНЕЦ КАК ФИОРуководителя,
	|	ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				ОтветственноеЛицо В (&ВидЛица) 
	|				И СтруктурнаяЕдиница = &Организация) КАК ОтветственныеЛицаОрганизацийСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо";
	
	РезультатДляПодвала = Запрос.Выполнить();
	
	Макет = ПолучитьМакет("Макет");

	//Параметры документа
	ДокументРезультат.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ПолеСлева		   	  = 10;
	ДокументРезультат.ПолеСправа		  = 10;
	ДокументРезультат.ПолеСверху		  = 10;
	ДокументРезультат.ПолеСнизу 		  = 10;
	ДокументРезультат.Защита              = Ложь;
	ДокументРезультат.ТолькоПросмотр      = Истина; 
	
	ТаблицаНадбавок = Новый ТаблицаЗначений;
	ТаблицаНадбавок.Колонки.Добавить("ВидНадбавки");
	ТаблицаНадбавок.Колонки.Добавить("ВидНадбавкиКод");
	ТаблицаНадбавок.Колонки.Добавить("ВидНадбавкиПредставление");
	ТаблицаНадбавок.Колонки.Добавить("МинСумма");
	ТаблицаНадбавок.Колонки.Добавить("МаксСумма");
	ТаблицаНадбавок.Колонки.Добавить("УстановленнаяСумма");
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	Выборка.Следующий();
	// Данные, относящиеся к установленной тарифной ставке, выводим только в случае заполнения
	ВыводитьУстановленнуюТарифнуюСтавку = (Выборка.УстановленныйОсновнойТариф <> NULL) И (Выборка.УстановленныйОсновнойТариф <> 0);
	// Первый обход выборки: заполняем таблицу надбавок	
	Выборка.Сбросить();
	Пока Выборка.СледующийПоЗначениюПоля("ВидНадбавки") Цикл 
		Если Выборка.ВидНадбавки <> NULL Тогда
			Если ТаблицаНадбавок.Найти(Выборка.ВидНадбавки, "ВидНадбавки") = Неопределено Тогда
				СтрокаТЗ = ТаблицаНадбавок.Добавить();
				СтрокаТЗ.ВидНадбавки = Выборка.ВидНадбавки;
				СтрокаТЗ.ВидНадбавкиКод = Выборка.ВидНадбавкиКод;
				СтрокаТЗ.ВидНадбавкиПредставление = Выборка.ВидНадбавкиПредставление;
				СтрокаТЗ.МинСумма = 0;
				СтрокаТЗ.МаксСумма = 0;
				СтрокаТЗ.УстановленнаяСумма = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаНадбавок.Сортировать("ВидНадбавкиКод");
	
	КоличествоНадбавок = ТаблицаНадбавок.Количество();

	//Выводим шапку
	ОбластьШапкаДоНадбавок = Макет.ПолучитьОбласть("Шапка|ДоНадбавок");
	ОбластьШапкаДоНадбавок.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ОбластьШапкаДоНадбавок.Параметры.ДатаАктуальности = "на "+Формат(ДатаАктуальности,"ДФ='дд ММММ гггг'")+" года.";
	ДокументРезультат.Вывести(ОбластьШапкаДоНадбавок);

	ОбластьШапкаНадбавка = Макет.ПолучитьОбласть("Шапка|Надбавка");
	Для Н=0 по КоличествоНадбавок-1 цикл
		ДокументРезультат.Присоединить(ОбластьШапкаНадбавка);	
	КонецЦикла;	

	ОбластьШапкаПослеНадбавок = Макет.ПолучитьОбласть("Шапка|ПослеНадбавок");
	ДокументРезультат.Присоединить(ОбластьШапкаПослеНадбавок);

	// Выводим шапку листа
	НомерВерхнейСтрокиШапки = ДокументРезультат.ВысотаТаблицы+1;
	ОбластьДоНадбавок = Макет.ПолучитьОбласть("ШапкаЛиста|ДоНадбавок");
	
	// Убираем установленную тарифную ставку, если не нужна
	Если Не ВыводитьУстановленнуюТарифнуюСтавку Тогда
		ОбластьДоНадбавок.Область("ТарифнаяСтавка").Объединить();
		ОбластьДоНадбавок.Область("ТарифнаяСтавкаЗаМесяц").Объединить();
	КонецЕсли;
	ДокументРезультат.Вывести(ОбластьДоНадбавок);

	ОбластьНадбавка = Макет.ПолучитьОбласть("ШапкаЛиста|Надбавка");
	Для Н=0 по КоличествоНадбавок-1 цикл
		ОбластьНадбавка.Параметры.ИмяНадбавки = ТаблицаНадбавок[Н].ВидНадбавкиПредставление;
		ОбластьНадбавка.Параметры.ВидНадбавки = ТаблицаНадбавок[Н].ВидНадбавки;
		ОбластьНадбавка.Параметры.НомерКолонки = 7+Н;
		ДокументРезультат.Присоединить(ОбластьНадбавка);	
	КонецЦикла;	
	// Объединяем ячейки и пишем общий заголовок для надбавок 
	Если КоличествоНадбавок > 0 Тогда
		ОбластьШапкиНадбавок = ДокументРезультат.Область(НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+1,НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+КоличествоНадбавок*3);
		ОбластьШапкиНадбавок.Объединить();
		ОбластьШапкиНадбавок.Текст = "Надбавки";
	КонецЕсли;

	ОбластьПослеНадбавок = Макет.ПолучитьОбласть("ШапкаЛиста|ПослеНадбавок");
	Если Не ВыводитьУстановленнуюТарифнуюСтавку Тогда
		ОбластьПослеНадбавок.Область("Фонд").Объединить();
	КонецЕсли;
	ОбластьПослеНадбавок.Параметры.НомерКолонкиФонд = 7+КоличествоНадбавок;
	ОбластьПослеНадбавок.Параметры.НомерКолонкиПримечание = 7+КоличествоНадбавок+1;
	ДокументРезультат.Присоединить(ОбластьПослеНадбавок);
	
	// Шапку листа печатаем на каждой странице
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(НомерВерхнейСтрокиШапки,,НомерВерхнейСтрокиШапки+3);
	ДокументРезультат.ФиксацияСверху = ДокументРезультат.ВысотаТаблицы;
	ДокументРезультат.ФиксацияСлева = 3;
	
	// Области, составляющие тело отчета
	ОбластьШапкиПодразделенияДоНадбавок = Макет.ПолучитьОбласть("ШапкаПодразделенияОрганизации|ДоНадбавок");
	ОбластьШапкиПодразделенияПослеНадбавок = Макет.ПолучитьОбласть("ШапкаПодразделенияОрганизации|ПослеНадбавок");
	ОбластьШапкиПодразделенияНадбавка = Макет.ПолучитьОбласть("ШапкаПодразделенияОрганизации|Надбавка");

	ОбластьШапкиИерархииПодразделенияДоНадбавок = Макет.ПолучитьОбласть("ШапкаИерархииПодразделенияОрганизации|ДоНадбавок");
	ОбластьШапкиИерархииПодразделенияПослеНадбавок = Макет.ПолучитьОбласть("ШапкаИерархииПодразделенияОрганизации|ПослеНадбавок");
	ОбластьШапкиИерархииПодразделенияНадбавка = Макет.ПолучитьОбласть("ШапкаИерархииПодразделенияОрганизации|Надбавка");
	
	ОбластьСтрокаДоНадбавок = Макет.ПолучитьОбласть("Строка|ДоНадбавок");
	ОбластьСтрокаНадбавка = Макет.ПолучитьОбласть("Строка|Надбавка");
	ОбластьСтрокаПослеНадбавок = Макет.ПолучитьОбласть("Строка|ПослеНадбавок");
	
	ОбластьУстановленнаяСтрокаДоНадбавок = Макет.ПолучитьОбласть("УстановленнаяСтрока|ДоНадбавок");
	ОбластьУстановленнаяСтрокаНадбавка = Макет.ПолучитьОбласть("УстановленнаяСтрока|Надбавка");
	ОбластьУстановленнаяСтрокаПослеНадбавок = Макет.ПолучитьОбласть("УстановленнаяСтрока|ПослеНадбавок");

	//Подготовим данные для шапки документа
	ВсегоСтавокОрганизации = 0;
	СуммаМинимальныхТарифныхСтавокОрганизации = 0;
	СуммаМаксимальныхТарифныхСтавокОрганизации = 0;
	СуммаУстановленныхТарифныхСтавокОрганизации = 0;
	
	// Вспомогательная таблица
	ТаблицаСуммНадбавок = Новый ТаблицаЗначений;
	ТаблицаСуммНадбавок.Колонки.Добавить("ВидНадбавки");
	ТаблицаСуммНадбавок.Колонки.Добавить("МинСумма");
	ТаблицаСуммНадбавок.Колонки.Добавить("МаксСумма");
	ТаблицаСуммНадбавок.Колонки.Добавить("УстановленнаяСумма");
	ТаблицаСуммНадбавок.Колонки.Добавить("Размер");
	ТаблицаСуммНадбавок.Колонки.Добавить("СпособРасчета");

	// Структура для поиска итогов по иерархии
	СтруктураПоиска = Новый Структура("ПодразделениеОрганизации, КоличествоДетальныхЗаписей");
	
	// соответствие для сохранения ссылки на подразделения, которое завершает группу по иерархии
	СоответствиеПоследниеВГруппеПоИерархииПодразделения = Новый Соответствие;
	
	// Вывод строк штатного расписания
	НомерСтроки = 0;
	ВыборкаИтогов = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаИтогов.Следующий();
	ВыборкаПодразделений = ВыборкаИтогов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ПолнаяВыборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока ВыборкаПодразделений.Следующий() Цикл

		// Шапка подразделения
		Если ВыборкаПодразделений.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
			// иерархические группы выводим курсивом
			ВрмОбластьШапкиПодразделенияДоНадбавок 		= ОбластьШапкиИерархииПодразделенияДоНадбавок;
			ВрмОбластьШапкиПодразделенияНадбавка		= ОбластьШапкиИерархииПодразделенияНадбавка;
			ВрмОбластьШапкиПодразделенияПослеНадбавок 	= ОбластьШапкиИерархииПодразделенияПослеНадбавок;
		Иначе
			// обычные группировки подразделений (неиерархические)
			ВрмОбластьШапкиПодразделенияДоНадбавок 		= ОбластьШапкиПодразделенияДоНадбавок;
			ВрмОбластьШапкиПодразделенияНадбавка        = ОбластьШапкиПодразделенияНадбавка;
			ВрмОбластьШапкиПодразделенияПослеНадбавок	= ОбластьШапкиПодразделенияПослеНадбавок;
		КонецЕсли;
		ВрмОбластьШапкиПодразделенияДоНадбавок.Параметры.Заполнить(ВыборкаПодразделений);
		
		КоличествоСтавок = 0;
		МинОсновнойТариф = 0;
		МаксОсновнойТариф = 0;
		УстановленныйОсновнойТариф = 0;
		МинФонд = 0;
		МаксФонд = 0;
		УстановленныйФонд = 0;
		
		// Подсчитаем фонд оплаты по подразделению по каждому виду надбавки
		ТаблицаСуммНадбавок.Очистить();
		
		// Для расчета фонда оплаты с учетом иерархии позиционируемся на строке с итогами по иерархии
		ПоследнееВГруппеПоИерархииПодразделение = Неопределено;
		КоличествоДетальныхЗаписей = ВыборкаПодразделений.КоличествоДетальныхЗаписей;
		СтруктураПоиска.ПодразделениеОрганизации = ВыборкаПодразделений.ПодразделениеОрганизации;
		СтруктураПоиска.КоличествоДетальныхЗаписей = КоличествоДетальныхЗаписей;
		
		ПолнаяВыборка.Сбросить();
		ПолнаяВыборка.НайтиСледующий(СтруктураПоиска);
		
		Пока ПолнаяВыборка.Следующий() И (КоличествоДетальныхЗаписей >0) Цикл
			
			Если ПолнаяВыборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
		
				// Здесь берем суммы надбавок
				СтрокаТЗ = ТаблицаСуммНадбавок.Найти(ПолнаяВыборка.ВидНадбавки, "ВидНадбавки");
				Если СтрокаТЗ <> Неопределено Тогда
					СтрокаТЗ.МинСумма = СтрокаТЗ.МинСумма + ПолнаяВыборка.КоличествоСтавок * ПолнаяВыборка.МинСуммаНадбавки;
					СтрокаТЗ.МаксСумма = СтрокаТЗ.МаксСумма + ПолнаяВыборка.КоличествоСтавок * ПолнаяВыборка.МаксСуммаНадбавки;
					СтрокаТЗ.УстановленнаяСумма = СтрокаТЗ.УстановленнаяСумма + ПолнаяВыборка.КоличествоСтавок * ПолнаяВыборка.УстановленнаяСуммаНадбавки;
				Иначе
					СтрокаТЗ = ТаблицаСуммНадбавок.Добавить();
					СтрокаТЗ.ВидНадбавки = ПолнаяВыборка.ВидНадбавки;
					СтрокаТЗ.МинСумма = ПолнаяВыборка.КоличествоСтавок * ПолнаяВыборка.МинСуммаНадбавки;
					СтрокаТЗ.МаксСумма = ПолнаяВыборка.КоличествоСтавок * ПолнаяВыборка.МаксСуммаНадбавки;
					СтрокаТЗ.УстановленнаяСумма = ПолнаяВыборка.КоличествоСтавок * ПолнаяВыборка.УстановленнаяСуммаНадбавки;
				КонецЕсли;
				
				// Уменьшим количество детальных записей, которые осталось просмотреть
				КоличествоДетальныхЗаписей = КоличествоДетальныхЗаписей - 1;
			
			ИначеЕсли ПолнаяВыборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке И ПолнаяВыборка.Группировка() = "ПодразделениеОрганизации" Тогда
			
				// запоминаем последнее в группе по иерархии подразделение
				ПоследнееВГруппеПоИерархииПодразделение = ПолнаяВыборка.ПодразделениеОрганизации;
		
			ИначеЕсли ПолнаяВыборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке И ПолнаяВыборка.Группировка() = "ТарифныйРазряд" Тогда

				// это самая  первая из группировок (по тарифному разряду) - здесь считаем количество ставок
				КоличествоСтавок = КоличествоСтавок + ПолнаяВыборка.КоличествоСтавок;
				МинОсновнойТариф = МинОсновнойТариф + ПолнаяВыборка.КоличествоСтавок * ПолнаяВыборка.МинОсновнойТариф;
				МаксОсновнойТариф = МаксОсновнойТариф + ПолнаяВыборка.КоличествоСтавок * ПолнаяВыборка.МаксОсновнойТариф;
				УстановленныйОсновнойТариф = УстановленныйОсновнойТариф + ПолнаяВыборка.КоличествоСтавок * ПолнаяВыборка.УстановленныйОсновнойТариф;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// сохраним последнее в группе по иерархии подразделение
		Если ПоследнееВГруппеПоИерархииПодразделение <> Неопределено 
				И ПоследнееВГруппеПоИерархииПодразделение <> ВыборкаПодразделений.ПодразделениеОрганизации Тогда
			ПрежнееЗначение = СоответствиеПоследниеВГруппеПоИерархииПодразделения[ПоследнееВГруппеПоИерархииПодразделение];
			Если НЕ ЗначениеЗаполнено(ПрежнееЗначение) Тогда
				ПрежнееЗначение = 0;
			КонецЕсли;
			СоответствиеПоследниеВГруппеПоИерархииПодразделения.Вставить(ПоследнееВГруппеПоИерархииПодразделение, ПрежнееЗначение + 1);
		КонецЕсли;		
		
		// Выводим итоги по подразделению
		ВрмОбластьШапкиПодразделенияДоНадбавок.Параметры.КоличествоСтавок = КоличествоСтавок;
		ВрмОбластьШапкиПодразделенияДоНадбавок.Параметры.ОкладТарифнаяСтавкаЗаМесяц = МаксОсновнойТариф; //ПолучитьСтрокуИзДвухЧисел(МинОсновнойТариф, МаксОсновнойТариф);
		Если ВыводитьУстановленнуюТарифнуюСтавку Тогда
			ВрмОбластьШапкиПодразделенияДоНадбавок.Параметры.УстановленнаяТарифнаяСтавкаЗаМесяц = УстановленныйОсновнойТариф; //ПолучитьСтрокуИзДвухЧисел(УстановленныйОсновнойТариф, УстановленныйОсновнойТариф);
		Иначе
			ВрмОбластьШапкиПодразделенияДоНадбавок.Параметры.УстановленнаяТарифнаяСтавкаЗаМесяц = 0;
		КонецЕсли;
		ДокументРезультат.Вывести(ВрмОбластьШапкиПодразделенияДоНадбавок);
		
		МинФонд = МинОсновнойТариф;
		МаксФонд = МаксОсновнойТариф;
		УстановленныйФонд = УстановленныйОсновнойТариф;
		
		// Суммы надбавок по подразделению
		Для Каждого СтрокаНадбавки Из ТаблицаНадбавок Цикл
			СтрокаТЗ = ТаблицаСуммНадбавок.Найти(СтрокаНадбавки.ВидНадбавки, "ВидНадбавки");
			Если СтрокаТЗ <> Неопределено Тогда
				ВрмОбластьШапкиПодразделенияНадбавка.Параметры.СуммаНадбавки = ПолучитьСтрокуИзДвухЧисел(СтрокаТЗ.МинСумма, СтрокаТЗ.МаксСумма);
				ВрмОбластьШапкиПодразделенияНадбавка.Параметры.УстановленнаяСуммаНадбавки = ?(ВыводитьУстановленнуюТарифнуюСтавку, ПолучитьСтрокуИзДвухЧисел(СтрокаТЗ.УстановленнаяСумма, СтрокаТЗ.УстановленнаяСумма), "");
				МинФонд = МинФонд + СтрокаТЗ.МинСумма;
				МаксФонд = МаксФонд + СтрокаТЗ.МаксСумма;
				УстановленныйФонд = УстановленныйФонд + СтрокаТЗ.УстановленнаяСумма;
			Иначе
				ВрмОбластьШапкиПодразделенияНадбавка.Параметры.СуммаНадбавки = "";
				ВрмОбластьШапкиПодразделенияНадбавка.Параметры.УстановленнаяСуммаНадбавки = "";
			КонецЕсли;
			ДокументРезультат.Присоединить(ВрмОбластьШапкиПодразделенияНадбавка);
		КонецЦикла;
		
		// Фонд оплаты по подразделению
		ВрмОбластьШапкиПодразделенияПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(МинФонд, МаксФонд);
		Если ВыводитьУстановленнуюТарифнуюСтавку Тогда
			ВрмОбластьШапкиПодразделенияПослеНадбавок.Параметры.УстановленныйМесячныйФонд = ПолучитьСтрокуИзДвухЧисел(УстановленныйФонд, УстановленныйФонд);
		Иначе
			ВрмОбластьШапкиПодразделенияПослеНадбавок.Параметры.УстановленныйМесячныйФонд = "";		
		КонецЕсли;
		ДокументРезультат.Присоединить(ВрмОбластьШапкиПодразделенияПослеНадбавок);
		
		// если группа по иерархии - начинаем группировку в отчете
		Если ВыборкаПодразделений.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоИерархии Тогда
			ДокументРезультат.НачатьГруппуСтрок();
		КонецЕсли;
		
		// группа строк по штатным единицам в подразделении
		ДокументРезультат.НачатьГруппуСтрок();
		
		// Выводим должности, которые есть в подразделении
		ВыборкаДолжностей = ВыборкаПодразделений.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаДолжностей.Следующий() Цикл
			
			ВыборкаТарифныхРазрядов = ВыборкаДолжностей.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаТарифныхРазрядов.Следующий() Цикл
				
				// создадим структуру для сохранения значений расшифровки
				СтруктураРасшифровки = Новый Структура();
				СтруктураРасшифровки.Вставить("ПодразделениеОрганизации", ВыборкаПодразделений.ПодразделениеОрганизации);
				СтруктураРасшифровки.Вставить("Должность", ВыборкаДолжностей.Должность);
				СтруктураРасшифровки.Вставить("ТарифныйРазряд", ВыборкаТарифныхРазрядов.ТарифныйРазряд);				
			
				// Основная информация о должности
				НомерСтроки = НомерСтроки + 1;
				КоличествоСтавок = ВыборкаТарифныхРазрядов.КоличествоСтавок;
				ОбластьСтрокаДоНадбавок.Параметры.Заполнить(ВыборкаТарифныхРазрядов);
				ОбластьСтрокаДоНадбавок.Параметры.СтруктураРасшифровки = СтруктураРасшифровки;
				ОбластьСтрокаДоНадбавок.Параметры.НомерСтроки = НомерСтроки;
				ОбластьСтрокаДоНадбавок.Параметры.ОкладТарифнаяСтавка = ВыборкаТарифныхРазрядов.МинСтавка; //ПолучитьСтрокуИзДвухЧисел(ВыборкаТарифныхРазрядов.МинСтавка, ВыборкаТарифныхРазрядов.МаксСтавка);
				ОбластьСтрокаДоНадбавок.Параметры.ОкладТарифнаяСтавкаЗаМесяц = ВыборкаТарифныхРазрядов.МаксОсновнойТариф; //ПолучитьСтрокуИзДвухЧисел(ВыборкаТарифныхРазрядов.МинОсновнойТариф, ВыборкаТарифныхРазрядов.МаксОсновнойТариф);
				
				// Копим данные для общих итогов
				ВсегоСтавокОрганизации = ВсегоСтавокОрганизации + КоличествоСтавок;
				СуммаМинимальныхТарифныхСтавокОрганизации = СуммаМинимальныхТарифныхСтавокОрганизации + КоличествоСтавок * ВыборкаТарифныхРазрядов.МинОсновнойТариф;
				СуммаМаксимальныхТарифныхСтавокОрганизации = СуммаМаксимальныхТарифныхСтавокОрганизации + КоличествоСтавок * ВыборкаТарифныхРазрядов.МаксОсновнойТариф;
				СуммаУстановленныхТарифныхСтавокОрганизации = СуммаУстановленныхТарифныхСтавокОрганизации + КоличествоСтавок * ВыборкаТарифныхРазрядов.УстановленныйОсновнойТариф;
				
				ВидТарифнойСтавки = "";
				ДолжностьСТарифнымРазрядом = "";
				// Информация о надбавках должности
				ТаблицаСуммНадбавок.Очистить();
				ВыборкаДетали = ВыборкаТарифныхРазрядов.Выбрать(ОбходРезультатаЗапроса.Прямой);
				Пока ВыборкаДетали.Следующий() Цикл
					ВидТарифнойСтавки = ВыборкаДетали.ВидТарифнойСтавки;
					ДолжностьСТарифнымРазрядом = ?(НЕ ЗначениеЗаполнено(ВыборкаДетали.ТарифныйРазряд), ВыборкаДетали.ДолжностьПредставление, "" + ВыборкаДетали.ДолжностьПредставление + ", " + ВыборкаДетали.ТарифныйРазрядПредставление);
					// Здесь берем размер надбавки 
					СтрокаТЗ = ТаблицаСуммНадбавок.Найти(ВыборкаДетали.ВидНадбавки, "ВидНадбавки");
					Если СтрокаТЗ <> Неопределено Тогда
						СтрокаТЗ.Размер = СтрокаТЗ.Размер + ВыборкаДетали.РазмерНадбавки;
						СтрокаТЗ.МинСумма = СтрокаТЗ.МинСумма + ВыборкаДетали.МинСуммаНадбавки;
						СтрокаТЗ.МаксСумма = СтрокаТЗ.МаксСумма + ВыборкаДетали.МаксСуммаНадбавки;
						СтрокаТЗ.УстановленнаяСумма = СтрокаТЗ.УстановленнаяСумма + ВыборкаДетали.УстановленнаяСуммаНадбавки;					
					Иначе
						СтрокаТЗ = ТаблицаСуммНадбавок.Добавить();
						СтрокаТЗ.ВидНадбавки = ВыборкаДетали.ВидНадбавки;
						СтрокаТЗ.Размер = ВыборкаДетали.РазмерНадбавки;
						СтрокаТЗ.МинСумма = ВыборкаДетали.МинСуммаНадбавки;
						СтрокаТЗ.МаксСумма = ВыборкаДетали.МаксСуммаНадбавки;
						СтрокаТЗ.УстановленнаяСумма = ВыборкаДетали.УстановленнаяСуммаНадбавки;
						СтрокаТЗ.СпособРасчета = ВыборкаДетали.СпособРасчета;					
					КонецЕсли;
				КонецЦикла;
				ОбластьСтрокаДоНадбавок.Параметры.ВидТарифнойСтавки = ВидТарифнойСтавки;
				ОбластьСтрокаДоНадбавок.Параметры.ДолжностьПредставление = ДолжностьСТарифнымРазрядом;
				ДокументРезультат.Вывести(ОбластьСтрокаДоНадбавок);
				
				// Теперь выводим в отчет и сразу же рассчитываем фонд оплат по должности
				МинФонд = ВыборкаТарифныхРазрядов.МинОсновнойТариф;
				МаксФонд = ВыборкаТарифныхРазрядов.МаксОсновнойТариф;
				УстановленныйФонд = ВыборкаТарифныхРазрядов.УстановленныйОсновнойТариф;

				Для Каждого СтрокаНадбавки Из ТаблицаНадбавок Цикл
					СтрокаТЗ = ТаблицаСуммНадбавок.Найти(СтрокаНадбавки.ВидНадбавки, "ВидНадбавки");
					Если СтрокаТЗ <> Неопределено Тогда
						ОбластьСтрокаНадбавка.Параметры.РазмерНадбавки = ПолучитьСтрокуИзДвухЧисел(СтрокаТЗ.Размер, СтрокаТЗ.Размер) + ?(СтрокаТЗ.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.Процентом, "%", "");
						МинФонд = МинФонд + СтрокаТЗ.МинСумма;
						МаксФонд = МаксФонд + СтрокаТЗ.МаксСумма;
						УстановленныйФонд = УстановленныйФонд + СтрокаТЗ.УстановленнаяСумма;
			
						// Накапливаем для расчета общих итогов по отчету
						СтрокаНадбавки.МинСумма = СтрокаНадбавки.МинСумма + КоличествоСтавок * СтрокаТЗ.МинСумма;
						СтрокаНадбавки.МаксСумма = СтрокаНадбавки.МаксСумма + КоличествоСтавок * СтрокаТЗ.МаксСумма;
						СтрокаНадбавки.УстановленнаяСумма = СтрокаНадбавки.УстановленнаяСумма + КоличествоСтавок * СтрокаТЗ.УстановленнаяСумма;
					Иначе
						ОбластьСтрокаНадбавка.Параметры.РазмерНадбавки = "";
					КонецЕсли;
					ДокументРезультат.Присоединить(ОбластьСтрокаНадбавка);				
				КонецЦикла;
				
				// Фонд оплаты
				ОбластьСтрокаПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(КоличествоСтавок * МинФонд, КоличествоСтавок * МаксФонд);
				ДокументРезультат.Присоединить(ОбластьСтрокаПослеНадбавок);
				
				// Выводим установленную тарифную ставку
				Если ВыводитьУстановленнуюТарифнуюСтавку Тогда
					ОбластьУстановленнаяСтрокаДоНадбавок.Параметры.СтруктураРасшифровки = СтруктураРасшифровки;
					ОбластьУстановленнаяСтрокаДоНадбавок.Параметры.УстановленнаяТарифнаяСтавка = ВыборкаТарифныхРазрядов.УстановленнаяСтавка;// ПолучитьСтрокуИзДвухЧисел(ВыборкаТарифныхРазрядов.УстановленнаяСтавка,ВыборкаТарифныхРазрядов.УстановленнаяСтавка);
					ОбластьУстановленнаяСтрокаДоНадбавок.Параметры.УстановленнаяТарифнаяСтавкаЗаМесяц = ПолучитьСтрокуИзДвухЧисел(ВыборкаТарифныхРазрядов.УстановленныйОсновнойТариф, ВыборкаТарифныхРазрядов.УстановленныйОсновнойТариф);
					ДокументРезультат.Вывести(ОбластьУстановленнаяСтрокаДоНадбавок);
					
					// Пустые строки надбавок
					Для Сч = 0 По ТаблицаНадбавок.Количество() - 1 Цикл
						ДокументРезультат.Присоединить(ОбластьУстановленнаяСтрокаНадбавка);
					КонецЦикла;
					
					// Установленный фонд оплаты
					ОбластьУстановленнаяСтрокаПослеНадбавок.Параметры.УстановленныйМесячныйФонд = ПолучитьСтрокуИзДвухЧисел(КоличествоСтавок * УстановленныйФонд, КоличествоСтавок * УстановленныйФонд);
					ДокументРезультат.Присоединить(ОбластьУстановленнаяСтрокаПослеНадбавок);
				КонецЕсли;
		
			КонецЦикла; // Пока ВыборкаТарифныхРазрядов.Следующий() Цикл
			
		КонецЦикла; // Пока ВыборкаДолжностей.Следующий() Цикл
		
		// завершаем группу строк по штатным единицам в подразделении
		ДокументРезультат.ЗакончитьГруппуСтрок();
		
		// если это последнее в иерархии подразделение, то завершаем группировки по иерархии
		КоличествоГруппировок = СоответствиеПоследниеВГруппеПоИерархииПодразделения[ВыборкаПодразделений.ПодразделениеОрганизации];
		Если ЗначениеЗаполнено(КоличествоГруппировок) Тогда
			Для Инд = 1 По КоличествоГруппировок Цикл
				ДокументРезультат.ЗакончитьГруппуСтрок();
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла; // Пока ВыборкаПодразделений.Следующий() Цикл
	
	// Выводим в шапку документа общие итоги по численности и фонду оплаты
	МинМесячныйФонд = СуммаМинимальныхТарифныхСтавокОрганизации;
	МаксМесячныйФонд = СуммаМаксимальныхТарифныхСтавокОрганизации;
	УстановленныйМесячныйФонд = СуммаУстановленныхТарифныхСтавокОрганизации;
	
	Для Каждого СтрокаТЗ Из ТаблицаНадбавок Цикл
		МинМесячныйФонд = МинМесячныйФонд + СтрокаТЗ.МинСумма;
		МаксМесячныйФонд = МаксМесячныйФонд + СтрокаТЗ.МаксСумма;
		УстановленныйМесячныйФонд = УстановленныйМесячныйФонд + СтрокаТЗ.УстановленнаяСумма;
	КонецЦикла;
	
	ДокументРезультат.Область("ШтатВКоличестве").Текст = "штат в количестве "+ВсегоСтавокОрганизации+" единиц";
	Если ВыводитьУстановленнуюТарифнуюСтавку Тогда
		ДокументРезультат.Область("МесячныйФонд").Текст = ПолучитьСтрокуИзДвухЧисел(УстановленныйМесячныйФонд, УстановленныйМесячныйФонд) + " " + НазваниеВалютыРегУчета;
	Иначе
		ДокументРезультат.Область("МесячныйФонд").Текст = ПолучитьСтрокуИзДвухЧисел(МинМесячныйФонд, МаксМесячныйФонд) + " " + НазваниеВалютыРегУчета;	
	КонецЕсли;
	
	//Выводим подвал документа
	НомерВерхнейСтрокиПодвала = ДокументРезультат.ВысотаТаблицы+1;
	ОбластьПодвалДоНадбавок = Макет.ПолучитьОбласть("Подвал|ДоНадбавок");
	ОбластьПодвалДоНадбавок.Параметры.КоличествоСтавок = ВсегоСтавокОрганизации;
	ОбластьПодвалДоНадбавок.Параметры.ОкладТарифнаяСтавкаЗаМесяц = СуммаМаксимальныхТарифныхСтавокОрганизации; //ПолучитьСтрокуИзДвухЧисел(СуммаМинимальныхТарифныхСтавокОрганизации, СуммаМаксимальныхТарифныхСтавокОрганизации);
	ОбластьПодвалДоНадбавок.Параметры.УстановленнаяТарифнаяСтавкаЗаМесяц = ПолучитьСтрокуИзДвухЧисел(СуммаУстановленныхТарифныхСтавокОрганизации, СуммаУстановленныхТарифныхСтавокОрганизации);
	
	ВыборкаДляПодвала = РезультатДляПодвала.Выбрать();
	Если ВыборкаДляПодвала.НайтиСледующий(Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы,"ОтветственноеЛицо") Тогда
		ОбластьПодвалДоНадбавок.Параметры.ДолжностьРуководителя = ВыборкаДляПодвала.ДолжностьРуководителя;
	КонецЕсли;
	
	ДокументРезультат.Вывести(ОбластьПодвалДоНадбавок);

	ОбластьПодвалНадбавка = Макет.ПолучитьОбласть("Подвал|Надбавка");
	Для Каждого СтрокаТЗ Из ТаблицаНадбавок Цикл
		ОбластьПодвалНадбавка.Параметры.СуммаНадбавки = ПолучитьСтрокуИзДвухЧисел(СтрокаТЗ.МинСумма, СтрокаТЗ.МаксСумма);
		ОбластьПодвалНадбавка.Параметры.УстановленнаяСуммаНадбавки = ПолучитьСтрокуИзДвухЧисел(СтрокаТЗ.УстановленнаяСумма, СтрокаТЗ.УстановленнаяСумма);
		ДокументРезультат.Присоединить(ОбластьПодвалНадбавка);	
	КонецЦикла;	

	ШиринаДляПодписи = КоличествоНадбавок*3-1;
	НомерЛевойКолонкиДляПодписи = ОбластьПодвалДоНадбавок.ШиринаТаблицы+2;
	НомерПравойКолонкиДляПодписи = НомерЛевойКолонкиДляПодписи + ШиринаДляПодписи-1;
	ЛинияДляПодписи = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	
	//Объединим ячейки для 2-ух подписей руководителей
	Для Н=1 по 2 цикл
		НомерСтрокиДляПодписи = НомерВерхнейСтрокиПодвала + 1 + Н*2;
		ОбластьВерхнейСтрокиПодписи = ДокументРезультат.Область(НомерСтрокиДляПодписи, НомерЛевойКолонкиДляПодписи,НомерСтрокиДляПодписи,НомерПравойКолонкиДляПодписи);
		ОбластьВерхнейСтрокиПодписи.Объединить();
		ОбластьВерхнейСтрокиПодписи.ГраницаСнизу = ЛинияДляПодписи;
		ОбластьНижнейСтрокиПодписи = ДокументРезультат.Область(НомерСтрокиДляПодписи+1,НомерЛевойКолонкиДляПодписи,НомерСтрокиДляПодписи+1,НомерПравойКолонкиДляПодписи);
		ОбластьНижнейСтрокиПодписи.Объединить();
		ОбластьНижнейСтрокиПодписи.Текст = "личная подпись";
	КонецЦикла;	

	ОбластьПодвалПослеНадбавок = Макет.ПолучитьОбласть("Подвал|ПослеНадбавок");
	ОбластьПодвалПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(МинМесячныйФонд, МаксМесячныйФонд);
	Если ВыводитьУстановленнуюТарифнуюСтавку Тогда
		ОбластьПодвалПослеНадбавок.Параметры.УстановленныйМесячныйФонд = ПолучитьСтрокуИзДвухЧисел(УстановленныйМесячныйФонд, УстановленныйМесячныйФонд);
	Иначе
		ОбластьПодвалПослеНадбавок.Параметры.УстановленныйМесячныйФонд = "";	
	КонецЕсли;
	
	ВыборкаДляПодвала = РезультатДляПодвала.Выбрать();
	Если ВыборкаДляПодвала.НайтиСледующий(Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер,"ОтветственноеЛицо") Тогда
		ОбластьПодвалПослеНадбавок.Параметры.ФИОРуководителяГБ = ВыборкаДляПодвала.ФИОРуководителя;
	КонецЕсли;
	ВыборкаДляПодвала = РезультатДляПодвала.Выбрать();
	Если ВыборкаДляПодвала.НайтиСледующий(Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы,"ОтветственноеЛицо") Тогда
		ОбластьПодвалПослеНадбавок.Параметры.ФИОРуководителяКС = ВыборкаДляПодвала.ФИОРуководителя;
	КонецЕсли;
		
	ДокументРезультат.Присоединить(ОбластьПодвалПослеНадбавок);
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, "Штатное расписание организаций", Строка(глТекущийПользователь));
КонецПроцедуры

// Заполняет настройки построителя отчета
// 
Процедура ЗаполнитьНачальныеНастройки() Экспорт

	// Определим сколько категорий расчета используется
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	ОсновныеНачисления.КатегорияРасчета
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисления
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций КАК НадбавкиПоШтатномуРасписанию
		|		ПО ОсновныеНачисления.Ссылка = НадбавкиПоШтатномуРасписанию.ВидНадбавки
		|ГДЕ
		|	НадбавкиПоШтатномуРасписанию.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|";
	ВыборкаКатегорийРасчета = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	ТекстЗапроса ="ВЫБРАТЬ	
				  |	ДанныеСНадбавками.ПодразделениеОрганизации.Владелец КАК Организация,
	              |	ДанныеСНадбавками.ПодразделениеОрганизации,
	              |	ДанныеСНадбавками.Должность,
				  |	ДанныеСНадбавками.ТарифныйРазряд,
				  |	ДанныеСНадбавками.ГрафикРаботы КАК ГрафикРаботы,	              
	              |	ДанныеСНадбавками.КоличествоСтавок,
	              |	ДанныеСНадбавками.ВидТарифнойСтавки,
	              |	ДанныеСНадбавками.МинСтавка,
	              |	ДанныеСНадбавками.МаксСтавка,
	              |	ДанныеСНадбавками.УстановленнаяСтавка,
	              |	ДанныеСНадбавками.Курс,
	              |	ДанныеСНадбавками.МинОсновнойТариф,
	              |	ДанныеСНадбавками.МаксОсновнойТариф,
	              |	ДанныеСНадбавками.УстановленныйОсновнойТариф,
	              |	ДанныеСНадбавками.ВидНадбавки,
				  | ВЫБОР 
				  |		КОГДА ДанныеСНадбавками.СпособРасчета = &НадбавкаПроцентом 
				  |			ТОГДА ДанныеСНадбавками.РазмерНадбавки 
				  |		ИНАЧЕ ВЫРАЗИТЬ(ДанныеСНадбавками.РазмерНадбавки * ДанныеСНадбавками.Курс / &КурсВалютыОтчета КАК ЧИСЛО(15, 2)) 
				  |	КОНЕЦ КАК РазмерНадбавки,	              
	              |	ДанныеСНадбавками.СпособРасчета,
	              |	ВЫРАЗИТЬ(ВЫБОР 
	              |				КОГДА ДанныеСНадбавками.ВидНадбавки.КатегорияРасчета = &Первичное 
	              |					ТОГДА ВЫБОР 
	              |								КОГДА ДанныеСНадбавками.СпособРасчета = &НадбавкаПроцентом 
	              |									ТОГДА ДанныеСНадбавками.МинОсновнойТариф * ДанныеСНадбавками.РазмерНадбавки / 100 
	              |								ИНАЧЕ ДанныеСНадбавками.РазмерНадбавки * ДанныеСНадбавками.Курс / &КурсВалютыОтчета 
	              |						  КОНЕЦ 
	              |				ИНАЧЕ 0 
	              |			 КОНЕЦ КАК ЧИСЛО(15, 2)) КАК МинСуммаНадбавки,
	              |	ВЫРАЗИТЬ(ВЫБОР 
	              |				КОГДА ДанныеСНадбавками.ВидНадбавки.КатегорияРасчета = &Первичное 
	              |					ТОГДА ВЫБОР 
	              |								КОГДА ДанныеСНадбавками.СпособРасчета = &НадбавкаПроцентом 
	              |									ТОГДА ДанныеСНадбавками.МаксОсновнойТариф * ДанныеСНадбавками.РазмерНадбавки / 100 
	              |								ИНАЧЕ ДанныеСНадбавками.РазмерНадбавки * ДанныеСНадбавками.Курс / &КурсВалютыОтчета 
	              |						  КОНЕЦ 
	              |				ИНАЧЕ 0 
	              |			 КОНЕЦ КАК ЧИСЛО(15, 2)) КАК МаксСуммаНадбавки,
	              |	ВЫРАЗИТЬ(ВЫБОР 
	              |				КОГДА ДанныеСНадбавками.ВидНадбавки.КатегорияРасчета = &Первичное 
	              |					ТОГДА ВЫБОР 
	              |								КОГДА ДанныеСНадбавками.СпособРасчета = &НадбавкаПроцентом 
	              |									ТОГДА ДанныеСНадбавками.УстановленныйОсновнойТариф * ДанныеСНадбавками.РазмерНадбавки / 100 
	              |								ИНАЧЕ  ДанныеСНадбавками.РазмерНадбавки * ДанныеСНадбавками.Курс / &КурсВалютыОтчета 
	              |	   					  КОНЕЦ 
	              |				ИНАЧЕ 0 
	              |			 КОНЕЦ КАК ЧИСЛО(15, 2)) КАК УстановленнаяСуммаНадбавки
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		Расписание.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	              |		Расписание.Должность КАК Должность,
				  |		Расписание.ТарифныйРазряд КАК ТарифныйРазряд,
	              |		Расписание.ГрафикРаботы КАК ГрафикРаботы,
	              |		Расписание.КоличествоСтавок КАК КоличествоСтавок,
	              |		Расписание.ВидТарифнойСтавки КАК ВидТарифнойСтавки,
	              |		ВЫРАЗИТЬ(Расписание.МинимальнаяТарифнаяСтавка * ЕСТЬNULL(СрезКурсовВалют.Курс, 1) / ВЫБОР 
	              |																								КОГДА ЕСТЬNULL(СрезКурсовВалют.Кратность, 0) = 0 
	              |																									ТОГДА 1 
	              |																								ИНАЧЕ СрезКурсовВалют.Кратность 
	              |																							КОНЕЦ / &КурсВалютыОтчета КАК ЧИСЛО(15, 2)) КАК МинСтавка,
	              |		ВЫРАЗИТЬ(Расписание.МаксимальнаяТарифнаяСтавка * ЕСТЬNULL(СрезКурсовВалют.Курс, 1)/ ВЫБОР 
	              |																								КОГДА ЕСТЬNULL(СрезКурсовВалют.Кратность, 0) = 0
	              |																									ТОГДА 1 
	              |																								ИНАЧЕ СрезКурсовВалют.Кратность 
	              |																							КОНЕЦ / &КурсВалютыОтчета КАК ЧИСЛО(15, 2)) КАК МаксСтавка,
	              |		ВЫРАЗИТЬ(Расписание.УстановленнаяТарифнаяСтавка * ЕСТЬNULL(СрезКурсовВалют.Курс, 1)/ВЫБОР 
	              |																								КОГДА ЕСТЬNULL(СрезКурсовВалют.Кратность, 0) = 0 
	              |																									ТОГДА 1 
	              |																								ИНАЧЕ СрезКурсовВалют.Кратность 
	              |																							КОНЕЦ / &КурсВалютыОтчета КАК ЧИСЛО(15, 2)) КАК УстановленнаяСтавка,
	              |		ВЫРАЗИТЬ(ВЫБОР 
	              |					КОГДА Расписание.ВидТарифнойСтавки = &ВидСтавкиМесячная 
	              |						ТОГДА 1 
	              |					КОГДА Расписание.ВидТарифнойСтавки = &ВидСтавкиДневная 
	              |						ТОГДА ЕСТЬNULL(Календарь.НормаДнейЗаПериод, 0) 
	              |					ИНАЧЕ ЕСТЬNULL(Календарь.НормаЧасовЗаПериод, 0)
	              |				КОНЕЦ * Расписание.МинимальнаяТарифнаяСтавка * 
	              |				ЕСТЬNULL(СрезКурсовВалют.Курс, 1) / ВЫБОР 
	              |														КОГДА ЕСТЬNULL(СрезКурсовВалют.Кратность, 0) = 0 
	              |															ТОГДА 1 
	              |														ИНАЧЕ СрезКурсовВалют.Кратность 
	              |													КОНЕЦ / &КурсВалютыОтчета КАК ЧИСЛО(15, 2)) КАК МинОсновнойТариф,
	              |		ВЫРАЗИТЬ(ВЫБОР 
	              |					КОГДА Расписание.ВидТарифнойСтавки = &ВидСтавкиМесячная 
	              |						ТОГДА 1 
	              |					КОГДА Расписание.ВидТарифнойСтавки = &ВидСтавкиДневная 
	              |						ТОГДА ЕСТЬNULL(Календарь.НормаДнейЗаПериод, 0)
	              |					ИНАЧЕ ЕСТЬNULL(Календарь.НормаЧасовЗаПериод, 0) 
	              |				КОНЕЦ * Расписание.МаксимальнаяТарифнаяСтавка * 
	              |				ЕСТЬNULL(СрезКурсовВалют.Курс, 1) / ВЫБОР 
	              |														КОГДА ЕСТЬNULL(СрезКурсовВалют.Кратность, 0) = 0 
	              |															ТОГДА 1 
	              |														ИНАЧЕ СрезКурсовВалют.Кратность 
	              |													КОНЕЦ / &КурсВалютыОтчета КАК ЧИСЛО(15, 2)) КАК МаксОсновнойТариф,
	              |		ВЫРАЗИТЬ(ВЫБОР 
	              |					КОГДА Расписание.ВидТарифнойСтавки = &ВидСтавкиМесячная 
	              |						ТОГДА 1 
	              |					КОГДА Расписание.ВидТарифнойСтавки = &ВидСтавкиДневная 
	              |						ТОГДА ЕСТЬNULL(Календарь.НормаДнейЗаПериод, 0)
	              |					ИНАЧЕ ЕСТЬNULL(Календарь.НормаЧасовЗаПериод, 0)
	              |				КОНЕЦ * Расписание.УстановленнаяТарифнаяСтавка * 
	              |				ЕСТЬNULL(СрезКурсовВалют.Курс, 0) / ВЫБОР 
	              |														КОГДА ЕСТЬNULL(СрезКурсовВалют.Кратность, 0) = 0 
	              |															ТОГДА 1 
	              |														ИНАЧЕ СрезКурсовВалют.Кратность 
	              |													КОНЕЦ / &КурсВалютыОтчета КАК ЧИСЛО(15, 2)) КАК УстановленныйОсновнойТариф,
	              |		НадбавкиПоШтатномуРасписанию.ВидНадбавки КАК ВидНадбавки,
	              |		НадбавкиПоШтатномуРасписанию.Показатель1 КАК РазмерНадбавки,
	              |		НадбавкиПоШтатномуРасписанию.ВидНадбавки.СпособРасчета КАК СпособРасчета,
	              |		ЕСТЬNULL(СрезКурсовВалют.Курс, 1) / ВЫБОР 
	              |												КОГДА ЕСТЬNULL(СрезКурсовВалют.Кратность, 0) = 0 
	              |													ТОГДА 1 
	              |												ИНАЧЕ СрезКурсовВалют.Кратность 
	              |											КОНЕЦ КАК Курс,
	              |		ЕСТЬNULL(Календарь.НормаДнейЗаПериод, 0) КАК НормаДнейЗаПериод,
	              |		ЕСТЬNULL(Календарь.НормаЧасовЗаПериод, 0) КАК НормаЧасовЗаПериод
	              |	ИЗ
				  |		РегистрСведений.ШтатноеРасписаниеОрганизаций.СрезПоследних(
				  |						&ДатаАктуальности, 
				  |						ПодразделениеОрганизации.Владелец В (&Организация)) КАК Расписание
				  |
				  |		// рассчитаем среднегодовую норму времени
	              |		ЛЕВОЕ СОЕДИНЕНИЕ (
	              |			ВЫБРАТЬ
	              |				Календарь.ГрафикРаботы КАК ГрафикРаботы,
				  |				ВЫРАЗИТЬ(МАКСИМУМ(ВЫБОР 
				  |									КОГДА ЕСТЬNULL(Календарь.ГрафикРаботы.ИспользуетсяСовместноСПланГрафиком, ЛОЖЬ)
				  |										ТОГДА БалансРабочегоВремени.НормаДней 
				  |									ИНАЧЕ Календарь.НормаДней 
				  |								  КОНЕЦ) КАК ЧИСЛО(10,2)) КАК НормаДнейЗаПериод,
				  |				ВЫРАЗИТЬ(МАКСИМУМ(ВЫБОР 
				  |									КОГДА ЕСТЬNULL(Календарь.ГрафикРаботы.ИспользуетсяСовместноСПланГрафиком, ЛОЖЬ)
				  |										ТОГДА БалансРабочегоВремени.НормаЧасов 
				  |									ИНАЧЕ Календарь.НормаЧасов 
				  |								  КОНЕЦ) КАК ЧИСЛО(10,2)) КАК НормаЧасовЗаПериод
	              |			ИЗ
	              |				(ВЫБРАТЬ 
	              |					Календарь.ГрафикРаботы КАК ГрафикРаботы,
	              |					НАЧАЛОПЕРИОДА(Календарь.Дата, МЕСЯЦ) КАК Период,
	              |					СУММА(Календарь.ОсновноеЗначениеНорма) КАК НормаДней,
	              |					СУММА(Календарь.ДополнительноеЗначениеНорма) КАК НормаЧасов
	              |				ИЗ
	              |					РегистрСведений.ГрафикиРаботыПоВидамВремени КАК Календарь 
	              |				ГДЕ
	              |					Календарь.ГрафикРаботы ССЫЛКА Справочник.ГрафикиРаботы И 
				  |					Календарь.Дата >= &НачалоГода И 	              
	              |					Календарь.Дата <= &ОкончаниеГода И
	              |					Календарь.ВидУчетаВремени = &ПоДням
	              |				СГРУППИРОВАТЬ ПО
	              |					Календарь.ГрафикРаботы,
	              |					НАЧАЛОПЕРИОДА(Календарь.Дата, МЕСЯЦ)) КАК Календарь
	              |
	              |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БалансРабочегоВремени КАК БалансРабочегоВремени
	              |					ПО Календарь.ГрафикРаботы = БалансРабочегоВремени.ГрафикРаботы 
	              |						И Календарь.Период = БалансРабочегоВремени.ДатаМесяца
	              |			
	              |			СГРУППИРОВАТЬ ПО
	              |				Календарь.ГрафикРаботы) КАК Календарь
	              |		ПО Календарь.ГрафикРаботы = Расписание.ГрафикРаботы
	              |
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом.СрезПоследних(&ДатаАктуальности) КАК СрезКурсовВалют
	              |			ПО СрезКурсовВалют.Валюта = Расписание.ВалютаТарифнойСтавки
	              |
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций.СрезПоследних(
	              |					&ДатаАктуальности, 
	              |					ПодразделениеОрганизации.Владелец В (&Организация)) КАК НадбавкиПоШтатномуРасписанию
	              |			ПО НадбавкиПоШтатномуРасписанию.ПодразделениеОрганизации = Расписание.ПодразделениеОрганизации 
	              |				И НадбавкиПоШтатномуРасписанию.Должность = Расписание.Должность 
	              |				И НадбавкиПоШтатномуРасписанию.ТарифныйРазряд = Расписание.ТарифныйРазряд 
	              |				И НадбавкиПоШтатномуРасписанию.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	              |
	              |ГДЕ
	              |	Расписание.КоличествоСтавок > 0) КАК ДанныеСНадбавками
                  |";
	
	// Теперь рассчитываем суммы надбавок для зависимых категорий расчета
	Для Каждого КатегорияРасчета Из Метаданные.Перечисления.КатегорииРасчетов.ЗначенияПеречисления Цикл
		ИмяКатегории = КатегорияРасчета.Имя;
		// Учитываем только те категории, которые действительно используются
		Если ИмяКатегории <> "Первичное" 
			 И ВыборкаКатегорийРасчета.НайтиСледующий(Перечисления.КатегорииРасчетов[ИмяКатегории], "КатегорияРасчета") Тогда
			 ТекстЗапроса = "
			 	  |ВЫБРАТЬ
				  |	ДанныеСНадбавками.Организация КАК Организация,			 	  
	              |	ДанныеСНадбавками.ПодразделениеОрганизации,
	              |	ДанныеСНадбавками.Должность,
				  |	ДанныеСНадбавками.ТарифныйРазряд,
				  |	ДанныеСНадбавками.ГрафикРаботы КАК ГрафикРаботы,	              
	              |	ДанныеСНадбавками.КоличествоСтавок,
	              |	ДанныеСНадбавками.ВидТарифнойСтавки,
	              |	ДанныеСНадбавками.МинСтавка,
	              |	ДанныеСНадбавками.МаксСтавка,
	              |	ДанныеСНадбавками.УстановленнаяСтавка,
	              |	ДанныеСНадбавками.Курс,
	              |	ДанныеСНадбавками.МинОсновнойТариф,
	              |	ДанныеСНадбавками.МаксОсновнойТариф,
	              |	ДанныеСНадбавками.УстановленныйОсновнойТариф,
	              |	ДанныеСНадбавками.ВидНадбавки,
				  | ДанныеСНадбавками.РазмерНадбавки КАК РазмерНадбавки,
	              |	ДанныеСНадбавками.СпособРасчета,
	              |	ВЫРАЗИТЬ(ВЫБОР 
	              |				КОГДА ДанныеСНадбавками.ВидНадбавки.КатегорияРасчета = &" + ИмяКатегории + " 
	              |					ТОГДА ВЫБОР 
	              |								КОГДА ДанныеСНадбавками.СпособРасчета = &НадбавкаПроцентом 
	              |									ТОГДА (ДанныеСНадбавками.МинОсновнойТариф + ЕСТЬNULL(База.МинБаза, 0)) * ДанныеСНадбавками.РазмерНадбавки / 100 
	              |								ИНАЧЕ ДанныеСНадбавками.РазмерНадбавки 
	              |						  КОНЕЦ 
	              |				ИНАЧЕ ДанныеСНадбавками.МинСуммаНадбавки 
	              |			КОНЕЦ КАК ЧИСЛО(15, 2)) КАК МинСуммаНадбавки,
	              |	ВЫРАЗИТЬ(ВЫБОР 
	              |				КОГДА ДанныеСНадбавками.ВидНадбавки.КатегорияРасчета = &" + ИмяКатегории + " 
	              |					ТОГДА ВЫБОР 
	              |								КОГДА ДанныеСНадбавками.СпособРасчета = &НадбавкаПроцентом 
	              |									ТОГДА (ДанныеСНадбавками.МаксОсновнойТариф + ЕСТЬNULL(База.МаксБаза, 0)) * ДанныеСНадбавками.РазмерНадбавки / 100 
	              |								ИНАЧЕ ДанныеСНадбавками.РазмерНадбавки 
	              |						  КОНЕЦ 
	              |				ИНАЧЕ ДанныеСНадбавками.МаксСуммаНадбавки 
	              |			КОНЕЦ КАК ЧИСЛО(15, 2)) КАК МаксСуммаНадбавки,
	              |	ВЫРАЗИТЬ(ВЫБОР 
	              |				КОГДА ДанныеСНадбавками.ВидНадбавки.КатегорияРасчета = &" + ИмяКатегории + " 
	              |					ТОГДА ВЫБОР 
	              |								КОГДА ДанныеСНадбавками.СпособРасчета = &НадбавкаПроцентом 
	              |									ТОГДА (ДанныеСНадбавками.УстановленныйОсновнойТариф + ЕСТЬNULL(База.УстановленнаяБаза, 0)) * ДанныеСНадбавками.РазмерНадбавки / 100 
	              |								ИНАЧЕ ДанныеСНадбавками.РазмерНадбавки 
	              |						  КОНЕЦ 
	              |				ИНАЧЕ ДанныеСНадбавками.УстановленнаяСуммаНадбавки 
	              |			КОНЕЦ КАК ЧИСЛО(15, 2)) КАК УстановленнаяСуммаНадбавки
			 	  |ИЗ
			 	  |	(" + ТекстЗапроса + ") КАК ДанныеСНадбавками
			 	  |	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			 	  |				    		БазовыеВидыРасчета.Ссылка КАК ВидНадбавки,
			 	  |							ДанныеДляБазы.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
			 	  |							ДанныеДляБазы.Должность КАК Должность,
				  |							ДанныеДляБазы.ТарифныйРазряд КАК ТарифныйРазряд,
			 	  |							СУММА(ДанныеДляБазы.МинСуммаНадбавки) КАК МинБаза,
			 	  |                     	СУММА(ДанныеДляБазы.МаксСуммаНадбавки) КАК МаксБаза,
			 	  |                     	СУММА(ДанныеДляБазы.УстановленнаяСуммаНадбавки) КАК УстановленнаяБаза
			 	  |						ИЗ
			 	  |							(" + ТекстЗапроса + ") КАК ДанныеДляБазы 
			 	  |
			 	  |							ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.БазовыеВидыРасчета КАК БазовыеВидыРасчета
			 	  |								ПО ДанныеДляБазы.ВидНадбавки = БазовыеВидыРасчета.ВидРасчета
			 	  |
			 	  |						ГДЕ
			 	  |							БазовыеВидыРасчета.Ссылка.СпособРасчета = &НадбавкаПроцентом
			 	  |
			 	  |						СГРУППИРОВАТЬ ПО
			 	  |							БазовыеВидыРасчета.Ссылка,
			 	  |							ДанныеДляБазы.ПодразделениеОрганизации,
			 	  |							ДанныеДляБазы.Должность,
				  |							ДанныеДляБазы.ТарифныйРазряд) КАК База
			 	  |	ПО ДанныеСНадбавками.ВидНадбавки = База.ВидНадбавки 
			 	  |		И ДанныеСНадбавками.ПодразделениеОрганизации = База.ПодразделениеОрганизации 
			 	  |		И ДанныеСНадбавками.Должность = База.Должность 
			 	  |		И ДанныеСНадбавками.ТарифныйРазряд = База.ТарифныйРазряд
			 	  |";
		КонецЕсли; 
	КонецЦикла;                  
    
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				  | ДанныеСНадбавками.Организация КАК Организация,
	              |	ДанныеСНадбавками.ПодразделениеОрганизации,
	              |	ДанныеСНадбавками.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизацииПредставление,
	              |	ДанныеСНадбавками.ПодразделениеОрганизации.Код КАК ПодразделениеОрганизацииКод,
	              |	ДанныеСНадбавками.Должность,
	              |	ДанныеСНадбавками.Должность.Наименование КАК ДолжностьПредставление,
				  |	ДанныеСНадбавками.ТарифныйРазряд,
				  |	ДанныеСНадбавками.ТарифныйРазряд.Наименование КАК ТарифныйРазрядПредставление,
	              |	ДанныеСНадбавками.Должность.Код КАК ДолжностьКод,
				  |	ДанныеСНадбавками.ГрафикРаботы КАК ГрафикРаботы,	              
	              |	ДанныеСНадбавками.КоличествоСтавок,
	              |	ДанныеСНадбавками.ВидТарифнойСтавки,
	              |	ДанныеСНадбавками.МинСтавка,
	              |	ДанныеСНадбавками.МаксСтавка,
	              |	ДанныеСНадбавками.УстановленнаяСтавка,
	              |	ДанныеСНадбавками.Курс,
	              |	ДанныеСНадбавками.МинОсновнойТариф,
	              |	ДанныеСНадбавками.МаксОсновнойТариф,
	              |	ДанныеСНадбавками.УстановленныйОсновнойТариф,
	              |	ДанныеСНадбавками.ВидНадбавки,
	              |	ДанныеСНадбавками.ВидНадбавки.Наименование КАК ВидНадбавкиПредставление,
	              |	ДанныеСНадбавками.ВидНадбавки.Код КАК ВидНадбавкиКод,
				  | ДанныеСНадбавками.РазмерНадбавки КАК РазмерНадбавки,
	              |	ДанныеСНадбавками.СпособРасчета,
	              |	ДанныеСНадбавками.МинСуммаНадбавки КАК МинСуммаНадбавки,
	              |	ДанныеСНадбавками.МаксСуммаНадбавки КАК МаксСуммаНадбавки,
	              |	ДанныеСНадбавками.УстановленнаяСуммаНадбавки КАК УстановленнаяСуммаНадбавки,
	              |	1 КАК КоличествоДетальныхЗаписей
				  |ИЗ
				  |	(" + ТекстЗапроса + ") КАК ДанныеСНадбавками
	              |{ГДЕ
	              |		Организация.*,
	              |		ПодразделениеОрганизации.*,
	              |		Должность.*,
				  |		ТарифныйРазряд.*,
	              |		ГрафикРаботы.*,
	              |		КоличествоСтавок,
	              |		ВидТарифнойСтавки,
	              |		МинСтавка,
	              |		МаксСтавка,
	              |		УстановленнаяСтавка,
	              |		МинОсновнойТариф,
	              |		МаксОсновнойТариф,
	              |		УстановленныйОсновнойТариф,
	              |		ВидНадбавки.*,
				  | 	РазмерНадбавки,
	              |		МинСуммаНадбавки,
	              |		МаксСуммаНадбавки,
	              |		УстановленнаяСуммаНадбавки
                  |}
                  |
	              |{УПОРЯДОЧИТЬ ПО
	              |		Организация.*,
	              |		ПодразделениеОрганизации.*,
	              |		Должность.*,
				  |		ТарифныйРазряд.*,
	              |		ВидНадбавки.*
	              |}
	              |ИТОГИ 
	              |		КОЛИЧЕСТВО(КоличествоДетальныхЗаписей),
	              |		МАКСИМУМ(КоличествоСтавок),
	              |		МАКСИМУМ(МинСтавка),
	              |		МАКСИМУМ(МаксСтавка),
	              |		МАКСИМУМ(УстановленнаяСтавка),
	              |		МАКСИМУМ(МинОсновнойТариф),
	              |		МАКСИМУМ(МаксОсновнойТариф),
	              |		МАКСИМУМ(УстановленныйОсновнойТариф)	              
	              |ПО ОБЩИЕ, 
	              |	  ПодразделениеОрганизации ИЕРАРХИЯ, 
	              |   Должность, 
	              |   ТарифныйРазряд
	              |";
	              
    // Окончательный текст запроса для построителя
	ПостроительОтчета.Текст = ТекстЗапроса;

	// представление полей
	СтруктураПредставлениеПолей = Новый Структура();
	СтруктураПредставлениеПолей.Вставить("ПодразделениеОрганизации", "Подразделение");
	СтруктураПредставлениеПолей.Вставить("КоличествоСтавок", "Количество ставок");
	СтруктураПредставлениеПолей.Вставить("ВидТарифнойСтавки", "Вид тарифной ставки");
	СтруктураПредставлениеПолей.Вставить("ГрафикРаботы", "График работы");
	СтруктураПредставлениеПолей.Вставить("ВалютаТарифнойСтавки", "Валюта тарифной ставки");
	СтруктураПредставлениеПолей.Вставить("МинСтавка", "Минимальная тарифная ставка");
	СтруктураПредставлениеПолей.Вставить("МаксСтавка", "Максимальная тарифная ставка");
	СтруктураПредставлениеПолей.Вставить("УстановленнаяСтавка", "Установленная тарифная ставка");
	СтруктураПредставлениеПолей.Вставить("МинОсновнойТариф", "Минимальная месячная ставка");
	СтруктураПредставлениеПолей.Вставить("МаксОсновнойТариф", "Максимальная месячная ставка");
	СтруктураПредставлениеПолей.Вставить("УстановленныйОсновнойТариф", "Установленная месячная ставка");
	СтруктураПредставлениеПолей.Вставить("ВидНадбавки", "Вид надбавки");
	СтруктураПредставлениеПолей.Вставить("РазмерНадбавки", "Размер надбавки");
	СтруктураПредставлениеПолей.Вставить("МинСуммаНадбавки", "Минимальная сумма надбавки в месяц");
	СтруктураПредставлениеПолей.Вставить("МаксСуммаНадбавки", "Максимальная сумма надбавки в месяц");
	СтруктураПредставлениеПолей.Вставить("УстановленнаяСуммаНадбавки", "Установленная сумма надбавки в месяц");
	СтруктураПредставлениеПолей.Вставить("ТарифныйРазряд", "Тарифный разряд");
	
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
	// отборы по умолчанию
	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация");
	НовыйОтбор = ПостроительОтчета.Отбор.Добавить("Организация");
	НовыйОтбор.ВидСравнения = ВидСравнения.Равно;
	НовыйОтбор.Значение = Организация;
	НовыйОтбор.Использование = ЗначениеЗаполнено(Организация);

	ПостроительОтчета.Отбор.Добавить("ПодразделениеОрганизации");
	
	// сортировка по умолчанию
	ПостроительОтчета.Порядок.Добавить("ПодразделениеОрганизации.Код");
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

// Установим имены быстрых отборов
мСписокОтбора = Новый СписокЗначений;
мСписокОтбора.Добавить("Организация");

#КонецЕсли