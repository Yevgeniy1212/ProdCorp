////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если Клиент Тогда

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Выполняет настройку отчета по умолчанию для заданного вида отчета
//
// Параметры: 
// 
Процедура ЗаполнитьНачальныеНастройки(ВосстанавливаемНастройку = Ложь) Экспорт
	
	ОбщийОтчет.ИмяРегистра = "-";
	ОбщийОтчет.мНазваниеОтчета = "Свободные помещения";
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	// структура представлений полей
	СтруктураПредставлениеПолей = Новый Структура();
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Помещения.Ссылка КАК Помещение
			       |			
				   |{ВЫБРАТЬ
	               |	Помещения.Владелец Как Территория,
	               |	Помещения.Ссылка Как Помещение
				   |}
				   |
	               |ИЗ
	               |	Справочник.Помещения КАК Помещения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |			ПланируемаяЗанятость.Помещение КАК Помещение
	               |		ИЗ
	               |			РегистрСведений.ПланируемаяЗанятостьПомещений.СрезПоследних(&ДатаНач, ) КАК ПланируемаяЗанятость
	               |		
	               |		ГДЕ
	               |			ПланируемаяЗанятость.ДатаОкончания < &ДатаКон И
	               |			ПланируемаяЗанятость.Занятость <> &Свободно
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			ПланируемаяЗанятостьПомещений.Помещение
	               |		ИЗ
	               |			РегистрСведений.ПланируемаяЗанятостьПомещений КАК ПланируемаяЗанятостьПомещений
	               |		
	               |		ГДЕ
	               |			ПланируемаяЗанятостьПомещений.Занятость <> &Свободно И
	               |			ПланируемаяЗанятостьПомещений.Период > &ДатаНач И
	               |			ПланируемаяЗанятостьПомещений.Период < &ДатаКон) КАК ВложенныйЗапрос
	               |		ПО Помещения.Ссылка = ВложенныйЗапрос.Помещение
	               |
	               |ГДЕ
	               |	((ВложенныйЗапрос.Помещение) ЕСТЬ NULL )
	               |
				   |{ГДЕ
	               |	Помещения.Владелец Как Территория,
	               |	Помещения.Ссылка Как Помещение
				   |}
	               |
			       |
				   |{УПОРЯДОЧИТЬ ПО
	               |	Помещения.Владелец Как Территория,
	               |	Помещения.Ссылка Как Помещение
				   |}
	               |
				   |{Итоги ПО
	               |	Помещения.Владелец Как Территория
				   |}
	               |
				   |";

	
	ПостроительОтчета.Текст = ТекстЗапроса;							  

    Если Не ВосстанавливаемНастройку Тогда
		
		// группировки по умолчанию
		ПостроительОтчета.ИзмеренияСтроки.Добавить("Территория");
		
		// отборы по умолчанию
		МассивОтбора = Новый Массив;
		МассивОтбора.Добавить("Территория");
		УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
		
		// поля по умолчанию
		ПостроительОтчета.ВыбранныеПоля.Очистить();
		ПостроительОтчета.ВыбранныеПоля.Добавить("Помещение");
	
		// настройки отчета
		ОбщийОтчет.РаскрашиватьИзмерения = Истина;
		ОбщийОтчет.ВыводитьИтогиПоВсемУровням = Ложь;
		ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
		ОбщийОтчет.мРежимВводаПериода = 0; // Период
	КонецЕсли;
	
КонецПроцедуры

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//	ЕстьОшибки - флаг того, что при формировании произошли ошибки
//
//Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки = Ложь) Экспорт
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт

	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаКон", ОбщийОтчет.ДатаКон);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНач", ОбщийОтчет.ДатаНач);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("Свободно", Перечисления.Занятость.Свободно);
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПроцедуры


#КонецЕсли