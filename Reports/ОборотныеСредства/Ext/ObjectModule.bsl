Перем мСписокСтруктурныхЕдиниц Экспорт;
Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;
Перем ПромежуточныеДанные Экспорт;
Перем ИсключенныеСчета;

Перем СчетаДляИсключения Экспорт;

#Если Клиент Тогда

Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	// Проверим заполнение обязательных реквизитов
	Если ПроверитьЗаполнениеОбязательныхРеквизитов() Тогда
		Возврат;
	КонецЕсли;
	
	Результат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ВыводЗаголовкаОтчета(ЭтотОбъект, Результат);
	ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных);
	ОтчетыДляРуководителя.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных);
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	
	// Выполним дополнительную обработку Результата отчета
	ОбработкаРезультатаОтчета(Результат);
	
	Возврат;
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных) Экспорт
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ОборотныеАктивы", ПолучитьДанные());
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоПериода);
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(КонецПериода));

	ТиповыеОтчеты.ДоработатьТиповойОтчетПередВыводом(ЭтотОбъект);
КонецПроцедуры

Процедура ВыводЗаголовкаОтчета(ОтчетОбъект, Результат)
	
	МакетЗаголовок = ПолучитьОбщийМакет("ЗаголовокОтчета");
	ОбластьЗаголовок = МакетЗаголовок.ПолучитьОбласть("Заголовок");
	
	ОбластьЗаголовок.Параметры.ЗаголовокОтчета = ПолучитьТекстЗаголовка();
	
	Результат.Вывести(ОбластьЗаголовок);
			
КонецПроцедуры

Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина) Экспорт 
	
	ЗаголовокОтчета = "Оборотные средства";
	
	Возврат ТиповыеОтчеты.ПолучитьТекстЗаголовка(ЭтотОбъект, ЗаголовокОтчета, ОрганизацияВНачале);
	
КонецФункции

Процедура ОбработкаРезультатаОтчета(Результат)
	
	ТиповыеОтчеты.ОбработкаРезультатаОтчета(ЭтотОбъект, Результат);
	
КонецПроцедуры

Функция ПроверитьЗаполнениеОбязательныхРеквизитов()
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(НачалоПериода) ИЛИ Не ЗначениеЗаполнено(КонецПериода) Тогда
		Сообщить("Не указан период формирования отчета", СтатусСообщения.Важное);
		Отказ = Истина;
	ИначеЕсли НачалоПериода > КонецПериода Тогда
		Сообщить("Дата начала периода не может быть больше даты конца периода", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

Функция ПолучитьДанные()
	
	ПромежуточныеДанные = ОтчетыДляРуководителя.ПолучитьОписаниеТаблицыПромежуточныеДанные();

	// Инициализация
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Раздел");
	Таблица.Колонки.Добавить("Подраздел");
	Таблица.Колонки.Добавить("Порядок");
	Таблица.Колонки.Добавить("СуммаНаНачалоПериода"      , ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(17,2));
	Таблица.Колонки.Добавить("УдельныйВесНаНачалоПериода", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(6,2));
	Таблица.Колонки.Добавить("СуммаНаКонецПериода"       , ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(17,2));
	Таблица.Колонки.Добавить("УдельныйВесНаКонецПериода" , ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(6,2));
	
	ПС = ПланыСчетов["Типовой"];
	Счет1000   = ПС.ДенежныеСредства;
	Счет1010   = ПС.ДенежныеСредстваВКассе;
	Счет1021   = ПС.ДенежныеСредстваВПути;
	Счет1022   = ПС.ДенежныеСредстваВПутиКонвертацияВалюты;
	Счет1030   = ПС.ДенежныеСредстваНаТекущихБанковскихСчетах;
	Счет1040   = ПС.ДенежныеСредстваНаКорреспондентскихСчетах;
	Счет1050   = ПС.ДенежныеСредстваНаСберегательныхСчетах;
	Счет1060   = ПС.ПрочиеДенежныеСредства;
	
	Счет1100   = ПС.КраткосрочныеФинансовыеИнвестиции;
	Счет1110   = ПС.КраткосрочныеПредоставленныеЗаймы;
	Счет1120   = ПС.КраткосрочныеФинансовыеАктивыПредназначенныеДляТорговли;
	Счет1130   = ПС.КраткосрочныеИнвестицииУдерживаемыеДоПогашения;
	Счет1140   = ПС.КраткосрочныеФинансовыеИнвестицииДляПродажи;
	Счет1150   = ПС.ПрочиеКраткосрочныеФинансовыеИнвестиции;
	
	Счет1200   = ПС.КраткосрочнаяДебиторскаяЗадолженность;
	Счет1200   = ПС.КраткосрочнаяДебиторскаяЗадолженность;
	
	Счет1210  = ПС.КраткосрочнаяДебиторскаяЗадолженностьПокупателейИЗаказчиков;
	Счет1220  = ПС.КраткосрочнаяДебиторскаяЗадолженностьДочернихОрганизаций;
	Счет1230  = ПС.КраткосрочнаяДебиторскаяЗадолженностьАссоциированныхИСовместныхОрганизаций;
	Счет1240  = ПС.КраткосрочнаяДебиторскаяЗадолженностьФилиаловИСтруктурныхПодразделений;
	
	Счет1250  = ПС.КраткосрочнаяДебиторскаяЗадолженностьРаботников;
	Счет1252  = ПС.КраткосрочнаяЗадолженностьПоВыплаченнойЗаработнойПлате;
	Счет1253  = ПС.КраткосрочнаяЗадолженностьПоПредоставленнымРаботникамЗаймам;
	Счет1254  = ПС.ПрочаяКраткосрочнаяЗадолженностьРаботников;

	Счет1260  = ПС.КраткосрочнаяДебиторскаяЗадолженностьПоАренде;
	Счет1270  = ПС.КраткосрочныеВознагражденияКПолучению ;
	
	Счет1280  = ПС.ПрочаяКраткосрочнаяДебиторскаяЗадолженность_;
	Счет1281  = ПС.КраткосрочнаяЗадолженностьПоВозвратамТМЗПоставщикам;
	Счет1282  = ПС.КраткосрочнаяЗадолженностьПоПретензиям;
	Счет1284  = ПС.ПрочаяКраткосрочнаяДебиторскаяЗадолженность;
	
	Счет1290  = ПС.РезервПоСомнительнымТребованиям; 
		
	Счет1610  = ПС.КраткосрочныеАвансыВыданные;
	Счет1620  = ПС.КраткосрочныеРасходыБудущихПериодов;
	Счет1630  = ПС.ПрочиеКраткосрочныеАктивы;
	
	Счет1251   = ПС.КраткосрочнаяЗадолженностьПодотчетныхЛиц;
	
	Счет1300   = ПС.Запасы;
	Счет1310   = ПС.СырьеИМатериалы;
	Счет1320   = ПС.ГотоваяПродукция;
	Счет1330   = ПС.Товары;
	Счет1340   = ПС.НезавершенноеПроизводство;
	Счет1341   = ПС.НезавершенноеПроизводство_ОсновноеПроизводство;
	Счет1342   = ПС.НезавершенноеПроизводство_ПолуфабрикатыСобственногоПроизводства;
	Счет1343   = ПС.НезавершенноеПроизводство_ВспомогательныеПроизводства;
	
	Счет1351   = ПС.МатериалыПереданныеВПереработку;
	
	Счет1361   = ПС.РезервПоСписаниюСырьяИМатериалов;
	Счет1362   = ПС.РезервПоСписаниюГотовойПродукции;
	Счет1363   = ПС.РезервПоСписаниюТоваров;
	
	// Подготовим список счетов
	СчетаДляИсключения.Добавить(Счет1210);
	СчетаДляИсключения.Добавить(Счет1220);
	СчетаДляИсключения.Добавить(Счет1230);
	СчетаДляИсключения.Добавить(Счет1240);
	СчетаДляИсключения.Добавить(Счет1260);
	СчетаДляИсключения.Добавить(Счет1270);
	
	СчетаДляИсключения.Добавить(Счет1280);
	СчетаДляИсключения.Добавить(Счет1281);
	СчетаДляИсключения.Добавить(Счет1282);
	СчетаДляИсключения.Добавить(Счет1284);
	
	СчетаДляИсключения.Добавить(Счет1610);

	ПромежуточныеДанные = ОтчетыДляРуководителя.ПолучитьОписаниеТаблицыПромежуточныеДанные();
	
	ВыборкаПоСчету = ПолучитьВыборкуПоСчету(0, НачалоПериода, КонецПериода, мСписокСтруктурныхЕдиниц); 
	
	// Денежные средства (порядок 0)
	//Наличные
	П1Н_1010  = ПолучитьИтог(Счет1010, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П1К_1010  = ПолучитьИтог(Счет1010   , ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	
	П1Н = П1Н_1010;
	П1К = П1К_1010;
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1010   , П1Н_1010    , "начало", "Денежные средства","Наличные", "Дт"); 	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1010   , П1К_1010    , "конец", "Денежные средства","Наличные", "Дт");
	
	//безналичные
	П2Н_1030  = ПолучитьИтог(Счет1030, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П2К_1030  = ПолучитьИтог(Счет1030   , ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1030   , П2Н_1030    , "начало", "Денежные средства","Безналичные", "Дт"); 	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1030   , П2К_1030    , "конец", "Денежные средства","Безналичные", "Дт");
	
	П2Н_1040  = ПолучитьИтог(Счет1040 , ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П2К_1040  = ПолучитьИтог(Счет1040 , ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1040   , П2Н_1040    , "начало", "Денежные средства","Безналичные", "Дт"); 	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1040   , П2К_1040    , "конец", "Денежные средства","Безналичные", "Дт");
	
	П2Н_1050  = ПолучитьИтог(Счет1050 , ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П2К_1050  = ПолучитьИтог(Счет1050 , ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1050   , П2Н_1050    , "начало", "Денежные средства","Безналичные", "Дт"); 	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1050   , П2К_1050    , "конец", "Денежные средства","Безналичные", "Дт");
	
	П2Н_1060  = ПолучитьИтог(Счет1060 , ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П2К_1060  = ПолучитьИтог(Счет1060 , ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1060   , П2Н_1060    , "начало", "Денежные средства","Безналичные", "Дт"); 	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1060   , П2К_1060    , "конец", "Денежные средства","Безналичные", "Дт");
	
	П2Н = П2Н_1030 + П2Н_1040  + П2Н_1050 + П2Н_1060;
	П2К = П2К_1030 + П2К_1040  + П2К_1050 + П2К_1060;
	
	//деньги в пути
	П3Н_1021  = ПолучитьИтог(Счет1021, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П3К_1021  = ПолучитьИтог(Счет1021   , ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1021   , П3Н_1021    , "начало", "Денежные средства","Деньги в пути", "Дт"); 	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1021   , П3К_1021    , "конец", "Денежные средства","Деньги в пути", "Дт");
	
	П3Н_1022  = ПолучитьИтог(Счет1022, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П3К_1022  = ПолучитьИтог(Счет1022   , ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1022   , П3Н_1022    , "начало", "Денежные средства","Деньги в пути", "Дт"); 	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1022   , П3К_1022    , "конец", "Денежные средства","Деньги в пути", "Дт");
	
	П3Н = П3Н_1021 + П3Н_1022;
	П3К = П3К_1021 + П3К_1022;
	
	//Общая сумма по денежным средстсвам
	П0Н = П1Н + П2Н + П3Н;
	П0К = П1К + П2К + П3К; 	
			 		
	//// Краткосрочные финансовые вложения 
	
	П4Н_1110  = ПолучитьИтог(Счет1110, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П4К_1110  = ПолучитьИтог(Счет1110, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
		
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1110, П4Н_1110, "начало", "Краткосрочные финансовые вложения",, "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1110, П4К_1110, "конец", "Краткосрочные финансовые вложения",, "Дт");
	          	
	П4Н_1120  = ПолучитьИтог(Счет1120, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П4К_1120  = ПолучитьИтог(Счет1120, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
		
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1120, П4Н_1120, "начало", "Краткосрочные финансовые вложения",, "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1120, П4К_1120, "конец", "Краткосрочные финансовые вложения",, "Дт");
	
	П4Н_1130  = ПолучитьИтог(Счет1130, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П4К_1130  = ПолучитьИтог(Счет1130, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
		
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1130, П4Н_1130, "начало", "Краткосрочные финансовые вложения",, "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1130, П4К_1130, "конец", "Краткосрочные финансовые вложения",, "Дт");
	
	П4Н_1140  = ПолучитьИтог(Счет1140, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П4К_1140  = ПолучитьИтог(Счет1140, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
		
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1140, П4Н_1140, "начало", "Краткосрочные финансовые вложения",, "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1140, П4К_1140, "конец", "Краткосрочные финансовые вложения",, "Дт");
	
	П4Н_1150  = ПолучитьИтог(Счет1150, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П4К_1150  = ПолучитьИтог(Счет1150, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
		
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1150, П4Н_1150, "начало", "Краткосрочные финансовые вложения",, "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1150, П4К_1150, "конец", "Краткосрочные финансовые вложения",, "Дт");
	
	П4Н = П4Н_1110 + П4Н_1120 + П4Н_1130 + П4Н_1140 + П4Н_1150;
	П4К = П4К_1110 + П4К_1120 + П4К_1130 + П4К_1140 + П4К_1150;
	
	//////////Задолженность покупателей(расчет составляющих)////////////////
	ИсключенныеСчета = ОтчетыДляРуководителя.ПолучитьСписокСчетовИсключаемыхИзРасчетаЗадолженности(1) ;
	Если ИсключенныеСчета = Неопределено Тогда
		 ИсключенныеСчета = Новый СписокЗначений();
	Иначе
		Если ИсключенныеСчета.Количество() <> 0 Тогда
			МаксимальныйИндекс = ИсключенныеСчета.Количество() - 1;
			Пока МаксимальныйИндекс >= 0 Цикл
				ТекущийСчет = ИсключенныеСчета.Получить(МаксимальныйИндекс);
				Если СчетаДляИсключения.НайтиПоЗначению(ТекущийСчет.Значение) = Неопределено Тогда
					ИсключенныеСчета.Удалить(ТекущийСчет);
				КонецЕсли;
				МаксимальныйИндекс = МаксимальныйИндекс - 1;
			КонецЦикла;
		КонецЕсли;
	 КонецЕсли;
	 
	ВыборкаПоСчетуЗ = ПолучитьВыборкуПоСчету(0, НачалоПериода, КонецПериода, мСписокСтруктурныхЕдиниц); 
	
	П6Н1210 = 0;
	П6К1210 = 0;
	П6Н1220 = 0;
	П6К1220 = 0;
	П6Н1230 = 0;
	П6К1230 = 0;
	П6Н1240 = 0;
	П6К1240 = 0;
	П6Н1260 = 0;
	П6К1260 = 0;
	П6Н1270 = 0;
	П6К1270 = 0;
	
	П6Н1280 = 0;
	П6К1280 = 0;
	П6Н1281 = 0;
	П6К1281 = 0;
	П6Н1282 = 0;
	П6К1282 = 0;
	П6Н1284 = 0;
	П6К1284 = 0;
	
	П6Н1610 = 0;
	П6К1610 = 0;	
		
	Если ИсключенныеСчета.НайтиПоЗначению(Счет1210) = Неопределено Тогда
		П6Н1210 = ПолучитьИтог(Счет1210, ВыборкаПоСчетуЗ, "СуммаНачальныйОстатокДт");
		П6К1210 = ПолучитьИтог(Счет1210, ВыборкаПоСчетуЗ, "СуммаКонечныйОстатокДт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1210, П6Н1210, "начало", "Дебиторская задолженность","Задолженность покупателей", "Дт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1210, П6К1210, "конец", "Дебиторская задолженность","Задолженность покупателей", "Дт");
	КонецЕсли;
	
	Если ИсключенныеСчета.НайтиПоЗначению(Счет1220) = Неопределено Тогда
		П6Н1220 = ПолучитьИтог(Счет1220, ВыборкаПоСчетуЗ, "СуммаНачальныйОстатокДт");
		П6К1220 = ПолучитьИтог(Счет1220, ВыборкаПоСчетуЗ, "СуммаКонечныйОстатокДт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1220, П6Н1220, "начало", "Дебиторская задолженность","Задолженность покупателей", "Дт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1220, П6К1220, "конец", "Дебиторская задолженность","Задолженность покупателей", "Дт");
	КонецЕсли;
	
	Если ИсключенныеСчета.НайтиПоЗначению(Счет1230) = Неопределено Тогда
		П6Н1230 = ПолучитьИтог(Счет1230, ВыборкаПоСчетуЗ, "СуммаНачальныйОстатокДт");
		П6К1230 = ПолучитьИтог(Счет1230, ВыборкаПоСчетуЗ, "СуммаКонечныйОстатокДт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1230, П6Н1230, "начало", "Дебиторская задолженность","Задолженность покупателей", "Дт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1230, П6К1230, "конец", "Дебиторская задолженность","Задолженность покупателей", "Дт");
	КонецЕсли;

	Если ИсключенныеСчета.НайтиПоЗначению(Счет1240) = Неопределено Тогда
		П6Н1240 = ПолучитьИтог(Счет1240, ВыборкаПоСчетуЗ, "СуммаНачальныйОстатокДт");
		П6К1240 = ПолучитьИтог(Счет1240, ВыборкаПоСчетуЗ, "СуммаКонечныйОстатокДт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1240, П6Н1240, "начало", "Дебиторская задолженность","Задолженность покупателей", "Дт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1240, П6К1240, "конец", "Дебиторская задолженность","Задолженность покупателей", "Дт");
	КонецЕсли;
		
	Если ИсключенныеСчета.НайтиПоЗначению(Счет1260) = Неопределено Тогда
		П6Н1260 = ПолучитьИтог(Счет1260, ВыборкаПоСчетуЗ, "СуммаНачальныйОстатокДт");
		П6К1260 = ПолучитьИтог(Счет1260, ВыборкаПоСчетуЗ, "СуммаКонечныйОстатокДт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1260, П6Н1260, "начало", "Дебиторская задолженность","Задолженность покупателей", "Дт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1260, П6К1260, "конец", "Дебиторская задолженность","Задолженность покупателей", "Дт");
	КонецЕсли;

	Если ИсключенныеСчета.НайтиПоЗначению(Счет1270) = Неопределено Тогда
		П6Н1270 = ПолучитьИтог(Счет1270, ВыборкаПоСчетуЗ, "СуммаНачальныйОстатокДт");
		П6К1270 = ПолучитьИтог(Счет1270, ВыборкаПоСчетуЗ, "СуммаКонечныйОстатокДт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1270, П6Н1270, "начало", "Дебиторская задолженность","Задолженность покупателей", "Дт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1270, П6К1270, "конец", "Дебиторская задолженность","Задолженность покупателей", "Дт");
	КонецЕсли;
	
	Если ИсключенныеСчета.НайтиПоЗначению(Счет1280) = Неопределено Тогда
		П6Н1280 = ПолучитьИтог(Счет1280, ВыборкаПоСчетуЗ, "СуммаНачальныйОстатокДт");
		П6К1280 = ПолучитьИтог(Счет1280, ВыборкаПоСчетуЗ, "СуммаКонечныйОстатокДт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1280, П6Н1280, "начало", "Дебиторская задолженность","Задолженность покупателей", "Дт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1280, П6К1280, "конец", "Дебиторская задолженность","Задолженность покупателей", "Дт");
	КонецЕсли;
	Если ИсключенныеСчета.НайтиПоЗначению(Счет1281) = Неопределено Тогда
		П6Н1281 = ПолучитьИтог(Счет1281, ВыборкаПоСчетуЗ, "СуммаНачальныйОстатокДт");
		П6К1281 = ПолучитьИтог(Счет1281, ВыборкаПоСчетуЗ, "СуммаКонечныйОстатокДт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1281, П6Н1281, "начало", "Дебиторская задолженность","Задолженность покупателей", "Дт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1281, П6К1281, "конец", "Дебиторская задолженность","Задолженность покупателей", "Дт");
	КонецЕсли;  
	Если ИсключенныеСчета.НайтиПоЗначению(Счет1282) = Неопределено Тогда
		П6Н1282 = ПолучитьИтог(Счет1282, ВыборкаПоСчетуЗ, "СуммаНачальныйОстатокДт");
		П6К1282 = ПолучитьИтог(Счет1282, ВыборкаПоСчетуЗ, "СуммаКонечныйОстатокДт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1282, П6Н1282, "начало", "Дебиторская задолженность","Задолженность покупателей", "Дт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1282, П6К1282, "конец", "Дебиторская задолженность","Задолженность покупателей", "Дт");
	КонецЕсли;  
	Если ИсключенныеСчета.НайтиПоЗначению(Счет1284) = Неопределено Тогда
		П6Н1284 = ПолучитьИтог(Счет1284, ВыборкаПоСчетуЗ, "СуммаНачальныйОстатокДт");
		П6К1284 = ПолучитьИтог(Счет1284, ВыборкаПоСчетуЗ, "СуммаКонечныйОстатокДт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1284, П6Н1284, "начало", "Дебиторская задолженность","Задолженность покупателей", "Дт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1284, П6К1284, "конец", "Дебиторская задолженность","Задолженность покупателей", "Дт");
	КонецЕсли;  
	
	П6Н1290 = ПолучитьИтог(Счет1290, ВыборкаПоСчетуЗ, "СуммаНачальныйОстатокКт");
	П6К1290 = ПолучитьИтог(Счет1290, ВыборкаПоСчетуЗ, "СуммаКонечныйОстатокКт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1290, -П6Н1290, "начало", "Дебиторская задолженность","Задолженность покупателей", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1290, -П6К1290, "конец", "Дебиторская задолженность","Задолженность покупателей", "Дт");
	  	
	Если ИсключенныеСчета.НайтиПоЗначению(Счет1610) = Неопределено Тогда
		П6Н1610 = ПолучитьИтог(Счет1610, ВыборкаПоСчетуЗ, "СуммаНачальныйОстатокДт");
		П6К1610 = ПолучитьИтог(Счет1610, ВыборкаПоСчетуЗ, "СуммаКонечныйОстатокДт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1610, П6Н1610, "начало", "Дебиторская задолженность","Задолженность покупателей", "Дт");
		ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1610, П6К1610, "конец", "Дебиторская задолженность","Задолженность покупателей", "Дт");
	КонецЕсли;  
	П6Н = П6Н1210 + П6Н1220 + П6Н1230 + П6Н1240 +  П6Н1260 + П6Н1270 + П6Н1280 + П6Н1281 + П6Н1282 + П6Н1284 - П6Н1290 + П6Н1610;
	П6К = П6К1210 + П6К1220 + П6К1230 + П6К1240 +  П6К1260 + П6К1270 + П6К1280 + П6К1281 + П6К1282 + П6К1284 - П6К1290 + П6К1610;
	
	 //задолженность подотчтетных лиц
	П7Н_1251  = ПолучитьИтог(Счет1251, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П7К_1251  = ПолучитьИтог(Счет1251, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");

	П7Н = П7Н_1251;
	П7К = П7К_1251;

	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1251, П7Н_1251, "начало", "Дебиторская задолженность","Задолженность подотчетных лиц", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1251, П7К_1251, "конец",  "Дебиторская задолженность","Задолженность подотчетных лиц", "Дт");
	
	//прочая задолженность работников
	П8Н_1252 = ПолучитьИтог(Счет1252, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П8К_1252 = ПолучитьИтог(Счет1252, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1252, П8Н_1252, "начало", "Дебиторская задолженность","Прочая задолженность работников", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1252, П8К_1252, "конец", "Дебиторская задолженность","Прочая задолженность работников", "Дт");
	
	П8Н_1253 = ПолучитьИтог(Счет1253, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П8К_1253 = ПолучитьИтог(Счет1253, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1253, П8Н_1253, "начало", "Дебиторская задолженность","Прочая задолженность работников", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1253, П8К_1253, "конец", "Дебиторская задолженность","Прочая задолженность работников", "Дт");	
	
	П8Н_1254 = ПолучитьИтог(Счет1254, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П8К_1254 = ПолучитьИтог(Счет1254, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1254, П8Н_1254, "начало", "Дебиторская задолженность","Прочая задолженность работников", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1254, П8К_1254, "конец", "Дебиторская задолженность","Прочая задолженность работников", "Дт");	
	
	П8Н = П8Н_1252 + П8Н_1253 + П8Н_1254;
	П8К = П8К_1252 + П8К_1253 + П8К_1254;

	//прочие активы
	П9Н_1620 = ПолучитьИтог(Счет1620, ВыборкаПоСчетуЗ, "СуммаНачальныйОстатокДт");
	П9К_1620 = ПолучитьИтог(Счет1620, ВыборкаПоСчетуЗ, "СуммаКонечныйОстатокДт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1620, П9Н_1620, "начало", "Дебиторская задолженность","Прочие активы", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1620, П9К_1620, "конец", "Дебиторская задолженность","Прочие активы", "Дт");
	
	П9Н_1630 = ПолучитьИтог(Счет1630, ВыборкаПоСчетуЗ, "СуммаНачальныйОстатокДт");
	П9К_1630 = ПолучитьИтог(Счет1630, ВыборкаПоСчетуЗ, "СуммаКонечныйОстатокДт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1630, П9Н_1630, "начало", "Дебиторская задолженность","Прочие активы", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1630, П9К_1630, "конец", "Дебиторская задолженность","Прочие активы", "Дт");
	
	П9Н = П9Н_1620 + П9Н_1630;
	П9К = П9К_1620 + П9К_1630;
	
	
	//общая задолженность покупателей
	П5Н = П6Н + П7Н + П8Н + П9Н;
	П5К = П6К + П7К + П8К + П9К;                                        
	
	//////Запасы(расчет составляющих)///////////////////////
	
		//Сырье и материалы////////
	П10Н_1310  = ПолучитьИтог(Счет1310, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П10К_1310  = ПолучитьИтог(Счет1310, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
		
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1310, П10Н_1310, "начало", "Запасы, в т.ч.","Сырье и материалы", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1310, П10К_1310, "конец", "Запасы, в т.ч.", "Сырье и материалы", "Дт");
	
	П10Н_1361  = ПолучитьИтог(Счет1361, ВыборкаПоСчету, "СуммаНачальныйОстатокКт");
	П10К_1361  = ПолучитьИтог(Счет1361, ВыборкаПоСчету, "СуммаКонечныйОстатокКт");

	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1361, -П10Н_1361, "начало", "Запасы, в т.ч.","Сырье и материалы", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1361, -П10К_1361, "конец", "Запасы, в т.ч.", "Сырье и материалы", "Дт");

	П10Н = П10Н_1310 - П10Н_1361;
	П10К = П10К_1310 - П10К_1361;
	
	//Готовая продукция	
	П11Н_1320  = ПолучитьИтог(Счет1320, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П11К_1320  = ПолучитьИтог(Счет1320, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
		
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1320, П11Н_1320, "начало", "Запасы, в т.ч.","Готовая продукция", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1320, П11К_1320, "конец", "Запасы, в т.ч.", "Готовая продукция", "Дт");
	
	П11Н_1362  = ПолучитьИтог(Счет1362, ВыборкаПоСчету, "СуммаНачальныйОстатокКт");
	П11К_1362  = ПолучитьИтог(Счет1362, ВыборкаПоСчету, "СуммаКонечныйОстатокКт");

	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1362, -П11Н_1362, "начало", "Запасы, в т.ч.","Готовая продукция", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1362, -П11К_1362, "конец", "Запасы, в т.ч.", "Готовая продукция", "Дт");
	
	П11Н = П11Н_1320 - П11Н_1362;
	П11К = П11К_1320 - П11К_1362;
	
	//Товары
	П12Н_1330  = ПолучитьИтог(Счет1330, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П12К_1330  = ПолучитьИтог(Счет1330, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
	
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1330, П12Н_1330, "начало", "Запасы, в т.ч.","Товары", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1330, П12К_1330, "конец", "Запасы, в т.ч.", "Товары", "Дт");
   	
	П12Н_1363 = ПолучитьИтог(Счет1363, ВыборкаПоСчету, "СуммаНачальныйОстатокКт");
	П12К_1363 = ПолучитьИтог(Счет1363, ВыборкаПоСчету, "СуммаКонечныйОстатокКт");

	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1363, -П12Н_1363, "начало", "Запасы, в т.ч.","Товары", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1363, -П12К_1363, "конец", "Запасы, в т.ч.", "Товары", "Дт");
	
	П12Н = П12Н_1330 - П12Н_1363;
	П12К = П12К_1330 - П12К_1363;
	
		
	//незавершенное производство
	П13Н_1341  = ПолучитьИтог(Счет1341, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П13К_1341  = ПолучитьИтог(Счет1341, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
		
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1341, П13Н_1341, "начало", "Запасы, в т.ч.","Незавершенное производство", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1341, П13К_1341, "конец", "Запасы, в т.ч.", "Незавершенное производство", "Дт");
	
	П13Н_1342  = ПолучитьИтог(Счет1342, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П13К_1342  = ПолучитьИтог(Счет1342, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
		
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1342, П13Н_1342, "начало", "Запасы, в т.ч.","Незавершенное производство", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1342, П13К_1342, "конец", "Запасы, в т.ч.", "Незавершенное производство", "Дт");
	
	П13Н_1343  = ПолучитьИтог(Счет1343, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П13К_1343  = ПолучитьИтог(Счет1343, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
		
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1343, П13Н_1343, "начало", "Запасы, в т.ч.","Незавершенное производство", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1343, П13К_1343, "конец", "Запасы, в т.ч.", "Незавершенное производство", "Дт");
	
	П13Н = П13Н_1341 + П13Н_1342 + П13Н_1343; 
	П13К = П13К_1341 + П13К_1342 + П13К_1343; 
		
	//прочие запасы
	П14Н_1351  = ПолучитьИтог(Счет1351, ВыборкаПоСчету, "СуммаНачальныйОстатокДт");
	П14К_1351  = ПолучитьИтог(Счет1351, ВыборкаПоСчету, "СуммаКонечныйОстатокДт");
		
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1351, П14Н_1351, "начало", "Запасы, в т.ч.","Прочие запасы", "Дт");
	ДобавитьЗаписьВТаблицуРасшифровки("+", Счет1351, П14К_1351, "конец", "Запасы, в т.ч.", "Прочие запасы", "Дт");
	             	
	П14Н = П14Н_1351; 
	П14К = П14К_1351; 
	
	Если П1Н <> 0 ИЛИ П1К <> 0 Тогда
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 1;
		НоваяСтрока.Раздел               = "Денежные средства";
		НоваяСтрока.Подраздел            = "Наличные";
		НоваяСтрока.СуммаНаНачалоПериода = П1Н;
		НоваяСтрока.СуммаНаКонецПериода  = П1К;
	КонецЕсли;
	Если П2Н <> 0 ИЛИ П2К <> 0 Тогда
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 2;
		НоваяСтрока.Раздел               = "Денежные средства";
		НоваяСтрока.Подраздел            = "Безналичные";
		НоваяСтрока.СуммаНаНачалоПериода = П2Н;
		НоваяСтрока.СуммаНаКонецПериода  = П2К;
	КонецЕсли;
	Если П3Н <> 0 ИЛИ П3К <> 0 Тогда
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 3;
		НоваяСтрока.Раздел               = "Денежные средства";
		НоваяСтрока.Подраздел            = "Деньги в пути";
		НоваяСтрока.СуммаНаНачалоПериода = П3Н;
		НоваяСтрока.СуммаНаКонецПериода  = П3К; 
	КонецЕсли;

	Если П4Н <> 0 ИЛИ П4К <> 0 Тогда		
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 4;
		НоваяСтрока.Раздел               = "Краткосрочные финансовые вложения";
		НоваяСтрока.Подраздел            = NULL;
		НоваяСтрока.СуммаНаНачалоПериода = П4Н;
		НоваяСтрока.СуммаНаКонецПериода  = П4К;
	КонецЕсли;
	Если П6Н <> 0 ИЛИ П6К <> 0 Тогда	
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 6;
		НоваяСтрока.Раздел               = "Дебиторская задолженность";
		НоваяСтрока.Подраздел            = "Задолженность покупателей";
		НоваяСтрока.СуммаНаНачалоПериода = П6Н;
		НоваяСтрока.СуммаНаКонецПериода  = П6К;  
	КонецЕсли;
	Если П7Н <> 0 ИЛИ П7К <> 0 Тогда	
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 7;
		НоваяСтрока.Раздел               = "Дебиторская задолженность";
		НоваяСтрока.Подраздел            = "Задолженность подотчетных лиц";
		НоваяСтрока.СуммаНаНачалоПериода = П7Н;
		НоваяСтрока.СуммаНаКонецПериода  = П7К;  
	КонецЕсли;

	Если П8Н <> 0 ИЛИ П8К <> 0 Тогда		
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 8;
		НоваяСтрока.Раздел               = "Дебиторская задолженность";
		НоваяСтрока.Подраздел            = "Прочая задолженность работников";
		НоваяСтрока.СуммаНаНачалоПериода = П8Н;
		НоваяСтрока.СуммаНаКонецПериода  = П8К;
	КонецЕсли;

	Если П9Н <> 0 ИЛИ П9К <> 0 Тогда		
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 9;
		НоваяСтрока.Раздел               = "Дебиторская задолженность";
		НоваяСтрока.Подраздел            = "Прочие активы";
		НоваяСтрока.СуммаНаНачалоПериода = П9Н;
		НоваяСтрока.СуммаНаКонецПериода  = П9К;
	КонецЕсли;

	Если П10Н <> 0 ИЛИ П10К <> 0 Тогда		
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 10;
		НоваяСтрока.Раздел               = "Запасы, в т.ч.";
		НоваяСтрока.Подраздел            = "Сырье и материалы";
		НоваяСтрока.СуммаНаНачалоПериода = П10Н;
		НоваяСтрока.СуммаНаКонецПериода  = П10К;
	КонецЕсли;
	Если П11Н <> 0 ИЛИ П11К <> 0 Тогда	
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 11;
		НоваяСтрока.Раздел               = "Запасы, в т.ч.";
		НоваяСтрока.Подраздел            = "Готовая продукция";
		НоваяСтрока.СуммаНаНачалоПериода = П11Н;
		НоваяСтрока.СуммаНаКонецПериода  = П11К;
	КонецЕсли;
	Если П12Н <> 0 ИЛИ П12К <> 0 Тогда
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 12;
		НоваяСтрока.Раздел               = "Запасы, в т.ч.";
		НоваяСтрока.Подраздел            = "Товары";
		НоваяСтрока.СуммаНаНачалоПериода = П12Н;
		НоваяСтрока.СуммаНаКонецПериода  = П12К;
	КонецЕсли;
	Если П13Н <> 0 ИЛИ П13К <> 0 Тогда
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 13;
		НоваяСтрока.Раздел               = "Запасы, в т.ч.";
		НоваяСтрока.Подраздел            = "Незавершенное производство";
		НоваяСтрока.СуммаНаНачалоПериода = П13Н;
		НоваяСтрока.СуммаНаКонецПериода  = П13К;
	КонецЕсли;
	Если П14Н <> 0 ИЛИ П14К <> 0 Тогда
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Порядок              = 14;
		НоваяСтрока.Раздел               = "Запасы, в т.ч.";
		НоваяСтрока.Подраздел            = "Прочие запасы";
		НоваяСтрока.СуммаНаНачалоПериода = П14Н;
		НоваяСтрока.СуммаНаКонецПериода  = П14К;
	КонецЕсли;

	
	ИтогоСуммаНаНачалоПериода = Таблица.Итог("СуммаНаНачалоПериода");
	ИтогоСуммаНаКонецПериода  = Таблица.Итог("СуммаНаКонецПериода");
	
	МаксСуммаНаНачало = 0;
	МаксСуммаНаКонец  = 0;
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		Если МаксСуммаНаНачало < СтрокаТаблицы.СуммаНаНачалоПериода Тогда
			ИндексСтрокиМаксСуммаНаНачало = Таблица.Индекс(СтрокаТаблицы);
			МаксСуммаНаНачало = СтрокаТаблицы.СуммаНаНачалоПериода;
		КонецЕсли;
		Если МаксСуммаНаКонец < СтрокаТаблицы.СуммаНаКонецПериода Тогда
			ИндексСтрокиМаксСуммаНаКонец = Таблица.Индекс(СтрокаТаблицы);
			МаксСуммаНаКонец = СтрокаТаблицы.СуммаНаКонецПериода;
		КонецЕсли;
		Если ИтогоСуммаНаНачалоПериода = 0 Тогда
			СтрокаТаблицы.УдельныйВесНаНачалоПериода = 0;
		Иначе
			СтрокаТаблицы.УдельныйВесНаНачалоПериода =  Окр(СтрокаТаблицы.СуммаНаНачалоПериода / ИтогоСуммаНаНачалоПериода * 100, 1);
		КонецЕсли;
		Если ИтогоСуммаНаКонецПериода = 0 Тогда
			СтрокаТаблицы.УдельныйВесНаНачалоПериода = 0;
		Иначе 
			СтрокаТаблицы.УдельныйВесНаКонецПериода  = Окр(СтрокаТаблицы.СуммаНаКонецПериода / ИтогоСуммаНаКонецПериода * 100, 1);
		КонецЕсли;	
	КонецЦикла;
	
	
	Остаток = 100 - Таблица.Итог("УдельныйВесНаНачалоПериода");
	Если Остаток <> 0 И ИндексСтрокиМаксСуммаНаНачало <> Неопределено Тогда
		Таблица[ИндексСтрокиМаксСуммаНаНачало].УдельныйВесНаНачалоПериода = Таблица[ИндексСтрокиМаксСуммаНаНачало].УдельныйВесНаНачалоПериода + Остаток;
	КонецЕсли;
	
	Остаток = 100 - Таблица.Итог("УдельныйВесНаКонецПериода");
	Если Остаток <> 0 И ИндексСтрокиМаксСуммаНаКонец <> Неопределено Тогда
		Таблица[ИндексСтрокиМаксСуммаНаКонец].УдельныйВесНаКонецПериода = Таблица[ИндексСтрокиМаксСуммаНаКонец].УдельныйВесНаКонецПериода + Остаток;
	КонецЕсли;
	
	Возврат Таблица;
	
КонецФункции

Процедура ДобавитьЗаписьВТаблицуРасшифровки(Знак, Счет, Сумма, ВидРесурса, Субконто1, Субконто2 = Неопределено, БухВидРесурса, СчетИерархия = Ложь)
	
	СтруктураПараметр = ОтчетыДляРуководителя.ПолучитьОписаниеСтруктурыПараметра();
	
	Если Сумма <> 0 И Не СчетИерархия Тогда
		СтруктураПараметр.Знак          = Знак;
		СтруктураПараметр.Счет          = Счет;
		СтруктураПараметр.Сумма         = Сумма;
		СтруктураПараметр.Субконто1     = Субконто1;
		СтруктураПараметр.Субконто2     = Субконто2;
		СтруктураПараметр.ВидРесурса    = ВидРесурса;
		СтруктураПараметр.БухВидРесурса = БухВидРесурса;
		ОтчетыДляРуководителя.ДобавитьЗаписьВТаблицуПромежуточныеДанные(ПромежуточныеДанные, СтруктураПараметр);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьИтог(Счет, Выборка, ВидИтога)
	
	Итог = 0;
	
	Выборка.Сбросить();
	Если Выборка.НайтиСледующий(Счет, "Счет") Тогда
		Итог = Выборка[ВидИтога];	
	КонецЕсли;
	
	Возврат Итог;
	
КонецФункции

Функция ПолучитьВыборкуПоСчету(ВидОстатков, НачалоПериода, КонецПериода, СписокОрганизаций, Счета = Неопределено, ВидыСубконто = Неопределено)
	
	Запрос = Новый Запрос;
	
	СтрокаПоля = "";
	СтрокаИтог = "";
	Если ВидОстатков = 0 Тогда
		СтрокаПоля = "ТиповойОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
		|	ТиповойОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
		|	ТиповойОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
		|	ТиповойОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт";	
		
		СтрокаИтог = "СУММА(СуммаНачальныйОстатокДт),
		|	СУММА(СуммаНачальныйОстатокКт),
		|	СУММА(СуммаКонечныйОстатокДт),
		|	СУММА(СуммаКонечныйОстатокКт)";
	ИначеЕсли ВидОстатков = 1 Тогда 
		СтрокаПоля = "ТиповойОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокДт КАК СуммаНачальныйРазвернутыйОстатокДт,
		|	ТиповойОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокКт КАК СуммаНачальныйРазвернутыйОстатокКт,
		|	ТиповойОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокДт КАК СуммаКонечныйРазвернутыйОстатокДт,
		|	ТиповойОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокКт КАК СуммаКонечныйРазвернутыйОстатокКт";	
		
		СтрокаИтог = "СУММА(СуммаНачальныйРазвернутыйОстатокДт),
		|	СУММА(СуммаНачальныйРазвернутыйОстатокКт),
		|	СУММА(СуммаКонечныйРазвернутыйОстатокДт),
		|	СУММА(СуммаКонечныйРазвернутыйОстатокКт)";
	ИначеЕсли ВидОстатков = 2 Тогда
		СтрокаПоля = "ТиповойОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокДт КАК СуммаНачальныйРазвернутыйОстатокДт,
		|	ТиповойОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокКт КАК СуммаНачальныйРазвернутыйОстатокКт,
		|	ТиповойОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокДт КАК СуммаКонечныйРазвернутыйОстатокДт,
		|	ТиповойОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокКт КАК СуммаКонечныйРазвернутыйОстатокКт,
		|	ТиповойОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
		|	ТиповойОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
		|	ТиповойОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
		|	ТиповойОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт";	
		
		СтрокаИтог = "СУММА(СуммаНачальныйРазвернутыйОстатокДт),
		|	СУММА(СуммаНачальныйРазвернутыйОстатокКт),
		|	СУММА(СуммаКонечныйРазвернутыйОстатокДт),
		|	СУММА(СуммаКонечныйРазвернутыйОстатокКт),
		|	СУММА(СуммаНачальныйОстатокДт),
		|	СУММА(СуммаНачальныйОстатокКт),
		|	СУММА(СуммаКонечныйОстатокДт),
		|	СУММА(СуммаКонечныйОстатокКт)";
	КонецЕсли;
	СтрокаСубконто = "";
	СтрокаУсловие = "&НачалоПериода, &КонецПериода, , , Счет В ИЕРАРХИИ (&Счета), &ВидыСубконто, Организация В(&СписокОрганизаций)";
	Если Счета = Неопределено Тогда
		СтрокаУсловие = СтрЗаменить(СтрокаУсловие, "Счет В ИЕРАРХИИ (&Счета)", "");
	КонецЕсли;
	Если ВидыСубконто = Неопределено Тогда
		СтрокаУсловие = СтрЗаменить(СтрокаУсловие, "&ВидыСубконто", "");
	Иначе
		Для Индекс = 1 По ВидыСубконто.Количество() Цикл
			СтрокаСубконто = СтрокаСубконто + "ТиповойОстаткиИОбороты.Субконто" + Индекс + ", ";	
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТиповойОстаткиИОбороты.Счет КАК Счет,"
	+ СтрокаСубконто + "" 
	+ СтрокаПоля + 
	" ИЗ
	|	РегистрБухгалтерии.Типовой.ОстаткиИОбороты(" + СтрокаУсловие + ") КАК ТиповойОстаткиИОбороты
	|ИТОГИ " 
	+ СтрокаИтог + 
	"
	|ПО
	|	Счет ИЕРАРХИЯ";
	
	Если Не ЗначениеЗаполнено(мСписокСтруктурныхЕдиниц) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Организация В(&СписокОрганизаций)", "");	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидыСубконто",  ВидыСубконто);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Если КонецПериода <> '00010101000000' Тогда
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода) + 1);
	Иначе
		Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	КонецЕсли;
	Запрос.УстановитьПараметр("СписокОрганизаций",   СписокОрганизаций);
	Запрос.УстановитьПараметр("Счета", Счета);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПоСчету = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Возврат ВыборкаПоСчету;
	
КонецФункции

// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт
	
	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	
	Если СохраненнаяНастройка = Неопределено Тогда
		СсылкаНаОбъект = ТиповыеОтчеты.ПолучитьИдентификаторОбъекта(ЭтотОбъект);
		Настройка = Справочники.СохраненныеНастройки.СоздатьЭлемент();
		Настройка.НастраиваемыйОбъект = СсылкаНаОбъект;
		Настройка.ТипНастройки = Перечисления.ТипыНастроек.НастройкиПользователяНастройкиОтчета;
		Настройка.Наименование = "НастройкиПользователяНастройкиОтчета";
		Настройка.ИспользоватьПриОткрытии = Истина;
		НовыйПользователь = Настройка.Пользователи.Добавить();
		НовыйПользователь.Пользователь = глЗначениеПеременной("глТекущийПользователь");
		Настройка.Записать();
		
		СохраненнаяНастройка = Настройка.Ссылка;
	КонецЕсли;
	
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	СтандартныеОтчеты.ИнициализацияОтчета(ЭтотОбъект);
	
КонецПроцедуры

Функция РедактироватьСписокСчетовИсключаемыхИзРасчетаЗадолженности() Экспорт
	
	СписокИзменен = Ложь;
	
	ФормаСпискаСчетов = ПолучитьОбщуюФорму("ФормаСпискаСчетов");
			
	СчетаРасчета = ОтчетыДляРуководителя.ВозвратитьМассивСчетовДтКтЗадолженности(Ложь, Истина, Ложь);
	СчетаРасчета.Добавить(ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоВозвратамТМЗПоставщикам);  // 1281
	СчетаРасчета.Добавить(ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоПретензиям);               // 1282
	СчетаРасчета.Добавить(ПланыСчетов.Типовой.ПрочаяКраткосрочнаяДебиторскаяЗадолженность);          // 1283

	ИсключенныеСчетаОбщие = ОтчетыДляРуководителя.ПолучитьСписокСчетовИсключаемыхИзРасчетаЗадолженности(1);
	ИсключенныеСчетаОтчета = Новый СписокЗначений;
	ИндексПоследнего = ИсключенныеСчетаОбщие.Количество() - 1;
	Если ИндексПоследнего >= 0 Тогда
		Пока ИндексПоследнего >= 0 Цикл
			ТекущийСчет = ИсключенныеСчетаОбщие.Получить(ИндексПоследнего);
			Если СчетаРасчета.Найти(ТекущийСчет.Значение) <> Неопределено Тогда
				// В списке ИсключенныеСчетаОтчета у нас останутся счета по умолчанию
				// В списке ИсключенныеСчетаОбщие у нас сохраняться возможные счета пользователя
				ИсключенныеСчетаОтчета.Добавить(ТекущийСчет.Значение);
				ИсключенныеСчетаОбщие.Удалить(ТекущийСчет);
			КонецЕсли;
			ИндексПоследнего = ИндексПоследнего - 1;
		КонецЦикла;
	КонецЕсли;
	
	ФормаСпискаСчетов.СписокСчетовРасчета.ЗагрузитьЗначения(СчетаРасчета);
	ФормаСпискаСчетов.Список.ЗагрузитьЗначения(ИсключенныеСчетаОтчета.ВыгрузитьЗначения());
	
	ЭлементыФормы = ФормаСпискаСчетов.ЭлементыФормы;
	КнопкаДобавить = ЭлементыФормы.КоманднаяПанельСписка.Кнопки.Найти("КнопкаДобавить");
	Если КнопкаДобавить <> Неопределено Тогда
		ЭлементыФормы.КоманднаяПанельСписка.Кнопки.Удалить(КнопкаДобавить);
	КонецЕсли;
	КнопкаУдалить = ЭлементыФормы.КоманднаяПанельСписка.Кнопки.Найти("КнопкаУдалить");
	Если КнопкаУдалить <> Неопределено Тогда
		ЭлементыФормы.КоманднаяПанельСписка.Кнопки.Удалить(КнопкаУдалить);
	КонецЕсли;
	
	ФормаСпискаСчетов.Тип = 1;
	Если ФормаСпискаСчетов.ОткрытьМодально() = КодВозвратаДиалога.ОК Тогда
		
		// К сохраненным исключаемым счетам пользователя
		// добавим возможные исключаемые счета по умолчанию 
		ИсключенныеСчетаОтчета = ФормаСпискаСчетов.Список.Скопировать();
		Для Каждого ТекущийСчет Из ИсключенныеСчетаОтчета Цикл
			ИсключенныеСчетаОбщие.Добавить(ТекущийСчет.Значение);
		КонецЦикла;
		ОтчетыДляРуководителя.СохранитьСписокСчетовИсключаемыхИзРасчетаЗадолженности(1, ИсключенныеСчетаОбщие);
		
		СписокИзменен = Истина;
		
	КонецЕсли;
	
	Возврат СписокИзменен;
	
КонецФункции


Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

СчетаДляИсключения = Новый СписокЗначений();

#КонецЕсли
мСписокСтруктурныхЕдиниц = Новый СписокЗначений;