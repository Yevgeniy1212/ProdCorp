#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета по метаданным регистра накопления
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "";
	УниверсальныйОтчет.ИмяРегистра = "-";
	
	
	//Содержит текст построителя отчета
	
	Текст =
	"ВЫБРАТЬ
	|	Выборка.Контрагент КАК Контрагент,
	|	Выборка.Договор КАК Договор,
	|	Выборка.СуммаНачОстаток КАК СуммаНачОстаток,
	|	Выборка.СуммаНачОстатокВозн КАК СуммаНачОстатокВозн,
	|	Выборка.СуммаПогашения КАК СуммаПогашения,
	|	Выборка.СуммаПогашенияВозн КАК СуммаПогашенияВозн,
	|	Выборка.СуммаПолучения КАК СуммаПолучения,
	|	Выборка.СуммаПолученияВозн КАК СуммаПолученияВозн,
	|	Выборка.СуммаКонОстаток КАК СуммаКонОстаток,
	|	Выборка.СуммаКонОстатокВозн КАК СуммаКонОстатокВозн
	|{ВЫБРАТЬ
	|	Выборка.Организация.*,
	|	Выборка.ИсточникФинансирования.*,
	|	Договор.*}
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОстаткиИОборотыОсн.Организация КАК Организация,
	|		ОстаткиИОборотыОсн.ИсточникФинансирования КАК ИсточникФинансирования,
	|		ОстаткиИОборотыОсн.Период КАК Период,
	|		ВЫРАЗИТЬ(ОстаткиИОборотыОсн.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	|		ВЫРАЗИТЬ(ОстаткиИОборотыОсн.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	|		СУММА(ОстаткиИОборотыОсн.СуммаНачальныйОстатокДт) КАК СуммаНачОстаток,
	|		0 КАК СуммаНачОстатокВозн,
	|		СУММА(ОстаткиИОборотыОсн.СуммаОборотКт) КАК СуммаПогашения,
	|		0 КАК СуммаПогашенияВозн,
	|		СУММА(ОстаткиИОборотыОсн.СуммаОборотДт) КАК СуммаПолучения,
	|		0 КАК СуммаПолученияВозн,
	|		СУММА(ОстаткиИОборотыОсн.СуммаКонечныйОстатокДт) КАК СуммаКонОстаток,
	|		0 КАК СуммаКонОстатокВозн
	|	ИЗ
	|		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(
	|				&ДатаНач,
	|				&ДатаКон,
	|				Месяц,
	|				,
	|				Счет В ИЕРАРХИИ
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СписокСчетов.СчетУчета
	|					ИЗ
	|						РегистрСведений.СчетаУчетаПоКредитамИЗаймам КАК СписокСчетов
	|					ГДЕ
	|						СписокСчетов.ТипСчетаУчета = &ТипСчетаУчета),
	|				,
	|				{(Организация).*, (ИсточникФинансирования).*}) КАК ОстаткиИОборотыОсн
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОстаткиИОборотыОсн.Организация,
	|		ОстаткиИОборотыОсн.ИсточникФинансирования,
	|		ОстаткиИОборотыОсн.Субконто1,
	|		ОстаткиИОборотыОсн.Субконто2,
	|		ОстаткиИОборотыОсн.Период
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОстаткиИОборотыВозн.Организация,
	|		ОстаткиИОборотыВозн.ИсточникФинансирования,
	|		ОстаткиИОборотыВозн.Период,
	|		ВЫРАЗИТЬ(ОстаткиИОборотыВозн.Субконто1 КАК Справочник.Контрагенты),
	|		ВЫРАЗИТЬ(ОстаткиИОборотыВозн.Субконто2 КАК Справочник.ДоговорыКонтрагентов),
	|		0,
	|		СУММА(ОстаткиИОборотыВозн.СуммаНачальныйОстатокДт),
	|		0,
	|		СУММА(ОстаткиИОборотыВозн.СуммаОборотКт),
	|		0,
	|		СУММА(ОстаткиИОборотыВозн.СуммаОборотДт),
	|		0,
	|		СУММА(ОстаткиИОборотыВозн.СуммаКонечныйОстатокДт)
	|	ИЗ
	|		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(
	|				&ДатаНач,
	|				&ДатаКон,
	|				Месяц,
	|				,
	|				Счет В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СписокСоответствияСчетов.СчетУчетаВознагрождений
	|					ИЗ
	|						РегистрСведений.СоответствиеСчетовУчетаРасчетовПоКредитамИЗаймам КАК СписокСоответствияСчетов
	|					ГДЕ
	|						СписокСоответствияСчетов.СчетУчета В
	|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|								СписокСчетов.СчетУчета
	|							ИЗ
	|								РегистрСведений.СчетаУчетаПоКредитамИЗаймам КАК СписокСчетов
	|							ГДЕ
	|								СписокСчетов.ТипСчетаУчета = &ТипСчетаУчета)),
	|				,
	|				{(Организация).*, (ИсточникФинансирования).*}) КАК ОстаткиИОборотыВозн
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОстаткиИОборотыВозн.Организация,
	|		ОстаткиИОборотыВозн.ИсточникФинансирования,
	|		ОстаткиИОборотыВозн.Субконто1,
	|		ОстаткиИОборотыВозн.Субконто2,
	|		ОстаткиИОборотыВозн.Период
	|) КАК Выборка
	|{ГДЕ
	|	Выборка.Контрагент.*,
	|	Выборка.Организация.*,
	|	Выборка.ИсточникФинансирования.*}
	|{УПОРЯДОЧИТЬ ПО
	|	Выборка.Организация.*,
	|	Выборка.ИсточникФинансирования.*,
	|	Контрагент.*}
	|ИТОГИ
	|	СУММА(СуммаНачОстаток),
	|	СУММА(СуммаНачОстатокВозн),
	|	СУММА(СуммаПогашения),
	|	СУММА(СуммаПогашенияВозн),
	|	СУММА(СуммаПолучения),
	|	СУММА(СуммаПолученияВозн),
	|	СУММА(СуммаКонОстаток),
	|	СУММА(СуммаКонОстатокВозн)
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	Выборка.Организация,
	|	Выборка.ИсточникФинансирования,
	|	Контрагент,
	|	Договор.*}
	|АВТОУПОРЯДОЧИВАНИЕ";

	УниверсальныйОтчет.ПостроительОтчета.Текст = Текст;
	
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	 УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	//УниверсальныйОтчет.ДобавитьПолеГруппировка("БазоваяЕдиницаИзмерения", "Номенклатура", "БазоваяЕдиницаИзмерения", "Базовая единица измерения");
	//
	
	//Заполнить представление полей
	//УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Договор.Владелец","Заимодавец");
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаНачОстаток",   "Основного долга",       Истина, "ЧЦ=17; ЧДЦ=2", "НачОстаток", "Непогашенный остаток на начало периода");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаНачОстатокВозн",   "Вознагрождения",       Истина, "ЧЦ=17; ЧДЦ=2", "НачОстаток", "Непогашенный остаток на начало периода");
	
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаПолучения",   "Выдано траншей",       Истина, "ЧЦ=17; ЧДЦ=2", , );
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаПолученияВозн",   "Начислено вознагрождений",       Истина, "ЧЦ=17; ЧДЦ=2", , );
	
	
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаПогашения",   "Погашено осн.долга",       Истина, "ЧЦ=17; ЧДЦ=2", , );
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаПогашенияВозн",   "Погашено вознагрождения",       Истина, "ЧЦ=17; ЧДЦ=2",, );
		
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаКонОстаток",   "Основного долга",       Истина, "ЧЦ=17; ЧДЦ=2", "КонОстаток", "Непогашенный остаток на конец периода");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаКонОстатокВозн",   "Вознагрождения",       Истина, "ЧЦ=17; ЧДЦ=2", "КонОстаток", "Непогашенный остаток на конец периода");
	
	//отборы по умолчанию
    УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ТипСчетаучета",Перечисления.ТипыКредитовИЗаймов.Выданные);
    УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("СчетаУчетаДС",ПланыСчетов.Типовой.ДенежныеСредства);
    УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("СчетаУчетаКурсРазницПоПрих",ПланыСчетов.Типовой.РасходыПоВознаграждениям);
    УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("СчетаУчетаКурсРазницПоРасх",ПланыСчетов.Типовой.ДоходыОтКурсовойРазницы);
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ИсточникФинансирования");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Договор");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("ИсточникФинансирования");
	
	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Договор.Владелец",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);

КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно перередать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли