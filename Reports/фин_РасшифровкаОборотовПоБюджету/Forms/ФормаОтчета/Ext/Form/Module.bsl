
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	Если Параметры.Свойство("ОтборДляРасшифровки") Тогда
		Для Каждого СтрокаОтбор Из ЗначениеИзСтрокиВнутр(Параметры.ОтборДляРасшифровки) Цикл
			НовыйОтбор = ОтчетОбъект.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование=Истина;
			НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных[СтрокаОтбор.ВидСравнения];
			НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(СтрокаОтбор.Поле);
			НовыйОтбор.ПравоеЗначение = СтрокаОтбор.Значение;
		КонецЦикла;
	КонецЕсли;
	Если Параметры.Свойство("ИмяРегистра") Тогда
		ОтчетОбъект.КомпоновщикНастроек.ФиксированныеНастройки.ПараметрыДанных.УстановитьЗначениеПараметра("ИмяРегистра",Параметры.ИмяРегистра);
	КонецЕсли;
	Если Параметры.Свойство("ВидДанных") Тогда
		ОтчетОбъект.КомпоновщикНастроек.ФиксированныеНастройки.ПараметрыДанных.УстановитьЗначениеПараметра("ВидДанных",Параметры.ВидДанных);
		Если Параметры.ВидДанных = Перечисления.фин_ВидыДанныхОтчета.ФактическиеСУчетомПрогнозных И Параметры.Свойство("ГраницаФактическихИПрогнозныхДанных") Тогда
			
			Для Каждого ЭлементОтбора Из ОтчетОбъект.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы Цикл
				Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Период") Тогда
					ОтчетОбъект.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Удалить(ЭлементОтбора);
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			НовыйОтборГруппа = ОтчетОбъект.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			НовыйОтборГруппа.Использование = Истина;
			НовыйОтборГруппа.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;

			НовыйОтбор = НовыйОтборГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование=Истина;
			НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Прогноз");
			НовыйОтбор.ПравоеЗначение = Ложь;
			
			//НовыйОтборГруппаФакт = НовыйОтборГруппа.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			//НовыйОтборГруппаФакт.Использование = Истина;
			//НовыйОтборГруппаФакт.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;

//			НовыйОтбор = НовыйОтборГруппаФакт.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
//			НовыйОтбор.Использование=Истина;
//			НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
//			НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Прогноз");
//			НовыйОтбор.ПравоеЗначение = Ложь;

//			НовыйОтбор = НовыйОтборГруппаФакт.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
//			НовыйОтбор.Использование=Истина;
//			НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
//			НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Период");
//			НовыйОтбор.ПравоеЗначение = ?(Параметры.ГраницаФактическихИПрогнозныхДанных='00010101',КонецДня(ТекущаяДата()),КонецДня(Параметры.ГраницаФактическихИПрогнозныхДанных));
			
//			НовыйОтборГруппаПрогноз = НовыйОтборГруппа.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			НовыйОтборГруппаПрогноз = НовыйОтборГруппа.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			НовыйОтборГруппаПрогноз.Использование = Истина;
			НовыйОтборГруппаПрогноз.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;

			НовыйОтбор = НовыйОтборГруппаПрогноз.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование=Истина;
			НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Прогноз");
			НовыйОтбор.ПравоеЗначение = Истина;

			НовыйОтбор = НовыйОтборГруппаПрогноз.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйОтбор.Использование=Истина;
			НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
			НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПериодПланирования");
			НовыйОтбор.ПравоеЗначение = ?(Параметры.ГраницаФактическихИПрогнозныхДанных='00010101',КонецДня(ТекущаяДата()),КонецДня(Параметры.ГраницаФактическихИПрогнозныхДанных));
		КонецЕсли;
	КонецЕсли;
	ЗначениеВРеквизитФормы(ОтчетОбъект,"Отчет");
КонецПроцедуры


&НаСервере
Процедура ВычислитьСуммуВыделенныхЯчеекТабличногоДокументаВКонтекстеНаСервере()
	
	ПолеСумма = общ_ОтчетыВызовСервера.ВычислитьСуммуВыделенныхЯчеекТабличногоДокумента(
		Результат, КэшВыделеннойОбласти);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РезультатПриАктивизацииОбластиПодключаемый()
	
	НеобходимоВычислятьНаСервере = Ложь;
	общ_ОтчетыКлиент.ВычислитьСуммуВыделенныхЯчеекТабличногоДокумента(
		ПолеСумма, Результат, КэшВыделеннойОбласти, НеобходимоВычислятьНаСервере);
	
	Если НеобходимоВычислятьНаСервере Тогда
		ВычислитьСуммуВыделенныхЯчеекТабличногоДокументаВКонтекстеНаСервере();
	КонецЕсли;
	
	ОтключитьОбработчикОжидания("Подключаемый_РезультатПриАктивизацииОбластиПодключаемый");
	
КонецПроцедуры


&НаКлиенте
Процедура РезультатПриАктивизацииОбласти(Элемент)
	
	Если ТипЗнч(Результат.ВыделенныеОбласти) = Тип("ВыделенныеОбластиТабличногоДокумента") Тогда
		ИнтервалОжидания = ?(ПолучитьСкоростьКлиентскогоСоединения() = СкоростьКлиентскогоСоединения.Низкая, 1, 0.2);
		ПодключитьОбработчикОжидания("Подключаемый_РезультатПриАктивизацииОбластиПодключаемый", ИнтервалОжидания, Истина);
	КонецЕсли;
	
КонецПроцедуры
