#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем НП Экспорт;
Перем ИмяРегистраБухгалтерии Экспорт;
Перем мСписокСтруктурныхЕдиниц Экспорт;

//////////////////////////////////////////////////////////
// ФОРМИРОВАНИЕ ЗАГОЛОВКА ОТЧЕТА

// Формирует заголовок отчета
//
Функция ЗаголовокОтчета() Экспорт
	Если ВидЗадолжности = Истина Тогда
		ТекстЗаголовка = "Информация о состоянии дебиторской задолжности";
	Иначе
		ТекстЗаголовка = "Информация о состоянии кредиторской задолжности";
	КонецЕсли;
	
	Возврат ТекстЗаголовка;
КонецФункции // ЗаголовокОтчета()

// Функция возвращает строку описания настроек отборов
//
// Параметры
//  Нет параметров
//
// Возвращаемое значение:
//   Строка   – Строка описания настроек, выводимая в шапку отчета
//
Функция ПолучитьОписаниеНастроек()
	
	СтрокаОписания = "";
	
	//Если ПоВалюте Тогда
	//	СтрокаОписания = СтрокаОписания+?(ПустаяСтрока(СтрокаОписания),"","; ")+"Валюта="+Строка(Валюта);
	//КонецЕсли;
	
	// добавь описание своих настроек
	
	СтрокаОписания = ?(ПустаяСтрока(СтрокаОписания),"фильтры не заданы",СтрокаОписания);
	
	Возврат СтрокаОписания;
	
КонецФункции // ПолучитьОписаниеНастроек()

// Выводит заголовок отчета
//
// Параметры:
//	Нет.
//
Функция СформироватьЗаголовок() Экспорт
	
	ОписаниеПериода = ЗаголовокОтчета()+" на " + Формат(ДатаКон+86400, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения"""); 
	НазваниеОрганизации = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация");
	ОписаниеПериода = ОписаниеПериода +" "+ НазваниеОрганизации;
	
	НазваниеОрганизаций ="Отбор по: "+РаботаСДиалогами.ВыгрузитьСписокВСтроку(мСписокСтруктурныхЕдиниц,,,Ложь);//Организация.Наименование;
	
	Макет = ПолучитьМакет("Макет");
	
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	ЗаголовокОтчета.Параметры.Заголовок           = ОписаниеПериода;
	ЗаголовокОтчета.Параметры.НазваниеОрганизаций           = НазваниеОрганизаций;
	
	
	Возврат(ЗаголовокОтчета);
	
КонецФункции // СформироватьЗаголовок()

//////////////////////////////////////////////////////////
// СОХРАНЕНИЕ И ВОССТАНОВЛЕНИЕ ПАРАМЕТРОВ ОТЧЕТА

// Формирование структуры для сохранения настроек отчета.
// В структуру заносятся значимые реквизиты отчета
//
// Возвращаемое значение:
//    Структура
Функция СформироватьСтруктуруДляСохраненияНастроек() Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	СтруктураНастроек.Вставить("СписокОрганизаций", мСписокСтруктурныхЕдиниц);
	
	СтруктураНастроек.Вставить("ДатаНач"    , ДатаНач);
	СтруктураНастроек.Вставить("ДатаКон"    , ДатаКон);
	СтруктураНастроек.Вставить("ВидЗадолжности", ВидЗадолжности);
	
	Возврат СтруктураНастроек;
	
КонецФункции // СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок)

// Восстановление значимых реквизитов отчета из структуры
//
// Параметры:
//    Структура   - структура, которая содержит значения реквизитов отчета
Процедура ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Если ТипЗнч(СтруктураСНастройками) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	СписокОрганизацийСохраняемый = "";
	СтруктураСНастройками.Свойство("СписокОрганизаций", СписокОрганизацийСохраняемый);
	Если ТипЗнч(СписокОрганизацийСохраняемый) = Тип("СписокЗначений") Тогда
		мСписокСтруктурныхЕдиниц = СписокОрганизацийСохраняемый;
	Иначе
		мСписокСтруктурныхЕдиниц = Новый СписокЗначений;
	КонецЕсли;
	ПредставлениеСпискаСтруктурныхЕдиниц = РаботаСДиалогами.ВыгрузитьСписокВСтроку(мСписокСтруктурныхЕдиниц);
	//	СтруктураСНастройками.Свойство("Организация", Организация);
	
	СтруктураСНастройками.Свойство("ДатаНач"    , ДатаНач);
	СтруктураСНастройками.Свойство("ДатаКон"    , ДатаКон);
	
	Если СтруктураСНастройками.Свойство("ВидЗадолжности") Тогда
		
		СтруктураСНастройками.Свойство("ВидЗадолжности", ВидЗадолжности);
		
	Иначе
		
		ВидЗадолжности = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

//////////////////////////////////////////////////////////
// ПОСТРОЕНИЕ ОТЧЕТА

Процедура ОбработкаРасшифровкиОтчета(ВыбРасшифровка) Экспорт
	
	ПараметрыОтбораКарточкиСчета = ВыбРасшифровка["КарточкаСчета"];
	
	Отчет = Отчеты.КарточкаСчетаТиповой.Создать();
	
	ФормаОтчета = Отчет.ПолучитьФорму(, , Новый УникальныйИдентификатор());
	
	Попытка
		
		Отчет.Настроить(ПараметрыОтбораКарточкиСчета);
		
		ФормаОтчета.ПоказыватьЗаголовок = ПараметрыОтбораКарточкиСчета["ПоказыватьЗаголовок"];
		
		ФормаОтчета.ОбновитьОтчет();
		
	Исключение
		
	КонецПопытки;
	
	ФормаОтчета.Открыть();
	
КонецПроцедуры

Функция ЗаполнитьРасшифровкуСтроки(Область,РасшифровываемыйСчет,КонтрагентДляОтбора,ДоговорДляОтбора)
	ПараметрыКарточкиСчета = Новый Соответствие;
	ПараметрыКарточкиСчета.Вставить("Счет", РасшифровываемыйСчет);
	ПараметрыКарточкиСчета.Вставить("НачалоПериода", ДатаНач);
	ПараметрыКарточкиСчета.Вставить("КонецПериода", ДатаКон);
	ПараметрыКарточкиСчета.Вставить("СписокОрганизаций", мСписокСтруктурныхЕдиниц);
	ПараметрыКарточкиСчета.Вставить("ПоказыватьЗаголовок", Истина);
	
	ДополнительныеОтборы = Отчеты_БК.СоздатьТаблицуДляХраненияОтбора(Истина);
	
	СтрокаОтбора = ДополнительныеОтборы.ДОбавить();
	СтрокаОтбора.Использование = ?(ТипЗнч(КонтрагентДляОтбора)=Тип("Справочникссылка.Контрагенты"),Истина,Ложь);
	СтрокаОтбора.Имя = "Субконто1";
	СтрокаОтбора.ПутьКДанным = "Субконто1";
	СтрокаОтбора.ВидСравнения = ВидСравнения.Равно;
	СтрокаОтбора.Значение = КонтрагентДляОтбора;
	
	СтрокаОтбора = ДополнительныеОтборы.ДОбавить();
	СтрокаОтбора.Использование = ?(ТипЗнч(ДоговорДляОтбора)=Тип("СправочникСсылка.ДоговорыКонтрагентов"),Истина,Ложь);
	СтрокаОтбора.Имя = "Субконто2";
	СтрокаОтбора.ПутьКДанным = "Субконто2";
	СтрокаОтбора.ВидСравнения = ВидСравнения.Равно;
	СтрокаОтбора.Значение = ДоговорДляОтбора;
	
	//СтрокаОтбора = ДополнительныеОтборы.ДОбавить();
	//СтрокаОтбора.Использование = ?(ТипЗнч(ТипОперацииДляОтбора)=Тип("СправочникСсылка.ТипыОпераций"),Истина,Ложь);
	//СтрокаОтбора.Имя = "Субконто3";
	//СтрокаОтбора.ПутьКДанным = "Субконто3";
	//СтрокаОтбора.ВидСравнения = ВидСравнения.Равно;
	//СтрокаОтбора.Значение = ТипОперацииДляОтбора;
	
	ПараметрыКарточкиСчета.Вставить("Отбор", ДополнительныеОтборы);
	
	СписокРасшифровки = Новый Структура;
	СписокРасшифровки.Вставить("КарточкаСчета",ПараметрыКарточкиСчета);
	
	Возврат СписокРасшифровки;	
	
КонецФункции

// Формирование текста запроса
//
// Параметры
//  Нет
//
// Возвращаемое значение:
//   Строка   – Текст запроса
//
Функция ПолучитьТекстЗапроса(Тип,ВидОтчета)
	
	Если Тип=1 тогда
		Если ВидОтчета = 1 тогда
			ТекстЗапроса=
			"ВЫБРАТЬ
			|	Ит_Список.ID,
			|	Ит_Список.Счет,
			|	Ит_Список.Контрагент,
			|	Ит_Список.Контрагент.РНН КАК РНН,
			|	Ит_Список.Контрагент.ИдентификационныйКодЛичности КАК БИН,
			|	СвойстваЗнач.Значение КАК ОПФ,
			|	Ит_Список.Договор,
			|	Ит_Список.Комментарий,
			|	Ит_Список.Период,
			|	ВЫБОР
			|		КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
			|			ТОГДА Ит_Список.Договор.ДатаПогашения
			|		ИНАЧЕ Ит_Список.Договор.ДатаОкончанияДействияДоговора
			|	КОНЕЦ КАК ДатаОкончанияДействияДоговора,
			|	ВЫБОР
			|		КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
			|			ТОГДА ВЫБОР
			|					КОГДА Ит_Список.Период = NULL
			|							ИЛИ Ит_Список.Договор.ДатаПогашения = NULL
			|						ТОГДА 0
			|					ИНАЧЕ РАЗНОСТЬДАТ(Ит_Список.Период, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
			|				КОНЕЦ
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Ит_Список.Период = NULL
			|						ИЛИ Ит_Список.Договор.ДатаОкончанияДействияДоговора = NULL
			|					ТОГДА 0
			|				ИНАЧЕ РАЗНОСТЬДАТ(Ит_Список.Период, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
			|			КОНЕЦ
			|	КОНЕЦ КАК СрокЗадолжности,
			|	Ит_Список.НачСальдо,
			|	Ит_Список.КонСальдо,
			|	Ит_Список.Начислено,
			|	Ит_Список.Уплачено,
			|	Ит_Список.ПросроченнаяЗадолжность,
			|	ВЫБОР
			|		КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
			|			ТОГДА ВЫБОР
			|					КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
			|						ТОГДА Ит_Список.КонСальдо
			|					ИНАЧЕ 0
			|				КОНЕЦ
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
			|					ТОГДА Ит_Список.КонСальдо
			|				ИНАЧЕ 0
			|			КОНЕЦ
			|	КОНЕЦ КАК ПросроченнаяЗадолжность,
			|	ВЫБОР
			|		КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
			|			ТОГДА ВЫБОР
			|					КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
			|						ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
			|					ИНАЧЕ """"
			|				КОНЕЦ
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
			|					ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
			|				ИНАЧЕ """"
			|			КОНЕЦ
			|	КОНЕЦ КАК СрокПросроченнойЗадолжности,
			|	ВложенныйЗапрос.Область,
			|	Ит_Список.Договор.СуммаДоговора КАК СуммаПоДоговору,
			|	ВложенныйЗапрос.Район
			|ИЗ
			|	(ВЫБРАТЬ
			|		1 КАК ID,
			|		ТиповойОбороты.Счет КАК Счет,
			|		ТиповойОбороты.Субконто1 КАК Контрагент,
			|		ТиповойОбороты.Субконто2 КАК Договор,
			|		ТиповойОбороты.Субконто3 КАК Комментарий,
			|		ТиповойОбороты.Субконто2.ДатаДоговора КАК Период,
			|		ТиповойОбороты.СуммаНачальныйОстатокДт КАК НачСальдо,
			|		ТиповойОбороты.СуммаКонечныйОстатокДт КАК КонСальдо,
			|		ТиповойОбороты.СуммаОборотДт КАК Начислено,
			|		ТиповойОбороты.СуммаОборотКт КАК Уплачено,
			|		0 КАК ПросроченнаяЗадолжность
			|	ИЗ
			|		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В (&СписокСчетов), &мВидСубконтоКонтрагенты, Организация В (&СписокОрганизаций)) КАК ТиповойОбороты
			|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|				ОборотыДтКт.СчетКт КАК СчетКт,
			|				ОборотыДтКт.СубконтоКт1 КАК Контрагент,
			|				ОборотыДтКт.СубконтоКт2 КАК Договор,
			|				ОборотыДтКт.СубконтоКт3 КАК Комментарий,
			|				МАКСИМУМ(ОборотыДтКт.Период) КАК Период
			|			ИЗ
			|				РегистрБухгалтерии.Типовой.ОборотыДтКт(&ДатаНачГода, &ДатаКон, Месяц, , , СчетКт В (&Списоксчетов), &мВидСубконтоКонтрагенты, Организация В (&СписокОрганизаций)) КАК ОборотыДтКт
			|			
			|			СГРУППИРОВАТЬ ПО
			|				ОборотыДтКт.СчетКт,
			|				ОборотыДтКт.СубконтоКт1,
			|				ОборотыДтКт.СубконтоКт2,
			|				ОборотыДтКт.СубконтоКт3) КАК ДанныеПоПериодам
			|			ПО ТиповойОбороты.Счет = ДанныеПоПериодам.СчетКт
			|				И ТиповойОбороты.Субконто1 = ДанныеПоПериодам.Контрагент
			|				И ТиповойОбороты.Субконто2 = ДанныеПоПериодам.Договор
			|				И ТиповойОбороты.Субконто3 = ДанныеПоПериодам.Комментарий
			|	ГДЕ
			|		(ТиповойОбороты.СуммаКонечныйОстатокДт <> 0
			|				ИЛИ ТиповойОбороты.СуммаНачальныйОстатокДт <> 0)) КАК Ит_Список
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
			|			ЗначенияСвойствОбъектов.Значение КАК Значение,
			|			ЗначенияСвойствОбъектов.Объект КАК Контрагент
			|		ИЗ
			|			(ВЫБРАТЬ
			|				СвойстваОбъектов.Ссылка КАК Ссылка,
			|				СвойстваОбъектов.ПометкаУдаления КАК ПометкаУдаления
			|			ИЗ
			|				ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
			|			ГДЕ
			|				СвойстваОбъектов.НазначениеСвойства В(&НазначениеСвойств)) КАК СвойстваОбъектов
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
			|				ПО (ЗначенияСвойствОбъектов.Свойство = СвойстваОбъектов.Ссылка)
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НазначенияСвойствОбъектов КАК НазначенияСвойствОбъектов
			|				ПО (НазначенияСвойствОбъектов.Свойство = СвойстваОбъектов.Ссылка)
			|					И (ЗначенияСвойствОбъектов.Значение ЕСТЬ NULL)
			|		ГДЕ
			|			НазначенияСвойствОбъектов.Объект ЕСТЬ NULL
			|			И ЗначенияСвойствОбъектов.Свойство.Наименование = ""ОПФ"") КАК СвойстваЗнач
			|		ПО Ит_Список.Контрагент = СвойстваЗнач.Контрагент
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			КонтактнаяИнформация.Объект КАК Контрагент,
			|			ВЫБОР
			|				КОГДА КонтактнаяИнформация.Объект.СтранаРезидентства ЕСТЬ NULL
			|						ИЛИ КонтактнаяИнформация.Объект.СтранаРезидентства = ЗНАЧЕНИЕ(справочник.Классификаторстранмира.казахстан)
			|						ИЛИ КонтактнаяИнформация.Объект.СтранаРезидентства = ЗНАЧЕНИЕ(справочник.Классификаторстранмира.пустаяссылка)
			|					ТОГДА """"
			|				ИНАЧЕ КонтактнаяИнформация.Объект.СтранаРезидентства.Наименование + "" ""
			|			КОНЕЦ + КонтактнаяИнформация.Поле2 КАК Область,
			|			ВЫБОР
			|				КОГДА КонтактнаяИнформация.Объект.СтранаРезидентства ЕСТЬ NULL
			|						ИЛИ КонтактнаяИнформация.Объект.СтранаРезидентства = ЗНАЧЕНИЕ(справочник.Классификаторстранмира.казахстан)
			|						ИЛИ КонтактнаяИнформация.Объект.СтранаРезидентства = ЗНАЧЕНИЕ(справочник.Классификаторстранмира.пустаяссылка)
			|					ТОГДА """"
			|				ИНАЧЕ КонтактнаяИнформация.Объект.СтранаРезидентства.Наименование + "" ""
			|			КОНЕЦ + КонтактнаяИнформация.Поле3 КАК Район
			|		ИЗ
			|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
			|		ГДЕ
			|			КонтактнаяИнформация.Тип = &ТипАдрес
			|			И КонтактнаяИнформация.Вид = &ВидЮрАдрес) КАК ВложенныйЗапрос
			|		ПО Ит_Список.Контрагент = ВложенныйЗапрос.Контрагент
			|
			|УПОРЯДОЧИТЬ ПО
			|	Ит_Список.ID,
			|	Ит_Список.Счет.Порядок,
			|	Ит_Список.Контрагент.Наименование,
			|	Ит_Список.Договор,
			|	Ит_Список.Комментарий";
		иначе 
			текстЗапроса = "ВЫБРАТЬ
			               |	Ит_Список.Контрагент,
			               |	Ит_Список.Контрагент.РНН КАК РНН,
			               |	Ит_Список.Контрагент.ИдентификационныйКодЛичности КАК БИН,
			               |	СУММА(Ит_Список.КонСальдо) КАК КонСальдо,
			               |	Ит_Список.Контрагент.СтранаРезидентства.Код КАК КодСтраныРезиденства,
			               |	ВЫБОР
			               |		КОГДА (ВЫРАЗИТЬ(Ит_Список.Контрагент.КБЕ КАК СТРОКА(1))) = ""1""
			               |			ТОГДА ""0""
			               |		ИНАЧЕ ""1""
			               |	КОНЕЦ КАК РезидентНерезидент,
			               |	ВЫБОР
			               |		КОГДА РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) >= 1
			               |				И РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) < 2
			               |			ТОГДА ""Свыше 1го года""
			               |		КОГДА РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) >= 2
			               |				И РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) < 3
			               |			ТОГДА ""Свыше 2х лет""
			               |		КОГДА РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) >= 3
			               |				И РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) < 4
			               |			ТОГДА ""Свыше 3х лет""
			               |		КОГДА РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) >= 4
			               |				И РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) < 5
			               |			ТОГДА ""Свыше 4х лет""
			               |		КОГДА РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) >= 5
			               |			ТОГДА ""Свыше 5ти лет""
			               |	КОНЕЦ КАК ДнейЗадолженности,
			               |	Ит_Список.Комментарий,
			               |	Ит_Список.Счет,
			               |	Ит_Список.Договор
			               |ИЗ
			               |	(ВЫБРАТЬ
			               |		1 КАК ID,
			               |		ТиповойОбороты.Счет КАК Счет,
			               |		ТиповойОбороты.Субконто1 КАК Контрагент,
			               |		ТиповойОбороты.Субконто2 КАК Договор,
			               |		ТиповойОбороты.Субконто3 КАК Комментарий,
			               |		ТиповойОбороты.Субконто2.ДатаДоговора КАК Период,
			               |		ТиповойОбороты.СуммаНачальныйОстатокДт КАК НачСальдо,
			               |		ТиповойОбороты.СуммаКонечныйОстатокДт КАК КонСальдо,
			               |		ТиповойОбороты.СуммаОборотДт КАК Начислено,
			               |		ТиповойОбороты.СуммаОборотКт КАК Уплачено,
			               |		0 КАК ПросроченнаяЗадолжность
			               |	ИЗ
			               |		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В (&СписокСчетов), &мВидСубконтоКонтрагенты, Организация В (&СписокОрганизаций)) КАК ТиповойОбороты
			               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			               |				ОборотыДтКт.СчетКт КАК СчетКт,
			               |				ОборотыДтКт.СубконтоКт1 КАК Контрагент,
			               |				ОборотыДтКт.СубконтоКт2 КАК Договор,
			               |				ОборотыДтКт.СубконтоКт3 КАК Комментарий,
			               |				МАКСИМУМ(ОборотыДтКт.Период) КАК Период
			               |			ИЗ
			               |				РегистрБухгалтерии.Типовой.ОборотыДтКт(&ДатаНачГода, &ДатаКон, Месяц, , , СчетКт В (&Списоксчетов), &мВидСубконтоКонтрагенты, Организация В (&СписокОрганизаций)) КАК ОборотыДтКт
			               |			
			               |			СГРУППИРОВАТЬ ПО
			               |				ОборотыДтКт.СчетКт,
			               |				ОборотыДтКт.СубконтоКт1,
			               |				ОборотыДтКт.СубконтоКт2,
			               |				ОборотыДтКт.СубконтоКт3) КАК ДанныеПоПериодам
			               |			ПО ТиповойОбороты.Счет = ДанныеПоПериодам.СчетКт
			               |				И ТиповойОбороты.Субконто1 = ДанныеПоПериодам.Контрагент
			               |				И ТиповойОбороты.Субконто2 = ДанныеПоПериодам.Договор
			               |				И ТиповойОбороты.Субконто3 = ДанныеПоПериодам.Комментарий
			               |	ГДЕ
			               |		(ТиповойОбороты.СуммаКонечныйОстатокДт <> 0
			               |				ИЛИ ТиповойОбороты.СуммаНачальныйОстатокДт <> 0)) КАК Ит_Список
			               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
			               |			ЗначенияСвойствОбъектов.Значение КАК Значение,
			               |			ЗначенияСвойствОбъектов.Объект КАК Контрагент
			               |		ИЗ
			               |			(ВЫБРАТЬ
			               |				СвойстваОбъектов.Ссылка КАК Ссылка,
			               |				СвойстваОбъектов.ПометкаУдаления КАК ПометкаУдаления
			               |			ИЗ
			               |				ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
			               |			ГДЕ
			               |				СвойстваОбъектов.НазначениеСвойства В(&НазначениеСвойств)) КАК СвойстваОбъектов
			               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
			               |				ПО (ЗначенияСвойствОбъектов.Свойство = СвойстваОбъектов.Ссылка)
			               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НазначенияСвойствОбъектов КАК НазначенияСвойствОбъектов
			               |				ПО (НазначенияСвойствОбъектов.Свойство = СвойстваОбъектов.Ссылка)
			               |					И (ЗначенияСвойствОбъектов.Значение ЕСТЬ NULL )
			               |		ГДЕ
			               |			НазначенияСвойствОбъектов.Объект ЕСТЬ NULL 
			               |			И ЗначенияСвойствОбъектов.Свойство.Наименование = ""ОПФ"") КАК СвойстваЗнач
			               |		ПО Ит_Список.Контрагент = СвойстваЗнач.Контрагент
			               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			               |			КонтактнаяИнформация.Объект КАК Контрагент,
			               |			ВЫБОР
			               |				КОГДА КонтактнаяИнформация.Объект.СтранаРезидентства ЕСТЬ NULL 
			               |						ИЛИ КонтактнаяИнформация.Объект.СтранаРезидентства = ЗНАЧЕНИЕ(справочник.Классификаторстранмира.казахстан)
			               |						ИЛИ КонтактнаяИнформация.Объект.СтранаРезидентства = ЗНАЧЕНИЕ(справочник.Классификаторстранмира.пустаяссылка)
			               |					ТОГДА """"
			               |				ИНАЧЕ КонтактнаяИнформация.Объект.СтранаРезидентства.Наименование + "" ""
			               |			КОНЕЦ + КонтактнаяИнформация.Поле2 КАК Область
			               |		ИЗ
			               |			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
			               |		ГДЕ
			               |			КонтактнаяИнформация.Тип = &ТипАдрес
			               |			И КонтактнаяИнформация.Вид = &ВидЮрАдрес) КАК ВложенныйЗапрос
			               |		ПО Ит_Список.Контрагент = ВложенныйЗапрос.Контрагент
			               |ГДЕ
			               |	Ит_Список.КонСальдо >= 1000000
			               |	И РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) >= 1
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	Ит_Список.Контрагент,
			               |	Ит_Список.Контрагент.РНН,
			               |	ВЫБОР
			               |		КОГДА (ВЫРАЗИТЬ(Ит_Список.Контрагент.КБЕ КАК СТРОКА(1))) = ""1""
			               |			ТОГДА ""0""
			               |		ИНАЧЕ ""1""
			               |	КОНЕЦ,
			               |	Ит_Список.Контрагент.СтранаРезидентства.Код,
			               |	Ит_Список.Контрагент.ИдентификационныйКодЛичности,
			               |	ВЫБОР
			               |		КОГДА РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) >= 1
			               |				И РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) < 2
			               |			ТОГДА ""Свыше 1го года""
			               |		КОГДА РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) >= 2
			               |				И РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) < 3
			               |			ТОГДА ""Свыше 2х лет""
			               |		КОГДА РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) >= 3
			               |				И РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) < 4
			               |			ТОГДА ""Свыше 3х лет""
			               |		КОГДА РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) >= 4
			               |				И РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) < 5
			               |			ТОГДА ""Свыше 4х лет""
			               |		КОГДА РАЗНОСТЬДАТ(Ит_Список.Период, &ДатаКон, ГОД) >= 5
			               |			ТОГДА ""Свыше 5ти лет""
			               |	КОНЕЦ,
			               |	Ит_Список.Комментарий,
			               |	Ит_Список.Счет,
			               |	Ит_Список.Договор
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Ит_Список.Счет.Порядок,
			               |	Ит_Список.Контрагент.Наименование";
			
		КонецЕсли;
		
	Иначе
		ТекстЗапроса=
		"ВЫБРАТЬ
		|	Ит_Список.ID,
		|	Ит_Список.Счет,
		|	Ит_Список.Контрагент КАК Контрагент,
		|	Ит_Список.Контрагент.РНН КАК РНН,
		|	Ит_Список.Контрагент.ИдентификационныйКодЛичности КАК БИН,
		|	СвойстваЗнач.Значение КАК ОПФ,
		|	Ит_Список.Договор КАК Договор,
		|	Ит_Список.Комментарий,
		|	Ит_Список.Период,
		|	ВЫБОР
		|		КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|			ТОГДА Ит_Список.Договор.ДатаПогашения
		|		ИНАЧЕ Ит_Список.Договор.ДатаОкончанияДействияДоговора
		|	КОНЕЦ КАК ДатаОкончанияДействияДоговора,
		|	ВЫБОР
		|		КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|			ТОГДА ВЫБОР
		|					КОГДА Ит_Список.Период = NULL
		|							ИЛИ Ит_Список.Договор.ДатаПогашения = NULL
		|						ТОГДА 0
		|					ИНАЧЕ РАЗНОСТЬДАТ(Ит_Список.Период, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Ит_Список.Период = NULL
		|						ИЛИ Ит_Список.Договор.ДатаОкончанияДействияДоговора = NULL
		|					ТОГДА 0
		|				ИНАЧЕ РАЗНОСТЬДАТ(Ит_Список.Период, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|			КОНЕЦ
		|	КОНЕЦ КАК СрокЗадолжности,
		|	Ит_Список.НачСальдо,
		|	Ит_Список.КонСальдо,
		|	Ит_Список.Начислено,
		|	Ит_Список.Уплачено,
		|	Ит_Список.ПросроченнаяЗадолжность,
		|	ВЫБОР
		|		КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|			ТОГДА ВЫБОР
		|					КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|						ТОГДА Ит_Список.КонСальдо
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|					ТОГДА Ит_Список.КонСальдо
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК ПросроченнаяЗадолжность,
		|	ВЫБОР
		|		КОГДА Ит_Список.Договор.ВидДоговора = &ТипДоговора
		|			ТОГДА ВЫБОР
		|					КОГДА Ит_Список.Договор.ДатаПогашения <= &ДатаКон
		|						ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаПогашения, ДЕНЬ)
		|					ИНАЧЕ """"
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Ит_Список.Договор.ДатаОкончанияДействияДоговора <= &ДатаКон
		|					ТОГДА РАЗНОСТЬДАТ(&ДатаКон, Ит_Список.Договор.ДатаОкончанияДействияДоговора, ДЕНЬ)
		|				ИНАЧЕ """"
		|			КОНЕЦ
		|	КОНЕЦ КАК СрокПросроченнойЗадолжности,
		|	ВложенныйЗапрос.Область
		|ИЗ
		|	(ВЫБРАТЬ
		|		1 КАК ID,
		|		ТиповойОбороты.Счет КАК Счет,
		|		ТиповойОбороты.Субконто1 КАК Контрагент,
		|		ТиповойОбороты.Субконто2 КАК Договор,
		|		ТиповойОбороты.Субконто3 КАК Комментарий,
		|		ТиповойОбороты.Субконто2.ДатаДоговора КАК Период,
		|		0 КАК ПросроченнаяЗадолжность,
		|		ТиповойОбороты.СуммаНачальныйОстатокКт КАК НачСальдо,
		|		ТиповойОбороты.СуммаКонечныйОстатокКт КАК КонСальдо,
		|		ТиповойОбороты.СуммаОборотКт КАК Начислено,
		|		ТиповойОбороты.СуммаОборотДт КАК Уплачено
		|	ИЗ
		|		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В (&СписокСчетов), &мВидСубконтоКонтрагенты, Организация В (&СписокОрганизаций)) КАК ТиповойОбороты
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ОборотыДтКт.СчетДт КАК СчетДт,
		|				ОборотыДтКт.СубконтоДт1 КАК Контрагент,
		|				ОборотыДтКт.СубконтоДт2 КАК Договор,
		|				ОборотыДтКт.СубконтоДт3 КАК Комментарий,
		|				МАКСИМУМ(ОборотыДтКт.Период) КАК Период
		|			ИЗ
		|				РегистрБухгалтерии.Типовой.ОборотыДтКт(&ДатаНачГода, &ДатаКон, Месяц, СчетДт В (&Списоксчетов), &мВидСубконтоКонтрагенты, , , Организация В (&СписокОрганизаций)) КАК ОборотыДтКт
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ОборотыДтКт.СчетДт,
		|				ОборотыДтКт.СубконтоДт1,
		|				ОборотыДтКт.СубконтоДт2,
		|				ОборотыДтКт.СубконтоДт3) КАК ДанныеПоПериодам
		|			ПО ТиповойОбороты.Счет = ДанныеПоПериодам.СчетДт
		|				И ТиповойОбороты.Субконто1 = ДанныеПоПериодам.Контрагент
		|				И ТиповойОбороты.Субконто2 = ДанныеПоПериодам.Договор
		|				И ТиповойОбороты.Субконто3 = ДанныеПоПериодам.Комментарий
		|	ГДЕ
		|		(ТиповойОбороты.СуммаКонечныйОстатокКт <> 0
		|				ИЛИ ТиповойОбороты.СуммаНачальныйОстатокКт <> 0)) КАК Ит_Список
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ЗначенияСвойствОбъектов.Значение КАК Значение,
		|			ЗначенияСвойствОбъектов.Объект КАК Контрагент
		|		ИЗ
		|			(ВЫБРАТЬ
		|				СвойстваОбъектов.Ссылка КАК Ссылка,
		|				СвойстваОбъектов.ПометкаУдаления КАК ПометкаУдаления
		|			ИЗ
		|				ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
		|			ГДЕ
		|				СвойстваОбъектов.НазначениеСвойства В(&НазначениеСвойств)) КАК СвойстваОбъектов
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|				ПО (ЗначенияСвойствОбъектов.Свойство = СвойстваОбъектов.Ссылка)
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НазначенияСвойствОбъектов КАК НазначенияСвойствОбъектов
		|				ПО (НазначенияСвойствОбъектов.Свойство = СвойстваОбъектов.Ссылка)
		|					И (ЗначенияСвойствОбъектов.Значение ЕСТЬ NULL )
		|		ГДЕ
		|			НазначенияСвойствОбъектов.Объект ЕСТЬ NULL 
		|			И ЗначенияСвойствОбъектов.Свойство.Наименование = ""ОПФ"") КАК СвойстваЗнач
		|		ПО Ит_Список.Контрагент = СвойстваЗнач.Контрагент
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			КонтактнаяИнформация.Объект КАК Контрагент,
		|			ВЫБОР
		|				КОГДА КонтактнаяИнформация.Объект.СтранаРезидентства ЕСТЬ NULL 
		|						ИЛИ КонтактнаяИнформация.Объект.СтранаРезидентства = ЗНАЧЕНИЕ(справочник.Классификаторстранмира.казахстан)
		|						ИЛИ КонтактнаяИнформация.Объект.СтранаРезидентства = ЗНАЧЕНИЕ(справочник.Классификаторстранмира.пустаяссылка)
		|					ТОГДА """"
		|				ИНАЧЕ КонтактнаяИнформация.Объект.СтранаРезидентства.Наименование + "" ""
		|			КОНЕЦ + КонтактнаяИнформация.Поле2 КАК Область
		|		ИЗ
		|			РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ГДЕ
		|			КонтактнаяИнформация.Тип = &ТипАдрес
		|			И КонтактнаяИнформация.Вид = &ВидЮрАдрес) КАК ВложенныйЗапрос
		|		ПО Ит_Список.Контрагент = ВложенныйЗапрос.Контрагент
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ит_Список.ID,
		|	Ит_Список.Счет.Порядок,
		|	Ит_Список.Контрагент.Наименование,
		|	Договор,
		|	Ит_Список.Комментарий";
	Конецесли;
	
	Возврат ТекстЗапроса;
КонецФункции // ПолучитьТекстЗапроса()

Функция ПолучитьРезервы(Контрагент,Договор,СуммаРезерва, СписокСчетовРезерв, СписокИсклСчетовРезерв, Комментарий)
	
		Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТиповойОстаткиИОбороты.Счет КАК Счет,
		|	ТиповойОстаткиИОбороты.Субконто1 КАК Контрагент,
		|	ТиповойОстаткиИОбороты.Субконто2 КАК Договор,
		|	-ТиповойОстаткиИОбороты.СуммаКонечныйОстаток КАК Сумма,
		|	ТиповойОстаткиИОбороты.Субконто3
		|ИЗ
		|	РегистрБухгалтерии.Типовой.ОстаткиИОбороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			,
		|			,
		|			Счет В ИЕРАРХИИ (&СписокСчетов)
		|				И НЕ Счет = &СписокИсклСчетов,
		|			,
		|			Организация В (&СписокОрганизаций)) КАК ТиповойОстаткиИОбороты
		|ГДЕ
		|	ТиповойОстаткиИОбороты.Субконто1 = &Контрагент
		|	И ТиповойОстаткиИОбороты.Субконто2 = &Договор
		|	И ТиповойОстаткиИОбороты.Субконто3 = &Комментарий";

	
	Запрос.УстановитьПараметр("СписокОрганизаций", мСписокСтруктурныхединиц);
	Запрос.УстановитьПараметр("СписокСчетов", СписокСчетовРезерв);
	Запрос.УстановитьПараметр("СписокИсклСчетов", СписокИсклСчетовРезерв);
  	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Комментарий", Комментарий);

    		
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
  	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		 СуммаРезерва = ВыборкаДетальныеЗаписи.Сумма;
	КонецЦикла;
   	
КонецФункции

Функция ПолучитьДисконт(Контрагент,Договор,СуммаДисконта,СчетаДисконта)
	
		Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТиповойОстаткиИОбороты.Субконто1 КАК Контрагент,
		|	ТиповойОстаткиИОбороты.Субконто2 КАК Договор,
		|	-ТиповойОстаткиИОбороты.СуммаКонечныйОстаток КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Типовой.ОстаткиИОбороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			,
		|			,
		|			Счет В (&СчетаДисконта),
		|				
		|			,
		|			Организация В (&СписокОрганизаций)) КАК ТиповойОстаткиИОбороты
		|ГДЕ
		|	ТиповойОстаткиИОбороты.Субконто1 = &Контрагент
		|	И ТиповойОстаткиИОбороты.Субконто2 = &Договор";

	
	Запрос.УстановитьПараметр("СписокОрганизаций", мСписокСтруктурныхединиц);
	Запрос.УстановитьПараметр("СчетаДисконта", СчетаДисконта);
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
   		
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
  	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		 СуммаДисконта = ВыборкаДетальныеЗаписи.Сумма;
	КонецЦикла;
   	
КонецФункции


Функция ПолучитьГарантии(Контрагент,Договор,Комментарий)
	
	мВидСубконто = Новый массив;
	мВидСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
	мВидСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Договоры);
	мВидСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ТипыОпераций);
	мВидСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Гарантии);
	
	СписокЗабСчетов = Новый Массив;
	
	СписокЗабСчетов.Добавить(ПланыСчетов.Типовой.ВозможныеТребованияПоПринятымГарантиям);
	СписокЗабСчетов.Добавить(ПланыСчетов.Типовой.пИмущество);
	//СписокЗабСчетов.Добавить(ПланыСчетов.Типовой.СчетаТребованийПоПроизводнымФинИнструментам);
	//СписокЗабСчетов.Добавить(ПланыСчетов.Типовой.СчетаОбязательствПоГарантиям);
	//СписокЗабСчетов.Добавить(ПланыСчетов.Типовой.СчетаОбязательствПопредставлениюзаймов);
	//СписокЗабСчетов.Добавить(ПланыСчетов.Типовой.СчетаОбязПопроизвФинИнструментам);
	//СписокЗабСчетов.Добавить(ПланыСчетов.Типовой.СчетаМеморандумаАктивы);
	//СписокЗабСчетов.Добавить(ПланыСчетов.Типовой.СчетаМеморандумаПассивы);
	//СписокЗабСчетов.Добавить(ПланыСчетов.Типовой.СчетаМеморандумаПрочие);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Запрос.УстановитьПараметр("Договор",Договор);
	Запрос.УстановитьПараметр("Комментарий",Комментарий);
	Запрос.УстановитьПараметр("СписокЗабСчетов",СписокЗабСчетов);
	//Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("мВидСубконто", мВидСубконто);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТиповойОстаткиИОбороты.Субконто4 КАК Гарантия,
	|	ТиповойОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаОстаток
	|ИЗ
	|	РегистрБухгалтерии.Типовой.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			,
	|			Счет В ИЕРАРХИИ (&СписокЗабСчетов),
	|			&мВидСубконто,
	|			Субконто1 = &Контрагент
	|				И Субконто2 = &Договор
	|				И Субконто3 = &Комментарий) КАК ТиповойОстаткиИОбороты
	|Автоупорядочивание
	|";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
КонецФункции

// Вывод отчета в табличный документ
//
Процедура ВывестиОтчет(ДокументРезультат, Макет,ВидОтчета)
	
	СчетаДисконта = Новый массив;
	СчетаДисконта.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("1210.03"));
	СчетаДисконта.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("1210.04"));
    СчетаДисконта.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("2110.03"));
	СчетаДисконта.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("2110.04"));
	СчетаДисконта.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("1610.07"));
	СчетаДисконта.Добавить(ПланыСчетов.Типовой.НайтиПоКоду("1610.08"));
	
	СписокСчетовРезерв = ПланыСчетов.Типовой.ОценочныйРезервПодУбыткиОтОбесцененияКраткосрочнойДебиторскойЗадолженности;
	СписокИсклСчетовРезерв = ПланыСчетов.Типовой.РезервыПровизииНаПокрытиеУбытковПоЗаймампредоставленнымКлиентамСоб;

	мВидСубконтоКонтрагенты = Новый массив;
	мВидСубконтоКонтрагенты.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты);
	мВидСубконтоКонтрагенты.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Договоры);
	мВидСубконтоКонтрагенты.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ТипыОпераций);
	
	Если ВидЗадолжности Тогда
		Тип=1;
	Иначе
		Тип=2;
	Конецесли;
	
	ТаблицаСчетовДляРасчетаЗадолжности = Отчеты_ФХД.ПолучитьСписокСчетовДляРасчетаЗадолженности(Тип);
	
	//Центрсофт
	Если НЕ ТаблицаСчетовДляРасчетаЗадолжности = НЕОПРЕДЕЛЕНО Тогда  //Центрсофт
		
		СписокСчетовИсключения = Новый Массив;
		СписокСчетовИсключения.Добавить(Планысчетов.Типовой.КраткосрочнаяДебиторскаяЗадолженностьПредставительств);
		СписокСчетовИсключения.Добавить(Планысчетов.Типовой.КраткосрочнаяКредиторскаяЗадолженностьПредставительств);
		
		СписокСчетов = Новый Массив;
		
		Для каждого СтрокаТЧ ИЗ ТаблицаСчетовДляРасчетаЗадолжности Цикл
			Если СтрокаТЧ.Использование = Истина Тогда
				СписокСчетов.Добавить(СтрокаТЧ.Ссылка);	
			КонецЕсли;
		КонецЦикла;
		Если ВидОтчета=1 тогда
		ОблШапка = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОблСтрока = Макет.ПолучитьОбласть("Строка|Основная");
		ОблСтрокаГарантия = Макет.ПолучитьОбласть("Строка|Гарантия");
		
		ОблПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока|Основная");
		ОблПустаяСтрокаГарантия = Макет.ПолучитьОбласть("ПустаяСтрока|Гарантия");
	Иначе
		ОблШапка = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
	//	ОблСтрокаГарантия = Макет.ПолучитьОбласть("Строка|Гарантия");
		
		ОблПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		ОблПустаяСтрокаГарантия = Макет.ПолучитьОбласть("ПустаяСтрока");

	КонецЕсли;
	
	
		ОблИтого = Макет.ПолучитьОбласть("Итого");
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = ПолучитьТекстЗапроса(Тип,ВидОтчета);
		Запрос.УстановитьПараметр("ПредСотрудники", "Сотрудники");
		Запрос.УстановитьПараметр("ПредНалоги", "Налоги и отчисления");
		Запрос.УстановитьПараметр("СписокОрганизаций", мСписокСтруктурныхединиц);
		Запрос.УстановитьПараметр("мВидСубконтоКонтрагенты", мВидСубконтоКонтрагенты);
		Запрос.УстановитьПараметр("СписокСчетов", СписокСчетов);
		Запрос.УстановитьПараметр("ДатаНачГода", НачалоДня(НачалоГода(ДатаНач)));
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
		Запрос.УстановитьПараметр("ТипДоговора", Перечисления.ВидыДоговоровКонтрагентов.Займа);
		
		//ЦентрСофт
		Запрос.УстановитьПараметр("НазначениеСвойств",       ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Контрагенты);
		Запрос.УстановитьПараметр("ТипАдрес",       		Перечисления.ТипыКонтактнойИнформации.Адрес);
		Запрос.УстановитьПараметр("ВидЮрАдрес",       		справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
		
		
		//ЦентрСофт
		
		Состояние("Выполнение запроса");
		Результат = Запрос.Выполнить().Выбрать();
		НомПП=0;
		ИтНачСальдо=0;
		ИтКонСальдо=0;
		ИтНачислено=0; 
		ИтУплачено=0;
		ИтПросроченнаяЗадолжность=0;
		
		//
		Если ВидОтчета = 1 тогда
			ОблШапка.Параметры.ПредНачПериода = Формат(ДатаНач,"ДФ= ""дд.ММ.гггг""");
			ОблШапка.Параметры.ПредКонПериода = Формат(ДатаКон,"ДФ= ""дд.ММ.гггг""");
		КонецЕсли;
		ДокументРезультат.Вывести(ОблШапка, 1);
		Пока Результат.Следующий() Цикл
			если ВидОтчета = 1 тогда
				ИтНачСальдо=ИтНачСальдо+Результат.НачСальдо;
				
				ИтНачислено=ИтНачислено+Результат.Начислено; 
				ИТУплачено=ИТУплачено+Результат.Уплачено;
				ИтПросроченнаяЗадолжность=ИтПросроченнаяЗадолжность+Результат.ПросроченнаяЗадолжность;
			КонецЕсли;
			 ИтКонСальдо=ИтКонСальдо+Результат.КонСальдо;

			НомПП=НомПП+1;
			Если ВидОтчета =1 тогда
				СписокГарантий = ПолучитьГарантии(Результат.Контрагент,Результат.Договор,Результат.Комментарий);
				иначе СписокГарантий = новый СписокЗначений;
			КонецЕсли;
			ОблСтрока.Параметры.Заполнить(Результат);
			ОблСтрока.Параметры.НомПП=НомПП;
			
			ОблСтрока.Параметры.реструктуризация = Результат.Договор.НомерРеструктуризации;
			
			
			//Резервы и дисконт
			СуммаРезерва = 0;
			СуммаДисконта = 0;
			                 	
			ПолучитьРезервы(Результат.Контрагент,Результат.Договор,СуммаРезерва, СписокСчетовРезерв, СписокИсклСчетовРезерв, Результат.Комментарий);
			ПолучитьДисконт(Результат.Контрагент,Результат.Договор,СуммаДисконта,СчетаДисконта);
			
			ОблСтрока.Параметры.Резервы = СуммаРезерва;
			ОблСтрока.Параметры.Дисконт = СуммаДисконта;
           	//Резервы и дисконт
			
			
			// Параметры для расшифровки
			если ВидОтчета=1 тогда
				ОблСтрока.Параметры.Расшифровка = ЗаполнитьРасшифровкуСтроки(ОблСтрока,Результат.Счет, Результат.Контрагент, Результат.Договор);
				
			КонецЕсли;
			ДокументРезультат.Вывести(ОблСтрока);
			
			Если СписокГарантий.Количество() = 0 Тогда
				Если ВидОтчета = 1 тогда
				ДокументРезультат.Присоединить(ОблПустаяСтрокаГарантия);
				КонецЕсли;
			Иначе
				НомППГарантий=0;
				Для Каждого СтрокаТЗ из СписокГарантий Цикл
					НомППГарантий=НомППГарантий+1;
					ОблСтрокаГарантия.Параметры.СуммаГарантии = СтрокаТЗ.СуммаОстаток;
					ОблСтрокаГарантия.Параметры.ПредставлениеГаранта = ?(СтрокаТЗ.Гарантия<>НЕОПРЕДЕЛЕНО,СтрокаТЗ.Гарантия.Гарант,"");
					
					//17.03.20
					ОблСтрокаГарантия.Параметры.ВидОбеспечения = СтрокаТЗ.Гарантия.ВидОбеспечения;
					ОблСтрокаГарантия.Параметры.ОбщаяСтоимостьОбеспечения = СтрокаТЗ.Гарантия.СуммаГарантии;
					ОблСтрокаГарантия.Параметры.СправедливаяСтоимостьОбеспечения = СтрокаТЗ.Гарантия.РыночнаяСумма;
					//17.03.20

					Если НомППГарантий = 1 Тогда
						ДокументРезультат.Присоединить(ОблСтрокаГарантия);
					Иначе	
						ДокументРезультат.Вывести(ОблПустаяСтрока);
						ДокументРезультат.Присоединить(ОблСтрокаГарантия);
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		если ВидОтчета =1 тогда
			ОблИтого.Параметры.ИтНачСальдо=ИтНачСальдо;
						ОблИтого.Параметры.ИтНачислено=ИтНачислено;
			ОблИтого.Параметры.ИтУплачено=ИтУплачено;
		КонецЕсли;     
		ОблИтого.Параметры.ИтКонСальдо=ИтКонСальдо;

		ДокументРезультат.Вывести(ОблИтого);
		//Центрсофт
	Иначе
		СП = Новый СообщениеПользователю;
		СП.Текст = "Заполните список счетов для формирования отчета!";
		СП.Сообщить();
	КонецЕсли; //Центрсофт
	
КонецПроцедуры

// Формирование отчета
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Истина, ВысотаЗаголовка = 0,ВидОтчета) Экспорт
	
	Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
		Предупреждение("Дата начала периода не может быть больше даты конца периода", 60);
		Возврат;
	КонецЕсли;
	
	Если Не Отчеты_БК.ПроверкаЗаполенияСпискаСтруктурныхЕдиниц(мСписокСтруктурныхЕдиниц, ПредставлениеСпискаСтруктурныхЕдиниц) Тогда
		Возврат;
	КонецЕсли;
	
	ДокументРезультат.Очистить();
	Если ВидОтчета = 1 тогда
		Макет = ПолучитьМакет("Макет");
	Иначе
		Макет = получитьМакет("МОП");
	КонецЕсли;
	
	// Вывод заголовка отчета
	ОбластьЗаголовка = СформироватьЗаголовок();
	ВысотаЗаголовка  = ОбластьЗаголовка.ВысотаТаблицы;
	
	ДокументРезультат.Вывести(ОбластьЗаголовка, 1);
	
	/////////////////////////////////
	// здесь формируем отчет
	/////////////////////////////////
	ВывестиОтчет(ДокументРезультат, Макет,ВидОтчета);
	/////////////////////////////////
	
	// Зафиксируем заголовок отчета
	ДокументРезультат.ФиксацияСверху = ВысотаЗаголовка + 2;
	
	// Шапку таблицы печатаем на всех страницах
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаЗаголовка + 1,,ВысотаЗаголовка + 1);
	
	// Первую колонку не печатаем
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
	
	// Присвоим имя для сохранения параметров печати табличного документа
	ДокументРезультат.ИмяПараметровПечати = "ЗадолжностьДт/Кт "+ИмяРегистраБухгалтерии;
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета(), Строка(глТекущийПользователь));
	
КонецПроцедуры

//////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Настраивает отчет по заданным параметрам (например, для расшифровки)
//
Процедура Настроить(СтруктураПараметров) Экспорт
	
	Параметры = Новый Соответствие;
	
	Для каждого Элемент Из СтруктураПараметров Цикл
		Параметры.Вставить(Элемент.Ключ, Элемент.Значение);
	КонецЦикла;
	
	Организация = Параметры["Организация"];
	Если ЗначениеЗаполнено(Организация) Тогда
		мСписокСтруктурныхЕдиниц = Новый СписокЗначений;
		мСписокСтруктурныхЕдиниц.Добавить(Организация);
	Иначе
		мСписокСтруктурныхЕдиниц = Параметры["СписокОрганизаций"];
		Если мСписокСтруктурныхЕдиниц = Неопределено Тогда
			мСписокСтруктурныхЕдиниц = Новый СписокЗначений;
		КонецЕсли;
	КонецЕсли;
	ПредставлениеСпискаСтруктурныхЕдиниц = РаботаСДиалогами.ВыгрузитьСписокВСтроку(мСписокСтруктурныхЕдиниц,,,);	
	
	ДатаНач = Параметры["ДатаНач"];
	ДатаКон = Параметры["ДатаКон"];
	ВидЗадолжности = Параметры["ВидЗадолжности"];
	
	
КонецПроцедуры

//////////////////////////////////////////////////////////
// МОДУЛЬ ОБЪЕКТА

НП = Новый НастройкаПериода;
НП.ВариантНастройки = ВариантНастройкиПериода.Период;

ИмяРегистраБухгалтерии = "Типовой";

мСписокСтруктурныхЕдиниц = Новый СписокЗначений;

#КонецЕсли