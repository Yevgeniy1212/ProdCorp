////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если Клиент Тогда

Функция СформироватьЗапрос()
	
	мСчетаУчета = Новый Массив;
	
	Если ЗНАЧЕНИЕЗАПОЛНЕНО(СчетУчета) ТОгда
		мСчетаУчета.Добавить(СчетУчета);	
	Иначе
		мСчетаУчета.Добавить(ПланыСчетов.Типовой.КоммерческиеРесурсыЗерна);
	КонецЕсли;
	
	
	мВидыСубконто = Новый Массив;
	мВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Склады);
	мВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура);
	мВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Партии);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НачПериода", НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонПериода", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("мВидыСубконто", мВидыСубконто);
	Запрос.УстановитьПараметр("ВыбСчетУчета", мСчетаУчета);
	
	ТекстУсловия = "";
	ТекстДопУсловия = "";
	Союз = "";
	
	
	Если ОтборОрганизации Тогда
		
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Если ВидСравненияОрганизации = ВидСравнения.Равно Тогда
			ВидСравненияОрганизацииСтрокой = " = &Организация" 
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.НеРавно Тогда
			ВидСравненияОрганизацииСтрокой = " <> &Организация"
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.ВСписке Тогда
			ВидСравненияОрганизацииСтрокой = " В (&Организация)"
		Иначе
			ВидСравненияОрганизацииСтрокой = " НЕ В (&Организация)"
		КонецЕсли; 
		
		ТекстУсловия = ТекстУсловия + Союз + "Организация " + ВидСравненияОрганизацииСтрокой;
		ТекстДопУсловия = ТекстДопУсловия + Союз + "Организация " + ВидСравненияОрганизацииСтрокой;
		Союз         = " И ";
		
	КонецЕсли;
	
	Если ОтборСклад Тогда
		
		Запрос.УстановитьПараметр("Склад", Склад);
		
		Если ВидСравненияСклад = ВидСравнения.Равно Тогда
			ВидСравненияСкладСтрокой = " = &Склад" 
		ИначеЕсли ВидСравненияСклад = ВидСравнения.НеРавно Тогда
			ВидСравненияСкладСтрокой = " <> &Склад"
		ИначеЕсли ВидСравненияСклад = ВидСравнения.ВСписке Тогда
			ВидСравненияСкладСтрокой = " В (&Склад)"
		ИначеЕсли ВидСравненияСклад = ВидСравнения.НеВСписке Тогда
			ВидСравненияСкладСтрокой = " НЕ В (&Склад)"
		ИначеЕсли ВидСравненияСклад = ВидСравнения.ВСпискеПоИерархии 
		      ИЛИ ВидСравненияСклад = ВидСравнения.ВИерархии Тогда
			ВидСравненияСкладСтрокой = " В ИЕРАРХИИ (&Склад)"
		ИначеЕсли ВидСравненияСклад = ВидСравнения.НеВСпискеПоИерархии 
		      ИЛИ ВидСравненияСклад = ВидСравнения.НеВИерархии Тогда
			ВидСравненияСкладСтрокой = " НЕ В ИЕРАРХИИ (&Склад)"
		КонецЕсли; 
		
		ТекстУсловия = ТекстУсловия + Союз + "Субконто1 " + ВидСравненияСкладСтрокой;
		ТекстДопУсловия = ТекстДопУсловия + Союз + "СубконтоДт1 " + ВидСравненияСкладСтрокой;
		Союз         = " И ";
		
	КонецЕсли;
	
	
	Если ОтборНоменклатура Тогда
		
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		
		Если ВидСравненияНоменклатура = ВидСравнения.Равно Тогда
			ВидСравненияНоменклатураСтрокой = " = &Номенклатура" 
		ИначеЕсли ВидСравненияНоменклатура = ВидСравнения.НеРавно Тогда
			ВидСравненияНоменклатураСтрокой = " <> &Номенклатура"
		ИначеЕсли ВидСравненияНоменклатура = ВидСравнения.ВСписке Тогда
			ВидСравненияНоменклатураСтрокой = " В (&Номенклатура)"
		ИначеЕсли ВидСравненияНоменклатура = ВидСравнения.НеВСписке Тогда
			ВидСравненияНоменклатураСтрокой = " НЕ В (&Номенклатура)"
		ИначеЕсли ВидСравненияНоменклатура = ВидСравнения.ВСпискеПоИерархии 
		      ИЛИ ВидСравненияНоменклатура = ВидСравнения.ВИерархии Тогда
			ВидСравненияНоменклатураСтрокой = " В ИЕРАРХИИ (&Номенклатура)"
		ИначеЕсли ВидСравненияНоменклатура = ВидСравнения.НеВСпискеПоИерархии 
		      ИЛИ ВидСравненияНоменклатура = ВидСравнения.НеВИерархии Тогда
			ВидСравненияНоменклатураСтрокой = " НЕ В ИЕРАРХИИ (&Номенклатура)"
		КонецЕсли; 
		
		ТекстУсловия = ТекстУсловия + Союз + "Субконто2 " + ВидСравненияНоменклатураСтрокой;
		ТекстДопУсловия = ТекстДопУсловия + Союз + "СубконтоДт2 " + ВидСравненияНоменклатураСтрокой;
		Союз         = " И ";
		
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Вн_Запрос.ХПП КАК ХПП,
	|	Вн_Запрос.НОМЕНКЛАТУРА КАК НОМЕНКЛАТУРА,
	|	Вн_Запрос.ЗерноваяРасписка КАК ЗерноваяРасписка,
	|	Сумма(Вн_Запрос.КоличествоНачальныйОстатокДт) КАК КоличествоНачальныйОстатокДт,
	|	Сумма(Вн_Запрос.КоличествоКонечныйОстатокДт) КАК КоличествоКонечныйОстатокДт,
	|	Сумма(Вн_Запрос.КоличествоОборотДт) КАК КоличествоОборотДт,
	|	Сумма(Вн_Запрос.КоличествоОборотКт) КАК КоличествоОборотКт,
	|	Сумма(Вн_Запрос.Закуп) КАК Закуп,
	|	Сумма(Вн_Запрос.Перемещение) КАК Перемещение,
	|	Сумма(Вн_Запрос.Замена) КАК Замена,
	|	Сумма(Вн_Запрос.Перевод) КАК Перевод
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТиповойОстаткиИОбороты.Субконто1 КАК ХПП,
	|		ТиповойОстаткиИОбороты.Субконто2 КАК НОМЕНКЛАТУРА,
	|		ТиповойОстаткиИОбороты.Субконто3 КАК ЗерноваяРасписка,
	|		ТиповойОстаткиИОбороты.КоличествоНачальныйОстатокДт КАК КоличествоНачальныйОстатокДт,
	|		ТиповойОстаткиИОбороты.КоличествоКонечныйОстатокДт КАК КоличествоКонечныйОстатокДт,
	|		ТиповойОстаткиИОбороты.КоличествоОборотДт КАК КоличествоОборотДт,
	|		ТиповойОстаткиИОбороты.КоличествоОборотКт КАК КоличествоОборотКт,
	|		0 КАК Закуп,
	|		0 КАК Перемещение,
	|		0 КАК Замена,
	|		0 КАК Перевод
	|	ИЗ
	|		РегистрБухгалтерии.Типовой.ОстаткиИОбороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			,
	|			Счет В ИЕРАРХИИ(&выбСчетУчета),
	|			&мВидыСубконто,"+ТекстУсловия+") КАК ТиповойОстаткиИОбороты
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ТиповойОборотыДтКт.СубконтоДт1 КАК ХПП,
	|		ТиповойОборотыДтКт.СубконтоДт2 КАК Номенклатура,
	|		ТиповойОборотыДтКт.СубконтоДт3 КАК ЗероваяРасписка,
	|		0 КАК КоличествоНачальныйОстатокДт,
	|		0 КАК КоличествоКонечныйОстатокДт,
	|		0 КАК КоличествоОборотДт,
	|		0 КАК КоличествоОборотКт,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ТиповойОборотыДтКт.Регистратор) = ТИП(Документ.ур_ПоступлениеЗерна)
	|			ТОГДА ТиповойОборотыДтКт.КоличествоОборотДт
	|	    	ИНАЧЕ 0
	|		КОНЕЦ КАК Закуп,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ТиповойОборотыДтКт.Регистратор) = ТИП(Документ.ур_ПеремещениеЗерна)
	|			ТОГДА ТиповойОборотыДтКт.КоличествоОборотДт
	|	    	ИНАЧЕ 0
	|		КОНЕЦ КАК Перемещение,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ТиповойОборотыДтКт.Регистратор) = ТИП(Документ.ур_ПереоформлениеЗерновыхРасписок)
	|			ТОГДА ТиповойОборотыДтКт.КоличествоОборотДт
	|	    	ИНАЧЕ 0
	|		КОНЕЦ КАК Замена,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ТиповойОборотыДтКт.Регистратор) = ТИП(Документ.ур_ПереоформлениеРесурсов)
	|			ТОГДА ТиповойОборотыДтКт.КоличествоОборотДт
	|	    	ИНАЧЕ 0
	|		КОНЕЦ КАК Перевод
	|	ИЗ
	|		РегистрБухгалтерии.Типовой.ОборотыДтКт(&НачПериода, 
	|										   &КонПериода, 
	|											Регистратор,
	|											СчетДт В ИЕРАРХИИ (&ВыбСчетУчета),
	|											&мВидыСубконто,
	|											,
	|											,"+ТекстДопУсловия+"
	|											) КАК ТиповойОборотыДтКт
	|  ) КАК Вн_Запрос	
	|СГРУППИРОВАТЬ ПО Вн_Запрос.ХПП,
	|                 Вн_Запрос.НОМЕНКЛАТУРА,
	|                 Вн_Запрос.ЗерноваяРасписка
	|
	|ИТОГИ
	|	СУММА(КоличествоНачальныйОстатокДт),
	|	СУММА(КоличествоКонечныйОстатокДт),
	|	СУММА(КоличествоОборотДт),
	|	СУММА(КоличествоОборотКт)
	|ПО
	|	ОБЩИЕ,
	|	ХПП
	|АВТОУПОРЯДОЧИВАНИЕ";	
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапрос()

Функция ПолучитьВидПогашения(ХПП,ЗерноваяРасписка)
	
	мВидыСубконто = Новый Массив;
	мВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Склады);
	мВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Партии);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НачПериода", НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонПериода", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("мВидыСубконто", мВидыСубконто);
	Запрос.УстановитьПараметр("ВыбСчетУчета", СчетУчета);
	Запрос.УстановитьПараметр("ХПП", ХПП);
	Запрос.УстановитьПараметр("ЗерноваяРасписка", ЗерноваяРасписка);
	
	ТекстУсловия = "СубконтоКТ1 = &ХПП И СубконтоКТ2 = &ЗерноваяРасписка";
	Союз = " и ";
	
	Если ОтборОрганизации Тогда
		
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Если ВидСравненияОрганизации = ВидСравнения.Равно Тогда
			ВидСравненияОрганизацииСтрокой = " = &Организация" 
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.НеРавно Тогда
			ВидСравненияОрганизацииСтрокой = " <> &Организация"
		ИначеЕсли ВидСравненияОрганизации = ВидСравнения.ВСписке Тогда
			ВидСравненияОрганизацииСтрокой = " В (&Организация)"
		Иначе
			ВидСравненияОрганизацииСтрокой = " НЕ В (&Организация)"
		КонецЕсли; 
		
		ТекстУсловия = ТекстУсловия + Союз + "Организация " + ВидСравненияОрганизацииСтрокой;
		Союз         = " И ";
		
	КонецЕсли;
	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Вн_Запрос.Регистратор) = ТИП(Документ.ур_РеализацияЗерна)
	|			ТОГДА ""реал.""
	|	    	ИНАЧЕ 
	|				ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Вн_Запрос.Регистратор) = ТИП(Документ.ур_ПереоформлениеЗерновыхРасписок)
	|					ТОГДА ""замена""
	|	    			ИНАЧЕ 
	|						ВЫБОР
	|							КОГДА ТИПЗНАЧЕНИЯ(Вн_Запрос.Регистратор) = ТИП(Документ.ур_СписаниеЗерна)
	|							ТОГДА ""спис.""
	|	    					ИНАЧЕ
	|								ВЫБОР
	|									КОГДА ТИПЗНАЧЕНИЯ(Вн_Запрос.Регистратор) = ТИП(Документ.ур_ПереоформлениеРесурсов)
	|									ТОГДА ""перевод.""
	|	    							ИНАЧЕ
	|										ВЫБОР
	|											КОГДА ТИПЗНАЧЕНИЯ(Вн_Запрос.Регистратор) = ТИП(Документ.ур_ПеремещениеЗерна)
	|											ТОГДА ""перемещ.""
	|	    									ИНАЧЕ
	|											""""
	|                   					КОНЕЦ	
	|                   			КОНЕЦ	
	|                   	КОНЕЦ	
	|                КОНЕЦ
	|	КОНЕЦ КАК ВидПогашения
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ТиповойОборотыДтКт.Регистратор) КАК Регистратор
	|	ИЗ
	|		РегистрБухгалтерии.Типовой.ОборотыДтКт(&НачПериода, &КонПериода, Регистратор, , , СчетКт В ИЕРАРХИИ (&ВыбСчетУчета), &мВидыСубконто, "+ТекстУсловия+") КАК ТиповойОборотыДтКт
	|   ГДЕ ТиповойОборотыДтКт.КоличествоОборотКт > 0
	//|	Упорядочить ПО ТиповойОборотыДтКт.Регистратор Убыв 
	|	СГРУППИРОВАТЬ ПО
	|		ТиповойОборотыДтКт.СубконтоКт1,
	|		ТиповойОборотыДтКт.СубконтоКт2
	|	) КАК Вн_Запрос
	|";
	
	тз = Запрос.Выполнить().Выбрать();
	Если тз.Следующий() Тогда
		Возврат тз.ВидПогашения;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 

Процедура СформироватьОтчет(ДокументРезультат) Экспорт	
	
	ДокументРезультат.Очистить();
	
	Макет 		 = ПолучитьМакет("Макет");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	СтрокаОтбора = "Отбор:";
	
	Если ЗНАЧЕНИЕЗАПОЛНЕНО(СчетУчета) Тогда
		СтрокаОтбора = СтрокаОтбора + СчетУчета.Код+":"+СокрЛП(счетУчета.Наименование);
	Конецесли;
	
	// Информация об отборе.
	Если ОтборОрганизации Тогда
		
		СписокОтборПоОрганизации = "";
		
		Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
			Если Организация = Справочники.Организации.ПустаяСсылка() Тогда
			Иначе
				СписокОтборПоОрганизации = Организация
			КонецЕсли;
		Иначе
			Если Организация.Количество() = 0 Тогда
			Иначе	
				СписокОтборПоОрганизации =  Организация
			КонецЕсли; 
		КонецЕсли;
		//СтрокаОтбора = СтрокаОтбора + Символы.ПС + СписокОтбор;
		
	КонецЕсли;
	
	
	ОбластьЗаголовок.Параметры.СписокОтборПоОрганизации = СписокОтборПоОрганизации;
	//ОбластьШапка.Параметры.Отбор = СтрокаОтбора;
	
	ТекстПериода = Отчеты_БК.СформироватьСтрокуВыводаПараметровПоДатам(НачПериода, КонПериода);
	
	Если ЗНАЧЕНИЕЗАПОЛНЕНО(СчетУчета) Тогда
		ОбластьЗаголовок.Параметры.ПредставлениеЗаголовка = "по движению зерна "+СокрЛП(счетУчета.Наименование)+" "+ТекстПериода;
	Иначе
		ОбластьЗаголовок.Параметры.ПредставлениеЗаголовка = "по движению зерна "+ТекстПериода;
	КонецЕсли;

	ДокументРезультат.Вывести(ОбластьЗаголовок);
	ДокументРезультат.Вывести(ОбластьШапка);
	
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИТОГО = Макет.ПолучитьОбласть("ИТОГО");
	
	РЕзультат = СформироватьЗапрос();
	
	выборкаОбщие = РЕзультат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Общие");
    выборкаОбщие.Следующий();
	
	ВыборкаПоХПП = выборкаОбщие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ХПП");
	
	НомПП=0;
	
	Пока  ВыборкаПоХПП.Следующий() Цикл
		
		ВыборкаПоДокументам = ВыборкаПоХПП.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока  ВыборкаПоДокументам.Следующий() Цикл
			
			НомПП = НомПП+1;
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаПоДокументам);
			
			ОбластьСтрока.Параметры.НомПП = НомПП;
			ОбластьСтрока.Параметры.КодМСХ = ВыборкаПоДокументам.ЗерноваяРасписка.КодМСХ;
			ОбластьСтрока.Параметры.СерияНомерМСХ = ВыборкаПоДокументам.ЗерноваяРасписка.СерияНомерМСХ;
			ОбластьСтрока.Параметры.ДатаВыдачи = ВыборкаПоДокументам.ЗерноваяРасписка.ДатаВыдачи;
			ОбластьСтрока.Параметры.Поставщик = ВыборкаПоДокументам.ЗерноваяРасписка.УчастникЕЗХ;
			
			ОбластьСтрока.Параметры.ВидКультуры = ВыборкаПоДокументам.ЗерноваяРасписка.ВидКультуры;
			ОбластьСтрока.Параметры.Класс = ВыборкаПоДокументам.ЗерноваяРасписка.КлассностьКультуры;
			ОбластьСтрока.Параметры.ГодУрожая = ВыборкаПоДокументам.ЗерноваяРасписка.ГодУрожая;
			
			ОбластьСтрока.Параметры.Влажность = ВыборкаПоДокументам.ЗерноваяРасписка.Влажность;
			ОбластьСтрока.Параметры.СорнаяПримесь = ВыборкаПоДокументам.ЗерноваяРасписка.СорнаяПримесь;
			ОбластьСтрока.Параметры.ЗерноваяПримесь = ВыборкаПоДокументам.ЗерноваяРасписка.ЗерноваяПримесь;
			ОбластьСтрока.Параметры.Зараженность = ВыборкаПоДокументам.ЗерноваяРасписка.Зараженность;
			ОбластьСтрока.Параметры.Натура = ВыборкаПоДокументам.ЗерноваяРасписка.Натура;
			ОбластьСтрока.Параметры.Клейковина = ВыборкаПоДокументам.ЗерноваяРасписка.Клейковина;
			ОбластьСтрока.Параметры.Стекловидность = ВыборкаПоДокументам.ЗерноваяРасписка.Стекловидность;
			ОбластьСтрока.Параметры.Числопадений = ВыборкаПоДокументам.ЗерноваяРасписка.Числопадений;
			ОбластьСтрока.Параметры.Белок = ВыборкаПоДокументам.ЗерноваяРасписка.Белок;
			
			ОбластьСтрока.Параметры.Сорт = ВыборкаПоДокументам.ЗерноваяРасписка.СортСеменногоРесурса;
			ОбластьСтрока.Параметры.Репродукция = ВыборкаПоДокументам.ЗерноваяРасписка.Репродукция;
			ОбластьСтрока.Параметры.КлассПосевногоСтандарта = ВыборкаПоДокументам.ЗерноваяРасписка.КлассПосевногоСтандарта;
			
			ОбластьСтрока.Параметры.ВидПогашения = "";
			
			Если ВыборкаПоДокументам.КоличествоОборотКт > 0 Тогда
				 ОбластьСтрока.Параметры.ВидПогашения = ПолучитьВидПогашения(ВыборкаПоДокументам.ХПП,ВыборкаПоДокументам.ЗерноваяРасписка);
			КонецЕсли;
			
			ДокументРезультат.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		ОбластьИТОГО.Параметры.Заполнить(ВыборкаПоХПП);
		ОбластьИТОГО.Параметры.ПредставлениеИтого = "ИТОГО";
		ДокументРезультат.Вывести(ОбластьИТОГО);
	КонецЦикла;           	
	
		ОбластьИТОГО.Параметры.Заполнить(выборкаОбщие);
		ОбластьИТОГО.Параметры.ПредставлениеИтого = "Всего по области";
		ДокументРезультат.Вывести(ОбластьИТОГО);
	
КонецПроцедуры // СформироватьОтчет()

#КонецЕсли
