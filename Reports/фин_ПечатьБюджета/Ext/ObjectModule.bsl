Перем ЗаполнениеПараметров Экспорт;
Перем СохраненнаяНастройка Экспорт;
Перем ДополнительныеПараметры Экспорт;
Перем ПараметрыОформления Экспорт;
Перем СтруктураПеревода;
Перем КЭШ;
Перем ДоступныеПоказатели Экспорт;
Перем ДоступныеГруппировки Экспорт;
Перем ПереченьОсновныхРеквизитов Экспорт;
Перем ДополнительныеПредставления Экспорт;
Перем ДанныеРасшифровки Экспорт;
Перем ОтборыРасшифровки Экспорт;
Перем ТаблицаОтбора Экспорт;
Перем КонецПериодаПланирования Экспорт;
Перем НачалоПериодаПланирования Экспорт;
Перем ГраницаАктуальности Экспорт;
Перем Организация Экспорт;
Перем Сценарий Экспорт;
Перем Бюджет Экспорт;
Перем ТаблицаИтоговСтатей Экспорт;
Перем ДокументОбъектДляРедактирования Экспорт;

Процедура ЗаполнитьСпискиПоказателейИГруппировок() Экспорт
	мБюджет = ?(ЗначениеЗаполнено(Бюджет) И НЕ ЗначениеЗаполнено(Документ),Бюджет,Документ.ФормируемыйБюджет);
	фин_УправлениеОтчетамиБюджетирование.ЗаполнитьСпискиПоказателейИГруппировок(ЭтотОбъект,мБюджет);	
КонецПроцедуры

Функция ПроверитьЗаполнениеПараметров()
	Ошибки = Ложь;
	Если (НЕ (ВидФормы="Редактор" И ДокументОбъектДляРедактирования<>Неопределено)) И НЕ ЗначениеЗаполнено(Документ) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан документ, для которого производится печать!");
		Ошибки = Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Бюджет) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан бюджет!");
		Ошибки = Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Сценарий) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан сценарий!");
		Ошибки = Истина;
	КонецЕсли;
	Для Каждого СтрокаПоказатель Из Показатели Цикл
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.Показатель) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен показатель в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка показателей!");
			Ошибки = Истина;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаПоказатель Из Группировки Цикл
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.Измерение) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена группировка в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка группировок!");
			Ошибки = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаПоказатель.ВидГруппировки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен вид группировки в строке № "+Строка(СтрокаПоказатель.НомерСтроки)+" списка группировок!");
			Ошибки = Истина;
		КонецЕсли;
		Если СтрокаПоказатель.Измерение = Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта И Показатели.НайтиСтроки(Новый Структура("Показатель",Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма)).Количество()=0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя использовать группировку по валюте без отражения валютной суммы в отчете!");
			Ошибки = Истина;
		КонецЕсли;
	КонецЦикла;
	Если ОсновнаяГруппировка = Перечисления.фин_ФактическиеПоказателиБюджетирования.Валюта И Показатели.НайтиСтроки(Новый Структура("Показатель",Перечисления.фин_РесурсыДанныхБюджетирования.ВалютнаяСумма)).Количество()=0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя использовать разделение данных по валюте без отражения валютной суммы в отчете!");
		Ошибки = Истина;
	КонецЕсли;
	//Если УпорядочиваниеСтатей="КодСтрокиБюджета" И НЕ ВыводитьКодыСтрокБюджета Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя упорядочивать статьи по коду строки, если он не выводится в отчет!");
	//	Ошибки = Истина;
	//КонецЕсли;
	Если НЕ ВидФормы="Редактор" Тогда
		фин_УправлениеОтчетамиБюджетирование.ПроверитьКорректностьЦеновыхПоказателей(Показатели,Бюджет,Ошибки);
	КонецЕсли;
	Возврат НЕ Ошибки;	
КонецФункции

Функция ПолучитьТаблицуДанных(мПериодичность,Отбор,мГруппировки)
	ТекстРазрядность = "";
	ТекстРазрядностьКоличество = "";
	РазрядностьПланирования = Неопределено;
	
	ТекстИзмерения = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаГруппировки(мГруппировки,Показатели,ОсновнаяГруппировка,мПериодичность);
	ТекстИзмеренияФинал = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаГруппировки(мГруппировки,Показатели,ОсновнаяГруппировка,мПериодичность,,,,Истина);
	ТекстИзмеренияФиналБезИсточников = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаГруппировки(мГруппировки,Показатели,ОсновнаяГруппировка,мПериодичность,,,,Истина,Истина);
	ТекстИзмеренияСтатей = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаГруппировки(мГруппировки,Показатели,ОсновнаяГруппировка,мПериодичность,,,,Истина,,Истина);
	
	ТекстПоказатели = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаПоказатели(Показатели,ТекстРазрядность,ТекстРазрядностьКоличество,,,ВидФормы="Редактор");
	ТекстПоказателиСПсевдонимом = фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаПоказатели(Показатели,,,"Оборот",,ВидФормы="Редактор");
	ТекстФильтраОбороты = "";
	ТекстОтбораОбороты = "";
	ТекстОтбораИтоговыеОбороты = "";
	ТекстОтбораСтатьи = "";
	фин_УправлениеОтчетамиБюджетирование.ЗаполнитьТекстУсловийОтбора(Отбор,ТекстОтбораОбороты,,ТекстФильтраОбороты,Новый Структура("СтатьяБюджета"));
	фин_УправлениеОтчетамиБюджетирование.ЗаполнитьТекстУсловийОтбора(Отбор,ТекстОтбораИтоговыеОбороты,,"",,Новый Структура("СтатьяБюджета"));
	фин_УправлениеОтчетамиБюджетирование.ЗаполнитьТекстУсловийОтбора(Отбор,ТекстОтбораСтатьи,,,,,Истина);
	
	СписокИсключаемыхТиповВнутригрупповыхОборотов = Новый Массив;
	СписокИсключаемыхТиповВнутригрупповыхОборотов.Добавить(Перечисления.фин_ТипыВнутригрупповыхОборотовПоБюджету.ВнутригрупповыеОбороты);
	Если Группировки.НайтиСтроки(Новый Структура("Измерение",Перечисления.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение)).Количество()>0 ИЛИ ОсновнаяГруппировка=Перечисления.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение Тогда
		СписокИсключаемыхТиповВнутригрупповыхОборотов.Добавить(Перечисления.фин_ТипыВнутригрупповыхОборотовПоБюджету.ВнутригрупповыеОборотыНаУровнеПодразделения);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		СписокИсключаемыхТиповВнутригрупповыхОборотов.Добавить(Перечисления.фин_ТипыВнутригрупповыхОборотовПоБюджету.ВнутригрупповыеОборотыНаУровнеОрганизации);
	КонецЕсли;
	ВерсииБюджета = Новый Массив;
	ВерсииБюджета.Добавить(фин_ПроцедурыМеханизмовБюджетирования.ВерсияБюджета(Бюджет,НачалоПериодаПланирования));
	ВерсииБюджета.Добавить(Справочники.фин_ВерсииБюджетов.ПустаяСсылка());
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВерсииБюджета",				ВерсииБюджета);
	Запрос.УстановитьПараметр("СписокВГО",					СписокИсключаемыхТиповВнутригрупповыхОборотов);
	Запрос.УстановитьПараметр("ГраницаАктуальности",		?(ГраницаАктуальности='00010101','00010101',КонецДня(ГраницаАктуальности)));
	Запрос.УстановитьПараметр("Бюджет",						Бюджет);
	Запрос.УстановитьПараметр("Сценарий",					Сценарий);
	Запрос.УстановитьПараметр("Организация",				Организация);
	Запрос.УстановитьПараметр("НачалоПланирования",			НачалоПериодаПланирования);
	Запрос.УстановитьПараметр("ОкончаниеПланирования",		КонецПериодаПланирования);
	Запрос.УстановитьПараметр("Документ",					Документ);
	
	ТаблицаОтбора.Очистить();
	НС = ТаблицаОтбора.Добавить();
	НС.Поле = "СтатьяБюджета.Версия";
	НС.Значение = ВерсииБюджета;
	НС.ВидСравнения = "ВСписке";
	НС = ТаблицаОтбора.Добавить();
	НС.Поле = "СтатьяБюджета.ПометкаУдаления";
	НС.Значение = Ложь;
	НС.ВидСравнения = "Равно";
	НС = ТаблицаОтбора.Добавить();
	НС.Поле = "СтатьяБюджета.ПризнакВнутригрупповогоОборота";
	НС.Значение = СписокИсключаемыхТиповВнутригрупповыхОборотов;
	НС.ВидСравнения = "ВСписке";
	Если ГраницаАктуальности<>'00010101' Тогда
		НС = ТаблицаОтбора.Добавить();
		НС.Поле = "Период";
		НС.Значение = ГраницаАктуальности;
		НС.ВидСравнения = "МеньшеИЛИРавно";
	КонецЕсли;	НС = ТаблицаОтбора.Добавить();
	НС.Поле = "Бюджет";
	НС.Значение = Бюджет;
	НС.ВидСравнения = "Равно";
	
	
	// получим список показателей бюджета
	СписокФинансовыхПоказателей = Новый СписокЗначений;
	ЗапросПоказатели = Новый Запрос;
	ЗапросПоказатели.Текст = 
	"ВЫБРАТЬ
	|	СтатьиБюджета.ФинансовыйПоказатель
	|ИЗ
	|	Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
	|ГДЕ
	|	СтатьиБюджета.Владелец = &Владелец
	|	И НЕ СтатьиБюджета.ЭтоГруппа
	|	И НЕ СтатьиБюджета.ПометкаУдаления
	|	И СтатьиБюджета.Версия В (&Версии)
	|	И НЕ СтатьиБюджета.ПризнакВнутригрупповогоОборота В (&ВГО)";
	
	ЗапросПоказатели.УстановитьПараметр("Версии", ВерсииБюджета);
	ЗапросПоказатели.УстановитьПараметр("Владелец", Бюджет);
	ЗапросПоказатели.УстановитьПараметр("ВГО", СписокИсключаемыхТиповВнутригрупповыхОборотов);
	
	Результат = ЗапросПоказатели.Выполнить();
	СписокФинансовыхПоказателей.ЗагрузитьЗначения(Результат.Выгрузить().ВыгрузитьКолонку("Финансовыйпоказатель"));
	Запрос.УстановитьПараметр("Показатели",				СписокФинансовыхПоказателей);
	// параметры отбора
	ОтборыПоДополнительнымРазрезам = Новый Массив;
	Для Каждого СтрокаОтбор Из Отбор Цикл
		Если СтрокаОтбор.Путь="" ИЛИ СтрокаОтбор.ВидСравнения.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		Если Найти(СтрокаОтбор.Путь,"Разрез")<>0 Тогда
			ОтборыПоДополнительнымРазрезам.Добавить(СтрокаОтбор.Путь);
		КонецЕсли;
		Запрос.УстановитьПараметр("ПараметрОтбора"+Строка(Отбор.Индекс(СтрокаОтбор)),СтрокаОтбор.Значение);
	КонецЦикла;
	
	ТаблицаРасчетыПоФормулам = РегистрыНакопления.фин_ОборотыБюджетов.Обороты().СкопироватьКолонки();
	ТаблицаРасчетыПоФормулам.Колонки.ВалютнаяСумма.Имя 	= "ВалютнаяСуммаОборот";
	ТаблицаРасчетыПоФормулам.Колонки.СуммаСценария.Имя 	= "СуммаСценарияОборот";
	ТаблицаРасчетыПоФормулам.Колонки.СуммаУпр.Имя 		= "СуммаУпрОборот";
	ТаблицаРасчетыПоФормулам.Колонки.Количество.Имя 	= "КоличествоОборот";
	ТаблицаРасчетыПоФормулам.Колонки.Добавить("ЦенаУпрОборот",Новый ОписаниеТипов("Число"));
	ТаблицаРасчетыПоФормулам.Колонки.Добавить("ВалютнаяЦенаОборот",Новый ОписаниеТипов("Число"));
	ТаблицаРасчетыПоФормулам.Колонки.Добавить("ЦенаСценарияОборот",Новый ОписаниеТипов("Число"));
	
	ВалютаУпр = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
	
	ДокументИсточник = ?(ВидФормы="Редактор" И ДокументОбъектДляРедактирования<>Неопределено,ДокументОбъектДляРедактирования,Документ);
	
	Если (НЕ Документ.Проведен) ИЛИ ВидФормы="Корректировки" ИЛИ ВидФормы="Редактор" Тогда
		ТабличныеЧасти = Новый Массив;
		ТабличныеЧасти.Добавить(ДокументИсточник.ОборотыПоСтатьям);
		ТабличныеЧасти.Добавить(ДокументИсточник.ЗависимыеОбороты);
		ТабличныеЧасти.Добавить(ДокументИсточник.РасчетыПоМоделям);
		ТЧОбороты = Истина;
		Для Каждого ТабличнаяЧасть Из ТабличныеЧасти Цикл
			Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
				ЦенаПоСтроке = ?(ТЧОбороты,СтрокаТабличнойЧасти.Цена,?(СтрокаТабличнойЧасти.Количество=0,0,СтрокаТабличнойЧасти.Сумма/СтрокаТабличнойЧасти.Количество));
				НС = ТаблицаРасчетыПоФормулам.Добавить();
				ЗаполнитьЗначенияСвойств(НС,СтрокаТабличнойЧасти);
				НС.Валюта 					= СтрокаТабличнойЧасти.ВалютаОперации;
				НС.Сценарий 				= Сценарий;
				НС.Организация 				= Организация;
				НС.ДокументПланирования 	= Документ;
				НС.КоличествоОборот 		= СтрокаТабличнойЧасти.Количество;
				НС.ВалютнаяСуммаОборот 		= СтрокаТабличнойЧасти.Сумма;
				НС.ВалютнаяЦенаОборот		= ЦенаПоСтроке;
				Если Сценарий.Валюта = НС.Валюта Тогда
					НС.СуммаСценарияОборот 	= СтрокаТабличнойЧасти.Сумма;
					НС.ЦенаСценарияОборот 	= ЦенаПоСтроке;
				Иначе
					Если СтрокаТабличнойЧасти.Сумма>0 ИЛИ ЦенаПоСтроке>0 Тогда
						КурсВал 				= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(НС.Валюта,НС.ПериодПланирования,Сценарий);
						КурсСценария 			= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(Сценарий.Валюта,НС.ПериодПланирования,Сценарий);
					КонецЕсли;
					Если СтрокаТабличнойЧасти.Сумма>0 Тогда
						НС.СуммаСценарияОборот = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(СтрокаТабличнойЧасти.Сумма,НС.Валюта,Сценарий.Валюта,КурсВал.Курс,КурсСценария.Курс,КурсВал.Кратность,КурсСценария.Кратность);
					КонецЕсли;
					Если ЦенаПоСтроке>0 Тогда
						НС.ЦенаСценарияОборот = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(ЦенаПоСтроке,НС.Валюта,Сценарий.Валюта,КурсВал.Курс,КурсСценария.Курс,КурсВал.Кратность,КурсСценария.Кратность);
					КонецЕсли;
				КонецЕсли;
				Если ВалютаУпр = НС.Валюта Тогда
					НС.СуммаУпрОборот 		= СтрокаТабличнойЧасти.Сумма;
					НС.ЦенаУпрОборот 		= ЦенаПоСтроке;
				ИначеЕсли Сценарий.Валюта = ВалютаУпр Тогда
					НС.СуммаУпрОборот 		= НС.СуммаСценарияОборот; 
					НС.ЦенаУпрОборот 		= НС.ЦенаСценарияОборот; 
				Иначе
					Если СтрокаТабличнойЧасти.Сумма>0 ИЛИ ЦенаПоСтроке>0 Тогда
						КурсВал 				= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(НС.Валюта,НС.ПериодПланирования,Сценарий);
						КурсУпр 				= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ВалютаУпр,НС.ПериодПланирования,Сценарий);
					КонецЕсли;
					Если СтрокаТабличнойЧасти.Сумма>0 Тогда
						НС.СуммаУпрОборот 		= фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(СтрокаТабличнойЧасти.Сумма,НС.Валюта,ВалютаУпр,КурсВал.Курс,КурсУпр.Курс,КурсВал.Кратность,КурсУпр.Кратность);
					КонецЕсли;
					Если ЦенаПоСтроке>0 Тогда
						НС.ЦенаУпрОборот 		= фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(ЦенаПоСтроке,НС.Валюта,ВалютаУпр,КурсВал.Курс,КурсУпр.Курс,КурсВал.Кратность,КурсУпр.Кратность);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ТЧОбороты = Ложь;	
		КонецЦикла;
	КонецЕсли;
	
	Если ОтборыПоДополнительнымРазрезам.Количество()>0 Тогда
		Для Каждого ПутьОтбора Из ОтборыПоДополнительнымРазрезам Цикл
			ТаблицаРасчетыПоФормулам.Колонки.Добавить(ПутьОтбора,фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(Перечисления.фин_ФактическиеПоказателиБюджетирования[ПутьОтбора]).ТипЗначения);
		КонецЦикла;
		Для Каждого СтрокаТаблицы Из ТаблицаРасчетыПоФормулам Цикл
			Для Каждого ПутьОтбора Из ОтборыПоДополнительнымРазрезам Цикл
				СтрокаТаблицы[ПутьОтбора] = СтрокаТаблицы.ДополнительныеРазрезы[ПутьОтбора];
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВТ_Формулы",ТаблицаРасчетыПоФормулам);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ТекстФормированияВременныхТаблиц ="	
	|ВЫБРАТЬ
	|	Обороты.ФинансовыйПоказатель КАК Финансовыйпоказатель,
	|	Обороты.ДополнительныеРазрезы КАК ДополнительныеРазрезы"+фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаГруппировки(мГруппировки,Показатели,ОсновнаяГруппировка,мПериодичность,,,Истина)+ТекстПоказателиСПсевдонимом+"
	|ПОМЕСТИТЬ ВТ_ФормулыПредрасчет
	|ИЗ &ВТ_Формулы КАК Обороты
	//	|"+?(ТекстОтбораОбороты="" И ТекстФильтраОбороты="",""," ГДЕ ")+СтрЗаменить(ТекстОтбораОбороты,"ДополнительныеРазрезы.","")+?(ТекстОтбораОбороты="",""," И ")+СтрЗаменить(ТекстФильтраОбороты,"ДополнительныеРазрезы.","")+"
	|;
	|ВЫБРАТЬ
	|	Обороты.ФинансовыйПоказатель КАК Финансовыйпоказатель"+ТекстИзмерения+ДоработатьПолеЦены(ТекстПоказателиСПсевдонимом)+"
	|ПОМЕСТИТЬ ВТ_ПредварительныеОбороты
	|ИЗ РегистрНакопления.фин_ОборотыБюджетов.Обороты(,&ГраницаАктуальности, ,"+?(ВидФормы="Корректировки","ЛОЖЬ И ",?(ВидФормы="Редактор","ДокументПланирования<>&Документ И ",""))+"ВЫБОР КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА ИСТИНА ИНАЧЕ Организация = &Организация КОНЕЦ И 
	|																							Сценарий = &Сценарий И ПериодПланирования>=&НачалоПланирования И ПериодПланирования<=&ОкончаниеПланирования
	|																							И ФинансовыйПоказатель В (&Показатели)"+?(ТекстФильтраОбороты="",""," И "+ТекстФильтраОбороты)+") КАК Обороты
	|"+?(ТекстОтбораОбороты="",""," ГДЕ ")+ТекстОтбораОбороты+"
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Обороты.ФинансовыйПоказатель КАК Финансовыйпоказатель"+СтрЗаменить(ТекстИзмерения,"Обороты.ДополнительныеРазрезы","Набор")+фин_УправлениеОтчетамиБюджетирование.ПолучитьФрагментЗапросаПоказатели(Показатели,,,,,ВидФормы="Редактор")+"
	|ИЗ ВТ_ФормулыПредрасчет КАК Обороты
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.фин_КлассификаторНаборовДополнительныхРазрезов КАК Набор
	|		ПО Обороты.ДополнительныеРазрезы = Набор.Ссылка
	|"+?(ТекстОтбораОбороты="" И ТекстФильтраОбороты="",""," ГДЕ ")+СтрЗаменить(ТекстОтбораОбороты,"Обороты.ДополнительныеРазрезы","Набор")+?(ТекстОтбораОбороты="",""," И ")+СтрЗаменить(ТекстФильтраОбороты,"Обороты.ДополнительныеРазрезы","Набор")+"
	|
	|;
	|ВЫБРАТЬ
	|	Обороты.ФинансовыйПоказатель КАК Финансовыйпоказатель"+СтрЗаменить(ТекстИзмеренияФинал,"ДополнительныеРазрезы.","")+ТекстПоказателиСПсевдонимом+"
	|ПОМЕСТИТЬ ВТ_Обороты
	|ИЗ ВТ_ПредварительныеОбороты КАК Обороты";
	Запрос.Текст = ТекстФормированияВременныхТаблиц;
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ 
	|	СтатьиБюджета.Ссылка КАК СтатьяБюджета,
	|	ЕСТЬNULL(Обороты.ФинансовыйПоказатель,СтатьиБюджета.ФинансовыйПоказатель) КАК Финансовыйпоказатель,
	|	СтатьиБюджета.КодСтрокиБюджета КАК КодСтрокиБюджета"+ТекстПоказатели+СтрЗаменить(ТекстИзмеренияФиналБезИсточников,"ДополнительныеРазрезы.","")+ТекстИзмеренияСтатей+"
	|ИЗ
	|	Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Обороты КАК Обороты
	|		ПО СтатьиБюджета.ФинансовыйПоказатель = Обороты.ФинансовыйПоказатель
	|ГДЕ
	|	СтатьиБюджета.Владелец = &Бюджет И НЕ СтатьиБюджета.ЭтоГруппа И НЕ СтатьиБюджета.ПометкаУдаления И НЕ СтатьиБюджета.ПризнакВнутригрупповогоОборота В (&СписокВГО)  И СтатьиБюджета.Версия В (&ВерсииБюджета)"+?(ТекстОтбораИтоговыеОбороты="",""," И ")+ТекстОтбораИтоговыеОбороты+?(ТекстОтбораСтатьи="",""," И ")+ТекстОтбораСтатьи;
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
	Если ВидФормы="Редактор" Тогда
		МассивПериодов = Новый Массив;
		ПродолжительностьЦикла 		= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьПродолжительностьЦикла(Сценарий,НачалоПериодаПланирования);
		Сценарий_Периодичность 		= фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(Сценарий);
		Если ПродолжительностьЦикла >1 Тогда
			Для Инд=1 По ПродолжительностьЦикла Цикл
				НовПериод 				= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(НачалоПериодаПланирования,Сценарий_Периодичность,Инд-1);	
				МассивПериодов.Добавить(НовПериод);
			КонецЦикла;
		Иначе
			МассивПериодов.Добавить(НачалоПериодаПланирования);
		КонецЕсли;
		СтрокиПустые = ТаблицаДанных.НайтиСтроки(Новый Структура("ПериодПланирования",NULL));
		МассивСтрокКОбработке = Новый Массив;
		Для Каждого СтрокаПустая Из СтрокиПустые Цикл
			СтрокаПустая.ПериодПланирования = МассивПериодов[0];
			МассивСтрокКОбработке.Добавить(СтрокаПустая);
			Для Инд = 2 По МассивПериодов.Количество() Цикл
				НоваяСтрока = ТаблицаДанных.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаПустая);
				НоваяСтрока.ПериодПланирования = МассивПериодов[Инд-1];
				МассивСтрокКОбработке.Добавить(НоваяСтрока);
			КонецЦикла;
		КонецЦикла;
		МассивРазрезов = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПолучитьПолныйМассивИменРазрезов");
		Для Каждого СтрокаКОбработке Из МассивСтрокКОбработке Цикл
			Если ТаблицаДанных.Колонки.Найти("УправленческоеПодразделение")<>Неопределено И ДокументОбъектДляРедактирования.УровеньДетализацииБюджета = Перечисления.фин_УровниДетализацииБюджета.БюджетПодразделения Тогда
				СтрокаКОбработке.УправленческоеПодразделение = ДокументОбъектДляРедактирования.УправленческоеПодразделение;
			ИначеЕсли ТаблицаДанных.Колонки.Найти("Проект")<>Неопределено И ДокументОбъектДляРедактирования.УровеньДетализацииБюджета = Перечисления.фин_УровниДетализацииБюджета.БюджетПроекта Тогда
				СтрокаКОбработке.Проект = ДокументОбъектДляРедактирования.Проект;
			КонецЕсли;
			Для Каждого Колонка Из ТаблицаДанных.Колонки Цикл
				Если МассивРазрезов.Найти(Колонка.Имя)<>Неопределено Тогда
					СтрокаКОбработке[Колонка.Имя] = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПустоеЗначениеРазреза(Колонка.Имя);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТаблицаДанных;
КонецФункции

Функция ДоработатьПолеЦены(Знач Фрагмент)
	Фрагмент = СтрЗаменить(Фрагмент,"Обороты.ЦенаУпрОборот","ВЫБОР КОГДА Обороты.КоличествоОборот=0 ТОГДА 0 ИНАЧЕ Обороты.СуммаУпрОборот/Обороты.КоличествоОборот КОНЕЦ");
	Фрагмент = СтрЗаменить(Фрагмент,"Обороты.ВалютнаяЦенаОборот","ВЫБОР КОГДА Обороты.КоличествоОборот=0 ТОГДА 0 ИНАЧЕ Обороты.ВалютнаяСуммаОборот/Обороты.КоличествоОборот КОНЕЦ");
	Фрагмент = СтрЗаменить(Фрагмент,"Обороты.ЦенаСценарияОборот","ВЫБОР КОГДА Обороты.КоличествоОборот=0 ТОГДА 0 ИНАЧЕ Обороты.СуммаСценарияОборот/Обороты.КоличествоОборот КОНЕЦ");
	Возврат Фрагмент;
КонецФункции

Функция ПолучитьСКД(мГруппировки)
	//получаем схему компоновки данных
	СхемаКомпоновкиДанных=фин_УправлениеОтчетамиБюджетирование.ПолучитьСКД(ЭтотОбъект,мГруппировки,СтруктураПеревода,ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных"),КЭШ,,ВидФормы="Редактор");
	Возврат СхемаКомпоновкиДанных;
КонецФункции

Функция ПолучитьНастройкиСКД(ОтборТаблиц)
	Настройки = фин_УправлениеОтчетамиБюджетирование.ПолучитьНастройкиСКД(ЭтотОбъект,КомпоновщикНастроек,СтруктураПеревода,КЭШ,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(Сценарий),,ОтборТаблиц,ВидФормы = "Редактор",ВидФормы = "Редактор");
	Если ВидФормы = "Редактор" Тогда
		Для Каждого ЭлементСтруктуры Из Настройки.Структура Цикл
			Если ТипЗнч(ЭлементСтруктуры)=Тип("ТаблицаКомпоновкиДанных") Тогда
				Если ЭлементСтруктуры.Строки.Количество()=0 Тогда
					Продолжить;
				КонецЕсли;
				СтрокиТЧ = ЭлементСтруктуры.Строки[0];
				Пока СтрокиТЧ.Структура.Количество()>0 Цикл
					
					ЭлементУсловногоОформления = СтрокиТЧ.УсловноеОформление.Элементы.Добавить();
					Для Каждого Показатель Из Показатели Цикл
						Если ТипЗнч(Показатель.Показатель)=Тип("ПеречислениеСсылка.фин_РесурсыДанныхБюджетирования") Тогда
							ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
							ПолеОформления.Использование	= Истина;
							ПолеОформления.Поле				= Новый ПолеКомпоновкиДанных(фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(Показатель.Показатель));
						КонецЕсли;
					КонецЦикла;
					//ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона",WebЦвета.СветлоЖелтый);		  
					ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",Истина);
					
					СтрокиТЧ = СтрокиТЧ.Структура[0];
				КонецЦикла;
				
				ЭлементУсловногоОформления = СтрокиТЧ.УсловноеОформление.Элементы.Добавить();
				Для Каждого Показатель Из Показатели Цикл
					Если ТипЗнч(Показатель.Показатель)=Тип("ПеречислениеСсылка.фин_РесурсыДанныхБюджетирования") Тогда
						ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
						ПолеОформления.Использование	= Истина;
						ПолеОформления.Поле				= Новый ПолеКомпоновкиДанных(фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(Показатель.Показатель));
					КонецЕсли;
				КонецЦикла;
				ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона",WebЦвета.СветлоЖелтый);		  
				ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",Ложь);
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат Настройки;
КонецФункции

Процедура ДополнитьТаблицуИтогами(ТаблицаВнешнегоНабораДанных,Отбор)
	Если Бюджет.РучнаяНастройкаИтоговПоГруппам И фин_УправлениеОтчетамиБюджетирование.ИтогиТребуются(Группировки) Тогда
		ТаблицаИтоговСтатей = ТаблицаВнешнегоНабораДанных.СкопироватьКолонки();
		ПоляРасчетаИтогов = Новый Массив;
		ПоляРасчетаИтогов.Добавить("СтатьяБюджета");
		Если ЗначениеЗаполнено(ОсновнаяГруппировка) И ТипЗнч(ОсновнаяГруппировка)<>Тип("СправочникСсылка.фин_ДополнительныеРазрезыОтчетовПоБюджетам") Тогда
			ПоляРасчетаИтогов.Добавить(фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(ОсновнаяГруппировка));
		КонецЕсли;
		СтруктураСверткиДляФормул = ?(ЗначениеЗаполнено(ОсновнаяГруппировка),фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(ОсновнаяГруппировка),"");
		ИндексГруппировкиСтатьи = Неопределено;
		Для Каждого СтрокаГруппировки Из Группировки Цикл
			Если ТипЗнч(СтрокаГруппировки.Измерение)=Тип("СправочникСсылка.фин_ДополнительныеРазрезыОтчетовПоБюджетам") Тогда
				Продолжить;
			КонецЕсли;
			Имя = фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(СтрокаГруппировки.Измерение);
			Если Найти(СтруктураСверткиДляФормул,Имя)=0 И  СтрокаГруппировки.Измерение<>ОсновнаяГруппировка И (СтрокаГруппировки.ВидГруппировки=Перечисления.фин_ВидыГруппировокОтчета.Колонка ИЛИ СтрокаГруппировки.ВидГруппировки=Перечисления.фин_ВидыГруппировокОтчета.КолонкаСИерерахией) Тогда
				СтруктураСверткиДляФормул = СтруктураСверткиДляФормул+?(СтруктураСверткиДляФормул="","",",")+Имя;
				ПоляРасчетаИтогов.Добавить(Имя);
			КонецЕсли;
			Если СтрокаГруппировки.Измерение=Перечисления.фин_ДополнительныеРазрезыОтчетов.СтатьяБюджета И (СтрокаГруппировки.ВидГруппировки=Перечисления.фин_ВидыГруппировокОтчета.ГруппировкаСтрок ИЛИ СтрокаГруппировки.ВидГруппировки=Перечисления.фин_ВидыГруппировокОтчета.ГруппировкаСтрокСИерархией) Тогда
				ИндексГруппировкиСтатьи = СтрокаГруппировки.НомерСтроки;
			КонецЕсли;
		КонецЦикла;
		Если ИндексГруппировкиСтатьи<>Неопределено Тогда
			Для Каждого СтрокаГруппировки Из Группировки Цикл
				Если ТипЗнч(СтрокаГруппировки.Измерение)=Тип("СправочникСсылка.фин_ДополнительныеРазрезыОтчетовПоБюджетам") Тогда
					Продолжить;
				КонецЕсли;
				Имя = фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(СтрокаГруппировки.Измерение);
				Если Найти(СтруктураСверткиДляФормул,Имя)=0 И  ИндексГруппировкиСтатьи>СтрокаГруппировки.НомерСтроки И СтрокаГруппировки.Измерение<>ОсновнаяГруппировка И СтрокаГруппировки.Измерение<>Перечисления.фин_ДополнительныеРазрезыОтчетов.СтатьяБюджета И (СтрокаГруппировки.ВидГруппировки=Перечисления.фин_ВидыГруппировокОтчета.ГруппировкаСтрок ИЛИ СтрокаГруппировки.ВидГруппировки=Перечисления.фин_ВидыГруппировокОтчета.ГруппировкаСтрокСИерархией) Тогда
					СтруктураСверткиДляФормул = СтруктураСверткиДляФормул+?(СтруктураСверткиДляФормул="","",",")+Имя;
					ПоляРасчетаИтогов.Добавить(Имя);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ТекстФильтраОбороты = "";
		ТекстОтбораОбороты = "";
		фин_УправлениеОтчетамиБюджетирование.ЗаполнитьТекстУсловийОтбора(Отбор,ТекстОтбораОбороты,,ТекстФильтраОбороты,Новый Структура("СтатьяБюджета"));
		// параметры отбора
		СтруктураПараметровОтбора = Новый Структура;
		Для Каждого СтрокаОтбор Из Отбор Цикл
			Если СтрокаОтбор.Путь="" ИЛИ СтрокаОтбор.ВидСравнения.Пустая() Тогда
				Продолжить;
			КонецЕсли;
			СтруктураПараметровОтбора.Вставить("ПараметрОтбора"+Строка(Отбор.Индекс(СтрокаОтбор)),СтрокаОтбор.Значение);
		КонецЦикла;
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_СтатьиБюджета.Ссылка КАК СтатьяБюджета,
		|	""Сумма"" КАК ПолеРасчета,
		|	фин_СтатьиБюджета.Формула
		|ИЗ
		|	Справочник.фин_СтатьиБюджета КАК фин_СтатьиБюджета
		|ГДЕ
		|	фин_СтатьиБюджета.Владелец = &Бюджет
		|	И НЕ фин_СтатьиБюджета.ПометкаУдаления
		|	И фин_СтатьиБюджета.ЭтоГруппа
		|	И фин_СтатьиБюджета.Формула <> ЗНАЧЕНИЕ(Справочник.фин_формулыРасчетаФинансовыхПоказателей.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	фин_СтатьиБюджета.Ссылка,
		|	""Количество"",
		|	фин_СтатьиБюджета.ФормулаКоличество
		|ИЗ
		|	Справочник.фин_СтатьиБюджета КАК фин_СтатьиБюджета
		|ГДЕ
		|	фин_СтатьиБюджета.Владелец = &Бюджет
		|	И НЕ фин_СтатьиБюджета.ПометкаУдаления
		|	И фин_СтатьиБюджета.ЭтоГруппа
		|	И фин_СтатьиБюджета.ФормулаКоличество <> ЗНАЧЕНИЕ(Справочник.фин_формулыРасчетаФинансовыхПоказателей.ПустаяСсылка)";
		
		Запрос.УстановитьПараметр("Бюджет", Бюджет);
		
		Результат = Запрос.Выполнить();
		
		ТаблицаИтоговСтатей.Колонки.Добавить("Ранг",Новый ОписаниеТипов("Число"));
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		УпрВалюта = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			ТаблицаРасчетыПоФормулам = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьРасчетПоФормуле(ВыборкаДетальныеЗаписи.Формула,ВыборкаДетальныеЗаписи.ПолеРасчета,Сценарий,Организация,НачалоПериодаПланирования,КонецПериодаПланирования,?(ГраницаАктуальности='00010101','00010101',КонецДня(ГраницаАктуальности)),фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(Сценарий),ТекстОтбораОбороты,ТекстФильтраОбороты,СтруктураПараметровОтбора,СтруктураСверткиДляФормул);
			ТаблицаРасчетыПоФормулам.Колонки.СуммаУпрОборот.Имя = "СуммаУпр";
			ТаблицаРасчетыПоФормулам.Колонки.ВалютнаяСуммаОборот.Имя = "ВалютнаяСумма";
			ТаблицаРасчетыПоФормулам.Колонки.СуммаСценарияОборот.Имя = "СуммаСценария";
			ТаблицаРасчетыПоФормулам.Колонки.КоличествоОборот.Имя = "Количество";
			Для Каждого СтрокаРасчетов Из ТаблицаРасчетыПоФормулам Цикл
				Если Сценарий.Валюта = УпрВалюта Тогда
					СтрокаРасчетов.СуммаСценария = СтрокаРасчетов.СуммаУпр;
				Иначе
					ДатаКурса = ?(СтрокаРасчетов.ПериодПланирования='00010101',НачалоПериодаПланирования,СтрокаРасчетов.ПериодПланирования);
					КурсУпр = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(УпрВалюта,ДатаКурса,Сценарий);
					КурсСценария = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(Сценарий.Валюта,ДатаКурса,Сценарий);
					СтрокаРасчетов.СуммаСценария = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(СтрокаРасчетов.СуммаУпр,УпрВалюта,Сценарий.Валюта,КурсУпр.Курс,КурсСценария.Курс,КурсУпр.Кратность,КурсСценария.Кратность);
				КонецЕсли;
			КонецЦикла;
			Ранг = 0;
			ГруппаСтатьи = ВыборкаДетальныеЗаписи.СтатьяБюджета.Родитель;
			Пока ЗначениеЗаполнено(ГруппаСтатьи) Цикл
				Ранг = Ранг + 1;
				ГруппаСтатьи = ГруппаСтатьи.Родитель;
			КонецЦикла;
			Для Каждого СтрокаРасчет Из ТаблицаРасчетыПоФормулам Цикл
				НС = ТаблицаИтоговСтатей.Добавить();
				//НС = ТаблицаВнешнегоНабораДанных.Добавить();
				НС.СтатьяБюджета = ВыборкаДетальныеЗаписи.СтатьяБюджета;
				ЗаполнитьЗначенияСвойств(НС,СтрокаРасчет);
				НС.Ранг = Ранг;
			КонецЦикла;
		КонецЦикла;
		СтрокаСверткиИзмерения = "";
		СтрокаСверткиРесурсы = "";
		Для Каждого Колонка Из ТаблицаИтоговСтатей.Колонки  Цикл
			Если Найти(Колонка.Имя,"Сумма")=0 И Найти(Колонка.Имя,"Количество")=0  Тогда
				Если ПоляРасчетаИтогов.Найти(Колонка.Имя)<>Неопределено ИЛИ Колонка.Имя = "Ранг" Тогда
					СтрокаСверткиИзмерения = СтрокаСверткиИзмерения + ?(СтрокаСверткиИзмерения="","",",") + Колонка.Имя;
				КонецЕсли;
			Иначе
				СтрокаСверткиРесурсы = СтрокаСверткиРесурсы + ?(СтрокаСверткиРесурсы="","",",") + Колонка.Имя;
			КонецЕсли;
		КонецЦикла;
		ТаблицаИтоговСтатей.Свернуть(СтрокаСверткиИзмерения,СтрокаСверткиРесурсы);
		ТаблицаИтоговСтатей.Сортировать("Ранг ВОЗР");
		МассивРесурсы = Новый Массив;
		МассивРесурсы.Добавить("СуммаУпр");
		МассивРесурсы.Добавить("ВалютнаяСумма");
		МассивРесурсы.Добавить("СуммаСценария");
		МассивРесурсы.Добавить("Количество");
		Для Каждого СтрокаБазовая Из ТаблицаИтоговСтатей Цикл
			Для Инд = ТаблицаИтоговСтатей.Индекс(СтрокаБазовая)+2 По ТаблицаИтоговСтатей.Количество() Цикл
				СтрокаПроверочная = ТаблицаИтоговСтатей[Инд-1];
				Если СтрокаБазовая<>СтрокаПроверочная И СтрокаПроверочная.СтатьяБюджета.Родитель = СтрокаБазовая.СтатьяБюджета Тогда
					ОтборВыполнен = Истина;
					Для Каждого ПолеРазрез Из ПоляРасчетаИтогов Цикл
						Если ПолеРазрез = "СтатьяБюджета" Тогда
							Продолжить;
						КонецЕсли;
						Если СтрокаБазовая[ПолеРазрез]<>СтрокаПроверочная[ПолеРазрез] Тогда
							ОтборВыполнен = Ложь;
							Продолжить;
						КонецЕсли;
					КонецЦикла;
					Если НЕ ОтборВыполнен Тогда
						Продолжить;
					КонецЕсли;
					Для Каждого Ресурс Из МассивРесурсы Цикл
						Если ТаблицаИтоговСтатей.Колонки.Найти(Ресурс)<>Неопределено Тогда
							СтрокаБазовая[Ресурс] = СтрокаБазовая[Ресурс] - СтрокаПроверочная[Ресурс];
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		//Для Каждого СтрокаБазовая Из ТаблицаИтоговСтатей Цикл
		//	НС = ТаблицаВнешнегоНабораДанных.Добавить();
		//	ЗаполнитьЗначенияСвойств(НС,СтрокаБазовая);
		//КонецЦикла;
	КонецЕсли;
	Если Бюджет.РежимыРасчетаИтоговойСтрокиБюджета=Перечисления.фин_РежимыРасчетаИтоговойСтрокиБюджета.НеРассчитывать ИЛИ Бюджет.РежимыРасчетаИтоговойСтрокиБюджета=Перечисления.фин_РежимыРасчетаИтоговойСтрокиБюджета.ПустаяСсылка() Тогда
		Возврат;
	ИначеЕсли Бюджет.РежимыРасчетаИтоговойСтрокиБюджета=Перечисления.фин_РежимыРасчетаИтоговойСтрокиБюджета.ПоИтоговойФункции Тогда
		ТаблицаРезультат = Новый ТаблицаЗначений;
		ТаблицаРезультат.Колонки.Добавить("РезультатРасчетаИтога",Новый ОписаниеТипов("Число"));
		ТаблицаРезультат.Колонки.Добавить("КоличествоЗначений",Новый ОписаниеТипов("Число"));
		СтруктураИтога = Новый Структура;
		СтруктураСвертки = "СтатьяБюджета"+?(ЗначениеЗаполнено(ОсновнаяГруппировка),","+фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(ОсновнаяГруппировка),"");
		Если ЗначениеЗаполнено(ОсновнаяГруппировка) И ТипЗнч(ОсновнаяГруппировка)<>Тип("СправочникСсылка.фин_ДополнительныеРазрезыОтчетовПоБюджетам") Тогда
			ИмяОГ = фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(ОсновнаяГруппировка);
			ТаблицаРезультат.Колонки.Добавить(ИмяОГ);
			СтруктураИтога.Вставить(ИмяОГ);
		КонецЕсли;
		Для Каждого СтрокаГруппировки Из Группировки Цикл
			Если ТипЗнч(СтрокаГруппировки.Измерение)=Тип("СправочникСсылка.фин_ДополнительныеРазрезыОтчетовПоБюджетам") Тогда
				Продолжить;
			КонецЕсли;
			Имя = фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(СтрокаГруппировки.Измерение);
			Если СтруктураИтога.Свойство(Имя)=Ложь И СтрокаГруппировки.Измерение<>ОсновнаяГруппировка И (СтрокаГруппировки.ВидГруппировки=Перечисления.фин_ВидыГруппировокОтчета.Колонка ИЛИ СтрокаГруппировки.ВидГруппировки=Перечисления.фин_ВидыГруппировокОтчета.КолонкаСИерерахией) Тогда
				ТаблицаРезультат.Колонки.Добавить(Имя);
				СтруктураИтога.Вставить(Имя);
				СтруктураСвертки = СтруктураСвертки+","+Имя;
			КонецЕсли;
		КонецЦикла;
		ПоляСуммирования = "";
		СписокРесурсов = Новый Массив;
		Для Каждого СтрокаПоказатель Из Показатели Цикл
			Если ТипЗнч(СтрокаПоказатель.Показатель)=Тип("СправочникСсылка.фин_ДополнительныеРасчетныеПоляОтчетовПоБюджетам") Тогда
				Продолжить;
			КонецЕсли;
			Имя = фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(СтрокаПоказатель.Показатель);
 			Если Найти(Имя,"Цена")<>0 ИЛИ СписокРесурсов.Найти(Имя)<>Неопределено Тогда
			//Если СписокРесурсов.Найти(Имя)<>Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ПоляСуммирования = ПоляСуммирования+?(ПоляСуммирования="","",",")+Имя;
			ТаблицаРезультат.Колонки.Добавить(Имя,Новый ОписаниеТипов("Число"));
			СписокРесурсов.Добавить(Имя);
		КонецЦикла;
		КопияТаблицы = ТаблицаВнешнегоНабораДанных.Скопировать();
		КопияТаблицы.Свернуть(СтруктураСвертки,ПоляСуммирования);
		ИтоговаяФункцияБюджета = Бюджет.ИтоговаяФункция;
		Для Каждого СтрокаТаблицы Из КопияТаблицы Цикл
			Если СтрокаТаблицы.СтатьяБюджета.ИсключитьИзИтогов Тогда
				Продолжить;
			КонецЕсли;
			Новая = Ложь;
			Если СтруктураИтога.Количество()=0 Тогда
				Если ТаблицаРезультат.Количество()=0 Тогда
					Новая = Истина;
				КонецЕсли;
				ЗаполняемаяСтрока = ?(ТаблицаРезультат.Количество()=0,ТаблицаРезультат.Добавить(),ТаблицаРезультат[0]);
			Иначе
				ЗаполнитьЗначенияСвойств(СтруктураИтога,СтрокаТаблицы);
				НайденныеСтроки = ТаблицаРезультат.НайтиСтроки(СтруктураИтога);
				Если НайденныеСтроки.Количество()=0 Тогда
					Новая = Истина;
					ЗаполняемаяСтрока = ТаблицаРезультат.Добавить();
					ЗаполнитьЗначенияСвойств(ЗаполняемаяСтрока,СтруктураИтога);
				Иначе
					ЗаполняемаяСтрока = НайденныеСтроки[0];
				КонецЕсли;
			КонецЕсли;
			ЗаполняемаяСтрока.КоличествоЗначений = ЗаполняемаяСтрока.КоличествоЗначений + 1;
			Для Каждого Ресурс Из СписокРесурсов Цикл
				Если Новая ИЛИ (ИтоговаяФункцияБюджета<>Перечисления.фин_ИтоговыеФункции.Минимум И ИтоговаяФункцияБюджета<>Перечисления.фин_ИтоговыеФункции.Максимум) Тогда
					ЗаполняемаяСтрока[Ресурс] = ЗаполняемаяСтрока[Ресурс] + СтрокаТаблицы[Ресурс];
				ИначеЕсли ИтоговаяФункцияБюджета=Перечисления.фин_ИтоговыеФункции.Минимум Тогда
					ЗаполняемаяСтрока[Ресурс] = Мин(ЗаполняемаяСтрока[Ресурс],СтрокаТаблицы[Ресурс]);
				Иначе
					ЗаполняемаяСтрока[Ресурс] = Макс(ЗаполняемаяСтрока[Ресурс],СтрокаТаблицы[Ресурс]);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		Если Бюджет.ИтоговаяФункция<>Перечисления.фин_ИтоговыеФункции.Сумма И Бюджет.ИтоговаяФункция<>Перечисления.фин_ИтоговыеФункции.ПустаяСсылка() Тогда
			Для Каждого СтрокаРезультат Из ТаблицаРезультат Цикл
				Если Бюджет.ИтоговаяФункция=Перечисления.фин_ИтоговыеФункции.Количество Тогда
					Для Каждого Ресурс Из СписокРесурсов Цикл
						СтрокаРезультат[Ресурс] = СтрокаРезультат["КоличествоЗначений"];
					КонецЦикла;
				ИначеЕсли Бюджет.ИтоговаяФункция=Перечисления.фин_ИтоговыеФункции.Среднее Тогда
					Для Каждого Ресурс Из СписокРесурсов Цикл
						СтрокаРезультат[Ресурс] = СтрокаРезультат[Ресурс]/СтрокаРезультат["КоличествоЗначений"];
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Для Каждого СтрокаРезультат Из ТаблицаРезультат Цикл
			НС = ТаблицаВнешнегоНабораДанных.Добавить();
			НС.СтатьяБюджета = Справочники.фин_СтатьиБюджета.ПустаяСсылка();
			ЗаполнитьЗначенияСвойств(НС,СтрокаРезультат);
			Если ТаблицаВнешнегоНабораДанных.Колонки.Найти("ПериодПланирования")<>Неопределено И НС.ПериодПланирования = Неопределено Тогда
				НС.ПериодПланирования = '00010101';
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Бюджет.РежимыРасчетаИтоговойСтрокиБюджета=Перечисления.фин_РежимыРасчетаИтоговойСтрокиБюджета.ПоФормуле Тогда
		СтруктураСверткиДляФормул = ?(ЗначениеЗаполнено(ОсновнаяГруппировка),фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(ОсновнаяГруппировка),"");
		Для Каждого СтрокаГруппировки Из Группировки Цикл
			Если ТипЗнч(СтрокаГруппировки.Измерение)=Тип("СправочникСсылка.фин_ДополнительныеРазрезыОтчетовПоБюджетам") Тогда
				Продолжить;
			КонецЕсли;
			Имя = фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(СтрокаГруппировки.Измерение);
			Если Найти(СтруктураСверткиДляФормул,Имя)=0 И Найти(СтруктураСверткиДляФормул,Имя)=0 И СтрокаГруппировки.Измерение<>ОсновнаяГруппировка И (СтрокаГруппировки.ВидГруппировки=Перечисления.фин_ВидыГруппировокОтчета.Колонка ИЛИ СтрокаГруппировки.ВидГруппировки=Перечисления.фин_ВидыГруппировокОтчета.КолонкаСИерерахией) Тогда
				СтруктураСверткиДляФормул = СтруктураСверткиДляФормул+?(СтруктураСверткиДляФормул="","",",")+Имя;
			КонецЕсли;
		КонецЦикла;
		ТекстФильтраОбороты = "";
		ТекстОтбораОбороты = "";
		фин_УправлениеОтчетамиБюджетирование.ЗаполнитьТекстУсловийОтбора(Отбор,ТекстОтбораОбороты,,ТекстФильтраОбороты,Новый Структура("СтатьяБюджета"));
		// параметры отбора
		СтруктураПараметровОтбора = Новый Структура;
		Для Каждого СтрокаОтбор Из Отбор Цикл
			Если СтрокаОтбор.Путь="" ИЛИ СтрокаОтбор.ВидСравнения.Пустая() Тогда
				Продолжить;
			КонецЕсли;
			СтруктураПараметровОтбора.Вставить("ПараметрОтбора"+Строка(Отбор.Индекс(СтрокаОтбор)),СтрокаОтбор.Значение);
		КонецЦикла;
		
		Если Бюджет.УчетПоСумме И ЗначениеЗаполнено(Бюджет.Формула) Тогда
			ТаблицаРасчетыПоФормулам = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьРасчетПоФормуле(Бюджет.Формула,"Сумма",Сценарий,Организация,НачалоПериодаПланирования,КонецПериодаПланирования,?(ГраницаАктуальности='00010101','00010101',КонецДня(ГраницаАктуальности)),фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(Сценарий),ТекстОтбораОбороты,ТекстФильтраОбороты,СтруктураПараметровОтбора,СтруктураСверткиДляФормул);
			ТаблицаРасчетыПоФормулам.Колонки.СуммаУпрОборот.Имя = "СуммаУпр";
			ТаблицаРасчетыПоФормулам.Колонки.ВалютнаяСуммаОборот.Имя = "ВалютнаяСумма";
			ТаблицаРасчетыПоФормулам.Колонки.СуммаСценарияОборот.Имя = "СуммаСценария";
			ТаблицаРасчетыПоФормулам.Колонки.КоличествоОборот.Имя = "Количество";
			
			Для Каждого СтрокаРасчет Из ТаблицаРасчетыПоФормулам Цикл
				НС = ТаблицаВнешнегоНабораДанных.Добавить();
				НС.СтатьяБюджета = Справочники.фин_СтатьиБюджета.ПустаяСсылка();
				ЗаполнитьЗначенияСвойств(НС,СтрокаРасчет);
			КонецЦикла;
		КонецЕсли;
		
		Если Бюджет.УчетПоКоличеству И ЗначениеЗаполнено(Бюджет.ФормулаКоличество) Тогда
			ТаблицаРасчетыПоФормулам = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьРасчетПоФормуле(Бюджет.ФормулаКоличество,"Количество",Сценарий,Организация,НачалоПериодаПланирования,КонецПериодаПланирования,?(ГраницаАктуальности='00010101','00010101',КонецДня(ГраницаАктуальности)),фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(Сценарий),ТекстОтбораОбороты,ТекстФильтраОбороты,СтруктураПараметровОтбора,СтруктураСверткиДляФормул);
			ТаблицаРасчетыПоФормулам.Колонки.СуммаУпрОборот.Имя = "СуммаУпр";
			ТаблицаРасчетыПоФормулам.Колонки.ВалютнаяСуммаОборот.Имя = "ВалютнаяСумма";
			ТаблицаРасчетыПоФормулам.Колонки.СуммаСценарияОборот.Имя = "СуммаСценария";
			ТаблицаРасчетыПоФормулам.Колонки.КоличествоОборот.Имя = "Количество";
			
			Для Каждого СтрокаРасчет Из ТаблицаРасчетыПоФормулам Цикл
				НС = ТаблицаВнешнегоНабораДанных.Добавить();
				НС.СтатьяБюджета = Справочники.фин_СтатьиБюджета.ПустаяСсылка();
				ЗаполнитьЗначенияСвойств(НС,СтрокаРасчет);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Скомпоновать(ДокументРезультат,Отбор) Экспорт
	
	ДокументИсточник 			= ?(ВидФормы="Редактор" И ДокументОбъектДляРедактирования<>Неопределено,ДокументОбъектДляРедактирования,Документ);
	НачалоПериодаПланирования 	= ДокументИсточник.ПериодПланирования;
	КонецПериодаПланирования 	= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьГоризонтПланирования(НачалоПериодаПланирования,ДокументИсточник.Сценарий);
	ГраницаАктуальности 		= ДокументИсточник.Дата;
	Организация 				= ?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_БюджетированиеПоОрганизациям"),ДокументИсточник.Организация,Справочники.Организации.ПустаяСсылка());
	Сценарий 					= ДокументИсточник.Сценарий;
	Бюджет 						= ДокументИсточник.ФормируемыйБюджет;
	
	Если НЕ ПроверитьЗаполнениеПараметров() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Отчет не сформирован!");
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаОтбор Из Отбор Цикл
		СтрокаОтбор.Путь = ?(ТипЗнч(СтрокаОтбор.ПолеОтбора)=Тип("СправочникСсылка.фин_ДополнительныеРазрезыОтчетовПоБюджетам"),СтрокаОтбор.ПолеОтбора.Путь,фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(СтрокаОтбор.ПолеОтбора));
	КонецЦикла;
	
	//ВЫБОР СХЕМЫ КОМПОНОВКИ И НАСТРОЙКА ПОЛЕЙ НАБОРА ДАННЫХ
	мПериодичность = Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(Сценарий));
	Если Не ЗначениеЗаполнено(мПериодичность) Тогда
		мПериодичность = "Месяц";
	КонецЕсли;
	
	//Если Не ЗначениеЗаполнено(Параметр_Сценарий.Значение) Тогда
	//	Сообщить("Не указан сценарий!");
	//	Возврат;
	//КонецЕсли;
	
	Если мПериодичность="" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не задана периодичность сценария!");
		Возврат;
	КонецЕсли;
	
	ГенеральныйОтбор = Отбор.Скопировать(Новый Структура("Таблица",Справочники.фин_ТаблицыОтчетовПоБюджетам.ПустаяСсылка()));
	
	мГруппировки = фин_УправлениеОтчетамиБюджетирование.ПромежуточныеГруппировкиОтчета(Группировки,ОсновнаяГруппировка);
	ТаблицаВнешнегоНабораДанных = ПолучитьТаблицуДанных(мПериодичность,ГенеральныйОтбор,мГруппировки);
	ДополнитьТаблицуИтогами(ТаблицаВнешнегоНабораДанных,ГенеральныйОтбор);
	СхемаКомпоновкиДанных = ПолучитьСКД(мГруппировки);
	Настройки = ПолучитьНастройкиСКД(ГенеральныйОтбор);
	
	//ПОДГОТОВКА К ВЫПОЛНЕНИЮ - ФОРМИРОВАНИЕ МАКЕТА КОМПОНОВКИ
	Заголовок=фин_УправлениеМногоязычнымиОтчетами.ПолучитьПереводТермина(Бюджет,ЯзыкОтчета,,КЭШ)+Символы.ПС+фин_УправлениеМногоязычнымиОтчетами.ПолучитьПереводТермина("Сценарий",ЯзыкОтчета,,КЭШ)+": "+фин_УправлениеМногоязычнымиОтчетами.ПолучитьПереводТермина(Сценарий,ЯзыкОтчета,,КЭШ)+Символы.ПС+
	фин_УправлениеМногоязычнымиОтчетами.ПолучитьПереводТермина(фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьПериодСтрокой(НачалоПериодаПланирования,мПериодичность),ЯзыкОтчета,,КЭШ)+" - "+фин_УправлениеМногоязычнымиОтчетами.ПолучитьПереводТермина(фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьПериодСтрокой(КонецПериодаПланирования,мПериодичность),ЯзыкОтчета,,КЭШ);
	фин_УправлениеОтчетамиБюджетирование.ВыполнитьФормированиеОтчета(ЭтотОбъект,СхемаКомпоновкиДанных,КомпоновщикНастроек,Настройки,ДанныеРасшифровки,ДокументРезультат,ТаблицаВнешнегоНабораДанных,"фин_ПечатьБюджета",Заголовок,фин_ПроцедурыМеханизмовБюджетирования.ВерсииБюджетаЗаПериод(Бюджет,НачалоПериодаПланирования,КонецПериодаПланирования));	
	
КонецПроцедуры

ДоступныеПоказатели = Новый СписокЗначений;
ДоступныеГруппировки = Новый СписокЗначений;
ПереченьОсновныхРеквизитов = Новый Массив;
ПереченьОсновныхРеквизитов.Добавить("Документ");
ЗаполнениеПараметров = Новый Структура;
ЗаполнениеПараметров.Вставить("НачалоПериодаПланирования",НачалоМесяца(ТекущаяДата()));
ЗаполнениеПараметров.Вставить("КонецПериодаПланирования",КонецМесяца(ТекущаяДата()));
//ЗаполнениеПараметров.Вставить("ГраницаАктуальности",ТекущаяДата());
ЗаполнениеПараметров.Вставить("ЯзыкОтчета",фин_ОбщегоНазначенияСервер.ОсновнойЯзыкОтчетов());
ЗаполнениеПараметров.Вставить("ВидДанных",Перечисления.фин_ВидыДанныхОтчета.Фактические);
ЗаполнениеПараметров.Вставить("Периодичность",Перечисления.фин_Периодичность.Месяц);
ЗаполнениеПараметров.Вставить("ФиксацияКолонок",Перечисления.фин_ФиксируемыеКолонки.Первая);
ЗаполнениеПараметров.Вставить("ШиринаКолонкиПоказателя",12);
ЗаполнениеПараметров.Вставить("ШиринаКолонкиРеквизита",25);
ЗаполнениеПараметров.Вставить("ШиринаКолонкиСтатьиБюджета",25);
ЗаполнениеПараметров.Вставить("РасположениеИтоговОтчета",Перечисления.фин_РасположениеИтоговОтчета.Конец);

ДополнительныеПараметры = Новый Массив;
//ДополнительныеПараметры.Добавить("ГраницаАктуальности");
ДополнительныеПараметры.Добавить("Периодичность");
ДополнительныеПараметры.Добавить("ЯзыкОтчета");
ДополнительныеПараметры.Добавить("ПрименятьРазрядностьПланирования");

ПараметрыОформления = Новый Массив;
ПараметрыОформления.Добавить("ВыводитьКодыСтрокБюджета");
ПараметрыОформления.Добавить("УпорядочиваниеСтатей");
ПараметрыОформления.Добавить("ФиксацияКолонок");
ПараметрыОформления.Добавить("ШиринаКолонкиРеквизита");
ПараметрыОформления.Добавить("ШиринаКолонкиСтатьиБюджета");
ПараметрыОформления.Добавить("ШиринаКолонкиПоказателя");
ПараметрыОформления.Добавить("ВыводитьГруппыСтатейВнизу");
ПараметрыОформления.Добавить("ПоказателиВОднойКолонке");
ПараметрыОформления.Добавить("РасположениеИтоговОтчета");

ДанныеРасшифровкиМакета = Новый Соответствие;

КЭШ = Новый Соответствие;

ДополнительныеПредставления = Новый СписокЗначений;

ОтборыРасшифровки = Новый Массив;

ТаблицаОтбора = Новый ТаблицаЗначений;
ТаблицаОтбора.Колонки.Добавить("Поле");
ТаблицаОтбора.Колонки.Добавить("ВидСравнения");
ТаблицаОтбора.Колонки.Добавить("Значение");
