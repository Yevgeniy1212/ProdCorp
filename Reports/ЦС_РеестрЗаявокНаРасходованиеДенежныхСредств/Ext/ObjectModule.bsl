
#Если Клиент Тогда 

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	
КонецФункции // ПолучитьОсновнуюФорму()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	

КонецПроцедуры

// Выполняет настройку отчета по умолчанию для заданного вида отчета
//
// Параметры: 
// 
Процедура ЗаполнитьНачальныеНастройки(НаборИсточников,ТипОтчета) Экспорт
		
	
КонецПроцедуры

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//
//Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки = Ложь) Экспорт
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт
	
    ДокументРезультат.Очистить();
	ДокументРезультат.АвтоМасштаб = Истина;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	ЗаявкаНаРасходованиеСредств.Ссылка КАК Ссылка,
	//|	ЗаявкаНаРасходованиеСредств.Назначение,
	//|	ЗаявкаНаРасходованиеСредств.ВалютаДокумента КАК ВалютаДокумента,
	//|	ЗаявкаНаРасходованиеСредств.СуммаДокумента КАК СуммаДокумента,
	//|	ЗаявкаНаРасходованиеСредств.БанковскийСчетКасса.Банк КАК Банк,
	//|	ЗаявкаНаРасходованиеСредств.БанковскийСчетКасса.НомерСчета КАК НомерСчета,
	//|	ЗаявкаНаРасходованиеСредств.ИсточникФинансирования,
	//|	ЗаявкаНаРасходованиеСредств.Контрагент.НаименованиеПолное КАК Контрагент,
	//|	ЗаявкаНаРасходованиеСредств.РасчетнаяДатаПлатежа
	//|ИЗ
	//|	бизнеспроцесс.ЗаявкаНаРасходованиеСредств КАК ЗаявкаНаРасходованиеСредств
	//|ГДЕ
	//|	(ЗаявкаНаРасходованиеСредств.СостояниеЗаявкиЦС = &СостояниеЗаявкиЦС1
	//|			ИЛИ ЗаявкаНаРасходованиеСредств.СостояниеЗаявкиЦС = &СостояниеЗаявкиЦС2)
	//|	И ЗаявкаНаРасходованиеСредств.РасчетнаяДатаПлатежа МЕЖДУ &ДатаНач И &ДатаКон
	//|	И ЗаявкаНаРасходованиеСредств.Проведен
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ЗаявкаНаРасходованиеСредств.ВалютаДокумента.Код
	//|ИТОГИ
	//|	СУММА(СуммаДокумента)
	//|ПО
	//|	ОБЩИЕ,
	//|	ВалютаДокумента,
	//|	Ссылка";
	        "ВЫБРАТЬ
	 |	ЗадачаИсполнителяПоСогласованиюПлатежей.БизнесПроцесс КАК Ссылка,
	 |	ЗадачаИсполнителяПоСогласованиюПлатежей.БизнесПроцесс.Назначение КАК Назначение,
	 |	ЗадачаИсполнителяПоСогласованиюПлатежей.БизнесПроцесс.ВалютаДокумента КАК ВалютаДокумента,
	 |	ЗадачаИсполнителяПоСогласованиюПлатежей.БизнесПроцесс.СуммаДокумента КАК СуммаДокумента,
	 |	ЗадачаИсполнителяПоСогласованиюПлатежей.БизнесПроцесс.БанковскийСчетОрганизации.Банк КАК Банк,
	 |	ЗадачаИсполнителяПоСогласованиюПлатежей.БизнесПроцесс.БанковскийСчетОрганизации.НомерСчета КАК НомерСчета,
	 |	ЗадачаИсполнителяПоСогласованиюПлатежей.БизнесПроцесс.Контрагент.НаименованиеПолное КАК Контрагент,
	 |	ЗадачаИсполнителяПоСогласованиюПлатежей.БизнесПроцесс.ИсточникФинансирования КАК ИсточникФинансирования,
	 |	ЗадачаИсполнителяПоСогласованиюПлатежей.БизнесПроцесс.РасчетнаяДатаПлатежа КАК РасчетнаяДатаПлатежа
	 |ИЗ
	 |	Задача.ЗадачаИсполнителяПоСогласованиюПлатежей КАК ЗадачаИсполнителяПоСогласованиюПлатежей
	 |ГДЕ
	 |	ЗадачаИсполнителяПоСогласованиюПлатежей.ТочкаМаршрута = &ТочкаМаршрута
	 |	И ЗадачаИсполнителяПоСогласованиюПлатежей.БизнесПроцесс.РасчетнаяДатаПлатежа МЕЖДУ &ДатаНач И &ДатаКон
	 |	И НЕ ЗадачаИсполнителяПоСогласованиюПлатежей.Выполнена
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |	ЗадачаИсполнителяПоСогласованиюПлатежей.БизнесПроцесс.ВалютаДокумента.Код
	 |ИТОГИ
	 |	СУММА(СуммаДокумента)
	 |ПО
	 |	ОБЩИЕ,
	 |	ВалютаДокумента,
	 |	Ссылка"    ;
	Запрос.УстановитьПараметр("СостояниеЗаявкиЦС1", Перечисления.ЦС_СостоянияЗаявкиНаРасходованиеДенежныхСредств.Утвержден);
	Запрос.УстановитьПараметр("СостояниеЗаявкиЦС1", Перечисления.ЦС_СостоянияЗаявкиНаРасходованиеДенежныхСредств.Утвержден);
	Запрос.УстановитьПараметр("ТочкаМаршрута", БизнесПроцессы.СогласованиеПлатежей.ТочкиМаршрута.ПроверкаВР);
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	
	Макет = ПолучитьМакет("Макет");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.Дата = Формат(ДатаКон, "ДФ=dd.MM.yyyy");
	ДокументРезультат.Вывести(ОбластьШапка);

	Область1 = Макет.ПолучитьОбласть("ШапкаТаблицы|Верт1");
	Область2 = Макет.ПолучитьОбласть("ШапкаТаблицы|Верт2");
	Область3 = Макет.ПолучитьОбласть("ШапкаТаблицы|Верт3");
	
	Область4 = Макет.ПолучитьОбласть("Строка|Верт1");
	Область5 = Макет.ПолучитьОбласть("Строка|Верт2");
	Область6 = Макет.ПолучитьОбласть("Строка|Верт3");
	
	Область7 = Макет.ПолучитьОбласть("Итого|Верт1");
	Область8 = Макет.ПолучитьОбласть("Итого|Верт2");
	Область9 = Макет.ПолучитьОбласть("Итого|Верт3");
	
	НомерПП = 0;
	
	ВыборкаОбщийИтог = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	Если ВыборкаОбщийИтог.Следующий() Тогда
		// вывод шапки таблицы
		ДокументРезультат.Вывести(Область1);
		ВыборкаВалют = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ПоследняяКолонкаВалют = 3;
		Пока ВыборкаВалют.Следующий() Цикл
			Область2.Параметры.Валюта = ВыборкаВалют.ВалютаДокумента;
			ДокументРезультат.Присоединить(Область2);
			ПоследняяКолонкаВалют = ПоследняяКолонкаВалют + 1;
		КонецЦикла;
		ДокументРезультат.Область(ДокументРезультат.ВысотаТаблицы-1, 4, ДокументРезультат.ВысотаТаблицы-1, ПоследняяКолонкаВалют).Объединить();
		ДокументРезультат.Присоединить(Область3);
		// вывод строк
		ДетальнаяВыборка = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока ДетальнаяВыборка.Следующий() Цикл
			НомерПП = НомерПП + 1;
			Область4.Параметры.НомерПП = НомерПП;
			Область4.Параметры.Получатель = ДетальнаяВыборка.Контрагент;
			Область4.Параметры.Назначение = ДетальнаяВыборка.Назначение;
			Область4.Параметры.Документ = ДетальнаяВыборка.Ссылка;
			ДокументРезультат.Вывести(Область4);
			ВыборкаВалютДетали = ДетальнаяВыборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВалютаДокумента", "ВСЕ");
			Пока ВыборкаВалютДетали.Следующий() Цикл
				Область5.Параметры.Сумма = Формат(ВыборкаВалютДетали.СуммаДокумента, "ЧДЦ=2");
				ДокументРезультат.Присоединить(Область5);
			КонецЦикла;				
			Область6.Параметры.Счет = "" + ДетальнаяВыборка.Банк + " " + Прав(ДетальнаяВыборка.НомерСчета, 4);
			Область6.Параметры.ИсточникФинансирование = НРег(Лев(ДетальнаяВыборка.ИсточникФинансирования, 3));
			ДокументРезультат.Присоединить(Область6);
		КонецЦикла;
		// вывод итога
		ИтогВыборкаВалют = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВалютаДокумента", "ВСЕ");
		ДокументРезультат.Вывести(Область7);
		Пока ИтогВыборкаВалют.Следующий() Цикл
			Область8.Параметры.Сумма = "" + Формат(ИтогВыборкаВалют.СуммаДокумента, "ЧДЦ=2") + " " + ИтогВыборкаВалют.ВалютаДокумента;
			ДокументРезультат.Присоединить(Область8);
		КонецЦикла;		
		ДокументРезультат.Присоединить(Область9);
	КонецЕсли;
	
	// вывод подписей
	Область = Макет.ПолучитьОбласть("СтрокаПодпись");
	Для Каждого СтрокаПодпись Из Подписи Цикл
		Если СтрокаПодпись.Выбор Тогда
			Область.Параметры.Заполнить(СтрокаПодпись);
			ДокументРезультат.Вывести(Область);
		КонецЕсли;
	КонецЦикла;
	
	// вывод подвала
	Область = Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Исполнитель = Исполнитель;
	Область.Параметры.Телефон = ТелефонИсполнителя;
	ДокументРезультат.Вывести(Область);
	
	ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	
КонецПроцедуры

#КонецЕсли