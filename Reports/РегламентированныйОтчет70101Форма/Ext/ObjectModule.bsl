#Если Клиент Тогда
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит таблицу значений - состав показателей для передачи данных.
Перем мТаблицаПоказателейДляПередачиДанных Экспорт;

// Хранит имя пространства имен, использующееся
// для идентификации модели типов XDTO.
Перем ИмяПакета Экспорт;
// Хранит таблицу форматов
// для корректной выгрузки отчета в XML.
Перем мТаблицаФорматов Экспорт;
// имя файла по умолчанию для выгрузки
Перем ИмяФайлаВыгрузки Экспорт;

// Хранит перечень форм отчета.
Перем СписокФормДерева Экспорт;

// Хранит имя открытой формы отчета.
Перем мФорма Экспорт;

// Хранит макет, содержащий представление многострочных форм
// Равен "Неопределено", если отчет не содержит многострочных форм
//                       и соответственно в таких отчетах макет не создается
Перем мМакет Экспорт;

// Хранит признак скопированной формы.
Перем мСкопированаФорма Экспорт;

// Хранит ссылку на документ, хранящий данные отчета.
Перем мСохраненныйДок Экспорт;

// Хранит все данные отчета.
Перем мДеревоНастройкиСтраниц Экспорт;
Перем мСписокФормБезИерархии Экспорт;
Перем мСписокСохранения Экспорт;

// Переменные хранят границы
// периода построения отчета.
Перем мДатаНачалаПериодаОтчета Экспорт;
Перем мДатаКонцаПериодаОтчета  Экспорт;
Перем мПериодичность Экспорт;

// Переменная хранит год периода формирования отчета.
Перем мГод Экспорт;
Перем мКвартал Экспорт;
Перем ВидОтчета Экспорт;
Перем ВидРасшифровки Экспорт;

// Хранит название формы навигации.
// При открытии этой формы из других объектов
// также записываем имя в эту переменую.
Перем мФормаНавигации Экспорт;

// Хранит название основной формы.
Перем мОсновнаяФорма Экспорт;   

// Хранит имя выбранной формы отчета.
Перем мВыбраннаяФорма Экспорт;

// Хранит области, на которых последний раз 
// спозиционировался пользователь
// запоминаются при закрытии формы.
Перем мАктивныеОбласти Экспорт;

// Переменная хранит список страниц отчета на печать.
Перем мТаблицаСтраницНаПечать Экспорт;

//Переменная хранит значение константы ПоддержкаРаботыСоСтруктурнымиПодразделениями
Перем мПоддержкаРаботыСоСтруктурнымиПодразделениями Экспорт;

// Хранит список структурных единиц, по которым стоится отчет
Перем мСписокСтруктурныхЕдиниц Экспорт;

Перем ИДКонфигурации Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Записывает страницы для печати в мТаблицаСтраницНаПечать,
// и вызывают общую форму "ПечатьРегламентированныхОтчетов" для 
// печати уазанных листов формы
// Параметры:
//  ВидПечати - строка, задающая способ печати:
//              "ПоказатьБланк" - с предварительным просмтром;
//              "ПечататьСразу" - непосредственный вывод на печать.
//
Процедура Печать(ВидПечати) Экспорт 
	
	Перем СтруктураГруппы;            
	
	//очистим таблицу значений
	мТаблицаСтраницНаПечать.Очистить();
	Стр = 1;
	
	Если Не мФорма.ПризнакМногострочности Тогда 
				
		Для Каждого Страница Из мФорма.ЭлементыФормы["Панель" + мФорма.ИмяФормы].Страницы Цикл
			ТабДок = Новый ТабличныйДокумент;
			ИмяОбласти = Страница.Имя;
			ТекПТД = мФорма.ИмяФормы + "ПолеТабличногоДокумента" + Страница.Имя;
			ТекОбласть = мФорма.ЭлементыФормы[ТекПТД].ПолучитьОбласть(ИмяОбласти);
			ТабДок.Вывести(ТекОбласть);
			ТабДок.ОриентацияСтраницы = РегламентированнаяОтчетность.ОпределитьОриентациюСтраницы(мФорма.ИмяФормы,мСписокФормБезИерархии);
			ТабДок.ЧерноБелаяПечать   = Ложь;
			ТабДок.АвтоМасштаб = Истина;
		
			Строка = мТаблицаСтраницНаПечать.Добавить();
			Строка.ПолеТабличногоДокумента = ТабДок;
			Строка.ИмяЛиста = "Страница № " + Строка(Стр);
			Строка.ИмяЛистаДляЗаписи = "Рег. отчет " + мФормаНавигации.Заголовок+ " - стр. " + Строка(Стр);
			Стр = Стр + 1;
		КонецЦикла;
	
	Иначе
	    
	    Пока Стр < мФорма.ВсегоСтраниц + 1 Цикл		 
		 	Для Каждого Страница Из мФорма.ЭлементыФормы["Панель" + мФорма.ИмяФормы].Страницы Цикл
			 
			 	ТабДок = Новый ТабличныйДокумент;
			 	ИмяГруппы = Страница.Имя;
				мМногострочнаяСтруктура = РегламентированнаяОтчетность.ПолучитьМногострочнуюСтруктуру(мФорма.ИмяФормы,мСписокФормБезИерархии);
			 	мМногострочнаяСтруктура.Свойство(ИмяГруппы, СтруктураГруппы);		
			 	РегламентированнаяОтчетность.ВывестиРазделВТабличныйДокументФормы(мФорма, Стр,ИмяГруппы, СтруктураГруппы,мФорма.ИмяФормы);
			 	ТекущееТабПоле = мФорма.ИмяФормы + "ПолеТабличногоДокумента" + ИмяГруппы;
			 	ТабДок.Вывести(мФорма.ЭлементыФормы[ТекущееТабПоле]);
			 	ТабДок.ОриентацияСтраницы = РегламентированнаяОтчетность.ОпределитьОриентациюСтраницы(мФорма.ИмяФормы,мСписокФормБезИерархии);
			 	ТабДок.АвтоМасштаб        = Истина;
			 	ТабДок.ЧерноБелаяПечать   = Ложь;
			 
			 	//добавляем значения в таблицу страниц для печати
			 	Строка = мТаблицаСтраницНаПечать.Добавить();
			 	Строка.ПолеТабличногоДокумента = ТабДок;
				Строка.ИмяЛиста = ИмяГруппы + ". Страница № " + Строка(Стр);
				Строка.ИмяЛистаДляЗаписи = "Рег. отчет " + мФормаНавигации.Заголовок+ " " +ИмяГруппы + ". cтр. № " + Строка(Стр);
			КонецЦикла;
			Стр = Стр + 1;		 
	 	КонецЦикла;
		
		РегламентированнаяОтчетность.ВывестиСтраницуМногострочнойФормы(мФорма);
		
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПечатьРегламентированногоОтчета(мТаблицаСтраницНаПечать,  мФорма, ВидПечати);
	
КонецПроцедуры // Печать()

// Функция получает основные сведения о выбранной организации
// 
Функция ЗаполнитьСведенияОНалогоплательщике()Экспорт
	
	Если (Налогоплательщик  = Неопределено) Или (Налогоплательщик = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.Организации")) Тогда
		Возврат 0;
	КонецЕсли;
	
	// Составляем список данных, необходимых для вывода в отчетную форму
	Сведения = Новый СписокЗначений;
	
	Сведения.Добавить("", "НаимЮЛПол"); // Полное название организации
	
	Сведения.Добавить("", "РННЮЛ"); // РНН
	
	Сведения.Добавить("", "ИИН_БИН"); // ИИН_БИН
    		
	Сведения.Добавить("", "ФИОРук"); // ФИО руководителя
	
	// Теперь получаем данные из глобальной общей функции
	ОргСведения = ОбщегоНазначения.ПолучитьСведенияОбОрганизации(Налогоплательщик, ТекущаяДата(), Сведения);
	
	// Добавим сведения о кодах налоговых органов
	НКСведения = ОбщегоНазначения.СведенияОЮрФизЛице(НалоговыйКомитет, ДатаПодписи);
	
	
	Возврат ОргСведения;
	
КонецФункции // ЗаполнитьСведенияОбОрганизации

// Вызывает диалог выбора файла для выбора файла данных
//
Функция ВыборФайла() Экспорт
	
	Режим                 = РежимДиалогаВыбораФайла.Открытие;
	Диалог                = Новый ДиалогВыбораФайла(Режим);
	Диалог.Заголовок      = "Выберите файл";
	Диалог.Фильтр         = "*.xml|*.xml|Все файлы(*.*)|*.*";
	Диалог.ПолноеИмяФайла = "70101";
	Диалог.Расширение     = "xml";
	Если Диалог.Выбрать() Тогда
		ИмяФайла = Диалог.ПолноеИмяФайла;
	КонецЕсли;	
	Возврат ИмяФайла;
	
КонецФункции // ВыборФайла()

 //Функция управляет показом в форме периода построения отчета.
 //
Функция ПоказатьОсновнойПериод(ТекДатаНачала,ТекДатаОкончания) Экспорт

	СтрПериодОтчета = ПредставлениеПериода(ТекДатаНачала,ТекДатаОкончания, "ФП = истина");
	мКвартал = Лев(СтрПериодОтчета,1);
	мГод     = Лев(Прав(СтрПериодОтчета,7),4);
	Возврат СтрПериодОтчета;
		
КонецФункции // ПоказатьОсновнойПериод()

// Функция для определения даты начала отчетного
// периода, исходя из номера отчетного квартала
Функция ПолучитьДатуНачала() Экспорт
	// первый квартал
	Если Месяц(мДатаНачалаПериодаОтчета) = 1 Тогда
		Возврат мДатаНачалаПериодаОтчета
	КонецЕсли;
	// второй квартал
	Если Месяц(мДатаНачалаПериодаОтчета) = 4 Тогда
		Возврат Дата(мГод,2,1);
	КонецЕсли;
	// третий квартал
	Если Месяц(мДатаНачалаПериодаОтчета) = 7 Тогда
		Возврат Дата(мГод,5,1);
	КонецЕсли;
	// четвертый квартал
	Если Месяц(мДатаНачалаПериодаОтчета) = 10 Тогда
		Возврат Дата(мГод,8,1);
	КонецЕсли;
КонецФункции // ПолучитьДатуНачала

// Функция для определения даты окончания отчетного
// периода, исходя из номера отчетного квартала
Функция ПолучитьДатуОкончания() Экспорт
	
	Возврат КонецМесяца(Дата(мГод,Месяц(мДатаНачалаПериодаОтчета),1));	
	
КонецФункции // ПолучитьДатуОкончания

Функция СформироватьОсновнойЗапросРасчетаНалогаНаИмущество(ВключатьВРасчетСчет2933 = ЛОЖЬ) Экспорт
	
	Запрос = Новый Запрос;
	
	ДатаНач = ПолучитьДатуНачала();
	ДатаКон = ПолучитьДатуОкончания();
	
	// Получим данные по стоимости для поступивших ФА по формуле 1/13 первоначальной стоимости 
	// поступивших объектов налогообложения, определенной по данным бухгалтерского учета на дату поступления, 
	// умноженной на количество месяцев текущего налогового периода, 
	// начиная с месяца, следующего за месяцем поступления объектов налогообложения, до конца налогового периода
	
	// поскольку начисление налога по поступившим товарам начинается со следующего месяца, то оперируем значениям на начало месяца	
	ТекстЗапросаПоМесяцам = "";	
	Для Счетчик = 1 по 12 Цикл
		Если Не ТекстЗапросаПоМесяцам = "" ТОгда
			ТекстЗапросаПоМесяцам = ТекстЗапросаПоМесяцам + "
			| ОБЪЕДИНИТЬ ВСЕ
			| ";
		КонецЕсли;
		ТекстЗапросаПоМесяцам =ТекстЗапросаПоМесяцам +  "
								|	ВЫБРАТЬ
								|	&Дата" + СокрЛП(Счетчик) + " как Период		                        
								| ";
		Запрос.УстановитьПараметр("Дата" + СокрЛП(Счетчик),  КонецМесяца(ДобавитьМесяц(НачалоГода(мДатаНачалаПериодаОтчета),Счетчик-1)));			
	КонецЦикла;
	
	// Таблица "Объекты" - содержит объекты обложения налогом на имущество на начало каждого месяца. 
	//                     Получена на основе таблицы записей регистра сведений, соединенной с таблицей месяцев. 
				   
	ТекстЗапросаПоОбъектамИмущественногоНалога = "ВЫБРАТЬ
	                                            |	ТаблицаПериодов.Период
	                                            |ПОМЕСТИТЬ ТаблицаЗапросаПоМесяцам
	                                            |ИЗ
	                                            |	(" + ТекстЗапросаПоМесяцам + ") КАК ТаблицаПериодов
	                                            |;
	                                            |
	                                            |////////////////////////////////////////////////////////////////////////////////
												|ВЫБРАТЬ
												|	Периоды.Период КАК ПериодГода,
												|	ОбъектыИмущественногоНалога.ОбъектНалогообложения КАК ОбъектНалогообложения,
												|	ОбъектыИмущественногоНалога.Организация КАК Организация,
												|	ОбъектыИмущественногоНалога.Период КАК ПериодЗаписи,
												|	ОбъектыИмущественногоНалога.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
												|	ОбъектыИмущественногоНалога.НачислятьНалог КАК НачислятьНалог
												|ПОМЕСТИТЬ Объекты
												|ИЗ
												|	ТаблицаЗапросаПоМесяцам КАК Периоды
												|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыИмущественногоНалога КАК ОбъектыИмущественногоНалога
												|		ПО (ОбъектыИмущественногоНалога.Налогоплательщик = &Налогоплательщик)
												|			И (НАЧАЛОПЕРИОДА(ОбъектыИмущественногоНалога.Период, МЕСЯЦ) <= Периоды.Период)
												|;
												|////////////////////////////////////////////////////////////////////////////////
												|ВЫБРАТЬ
												|	Объекты.ПериодГода КАК ПериодГода,
												|	Объекты.ОбъектНалогообложения КАК ОбъектНалогообложения,
												|	Объекты.Организация КАК Организация,
												|	Объекты.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
												|	МАКСИМУМ(Объекты.ПериодЗаписи) КАК ПериодЗаписи
												|ПОМЕСТИТЬ ВТ_ОбъектыБезПризнакаОбложения
												|ИЗ
												|	Объекты КАК Объекты
												|СГРУППИРОВАТЬ ПО
												|	Объекты.ПериодГода,
												|	Объекты.ОбъектНалогообложения,
												|	Объекты.СтруктурнаяЕдиница,
												|	Объекты.Организация
												|;
												|////////////////////////////////////////////////////////////////////////////////
												|ВЫБРАТЬ
												|	ОбъектыБезПризнакаОбложения.ПериодГода КАК ПериодГода,
												|	ОбъектыБезПризнакаОбложения.Организация КАК Организация,
												|	ОбъектыБезПризнакаОбложения.ОбъектНалогообложения КАК ОбъектНалогообложения,
												|	ОбъектыИмущественногоНалога.НачислятьНалог КАК НачислятьНалог,
												|	ОбъектыИмущественногоНалога.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
												|	ОбъектыИмущественногоНалога.Период КАК ПериодЗаписи
												|ПОМЕСТИТЬ ОбъектыИмущественногоНалога
												|ИЗ
												|	ВТ_ОбъектыБезПризнакаОбложения КАК ОбъектыБезПризнакаОбложения
												|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектыИмущественногоНалога КАК ОбъектыИмущественногоНалога
												|		ПО (ОбъектыИмущественногоНалога.Организация = ОбъектыБезПризнакаОбложения.Организация)
												|			И (ОбъектыИмущественногоНалога.ОбъектНалогообложения = ОбъектыБезПризнакаОбложения.ОбъектНалогообложения)
												|			И (ОбъектыИмущественногоНалога.Период = ОбъектыБезПризнакаОбложения.ПериодЗаписи)
												|			И (ОбъектыИмущественногоНалога.СтруктурнаяЕдиница = ОбъектыБезПризнакаОбложения.СтруктурнаяЕдиница)
												|ГДЕ
												|	ОбъектыИмущественногоНалога.СтруктурнаяЕдиница В(&СписокСтруктурныхЕдиниц)
												|;
												|////////////////////////////////////////////////////////////////////////////////
												|ВЫБРАТЬ
												|	ОбъектыИмущественногоНалога.ПериодГода КАК ПериодГода,
												|	ОбъектыИмущественногоНалога.ОбъектНалогообложения КАК ОбъектНалогообложения,
												|	ОбъектыИмущественногоНалога.Организация КАК Организация,
												|	СУММА(ЕСТЬNULL(ТиповойОборотыПоступления.СуммаОборотДт, 0)) КАК ПриобретениеВТечениеГода
												|ПОМЕСТИТЬ ВТ_ПриобретениеЗаГод
												|ИЗ
												|	ОбъектыИмущественногоНалога КАК ОбъектыИмущественногоНалога
												|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Обороты(&НачалоПериода, &ДатаКон, Месяц, Счет В ИЕРАРХИИ (&СписокСчетов), , , , ) КАК ТиповойОборотыПоступления
												|		ПО ОбъектыИмущественногоНалога.ОбъектНалогообложения = ТиповойОборотыПоступления.Субконто1
												|			И ОбъектыИмущественногоНалога.Организация = ТиповойОборотыПоступления.Организация
												|			И ОбъектыИмущественногоНалога.ПериодГода >= ТиповойОборотыПоступления.Период
												|			И (ВЫБОР
												|				КОГДА &УчетПоСП И ОбъектыИмущественногоНалога.СтруктурнаяЕдиница ССЫЛКА Справочник.ПодразделенияОрганизаций
												|//БК					ТОГДА ОбъектыИмущественногоНалога.СтруктурнаяЕдиница = ТиповойОборотыПоступления.СтруктурноеПодразделение
												|//УПП					ТОГДА ОбъектыИмущественногоНалога.СтруктурнаяЕдиница = ТиповойОборотыПоступления.Субконто2
												|				ИНАЧЕ ИСТИНА
												|			КОНЕЦ)
												|ГДЕ
												|	ТиповойОборотыПоступления.СуммаОборотДт <> 0
												|СГРУППИРОВАТЬ ПО
												|	ОбъектыИмущественногоНалога.ПериодГода,
												|	ОбъектыИмущественногоНалога.ОбъектНалогообложения,
												|	ОбъектыИмущественногоНалога.Организация
												|;
												|////////////////////////////////////////////////////////////////////////////////
												|ВЫБРАТЬ
												|	ОборотыПоПереоценкеСтоимости.Организация,
												|	ОборотыПоПереоценкеСтоимости.Период,
												|	ОборотыПоПереоценкеСтоимости.Субконто1,
												|//УПП	ОборотыПоПереоценкеСтоимости.Субконто2 КАК СтруктурноеПодразделение,
												|//БК	ОборотыПоПереоценкеСтоимости.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
												|	ОборотыПоПереоценкеСтоимости.СуммаОборотКт КАК СуммаСписанияНакопленнойАмортизации
												|ПОМЕСТИТЬ ВТ_ОборотыПоПереоценке
												|ИЗ
												|	РегистрБухгалтерии.Типовой.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет В ИЕРАРХИИ (&СписокСчетов), , , КорСчет В (&СписокСчетовАмортизации), ) КАК ОборотыПоПереоценкеСтоимости
												|ГДЕ
												|	ОборотыПоПереоценкеСтоимости.Регистратор ССЫЛКА Документ.ПереоценкаВнеоборотныхАктивов
												|	Или ОборотыПоПереоценкеСтоимости.Регистратор ССЫЛКА Документ.РеструктуризацияОС
												|;
												|////////////////////////////////////////////////////////////////////////////////
												|ВЫБРАТЬ
												|	ОборотыПоПереоценкеНакопленнойАмортизации.Организация,
												|	ОборотыПоПереоценкеНакопленнойАмортизации.Период,
												|	ОборотыПоПереоценкеНакопленнойАмортизации.Субконто1,
												|//УПП	ОборотыПоПереоценкеНакопленнойАмортизации.Субконто2 КАК СтруктурноеПодразделение,
												|//БК	ОборотыПоПереоценкеНакопленнойАмортизации.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
												|	ОборотыПоПереоценкеНакопленнойАмортизации.СуммаОборотКт КАК СуммаПоложительнойПереоценкиАмортизации,
												|	ОборотыПоПереоценкеНакопленнойАмортизации.СуммаОборотДт КАК СуммаОтрицательнойПереоценкиАмортизации
												|ПОМЕСТИТЬ ВТ_ОборотыПоПереоценкеАмортизации
												|ИЗ
												|	РегистрБухгалтерии.Типовой.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет В ИЕРАРХИИ (&СписокСчетовАмортизации), , , НЕ КорСчет В (&СписокСчетов), ) КАК ОборотыПоПереоценкеНакопленнойАмортизации
												|ГДЕ
												|	ОборотыПоПереоценкеНакопленнойАмортизации.Регистратор ССЫЛКА Документ.ПереоценкаВнеоборотныхАктивов
												|;
												|////////////////////////////////////////////////////////////////////////////////
												|ВЫБРАТЬ
												|	ТиповойОбороты.Период КАК Период,
												|	ТиповойОбороты.Субконто1 КАК ОсновноеСредство,
												|//УПП	ТиповойОбороты.Субконто2 КАК СтруктурноеПодразделение,
												|//БК	ТиповойОбороты.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
												|	ТиповойОбороты.Организация КАК Организация,
												|	ТиповойОбороты.СуммаОборотДт КАК ПервоначальнаяСтоимость
												|ПОМЕСТИТЬ ВТ_ТаблицаПервоначальнаяСтоимость
												|ИЗ
												|	РегистрБухгалтерии.Типовой.Обороты(&ДатаНач, &ДатаКон, Месяц, Счет В ИЕРАРХИИ (&СписокСчетов), , , , ) КАК ТиповойОбороты
												|;
												|////////////////////////////////////////////////////////////////////////////////
												|ВЫБРАТЬ
												|    ОборотыПоПереоценкеСтоимости.Организация,
												|    ОборотыПоПереоценкеСтоимости.Период,
												|    ОборотыПоПереоценкеСтоимости.Субконто1,
												|//УПП  ОборотыПоПереоценкеСтоимости.Субконто2 КАК СтруктурноеПодразделение,
												|//БК	ОборотыПоПереоценкеСтоимости.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
												|    ОборотыПоПереоценкеСтоимости.СуммаОборотКт КАК СуммаОтрицательнойПереоценкиСтоимости,
												|    ОборотыПоПереоценкеСтоимости.СуммаОборотДт КАК СуммаПоложительнойПереоценкиСтоимости
												|ПОМЕСТИТЬ ВТ_ОборотыПоПереоценкеСтоимости
												|ИЗ
												|    РегистрБухгалтерии.Типовой.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет В ИЕРАРХИИ (&СписокСчетов), , , НЕ КорСчет В (&СписокСчетовАмортизации), ) КАК ОборотыПоПереоценкеСтоимости
												|ГДЕ
												|    ОборотыПоПереоценкеСтоимости.Регистратор ССЫЛКА Документ.ПереоценкаВнеоборотныхАктивов
												|;
												|
												|////////////////////////////////////////////////////////////////////////////////
												|ВЫБРАТЬ
												|	ОбъектыИмущественногоНалога.ПериодГода КАК ПериодГода,
												|	ОбъектыИмущественногоНалога.ОбъектНалогообложения КАК ОбъектНалогообложения,
												|	ОбъектыИмущественногоНалога.Организация КАК Организация,
												|	0 КАК ИзменениеСтоимостиПоступившихАктивов,
												|	ВЫБОР
												|		КОГДА ЕСТЬNULL(ТиповойОстаткиНаНачалоГода.СуммаОстаток, 0) = 0
												|				И ЕСТЬNULL(ТиповойОстаткиНаКонецОтчетногоПериода.СуммаОстаток, 0) = 0
												|			ТОГДА ЕСТЬNULL(ПриобретениеЗаГод.ПриобретениеВТечениеГода, 0)
												|		КОГДА ЕСТЬNULL(ТиповойОстаткиНаКонецОтчетногоПериода.СуммаОстаток, 0) = 0
												|				И ТиповойОбороты.СуммаОборотКт <> (ЕСТЬNULL(ОборотыПоПереоценкеСтоимости.СуммаОтрицательнойПереоценкиСтоимости,0) + ЕСТЬNULL(ОборотыПоПереоценке.СуммаСписанияНакопленнойАмортизации,0) )//если Кт оборот равна сумме переоценки стоимости, то это не выбытие по балансовой стоимости
												|			ТОГДА ЕСТЬNULL(ТиповойОстаткиНаНачалоГода.СуммаОстаток, 0)
												|		ИНАЧЕ ЕСТЬNULL(ТиповойОбороты.СуммаОборотКт, 0) - ЕСТЬNULL(ОборотыПоПереоценке.СуммаСписанияНакопленнойАмортизации, 0) - ЕСТЬNULL(ОборотыПоПереоценкеАмортизации.СуммаОтрицательнойПереоценкиАмортизации, 0)
												|	КОНЕЦ КАК ИзменениеСтоимостиВыбывшихАктивов
												|ПОМЕСТИТЬ ВТ_итоговаяТаблица
												|ИЗ
												|	ОбъектыИмущественногоНалога КАК ОбъектыИмущественногоНалога
												|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Остатки(&НачалоПериода, Счет В ИЕРАРХИИ (&СписокСчетовОстаточнойСтоимости), , ) КАК ТиповойОстаткиНаНачалоГода
												|		ПО ОбъектыИмущественногоНалога.ОбъектНалогообложения = ТиповойОстаткиНаНачалоГода.Субконто1
												|			И ОбъектыИмущественногоНалога.Организация = ТиповойОстаткиНаНачалоГода.Организация
												|			И (ВЫБОР
												|				КОГДА &УчетПоСП И ОбъектыИмущественногоНалога.СтруктурнаяЕдиница ССЫЛКА Справочник.ПодразделенияОрганизаций
												|//БК					ТОГДА ОбъектыИмущественногоНалога.СтруктурнаяЕдиница = ТиповойОстаткиНаНачалоГода.СтруктурноеПодразделение
												|//УПП					ТОГДА ОбъектыИмущественногоНалога.СтруктурнаяЕдиница = ТиповойОстаткиНаНачалоГода.Субконто2
												|				ИНАЧЕ ИСТИНА
												|			КОНЕЦ)
												|
												|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Остатки(&ДатаКонГраница, Счет В ИЕРАРХИИ (&СписокСчетовОстаточнойСтоимости), , ) КАК ТиповойОстаткиНаКонецОтчетногоПериода
												|		ПО ОбъектыИмущественногоНалога.ОбъектНалогообложения = ТиповойОстаткиНаКонецОтчетногоПериода.Субконто1
												|			И ОбъектыИмущественногоНалога.Организация = ТиповойОстаткиНаКонецОтчетногоПериода.Организация
												|			И (ВЫБОР
												|				КОГДА &УчетПоСП И ОбъектыИмущественногоНалога.СтруктурнаяЕдиница ССЫЛКА Справочник.ПодразделенияОрганизаций
												|//БК					ТОГДА ОбъектыИмущественногоНалога.СтруктурнаяЕдиница = ТиповойОстаткиНаКонецОтчетногоПериода.СтруктурноеПодразделение
												|//УПП					ТОГДА ОбъектыИмущественногоНалога.СтруктурнаяЕдиница = ТиповойОстаткиНаКонецОтчетногоПериода.Субконто2
												|				ИНАЧЕ ИСТИНА
												|			КОНЕЦ)
												|
												|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Обороты(&ДатаНач, &ДатаКон, Месяц, Счет В ИЕРАРХИИ (&СписокСчетов), , , , ) КАК ТиповойОбороты
												|		ПО ОбъектыИмущественногоНалога.ОбъектНалогообложения = ТиповойОбороты.Субконто1
												|			И ОбъектыИмущественногоНалога.Организация = ТиповойОбороты.Организация
												|			И ОбъектыИмущественногоНалога.ПериодГода >= ТиповойОбороты.Период
												|			И (ВЫБОР
												|				КОГДА &УчетПоСП И ОбъектыИмущественногоНалога.СтруктурнаяЕдиница ССЫЛКА Справочник.ПодразделенияОрганизаций
												|//БК					ТОГДА ОбъектыИмущественногоНалога.СтруктурнаяЕдиница = ТиповойОбороты.СтруктурноеПодразделение
												|//УПП					ТОГДА ОбъектыИмущественногоНалога.СтруктурнаяЕдиница = ТиповойОбороты.Субконто2
												|				ИНАЧЕ ИСТИНА
												|			КОНЕЦ)
												|
												|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриобретениеЗаГод КАК ПриобретениеЗаГод
												|		ПО ОбъектыИмущественногоНалога.ОбъектНалогообложения = ПриобретениеЗаГод.ОбъектНалогообложения
												|			И ОбъектыИмущественногоНалога.Организация = ПриобретениеЗаГод.Организация
												|			И ОбъектыИмущественногоНалога.ПериодГода = ПриобретениеЗаГод.ПериодГода
												|
												|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоПереоценке КАК ОборотыПоПереоценке
												|		ПО ОбъектыИмущественногоНалога.ОбъектНалогообложения = ОборотыПоПереоценке.Субконто1
												|			И ОбъектыИмущественногоНалога.Организация = ОборотыПоПереоценке.Организация
												|			И (ВЫБОР
												|				КОГДА &УчетПоСП И ОбъектыИмущественногоНалога.СтруктурнаяЕдиница ССЫЛКА Справочник.ПодразделенияОрганизаций
												|					ТОГДА ОбъектыИмущественногоНалога.СтруктурнаяЕдиница = ОборотыПоПереоценке.СтруктурноеПодразделение
												|				ИНАЧЕ ИСТИНА
												|			КОНЕЦ)
												|
												|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоПереоценкеАмортизации КАК ОборотыПоПереоценкеАмортизации
												|		ПО ОбъектыИмущественногоНалога.ОбъектНалогообложения = ОборотыПоПереоценкеАмортизации.Субконто1
												|			И ОбъектыИмущественногоНалога.Организация = ОборотыПоПереоценкеАмортизации.Организация
												|			И (ВЫБОР
												|				КОГДА &УчетПоСП И ОбъектыИмущественногоНалога.СтруктурнаяЕдиница ССЫЛКА Справочник.ПодразделенияОрганизаций
												|					ТОГДА ОбъектыИмущественногоНалога.СтруктурнаяЕдиница = ОборотыПоПереоценкеАмортизации.СтруктурноеПодразделение
												|				ИНАЧЕ ИСТИНА
												|			КОНЕЦ)
												|
												|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоПереоценкеСтоимости КАК ОборотыПоПереоценкеСтоимости
												|		ПО ОбъектыИмущественногоНалога.ОбъектНалогообложения = ОборотыПоПереоценкеСтоимости.Субконто1
												|			И ОбъектыИмущественногоНалога.Организация = ОборотыПоПереоценкеСтоимости.Организация
												|			И (ВЫБОР
												|				КОГДА &УчетПоСП И ОбъектыИмущественногоНалога.СтруктурнаяЕдиница ССЫЛКА Справочник.ПодразделенияОрганизаций
												|					ТОГДА ОбъектыИмущественногоНалога.СтруктурнаяЕдиница = ОборотыПоПереоценкеСтоимости.СтруктурноеПодразделение
												|				ИНАЧЕ ИСТИНА
												|			КОНЕЦ)
												|ГДЕ
												|	ТиповойОбороты.СуммаОборотКт <> 0
												|
												|ОБЪЕДИНИТЬ ВСЕ
												|
												|ВЫБРАТЬ
												|	ОбъектыИмущественногоНалога.ПериодГода,
												|	ОбъектыИмущественногоНалога.ОбъектНалогообложения,
												|	ОбъектыИмущественногоНалога.Организация,
												|	ТаблицаПервоначальнаяСтоимость.ПервоначальнаяСтоимость - ЕСТЬNULL(ОборотыПоПереоценкеАмортизации.СуммаПоложительнойПереоценкиАмортизации, 0),
												|	0
												|ИЗ
												|	ОбъектыИмущественногоНалога КАК ОбъектыИмущественногоНалога
												|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаПервоначальнаяСтоимость КАК ТаблицаПервоначальнаяСтоимость
												|		ПО ОбъектыИмущественногоНалога.ОбъектНалогообложения = ТаблицаПервоначальнаяСтоимость.ОсновноеСредство
												|			И ОбъектыИмущественногоНалога.Организация = ТаблицаПервоначальнаяСтоимость.Организация
												|			И ОбъектыИмущественногоНалога.ПериодГода >= ТаблицаПервоначальнаяСтоимость.Период
												|			И (ВЫБОР
												|				КОГДА &УчетПоСП И ОбъектыИмущественногоНалога.СтруктурнаяЕдиница ССЫЛКА Справочник.ПодразделенияОрганизаций
												|					ТОГДА ОбъектыИмущественногоНалога.СтруктурнаяЕдиница = ТаблицаПервоначальнаяСтоимость.СтруктурноеПодразделение
												|				ИНАЧЕ ИСТИНА
												|			КОНЕЦ)
												|			И ТаблицаПервоначальнаяСтоимость.ПервоначальнаяСтоимость <> 0
												|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоПереоценкеАмортизации КАК ОборотыПоПереоценкеАмортизации
												|		ПО ОбъектыИмущественногоНалога.ОбъектНалогообложения = ОборотыПоПереоценкеАмортизации.Субконто1
												|			И ОбъектыИмущественногоНалога.Организация = ОборотыПоПереоценкеАмортизации.Организация
												|			И (ВЫБОР
												|				КОГДА &УчетПоСП И ОбъектыИмущественногоНалога.СтруктурнаяЕдиница ССЫЛКА Справочник.ПодразделенияОрганизаций
												|					ТОГДА ОбъектыИмущественногоНалога.СтруктурнаяЕдиница = ОборотыПоПереоценкеАмортизации.СтруктурноеПодразделение
												|				ИНАЧЕ ИСТИНА
												|			КОНЕЦ)
												|		И ОборотыПоПереоценкеАмортизации.СуммаПоложительнойПереоценкиАмортизации <> 0
												|;
												|////////////////////////////////////////////////////////////////////////////////
												|ВЫБРАТЬ
												|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИтоговаяТаблица.ПериодГода) КАК КоличествоМесяцев,
												|	ИтоговаяТаблица.ОбъектНалогообложения КАК ОбъектНалогообложения,
												|	ИтоговаяТаблица.Организация КАК Организация,
												|	СУММА(ИтоговаяТаблица.ИзменениеСтоимостиПоступившихАктивов) КАК ИзменениеСтоимостиПоступившихАктивов,
												|	СУММА(ИтоговаяТаблица.ИзменениеСтоимостиВыбывшихАктивов) КАК ИзменениеСтоимостиВыбывшихАктивов,
												|	ИтоговаяТаблица.ИзменениеСтоимостиПоступившихАктивов КАК ПервоначальнаяСтоимость,
												|	ИтоговаяТаблица.ИзменениеСтоимостиВыбывшихАктивов КАК БалансоваяСтоимостьВыбывших
												|ПОМЕСТИТЬ ВТ_КонИтоговаяТаблица
												|ИЗ
												|	ВТ_итоговаяТаблица КАК ИтоговаяТаблица
												|СГРУППИРОВАТЬ ПО
												|	ИтоговаяТаблица.ОбъектНалогообложения,
												|	ИтоговаяТаблица.Организация,
												|	ИтоговаяТаблица.ИзменениеСтоимостиПоступившихАктивов,
												|	ИтоговаяТаблица.ИзменениеСтоимостиВыбывшихАктивов
												|;
												|////////////////////////////////////////////////////////////////////////////////
												|ВЫБРАТЬ
												|	СУММА(ВЫБОР
												|			КОГДА КонИтоговаяТаблица.ИзменениеСтоимостиВыбывшихАктивов <> 0
												|				ТОГДА - КонИтоговаяТаблица.КоличествоМесяцев
												|			ИНАЧЕ КонИтоговаяТаблица.КоличествоМесяцев
												|		КОНЕЦ) КАК КоличествоМесяцев,
												|	КонИтоговаяТаблица.ОбъектНалогообложения КАК ОбъектНалогообложения,
												|	КонИтоговаяТаблица.ОбъектНалогообложения.Код КАК КодОбъекта,
												|	КонИтоговаяТаблица.Организация КАК Организация,
												|	СУММА(КонИтоговаяТаблица.ПервоначальнаяСтоимость) КАК ПервоначальнаяСтоимость,
												|	СУММА(КонИтоговаяТаблица.БалансоваяСтоимостьВыбывших) КАК БалансоваяСтоимостьВыбывших,
												|	СУММА((ВЫРАЗИТЬ(КонИтоговаяТаблица.ИзменениеСтоимостиПоступившихАктивов / 13 КАК ЧИСЛО(15, 2))) - (ВЫРАЗИТЬ(КонИтоговаяТаблица.ИзменениеСтоимостиВыбывшихАктивов / 13 КАК ЧИСЛО(15, 2)))) КАК ИзменениеСтоимости,
												|	СУММА(ВЫРАЗИТЬ(КонИтоговаяТаблица.ИзменениеСтоимостиПоступившихАктивов / 13 КАК ЧИСЛО(15, 2))) КАК ИзменениеСтоимостиПоступившихАктивов,
												|	СУММА(ВЫРАЗИТЬ(КонИтоговаяТаблица.ИзменениеСтоимостиВыбывшихАктивов / 13 КАК ЧИСЛО(15, 2))) КАК ИзменениеСтоимостиВыбывшихАктивов
												|ИЗ
												|	ВТ_КонИтоговаяТаблица КАК КонИтоговаяТаблица
												|ГДЕ
												|	(КонИтоговаяТаблица.ИзменениеСтоимостиПоступившихАктивов <> 0
												|			ИЛИ КонИтоговаяТаблица.ИзменениеСтоимостиВыбывшихАктивов <> 0)
												|СГРУППИРОВАТЬ ПО
												|	КонИтоговаяТаблица.ОбъектНалогообложения,
												|	КонИтоговаяТаблица.Организация,
												|	КонИтоговаяТаблица.ОбъектНалогообложения.Код
												|ИТОГИ
												|	СУММА(ИзменениеСтоимости),
												|	СУММА(ИзменениеСтоимостиПоступившихАктивов),
												|	СУММА(ИзменениеСтоимостиВыбывшихАктивов)
												|ПО
												|	ОБЩИЕ,
												|	Организация";
	
												
	Если ИДКонфигурации = "УППК" Тогда
		ТекстЗапросаПоОбъектамИмущественногоНалога = СтрЗаменить(ТекстЗапросаПоОбъектамИмущественногоНалога, "//УПП", "");
	Иначе
		ТекстЗапросаПоОбъектамИмущественногоНалога = СтрЗаменить(ТекстЗапросаПоОбъектамИмущественногоНалога, "//БК", "");
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("ДатаКонГраница", Новый Граница(ДатаКон,ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(мДатаНачалаПериодаОтчета)	);
	Запрос.УстановитьПараметр("КонецПериода", КонецГода(мДатаНачалаПериодаОтчета));	
	
	СписокСчетовПервоначальнойСтоимости = Новый СписокЗначений;
	СписокСчетовПервоначальнойСтоимости.Добавить(ПланыСчетов.Типовой.ИнвестицииВНедвижимость);
	СписокСчетовПервоначальнойСтоимости.Добавить(ПланыСчетов.Типовой.ОсновныеСредства);
	СписокСчетовПервоначальнойСтоимости.Добавить(ПланыСчетов.Типовой.БиологическиеАктивы);	
	СписокСчетовПервоначальнойСтоимости.Добавить(ПланыСчетов.Типовой.Гудвилл);
	СписокСчетовПервоначальнойСтоимости.Добавить(ПланыСчетов.Типовой.ПрочиеНематериальныеАктивы);
	СписокСчетовПервоначальнойСтоимости.Добавить(ПланыСчетов.Типовой.ДолгосрочныеАктивыДляПродажи_);   // счет 1500
	
	Если ВключатьВРасчетСчет2933 Тогда
		СписокСчетовПервоначальнойСтоимости.Добавить(ПланыСчетов.Типовой.НезавершенноеСтроительство_);	  // счет 2930
	КонецЕсли;	

	
	СписокСчетовОстаточнойСтоимости = Новый СписокЗначений;
	СписокСчетовОстаточнойСтоимости.Добавить(ПланыСчетов.Типовой.ИнвестицииВНедвижимость_);
	СписокСчетовОстаточнойСтоимости.Добавить(ПланыСчетов.Типовой.ОсновныеСредства_);
	СписокСчетовОстаточнойСтоимости.Добавить(ПланыСчетов.Типовой.БиологическиеАктивы);	
	СписокСчетовОстаточнойСтоимости.Добавить(ПланыСчетов.Типовой.НематериальныеАктивы);
	СписокСчетовОстаточнойСтоимости.Добавить(ПланыСчетов.Типовой.ДолгосрочныеАктивыДляПродажи_);   // счет 1500
	
	Если ВключатьВРасчетСчет2933 Тогда
		СписокСчетовОстаточнойСтоимости.Добавить(ПланыСчетов.Типовой.НезавершенноеСтроительство_);	  // счет 2930
	КонецЕсли;	

	СписокСчетовАмортизации = Новый СписокЗначений;
	СписокСчетовАмортизации.Добавить(ПланыСчетов.Типовой.АмортизацияОсновныхСредств);
	СписокСчетовАмортизации.Добавить(ПланыСчетов.Типовой.АмортизацияИнвестицийВНедвижимость);	
	СписокСчетовАмортизации.Добавить(ПланыСчетов.Типовой.АмортизацияПрочихНематериальныхАктивов);	
	СписокСчетовАмортизации.Добавить(ПланыСчетов.Типовой.АмортизацияРазведочныхИОценочныхАктивов);	
	
	Запрос.УстановитьПараметр("СписокСчетовАмортизации", СписокСчетовАмортизации);
	
	Запрос.УстановитьПараметр("СписокСчетов", СписокСчетовПервоначальнойСтоимости);
	Запрос.УстановитьПараметр("СписокСчетовОстаточнойСтоимости", 	СписокСчетовОстаточнойСтоимости);
	
	Запрос.УстановитьПараметр("Налогоплательщик", 					Налогоплательщик);
	Запрос.УстановитьПараметр("СписокСтруктурныхЕдиниц", 			мСписокСтруктурныхЕдиниц);	  
	
	Если ИДКонфигурации = "УППК" Тогда
		УчетПоСП = (мПоддержкаРаботыСоСтруктурнымиПодразделениями И УправлениеВнеоборотнымиАктивами.ВедетсяАналитическийУчетОСПоПодразделениям(ДатаНач));
	Иначе
		УчетПоСП = мПоддержкаРаботыСоСтруктурнымиПодразделениями;
	КонецЕсли;	
		
	Запрос.УстановитьПараметр("УчетПоСП", УчетПоСП);
	
	Запрос.Текст = ТекстЗапросаПоОбъектамИмущественногоНалога;
	Возврат  Запрос;
	
КонецФункции // СформироватьОсновнойЗапросРасчетаНалогаНаИмущество

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ 

мПоддержкаРаботыСоСтруктурнымиПодразделениями = Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить();

мСписокСтруктурныхЕдиниц = Новый СписокЗначений;

//заполняем всеми формами, которые входят в отчет
//в качестве кода формы назначает имя  форм, входящих в отчет
СписокФормДерева  = Новый ДеревоЗначений;
СписокФормДерева.Колонки.Добавить("Страницы");
СписокФормДерева.Колонки.Добавить("КодФормы");
СписокФормДерева.Колонки.Добавить("ИмяФормы");
СписокФормДерева.Колонки.Добавить("ПоказатьСтраницу");
СписокФормДерева.Колонки.Добавить("Выгружать");
СписокФормДерева.Колонки.Добавить("Многострочность");
СписокФормДерева.Колонки.Добавить("ПризнакОсновной");
СписокФормДерева.Колонки.Добавить("ЗаголовокФормы"); 
СписокФормДерева.Колонки.Добавить("АвтополучениеИтогов");    
СписокФормДерева.Колонки.Добавить("Автозаполнение");    
СписокФормДерева.Колонки.Добавить("КоличествоНаЛисте");    
СписокФормДерева.Колонки.Добавить("ОриентацияСтр");    
СписокФормДерева.Колонки.Добавить("Значение");    
                                                         
мТаблицаФорматов  = Новый ТаблицаЗначений;                        
мТаблицаФорматов.Колонки.Добавить("ИмяФормы");       
мТаблицаФорматов.Колонки.Добавить("ИмяСтраницы");                 
мТаблицаФорматов.Колонки.Добавить("Элемент");            
мТаблицаФорматов.Колонки.Добавить("Тип");                    
мТаблицаФорматов.Колонки.Добавить("ПроверкаНаПустое");        
мТаблицаФорматов.Колонки.Добавить("НеРедактируется");    
мТаблицаФорматов.Колонки.Добавить("Мин");      
мТаблицаФорматов.Колонки.Добавить("Макс");               
мТаблицаФорматов.Колонки.Добавить("ФиксированнаяДлина");                    
мТаблицаФорматов.Колонки.Добавить("Длина");
мТаблицаФорматов.Колонки.Добавить("Дополнение");
мТаблицаФорматов.Колонки.Добавить("НаименованиеФормы");

мТаблицаПоказателейДляПередачиДанных = Новый ТаблицаЗначений;
мТаблицаПоказателейДляПередачиДанных.Колонки.Добавить("КодФормыИсточник");       
мТаблицаПоказателейДляПередачиДанных.Колонки.Добавить("ИмяОбластиИсточник");       
мТаблицаПоказателейДляПередачиДанных.Колонки.Добавить("КодФормыПриемник");       
мТаблицаПоказателейДляПередачиДанных.Колонки.Добавить("ИмяОбластиПриемник");       
                                                     
ИмяПакета = "http://www.fno70101.rating.kz";
ИмяФайлаВыгрузки = "70101.efn";

мТаблицаСтраницНаПечать = Новый ТаблицаЗначений;
мТаблицаСтраницНаПечать.Колонки.Добавить("ПолеТабличногоДокумента");
мТаблицаСтраницНаПечать.Колонки.Добавить("ИмяЛиста");
мТаблицаСтраницНаПечать.Колонки.Добавить("ИмяЛистаДляЗаписи");

ИДКонфигурации = ОбщегоНазначения.ИДКонфигурации();

#КонецЕсли

