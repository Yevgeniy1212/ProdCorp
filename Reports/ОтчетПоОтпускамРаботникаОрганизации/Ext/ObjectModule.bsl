
#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//	ЕстьОшибки - флаг того, что при формировании произошли ошибки
//
Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки) Экспорт

	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Сообщить("Не указана организация");
		ЕстьОшибки = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ФизЛицо) Тогда
		Сообщить("Не указан сотрудник");
		ЕстьОшибки = Истина;
		Возврат;
	КонецЕсли;

	ДокументРезультат.Очистить();
	Макет = ПолучитьМакет("Макет");	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаРабочийГод = Макет.ПолучитьОбласть("СтрокаРабочийГод");
	ОбластьСтрокаОтпуск = Макет.ПолучитьОбласть("СтрокаОтпуск");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");

	ОбластьШапка.Параметры.ДатаАктуальности = ДатаАктуальности;
	
	Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.Сплошная);

	Запрос = Новый Запрос;

	ПараметрыЗапроса = Новый Структура();
	ПараметрыЗапроса.Вставить("ДатаАктуальности", ДатаАктуальности);
	ПараметрыЗапроса.Вставить("ФизЛицо", ФизЛицо);
	ПараметрыЗапроса.Вставить("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	ПараметрыЗапроса.Вставить("Прием", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	ПараметрыЗапроса.Вставить("ВнутреннееСовместительство", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);

	// определим все приказы о приеме с даты последнего приема по основному месту работы
	ДанныеРасчетаТекст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|		РаботникиОрганизации.Организация,
	|		РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|		МАКСИМУМ(РаботникиОрганизации.Период) КАК Период
	|
	|ПОМЕСТИТЬ ВТ_ПоследняяДатаПриемаПоОсновномуМестуРаботы
	|
	|ИЗ
	|		РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|	ГДЕ
	|		РаботникиОрганизации.Организация = &ГоловнаяОрганизация
	|		И РаботникиОрганизации.Сотрудник.ФизЛицо = &ФизЛицо
	|		И РаботникиОрганизации.ПричинаИзмененияСостояния = &Прием
	|		И РаботникиОрганизации.Период <= &ДатаАктуальности
	|		И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство)
	|
	|	СГРУППИРОВАТЬ ПО
	|		РаботникиОрганизации.Организация,
	|		РаботникиОрганизации.Сотрудник.ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РаботникиОрганизации.Организация,
	|	РаботникиОрганизации.Сотрудник,
	|	РаботникиОрганизации.Период КАК ДатаПриема,
	|	ВЫРАЗИТЬ(&ДатаАктуальности КАК ДАТА) КАК ДатаРасчета
	|ПОМЕСТИТЬ ВТ_ДанныеРасчета
	|ИЗ
	|	 ВТ_ПоследняяДатаПриемаПоОсновномуМестуРаботы КАК ПоследняяДатаПриемаПоОсновномуМестуРаботы
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Период >= ПоследняяДатаПриемаПоОсновномуМестуРаботы.Период
	|			И РаботникиОрганизации.Организация = &ГоловнаяОрганизация
	|			И РаботникиОрганизации.Сотрудник.ФизЛицо = &ФизЛицо
	|			И РаботникиОрганизации.ПричинаИзмененияСостояния = &Прием
	|";
	
	ПредоставляемыеОтпускаТекст = ПроцедурыУправленияПерсоналом.СформироватьТекстЗапросаПредоставляемыеОтпуска(ДанныеРасчетаТекст, ПараметрыЗапроса);
	//ПредоставляемыеОтпускаТекст = СтрЗаменить(ПредоставляемыеОтпускаТекст, "РАЗРЕШЕННЫЕ", "");
	
	// перепишем параметры в запрос
	Для Каждого Параметр Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	// прочие параметры
	Запрос.УстановитьПараметр("НеиспользованныйОтпуск", Перечисления.ИспользованиеОтпусковВидСтроки.НеиспользованныйОтпуск);
	Запрос.УстановитьПараметр("КомпенсацияОтпуска", Перечисления.ИспользованиеОтпусковВидСтроки.КомпенсацияОтпуска);
	Запрос.УстановитьПараметр("ОтзывИзОтпуска", Перечисления.ИспользованиеОтпусковВидСтроки.ОтзывИзОтпуска);
	Запрос.УстановитьПараметр("РегистрацияОтпуска", Перечисления.ИспользованиеОтпусковВидСтроки.РегистрацияОтпуска);
	Запрос.УстановитьПараметр("КорректировкаОтпуска", Перечисления.ИспользованиеОтпусковВидСтроки.КорректировкаОтпуска);
	Запрос.УстановитьПараметр("Руководитель", Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	Запрос.УстановитьПараметр("РуководительОК", Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы);
	Запрос.УстановитьПараметр("Исполнитель", глТекущийПользователь);
	Запрос.УстановитьПараметр("ПустоеФизЛицо", Справочники.ФизическиеЛица.ПустаяСсылка());
	Запрос.УстановитьПараметр("Уволен", Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	Запрос.УстановитьПараметр("Организация", Организация);
	
	// данные шапки и подвала
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ВЫБОР
	|					КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Уволен
	|						ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
	|				ИНАЧЕ РаботникиОрганизации.Период
	|			КОНЕЦ) КАК Период
	|ПОМЕСТИТЬ ВТ_ДатаПоследнегоДвижения
	|ИЗ
	|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|						&ДатаАктуальности,
	|						Организация = &ГоловнаяОрганизация
	|						И Сотрудник.ФизЛицо = &ФизЛицо
	|						И Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство) КАК РаботникиОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ВЫБОР
	|				КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Прием
	|					ТОГДА РаботникиОрганизации.Период
	|				ИНАЧЕ &ПустаяДата
	|			КОНЕЦ) КАК ДатаПриема,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ВЫБОР
	|						КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Уволен
	|							ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
	|						ИНАЧЕ &ПустаяДата
	|					   КОНЕЦ) > МАКСИМУМ(ВЫБОР
	|											КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Прием
	|												ТОГДА РаботникиОрганизации.Период
	|											ИНАЧЕ &ПустаяДата
	|										КОНЕЦ)
	|			ТОГДА МАКСИМУМ(ВЫБОР
	|							КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Уволен
	|								ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
	|							ИНАЧЕ &ПустаяДата
	|					   	   КОНЕЦ)
	|		ИНАЧЕ &ПустаяДата
	|	КОНЕЦ КАК ДатаУвольнения
	|ПОМЕСТИТЬ ВТ_ПериодРаботы
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|ГДЕ
	|	РаботникиОрганизации.Организация = &ГоловнаяОрганизация
	|	И РаботникиОрганизации.Сотрудник.ФизЛицо = &ФизЛицо
	|	И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство)
	|	И РаботникиОрганизации.ПричинаИзмененияСостояния В (&Прием, &Уволен)
	|	И ВЫБОР
	|			КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Уволен
	|			ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1) 
	|		ИНАЧЕ РаботникиОрганизации.Период
	|	КОНЕЦ <= &ДатаАктуальности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|	МАКСИМУМ(ВЫБОР
	|				КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Уволен
	|					ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
	|				ИНАЧЕ РаботникиОрганизации.Период
	|			КОНЕЦ) КАК Период
	|ПОМЕСТИТЬ ВТ_ДатыПоследнихДвижений
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|		&ДатаАктуальности,
	|		Организация = &ГоловнаяОрганизация
	|		И Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство) КАК РаботникиОрганизации
	|СГРУППИРОВАТЬ ПО
	|		РаботникиОрганизации.Сотрудник.ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Наименование КАК НазваниеОрганизации,
	|	ЕСТЬNULL(ФИОФизЛицРаботник.Фамилия + "" "" + ФИОФизЛицРаботник.Имя + "" "" + ФИОФизЛицРаботник.Отчество, ФизическиеЛица.Наименование) КАК ФИОРаботника,
	|	РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизации,
	|	РаботникиОрганизацииСрезПоследних.Должность.Наименование КАК Должность,
	|	РаботникиОрганизацииСрезПоследних.ТарифныйРазряд.Наименование КАК ТарифныйРазряд,
	|	РаботникиОрганизацииСрезПоследних.Сотрудник.Код КАК ТабельныйНомер,
	|	ПериодРаботы.ДатаПриема,
	|	ПериодРаботы.ДатаУвольнения,
	|	
	|	ОтветЛицаРуководитель.Должность.Наименование КАК ДолжностьРуководителя,
	|	ВЫБОР
	|		КОГДА ФИОФизЛицРуководитель.ФизЛицо ЕСТЬ NULL
	|			ТОГДА ОтветЛицаРуководитель.ФизическоеЛицо.Наименование
	|		ИНАЧЕ ФИОФизЛицРуководитель.Фамилия + ВЫБОР
	|												КОГДА ФИОФизЛицРуководитель.Имя <> """" 
	|													ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицРуководитель.Имя, 1, 1) + "".""
	|												ИНАЧЕ """"
	|											  КОНЕЦ + 
	|											  ВЫБОР
	|												КОГДА ФИОФизЛицРуководитель.Отчество <> """" 
	|													ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицРуководитель.Отчество, 1, 1) + "".""
	|												ИНАЧЕ """"
	|											  КОНЕЦ
	|	КОНЕЦ КАК ФИОРуководителя,
	|
	|	ОтветЛицаРуководительОК.Должность.Наименование КАК ДолжностьРуководителяОК,
	|	ВЫБОР
	|		КОГДА ФИОФизЛицРуководительОК.ФизЛицо ЕСТЬ NULL
	|			ТОГДА ОтветЛицаРуководительОК.ФизическоеЛицо.Наименование
	|		ИНАЧЕ ФИОФизЛицРуководительОК.Фамилия + ВЫБОР
	|												КОГДА ФИОФизЛицРуководительОК.Имя <> """" 
	|													ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицРуководительОК.Имя, 1, 1) + "".""
	|												ИНАЧЕ """"
	|											  КОНЕЦ + 
	|											  ВЫБОР
	|												КОГДА ФИОФизЛицРуководительОК.Отчество <> """" 
	|													ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицРуководительОК.Отчество, 1, 1) + "".""
	|												ИНАЧЕ """"
	|											  КОНЕЦ
	|	КОНЕЦ КАК ФИОРуководителяОК,
	|
	|	СведенияОбИсполнителе.Должность.Наименование КАК ДолжностьИсполнителя,
	|	ВЫБОР
	|		КОГДА ФИОФизЛицИсполнитель.ФизЛицо ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА Пользователи.ФизЛицо = &ПустоеФизЛицо
	|						ТОГДА Пользователи.Наименование
	|					ИНАЧЕ Пользователи.ФизЛицо.Наименование
	|				  КОНЕЦ 
	|		ИНАЧЕ ФИОФизЛицИсполнитель.Фамилия + ВЫБОР
	|												КОГДА ФИОФизЛицИсполнитель.Имя <> """" 
	|													ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицИсполнитель.Имя, 1, 1) + "".""
	|												ИНАЧЕ """"
	|											  КОНЕЦ + 
	|											  ВЫБОР
	|												КОГДА ФИОФизЛицИсполнитель.Отчество <> """" 
	|													ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицИсполнитель.Отчество, 1, 1) + "".""
	|												ИНАЧЕ """"
	|											  КОНЕЦ
	|	КОНЕЦ КАК ФИОИсполнителя
	|
	|ИЗ
	|	Справочник.Организации КАК Организации 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ФизическиеЛица.Ссылка = &ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицРаботник
	|		ПО ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДатаПоследнегоДвижения КАК ДатаПоследнегоДвижения
	|		ПО ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизацииСрезПоследних
	|		ПО ДатаПоследнегоДвижения.Период = ВЫБОР
	|												КОГДА РаботникиОрганизацииСрезПоследних.ПричинаИзмененияСостояния = &Уволен
	|													ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизацииСрезПоследних.Период, ДЕНЬ, -1)
	|												ИНАЧЕ РаботникиОрганизацииСрезПоследних.Период
	|										   КОНЕЦ
	|			И РаботникиОрганизацииСрезПоследних.Сотрудник.ФизЛицо = &ФизЛицо
	|			И РаботникиОрганизацииСрезПоследних.Организация = &ГоловнаяОрганизация
	|			И (РаботникиОрганизацииСрезПоследних.Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодРаботы КАК ПериодРаботы
	|		ПО ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				СтруктурнаяЕдиница = &Организация
	|				И ОтветственноеЛицо = &Руководитель) КАК ОтветЛицаРуководитель
	|		ПО ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности) КАК ФИОФизЛицРуководитель
	|		ПО ОтветЛицаРуководитель.ФизическоеЛицо = ФИОФизЛицРуководитель.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				СтруктурнаяЕдиница = &Организация
	|				И ОтветственноеЛицо = &РуководительОК) КАК ОтветЛицаРуководительОК
	|		ПО ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности) КАК ФИОФизЛицРуководительОК
	|		ПО ОтветЛицаРуководительОК.ФизическоеЛицо = ФИОФизЛицРуководительОК.ФизЛицо
	|							
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО Пользователи.Ссылка = &Исполнитель
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДатыПоследнихДвижений КАК ДатыПоследнихДвижений
	|		ПО Пользователи.ФизЛицо = ДатыПоследнихДвижений.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК СведенияОбИсполнителе
	|		ПО ДатыПоследнихДвижений.ФизЛицо = СведенияОбИсполнителе.Сотрудник.ФизЛицо
	|			И ДатыПоследнихДвижений.Период = ВЫБОР
	|												КОГДА СведенияОбИсполнителе.ПричинаИзмененияСостояния = &Уволен
	|													ТОГДА ДОБАВИТЬКДАТЕ(СведенияОбИсполнителе.Период, ДЕНЬ, -1)
	|												ИНАЧЕ СведенияОбИсполнителе.Период
	|											 КОНЕЦ
	|			И СведенияОбИсполнителе.Организация = &ГоловнаяОрганизация
	|			И (СведенияОбИсполнителе.Сотрудник.ВидЗанятости <> &ВнутреннееСовместительство)
	|							
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности) КАК ФИОФизЛицИсполнитель
	|		ПО Пользователи.ФизЛицо = ФИОФизЛицИсполнитель.ФизЛицо
	|
	|ГДЕ
	|	Организации.Ссылка = &ГоловнаяОрганизация
	|";

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Если Не ЗначениеЗаполнено(Выборка.ДатаПриема) Тогда
			Сообщить("Сотрудник не принят на работу в организацию!");
			Возврат;
		КонецЕсли;
	
		ОбластьШапка.Параметры.Заполнить(Выборка);
		Если ЗначениеЗаполнено(Выборка.ТарифныйРазряд) Тогда
			ОбластьШапка.Параметры.Должность = "" + Выборка.Должность + ", " + Выборка.ТарифныйРазряд;
		КонецЕсли;
		ОбластьПодвал.Параметры.Заполнить(Выборка);
	Иначе
		Сообщить("Данные отчета не обнаружены!");
		Возврат;
	КонецЕсли;
	
	ДокументРезультат.Вывести(ОбластьШапка);
	ВысотаТаблицы = ДокументРезультат.ВысотаТаблицы;
	ДокументРезультат.Вывести(ОбластьШапкаТаблицы);
	НоваяВысотаТаблицы = ДокументРезультат.ВысотаТаблицы;
	ДокументРезультат.ПовторятьПриПечатиСтроки = ДокументРезультат.Область(ВысотаТаблицы + 1, , НоваяВысотаТаблицы);
	ДокументРезультат.ФиксацияСверху = НоваяВысотаТаблицы;

	// Данные таблицы
	ОтпускаТекст = "
	|" + ПредоставляемыеОтпускаТекст + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	1 КАК ВидДвижения,
	|	ПредоставляемыеОтпуска.РабочийГодС,
	|	ПредоставляемыеОтпуска.РабочийГодПо,
	|	ПредоставляемыеОтпуска.ВидТрудовогоОтпуска,
	|	ПредоставляемыеОтпуска.ВидТрудовогоОтпуска.ОчередностьПредоставленияОтпуска КАК ОчередностьПредоставленияОтпуска,
	|	ПредоставляемыеОтпуска.ВидТрудовогоОтпуска.Наименование КАК ВидОтпуска,
	|	ПредоставляемыеОтпуска.ПериодДействияНачало,
	|	ПредоставляемыеОтпуска.ПериодДействияКонец,
	|	ПредоставляемыеОтпуска.РазмерОтпуска,
	|	ПредоставляемыеОтпуска.ДнейВРабочемГоду,
	|	ПредоставляемыеОтпуска.ДнейВПериодеДействияОтпуска,
	|	ПредоставляемыеОтпуска.ДнейИсключаемыхИзСтажа,
	|	ПредоставляемыеОтпуска.Результат,
	|	NULL КАК ДатаНачала,
	|	NULL КАК ДатаОкончания,
	|	0 КАК ИспользованоДней,
	|	NULL КАК НомерДок,
	|	NULL КАК ДатаДок,
	|	"""" КАК Примечание,
	|	"""" КАК Расшифровка,
	|	0 КАК НеиспользованоДней
	|ИЗ
	|	ВТ_ПредоставляемыеОтпуска КАК ПредоставляемыеОтпуска
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК ВидДвижения,
	|	НеиспользованныеОтпуска.РабочийГодС,
	|	НеиспользованныеОтпуска.РабочийГодПо,
	|	НеиспользованныеОтпуска.ВидТрудовогоОтпуска,
	|	НеиспользованныеОтпуска.ВидТрудовогоОтпуска.ОчередностьПредоставленияОтпуска КАК ОчередностьПредоставленияОтпуска,
	|	НеиспользованныеОтпуска.ВидТрудовогоОтпуска.Наименование КАК ВидОтпуска,
	|	НеиспользованныеОтпуска.ДатаНачала КАК ПериодДействияНачало,
	|	НеиспользованныеОтпуска.ДатаОкончания КАК ПериодДействияКонец,
	|	- НеиспользованныеОтпуска.ИспользованоДней КАК РазмерОтпуска,
	|	0 КАК ДнейВРабочемГоду,
	|	0 КАК ДнейВПериодеДействияОтпуска,
	|	0 КАК ДнейИсключаемыхИзСтажа,
	|	- НеиспользованныеОтпуска.ИспользованоДней КАК Результат,
	|	NULL КАК ДатаНачала,
	|	NULL КАК ДатаОкончания,
	|	0 КАК ИспользованоДней,
	|	NULL КАК НомерДок,
	|	NULL КАК ДатаДок,
	|	"""" КАК Примечание,
	|	НеиспользованныеОтпуска.Регистратор КАК Расшифровка,
	|	0 КАК НеиспользованоДней
	|ИЗ
	|	РегистрНакопления.ИспользованиеОтпусковРаботникамиОрганизаций КАК НеиспользованныеОтпуска
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеРасчета КАК ДанныеРасчета
	|		ПО НеиспользованныеОтпуска.Организация = &ГоловнаяОрганизация
	|			И НеиспользованныеОтпуска.Сотрудник = ДанныеРасчета.Сотрудник
	|			И НеиспользованныеОтпуска.Период МЕЖДУ ДанныеРасчета.ДатаПриема И КОНЕЦПЕРИОДА(ДанныеРасчета.ДатаРасчета, ДЕНЬ)
	|			И НеиспользованныеОтпуска.ВидСтроки = &НеиспользованныйОтпуск
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3 КАК ВидДвижения,
	|	ИспользованиеОтпусков.РабочийГодС,
	|	ИспользованиеОтпусков.РабочийГодПо,
	|	ИспользованиеОтпусков.ВидТрудовогоОтпуска,
	|	ИспользованиеОтпусков.ВидТрудовогоОтпуска.ОчередностьПредоставленияОтпуска КАК ОчередностьПредоставленияОтпуска,
	|	ИспользованиеОтпусков.ВидТрудовогоОтпуска.Наименование КАК ВидОтпуска,
	|	NULL КАК ПериодДействияНачало,
	|	NULL КАК ПериодДействияКонец,
	|	NULL КАК РазмерОтпуска,
	|	NULL КАК ДнейВРабочемГоду,
	|	NULL КАК ДнейВПериодеДействияОтпуска,
	|	NULL КАК ДнейИсключаемыхИзСтажа,
	|	0 КАК Результат,
	|	ВЫБОР
	|		КОГДА ИспользованиеОтпусков.ДатаНачала <> &ПустаяДата
	|			ТОГДА ИспользованиеОтпусков.ДатаНачала
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ИспользованиеОтпусков.Период, ДЕНЬ)
	|	КОНЕЦ КАК ДатаНачала,
	|	ИспользованиеОтпусков.ДатаОкончания,
	|	ИспользованиеОтпусков.ИспользованоДней,
	|	ИспользованиеОтпусков.Регистратор.Номер КАК НомерДок,
	|	ИспользованиеОтпусков.Регистратор.Дата КАК ДатаДок,
	|	ПРЕДСТАВЛЕНИЕ(ИспользованиеОтпусков.ВидСтроки) КАК Примечание,
	|	ИспользованиеОтпусков.Регистратор КАК Расшифровка,
	|	0 КАК НеиспользованоДней
	|ИЗ
	|	ВТ_ДанныеРасчета КАК ДанныеРасчета
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИспользованиеОтпусковРаботникамиОрганизаций КАК ИспользованиеОтпусков
	|		ПО ИспользованиеОтпусков.Организация = &ГоловнаяОрганизация
	|			И ДанныеРасчета.Сотрудник = ИспользованиеОтпусков.Сотрудник
	|			И ИспользованиеОтпусков.ВидСтроки <> &НеиспользованныйОтпуск
	|			И ИспользованиеОтпусков.Период МЕЖДУ ДанныеРасчета.ДатаПриема И ДанныеРасчета.ДатаРасчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	РабочийГодС,
	|	РабочийГодПо,
	|	ОчередностьПредоставленияОтпуска,
	|	ВидОтпуска,
	|	ВидДвижения,
	|	ПериодДействияНачало,
	|	ДатаНачала,
	|	ДатаДок
	|
	|ИТОГИ 
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР КОГДА ВидДвижения = 1 ТОГДА Результат ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(5, 0)) + СУММА(ВЫБОР КОГДА ВидДвижения = 2 ТОГДА Результат ИНАЧЕ 0 КОНЕЦ) КАК Результат, 
	|	СУММА(ИспользованоДней),
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР КОГДА ВидДвижения = 1 ТОГДА Результат ИНАЧЕ 0 КОНЕЦ) КАК ЧИСЛО(5, 0)) + СУММА(ВЫБОР КОГДА ВидДвижения = 2 ТОГДА Результат ИНАЧЕ 0 КОНЕЦ) - СУММА(ВЫБОР КОГДА ВидДвижения = 3 ТОГДА ИспользованоДней ИНАЧЕ 0 КОНЕЦ) КАК НеиспользованоДней, 
	|	МАКСИМУМ(ВидОтпуска)
	|ПО
	|	ОБЩИЕ,
	|	РабочийГодС,
	|	РабочийГодПо,
	|	ВидТрудовогоОтпуска
	|";
	
	Запрос.Текст = ОтпускаТекст;
	
	ВыборкаОбщие = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ИтогоРезультат = 0;
	ИтогоИспользованоДней = 0;
	ИтогоНеиспользованоДней = 0;
	
	Если ВыборкаОбщие.Следующий() Тогда
	
		ВыборкаРабочийГодС = ВыборкаОбщие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаРабочийГодС.Следующий() Цикл

			ВыборкаРабочийГодПо = ВыборкаРабочийГодС.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаРабочийГодПо.Следующий() Цикл
			
				// Т.к. округляем до целого в пределах одного рабочего года по каждому виду отпуска,
				// то общие итоги за рабочий год по всем видам отпусков будут рассчитаны неверно
				// из-за того, что запрос считает итоги по детальным строкам. Поэтому рассчитываем
				// общий итог за год самостоятельно
				
				РезультатЗаГод = 0;
				ИспользованоДнейЗаГод = 0;
				НеиспользованоДнейЗаГод = 0;
				
				ВыборкаОтпуск = ВыборкаРабочийГодПо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаОтпуск.Следующий() Цикл
					РезультатЗаГод = РезультатЗаГод + ВыборкаОтпуск.Результат;
					ИспользованоДнейЗаГод = ИспользованоДнейЗаГод + ВыборкаОтпуск.ИспользованоДней;
					НеИспользованоДнейЗаГод = НеИспользованоДнейЗаГод + ВыборкаОтпуск.НеИспользованоДней;
				КонецЦикла;
				
				// накопим итоги по всему отчету
				ИтогоРезультат = ИтогоРезультат + РезультатЗаГод;
				ИтогоИспользованоДней = ИтогоИспользованоДней + ИспользованоДнейЗаГод;
				ИтогоНеИспользованоДней = ИтогоНеИспользованоДней + НеИспользованоДнейЗаГод;
				
				// строка итого за рабочий год
				ОбластьСтрокаРабочийГод.Параметры.Заполнить(ВыборкаРабочийГодПо);
				ОбластьСтрокаРабочийГод.Параметры.Результат = РезультатЗаГод;
				ОбластьСтрокаРабочийГод.Параметры.ИспользованоДней = ИспользованоДнейЗаГод;
				ОбластьСтрокаРабочийГод.Параметры.НеИспользованоДней = НеИспользованоДнейЗаГод;
				
				ДокументРезультат.Вывести(ОбластьСтрокаРабочийГод);

				// группируем по годам и раскрываем те рабочие года, за которые есть остаток дней отпуска
				ДокументРезультат.НачатьГруппуСтрок(, НеИспользованоДнейЗаГод <> 0);
				
				ВыборкаОтпуск.Сбросить();				
				Пока ВыборкаОтпуск.Следующий() Цикл

					// область итоги по виду отпуска за рабочий год
					ОбластьСтрокаОтпуск.Параметры.Заполнить(ВыборкаОтпуск);
					ДокументРезультат.Вывести(ОбластьСтрокаОтпуск);
					
					ДокументРезультат.НачатьГруппуСтрок(, ВыборкаОтпуск.НеиспользованоДней <> 0);

					// расшифровку расчета и использования отпуска
					ВыборкаДетали = ВыборкаОтпуск.Выбрать(ОбходРезультатаЗапроса.Прямой);
					
					КоличествоСтрокПредоставляемогоОтпуска = 0;
					КоличествоСтрокИспользованногоОтпуска = 0;
					
					НомерПервойСтрокиОтпуска = ДокументРезультат.ВысотаТаблицы + 1;
					НомерСтроки = НомерПервойСтрокиОтпуска;
					
					Пока ВыборкаДетали.Следующий() Цикл
						
						Если ВыборкаДетали.ВидДвижения < 3 Тогда // выводит в колонки "расчет предоставляемого отпуска"

							КоличествоСтрокПредоставляемогоОтпуска = КоличествоСтрокПредоставляемогоОтпуска + 1;
							
							ОбластьСтрока.Параметры.Заполнить(ВыборкаДетали);
							ДокументРезультат.Вывести(ОбластьСтрока);
							
						Иначе // вывод фактически использованного отпуска
							
							КоличествоСтрокИспользованногоОтпуска = КоличествоСтрокИспользованногоОтпуска + 1;	
						
							Если КоличествоСтрокИспользованногоОтпуска <= КоличествоСтрокПредоставляемогоОтпуска Тогда
								// выводим в пустые строки, сформированные на предыдущих шагах цикла
								ДокументРезультат.Область(НомерСтроки, 11).Текст = Формат(ВыборкаДетали.ДатаНачала, "ДФ=dd.MM.yyyy");
								ДокументРезультат.Область(НомерСтроки, 12).Текст = Формат(ВыборкаДетали.ДатаОкончания, "ДФ=dd.MM.yyyy");
								ДокументРезультат.Область(НомерСтроки, 13).Текст = ВыборкаДетали.ИспользованоДней;
								ДокументРезультат.Область(НомерСтроки, 14).Текст = ВыборкаДетали.НомерДок;
								ДокументРезультат.Область(НомерСтроки, 15).Текст = ВыборкаДетали.ДатаДок;
								ДокументРезультат.Область(НомерСтроки, 16).Текст = ВыборкаДетали.Примечание;
								
								// назначим параметр расшифровки
								Для Н = 13 По 18 Цикл
									ДокументРезультат.Область(НомерСтроки, Н).Расшифровка = ВыборкаДетали.Расшифровка;
								КонецЦикла;
								
								НомерСтроки = НомерСтроки + 1;
							Иначе
								// надо выводить новую строку
								ОбластьСтрока.Параметры.Заполнить(ВыборкаДетали);
								ДокументРезультат.Вывести(ОбластьСтрока);								
							Конецесли;
						
						КонецЕсли;
						
					КонецЦикла;			
					
					ДокументРезультат.ЗакончитьГруппуСтрок();
					
				КонецЦикла;
				
				ДокументРезультат.ЗакончитьГруппуСтрок();
			
		    КонецЦикла;
		    
		КонецЦикла;
		
	КонецЕсли;

	// Данные подвала

	// заполним итоги по отчету
	ОбластьПодвал.Параметры.Заполнить(ВыборкаОбщие);
	
	ОбластьПодвал.Параметры.Результат = ИтогоРезультат;
	ОбластьПодвал.Параметры.ИспользованоДней = ИтогоИспользованоДней;
	ОбластьПодвал.Параметры.НеИспользованоДней = ИтогоНеИспользованоДней;
	ДокументРезультат.Вывести(ОбластьПодвал);
	
	//Параметры документа
	ДокументРезультат.ИмяПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_Форма_ОтчетПоТрудовымОтпускам";
	ДокументРезультат.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ПолеСлева             = 0;
	ДокументРезультат.ПолеСправа            = 0;
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, "Отчет по отпускам работника организации", Строка(глТекущийПользователь));
КонецПроцедуры

#КонецЕсли