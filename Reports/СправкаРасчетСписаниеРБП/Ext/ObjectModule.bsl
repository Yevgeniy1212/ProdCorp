#Если Клиент Тогда
	
Перем НП Экспорт;
	
Функция СформироватьТекстЗапроса()
	
	Текст	= "ВЫБРАТЬ
	|	РасчетСписанияРБП.Период КАК Период,
	|	РасчетСписанияРБП.Статья КАК Статья,
	|	РасчетСписанияРБП.СчетУчета,
	|	РасчетСписанияРБП.СчетСписания,
	|	РасчетСписанияРБП.ДатаНачала,
	|	РасчетСписанияРБП.ДатаОкончания,
	|	РасчетСписанияРБП.СуммаДоговора,
	|	РасчетСписанияРБП.КоличествоМесяцев,
	|	СУММА(РасчетСписанияРБП.НачОстаток) КАК НачОстаток,
	|	СУММА(РасчетСписанияРБП.Сумма) КАК Сумма,
	|	СУММА(РасчетСписанияРБП.КонОстаток) КАК КонОстаток,
	|	СУММА(РасчетСписанияРБП.НачОстатокПР) КАК НачОстатокПР,
	|	СУММА(РасчетСписанияРБП.НачОстатокВР) КАК НачОстатокВР,
	|	СУММА(РасчетСписанияРБП.СуммаПР) КАК СуммаПР,
	|	СУММА(РасчетСписанияРБП.СуммаВР) КАК СуммаВР,
	|	СУММА(РасчетСписанияРБП.КонОстатокПР) КАК КонОстатокПР,
	|	СУММА(РасчетСписанияРБП.КонОстатокВР) КАК КонОстатокВР
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		РасчетСписанияРБП.ПериодРасчета КАК Период,
	|		РасчетСписанияРБП.Статья КАК Статья,
	|		РасчетСписанияРБП.СчетУчета КАК СчетУчета,
	|		РасчетСписанияРБП.СчетСписания КАК СчетСписания,
	|		РасчетСписанияРБП.ДатаНачала КАК ДатаНачала,
	|		РасчетСписанияРБП.ДатаОкончания КАК ДатаОкончания,
	|		ЕСТЬNULL(РасчетСписанияРБП.СуммаДоговора, 0) КАК СуммаДоговора,
	|		ЕСТЬNULL(РасчетСписанияРБП.КоличествоМесяцев, 0) КАК КоличествоМесяцев,
	|		ЕСТЬNULL(РасчетСписанияРБП.НачОстаток, 0) КАК НачОстаток,
	|		ЕСТЬNULL(РасчетСписанияРБП.Сумма, 0) КАК Сумма,
	|		ЕСТЬNULL(РасчетСписанияРБП.КонОстаток, 0) КАК КонОстаток,
	|		ВЫБОР
	|			КОГДА РасчетСписанияРБП.ВидУчета В ИЕРАРХИИ (&ВидУчетаПР)
	|				ТОГДА ЕСТЬNULL(РасчетСписанияРБП.НачОстаток, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НачОстатокПР,
	|		ВЫБОР
	|			КОГДА РасчетСписанияРБП.ВидУчета = &ВидУчетаВР
	|				ТОГДА ЕСТЬNULL(РасчетСписанияРБП.НачОстаток, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НачОстатокВР,
	|		ВЫБОР
	|			КОГДА РасчетСписанияРБП.ВидУчета В ИЕРАРХИИ (&ВидУчетаПР)
	|				ТОГДА ЕСТЬNULL(РасчетСписанияРБП.Сумма, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаПР,
	|		ВЫБОР
	|			КОГДА РасчетСписанияРБП.ВидУчета = &ВидУчетаВР
	|				ТОГДА ЕСТЬNULL(РасчетСписанияРБП.Сумма, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаВР,
	|		ВЫБОР
	|			КОГДА РасчетСписанияРБП.ВидУчета В ИЕРАРХИИ (&ВидУчетаПР)
	|				ТОГДА ЕСТЬNULL(РасчетСписанияРБП.КонОстаток, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК КонОстатокПР,
	|		ВЫБОР
	|			КОГДА РасчетСписанияРБП.ВидУчета = &ВидУчетаВР
	|				ТОГДА ЕСТЬNULL(РасчетСписанияРБП.КонОстаток, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК КонОстатокВР
	|	ИЗ
	|		РегистрСведений.РасчетСписанияРБП КАК РасчетСписанияРБП
	|	ГДЕ
	|		РасчетСписанияРБП.ПериодРасчета МЕЖДУ &ДатаНач И &ДатаКон
	|		И РасчетСписанияРБП.Организация = &Организация
	|		И РасчетСписанияРБП.ВидУчета = &ВидУчета
	|		И РасчетСписанияРБП.Активность) КАК РасчетСписанияРБП
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетСписанияРБП.Период,
	|	РасчетСписанияРБП.Статья,
	|	РасчетСписанияРБП.СчетУчета,
	|	РасчетСписанияРБП.СчетСписания,
	|	РасчетСписанияРБП.ДатаНачала,
	|	РасчетСписанияРБП.ДатаОкончания,
	|	РасчетСписанияРБП.СуммаДоговора,
	|	РасчетСписанияРБП.КоличествоМесяцев
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Статья
	|ИТОГИ
	|	СУММА(НачОстаток),
	|	СУММА(Сумма),
	|	СУММА(КонОстаток),
	|	СУММА(НачОстатокПР),
	|	СУММА(НачОстатокВР),
	|	СУММА(СуммаПР),
	|	СУММА(СуммаВР),
	|	СУММА(КонОстатокПР),
	|	СУММА(КонОстатокВР)
	|ПО
	|	ОБЩИЕ,
	|	Статья";
	
	Возврат Текст;
	
КонецФункции
	
// Выполняет запрос и формирует табличный документ-результат отчета
	// в соответствии с настройками, заданными значениями реквизитов отчета.
	//
	// Параметры:
	//	ДокументРезультат - табличный документ, формируемый отчетом
	//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
	//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
	//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь, НачалоПодписи, ПоказыватьПодписи) Экспорт
		
	ДатаНач = НачалоМесяца(ПериодРегистрации);
	ДатаКон  = КонецМесяца(ПериодРегистрации);
	Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
		Предупреждение("Дата начала периода не может быть больше даты окончания периода");
		Возврат;
	КонецЕсли;
	НачалоПериода = НачалоДня(ДатаНач);
	КонецПериода  = КонецДня(ДатаКон);
	
	ДокументРезультат.Очистить();
	
	Макет      = ПолучитьМакет("Отчет");
	МакетОбщий = ПолучитьОбщийМакет("СправкаРасчет");
	
	ЗаголовокОтчета = МакетОбщий.ПолучитьОбласть("Заголовок");
	
	
	// Когда нужен только заголовок:
	Если ТолькоЗаголовок Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	СписокСчетов = Новый Массив;
	СписокСчетов.Добавить(ПланыСчетов.Типовой.КраткосрочныеРасходыБудущихПериодов);
	СписокСчетов.Добавить(ПланыСчетов.Типовой.ДолгосрочныеРасходыБудущихПериодов);
	
	
	СписокСчетовНУ = Новый Массив;
	СписокСчетовНУ.Добавить(ПланыСчетов.Налоговый.РасходыБудущихПериодов);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач",     НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон",     КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ОграниченияПоПостроителюОтчета = Отчеты_БК.ПолучитьТекстОграниченийПоПостроителюОтчета(ПостроительОтчета, Запрос);
	
	Если Не ПустаяСтрока(ОграниченияПоПостроителюОтчета) Тогда
		
		ОграниченияПоПостроителюОтчета = " И " + ОграниченияПоПостроителюОтчета;
		ОграниченияПоПостроителюОтчета = СтрЗаменить(ОграниченияПоПостроителюОтчета, "Субконто1", "Статья");
		
	КонецЕсли;
	
	Запрос.Текст = СформироватьТекстЗапроса();
	
	Запрос.Текст  = СтрЗаменить(Запрос.Текст, "И РасчетСписанияРБП.Активность","И РасчетСписанияРБП.Активность " + ОграниченияПоПостроителюОтчета);
	
	Если ВариантОтчета = 2 Тогда
		Запрос.УстановитьПараметр("ВидУчета",  Справочники.ВидыУчетаНУ.НУ);
	Иначе	
		Запрос.УстановитьПараметр("ВидУчета",  Справочники.ВидыУчетаНУ.ПустаяСсылка());
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ВидУчетаПР",  Справочники.ВидыУчетаНУ.ПР);
	Запрос.УстановитьПараметр("ВидУчетаВР",  Справочники.ВидыУчетаНУ.ВР);
	
	Если ВариантОтчета = 3 Тогда
		Запрос.Текст  = СтрЗаменить(Запрос.Текст, "И РасчетСписанияРБП.ВидУчета = &ВидУчета","И НЕ РасчетСписанияРБП.ВидУчета = &ВидУчета");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	
	ОбластьШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрокаЗатрат     = Макет.ПолучитьОбласть("СтрокаЗатрат");
	ОбластьИтого            = Макет.ПолучитьОбласть("Итого");
	ОбластьИтогоПР          = Макет.ПолучитьОбласть("ИтогоПР");
	ОбластьИтогоВР          = Макет.ПолучитьОбласть("ИтогоВР");
	ОбластьОкончаниеТаблицы = Макет.ПолучитьОбласть("ОкончаниеТаблицы");
	ОбластьПодвал           = МакетОбщий.ПолучитьОбласть("Подвал");
	
	ЗаголовокОтчета.Параметры.Период              = "" + ПредставлениеПериода(НачалоМесяца(ПериодРегистрации), КонецМесяца(ПериодРегистрации), "ФП = Истина");
	ЗаголовокОтчета.Параметры.НазваниеОрганизации = "" + Организация.НаименованиеПолное;
	ЗаголовокОтчета.Параметры.ДатаСоставления     = КонецМесяца(ПериодРегистрации);
	ЗаголовокОтчета.Параметры.НазваниеОтчета      = "Списание расходов будущих периодов (" +?(ВариантОтчета = 1, "бухгалтерский учет", "налоговый учет") + ")";
	ДокументРезультат.Вывести(ЗаголовокОтчета);
	
	СтрОтбор = УправлениеОтчетами.СформироватьСтрокуОтборов(ПостроительОтчета.Отбор);
	Если Не ПустаяСтрока(СтрОтбор) Тогда
		ОбластьОтбор = МакетОбщий.ПолучитьОбласть("СтрокаОтбор");
		ОбластьОтбор.Параметры.ТекстПроОтбор = "Отбор: " + СтрОтбор;
		ДокументРезультат.Вывести(ОбластьОтбор);
	КонецЕсли;
	
	// Параметр для показа заголовка
	ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;
	ДокументРезультат.Вывести(ОбластьШапка); 
	ВыборкаОбщиеИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщиеИтоги.Следующий();
	
	ВыборкаРБП = ВыборкаОбщиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРБП.Следующий() Цикл			
		
		Выборка = ВыборкаРБП.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ОбластьСтрокаЗатрат.Параметры.Заполнить(Выборка);
			
			ОбластьСтрокаЗатрат.Параметры.Аналитика1 	= Выборка.Статья.СубконтоБУ1;
			ОбластьСтрокаЗатрат.Параметры.Аналитика2 	= Выборка.Статья.СубконтоБУ2;
			ОбластьСтрокаЗатрат.Параметры.Аналитика3 	= Выборка.Статья.СубконтоБУ3;
			
			ОбластьСтрокаЗатрат.Параметры.ДатаНачала 	= Формат(Выборка.ДатаНачала, "ДЛФ=D");
			ОбластьСтрокаЗатрат.Параметры.ДатаОкончания = Формат(Выборка.ДатаОкончания, "ДЛФ=D");
			
			ОбластьСтрокаЗатрат.Параметры.НачОстатокПР 	= ?(Выборка.НачОстатокПР = 0, "", "ПР: " + Выборка.НачОстатокПР);
			ОбластьСтрокаЗатрат.Параметры.КонОстатокПР 	= ?(Выборка.КонОстатокПР = 0, "", "ПР: " + Выборка.КонОстатокПР);
			ОбластьСтрокаЗатрат.Параметры.СуммаПР  		= ?(Выборка.СуммаПР = 0, "", "ПР: " + Выборка.СуммаПР);
			ОбластьСтрокаЗатрат.Параметры.НачОстатокВР 	= ?(Выборка.НачОстатокВР = 0, "", "ВР: " + Выборка.НачОстатокВР);
			ОбластьСтрокаЗатрат.Параметры.КонОстатокВР 	= ?(Выборка.КонОстатокВР = 0, "", "ВР: " + Выборка.КонОстатокВР);
			ОбластьСтрокаЗатрат.Параметры.СуммаВР  		= ?(Выборка.СуммаВР = 0, "", "ВР: " + Выборка.СуммаВР);	
			ДокументРезультат.Вывести(ОбластьСтрокаЗатрат); 
			
		КонецЦикла;  // Статья
		
	КонецЦикла;    // Период	
	
	ОбластьИтого.Параметры.ИтогоНачОстаток   	= ВыборкаОбщиеИтоги.НачОстаток;
	ОбластьИтого.Параметры.ИтогоКонОстаток   	= ВыборкаОбщиеИтоги.КонОстаток;
	ОбластьИтого.Параметры.ИтогоСумма    		= ВыборкаОбщиеИтоги.Сумма;
	ОбластьИтогоПР.Параметры.ИтогоНачОстатокПР 	= ВыборкаОбщиеИтоги.НачОстатокПР;
	ОбластьИтогоПР.Параметры.ИтогоКонОстатокПР 	= ВыборкаОбщиеИтоги.КонОстатокПР;
	ОбластьИтогоПР.Параметры.ИтогоСуммаПР  		= ВыборкаОбщиеИтоги.СуммаПР;
	ОбластьИтогоВР.Параметры.ИтогоНачОстатокВР 	= ВыборкаОбщиеИтоги.НачОстатокВР;
	ОбластьИтогоВР.Параметры.ИтогоКонОстатокВР 	= ВыборкаОбщиеИтоги.КонОстатокВР;
	ОбластьИтогоВР.Параметры.ИтогоСуммаВР  		= ВыборкаОбщиеИтоги.СуммаВР;
	
	ДокументРезультат.Вывести(ОбластьИтого);
	
	Если Не ВыборкаРБП.СуммаПР = 0 Или Не ВыборкаРБП.НачОстатокПР = 0 Или Не ВыборкаРБП.КонОстатокПР = 0 Тогда
		ДокументРезультат.Вывести(ОбластьИтогоПр);
	КонецЕсли;
	Если Не ВыборкаРБП.СуммаВР = 0 Или Не ВыборкаРБП.НачОстатокВР = 0 Или Не ВыборкаРБП.КонОстатокВР = 0 Тогда
		ДокументРезультат.Вывести(ОбластьИтогоВр);
	КонецЕсли;
	ДокументРезультат.Вывести(ОбластьОкончаниеТаблицы);
	
	ОбластьПодвал.Параметры.ТекстПримечания = ?(ВариантОтчета = 3, "ПР: Постоянные разницы в оценке стоимости активов и обязательств. ВР: Временные разницы в оценке стоимости активов и обязательств.", "");
	
	ДокументРезультат.Вывести(ОбластьПодвал);
	
	ВысотаПодписи = ДокументРезультат.Области.Подвал.Низ - ДокументРезультат.Области.Подвал.Верх;
	
	ДокументРезультат.Области.Подвал.Видимость = ПоказыватьПодписи;
	
	
	// Первую колонку не печатаем
	ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
	
	// Присвоим имя для сохранения параметров печати табличного документа
	ДокументРезультат.ИмяПараметровПечати = "Списание расходов будущих периодов";
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета, Строка(глТекущийПользователь));
	
КонецПроцедуры // СформироватьОтчет
	
	
////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 
	
НП = Новый НастройкаПериода;
	
#КонецЕсли