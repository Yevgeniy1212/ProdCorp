#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Получить параметры исполнения отчета
//
Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Результат= общ_ОтчетыВызовСервера.ПолучитьПараметрыИсполненияОтчета();
	
	Результат.Вставить("ИспользоватьВнешниеНаборыДанных",Истина);
	
	Возврат Результат;
							
КонецФункции

// Получить текст заголовка
//
Функция ПолучитьТекстЗаголовка(ПараметрыОтчета, ОрганизацияВНачале = Истина) Экспорт
	
	Возврат общ_ОтчетыВызовСервера.ПолучитьТекстЗаголовка(ПараметрыОтчета, ОрганизацияВНачале, "Платежный календарь");
	
КонецФункции

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ПередКомпоновкойМакета(ПараметрыОтчета, Схема, КомпоновщикНастроек) Экспорт
	
	ДетализацияПоПериодам = ПараметрыОтчета.ДетализацияПоПериодам;
	Периодичность=?(ДетализацияПоПериодам.Пустая(),Перечисления.фин_Периодичность.День,ДетализацияПоПериодам);	
	
	// Обновить периодичность в тексте запроса
	//УстановитьПериодичность(ПараметрыОтчета, Схема);
	
	КомпоновщикНастроек.Настройки.Структура.Очистить();
	КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
	
	Если ПараметрыОтчета.Свойство("НачалоПериода") Тогда
		Если ЗначениеЗаполнено(ПараметрыОтчета.НачалоПериода) Тогда
			общ_ОтчетыВызовСервера.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоДня(ПараметрыОтчета.НачалоПериода));
		Иначе
			общ_ОтчетыВызовСервера.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", Дата(1, 1, 1));
		КонецЕсли;
	КонецЕсли;
	Если ПараметрыОтчета.Свойство("КонецПериода") Тогда
		Если ЗначениеЗаполнено(ПараметрыОтчета.КонецПериода) Тогда
			общ_ОтчетыВызовСервера.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(ПараметрыОтчета.КонецПериода));
		Иначе
			общ_ОтчетыВызовСервера.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", Дата(3999, 11, 1));
		КонецЕсли;
	КонецЕсли;
	
	ТаблицаГруппировкаОтчета = КомпоновщикНастроек.Настройки.Структура.Добавить(Тип("ТаблицаКомпоновкиДанных"));
	ДобавитьВыбранныеПоля(ТаблицаГруппировкаОтчета.Выбор,"_Упр");
	
	ТаблицаГруппировкаОтчета.ПараметрыВывода.Элементы[5].Значение = РасположениеРесурсовКомпоновкиДанных.Вертикально;
	ТаблицаГруппировкаОтчета.ПараметрыВывода.Элементы[5].Использование = Истина;
	
	ГруппировкаКолонки = ТаблицаГруппировкаОтчета.Колонки.Добавить();
	ПолеГруппировки = ГруппировкаКолонки.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных("Период");
	ГруппировкаКолонки.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	
	УсловноеОформление 				= ГруппировкаКолонки.УсловноеОформление;
	ПолеОформления 					= УсловноеОформление.Элементы.Добавить();
	ПолеОформления.Использование 	= Истина;
	ДопПоле 						= ПолеОформления.Поля.Элементы.Добавить();
	ДопПоле.Использование 			= Истина;
	ДопПоле.Поле  					= Новый ПолеКомпоновкиДанных("Период");
	ПолеОформления.Оформление.Элементы.Найти("Формат").Значение 		= фин_ПроцедурыМеханизмовБюджетирования.ФорматПериода(Периодичность);
	ПолеОформления.Оформление.Элементы.Найти("Формат").Использование 	= Истина;

	Структура = ТаблицаГруппировкаОтчета.Строки.Добавить();
	Первый = Истина;
	Если НЕ ПараметрыОтчета.Свойство("Группировка") Тогда
		ЗаполняемыеНастройки = Новый Структура("Показатели, Группировка, ДополнительныеПоля", Ложь, Истина, Ложь);
		ГруппировкиОтчета = Новый ТаблицаЗначений;
		ГруппировкиОтчета.Колонки.Добавить("Использование");
		ГруппировкиОтчета.Колонки.Добавить("Поле");
		ГруппировкиОтчета.Колонки.Добавить("Представление");
		ГруппировкиОтчета.Колонки.Добавить("ТипГруппировки");
		ЗаполнитьНастройкамиПоУмолчанию(ЗаполняемыеНастройки,Неопределено,ГруппировкиОтчета);
		ПараметрыОтчета.Вставить("Группировка",ГруппировкиОтчета);
	КонецЕсли;
	ВВалютеСчета = Ложь;
	Для Каждого ПолеВыбраннойГруппировки Из ПараметрыОтчета.Группировка Цикл 
		Если ПолеВыбраннойГруппировки.Использование Тогда
			Если ПолеВыбраннойГруппировки.Поле = "БанковскийСчетКасса" ИЛИ ПолеВыбраннойГруппировки.Поле = "ВалютаДенежныхСредств" Тогда
				ВВалютеСчета = Истина;
			КонецЕсли;
			Если Не Первый Тогда 
				Структура = Структура.Структура.Добавить();
			Иначе
				Структура.Имя = "Группировка";
			КонецЕсли;
			Первый = Ложь;                      
						
			ПолеГруппировки = Структура.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
			ПолеГруппировки.Использование  = Истина;
			ПолеГруппировки.Поле           = Новый ПолеКомпоновкиДанных(ПолеВыбраннойГруппировки.Поле);
			
			Если ПолеВыбраннойГруппировки.Поле = "Период" Тогда
				Продолжить;
			Иначе
				Если ПолеВыбраннойГруппировки.ТипГруппировки = Перечисления.ТипДетализацииСтандартныхОтчетов.Иерархия Тогда
					ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Иерархия;
				ИначеЕсли ПолеВыбраннойГруппировки.ТипГруппировки = Перечисления.ТипДетализацииСтандартныхОтчетов.ТолькоИерархия Тогда
					ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.ТолькоИерархия;
				Иначе
					ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
				КонецЕсли;
				УсловноеОформление 				= Структура.УсловноеОформление;
				ПолеОформления 					= УсловноеОформление.Элементы.Добавить();
				ПолеОформления.Использование 	= Истина;
				ДопПоле 						= ПолеОформления.Поля.Элементы.Добавить();
				ДопПоле.Использование 			= Истина;
				ДопПоле.Поле  					= Новый ПолеКомпоновкиДанных(ПолеВыбраннойГруппировки.Поле);
				ПолеОформления.Оформление.Элементы.Найти("Размещение").Значение 		= ТипРазмещенияТекстаКомпоновкиДанных.Переносить;
				ПолеОформления.Оформление.Элементы.Найти("Размещение").Использование = Истина;
				ПолеОформления.Оформление.Элементы.Найти("МинимальнаяШирина").Значение = 20;
				ПолеОформления.Оформление.Элементы.Найти("МинимальнаяШирина").Использование = Истина;
				ПолеОформления.Оформление.Элементы.Найти("МаксимальнаяШирина").Значение = 20;
				ПолеОформления.Оформление.Элементы.Найти("МаксимальнаяШирина").Использование = Истина;
			КонецЕсли;
			
			//ДобавитьВыбранныеПоля(Структура.Выбор,"_Упр");
			
			Структура.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
			Структура.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
			
			Если ВВалютеСчета Тогда
				СписокПолей = СписокПолей();
				Для Каждого ПолеОтчета Из СписокПолей Цикл
					ДобавитьЗаменуПоляВалюты(Структура,ПолеОтчета+"_Упр",ПолеОтчета);
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	Если ПараметрыОтчета.Свойство("ДополнительныеГруппировки") И ПараметрыОтчета.Группировка.НайтиСтроки(Новый Структура("Использование",Истина)).Количество()>0 Тогда
		Если ПараметрыОтчета.ДополнительныеГруппировки.НайтиСтроки(Новый Структура("Использование",Истина)).Количество()>0 Тогда
				Если Не Первый Тогда 
					Структура = Структура.Структура.Добавить();
				Иначе
					Структура.Имя = "Группировка";
				КонецЕсли;
							
				ПолеГруппировки = Структура.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
				ПолеГруппировки.Использование  = Истина;
				ПолеГруппировки.Поле           = Новый ПолеКомпоновкиДанных("ВидДвижения");
				
				ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
				УсловноеОформление 				= Структура.УсловноеОформление;
				ПолеОформления 					= УсловноеОформление.Элементы.Добавить();
				ПолеОформления.Использование 	= Истина;
				ДопПоле 						= ПолеОформления.Поля.Элементы.Добавить();
				ДопПоле.Использование 			= Истина;
				ДопПоле.Поле  					= Новый ПолеКомпоновкиДанных("ВидДвижения");
				ПолеОформления.Оформление.Элементы.Найти("Размещение").Значение 		= ТипРазмещенияТекстаКомпоновкиДанных.Переносить;
				ПолеОформления.Оформление.Элементы.Найти("Размещение").Использование = Истина;
				ПолеОформления.Оформление.Элементы.Найти("МинимальнаяШирина").Значение = 20;
				ПолеОформления.Оформление.Элементы.Найти("МинимальнаяШирина").Использование = Истина;
				ПолеОформления.Оформление.Элементы.Найти("МаксимальнаяШирина").Значение = 20;
				ПолеОформления.Оформление.Элементы.Найти("МаксимальнаяШирина").Использование = Истина;
				
				//ДобавитьВыбранныеПоля(Структура.Выбор);
				общ_ОтчетыВызовСервера.ДобавитьВыбранноеПоле(Структура.Выбор, ?(ВВалютеСчета,"Сумма","Сумма_Упр"));
				
				общ_ОтчетыВызовСервера.ДобавитьВыбранноеПоле(Структура.Выбор,"ВидДвижения");
//				Структура.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
				Структура.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
				
				Если ВВалютеСчета Тогда
					СписокПолей = СписокПолей();
					Для Каждого ПолеОтчета Из СписокПолей Цикл
						ДобавитьЗаменуПоляВалюты(Структура,ПолеОтчета+"_Упр",ПолеОтчета);
					КонецЦикла;
				КонецЕсли;
				
				Если Не Первый Тогда 
					Структура = Структура.Структура.Добавить();
				Иначе
					Структура.Имя = "Группировка";
				КонецЕсли;
							
				ПолеГруппировки = Структура.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
				ПолеГруппировки.Использование  = Истина;
				ПолеГруппировки.Поле           = Новый ПолеКомпоновкиДанных("ВидДокумента");
				
				ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
				УсловноеОформление 				= Структура.УсловноеОформление;
				ПолеОформления 					= УсловноеОформление.Элементы.Добавить();
				ПолеОформления.Использование 	= Истина;
				ДопПоле 						= ПолеОформления.Поля.Элементы.Добавить();
				ДопПоле.Использование 			= Истина;
				ДопПоле.Поле  					= Новый ПолеКомпоновкиДанных("ВидДокумента");
				ПолеОформления.Оформление.Элементы.Найти("Размещение").Значение 		= ТипРазмещенияТекстаКомпоновкиДанных.Переносить;
				ПолеОформления.Оформление.Элементы.Найти("Размещение").Использование = Истина;
				ПолеОформления.Оформление.Элементы.Найти("МинимальнаяШирина").Значение = 20;
				ПолеОформления.Оформление.Элементы.Найти("МинимальнаяШирина").Использование = Истина;
				ПолеОформления.Оформление.Элементы.Найти("МаксимальнаяШирина").Значение = 20;
				ПолеОформления.Оформление.Элементы.Найти("МаксимальнаяШирина").Использование = Истина;
				
				//ДобавитьВыбранныеПоля(Структура.Выбор);
				
				общ_ОтчетыВызовСервера.ДобавитьВыбранноеПоле(Структура.Выбор, ?(ВВалютеСчета,"Сумма","Сумма_Упр"));
				общ_ОтчетыВызовСервера.ДобавитьВыбранноеПоле(Структура.Выбор,"ВидДокумента");
				//Структура.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
				Структура.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
				
				Если ВВалютеСчета Тогда
					СписокПолей = СписокПолей();
					Для Каждого ПолеОтчета Из СписокПолей Цикл
						ДобавитьЗаменуПоляВалюты(Структура,ПолеОтчета+"_Упр",ПолеОтчета);
					КонецЦикла;
				КонецЕсли;
		КонецЕсли;
		Для Каждого ПолеВыбраннойГруппировки Из ПараметрыОтчета.ДополнительныеГруппировки Цикл 
			Если ПолеВыбраннойГруппировки.Использование Тогда
				Если Не Первый Тогда 
					Структура = Структура.Структура.Добавить();
				Иначе
					Структура.Имя = "Группировка";
				КонецЕсли;
							
				ПолеГруппировки = Структура.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
				ПолеГруппировки.Использование  = Истина;
				ПолеГруппировки.Поле           = Новый ПолеКомпоновкиДанных(ПолеВыбраннойГруппировки.Поле);
				
				Если ПолеВыбраннойГруппировки.Поле = "Период" Тогда
					Продолжить;
				Иначе
					Если ПолеВыбраннойГруппировки.ТипГруппировки = Перечисления.ТипДетализацииСтандартныхОтчетов.Иерархия Тогда
						ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Иерархия;
					ИначеЕсли ПолеВыбраннойГруппировки.ТипГруппировки = Перечисления.ТипДетализацииСтандартныхОтчетов.ТолькоИерархия Тогда
						ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.ТолькоИерархия;
					Иначе
						ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
					КонецЕсли;
					УсловноеОформление 				= Структура.УсловноеОформление;
					ПолеОформления 					= УсловноеОформление.Элементы.Добавить();
					ПолеОформления.Использование 	= Истина;
					ДопПоле 						= ПолеОформления.Поля.Элементы.Добавить();
					ДопПоле.Использование 			= Истина;
					ДопПоле.Поле  					= Новый ПолеКомпоновкиДанных(ПолеВыбраннойГруппировки.Поле);
					ПолеОформления.Оформление.Элементы.Найти("Размещение").Значение 		= ТипРазмещенияТекстаКомпоновкиДанных.Переносить;
					ПолеОформления.Оформление.Элементы.Найти("Размещение").Использование = Истина;
					//ПолеОформления.Оформление.Элементы.Найти("МинимальнаяШирина").Значение = 20;
					//ПолеОформления.Оформление.Элементы.Найти("МинимальнаяШирина").Использование = Истина;
					//ПолеОформления.Оформление.Элементы.Найти("МаксимальнаяШирина").Значение = 20;
					//ПолеОформления.Оформление.Элементы.Найти("МаксимальнаяШирина").Использование = Истина;
				КонецЕсли;
				
				//ДобавитьВыбранныеПоля(Структура.Выбор);
				
				общ_ОтчетыВызовСервера.ДобавитьВыбранноеПоле(Структура.Выбор, ?(ВВалютеСчета,"Сумма","Сумма_Упр"));
				общ_ОтчетыВызовСервера.ДобавитьВыбранноеПоле(Структура.Выбор,ПолеВыбраннойГруппировки.Поле);
//				Структура.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
				Структура.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
				
				Если ВВалютеСчета Тогда
					СписокПолей = СписокПолей();
					Для Каждого ПолеОтчета Из СписокПолей Цикл
						ДобавитьЗаменуПоляВалюты(Структура,ПолеОтчета+"_Упр",ПолеОтчета);
					КонецЦикла;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	общ_ОтчетыВызовСервера.ДобавитьОтборПоОрганизациямИПодразделениям(КомпоновщикНастроек, ПараметрыОтчета,,,"СтруктурноеПодразделение");
	 
КонецПроцедуры

Функция СписокПолей()
	СписокПолей = Новый Массив;
	СписокПолей.Добавить("НачальныйОстаток");
	СписокПолей.Добавить("ПоВходящимДокументам");
	СписокПолей.Добавить("ПланируемыеПоступления");
	СписокПолей.Добавить("ИтогоКИспользованию");
	СписокПолей.Добавить("ПоИсходящимДокументам");
	СписокПолей.Добавить("Заявки");
	СписокПолей.Добавить("ОстатокКонец");
	возврат СписокПолей;
КонецФункции

Процедура ДобавитьЗаменуПоляВалюты(Группировка,ИмяПоля,ИмяПоляЗамены)
	УсловноеОформление =  Группировка.УсловноеОформление;
	ПолеОформления 					= УсловноеОформление.Элементы.Добавить();
	ПолеОформления.Использование 	= Истина;
	ДопПоле 						= ПолеОформления.Поля.Элементы.Добавить();
	ДопПоле.Использование 			= Истина;
	ДопПоле.Поле  					= Новый ПолеКомпоновкиДанных(ИмяПоля);
	ПолеОформления.Оформление.Элементы.Найти("Текст").Значение 		= Новый ПолеКомпоновкиДанных(ИмяПоляЗамены);
	ПолеОформления.Оформление.Элементы.Найти("Текст").Использование = Истина;
	
КонецПроцедуры

Функция  ПолучитьВнешниеНаборыДанных(ПараметрыОтчета, МакетКомпоновки) Экспорт
	Структура = Новый Структура;
	Структура.Вставить("Основной",НаборОсновной(ПараметрыОтчета));
	Структура.Вставить("Дополнительный",НаборДополнительный(ПараметрыОтчета));
	Возврат Структура;
КонецФункции

Функция НаборОсновной(ПараметрыОтчета)
	ДетализацияПоПериодам = ПараметрыОтчета.ДетализацияПоПериодам;
	Периодичность=?(ДетализацияПоПериодам.Пустая(),"День",ОбщегоНазначения.ПолучитьИмяЭлементаПеречисленияПоЗначению(ДетализацияПоПериодам));	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НАЧАЛОПЕРИОДА(ДенежныеСредстваКПолучениюОстатки.ДокументПолучения.Дата, МЕСЯЦ) КАК Период,
	|	ДенежныеСредстваКПолучениюОстатки.Организация КАК Организация,
	|	ДенежныеСредстваКПолучениюОстатки.ВидДенежныхСредств КАК ВидДенежныхСредств,
	|	ДенежныеСредстваКПолучениюОстатки.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ДенежныеСредстваКПолучениюОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ДенежныеСредстваКПолучениюОстатки.СуммаОстаток КАК СуммаПолучениеДокумент,
	|	ДенежныеСредстваКПолучениюОстатки.СуммаУпрОстаток КАК СуммаУпрПолучениеДокумент,
	|	0 КАК СуммаПолучениеПлан,
	|	0 КАК СуммаУпрПолучениеПлан,
	|	0 КАК СуммаРасходДокумент,
	|	0 КАК СуммаУпрРасходДокумент,
	|	0 КАК СуммаРасходПлан,
	|	0 КАК СуммаУпрРасходПлан
	|ПОМЕСТИТЬ ВТ_Движения
	|ИЗ
	|	РегистрНакопления.ден_ДенежныеСредстваКПолучению.Остатки(, ДокументПолучения.Дата МЕЖДУ &ДатаНач И &ДатаКон) КАК ДенежныеСредстваКПолучениюОстатки
	|ГДЕ
	|	ДенежныеСредстваКПолучениюОстатки.СуммаОстаток <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПланируемыеПоступленияДенежныхСредствОстатки.ДокументПланирования.ДатаПоступления, МЕСЯЦ),
	|	ПланируемыеПоступленияДенежныхСредствОстатки.Организация,
	|	ПланируемыеПоступленияДенежныхСредствОстатки.ДокументПланирования.ФормаОплаты,
	|	ПланируемыеПоступленияДенежныхСредствОстатки.ДокументПланирования.БанковскийСчетКасса,
	|	ПланируемыеПоступленияДенежныхСредствОстатки.ДокументПланирования.ВалютаДокумента,
	|	0,
	|	0,
	|	ПланируемыеПоступленияДенежныхСредствОстатки.СуммаОстаток,
	|	ПланируемыеПоступленияДенежныхСредствОстатки.СуммаУпрОстаток,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрНакопления.ден_ПланируемыеПоступленияДенежныхСредств.Остатки(
	|			,
	|			ДокументПланирования.ДатаПоступления МЕЖДУ &ДатаНач И &ДатаКон
	|				И ДокументПланирования.ВключатьВПлатежныйКалендарь) КАК ПланируемыеПоступленияДенежныхСредствОстатки
	|ГДЕ
	|	ПланируемыеПоступленияДенежныхСредствОстатки.СуммаОстаток <> 0
	|	И ПланируемыеПоступленияДенежныхСредствОстатки.ДокументПланирования.ВключатьВПлатежныйКалендарь
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ДенежныеСредстваКСписаниюОстатки.ДокументСписания.Дата, МЕСЯЦ),
	|	ДенежныеСредстваКСписаниюОстатки.Организация,
	|	ДенежныеСредстваКСписаниюОстатки.ВидДенежныхСредств,
	|	ДенежныеСредстваКСписаниюОстатки.БанковскийСчетКасса,
	|	ДенежныеСредстваКСписаниюОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ДенежныеСредстваКСписаниюОстатки.СуммаОстаток,
	|	ДенежныеСредстваКСписаниюОстатки.СуммаУпрОстаток,
	|	0,
	|	0
	|ИЗ
	|	РегистрНакопления.ден_ДенежныеСредстваКСписанию.Остатки(, ДокументСписания.Дата МЕЖДУ &ДатаНач И &ДатаКон) КАК ДенежныеСредстваКСписаниюОстатки
	|ГДЕ
	|	ДенежныеСредстваКСписаниюОстатки.СуммаОстаток <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование.ДатаРасхода, МЕСЯЦ),
	|	ЗаявкиНаРасходованиеСредствОстатки.Организация,
	|	ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование.ФормаОплаты,
	|	ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование.БанковскийСчетКасса,
	|	ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование.ВалютаДокумента,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ЗаявкиНаРасходованиеСредствОстатки.СуммаОстаток,
	|	ЗаявкиНаРасходованиеСредствОстатки.СуммаУпрОстаток
	|ИЗ
	|	РегистрНакопления.ден_ЗаявкиНаРасходованиеСредств.Остатки(
	|			,
	|			ЗаявкаНаРасходование В
	|				(ВЫБРАТЬ
	|					Документ.ден_ЗаявкаНаРасходованиеСредств.Ссылка
	|				ИЗ
	|					Документ.ден_ЗаявкаНаРасходованиеСредств
	|				ГДЕ
	|					Документ.ден_ЗаявкаНаРасходованиеСредств.ДатаРасхода МЕЖДУ &ДатаНач И &ДатаКон
	|					И Документ.ден_ЗаявкаНаРасходованиеСредств.ВключатьВПлатежныйКалендарь)) КАК ЗаявкиНаРасходованиеСредствОстатки
	|ГДЕ
	|	ЗаявкиНаРасходованиеСредствОстатки.СуммаОстаток <> 0
	|	И ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование.ВключатьВПлатежныйКалендарь
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Движения.Период
	|ПОМЕСТИТЬ ВТ_ВсеПериоды
	|ИЗ
	|	ВТ_Движения КАК ВТ_Движения
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Движения.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НАЧАЛОПЕРИОДА(&ДатаНач, ДЕНЬ) КАК Период,
	|	ДенежныеСредстваКПолучениюОстатки1.Организация КАК Организация,
	|	ДенежныеСредстваКПолучениюОстатки1.ВидДенежныхСредств КАК ВидДенежныхСредств,
	|	ДенежныеСредстваКПолучениюОстатки1.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ДенежныеСредстваКПолучениюОстатки1.БанковскийСчетКасса.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	ДенежныеСредстваКПолучениюОстатки1.СуммаОстаток КАК ОстатокПолучениеДокумент,
	|	ДенежныеСредстваКПолучениюОстатки1.СуммаУпрОстаток КАК ОстатокУпрПолучениеДокумент,
	|	0 КАК ОстатокПолучениеПлан,
	|	0 КАК ОстатокУпрПолучениеПлан,
	|	0 КАК ОстатокРасходДокумент,
	|	0 КАК ОстатокУпрРасходДокумент,
	|	0 КАК ОстатокРасходПлан,
	|	0 КАК ОстатокУпрРасходПлан,
	|	0 КАК СуммаНачальныйОстаток,
	|	0 КАК СуммаУпрНачальныйОстаток
	|ПОМЕСТИТЬ ВТ_ВходящиеОстатки
	|ИЗ
	|	РегистрНакопления.ден_ДенежныеСредстваКПолучению.Остатки(&ДатаНач, ) КАК ДенежныеСредстваКПолучениюОстатки1
	|ГДЕ
	|	ДенежныеСредстваКПолучениюОстатки1.СуммаОстаток <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(&ДатаНач, ДЕНЬ),
	|	ПланируемыеПоступленияДенежныхСредствОстатки1.Организация,
	|	ПланируемыеПоступленияДенежныхСредствОстатки1.ДокументПланирования.ФормаОплаты,
	|	ПланируемыеПоступленияДенежныхСредствОстатки1.ДокументПланирования.БанковскийСчетКасса,
	|	ПланируемыеПоступленияДенежныхСредствОстатки1.ДокументПланирования.ВалютаДокумента,
	|	0,
	|	0,
	|	ПланируемыеПоступленияДенежныхСредствОстатки1.СуммаОстаток,
	|	ПланируемыеПоступленияДенежныхСредствОстатки1.СуммаУпрОстаток,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрНакопления.ден_ПланируемыеПоступленияДенежныхСредств.Остатки(&ДатаНач, ДокументПланирования.ВключатьВПлатежныйКалендарь) КАК ПланируемыеПоступленияДенежныхСредствОстатки1
	|ГДЕ
	|	ПланируемыеПоступленияДенежныхСредствОстатки1.СуммаОстаток <> 0
	|	И ПланируемыеПоступленияДенежныхСредствОстатки1.ДокументПланирования.ВключатьВПлатежныйКалендарь
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(&ДатаНач, ДЕНЬ),
	|	ДенежныеСредстваКСписаниюОстатки1.Организация,
	|	ДенежныеСредстваКСписаниюОстатки1.ВидДенежныхСредств,
	|	ДенежныеСредстваКСписаниюОстатки1.БанковскийСчетКасса,
	|	ДенежныеСредстваКСписаниюОстатки1.БанковскийСчетКасса.ВалютаДенежныхСредств,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ДенежныеСредстваКСписаниюОстатки1.СуммаОстаток,
	|	ДенежныеСредстваКСписаниюОстатки1.СуммаУпрОстаток,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрНакопления.ден_ДенежныеСредстваКСписанию.Остатки(&ДатаНач, ) КАК ДенежныеСредстваКСписаниюОстатки1
	|ГДЕ
	|	ДенежныеСредстваКСписаниюОстатки1.СуммаОстаток <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(&ДатаНач, ДЕНЬ),
	|	ЗаявкиНаРасходованиеСредствОстатки1.Организация,
	|	ЗаявкиНаРасходованиеСредствОстатки1.ЗаявкаНаРасходование.ФормаОплаты,
	|	ЗаявкиНаРасходованиеСредствОстатки1.ЗаявкаНаРасходование.БанковскийСчетКасса,
	|	ЗаявкиНаРасходованиеСредствОстатки1.ЗаявкаНаРасходование.ВалютаДокумента,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ЗаявкиНаРасходованиеСредствОстатки1.СуммаОстаток,
	|	ЗаявкиНаРасходованиеСредствОстатки1.СуммаУпрОстаток,
	|	0,
	|	0
	|ИЗ
	|	РегистрНакопления.ден_ЗаявкиНаРасходованиеСредств.Остатки(
	|			&ДатаНач,
	|			ЗаявкаНаРасходование В
	|				(ВЫБРАТЬ
	|					Документ.ден_ЗаявкаНаРасходованиеСредств.Ссылка
	|				ИЗ
	|					Документ.ден_ЗаявкаНаРасходованиеСредств
	|				ГДЕ
	|					Документ.ден_ЗаявкаНаРасходованиеСредств.ВключатьВПлатежныйКалендарь)) КАК ЗаявкиНаРасходованиеСредствОстатки1
	|ГДЕ
	|	ЗаявкиНаРасходованиеСредствОстатки1.СуммаОстаток <> 0
	|	И ЗаявкиНаРасходованиеСредствОстатки1.ЗаявкаНаРасходование.ВключатьВПлатежныйКалендарь
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(&ДатаНач, ДЕНЬ),
	|	ДенежныеСредстваОстатки.Организация,
	|	ДенежныеСредстваОстатки.ВидДенежныхСредств,
	|	ДенежныеСредстваОстатки.БанковскийСчетКасса,
	|	ДенежныеСредстваОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ДенежныеСредстваОстатки.СуммаОстаток,
	|	ДенежныеСредстваОстатки.СуммаУпрОстаток
	|ИЗ
	|	РегистрНакопления.ден_ДенежныеСредства.Остатки(&ДатаНач, ) КАК ДенежныеСредстваОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(ВТ_ВходящиеОстатки.Период, ДЕНЬ, -1) КАК Период,
	|	ВТ_ВходящиеОстатки.Организация,
	|	ВТ_ВходящиеОстатки.ВидДенежныхСредств,
	|	ВТ_ВходящиеОстатки.БанковскийСчетКасса,
	|	ВТ_ВходящиеОстатки.ВалютаДенежныхСредств,
	|	СУММА(ВТ_ВходящиеОстатки.ОстатокПолучениеДокумент) КАК ОстатокПолучениеДокумент,
	|	СУММА(ВТ_ВходящиеОстатки.ОстатокУпрПолучениеДокумент) КАК ОстатокУпрПолучениеДокумент,
	|	СУММА(ВТ_ВходящиеОстатки.ОстатокПолучениеПлан) КАК ОстатокПолучениеПлан,
	|	СУММА(ВТ_ВходящиеОстатки.ОстатокУпрПолучениеПлан) КАК ОстатокУпрПолучениеПлан,
	|	СУММА(ВТ_ВходящиеОстатки.ОстатокРасходДокумент) КАК ОстатокРасходДокумент,
	|	СУММА(ВТ_ВходящиеОстатки.ОстатокУпрРасходДокумент) КАК ОстатокУпрРасходДокумент,
	|	СУММА(ВТ_ВходящиеОстатки.ОстатокРасходПлан) КАК ОстатокРасходПлан,
	|	СУММА(ВТ_ВходящиеОстатки.ОстатокУпрРасходПлан) КАК ОстатокУпрРасходПлан,
	|	СУММА(ВТ_ВходящиеОстатки.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
	|	СУММА(ВТ_ВходящиеОстатки.СуммаУпрНачальныйОстаток) КАК СуммаУпрНачальныйОстаток
	|ПОМЕСТИТЬ ВТ_ИтогоВходящийОстаток
	|ИЗ
	|	ВТ_ВходящиеОстатки КАК ВТ_ВходящиеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ВходящиеОстатки.Период,
	|	ВТ_ВходящиеОстатки.Организация,
	|	ВТ_ВходящиеОстатки.ВидДенежныхСредств,
	|	ВТ_ВходящиеОстатки.БанковскийСчетКасса,
	|	ВТ_ВходящиеОстатки.ВалютаДенежныхСредств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИтогоВходящийОстаток.Период,
	|	ВТ_ИтогоВходящийОстаток.Организация,
	|	ВТ_ИтогоВходящийОстаток.ВидДенежныхСредств,
	|	ВТ_ИтогоВходящийОстаток.БанковскийСчетКасса,
	|	ВТ_ИтогоВходящийОстаток.ВалютаДенежныхСредств,
	|	ВТ_ИтогоВходящийОстаток.СуммаНачальныйОстаток КАК ОстатокНаНачало,
	|	ВТ_ИтогоВходящийОстаток.СуммаУпрНачальныйОстаток КАК ОстатокНаНачалоУпр,
	|	ВТ_ИтогоВходящийОстаток.ОстатокПолучениеДокумент КАК ПоВходящимДокументам,
	|	ВТ_ИтогоВходящийОстаток.ОстатокУпрПолучениеДокумент КАК ПоВходящимДокументамУпр,
	|	ВТ_ИтогоВходящийОстаток.ОстатокПолучениеПлан КАК ПоПланируемымПоступлениям,
	|	ВТ_ИтогоВходящийОстаток.ОстатокУпрПолучениеПлан КАК ПоПланируемымПоступлениямУпр,
	|	ВТ_ИтогоВходящийОстаток.ОстатокРасходДокумент КАК ПоИсходящимДокументам,
	|	ВТ_ИтогоВходящийОстаток.ОстатокУпрРасходДокумент КАК ПоИсходящимДокументамУпр,
	|	ВТ_ИтогоВходящийОстаток.ОстатокРасходПлан КАК ПоЗаявкам,
	|	ВТ_ИтогоВходящийОстаток.ОстатокУпрРасходПлан КАК ПоЗаявкамУпр,
	|	ВТ_ИтогоВходящийОстаток.СуммаНачальныйОстаток + ВТ_ИтогоВходящийОстаток.ОстатокПолучениеДокумент + ВТ_ИтогоВходящийОстаток.ОстатокПолучениеПлан КАК ИтогоКИспользованию,
	|	ВТ_ИтогоВходящийОстаток.СуммаУпрНачальныйОстаток + ВТ_ИтогоВходящийОстаток.ОстатокУпрПолучениеДокумент + ВТ_ИтогоВходящийОстаток.ОстатокУпрПолучениеПлан КАК ИтогоКИспользованиюУпр,
	|	ВТ_ИтогоВходящийОстаток.СуммаНачальныйОстаток + ВТ_ИтогоВходящийОстаток.ОстатокПолучениеДокумент + ВТ_ИтогоВходящийОстаток.ОстатокПолучениеПлан - ВТ_ИтогоВходящийОстаток.ОстатокРасходДокумент - ВТ_ИтогоВходящийОстаток.ОстатокРасходПлан КАК ПланируемыйОстаток,
	|	ВТ_ИтогоВходящийОстаток.СуммаУпрНачальныйОстаток + ВТ_ИтогоВходящийОстаток.ОстатокУпрПолучениеДокумент + ВТ_ИтогоВходящийОстаток.ОстатокУпрПолучениеПлан - ВТ_ИтогоВходящийОстаток.ОстатокУпрРасходДокумент - ВТ_ИтогоВходящийОстаток.ОстатокУпрРасходПлан КАК ПланируемыйОстатокУпр
	|ПОМЕСТИТЬ ВТ_РасчетВходящегоОстатка
	|ИЗ
	|	ВТ_ИтогоВходящийОстаток КАК ВТ_ИтогоВходящийОстаток
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ВидДенежныхСредств,
	|	ВложенныйЗапрос.БанковскийСчетКасса,
	|	ВложенныйЗапрос.ВалютаДенежныхСредств
	|ПОМЕСТИТЬ ВТ_Аналитика
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВТ_Движения.Организация КАК Организация,
	|		ВТ_Движения.ВидДенежныхСредств КАК ВидДенежныхСредств,
	|		ВТ_Движения.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|		ВТ_Движения.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств
	|	ИЗ
	|		ВТ_Движения КАК ВТ_Движения
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВТ_ВходящиеОстатки.Организация,
	|		ВТ_ВходящиеОстатки.ВидДенежныхСредств,
	|		ВТ_ВходящиеОстатки.БанковскийСчетКасса,
	|		ВТ_ВходящиеОстатки.ВалютаДенежныхСредств
	|	ИЗ
	|		ВТ_ВходящиеОстатки КАК ВТ_ВходящиеОстатки) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Аналитика.Организация,
	|	ВТ_Аналитика.ВидДенежныхСредств,
	|	ВТ_Аналитика.БанковскийСчетКасса,
	|	ВТ_Аналитика.ВалютаДенежныхСредств,
	|	ВТ_ВсеПериоды.Период
	|ПОМЕСТИТЬ ВТ_Кортеж
	|ИЗ
	|	ВТ_Аналитика КАК ВТ_Аналитика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеПериоды КАК ВТ_ВсеПериоды
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Движения.Период,
	|	ВТ_Движения.Организация,
	|	ВТ_Движения.ВидДенежныхСредств,
	|	ВТ_Движения.БанковскийСчетКасса,
	|	ВТ_Движения.ВалютаДенежныхСредств,
	|	СУММА(ВТ_ДвиженияПредшествующие.СуммаПолучениеДокумент) КАК СуммаПолучениеДокумент,
	|	СУММА(ВТ_ДвиженияПредшествующие.СуммаУпрПолучениеДокумент) КАК СуммаУпрПолучениеДокумент,
	|	СУММА(ВТ_ДвиженияПредшествующие.СуммаПолучениеПлан) КАК СуммаПолучениеПлан,
	|	СУММА(ВТ_ДвиженияПредшествующие.СуммаУпрПолучениеПлан) КАК СуммаУпрПолучениеПлан,
	|	СУММА(ВТ_ДвиженияПредшествующие.СуммаРасходДокумент) КАК СуммаРасходДокумент,
	|	СУММА(ВТ_ДвиженияПредшествующие.СуммаУпрРасходДокумент) КАК СуммаУпрРасходДокумент,
	|	СУММА(ВТ_ДвиженияПредшествующие.СуммаРасходПлан) КАК СуммаРасходПлан,
	|	СУММА(ВТ_ДвиженияПредшествующие.СуммаУпрРасходПлан) КАК СуммаУпрРасходПлан
	|ПОМЕСТИТЬ ВТ_НакопленныеДвижения
	|ИЗ
	|	ВТ_Кортеж КАК ВТ_Движения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Движения КАК ВТ_ДвиженияПредшествующие
	|		ПО ВТ_Движения.Организация = ВТ_ДвиженияПредшествующие.Организация
	|			И ВТ_Движения.ВидДенежныхСредств = ВТ_ДвиженияПредшествующие.ВидДенежныхСредств
	|			И ВТ_Движения.БанковскийСчетКасса = ВТ_ДвиженияПредшествующие.БанковскийСчетКасса
	|			И ВТ_Движения.ВалютаДенежныхСредств = ВТ_ДвиженияПредшествующие.ВалютаДенежныхСредств
	|			И ВТ_Движения.Период > ВТ_ДвиженияПредшествующие.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Движения.Период,
	|	ВТ_Движения.Организация,
	|	ВТ_Движения.ВидДенежныхСредств,
	|	ВТ_Движения.БанковскийСчетКасса,
	|	ВТ_Движения.ВалютаДенежныхСредств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Движения.Организация,
	|	ВТ_Движения.ВидДенежныхСредств,
	|	ВТ_Движения.БанковскийСчетКасса,
	|	ВТ_Движения.ВалютаДенежныхСредств,
	|	СУММА(ВТ_Движения.СуммаПолучениеДокумент) КАК СуммаПолучениеДокумент,
	|	СУММА(ВТ_Движения.СуммаУпрПолучениеДокумент) КАК СуммаУпрПолучениеДокумент,
	|	СУММА(ВТ_Движения.СуммаПолучениеПлан) КАК СуммаПолучениеПлан,
	|	СУММА(ВТ_Движения.СуммаУпрПолучениеПлан) КАК СуммаУпрПолучениеПлан,
	|	СУММА(ВТ_Движения.СуммаРасходДокумент) КАК СуммаРасходДокумент,
	|	СУММА(ВТ_Движения.СуммаУпрРасходДокумент) КАК СуммаУпрРасходДокумент,
	|	СУММА(ВТ_Движения.СуммаРасходПлан) КАК СуммаРасходПлан,
	|	СУММА(ВТ_Движения.СуммаУпрРасходПлан) КАК СуммаУпрРасходПлан
	|ПОМЕСТИТЬ ВТ_ИтоговыеОборотыПоДвижениям
	|ИЗ
	|	ВТ_Движения КАК ВТ_Движения
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Движения.Организация,
	|	ВТ_Движения.ВидДенежныхСредств,
	|	ВТ_Движения.БанковскийСчетКасса,
	|	ВТ_Движения.ВалютаДенежныхСредств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.Организация, ВТ_ИтоговыеОборотыПоДвижениям.Организация) КАК Организация,
	|	ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ВидДенежныхСредств, ВТ_ИтоговыеОборотыПоДвижениям.ВидДенежныхСредств) КАК ВидДенежныхСредств,
	|	ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.БанковскийСчетКасса, ВТ_ИтоговыеОборотыПоДвижениям.БанковскийСчетКасса) КАК БанковскийСчетКасса,
	|	ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ВалютаДенежныхСредств, ВТ_ИтоговыеОборотыПоДвижениям.ВалютаДенежныхСредств) КАК ВалютаДенежныхСредств,
	|	СУММА(ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ОстатокНаНачало, 0)) КАК ОстатокНаНачало,
	|	СУММА(ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ОстатокНаНачалоУпр, 0)) КАК ОстатокНаНачалоУпр,
	|	СУММА(ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПоВходящимДокументам, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаПолучениеДокумент, 0)) КАК СуммаПолучениеДокумент,
	|	СУММА(ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПоВходящимДокументамУпр, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаУпрПолучениеДокумент, 0)) КАК СуммаУпрПолучениеДокумент,
	|	СУММА(ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПоПланируемымПоступлениям, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаПолучениеПлан, 0)) КАК СуммаПолучениеПлан,
	|	СУММА(ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПоПланируемымПоступлениямУпр, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаУпрПолучениеПлан, 0)) КАК СуммаУпрПолучениеПлан,
	|	СУММА(ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПоИсходящимДокументам, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаРасходДокумент, 0)) КАК СуммаРасходДокумент,
	|	СУММА(ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПоИсходящимДокументамУпр, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаУпрРасходДокумент, 0)) КАК СуммаУпрРасходДокумент,
	|	СУММА(ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПоЗаявкам, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаРасходПлан, 0)) КАК СуммаРасходПлан,
	|	СУММА(ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПоЗаявкамУпр, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаУпрРасходПлан, 0)) КАК СуммаУпрРасходПлан,
	|	СУММА(ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ИтогоКИспользованию, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаПолучениеДокумент, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаПолучениеПлан, 0)) КАК ИтогоКИспользованию,
	|	СУММА(ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ИтогоКИспользованиюУпр, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаУпрПолучениеДокумент, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаУпрПолучениеПлан, 0)) КАК ИтогоКИспользованиюУпр,
	|	СУММА(ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПланируемыйОстаток, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаПолучениеДокумент, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаПолучениеПлан, 0) - ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаРасходДокумент, 0) - ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаРасходПлан, 0)) КАК ПланируемыйОстаток,
	|	СУММА(ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПланируемыйОстатокУпр, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаУпрПолучениеДокумент, 0) + ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаУпрПолучениеПлан, 0) - ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаУпрРасходДокумент, 0) - ЕСТЬNULL(ВТ_ИтоговыеОборотыПоДвижениям.СуммаУпрРасходПлан, 0)) КАК ПланируемыйОстатокУпр
	|ПОМЕСТИТЬ ВТ_РасчетКонечногоОстатка
	|ИЗ
	|	ВТ_РасчетВходящегоОстатка КАК ВТ_РасчетВходящегоОстатка
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ИтоговыеОборотыПоДвижениям КАК ВТ_ИтоговыеОборотыПоДвижениям
	|		ПО ВТ_РасчетВходящегоОстатка.Организация = ВТ_ИтоговыеОборотыПоДвижениям.Организация
	|			И ВТ_РасчетВходящегоОстатка.ВидДенежныхСредств = ВТ_ИтоговыеОборотыПоДвижениям.ВидДенежныхСредств
	|			И ВТ_РасчетВходящегоОстатка.БанковскийСчетКасса = ВТ_ИтоговыеОборотыПоДвижениям.БанковскийСчетКасса
	|			И ВТ_РасчетВходящегоОстатка.ВалютаДенежныхСредств = ВТ_ИтоговыеОборотыПоДвижениям.ВалютаДенежныхСредств
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.Организация, ВТ_ИтоговыеОборотыПоДвижениям.Организация),
	|	ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ВидДенежныхСредств, ВТ_ИтоговыеОборотыПоДвижениям.ВидДенежныхСредств),
	|	ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.БанковскийСчетКасса, ВТ_ИтоговыеОборотыПоДвижениям.БанковскийСчетКасса),
	|	ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ВалютаДенежныхСредств, ВТ_ИтоговыеОборотыПоДвижениям.ВалютаДенежныхСредств)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РасчетВходящегоОстатка.Период,
	|	ВТ_РасчетВходящегоОстатка.Период КАК ПериодПорядок,
	|	ВТ_РасчетВходящегоОстатка.Организация,
	|	ВТ_РасчетВходящегоОстатка.ВидДенежныхСредств,
	|	ВТ_РасчетВходящегоОстатка.БанковскийСчетКасса,
	|	ВТ_РасчетВходящегоОстатка.ВалютаДенежныхСредств,
	|	ВТ_РасчетВходящегоОстатка.ОстатокНаНачало,
	|	ВТ_РасчетВходящегоОстатка.ОстатокНаНачалоУпр,
	|	ВТ_РасчетВходящегоОстатка.ПоВходящимДокументам КАК СуммаПолучениеДокумент,
	|	ВТ_РасчетВходящегоОстатка.ПоВходящимДокументамУпр КАК СуммаУпрПолучениеДокумент,
	|	ВТ_РасчетВходящегоОстатка.ПоПланируемымПоступлениям КАК СуммаПолучениеПлан,
	|	ВТ_РасчетВходящегоОстатка.ПоПланируемымПоступлениямУпр КАК СуммаУпрПолучениеПлан,
	|	ВТ_РасчетВходящегоОстатка.ПоИсходящимДокументам КАК СуммаРасходДокумент,
	|	ВТ_РасчетВходящегоОстатка.ПоИсходящимДокументамУпр КАК СуммаУпрРасходДокумент,
	|	ВТ_РасчетВходящегоОстатка.ПоЗаявкам КАК СуммаРасходПлан,
	|	ВТ_РасчетВходящегоОстатка.ПоЗаявкамУпр КАК СуммаУпрРасходПлан,
	|	ВТ_РасчетВходящегоОстатка.ИтогоКИспользованию,
	|	ВТ_РасчетВходящегоОстатка.ИтогоКИспользованиюУпр,
	|	ВТ_РасчетВходящегоОстатка.ПланируемыйОстаток,
	|	ВТ_РасчетВходящегоОстатка.ПланируемыйОстатокУпр
	|ПОМЕСТИТЬ ВТ_ИтоговыйРасчет
	|ИЗ
	|	ВТ_РасчетВходящегоОстатка КАК ВТ_РасчетВходящегоОстатка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Кортеж.Период,
	|	ВТ_Кортеж.Период,
	|	ВТ_Кортеж.Организация,
	|	ВТ_Кортеж.ВидДенежныхСредств,
	|	ВТ_Кортеж.БанковскийСчетКасса,
	|	ВТ_Кортеж.ВалютаДенежныхСредств,
	|	ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПланируемыйОстаток, 0) + ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаПолучениеДокумент, 0) + ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаПолучениеПлан, 0) - ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаРасходДокумент, 0) - ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаРасходПлан, 0),
	|	ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПланируемыйОстатокУпр, 0) + ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаУпрПолучениеДокумент, 0) + ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаУпрПолучениеПлан, 0) - ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаУпрРасходДокумент, 0) - ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаУпрРасходПлан, 0),
	|	ЕСТЬNULL(ВТ_Движения.СуммаПолучениеДокумент, 0),
	|	ЕСТЬNULL(ВТ_Движения.СуммаУпрПолучениеДокумент, 0),
	|	ЕСТЬNULL(ВТ_Движения.СуммаПолучениеПлан, 0),
	|	ЕСТЬNULL(ВТ_Движения.СуммаУпрПолучениеПлан, 0),
	|	ЕСТЬNULL(ВТ_Движения.СуммаРасходДокумент, 0),
	|	ЕСТЬNULL(ВТ_Движения.СуммаУпрРасходДокумент, 0),
	|	ЕСТЬNULL(ВТ_Движения.СуммаРасходПлан, 0),
	|	ЕСТЬNULL(ВТ_Движения.СуммаУпрРасходПлан, 0),
	|	ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПланируемыйОстаток, 0) + ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаПолучениеДокумент, 0) + ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаПолучениеПлан, 0) - ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаРасходДокумент, 0) - ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаРасходПлан, 0) + ЕСТЬNULL(ВТ_Движения.СуммаПолучениеДокумент, 0) + ЕСТЬNULL(ВТ_Движения.СуммаПолучениеПлан, 0),
	|	ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПланируемыйОстатокУпр, 0) + ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаУпрПолучениеДокумент, 0) + ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаУпрПолучениеПлан, 0) - ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаУпрРасходДокумент, 0) - ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаУпрРасходПлан, 0) + ЕСТЬNULL(ВТ_Движения.СуммаУпрПолучениеДокумент, 0) + ЕСТЬNULL(ВТ_Движения.СуммаУпрПолучениеПлан, 0),
	|	ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПланируемыйОстаток, 0) + ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаПолучениеДокумент, 0) + ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаПолучениеПлан, 0) - ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаРасходДокумент, 0) - ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаРасходПлан, 0) + ЕСТЬNULL(ВТ_Движения.СуммаПолучениеДокумент, 0) + ЕСТЬNULL(ВТ_Движения.СуммаПолучениеПлан, 0) - ЕСТЬNULL(ВТ_Движения.СуммаРасходДокумент, 0) - ЕСТЬNULL(ВТ_Движения.СуммаРасходПлан, 0),
	|	ЕСТЬNULL(ВТ_РасчетВходящегоОстатка.ПланируемыйОстатокУпр, 0) + ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаУпрПолучениеДокумент, 0) + ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаУпрПолучениеПлан, 0) - ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаУпрРасходДокумент, 0) - ЕСТЬNULL(ВТ_НакопленныеДвижения.СуммаУпрРасходПлан, 0) + ЕСТЬNULL(ВТ_Движения.СуммаУпрПолучениеДокумент, 0) + ЕСТЬNULL(ВТ_Движения.СуммаУпрПолучениеПлан, 0) - ЕСТЬNULL(ВТ_Движения.СуммаУпрРасходДокумент, 0) - ЕСТЬNULL(ВТ_Движения.СуммаУпрРасходПлан, 0)
	|ИЗ
	|	ВТ_Кортеж КАК ВТ_Кортеж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Движения КАК ВТ_Движения
	|		ПО ВТ_Кортеж.Организация = ВТ_Движения.Организация
	|			И ВТ_Кортеж.ВидДенежныхСредств = ВТ_Движения.ВидДенежныхСредств
	|			И ВТ_Кортеж.БанковскийСчетКасса = ВТ_Движения.БанковскийСчетКасса
	|			И ВТ_Кортеж.ВалютаДенежныхСредств = ВТ_Движения.ВалютаДенежныхСредств
	|			И ВТ_Кортеж.Период = ВТ_Движения.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетВходящегоОстатка КАК ВТ_РасчетВходящегоОстатка
	|		ПО ВТ_Кортеж.Организация = ВТ_РасчетВходящегоОстатка.Организация
	|			И ВТ_Кортеж.ВидДенежныхСредств = ВТ_РасчетВходящегоОстатка.ВидДенежныхСредств
	|			И ВТ_Кортеж.БанковскийСчетКасса = ВТ_РасчетВходящегоОстатка.БанковскийСчетКасса
	|			И ВТ_Кортеж.ВалютаДенежныхСредств = ВТ_РасчетВходящегоОстатка.ВалютаДенежныхСредств
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НакопленныеДвижения КАК ВТ_НакопленныеДвижения
	|		ПО ВТ_Кортеж.Организация = ВТ_НакопленныеДвижения.Организация
	|			И ВТ_Кортеж.ВидДенежныхСредств = ВТ_НакопленныеДвижения.ВидДенежныхСредств
	|			И ВТ_Кортеж.БанковскийСчетКасса = ВТ_НакопленныеДвижения.БанковскийСчетКасса
	|			И ВТ_Кортеж.ВалютаДенежныхСредств = ВТ_НакопленныеДвижения.ВалютаДенежныхСредств
	|			И ВТ_Кортеж.Период = ВТ_НакопленныеДвижения.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(&ДатаКон, ДЕНЬ, 1),
	|	ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(&ДатаНач, ДЕНЬ, -1), МИНУТА, 1),
	|	ВТ_РасчетКонечногоОстатка.Организация,
	|	ВТ_РасчетКонечногоОстатка.ВидДенежныхСредств,
	|	ВТ_РасчетКонечногоОстатка.БанковскийСчетКасса,
	|	ВТ_РасчетКонечногоОстатка.ВалютаДенежныхСредств,
	|	ВТ_РасчетКонечногоОстатка.ОстатокНаНачало,
	|	ВТ_РасчетКонечногоОстатка.ОстатокНаНачалоУпр,
	|	ВТ_РасчетКонечногоОстатка.СуммаПолучениеДокумент,
	|	ВТ_РасчетКонечногоОстатка.СуммаУпрПолучениеДокумент,
	|	ВТ_РасчетКонечногоОстатка.СуммаПолучениеПлан,
	|	ВТ_РасчетКонечногоОстатка.СуммаУпрПолучениеПлан,
	|	ВТ_РасчетКонечногоОстатка.СуммаРасходДокумент,
	|	ВТ_РасчетКонечногоОстатка.СуммаУпрРасходДокумент,
	|	ВТ_РасчетКонечногоОстатка.СуммаРасходПлан,
	|	ВТ_РасчетКонечногоОстатка.СуммаУпрРасходПлан,
	|	ВТ_РасчетКонечногоОстатка.ИтогоКИспользованию,
	|	ВТ_РасчетКонечногоОстатка.ИтогоКИспользованиюУпр,
	|	ВТ_РасчетКонечногоОстатка.ПланируемыйОстаток,
	|	ВТ_РасчетКонечногоОстатка.ПланируемыйОстатокУпр
	|ИЗ
	|	ВТ_РасчетКонечногоОстатка КАК ВТ_РасчетКонечногоОстатка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПланируемыеДвижения.Организация,
	|	ПланируемыеДвижения.ВидДенежныхСредств,
	|	ПланируемыеДвижения.БанковскийСчетКасса,
	|	ПланируемыеДвижения.ВалютаДенежныхСредств,
	|	ПланируемыеДвижения.Период КАК Период,
	|	ЕСТЬNULL(ПланируемыеДвижения.СуммаПолучениеДокумент, 0) КАК ПоВходящимДокументам,
	|	ЕСТЬNULL(ПланируемыеДвижения.СуммаУпрПолучениеДокумент, 0) КАК ПоВходящимДокументам_Упр,
	|	ЕСТЬNULL(ПланируемыеДвижения.СуммаПолучениеПлан, 0) КАК ПланируемыеПоступления,
	|	ЕСТЬNULL(ПланируемыеДвижения.СуммаУпрПолучениеПлан, 0) КАК ПланируемыеПоступления_Упр,
	|	ЕСТЬNULL(ПланируемыеДвижения.СуммаРасходДокумент, 0) КАК ПоИсходящимДокументам,
	|	ЕСТЬNULL(ПланируемыеДвижения.СуммаУпрРасходДокумент, 0) КАК ПоИсходящимДокументам_Упр,
	|	ЕСТЬNULL(ПланируемыеДвижения.СуммаРасходПлан, 0) КАК Заявки,
	|	ЕСТЬNULL(ПланируемыеДвижения.СуммаУпрРасходПлан, 0) КАК Заявки_Упр,
	|	ЕСТЬNULL(ПланируемыеДвижения.ОстатокНаНачало, 0) КАК НачальныйОстаток,
	|	ЕСТЬNULL(ПланируемыеДвижения.ОстатокНаНачалоУпр, 0) КАК НачальныйОстаток_Упр,
	|	ЕСТЬNULL(ПланируемыеДвижения.ИтогоКИспользованию, 0) КАК ИтогоКИспользованию,
	|	ЕСТЬNULL(ПланируемыеДвижения.ИтогоКИспользованиюУпр, 0) КАК ИтогоКИспользованию_Упр,
	|	ЕСТЬNULL(ПланируемыеДвижения.ПланируемыйОстаток, 0) КАК ОстатокКонец,
	|	ЕСТЬNULL(ПланируемыеДвижения.ПланируемыйОстатокУпр, 0) КАК ОстатокКонец_Упр
	|ИЗ
	|	ВТ_ИтоговыйРасчет КАК ПланируемыеДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	ПланируемыеДвижения.Организация";
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗаменить(ТекстЗапроса,"МЕСЯЦ",Периодичность);
	Запрос.УстановитьПараметр("ДатаНач",ПараметрыОтчета.НачалоПериода);
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ПараметрыОтчета.КонецПериода));
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция НаборДополнительный(ПараметрыОтчета)
	ДетализацияПоПериодам = ПараметрыОтчета.ДетализацияПоПериодам;
	Периодичность=?(ДетализацияПоПериодам.Пустая(),"День",ОбщегоНазначения.ПолучитьИмяЭлементаПеречисленияПоЗначению(ДетализацияПоПериодам));	
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	ПланируемыеДвижения.ВидДвижения,
	                |	ПланируемыеДвижения.ВидДокумента,
	                |	ПланируемыеДвижения.Организация,
	                |	ПланируемыеДвижения.ВидДенежныхСредств,
	                |	ПланируемыеДвижения.БанковскийСчетКасса,
	                |	ПланируемыеДвижения.ВалютаДенежныхСредств,
	                |	ПланируемыеДвижения.СтатьяДвиженияДенежныхСредств,
	                |	ПланируемыеДвижения.ДокументДвижения,
	                |	ПланируемыеДвижения.ДокументДвиженияКонтрагент,
	                |	ПланируемыеДвижения.ДокументДвиженияОтветственный,
	                |	ПланируемыеДвижения.Период КАК Период,
	                |	ЕСТЬNULL(ПланируемыеДвижения.Сумма, 0) КАК Сумма,
	                |	ЕСТЬNULL(ПланируемыеДвижения.СуммаУпр, 0) КАК Сумма_Упр
	                |ИЗ
	                |	(ВЫБРАТЬ
					|		""Планируемые поступления"" КАК ВидДвижения,
					|		""Неоплаченные входящие документы"" КАК ВидДокумента,
	                |		НАЧАЛОПЕРИОДА(ДенежныеСредстваКПолучениюОстатки.ДокументПолучения.Дата, "+Периодичность+") КАК Период,
	                |		ДенежныеСредстваКПолучениюОстатки.Организация КАК Организация,
	                |		ДенежныеСредстваКПолучениюОстатки.ВидДенежныхСредств КАК ВидДенежныхСредств,
	                |		ДенежныеСредстваКПолучениюОстатки.БанковскийСчетКасса КАК БанковскийСчетКасса,
	                |		ДенежныеСредстваКПолучениюОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	                |		ДенежныеСредстваКПолучениюОстатки.ДокументПолучения КАК ДокументДвижения,
	                |		ДенежныеСредстваКПолучениюОстатки.ДокументПолучения.Контрагент КАК ДокументДвиженияКонтрагент,
	                |		ДенежныеСредстваКПолучениюОстатки.ДокументПолучения.Ответственный КАК ДокументДвиженияОтветственный,
	                |		ДенежныеСредстваКПолучениюОстатки.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	                |		ДенежныеСредстваКПолучениюОстатки.СуммаОстаток КАК Сумма,
	                |		ДенежныеСредстваКПолучениюОстатки.СуммаУпрОстаток КАК СуммаУпр
	                |	ИЗ
	                |		РегистрНакопления.ден_ДенежныеСредстваКПолучению.Остатки(, ДокументПолучения.Дата МЕЖДУ &ДатаНач И &ДатаКон) КАК ДенежныеСредстваКПолучениюОстатки
	                |	ГДЕ
	                |		ДенежныеСредстваКПолучениюОстатки.СуммаОстаток <> 0
	                |	
	                |	ОБЪЕДИНИТЬ ВСЕ
	                |	
	                |	ВЫБРАТЬ
					|		""Планируемые поступления"" КАК ВидДвижения,
					|		""Документы планирования поступления"" КАК ВидДокумента,
	                |		НАЧАЛОПЕРИОДА(ПланируемыеПоступленияДенежныхСредствОстатки.ДокументПланирования.ДатаПоступления, "+Периодичность+"),
	                |		ПланируемыеПоступленияДенежныхСредствОстатки.Организация,
	                |		ПланируемыеПоступленияДенежныхСредствОстатки.ДокументПланирования.ФормаОплаты,
	                |		ПланируемыеПоступленияДенежныхСредствОстатки.ДокументПланирования.БанковскийСчетКасса,
	                |		ПланируемыеПоступленияДенежныхСредствОстатки.ДокументПланирования.ВалютаДокумента,
	                |		ПланируемыеПоступленияДенежныхСредствОстатки.ДокументПланирования,
	                |		ПланируемыеПоступленияДенежныхСредствОстатки.ДокументПланирования.Контрагент,
	                |		ПланируемыеПоступленияДенежныхСредствОстатки.ДокументПланирования.Ответственный,
	                |		ПланируемыеПоступленияДенежныхСредствОстатки.СтатьяДвиженияДенежныхСредств,
	                |		ПланируемыеПоступленияДенежныхСредствОстатки.СуммаОстаток,
	                |		ПланируемыеПоступленияДенежныхСредствОстатки.СуммаУпрОстаток
	                |	ИЗ
	                |		РегистрНакопления.ден_ПланируемыеПоступленияДенежныхСредств.Остатки(
	                |				,
	                |				ДокументПланирования.ДатаПоступления МЕЖДУ &ДатаНач И &ДатаКон
	                |					И ДокументПланирования.ВключатьВПлатежныйКалендарь) КАК ПланируемыеПоступленияДенежныхСредствОстатки
	                |	ГДЕ
	                |		ПланируемыеПоступленияДенежныхСредствОстатки.СуммаОстаток <> 0
	                |		И ПланируемыеПоступленияДенежныхСредствОстатки.ДокументПланирования.ВключатьВПлатежныйКалендарь
	                |	
	                |	ОБЪЕДИНИТЬ ВСЕ
	                |	
	                |	ВЫБРАТЬ
					|		""Планируемые расходы"" КАК ВидДвижения,
					|		""Неоплаченные исходящие документы"" КАК ВидДокумента,
	                |		НАЧАЛОПЕРИОДА(ДенежныеСредстваКСписаниюОстатки.ДокументСписания.Дата, "+Периодичность+"),
	                |		ДенежныеСредстваКСписаниюОстатки.Организация,
	                |		ДенежныеСредстваКСписаниюОстатки.ВидДенежныхСредств,
	                |		ДенежныеСредстваКСписаниюОстатки.БанковскийСчетКасса,
	                |		ДенежныеСредстваКСписаниюОстатки.БанковскийСчетКасса.ВалютаДенежныхСредств,
	                |		ДенежныеСредстваКСписаниюОстатки.ДокументСписания,
	                |		ДенежныеСредстваКСписаниюОстатки.ДокументСписания.Контрагент,
	                |		ДенежныеСредстваКСписаниюОстатки.ДокументСписания.Ответственный,
	                |		ДенежныеСредстваКСписаниюОстатки.СтатьяДвиженияДенежныхСредств,
	                |		ДенежныеСредстваКСписаниюОстатки.СуммаОстаток,
	                |		ДенежныеСредстваКСписаниюОстатки.СуммаУпрОстаток
	                |	ИЗ
	                |		РегистрНакопления.ден_ДенежныеСредстваКСписанию.Остатки(, ДокументСписания.Дата МЕЖДУ &ДатаНач И &ДатаКон) КАК ДенежныеСредстваКСписаниюОстатки
	                |	ГДЕ
	                |		ДенежныеСредстваКСписаниюОстатки.СуммаОстаток <> 0
	                |	
	                |	ОБЪЕДИНИТЬ ВСЕ
	                |	
	                |	ВЫБРАТЬ
					|		""Планируемые расходы"" КАК ВидДвижения,
					|		""Заявки на расходование средств"" КАК ВидДокумента,
	                |		НАЧАЛОПЕРИОДА(ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование.ДатаРасхода, "+Периодичность+"),
	                |		ЗаявкиНаРасходованиеСредствОстатки.Организация,
	                |		ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование.ФормаОплаты,
	                |		ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование.БанковскийСчетКасса,
	                |		ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование.ВалютаДокумента,
	                |		ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование,
	                |		ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование.Контрагент,
	                |		ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование.Ответственный,
	                |		ЗаявкиНаРасходованиеСредствОстатки.СтатьяДвиженияДенежныхСредств,
	                |		ЗаявкиНаРасходованиеСредствОстатки.СуммаОстаток,
	                |		ЗаявкиНаРасходованиеСредствОстатки.СуммаУпрОстаток
	                |	ИЗ
	                |		РегистрНакопления.ден_ЗаявкиНаРасходованиеСредств.Остатки(
	                |				,
	                |				ЗаявкаНаРасходование В
	                |					(ВЫБРАТЬ
	                |						Документ.ден_ЗаявкаНаРасходованиеСредств.Ссылка
	                |					ИЗ
	                |						Документ.ден_ЗаявкаНаРасходованиеСредств
	                |					ГДЕ
	                |						Документ.ден_ЗаявкаНаРасходованиеСредств.ДатаРасхода МЕЖДУ &ДатаНач И &ДатаКон
	                |						И Документ.ден_ЗаявкаНаРасходованиеСредств.ВключатьВПлатежныйКалендарь)) КАК ЗаявкиНаРасходованиеСредствОстатки
	                |	ГДЕ
	                |		ЗаявкиНаРасходованиеСредствОстатки.СуммаОстаток <> 0
	                |		И ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование.ВключатьВПлатежныйКалендарь) КАК ПланируемыеДвижения
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Период,
	                |	ПланируемыеДвижения.Организация";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДатаНач",ПараметрыОтчета.НачалоПериода);
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ПараметрыОтчета.КонецПериода));
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

// После вывода результата
//
Процедура ПослеВыводаРезультата(ПараметрыОтчета, Результат) Экспорт
	
 	общ_ОтчетыВызовСервера.ПослеВыводаРезультата(ПараметрыОтчета, Результат);
	Результат.Область("C2").ШиринаКолонки = 30;
	Результат.Область("R5C2:R"+Формат(Результат.ВысотаТаблицы,"ЧГ=")+"C2").ШиринаКолонки = 35;
	Результат.Область("R5C2:R"+Формат(Результат.ВысотаТаблицы,"ЧГ=")+"C2").РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Обрезать;
КонецПроцедуры

Процедура ЗаполнитьНастройкамиПоУмолчанию(ЗаполняемыеНастройки,Показатели,ГруппировкиОтчета,ДополнительныеГруппировки=Неопределено) Экспорт
	
	// Управление показателями
	Если ЗаполняемыеНастройки.Свойство("Показатели") И ЗаполняемыеНастройки.Показатели Тогда
		
		СписокПоказателей = общ_ОтчетыВызовСервера.ПолучитьСписокПоказателейОтчета("ден_ПлатежныйКалендарь");
		
		Показатели.Очистить();
		Для Каждого Показатель Из СписокПоказателей Цикл
			НоваяСтрока 				= Показатели.Добавить();
			НоваяСтрока.Использование 	= Истина;
			НоваяСтрока.Поле 			= Показатель.Значение;
			НоваяСтрока.Представление 	= Показатель.Представление;
		КонецЦикла;
		
	КонецЕсли;
	
	// Группировки
	Если ЗаполняемыеНастройки.Свойство("Группировка") И ЗаполняемыеНастройки.Группировка Тогда
		
		ГруппировкиОтчета.Очистить();
		
		// Основные группировки
		НоваяСтрока 				= ГруппировкиОтчета.Добавить();
		НоваяСтрока.Использование 	= Истина;
		НоваяСтрока.Поле 			= "Организация";
		НоваяСтрока.Представление 	= НСтр("ru = 'Организация'");
		НоваяСтрока.ТипГруппировки	= Перечисления.ТипДетализацииСтандартныхОтчетов.Элементы;
		
		НоваяСтрока 				= ГруппировкиОтчета.Добавить();
		НоваяСтрока.Использование 	= Истина;
		НоваяСтрока.Поле 			= "ВалютаДенежныхСредств";
		НоваяСтрока.Представление 	= НСтр("ru = 'Валюта'");
		НоваяСтрока.ТипГруппировки	= Перечисления.ТипДетализацииСтандартныхОтчетов.Элементы;
		
		НоваяСтрока 				= ГруппировкиОтчета.Добавить();
		НоваяСтрока.Использование 	= Истина;
		НоваяСтрока.Поле 			= "ВидДенежныхСредств";
		НоваяСтрока.Представление 	= НСтр("ru = 'Вид денежных средств'");
		НоваяСтрока.ТипГруппировки	= Перечисления.ТипДетализацииСтандартныхОтчетов.Элементы;
		
		НоваяСтрока 				= ГруппировкиОтчета.Добавить();
		НоваяСтрока.Использование 	= Истина;
		НоваяСтрока.Поле 			= "БанковскийСчетКасса";
		НоваяСтрока.Представление 	= НСтр("ru = 'Банковский счет, касса'");
		НоваяСтрока.ТипГруппировки	= Перечисления.ТипДетализацииСтандартныхОтчетов.Элементы;

		Если ДополнительныеГруппировки<>Неопределено Тогда
			// Дополнительные группировки
			ДополнительныеГруппировки.Очистить();
			
			НоваяСтрока 				= ДополнительныеГруппировки.Добавить();
			НоваяСтрока.Использование 	= Ложь;
			НоваяСтрока.Поле 			= "СтатьяДвиженияДенежныхСредств";
			НоваяСтрока.Представление 	= НСтр("ru = 'Статья движения денежных средств'");
			НоваяСтрока.ТипГруппировки	= Перечисления.ТипДетализацииСтандартныхОтчетов.Элементы;
			
			НоваяСтрока 				= ДополнительныеГруппировки.Добавить();
			НоваяСтрока.Использование 	= Ложь;
			НоваяСтрока.Поле 			= "ДокументДвиженияОтветственный";
			НоваяСтрока.Представление 	= НСтр("ru = 'Ответственный'");
			НоваяСтрока.ТипГруппировки	= Перечисления.ТипДетализацииСтандартныхОтчетов.Элементы;
			
			НоваяСтрока 				= ДополнительныеГруппировки.Добавить();
			НоваяСтрока.Использование 	= Ложь;
			НоваяСтрока.Поле 			= "ДокументДвиженияКонтрагент";
			НоваяСтрока.Представление 	= НСтр("ru = 'Контрагент'");
			НоваяСтрока.ТипГруппировки	= Перечисления.ТипДетализацииСтандартныхОтчетов.Элементы;
			
			НоваяСтрока 				= ДополнительныеГруппировки.Добавить();
			НоваяСтрока.Использование 	= Ложь;
			НоваяСтрока.Поле 			= "ДокументДвижения";
			НоваяСтрока.Представление 	= НСтр("ru = 'Документ движения'");
			НоваяСтрока.ТипГруппировки	= Перечисления.ТипДетализацииСтандартныхОтчетов.Элементы;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


Процедура ДобавитьВыбранныеПоля(ЭлементСтруктуры, Постфикс = "")
	СписокПолей = СписокПолей();
	Для Каждого ПолеОтчета Из СписокПолей Цикл
		общ_ОтчетыВызовСервера.ДобавитьВыбранноеПоле(ЭлементСтруктуры, ПолеОтчета + Постфикс);
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли
