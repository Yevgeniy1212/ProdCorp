
Функция GetBirthday(Date)
	
	ДатаДняРождения = ОбработатьДату(Date);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК Именниник,
	|	ГОД(РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо.ДатаРождения) КАК ГодРождения,
	|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&Период,
	|			ДЕНЬ(Сотрудник.Физлицо.ДатаРождения) = &День
	|				И МЕСЯЦ(Сотрудник.Физлицо.ДатаРождения) = &Месяц) КАК РаботникиОрганизацийСрезПоследних
	|ГДЕ
	|	РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния <> &Состояние
	|	И РаботникиОрганизацийСрезПоследних.Сотрудник.Актуальность = ИСТИНА";
	Запрос.УстановитьПараметр("День", День(ДатаДняРождения));
	Запрос.УстановитьПараметр("Месяц", Месяц(ДатаДняРождения));
	Запрос.УстановитьПараметр("ДатаРождения", НачалоДня(ДатаДняРождения));
	Запрос.УстановитьПараметр("Период", ДатаДняРождения);
	Запрос.УстановитьПараметр("Состояние", Перечисления.ПричиныИзмененияСостояния.Увольнение);
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Строка = "";
	
	Пока Выборка.Следующий() Цикл
		
		Строка = Строка + Выборка.Именниник +";"+ Формат(Выборка.ГодРождения, "ЧГ=0")+";"+Выборка.ПодразделениеОрганизации+";";	
		
	КонецЦикла;
		
	Возврат Строка;
	
КонецФункции

Функция GetEmployee(IIN, Date1, Date2)
	
	ИИН = СокрЛП(IIN);
	НачалоПериода = ОбработатьДату(Date1);
	КонецПериода = ОбработатьДату(Date2);
	Оклад = "";
	КоличествоКалендарныхДней = 1;
	ВыборкаКалендарныхДней = ПолучитьКоличествоКалендарныхДней(НачалоПериода, КонецПериода);
	Пока ВыборкаКалендарныхДней.Следующий() Цикл
		Если ВыборкаКалендарныхДней.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий Тогда
			КоличествоКалендарныхДней = ВыборкаКалендарныхДней.КоличествоДней;
		КонецЕсли;
	КонецЦикла;
	СписокОклада1 = ПолучитьОкладРаботника(ИИН, НачалоПериода);
	СписокОклада2 = ПолучитьОкладРаботника(ИИН, КонецПериода);
		
	Если СписокОклада1.Количество() > 0 Тогда
		Оклад = Формат(СписокОклада1[0].Значение, "ЧГ=0");	
	КонецЕсли;
	
	Если СписокОклада2.Количество() > 0 Тогда
		Оклад = Формат(СписокОклада2[0].Значение, "ЧГ=0");	
	КонецЕсли;
		
	Если СписокОклада1.Количество() > 0 И СписокОклада1.Количество() > 0 Тогда
		Если СписокОклада1[0].Значение <> СписокОклада2[0].Значение Тогда	
			КоличествоОтработанныхДней1 = ПосчитатьКоличествоОтработанныхДней(ИИН, НачалоПериода, СписокОклада2[1].Значение) - 1;
			КоличествоОтработанныхДней2 = ПосчитатьКоличествоОтработанныхДней(ИИН, СписокОклада2[1].Значение, КонецПериода);
			//Оклад = Окр((СписокОклада1[0].Значение * (Кол"ЧГ=0"ичествоОтработанныхДней1/КоличествоКалендарныхДней)) + (СписокОклада2[0].Значение * (КоличествоОтработанныхДней2/КоличествоКалендарныхДней)), 0); 			
			Оклад = "" + Формат(СписокОклада1[0].Значение, "ЧГ=0") + ";" + Формат(КоличествоОтработанныхДней1, "ЧГ=0") + ";" + Формат(КоличествоКалендарныхДней, "ЧГ=0") + ";" + Формат(СписокОклада2[0].Значение, "ЧГ=0") + ";" + Формат(КоличествоОтработанныхДней2, "ЧГ=0") + ";";	
		КонецЕсли;
	КонецЕсли;
		
	Возврат Оклад;
	
КонецФункции

Функция GetEmployee2(IIN, Date1, Date2)
	
	ИИН = СокрЛП(IIN);
	НачалоПериода = ОбработатьДату(Date1);
	КонецПериода = ОбработатьДату(Date2);
	Оклад = "";
	КоличествоКалендарныхДней = 1;
	ВыборкаКалендарныхДней = ПолучитьКоличествоКалендарныхДней(НачалоПериода, КонецПериода);
	Пока ВыборкаКалендарныхДней.Следующий() Цикл
		Если ВыборкаКалендарныхДней.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий Тогда
			КоличествоКалендарныхДней = ВыборкаКалендарныхДней.КоличествоДней;
		КонецЕсли;
	КонецЦикла;
	СписокОклада1 = ПолучитьОкладРаботника(ИИН, НачалоПериода);
	СписокОклада2 = ПолучитьОкладРаботника(ИИН, КонецПериода);
	
	СписокОклада3 = ПолучитьИзмененныеОкладыРаботника(ИИН, НачалоПериода, КонецПериода);

	Если СписокОклада1.Количество() > 0 Тогда
		Оклад = Формат(СписокОклада1[0].Значение, "ЧГ=0");	
	КонецЕсли;
	
	Если СписокОклада2.Количество() > 0 Тогда
		Оклад = Формат(СписокОклада2[0].Значение, "ЧГ=0");	
	КонецЕсли;
	
	Если СписокОклада3.Количество() > 0 Тогда
		ОкладИзм = Формат(СписокОклада2[0].Значение, "ЧГ=0");	
	КонецЕсли;

	
	
	ОкладИзмСтрока = "";
	
	Для А = 0 По (СписокОклада3.Количество()-1) Цикл
		
		НачалоПериодаИзменений = НачалоПериода;
		
		Если СписокОклада3[А].Значение <> СписокОклада2[0].Значение Тогда	
			
			Если СписокОклада1.Количество()  > 0 Тогда
				КоличествоОтработанныхДней3 = ПосчитатьКоличествоОтработанныхДней(ИИН, НачалоПериодаИзменений, СписокОклада3[А+1].Значение) - 1;
			ИначеЕсли СписокОклада3.Количество() = 2 Тогда
				КоличествоОтработанныхДней3 = ПосчитатьКоличествоОтработанныхДней(ИИН, СписокОклада3[А+1].Значение, КонецПериода) - 1;
			Иначе
				КоличествоОтработанныхДней3 = ПосчитатьКоличествоОтработанныхДней(ИИН, СписокОклада3[А+1].Значение, СписокОклада3[А+3].Значение) - 1;
			КонецЕсли;
			
			ОкладИзмСтрока = ОкладИзмСтрока + Формат(СписокОклада3[А].Значение, "ЧГ=0") + ";" + Формат(КоличествоОтработанныхДней3, "ЧГ=0") + ";"
		КонецЕсли;
		
		НачалоПериодаИзменений = СписокОклада3[А+1];
		
		А = А+1;
		
	КонецЦикла;
	
		
	
	Если СписокОклада1.Количество() > 0 И СписокОклада2.Количество() > 0 Тогда
		Если СписокОклада1[0].Значение <> СписокОклада2[0].Значение Тогда	
			КоличествоОтработанныхДней1 = ПосчитатьКоличествоОтработанныхДней(ИИН, НачалоПериода, СписокОклада2[1].Значение) - 1;
			КоличествоОтработанныхДней2 = ПосчитатьКоличествоОтработанныхДней(ИИН, СписокОклада2[1].Значение, КонецПериода);
			//Оклад = Окр((СписокОклада1[0].Значение * (Кол"ЧГ=0"ичествоОтработанныхДней1/КоличествоКалендарныхДней)) + (СписокОклада2[0].Значение * (КоличествоОтработанныхДней2/КоличествоКалендарныхДней)), 0); 			
			
			ОкладНаНачало = "" + Формат(СписокОклада1[0].Значение, "ЧГ=0") + ";" + Формат(КоличествоОтработанныхДней1, "ЧГ=0") + ";" + Формат(КоличествоКалендарныхДней, "ЧГ=0") + ";";
			ОкладНаКонец = "" + Формат(СписокОклада2[0].Значение, "ЧГ=0") + ";" + Формат(КоличествоОтработанныхДней2, "ЧГ=0") + ";";
			
			Оклад = ОкладНаНачало + ОкладИзмСтрока + ОкладНаКонец;	
								
		КонецЕсли;
		
	ИначеЕсли СписокОклада1.Количество() = 0 И СписокОклада2[0].Значение <> СписокОклада3[0].Значение  Тогда
		
			КоличествоОтработанныхДней2 = ПосчитатьКоличествоОтработанныхДней(ИИН, СписокОклада2[1].Значение, КонецПериода);
				
			ОкладНаНачало = "" + Формат(КоличествоКалендарныхДней, "ЧГ=0") + ";";
			ОкладНаКонец = "" + Формат(СписокОклада2[0].Значение, "ЧГ=0") + ";" + Формат(КоличествоОтработанныхДней2, "ЧГ=0") + ";";
			
			Оклад = ОкладИзмСтрока + ОкладНаНачало + ОкладНаКонец;	
			
	//Иначе 
	//	
	//		//КоличествоОтработанныхДней1 = ПосчитатьКоличествоОтработанныхДней(ИИН, НачалоПериода, СписокОклада2[1].Значение) - 1;
	//		КоличествоОтработанныхДней2 = ПосчитатьКоличествоОтработанныхДней(ИИН, СписокОклада2[1].Значение, КонецПериода);
	//		//Оклад = Окр((СписокОклада1[0].Значение * (Кол"ЧГ=0"ичествоОтработанныхДней1/КоличествоКалендарныхДней)) + (СписокОклада2[0].Значение * (КоличествоОтработанныхДней2/КоличествоКалендарныхДней)), 0); 			
	//		
	//		ОкладНаНачало = "" + Формат(КоличествоКалендарныхДней, "ЧГ=0") + ";";
	//		ОкладНаКонец = "" + Формат(СписокОклада2[0].Значение, "ЧГ=0") + ";" + Формат(КоличествоОтработанныхДней2, "ЧГ=0") + ";";
	//		
	//		Оклад = ОкладНаКонец + ОкладНаНачало;	
			
			
	КонецЕсли;
	
	Возврат Оклад;
			 //Возврат  "TEST" ;
	
КонецФункции

Функция ПосчитатьКоличествоОтработанныхДней(ИИН, Дата1, Дата2)
	
	КоличествоДней = 0;
	
	Выборка = ПолучитьКоличествоДнейРаботника(ИИН, Дата1, Дата2);
	Пока Выборка.Следующий() Цикл
		КоличествоДней = КоличествоДней + Выборка.КоличествоОтработанныхДней;
	КонецЦикла;
	
	Возврат КоличествоДней;
	
КонецФункции

Функция ПолучитьОкладРаботника(ИИН, Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель1 КАК Оклад,
	|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Период
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|			&Период,
	|			Сотрудник.Физлицо.ИдентификационныйКодЛичности = &ИИН
	|				И ВидРасчета В (&ВидыРасчета)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
	|ГДЕ
	|	ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель1 > 0";
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("ИИН", ИИН);
	ВидыРасчета = Новый СписокЗначений;
	ВидыРасчета.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОкладПоДням);
	Запрос.УстановитьПараметр("ВидыРасчета", ВидыРасчета);
	
	СписокЗначенийОклада = Новый СписокЗначений;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СписокЗначенийОклада.Добавить(Выборка.Оклад);
		СписокЗначенийОклада.Добавить(Выборка.Период);	
	КонецЕсли;
	
	Возврат СписокЗначенийОклада;
	
КонецФункции

Функция ПолучитьКоличествоКалендарныхДней(Дата1, Дата2)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря) КАК КоличествоДней,
	|	РегламентированныйПроизводственныйКалендарь.ВидДня
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	РегламентированныйПроизводственныйКалендарь.ВидДня";
	Запрос.УстановитьПараметр("НачалоПериода", Дата1);
	Запрос.УстановитьПараметр("КонецПериода", Дата2);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка;
	
КонецФункции

Функция ПолучитьКоличествоДнейРаботника(ИИН, Дата1, Дата2)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РабочееВремяРаботниковОрганизацийОбороты.ВидИспользованияРабочегоВремени,
	|	СУММА(РабочееВремяРаботниковОрганизацийОбороты.ДнейОборот) КАК КоличествоОтработанныхДней
	|ИЗ
	|	РегистрНакопления.РабочееВремяРаботниковОрганизаций.Обороты(&НачалоПериода, &КонецПериода, , Сотрудник.Физлицо.ИдентификационныйКодЛичности = &ИИН) КАК РабочееВремяРаботниковОрганизацийОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	РабочееВремяРаботниковОрганизацийОбороты.ВидИспользованияРабочегоВремени";
	Запрос.УстановитьПараметр("НачалоПериода", Дата1);
	Запрос.УстановитьПараметр("КонецПериода", Дата2);
	Запрос.УстановитьПараметр("ИИН", ИИН);
	
	Выборка = Запрос.Выполнить().Выбрать();	
	
	Возврат Выборка;
	
КонецФункции

Функция ОбработатьДату(Дата)
	
	ПериодТекст = СтрЗаменить(Дата, "-", "");
	Период = Дата(ПериодТекст);
	
	Возврат Период;
	
КонецФункции

Функция GetEffectiveDate(Date1, Date2)
	
	НачалоПериода = ОбработатьДату(Date1);
	КонецПериода = ОбработатьДату(Date2);
		
	Выборка = ПолучитьКоличествоКалендарныхДней(НачалоПериода, КонецПериода);              		
	Строка = "";
	
	Пока Выборка.Следующий() Цикл
		
		Строка = Строка + Выборка.ВидДня +":"+ Выборка.КоличествоДней+";";	
		
	КонецЦикла;
		
	Возврат Строка;  	
	
КонецФункции

Функция GetDaysActuallyWorked(IIN, Date1, Date2)
	
	НачалоПериода = ОбработатьДату(Date1);
	КонецПериода = ОбработатьДату(Date2);
	ИИН = СокрЛП(IIN);	
	
	Выборка = ПолучитьКоличествоДнейРаботника(ИИН, НачалоПериода, КонецПериода);
		
	Строка = "";
	
	Пока Выборка.Следующий() Цикл
		
		Строка = Строка + Выборка.ВидИспользованияРабочегоВремени +":"+ Выборка.КоличествоОтработанныхДней+";";	
		
	КонецЦикла;
		
	Возврат Строка;
	
КонецФункции

Функция ПолучитьИзмененныеОкладыРаботника(ИИН, НачалоПериода, КонецПериода)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПлановыеНачисленияРаботниковОрганизаций.Период КАК Период,
	|	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник,
	|	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета,
	|	ПлановыеНачисленияРаботниковОрганизаций.Показатель1  КАК Оклад
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ПлановыеНачисленияРаботниковОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПлановыеНачисленияРаботниковОрганизаций.Сотрудник.Физлицо.ИдентификационныйКодЛичности = &ИИН
	|	И ПлановыеНачисленияРаботниковОрганизаций.Показатель1 > 0
	|	И ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета В(&ВидыРасчета)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("ИИН", ИИН);
	
	ВидыРасчета = Новый СписокЗначений;
	ВидыРасчета.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОкладПоДням);
	Запрос.УстановитьПараметр("ВидыРасчета", ВидыРасчета);
	
	СписокЗначенийОклада = Новый СписокЗначений;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокЗначенийОклада.Добавить(Выборка.Оклад);
		СписокЗначенийОклада.Добавить(Выборка.Период);	
	КонецЦикла;
	
	Возврат СписокЗначенийОклада;
	
КонецФункции
