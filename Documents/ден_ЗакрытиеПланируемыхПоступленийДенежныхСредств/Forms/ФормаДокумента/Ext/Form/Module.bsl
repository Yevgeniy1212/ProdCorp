
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ДокументПриСозданииНаСервере(ЭтотОбъект);
	
	ПодготовитьФормуНаСервере();
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
	
	// Активизировать табличную часть
	УстановитьТекущуюСтраницуОсновнойПанели();

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ДокументПриЧтенииНаСервере(ЭтотОбъект,ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	общ_ОбщегоНазначенияКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(СтруктурноеПодразделениеОрганизация) Тогда 
		Объект.Организация = Неопределено;
		Объект.СтруктурноеПодразделение = Неопределено;
	Иначе 
		Результат = общ_РаботаСоСтруктурнымиПодразделениями.ПроверитьИзменениеЗначенийОрганизацииСтруктурногоПодразделения(СтруктурноеПодразделениеОрганизация, Объект.Организация, Объект.СтруктурноеПодразделение);
		Если Результат.ИзмененаОрганизация ИЛИ Результат.ИзмененоСтруктурноеПодразделение Тогда
			СтруктурноеПодразделениеОрганизацияПриИзмененииНаКлиенте(Истина, Результат);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	общ_РаботаСоСтруктурнымиПодразделениями.СтруктурноеПодразделениеНачалоВыбора(ЭтаФорма, СтандартнаяОбработка, Объект.Организация, Объект.СтруктурноеПодразделение, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ПланируемыеПоступленияДС

&НаКлиенте
Процедура ПланируемыеПоступленияДСДокументПланированияПриИзменении(Элемент)
	
	Переменные = Новый Структура;
	ПланируемыеПоступленияДСДокументПланированияПриИзмененииНаСервере(Элементы.ПланируемыеПоступленияДС.ТекущиеДанные.ДокументПланирования, Переменные);
	
	Если Переменные.Количество() > 0 Тогда
		Элементы.ПланируемыеПоступленияДС.ТекущиеДанные.ДокументПланирования 	= Переменные.ДокументПланирования;
		Элементы.ПланируемыеПоступленияДС.ТекущиеДанные.ВалютаПоступление		= Переменные.ВалютаПоступление;
		Элементы.ПланируемыеПоступленияДС.ТекущиеДанные.ОстатокПоступление		= Переменные.ОстатокПоступление;
		Элементы.ПланируемыеПоступленияДС.ТекущиеДанные.ОстатокРазмещение		= Переменные.ОстатокРазмещение;
		Элементы.ПланируемыеПоступленияДС.ТекущиеДанные.Контрагент				= Переменные.Контрагент;
		Элементы.ПланируемыеПоступленияДС.ТекущиеДанные.Ответственный			= Переменные.Ответственный;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланируемыеПоступленияДСДокументПланированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПолучитьФорму("Документ.ден_ПланируемоеПоступлениеДенежныхСредств.ФормаВыбора", , Элемент);
	
	Отбор = ФормаВыбора.Список.КомпоновщикНастроек.Настройки.Отбор;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Отбор, 
			"Организация", 
			Объект.Организация, 
			ВидСравненияКомпоновкиДанных.Равно, 
			, 
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
		);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Отбор, 
		"СтруктурноеПодразделение", 
		Объект.СтруктурноеПодразделение, 
		ВидСравненияКомпоновкиДанных.Равно, 
		, 
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
	);
	
	Если Объект.ОтборКонтрагент Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Отбор, 
			"Контрагент", 
			Объект.Контрагент, 
			ВидСравненияКомпоновкиДанных.Равно, 
			, 
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
		);
	КонецЕсли;
	
	Если Объект.ОтборОтветственный Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Отбор, 
			"Ответственный", 
			Объект.ОтветственныйПоступление, 
			ВидСравненияКомпоновкиДанных.Равно, 
			, 
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный
		);
	КонецЕсли;
	
	Если НЕ (Объект.ОтборДатаНач  = '00010101' ИЛИ Объект.ОтборДатаКон = '00010101') Тогда
		// с
		ЭлементОтбора = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("ДатаПоступления");
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		ЭлементОтбора.ПравоеЗначение 	= НачалоДня(Объект.ОтборДатаНач);
		ЭлементОтбора.Использование 	= Истина;
		ЭлементОтбора.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		// по
		ЭлементОтбора = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("ДатаПоступления");
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		ЭлементОтбора.ПравоеЗначение 	= КонецДня(Объект.ОтборДатаКон);
		ЭлементОтбора.Использование 	= Истина;
		ЭлементОтбора.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	КонецЕсли;

	ФормаВыбора.Открыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда) Экспорт
	
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда) Экспорт
	
	Если НЕ фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Заполнить(Команда) Экспорт
	
	Если Объект.ПланируемыеПоступленияДС.Количество() > 0 Тогда
    	ТекстВопроса = НСтр("ru = 'Перед заполнением табличная часть будет очищена. Заполнить?'");
		ПоказатьВопрос(Новый ОписаниеОповещения("ПослеОтветаНаВопросОбОчисткеТЧ", ЭтотОбъект), 
					   ТекстВопроса,
					   РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьНаСервере();				   
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаНастройкаПериода(Команда) Экспорт
	
	НП = Новый ДиалогРедактированияСтандартногоПериода;
	
	НП.Показать(Новый ОписаниеОповещения("ПослеЗакрытияДиалогаРедактированияПериода", ЭтотОбъект));
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// Управление формой

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ТекущаяДатаДокумента = Объект.Дата;
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПризнакОтображенияСтруктурныхПодразделений();
	ОткрыватьНастройкуДвижений = фин_ОбщегоНазначенияСервер.ПолучитьЗначениеПоУмолчанию(, "ПоказыватьДвиженияПриПроведении");
		
	общ_РаботаСоСтруктурнымиПодразделениями.УстановитьВидимостьСтруктурногоПодразделения(Объект.Организация, Объект.СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	общ_РаботаСоСтруктурнымиПодразделениями.УстановитьСвойстваЭлементаСтруктурноеПодразделениеОрганизация(Элементы.СтруктурноеПодразделениеОрганизация, Объект.СтруктурноеПодразделение, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	усд_УправлениеСогласованиемДокументов.ДоступностьРедактированияДокумента(ЭтотОбъект,Объект);
	
	оф_ОтборПоРеквизитамЗаголовок = "Отбор по реквизитам";
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущуюСтраницуОсновнойПанели()
	
	фин_ОбщегоНазначенияСервер.АктивизироватьЭлементФормы(ЭтаФорма, "ПланируемыеПоступленияДС");

КонецПроцедуры 

// При изменении реквизитов (на сервере)

&НаСервере
Процедура СтруктурноеПодразделениеОрганизацияПриИзмененииНаСервере(СтруктураПараметров = Неопределено, СтруктураРезультатаВыполнения)
	
	Если СтруктураПараметров = Неопределено	ИЛИ (СтруктураПараметров.Свойство("НеобходимоИзменитьЗначенияРеквизитовОбъекта") 
		И СтруктураПараметров.НеобходимоИзменитьЗначенияРеквизитовОбъекта) Тогда 
		общ_РаботаСоСтруктурнымиПодразделениями.СтруктурноеПодразделениеПриИзменении(СтруктурноеПодразделениеОрганизация, Объект.Организация, Объект.СтруктурноеПодразделение, СтруктураПараметров);
	КонецЕсли;
		
	ПриИзмененииЗначенияОрганизацииСервер(СтруктураПараметров, СтруктураРезультатаВыполнения);
	
КонецПроцедуры

&НаСервере
Процедура ПланируемыеПоступленияДСДокументПланированияПриИзмененииНаСервере(Знач ДокПланирования, Переменные)
	
	Запрос = Документы.ден_ЗакрытиеПланируемыхПоступленийДенежныхСредств.СформироватьЗапросПолученияОстатков(Объект, ДокПланирования); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Переменные.Вставить("ДокументПланирования",	Выборка.ДокументПланирования);
		Переменные.Вставить("ВалютаПоступление",	Выборка.ВалютаПоступление);
		Переменные.Вставить("ОстатокПоступление",	Выборка.ОстатокПоступление);
		Переменные.Вставить("ОстатокРазмещение",	Выборка.ОстатокРазмещение);
		Переменные.Вставить("Контрагент",			Выборка.Контрагент);
		Переменные.Вставить("Ответственный",		Выборка.Ответственный);
	КонецЕсли;
	
КонецПроцедуры

// Обработчики, вызываемые после окончания интерактивных действий пользователя

&НаКлиенте
Процедура ПослеВыбораСтруктурногоПодразделения(Результат, Параметры) Экспорт
	
	общ_РаботаСоСтруктурнымиПодразделениями.ПослеВыбораСтруктурногоПодразделения(Результат, Объект.Организация, Объект.СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация);
	Если Результат.ИзмененаОрганизация ИЛИ Результат.ИзмененоСтруктурноеПодразделение Тогда
		Модифицированность = Истина;
		Результат.Вставить("НеобходимоИзменитьЗначенияРеквизитовОбъекта", Ложь);
		СтруктурноеПодразделениеОрганизацияПриИзмененииНаКлиенте(Истина, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросОбОчисткеТЧ(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.ПланируемыеПоступленияДС.Очистить();
		ЗаполнитьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияДиалогаРедактированияПериода(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Объект.ОтборДатаНач = Результат.ДатаНачала;
		Объект.ОтборДатаКон = Результат.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

// Обработчики команд заполнения документа и табличных частей

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Документы.ден_ЗакрытиеПланируемыхПоступленийДенежныхСредств.ЗаполнитьДокументыПланированияПоОстаткам(Объект);
	
КонецПроцедуры

// Служебные процедуры и функции

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияПриИзмененииНаКлиенте(ОчищатьНекорректныеЗначения, Параметры)

	Параметры.Вставить("ОчищатьНекорректныеЗначения", ОчищатьНекорректныеЗначения);
	
	СтруктураРезультатаВыполнения = Неопределено;
	СтруктурноеПодразделениеОрганизацияПриИзмененииНаСервере(Параметры, СтруктураРезультатаВыполнения);
		
	Если Параметры.Свойство("ИзмененаОрганизация") И Параметры.ИзмененаОрганизация Тогда
		Объект.ПланируемыеПоступленияДС.Очистить();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииЗначенияОрганизацииСервер(СтруктураПараметров, СтруктураРезультатаВыполнения)
	
	Если НЕ СтруктураПараметров.ИзмененаОрганизация И НЕ СтруктураПараметров.ИзмененоСтруктурноеПодразделение Тогда
		Возврат;
	КонецЕсли;
	
	общ_РаботаСоСтруктурнымиПодразделениями.ПриИзмененииЗначенияОрганизации(Объект, , СтруктураРезультатаВыполнения);
	
	УправлениеФормой(ЭтаФорма);
			
КонецПроцедуры
