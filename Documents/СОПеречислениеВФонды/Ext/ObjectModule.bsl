// - БК - начало
Перем мОтображатьСтруктурныеПодразделения Экспорт;
// - БК - конец

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Выполняет заполнение табличной части документа по данным учетных регистров.
//
Процедура Автозаполнение() Экспорт
	
	ПоУдельномуВесу = (СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюСО.ПоЗадолженностиЗаМесяцПоНУ 
						Или СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюСО.ПоОстаткамЗадолженностиНаКонецМесяцаПоНУ);
	
	ПоОстаткам 		= (СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюСО.ПоОстаткамЗадолженностиНаКонецМесяца
						Или СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюСО.ПоОстаткамЗадолженностиНаКонецМесяцаПоНУ);
	
	ПоДаннымСО = (ВидОперации = Перечисления.ВидыОперацийСОПеречислениеВФонды.ПеречислениеОбязательныхСоциальныхОтчислений);
	ПоДаннымВОСМС = (ВидОперации = Перечисления.ВидыОперацийСОПеречислениеВФонды.ПеречислениеВзносовОСМС);

	СоциальныеОтчисления.Очистить();
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеРеглУчетаТекст = "";
	
	ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст + 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТ_РаботникиОрганизаций
	|ИЗ
	|	(ВЫБРАТЬ
	|		РаботникиОрганизации.Сотрудник.Физлицо КАК ФизЛицо,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|					ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
	|				ИНАЧЕ РаботникиОрганизации.Период
	|			КОНЕЦ) КАК Период
	|	ИЗ
	|		РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|	ГДЕ
	|		РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
	|		И РаботникиОрганизации.Период <= &парамНачало
	|		И РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РаботникиОрганизации.Сотрудник.Физлицо) КАК ДатыПоследнихНазначений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизацийСрезПоследних
	|		ПО ДатыПоследнихНазначений.ФизЛицо = РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо
	|			И (ДатыПоследнихНазначений.Период = ВЫБОР
	|				КОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|					ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизацийСрезПоследних.Период, ДЕНЬ, -1)
	|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.Период
	|			КОНЕЦ)
	|			И (РаботникиОрганизацийСрезПоследних.Организация = &парамГоловнаяОрганизация)
	|			И (РаботникиОрганизацийСрезПоследних.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|			И (РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации В ИЕРАРХИИ (&парамПодразделениеОрганизации))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДоговорникиОрганизации.Сотрудник.Физлицо
	|ИЗ
	|	РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДоговорникиОрганизации.Сотрудник.Физлицо КАК ФизЛицо,
	|			МАКСИМУМ(ДоговорникиОрганизации.Договор) КАК Договор
	|		ИЗ
	|			РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					ДоговорникиОрганизации.Сотрудник.Физлицо КАК ФизЛицо,
	|					МАКСИМУМ(ДоговорникиОрганизации.ДатаНачала) КАК ДатаНачала
	|				ИЗ
	|					РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
	|				ГДЕ
	|					ДоговорникиОрганизации.ДатаНачала <= &парамДата
	|					И ДоговорникиОрганизации.Организация = &парамГоловнаяОрганизация
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ДоговорникиОрганизации.Сотрудник.Физлицо) КАК ДоговорникиОрганизацииСрез
	|				ПО ДоговорникиОрганизации.Сотрудник.Физлицо = ДоговорникиОрганизацииСрез.ФизЛицо
	|					И ДоговорникиОрганизации.ДатаНачала = ДоговорникиОрганизацииСрез.ДатаНачала
	|					И (ДоговорникиОрганизации.Организация = &парамГоловнаяОрганизация)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДоговорникиОрганизации.Сотрудник.Физлицо) КАК ДоговорникиОрганизацииСрез
	|		ПО ДоговорникиОрганизации.Сотрудник.Физлицо = ДоговорникиОрганизацииСрез.ФизЛицо
	|			И ДоговорникиОрганизации.Договор = ДоговорникиОрганизацииСрез.Договор
	|			И (ДоговорникиОрганизации.Организация = &парамГоловнаяОрганизация)
	|ГДЕ
	|	ДоговорникиОрганизации.ПодразделениеОрганизации В ИЕРАРХИИ(&парамПодразделениеОрганизации)
	|;
	|";
	
	Если НЕ ПоУдельномуВесу Тогда
		Если ПоДаннымВОСМС Тогда
			ИмяРегистра = "ВОСМСРасчетыСФондами";
			ИмяРесурса = "ВзносОстаток";
		ИначеЕсли ПоДаннымСО Тогда
			ИмяРегистра = "СОРасчетыСФондами";
			ИмяРесурса = "ОтчислениеОстаток";
		Иначе 
			ИмяРегистра = "ООСМСРасчетыСФондами";
			ИмяРесурса = "ОтчислениеОстаток";
		КонецЕсли;
		ИмяМесяцВыплаты = "МесяцНалоговогоПериода";
	Иначе
		ИмяРегистра = "ВОСМСПодлежитПеречислениюВФонды";
		ИмяРесурса = "ВзносОстаток";
		ИмяМесяцВыплаты = "МесяцВыплатыДоходов";
	КонецЕсли;

	ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст + 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетыСФондамиОстатки.Физлицо КАК ФизЛицо,
	|	РасчетыСФондамиОстатки." + ИмяРесурса + " КАК Сумма,
	|	ИСТИНА КАК Авторасчет
	|ИЗ
	|	РегистрНакопления." + ИмяРегистра + ".Остатки(
	|			&парамГраницаОстатков,
	|			Организация = &парамОрганизация
	|			" + ?(НЕ ПоУдельномуВесу,"И ВидПлатежа = &парамВидПлатежа", "") + "
	|			И " + ?(ПоОстаткам, "
	|				"+ ИмяМесяцВыплаты + " <= КОНЕЦПЕРИОДА(&парамМесяц, МЕСЯЦ)", "
	|				"+ ИмяМесяцВыплаты + " МЕЖДУ НАЧАЛОПЕРИОДА(&парамМесяц, МЕСЯЦ) И КОНЕЦПЕРИОДА(&парамМесяц, МЕСЯЦ)") + ") КАК РасчетыСФондамиОстатки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ПО РаботникиОрганизаций.ФизЛицо = РасчетыСФондамиОстатки.ФизЛицо";
	// - КУФИБ - начало
	Если мОтображатьСтруктурныеПодразделения Тогда
		ТекстФильтрПоСтруктурномуПодразделению = "ВЫБРАТЬ
		|	УчетВзаиморасчетов.Сотрудник КАК Сотрудник,
		|	УчетВзаиморасчетов.Сотрудник.ФизЛицо КАК ФизЛицо,
		|	УчетВзаиморасчетов.СтруктурноеПодразделение
		|ИЗ
		|	РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамМесяц, Организация = &парамГоловнаяОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетов";
		ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст +"
		|	ЛЕВОЕ СОЕДИНЕНИЕ ("+ТекстФильтрПоСтруктурномуПодразделению+") КАК ФильтрПоСтруктурномуПодразделению										 
		|    	ПО РасчетыСФондамиОстатки.ФизЛицо = ФильтрПоСтруктурномуПодразделению.ФизЛицо
		|				И НЕ (ФильтрПоСтруктурномуПодразделению.Сотрудник.ДатаУвольнения<&парамМесяц И ФильтрПоСтруктурномуПодразделению.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
		
	КонецЕсли;
	// - КУФИБ - конец
		
	Если ПорядокЗаполнения = 0 Тогда //  по сотрудникам организации
		ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст +
		"
		|ГДЕ
		|	НЕ РаботникиОрганизаций.ФизЛицо ЕСТЬ NULL
		|";
	Иначе  // по непринятым лицам
		ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст +
		"
		|ГДЕ
		|	РаботникиОрганизаций.ФизЛицо ЕСТЬ NULL
		|";
	КонецЕсли;
	// - КУФИБ - начало
	Если мОтображатьСтруктурныеПодразделения Тогда
		ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст +"
		|	И ЕСТЬNULL(ФильтрПоСтруктурномуПодразделению.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))=&СтруктурноеПодразделение";
		
	КонецЕсли;
	// - КУФИБ - конец
	
	ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст +
	"
	|УПОРЯДОЧИТЬ ПО
	|	РасчетыСФондамиОстатки.Физлицо.Наименование
	|";
	
	Запрос = Новый Запрос(ДанныеРеглУчетаТекст);
	// - КУФИБ - начало
	Если мОтображатьСтруктурныеПодразделения Тогда
		Запрос.УстановитьПараметр("СтруктурноеПодразделение",СтруктурноеПодразделение);
	КонецЕсли;
	// - КУФИБ - конец
	
	ДатаСреза = Макс(Дата, КонецМесяца(ПериодРегистрации));
	
	Запрос.УстановитьПараметр("парамДата", ДатаСреза);
	Запрос.УстановитьПараметр("парамГраницаОстатков", Новый Граница(ДатаСреза, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамПодразделениеОрганизации", ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("парамМесяц", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамНачало", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидПлатежа", ВидПлатежа);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Сумма) И Выборка.Сумма > 0 Тогда
			НоваяСтрока = СоциальныеОтчисления.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			// ISO 20022
			Если НЕ ПоДаннымСО Тогда
				НоваяСтрока.МесяцПериода = ПериодРегистрации;
			КонецЕсли;
			// ISO 20022
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры // Автозаполнение()

// Рассчитывает строки табличной части документа по данным учетных регистров.
//
Процедура Рассчитать() Экспорт
	
	ПоУдельномуВесу = (СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюСО.ПоЗадолженностиЗаМесяцПоНУ 
						Или СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюСО.ПоОстаткамЗадолженностиНаКонецМесяцаПоНУ);
	
	ПоОстаткам 		= (СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюСО.ПоОстаткамЗадолженностиНаКонецМесяца
						Или СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюСО.ПоОстаткамЗадолженностиНаКонецМесяцаПоНУ);
	
	ПоДаннымСО = (ВидОперации = Перечисления.ВидыОперацийСОПеречислениеВФонды.ПеречислениеОбязательныхСоциальныхОтчислений);
	ПоДаннымВОСМС = (ВидОперации = Перечисления.ВидыОперацийСОПеречислениеВФонды.ПеречислениеВзносовОСМС);
	
		
	Если НЕ ПоУдельномуВесу Тогда
		Если ПоДаннымВОСМС Тогда
			ИмяРегистра = "ВОСМСРасчетыСФондами";
			ИмяРесурса = "ВзносОстаток";
		ИначеЕсли ПоДаннымСО Тогда
			ИмяРегистра = "СОРасчетыСФондами";
			ИмяРесурса = "ОтчислениеОстаток";
		Иначе 
			ИмяРегистра = "ООСМСРасчетыСФондами";
			ИмяРесурса = "ОтчислениеОстаток";
		КонецЕсли;
		ИмяМесяцВыплаты = "МесяцНалоговогоПериода";
	Иначе
		ИмяРегистра = "ВОСМСПодлежитПеречислениюВФонды";
		ИмяРесурса = "ВзносОстаток";
		ИмяМесяцВыплаты = "МесяцВыплатыДоходов";
	КонецЕсли;
	
	// - КУФИБ - начало
	ТекстВТ = "";
	ТекстФильтр = "ВЫБРАТЬ
	|										ФизЛицо
	|									ИЗ
	|										Документ.СОПеречислениеВФонды.СоциальныеОтчисления КАК Док
	|									ГДЕ
	|										Док.Ссылка = &парамСсылка";
	Если мОтображатьСтруктурныеПодразделения Тогда
		ТекстВТ = "ВЫБРАТЬ
		|	СоциальныеОтчисления.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизЛица
		|ИЗ
		|	Документ.СОПеречислениеВФонды.СоциальныеОтчисления КАК СоциальныеОтчисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамМесяц, Организация = &парамГоловнаяОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК РеглУчетВзаиморасчетовССотрудникамиОрганизацийСрезПоследних
		|		ПО СоциальныеОтчисления.ФизЛицо = РеглУчетВзаиморасчетовССотрудникамиОрганизацийСрезПоследних.Сотрудник.ФизЛицо
		|ГДЕ
		|	СоциальныеОтчисления.Ссылка = &парамСсылка
		|	И ЕСТЬNULL(РеглУчетВзаиморасчетовССотрудникамиОрганизацийСрезПоследних.СтруктурноеПодразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) = &СтруктурноеПодразделение
		|;
		|";
	ТекстФильтр = "ВЫБРАТЬ
		|										ФизЛицо
		|									ИЗ
		|										ВТ_ФизЛица КАК Док";
	КонецЕсли;
	
	// - КУФИБ - конец


	ДанныеРеглУчетаТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СОПеречислениеВФондыСоциальныеОтчисления.Физлицо,
	|	СОПеречислениеВФондыСоциальныеОтчисления.НомерСтроки,
	|	РасчетыСФондамиОстатки." + ИмяРесурса + " КАК Сумма
	|ИЗ
	|	Документ.СОПеречислениеВФонды.СоциальныеОтчисления КАК СОПеречислениеВФондыСоциальныеОтчисления
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления." + ИмяРегистра + ".Остатки(
	|					&парамГраницаОстатков,
	|					Организация = &парамОрганизация
	|			" + ?(НЕ ПоУдельномуВесу,"И ВидПлатежа = &парамВидПлатежа", "") + "
	|					И " + ?(ПоОстаткам, "
	|						"+ ИмяМесяцВыплаты + " <= КОНЕЦПЕРИОДА(&парамМесяц, МЕСЯЦ)", "
	|						"+ ИмяМесяцВыплаты + " МЕЖДУ НАЧАЛОПЕРИОДА(&парамМесяц, МЕСЯЦ) И КОНЕЦПЕРИОДА(&парамМесяц, МЕСЯЦ)") + "
	|					И ФизЛицо В ("+ТекстФильтр+")) КАК РасчетыСФондамиОстатки
	|			ПО СОПеречислениеВФондыСоциальныеОтчисления.ФизЛицо = РасчетыСФондамиОстатки.ФизЛицо
	|
	|ГДЕ
	|	СОПеречислениеВФондыСоциальныеОтчисления.Ссылка = &парамСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	СОПеречислениеВФондыСоциальныеОтчисления.НомерСтроки";
	
	// - КУФИБ - начало
	Если мОтображатьСтруктурныеПодразделения Тогда
		ДанныеРеглУчетаТекст = ТекстВТ + ДанныеРеглУчетаТекст;
	КонецЕсли;
	// - КУФИБ - конец
	Запрос = Новый Запрос(ДанныеРеглУчетаТекст);
	// - КУФИБ - начало
	Если мОтображатьСтруктурныеПодразделения Тогда
		Запрос.УстановитьПараметр("СтруктурноеПодразделение", СтруктурноеПодразделение);
		Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	КонецЕсли;
	// - КУФИБ - конец
	
	ДатаСреза = Макс(Дата, КонецМесяца(ПериодРегистрации));
	
	Запрос.УстановитьПараметр("парамДата", ДатаСреза);
	Запрос.УстановитьПараметр("парамГраницаОстатков", Новый Граница(ДатаСреза, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("парамСсылка", Ссылка);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамМесяц", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамВидПлатежа", ВидПлатежа);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаТЧ = СоциальныеОтчисления[Выборка.НомерСтроки - 1];
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка);
	КонецЦикла;
		
КонецПроцедуры // Рассчитать()

// Процедура выполняет заполнение документа по документу-основанию
//
Процедура ЗаполнитьПоДокументуОснования(Основание) Экспорт
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.РасчетПениОПВиСО") Тогда
		
		Если Основание.ВидОперации = Перечисления.ВидыОперацийРасчетПени.РаспределениеПениСО
			ИЛИ Основание.ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениСО Тогда
			ВидОперации = Перечисления.ВидыОперацийСОПеречислениеВФонды.ПеречислениеОбязательныхСоциальныхОтчислений;
		ИначеЕсли Основание.ВидОперации = Перечисления.ВидыОперацийРасчетПени.РаспределениеПениВОСМС
			ИЛИ Основание.ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениВОСМС Тогда
			ВидОперации = Перечисления.ВидыОперацийСОПеречислениеВФонды.ПеречислениеВзносовОСМС;
		ИначеЕсли Основание.ВидОперации = Перечисления.ВидыОперацийРасчетПени.РаспределениеПениООСМС
			ИЛИ Основание.ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениООСМС Тогда
			ВидОперации = Перечисления.ВидыОперацийСОПеречислениеВФонды.ПеречислениеОтчисленийОСМС;
		Иначе 
			Возврат;
		КонецЕсли;

		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание);
		ВидПлатежа = Основание.ВидПлатежа;
		
		ДокументОснование = Основание;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Основание", Основание);
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(РасчетПени.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода
		|ИЗ
		|	Документ.РасчетПениОПВиСО.ИсчислениеПени КАК РасчетПени
		|ГДЕ
		|	РасчетПени.Ссылка = &Основание
		|УПОРЯДОЧИТЬ ПО
		|	МесяцНалоговогоПериода
		|";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		СписокМесяцевНалоговогоПериода = Новый СписокЗначений;
		Пока Выборка.Следующий() Цикл
			СписокМесяцевНалоговогоПериода.Добавить(Выборка.МесяцНалоговогоПериода, Формат(Выборка.МесяцНалоговогоПериода, "ДФ='ММММ гггг'"));
		КонецЦикла;
		
		Если СписокМесяцевНалоговогоПериода.Количество() = 0 Тогда
			// вообще нет данных в документе-основании
			Возврат;
		ИначеЕсли СписокМесяцевНалоговогоПериода.Количество() = 1 Тогда
			ПериодРегистрации = СписокМесяцевНалоговогоПериода[0].Значение;
		Иначе
			ЗначениеВыбора = СписокМесяцевНалоговогоПериода.ВыбратьЭлемент("Выберите месяц налогового периода");
			Если ЗначениеВыбора = Неопределено Тогда
				Возврат;
			КонецЕсли;
			ПериодРегистрации = ЗначениеВыбора.Значение;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РасчетПени.ФизЛицо,
		|	ИСТИНА КАК Авторасчет,
		|	СУММА(РасчетПени.Сумма) КАК Сумма		
		|ИЗ
		|	Документ.РасчетПениОПВиСО.ИсчислениеПени КАК РасчетПени
		|ГДЕ
		|	РасчетПени.Ссылка = &Основание
		|	И РасчетПени.МесяцНалоговогоПериода МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
		|СГРУППИРОВАТЬ ПО
		|	РасчетПени.ФизЛицо
		|";
		
		СоциальныеОтчисления.Загрузить(Запрос.Выполнить().Выгрузить());		
	КонецЕсли;
	
	ДокументОснование = Основание;
	
КонецПРоцедуры

#Если Клиент Тогда

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	КонецЕсли;
	
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	//так как нет печатных форм у документа, по умолчанию
	ТабДокумент = Неопределено;
	
	Если ТабДокумент = Неопределено Тогда
		Возврат
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект));

КонецПроцедуры // Печать()

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура();

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаЗаполнения" документа.
//
Процедура ОбработкаЗаполнения(Основание) Экспорт
	
	ЗаполнитьПоДокументуОснования(Основание);	
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события "ПередЗаписью" документа.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(СоциальныеОтчисления);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "ФизЛицо");
	
	СуммаДокумента = СоциальныеОтчисления.Итог("Сумма");
	
КонецПроцедуры // ПередЗаписью()

//Процедура-обработчик события "ПриКопировании" документа
//
Процедура ПриКопировании(ОбъектКопирования)
	ДокументОснование = Неопределено;
КонецПроцедуры

// - БК - начало
мОтображатьСтруктурныеПодразделения = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделенийВЗарплате();
// - БК - конец
