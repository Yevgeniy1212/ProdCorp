////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Функция формирует таблицу значений с коэффициентами индексации зарплаты 
// 
// Параметры:
//	Выборка - выборка из результата запроса 
//
Функция СформироватьТаблицуИзменений(Выборка)

	ТЗРаботники = Новый ТаблицаЗначений;
	
	ТЗРаботники.Колонки.Добавить("ФизЛицо");
	ТЗРаботники.Колонки.Добавить("Сотрудник");
	ТЗРаботники.Колонки.Добавить("ДатаИндексации");
	ТЗРаботники.Колонки.Добавить("Коэффициент");
	
	ТекущийСотрудник = Неопределено;
	ТекущийРазмер = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Если ТекущийСотрудник <> Выборка.Сотрудник Тогда
		
			// запоминаем нового работника
			ТекущийСотрудник = Выборка.Сотрудник;
			ТекущийРазмер 	 = Выборка.Размер;
	
		Иначе
			
			// проверяем - может быть изменился размер 
			Если Выборка.Размер <> ТекущийРазмер
					И Выборка.Размер > 0 
					И ТекущийРазмер > 0 
					И Выборка.Размер > ТекущийРазмер Тогда
				
				ДатаИндексации = Макс(Выборка.Период, Выборка.ДатаНачала);
					
				Если Не Выборка.УжеВведенКоэффициентИндексации
						И ДатаИндексации >= ПериодРегистрации Тогда
					
					НоваяСтрокаТЗ 					= ТЗРаботники.Добавить();
					НоваяСтрокаТЗ.ФизЛицо 			= Выборка.ФизЛицо;
					НоваяСтрокаТЗ.Сотрудник 		= Выборка.Сотрудник;
					НоваяСтрокаТЗ.ДатаИндексации 	= ДатаИндексации;
					НоваяСтрокаТЗ.Коэффициент 		= Выборка.Размер / ТекущийРазмер;
				
				КонецЕсли;
				
			КонецЕсли;
		
		КонецЕсли;
		
		// запоминаем новый размер
		ТекущийРазмер = Выборка.Размер;
	
	КонецЦикла;
	
	Возврат ТЗРаботники;

КонецФункции // СформироватьТаблицуИзменений

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Выполняет автоматическое заполнение документа по данным документа и переданным параметрам
// 
// Параметры: 
//  ПостроительЗапроса - построитель запроса, который используется для ограничения состава физлиц
//                       по которым выполняется заполнение документа
//
// Возвращаемое значение:
//  Логическое - удалось ли выполнить автоматическое заполнение документа
//
Функция Автозаполнение(ПостроительЗапроса = НеОпределено) Экспорт

	// АВТОЗАПОЛНЕНИЕ ТЧ "РаботникиОрганизации"
	// 
	ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
	Запрос = Новый Запрос;
	
	ОсновнойТекстЗапроса = "";
	
 	ПустоеПодразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
 	ПустойОтветственный = Справочники.Пользователи.ПустаяСсылка();
	
 	//ТаблицаДвиженийРаботниковТекст
	//Описание:
	//	Выбирает список работников, отвечающих условиям отбора, числящихся на начало месяца и их движения за месяц.
	
	Если ПостроительЗапроса = Неопределено Тогда
		
		// Установим параметры запроса
		Запрос.УстановитьПараметр("парамДоНачала" , НачалоДня(ПериодРегистрации-1));
		Запрос.УстановитьПараметр("парамНачало" , ПериодРегистрации);
		Запрос.УстановитьПараметр("парамКонец" , КонецМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("парамОрганизация" , Организация);
		Запрос.УстановитьПараметр("парамГоловнаяОрганизация" , ГоловнаяОрганизация);
		Запрос.УстановитьПараметр("Уволен" , Перечисления.ПричиныИзмененияСостояния.Увольнение);
		Запрос.УстановитьПараметр("НачальнаяДата" , '00010101');
		Запрос.УстановитьПараметр("Прекратить" , Перечисления.ВидыДействияСНачислением.Прекратить);
		Запрос.УстановитьПараметр("Начать" , Перечисления.ВидыДействияСНачислением.Начать);
		Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
		Запрос.УстановитьПараметр("ВалютаРеглУчета" , Константы.ВалютаРегламентированногоУчета.Получить());
		Запрос.УстановитьПараметр("ПустаяВалюта" , Справочники.Валюты.ПустаяСсылка());
		Запрос.УстановитьПараметр("ТипПоказателяТарифныйРазряд", Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд);

		ТаблицаДвиженийРаботниковТекст = 
		"// срез работников на последнюю дату предыдущего месяца, чтобы учесть возможное изменение с 1 числа текущего месяца
		|ВЫБРАТЬ
		|	&парамДоНачала КАК Период,
		|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
		|	РаботникиОрганизации.Должность КАК Должность,
		|	РаботникиОрганизации.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&парамДоНачала, Организация = &парамГоловнаяОрганизация) КАК РаботникиОрганизации
		|ГДЕ
		|	РаботникиОрганизации.ПричинаИзмененияСостояния <> &Уволен
		|	И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаботникиОрганизации.Период,
		|	РаботникиОрганизации.Сотрудник,
		|	РаботникиОрганизации.Должность,
		|	РаботникиОрганизации.ПричинаИзмененияСостояния
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|ГДЕ
		|	РаботникиОрганизации.Период >= &парамНачало
		|	И РаботникиОрганизации.Период <= &парамКонец
		|	И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
		|	И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация";
		
	Иначе
		
		// Установим параметры запроса
		ПостроительЗапроса.Параметры.Вставить("парамДоНачала" , НачалоДня(ПериодРегистрации-1));
		ПостроительЗапроса.Параметры.Вставить("парамНачало" , ПериодРегистрации);
		ПостроительЗапроса.Параметры.Вставить("парамКонец" , КонецМесяца(ПериодРегистрации));
		ПостроительЗапроса.Параметры.Вставить("парамОрганизация" , Организация);
		ПостроительЗапроса.Параметры.Вставить("парамГоловнаяОрганизация" , ГоловнаяОрганизация);
		ПостроительЗапроса.Параметры.Вставить("Уволен" , Перечисления.ПричиныИзмененияСостояния.Увольнение);
		ПостроительЗапроса.Параметры.Вставить("НачальнаяДата" , '00010101');
		ПостроительЗапроса.Параметры.Вставить("Прекратить" , Перечисления.ВидыДействияСНачислением.Прекратить);
		ПостроительЗапроса.Параметры.Вставить("Начать" , Перечисления.ВидыДействияСНачислением.Начать);
		ПостроительЗапроса.Параметры.Вставить("ДокументСсылка" , Ссылка);
		ПостроительЗапроса.Параметры.Вставить("ВалютаРеглУчета" , Константы.ВалютаРегламентированногоУчета.Получить());
		ПостроительЗапроса.Параметры.Вставить("ПустаяВалюта" , Справочники.Валюты.ПустаяСсылка());
		ПостроительЗапроса.Параметры.Вставить("ТипПоказателяТарифныйРазряд", Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд);
		
		ИсходныйТекстПостроителя = ПостроительЗапроса.Текст;
		ТекстЗапросаПоСпискуРаботников = СтрЗаменить(ИсходныйТекстПостроителя,"РАЗРЕШЕННЫЕ","");
		ТекстЗапросаПоСпискуРаботников = Лев(ТекстЗапросаПоСпискуРаботников, Найти(ТекстЗапросаПоСпискуРаботников,"УПОРЯДОЧИТЬ") - 1);
		
		ТаблицаДвиженийРаботниковТекст = "
		|ВЫБРАТЬ
		|	СписокРаботников.Сотрудник КАК Сотрудник,
		|	ДвижениеРаботников.Период КАК Период,
		|	ДвижениеРаботников.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
		|	ДвижениеРаботников.Должность КАК Должность
		|ИЗ
		|	(" + ТекстЗапросаПоСпискуРаботников + ") КАК СписокРаботников
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			&парамДоНачала КАК Период,
		|			РаботникиОрганизации.Сотрудник КАК Сотрудник,
		|			РаботникиОрганизации.Должность КАК Должность,
		|			РаботникиОрганизации.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния
		|		ИЗ
		|			РегистрСведений.РаботникиОрганизаций.СрезПоследних(&парамДоНачала, Организация = &парамГоловнаяОрганизация) КАК РаботникиОрганизации
		|		
		|		ГДЕ 
		|			РаботникиОрганизации.ПричинаИзмененияСостояния <> &Уволен 
		|			И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		// движения работников за месяц
		|		ВЫБРАТЬ
		|			РаботникиОрганизации.Период,
		|			РаботникиОрганизации.Сотрудник,
		|			РаботникиОрганизации.Должность,
		|			РаботникиОрганизации.ПричинаИзмененияСостояния
		|		ИЗ
		|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		
		|		ГДЕ
		|			РаботникиОрганизации.Период >= &парамНачало И
		|			РаботникиОрганизации.Период <= &парамКонец И
		|			РаботникиОрганизации.Организация = &парамГоловнаяОрганизация И
		|			РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация) КАК ДвижениеРаботников
		|	ПО СписокРаботников.Сотрудник = ДвижениеРаботников.Сотрудник";
		
	КонецЕсли;
	
	ОсновнойТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизаций.Ссылка КАК ВидРасчета,
	|	Показатели1.Показатель.ТипПоказателя КАК Показатель1ТипПоказателя
	|ПОМЕСТИТЬ ВТ_Показатели
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели1
	|		ПО (Показатели1.НомерСтроки = 1)
	|			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели1.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Показатели1.Показатель.ТипПоказателя,
	|	ОсновныеНачисленияОрганизаций.Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|	
	|// срез плановых начислений на последнуюю дату предыдущего месяца, чтобы учесть возможные изменения с 1 числа текущего месяца
	|ВЫБРАТЬ
	|	ПлановыеНачисления.Сотрудник,
	|	&парамДоНачала КАК Период,
	|	ИСТИНА КАК ТребуетВводаТарифногоРазряда,
	|	&Начать КАК Действие,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> &НачальнаяДата
	|				И ПлановыеНачисления.ПериодЗавершения < &парамДоНачала
	|			ТОГДА ПлановыеНачисления.ТарифныйРазряд1Завершения
	|		ИНАЧЕ ПлановыеНачисления.ТарифныйРазряд1
	|	КОНЕЦ КАК ТарифныйРазряд
	|ПОМЕСТИТЬ ВТ_ПлановыеНачисления
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|				&парамДоНачала, 
	|				Организация = &парамГоловнаяОрганизация 
	|				И ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО) КАК ПлановыеНачисления
	| 		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Показатели КАК ПоказателиНачислений
	|			ПО ПлановыеНачисления.ВидРасчета = ПоказателиНачислений.ВидРасчета
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> &НачальнаяДата
	|				И ПлановыеНачисления.ПериодЗавершения < &парамДоНачала
	|			ТОГДА ВЫБОР
	|					КОГДА ПлановыеНачисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|							ИЛИ ПоказателиНачислений.Показатель1ТипПоказателя = &ТипПоказателяТарифныйРазряд
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПлановыеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|						ИЛИ ПоказателиНачислений.Показатель1ТипПоказателя = &ТипПоказателяТарифныйРазряд
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ = ИСТИНА
	|	И ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> &НачальнаяДата
	|				И ПлановыеНачисления.ПериодЗавершения < &парамДоНачала
	|			ТОГДА ПлановыеНачисления.ДействиеЗавершения
	|		ИНАЧЕ ПлановыеНачисления.Действие
	|	КОНЕЦ <> &Прекратить
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеНачисления.Сотрудник,
	|	ПлановыеНачисления.Период,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|				ИЛИ ПоказателиНачислений.Показатель1ТипПоказателя = &ТипПоказателяТарифныйРазряд
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТребуетВводаТарифногоРазряда,
	|	ПлановыеНачисления.Действие,
	|	ПлановыеНачисления.ТарифныйРазряд1 КАК ТарифныйРазряд
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	| 		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Показатели КАК ПоказателиНачислений
	|			ПО ПлановыеНачисления.ВидРасчета = ПоказателиНачислений.ВидРасчета
	|ГДЕ
	|	ПлановыеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ПлановыеНачисления.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
	|	И ПлановыеНачисления.Период >= &парамНачало
	|	И ПлановыеНачисления.Период <= &парамКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеНачисления.Сотрудник,
	|	ДОБАВИТЬКДАТЕ(ПлановыеНачисления.ПериодЗавершения, ДЕНЬ, 1) КАК Период,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|				ИЛИ ПоказателиНачислений.Показатель1ТипПоказателя = &ТипПоказателяТарифныйРазряд
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ ТребуетВводаТарифногоРазряда,
	|	ПлановыеНачисления.ДействиеЗавершения,
	|	ПлановыеНачисления.ТарифныйРазряд1Завершения КАК ТарифныйРазряд
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	| 		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Показатели КАК ПоказателиНачислений
	|			ПО ПлановыеНачисления.ВидРасчета = ПоказателиНачислений.ВидРасчета
	|ГДЕ
	|	ПлановыеНачисления.Организация = &парамГоловнаяОрганизация
	|	И ПлановыеНачисления.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
	|	И ПлановыеНачисления.ПериодЗавершения МЕЖДУ &парамНачало И &парамКонец
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ПлановыеНачисления.Сотрудник,
	|	ПлановыеНачисления.Период КАК ДатаНачала,
	|	МИНИМУМ(ЕСТЬNULL(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(СледПлановыеНачисления.Период, ДЕНЬ, -1), ДЕНЬ), &парамКонец)) КАК ДатаОкончания,
	|	ПлановыеНачисления.ТарифныйРазряд
	|ПОМЕСТИТЬ ВТ_ПериодыПлановыхНачислений
	|ИЗ
	|	ВТ_ПлановыеНачисления КАК ПлановыеНачисления
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПлановыеНачисления КАК СледПлановыеНачисления
	|		ПО 
	|			ПлановыеНачисления.Сотрудник = СледПлановыеНачисления.Сотрудник
	|			И ПлановыеНачисления.Период < СледПлановыеНачисления.Период
	|
	|ГДЕ
	|	ПлановыеНачисления.ТребуетВводаТарифногоРазряда
	|	И ПлановыеНачисления.Действие <> &Прекратить
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлановыеНачисления.Сотрудник,
	|	ПлановыеНачисления.Период,
	|	ПлановыеНачисления.ТарифныйРазряд
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Работники.Сотрудник,
	|	Работники.Должность,
	|	Работники.Период КАК ДатаНачала,
	|	МИНИМУМ(ЕСТЬNULL(КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(СледРаботники.Период, ДЕНЬ, -1), ДЕНЬ), &парамКонец)) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ТаблицаДвиженийРаботников
	|ИЗ
	|	(" + ТаблицаДвиженийРаботниковТекст + ") КАК Работники
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ТаблицаДвиженийРаботниковТекст + ") КАК СледРаботники
	|		ПО Работники.Сотрудник = СледРаботники.Сотрудник
	|			И Работники.Период < СледРаботники.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Работники.Сотрудник,
	|	Работники.Должность,
	|	Работники.Период
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Работники.Сотрудник,
	|	Работники.Должность,
	|	ПлановыеНачисления.ТарифныйРазряд,
	|	ВЫБОР
	|		КОГДА Работники.ДатаНачала > ПлановыеНачисления.ДатаНачала
	|			ТОГДА Работники.ДатаНачала
	|		ИНАЧЕ Работники.ДатаНачала
	|	КОНЕЦ КАК ДатаНачала,
	|	ВЫБОР
	|		КОГДА Работники.ДатаОкончания < ПлановыеНачисления.ДатаОкончания
	|			ТОГДА Работники.ДатаОкончания
	|		ИНАЧЕ ПлановыеНачисления.ДатаОкончания
	|	КОНЕЦ КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ПериодыПлановыхНачисленийРаботников
	|ИЗ
	|	ВТ_ТаблицаДвиженийРаботников КАК Работники
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПлановыхНачислений КАК ПлановыеНачисления
	|		ПО 
	|			Работники.Сотрудник = ПлановыеНачисления.Сотрудник
	|			И Работники.ДатаНачала <= ПлановыеНачисления.ДатаОкончания
	|			И Работники.ДатаОкончания >= ПлановыеНачисления.ДатаНачала
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|// берем срез ставок на дату начала действия планового начисления (начиная с последнего числа предыдущего месяца)
	|ВЫБРАТЬ
	|	ДатыПоследнихИзменений.ДатаНачала КАК Период,
	|	ДатыПоследнихИзменений.Должность,
	|	ДатыПоследнихИзменений.ТарифныйРазряд,
	|	РазмерТарифныхСтавок.Размер,
	|	РазмерТарифныхСтавок.Валюта
	|ПОМЕСТИТЬ ВТ_РазмерТарифныхСтавок
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПлановыеНачисления.ДатаНачала,
	|		ПлановыеНачисления.Должность,
	|		ПлановыеНачисления.ТарифныйРазряд,
	|		МАКСИМУМ(РазмерТарифныхСтавок.Период) КАК Период
	|	ИЗ
	|		ВТ_ПериодыПлановыхНачисленийРаботников КАК ПлановыеНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|			ПО ПлановыеНачисления.ТарифныйРазряд = РазмерТарифныхСтавок.ТарифныйРазряд
	|				И ПлановыеНачисления.Должность = РазмерТарифныхСтавок.Должность
	|				И РазмерТарифныхСтавок.Период <= ПлановыеНачисления.ДатаНачала
	|	СГРУППИРОВАТЬ ПО
	|		ПлановыеНачисления.ДатаНачала,
	|		ПлановыеНачисления.Должность,
	|		ПлановыеНачисления.ТарифныйРазряд) КАК ДатыПоследнихИзменений
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|		ПО ДатыПоследнихИзменений.Должность = РазмерТарифныхСтавок.Должность
	|			И ДатыПоследнихИзменений.ТарифныйРазряд = РазмерТарифныхСтавок.ТарифныйРазряд
	|			И ДатыПоследнихИзменений.Период = РазмерТарифныхСтавок.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// все изменения тарифных ставок за месяц
	|ВЫБРАТЬ
	|	РазмерТарифныхСтавок.Период,
	|	РазмерТарифныхСтавок.Должность,
	|	РазмерТарифныхСтавок.ТарифныйРазряд,
	|	РазмерТарифныхСтавок.Размер,
	|	РазмерТарифныхСтавок.Валюта
	|ИЗ
	|	РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|ГДЕ
	|	РазмерТарифныхСтавок.Период МЕЖДУ &парамНачало И &парамКонец
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлановыеНачисления.Сотрудник.ФизЛицо КАК ФизЛицо,
	|	ПлановыеНачисления.Сотрудник,
	|	ПлановыеНачисления.Должность,
	|	ПлановыеНачисления.ТарифныйРазряд,
	|	ПлановыеНачисления.ДатаНачала,
	|	ПлановыеНачисления.ДатаОкончания,
	|	РазмерТарифныхСтавок.Период,
	|	РазмерТарифныхСтавок.Размер * ВЫБОР
	|									КОГДА ЕСТЬNULL(КурсыВалют.Валюта, &ПустаяВалюта) В (&ВалютаРеглУчета, &ПустаяВалюта)
	|										ТОГДА 1
	|									ИНАЧЕ ЕСТЬNULL(КурсыВалют.Курс / КурсыВалют.Кратность, 1)
	|								  КОНЕЦ КАК Размер,
	|	ВЫБОР
	|		КОГДА КоэффициентыИндексацииЗаработка.Сотрудник ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УжеВведенКоэффициентИндексации
	|ИЗ
	|	ВТ_ПериодыПлановыхНачисленийРаботников КАК ПлановыеНачисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|		ПО ПлановыеНачисления.Должность = РазмерТарифныхСтавок.Должность
	|			И ПлановыеНачисления.ТарифныйРазряд = РазмерТарифныхСтавок.ТарифныйРазряд
	|			И РазмерТарифныхСтавок.Период МЕЖДУ ПлановыеНачисления.ДатаНачала И ПлановыеНачисления.ДатаОкончания
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК КурсыВалют
	|		ПО НАЧАЛОПЕРИОДА(РазмерТарифныхСтавок.Период, МЕСЯЦ) = КурсыВалют.Период
	|			И РазмерТарифныхСтавок.Валюта = КурсыВалют.Валюта
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КоэффициентыИндексацииЗаработка КАК КоэффициентыИндексацииЗаработка
	|		ПО КоэффициентыИндексацииЗаработка.Организация = &парамГоловнаяОрганизация
	|			И ПлановыеНачисления.Сотрудник = КоэффициентыИндексацииЗаработка.Сотрудник
	|			И РазмерТарифныхСтавок.Период = КоэффициентыИндексацииЗаработка.Период
	|			И КоэффициентыИндексацииЗаработка.Регистратор <> &ДокументСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПлановыеНачисления.Сотрудник,
	|	РазмерТарифныхСтавок.Период
	|";
                              
	Если ПостроительЗапроса = Неопределено Тогда
		Запрос.Текст = ОсновнойТекстЗапроса;
		РаботникиВыборка = Запрос.Выполнить().Выбрать();
	Иначе 
		//Основной текст запроса
		ПостроительЗапроса.Текст = ОсновнойТекстЗапроса;
		ПостроительЗапроса.Выполнить();
		РаботникиВыборка = ПостроительЗапроса.Результат.Выбрать();
	КонецЕсли;
		
    ТЗРаботникиОрганизации = СформироватьТаблицуИзменений(РаботникиВыборка);
	
	РаботникиОрганизации.Загрузить(ТЗРаботникиОрганизации);
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("ПустаяОрганизация" , Справочники.Организации.ПустаяСсылка());

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВводКоэффициентовИндексацииЗаработка.Дата,
	|	ВводКоэффициентовИндексацииЗаработка.Организация,
	|	ВЫБОР
	|		КОГДА ВводКоэффициентовИндексацииЗаработка.Организация.ГоловнаяОрганизация = &ПустаяОрганизация
	|			ТОГДА ВводКоэффициентовИндексацииЗаработка.Организация
	|		ИНАЧЕ ВводКоэффициентовИндексацииЗаработка.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ВводКоэффициентовИндексацииЗаработка.Ссылка,
	|	ВводКоэффициентовИндексацииЗаработка.ПериодРегистрации
	|ИЗ
	|	Документ.ВводКоэффициентовИндексацииЗаработка КАК ВводКоэффициентовИндексацииЗаработка
	|ГДЕ
	|	ВводКоэффициентовИндексацииЗаработка.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "РаботникиОрганизации" документа
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента)

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Прием", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	
	СписокСтруктурныхПодразделений = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("СписокСтруктурныхПодразделений", СписокСтруктурныхПодразделений);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТЧРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
	|	ТЧРаботникиОрганизации.Сотрудник КАК Сотрудник,
	|	ТЧРаботникиОрганизации.ДатаИндексации КАК ДатаИндексации,
	|	ТЧРаботникиОрганизации.Коэффициент КАК Коэффициент,
	|	ВЫБОР
	|		КОГДА ТЧРаботникиОрганизации.Сотрудник.Организация = &ГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.НомерСтроки) ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьКонфликтнаяСтрока,
	|	МИНИМУМ(ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.НомерСтроки) КАК КонфликтнаяСтрокаНомер,
	|	ВЫБОР
	|		КОГДА КоэффициентыИндексацииЗаработка.Сотрудник ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьКонфликтноеДвижение
	|ИЗ
	|	Документ.ВводКоэффициентовИндексацииЗаработка.РаботникиОрганизации КАК ТЧРаботникиОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводКоэффициентовИндексацииЗаработка.РаботникиОрганизации КАК ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации
	|		ПО ТЧРаботникиОрганизации.Ссылка = ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.Ссылка
	|			И ТЧРаботникиОрганизации.Сотрудник = ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.Сотрудник
	|			И ТЧРаботникиОрганизации.ДатаИндексации = ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.ДатаИндексации
	|			И ТЧРаботникиОрганизации.НомерСтроки < ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			КоэффициентыИндексацииЗаработка.Период КАК Период,
	|			КоэффициентыИндексацииЗаработка.Сотрудник КАК Сотрудник,
	|			КоэффициентыИндексацииЗаработка.Организация КАК Организация,
	|			КоэффициентыИндексацииЗаработка.Коэффициент КАК Коэффициент
	|		ИЗ
	|			РегистрСведений.КоэффициентыИндексацииЗаработка КАК КоэффициентыИндексацииЗаработка) КАК КоэффициентыИндексацииЗаработка
	|		ПО ТЧРаботникиОрганизации.Сотрудник = КоэффициентыИндексацииЗаработка.Сотрудник
	|			И (КоэффициентыИндексацииЗаработка.Организация = &ГоловнаяОрганизация)
	|			И ТЧРаботникиОрганизации.ДатаИндексации = КоэффициентыИндексацииЗаработка.Период
	|ГДЕ
	|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТЧРаботникиОрганизации.НомерСтроки,
	|	ТЧРаботникиОрганизации.Сотрудник,
	|	ТЧРаботникиОрганизации.ДатаИндексации,
	|	ТЧРаботникиОрганизации.Коэффициент,
	|	ВЫБОР
	|		КОГДА КоэффициентыИндексацииЗаработка.Сотрудник ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ";
	
	Запрос.Текст = ТекстЗапроса;
		
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоРаботникиОрганизации()

// Формирует запрос для проведения документа по регситру сведений "Коэффциенты индексации заработка"
//
Функция СформироватьЗапросПоКоэффициентамИндексации()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", Организация);
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.Сотрудник КАК Сотрудник,
		|	ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.ДатаИндексации КАК Период,
		|	ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.Коэффициент,
		|	КоэффициентыИндексацииЗаработка.ДатаИндексации КАК ДатаИндексации,
		|	КоэффициентыИндексацииЗаработка.КоэффициентИндексации
		|ИЗ
		|	Документ.ВводКоэффициентовИндексацииЗаработка.РаботникиОрганизации КАК ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.ДатаИндексации КАК ДатаИндексации,
		|			ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.Сотрудник КАК Сотрудник,
		|			ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.Коэффициент КАК КоэффициентИндексации
		|		ИЗ
		|			Документ.ВводКоэффициентовИндексацииЗаработка.РаботникиОрганизации КАК ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации
		|		ГДЕ
		|			ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.Ссылка = &ДокументСсылка
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КоэффициентыИндексацииЗаработка.Период,
		|			КоэффициентыИндексацииЗаработка.Сотрудник,
		|			КоэффициентыИндексацииЗаработка.Коэффициент
		|		ИЗ
		|			РегистрСведений.КоэффициентыИндексацииЗаработка КАК КоэффициентыИндексацииЗаработка
		|		ГДЕ
		|			КоэффициентыИндексацииЗаработка.Регистратор <> &ДокументСсылка
		|			И КоэффициентыИндексацииЗаработка.Организация = &ГоловнаяОрганизация) КАК КоэффициентыИндексацииЗаработка
		|		ПО ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.Сотрудник = КоэффициентыИндексацииЗаработка.Сотрудник
		|			И (ВЫБОР
		|					КОГДА ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.Коэффициент > 1
		|						ТОГДА ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.ДатаИндексации >= КоэффициентыИндексацииЗаработка.ДатаИндексации
		|					ИНАЧЕ ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.ДатаИндексации = КоэффициентыИндексацииЗаработка.ДатаИндексации
		|				КОНЕЦ)
		|			И (ГОД(ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.ДатаИндексации) + МЕСЯЦ(ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.ДатаИндексации) - ГОД(КоэффициентыИндексацииЗаработка.ДатаИндексации) - МЕСЯЦ(КоэффициентыИндексацииЗаработка.ДатаИндексации) + 1 <= 12)
		|ГДЕ
		|	ВводКоэффициентовИндексацииЗаработкаРаботникиОрганизации.Ссылка = &ДокументСсылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	Период УБЫВ,
		|	ДатаИндексации УБЫВ";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не указана организация!", Отказ, Заголовок);
	КонецЕсли;
	
	    // соответствие периодов документа и перерассчитываемого документа
    Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодРегистрации) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не указан месяц повышения заработка!", Отказ, Заголовок);
    КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "РаботникиОрганизации" документа.
// Если какой-то из реквизтов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса по товарам документа, 
//  Отказ 						- флаг отказа в проведении.
//	Заголовок					- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоСтрокамДокумента, Отказ, Заголовок)
	
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Сотрудники организаций"": ";

	// Организация сотрудника должна совпадать с организацией документа
	Если ВыборкаПоСтрокамДокумента.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "организация документа не соответствует организации, указанной в карточке сотрудника!", Отказ, Заголовок);
	КонецЕсли;

	// Сотрудник
	НетСотрудника = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник);
	Если НетСотрудника Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;
	
	// ДатаИндексации
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаИндексации) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указана дата индексации!", Отказ, Заголовок);
	КонецЕсли;

	// Коэффициент
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Коэффициент) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указан коэффициент!", Отказ, Заголовок);
	КонецЕсли;
	
	// Проверка: противоречие другой строке документа
	Если ВыборкаПоСтрокамДокумента.ЕстьКонфликтнаяСтрока Тогда
		СтрокаСообщениеОбОшибке = "одним документом допускается регистрировать только одно перемещение работника за один день - см. строку " + ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер + "!"; 
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщениеОбОшибке, Отказ, Заголовок);
	КонецЕсли;	
	
	// Проверка: противоречие другой строке документа
	Если ВыборкаПоСтрокамДокумента.ЕстьКонфликтноеДвижение Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "одним документом допускается регистрировать только одно перемещение работника за один день - см. строку ", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

// По результату выборки запроса формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                - выборка из результата запроса по шапке документа,
//  СтруктураПроведенияПоРегистрамСведений - структура, содержащая имена регистров 
//                                           сведений по которым надо проводить документ,
//  СтруктураПараметров                    - структура параметров проведения,
//
// Возвращаемое значение:
//  Нет.
//
Процедура СформироватьДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаПоКоэффициентамИндексации)

	ТекущийСотрудник = "";
	ТекущийПериод = "";
	КоэффициентИндексации = 1;
	Пока ВыборкаПоКоэффициентамИндексации.Следующий() Цикл 
		Если ТекущийСотрудник <> ВыборкаПоКоэффициентамИндексации.Сотрудник ИЛИ
			ТекущийПериод <> ВыборкаПоКоэффициентамИндексации.Период Тогда
			
			// Установим новые текущие значения
			ТекущийСотрудник = ВыборкаПоКоэффициентамИндексации.Сотрудник;
			ТекущийПериод = ВыборкаПоКоэффициентамИндексации.Период;
			
			КоэффициентИндексации = ВыборкаПоКоэффициентамИндексации.КоэффициентИндексации;
			
			Движение = Движения.КоэффициентыИндексацииЗаработка.Добавить();
			
			// Свойства
			Движение.Период                     = ВыборкаПоКоэффициентамИндексации.Период;
			
			// Измерения
			Движение.Сотрудник                  = ВыборкаПоКоэффициентамИндексации.Сотрудник;
			Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
			Движение.ДатаИндексации				= ВыборкаПоКоэффициентамИндексации.ДатаИндексации;
			
			// Ресурсы
			Движение.Коэффициент				= ВыборкаПоКоэффициентамИндексации.Коэффициент;
			Движение.КоэффициентИндексации		= КоэффициентИндексации;
			
		Иначе
			
			КоэффициентИндексации = КоэффициентИндексации * ВыборкаПоКоэффициентамИндексации.КоэффициентИндексации;
			
			Движение = Движения.КоэффициентыИндексацииЗаработка.Добавить();
			
			// Свойства
			Движение.Период                     = ВыборкаПоКоэффициентамИндексации.Период;
			
			// Измерения
			Движение.Сотрудник                  = ВыборкаПоКоэффициентамИндексации.Сотрудник;
			Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
			Движение.ДатаИндексации				= ВыборкаПоКоэффициентамИндексации.ДатаИндексации;
			
			// Ресурсы
			Движение.Коэффициент				= ВыборкаПоКоэффициентамИндексации.Коэффициент;
			Движение.КоэффициентИндексации		= КоэффициентИндексации;

		КонецЕсли;
		
	КонецЦикла;
 	
КонецПроцедуры // СформироватьДвиженияПоРегистрамСведений

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;

	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(РаботникиОрганизации);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
		
	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект) Тогда
		Возврат
	КонецЕсли;
    	
	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
	
	ВыборкаПоСтрокамДокумента = СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента).Выбрать();
	Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл
		// проверим очередную строку табличной части
		ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоСтрокамДокумента, Отказ, Заголовок);
	КонецЦикла;
	
	Если НЕ Отказ Тогда
		
		ВыборкаПоКоэффциентамИндексации = СформироватьЗапросПоКоэффициентамИндексации().Выбрать();
		
		СформироватьДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаПоКоэффциентамИндексации);
			
	КонецЕсли;
	
КонецПроцедуры
