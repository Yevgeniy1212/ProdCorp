////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем мПоддержкаРаботыСоСтруктурнымиПодразделениями;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Формирует запрос по документу и связанным регистрам сведений
//
// Параметры: 
//  Режим - строка, может принимать значения:
//			"ПоРеквизитамДокумента"
//			"ПоТабличнойЧастиДокумента"
//
// Возвращаемое значение:
//  Результат запроса с данными об организации или о работниках из табличной части
//
Функция СформироватьЗапросДляПечати(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Руководитель",	 Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	Запрос.УстановитьПараметр("ДатаДокумента",	 Дата);

	Если Режим = "ПоРеквизитамДокумента" Тогда

		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПремииРаботниковОрганизаций.Дата КАК ДатаДок,
		|	ПремииРаботниковОрганизаций.Номер КАК НомерДок,
		|	ВЫРАЗИТЬ(ПремииРаботниковОрганизаций.Организация.НаименованиеПолное КАК СТРОКА(1000)) КАК НазваниеОрганизации,
		|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность.Представление КАК ДолжностьРуководителя,
		|	ВЫБОР 
		|		КОГДА (ФИОФизЛицСрезПоследних.ФизЛицо) ЕСТЬ NULL
		|			ТОГДА ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование 
		|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР 
		|													КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """" 
		|														ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + ""."" 
		|													ИНАЧЕ """" 
		|												КОНЕЦ + ВЫБОР 
		|															КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """" 
		|																	ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + ""."" 
		|															ИНАЧЕ """" 
		|														КОНЕЦ 
		|	КОНЕЦ КАК ФИОРуководителя,
		|	ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо,
		|	ПремииРаботниковОрганизаций.ВидРасчета.Наименование КАК РасчетСтрокой,
		|	""Сумма"" КАК ПредставлениеВеличины
		|ИЗ
		|	Документ.ПремииРаботниковОрганизаций КАК ПремииРаботниковОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &Руководитель) КАК ОтветственныеЛицаОрганизацийСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследних
		|			ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|		ПО ПремииРаботниковОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница
		|
		|ГДЕ
		|	ПремииРаботниковОрганизаций.Ссылка = &ДокументСсылка";

	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда

		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
		Запрос.УстановитьПараметр("ВнутреннееСовместительство",	 Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР 
		|		КОГДА (ФИОФизЛиц.Фамилия) ЕСТЬ NULL  
		|			ТОГДА ПремииРаботниковОрганизацийНачисления.Сотрудник.ФизЛицо.Наименование 
		|		ИНАЧЕ ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество 
		|	КОНЕЦ КАК Работник,
		|	РаботникиОрганизацииСрезПоследних.Сотрудник.Код КАК ТабельныйНомер,
		|	РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.Представление КАК ПодразделениеРаботника,
		|	РаботникиОрганизацииСрезПоследних.Должность.Представление КАК Должность,
		|	РаботникиОрганизацииСрезПоследних.ТарифныйРазряд.Представление КАК ТарифныйРазряд,
		|	ПремииРаботниковОрганизацийНачисления.Результат КАК Величина
		|ИЗ
		|	Документ.ПремииРаботниковОрганизаций.Начисления КАК ПремииРаботниковОрганизацийНачисления
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
		|				&ДатаДокумента, 
		|				Физлицо В (ВЫБРАТЬ РАЗЛИЧНЫЕ 	
		|								ПремииРаботниковОрганизацийНачисления.Сотрудник.Физлицо КАК ФизЛицо 
		|							ИЗ 
		|								Документ.ПремииРаботниковОрганизаций.Начисления КАК ПремииРаботниковОрганизацийНачисления 
		|							ГДЕ 
		|								ПремииРаботниковОрганизацийНачисления.Ссылка = &ДокументСсылка
		|								И НЕ ПремииРаботниковОрганизацийНачисления.Сторно)) КАК ФИОФизЛиц
		|		ПО ПремииРаботниковОрганизацийНачисления.Сотрудник.Физлицо = ФИОФизЛиц.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|				&ДатаДокумента, 
		|				Организация = &ГоловнаяОрганизация 
		|				И Сотрудник В (ВЫБРАТЬ РАЗЛИЧНЫЕ 	
		|									ПремииРаботниковОрганизацийНачисления.Сотрудник 
		|								ИЗ 
		|									Документ.ПремииРаботниковОрганизаций.Начисления КАК ПремииРаботниковОрганизацийНачисления 
		|								ГДЕ 
		|									ПремииРаботниковОрганизацийНачисления.Ссылка = &ДокументСсылка
		|									И НЕ ПремииРаботниковОрганизацийНачисления.Сторно)) КАК РаботникиОрганизацииСрезПоследних
		|		ПО ПремииРаботниковОрганизацийНачисления.Сотрудник = РаботникиОрганизацииСрезПоследних.Сотрудник 
		|
		|ГДЕ
		|	ПремииРаботниковОрганизацийНачисления.Ссылка = &ДокументСсылка
		|	И НЕ ПремииРаботниковОрганизацийНачисления.Сторно
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПремииРаботниковОрганизацийНачисления.НомерСтроки";

	Иначе
		Возврат Неопределено
	КонецЕсли;

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросДляПечати()

#Если Клиент Тогда

// Функция формирует табличный документ с печатной формой "ПриказНаРаботников",
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриказаНаРаботников()

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПремииРаботниковОрганизации_ПриказНаРаботников";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;

	// получаем данные для печати
	ВыборкаДляШапкиИПодвала = СформироватьЗапросДляПечати("ПоРеквизитамДокумента").Выбрать();
	ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента").Выбрать();

	// подсчитываем количество страниц документа - для корректного разбиения на страницы
	ВсегоСтрокДокумента = ВыборкаРаботники.Количество();

	// запоминаем области макета
	Макет = ПолучитьМакет("ПриказНаРаботников");
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
	ПовторятьПриПечатиСтроки = Макет.ПолучитьОбласть("ПовторятьПриПечати"); // повторяющаяся шапка страницы
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");// Подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка работника

	
	// массив с двумя строками - для разбиения на страницы
    ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьМакета);
	//ВыводимыеОбласти.Добавить(ОбластьИтогов);
	
    // выводим данные о руководителях организации
	Если ВыборкаДляШапкиИПодвала.Следующий() Тогда 
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапкиИПодвала); // Шапка документа.
		ОбластьМакетаШапка.Параметры.НазваниеОрганизации = СокрЛП(ВыборкаДляШапкиИПодвала.НазваниеОрганизации);
		ПовторятьПриПечатиСтроки.Параметры.Заполнить(ВыборкаДляШапкиИПодвала); // "Колонтитул" страницы
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапкиИПодвала); // Для подвала
		ОбластьМакетаШапка.Параметры.НомерДок = ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект, глСписокПрефиксовУзлов);
	КонецЕсли;

	// Начинаем формировать выходной документ
	ТабДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.

	ВыведеноСтрок = 0;
	ИтогДокумента = 0;
	// выводим строки по работникам
	Пока ВыборкаРаботники.Следующий() Цикл

		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВыборкаРаботники);
		Если ЗначениеЗаполнено(ВыборкаРаботники.ТарифныйРазряд) Тогда
			ОбластьМакета.Параметры.Должность = "" + ВыборкаРаботники.Должность + ", " + ВыборкаРаботники.ТарифныйРазряд;
		КонецЕсли;
		ИтогДокумента = ИтогДокумента + ВыборкаРаботники.Величина;

		// разбиение на страницы
		ВыведеноСтрок = ВыведеноСтрок + 1;
		
		// Проверим, уместится ли строка на странице или надо открывать новую страницу
		ВывестиПодвалЛиста = Не УниверсальныеМеханизмы.ПроверитьВыводДляТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		Если Не ВывестиПодвалЛиста и ВыведеноСтрок = ВсегоСтрокДокумента Тогда
			ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
			ВывестиПодвалЛиста = Не УниверсальныеМеханизмы.ПроверитьВыводДляТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		КонецЕсли;
		Если ВывестиПодвалЛиста Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ПовторятьПриПечатиСтроки);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла;

	// если не было ни одного работника - выводим пустой бланк
	Если ТабДокумент.ВысотаТаблицы = ОбластьМакетаШапка.ВысотаТаблицы Тогда
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;

	// выводим предварительно подготовленный Подвал документа.
	ОбластьМакетаПодвал.Параметры.Итого = ИтогДокумента;

	ТабДокумент.Вывести(ОбластьМакетаПодвал);

	Возврат ТабДокумент;

КонецФункции // ПечатьПриказаНаРаботников()	

// Функция формирует табличный документ с печатной формой "ПриказНаРаботника",
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриказаНаРаботника()
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПремииРаботниковОрганизации_ПриказНаРаботника";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	// получаем данные для печати
	ВыборкаДляШапки = СформироватьЗапросДляПечати("ПоРеквизитамДокумента").Выбрать();
	ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента").Выбрать();

	// запоминаем области макета
	Макет = ПолучитьМакет("ПриказНаРаботника");
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал"); // Подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Работник"); // строка работника

	// выводим данные о руководителях организации
	Если ВыборкаДляШапки.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапки); // Шапка документа.
		ОбластьМакетаШапка.Параметры.НазваниеОрганизации = СокрЛП(ВыборкаДляШапки.НазваниеОрганизации);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапки); // Для подвала.
		ОбластьМакета.Параметры.Заполнить(ВыборкаДляШапки); // название вида расчета
		ОбластьМакетаШапка.Параметры.НомерДок = ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект, глСписокПрефиксовУзлов);
	КонецЕсли;

	Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	СтрокаЧисла = ОбщегоНазначения.СформироватьСуммуПрописью(1, Валюта);
	Если СтрДлина(СтрокаЧисла) = 4 Тогда
		НазваниеЦелыхЕдиниц = " тенге ";	
		НазваниеДробныхЕдиниц = " тиын)";	
	Иначе
		НазваниеЦелыхЕдиниц = " " + Сред(СтрокаЧисла,6,5) + " ";	
		НазваниеДробныхЕдиниц = " " + Сред(СтрокаЧисла,Найти(СтрокаЧисла,"00") + 3,4) + ")";
	КонецЕсли;

	// Начинаем формировать выходной документ
	Пока ВыборкаРаботники.Следующий() Цикл

		// Каждый приказ на отдельной странице.
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		// Шапка документа.
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВыборкаРаботники);
		Если ЗначениеЗаполнено(ВыборкаРаботники.ТарифныйРазряд) Тогда
			ОбластьМакета.Параметры.Должность = "" + ВыборкаРаботники.Должность + ", " + ВыборкаРаботники.ТарифныйРазряд;
		КонецЕсли;
		Величина = ВыборкаРаботники.Величина;
		ОбластьМакета.Параметры.ПредставлениеВеличины = ОбщегоНазначения.СформироватьСуммуПрописью(Величина,Валюта);
		Если Величина = 0 Тогда
			ОбластьМакета.Параметры.ПредставлениеВеличиныкр = "(________ тенге ____ тиын)";
		Иначе
			ОбластьМакета.Параметры.ПредставлениеВеличиныкр = "( " + СтрЗаменить(Формат(Величина,"ЧЦ=15; ЧДЦ=2; ЧРД=,; ЧН=' '"),",",НазваниеЦелыхЕдиниц) + НазваниеДробныхЕдиниц;
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Подвал документа.
		ТабДокумент.Вывести(ОбластьМакетаПодвал);

	КонецЦикла;

	// если не было ни одного работника - выводим пустой бланк
	Если ТабДокумент.ВысотаТаблицы = 0 Тогда
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
	КонецЕсли;

	Возврат ТабДокумент;

КонецФункции // ПечатьПриказаНаРаботника()	

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеПользователями.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	// Получить экземпляр документа на печать
	Если      ИмяМакета = "ПриказНаРаботников" Тогда
		ТабДокумент = ПечатьПриказаНаРаботников()
	ИначеЕсли ИмяМакета = "ПриказНаРаботника" Тогда
		ТабДокумент = ПечатьПриказаНаРаботника()
	КонецЕсли;

	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект,Метаданные().Синоним));

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ПриказНаРаботников, ПриказНаРаботника", "Приказ на список сотрудников", "Приказ на каждого сотрудника");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

// Процедура производит расчет суммы премии
//
Процедура Рассчитать(Сотрудник = Неопределено, КомментироватьРасчет = Ложь) Экспорт
	
	//структуры, содержащие имена регистров, по которым надо проводить документ
	Перем СтруктураПроведенияПоРегистрамРасчета;
	
	НачатьТранзакцию();
	Отказ = Ложь;

	//массивы для хранения индексов строк табличных частей,
	//используются для расчета по одному сотруднику
	Если Сотрудник = Неопределено Тогда
		МассивИндексыСтрокНачисления = Неопределено;
	Иначе
		МассивИндексыСтрокНачисления = Новый Массив();
	КонецЕсли;
	
	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	ВыборкаПоШапкеДокумента.Следующий();
	ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ,Заголовок);
	
	УчетнаяПолитикаПоПерсоналуОрганизации = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[ВыборкаПоШапкеДокумента.Организация];
	
	Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ВыборкаПоШапкеДокумента.Организация,
																	ВыборкаПоШапкеДокумента.Организация,
																	глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц"),
																	Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	
	ВыборкаПоДопНачислениям = СформироватьЗапросПоНачисления(ВыборкаПоШапкеДокумента, , Сотрудник).Выбрать();
	Пока ВыборкаПоДопНачислениям.Следующий() Цикл
		ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоДопНачислениям, Отказ,);
		Если НЕ Отказ Тогда
			
			// Заполним записи в наборах записей регистров
			ДобавитьСтрокуВДвиженияПоРегистрамРасчета(ВыборкаПоШапкеДокумента, ВыборкаПоДопНачислениям);
			
			Если НЕ (Сотрудник = Неопределено)  Тогда
				МассивИндексыСтрокНачисления.Добавить(ВыборкаПоДопНачислениям.НомерСтроки-1);
			КонецЕсли;
			
		КонецЕсли;	
	КонецЦикла;

	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат;	
	КонецЕсли; 
		
	ПроведениеРасчетов.РассчитатьЗаписиРегистраРасчета("ДополнительныеНачисленияРаботниковОрганизаций", Движения.ДополнительныеНачисленияРаботниковОрганизаций,,ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"),ВыборкаПоШапкеДокумента.Организация,Начисления, , Налогоплательщик, МассивИндексыСтрокНачисления, КомментироватьРасчет);
		
	// Удаляем движения
	Движения.ДополнительныеНачисленияРаботниковОрганизаций.Очистить();
	Движения.ДополнительныеНачисленияРаботниковОрганизаций.Записать();
	
	// Завершаем транзакцию
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры // Рассчитать()

// Выполняет перерасчет по заданному списку физлиц
// Если передан пустой список физлиц - перерасчет не проводится
// Если в качестве списка физлиц передан не массив, а Неопределено - перерасчет по всем физлицам 
// регистратора по которым требуется перерасчет
//
// Параметры
//	Физлица	- список значений - ссылки на физлиц
// Возвращаемое значение
//	Нет
//
Процедура Перерассчитать(Сотрудники = Неопределено) Экспорт
	
	// проверим можно ли что-то делать с документом
	ОписаниеПричиныОтказа = "";
	Если ПроведениеРасчетов.ДокументНельзяИзменятьЗаднимЧислом(Ссылка, ОписаниеПричиныОтказа) Тогда
		ВызватьИсключение(ОписаниеПричиныОтказа);
	КонецЕсли;

	Если НЕ ПроведениеРасчетов.НеобходимостьПерерасчета(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	// получим список перерассчитываемых сотрудников
	Если Сотрудники = Неопределено Тогда
		// таблица СотрудникиДляПерерасчета
		// Список физлиц по которым необходимо выполнить перерасчет
		// Поля:
		//		Сотрудник
		// Описание:
		// Получает список неповторяющихся физлиц по которым есть записи
		// перерасчета в одной из таблиц перерасчета - по основным или дополнительным начислениям
		//
		СотрудникиДляПерерасчетаТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Перерасчет.Сотрудник
		|	ИЗ
		|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.ПерерасчетДополнительныхНачислений КАК Перерасчет
		|	
		|	ГДЕ
		|		Перерасчет.ОбъектПерерасчета = &парамРегистратор";
		
		Запрос = Новый Запрос(СотрудникиДляПерерасчетаТекст);
		Запрос.УстановитьПараметр("парамРегистратор", Ссылка);
		СотрудникиСписок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
		
	Иначе
		СотрудникиСписок = Сотрудники;
		
	КонецЕсли;

	// если не перерассчитываем никого - возврат
	Если СотрудникиСписок.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	ИсчислениеНалоговСтруктурныхЕдиниц = глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц");
	Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Организация,
																	Организация,
																	ИсчислениеНалоговСтруктурныхЕдиниц,
																	Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	
	// Прочитаем все данные в одной транзакции
	НачатьТранзакцию();
	Прочитать();
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	
	Движения.ДополнительныеНачисленияРаботниковОрганизаций.Прочитать();

	Движения.ВзаиморасчетыСРаботникамиОрганизаций.Прочитать();
	Движения.ИПНСведенияОДоходах.Прочитать();
	Движения.ОПВСведенияОДоходах.Прочитать();
	Движения.СНСведенияОДоходах.Прочитать();
	Движения.СОСведенияОДоходах.Прочитать();
	Движения.ВОСМССведенияОДоходах.Прочитать();
	Движения.ООСМССведенияОДоходах.Прочитать();
	
	// позиционируем выборку
	ВыборкаПоШапкеДокумента.Следующий();
	
	////////////////////////////////////////////////////////////////////////
	// Дополнительные начисления 
	
	// перерассчитываем записи начислений
	// при этом передаем не только набор записей регистра расчета, но и набор записей регистра 
	// накопления со сведениями об отработанном времени
	ПроведениеРасчетов.ПереРассчитатьЗаписиРегистраРасчета("ДополнительныеНачисленияРаботниковОрганизаций", Движения.ДополнительныеНачисленияРаботниковОрганизаций, СотрудникиСписок, , ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ВыборкаПоШапкеДокумента.Организация, Начисления, , Налогоплательщик);
	// запишем набор
	Движения.ДополнительныеНачисленияРаботниковОрганизаций.Записать(Истина, Истина);
	
	// записываем документ перед вызовом формирование взаиморасчетов с работниками
	Записать();
	
	////////////////////////////////////////////////////////////////////////
	// регистры накопления
	
	// сначала удалим сведения о взаиморасчетах с перерассчитанными работниками
	МассивНаборыЗаписей = Новый Массив();
	МассивНаборыЗаписей.Добавить(Движения.ВзаиморасчетыСРаботникамиОрганизаций);
	МассивНаборыЗаписей.Добавить(Движения.ИПНСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ОПВСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ОППВСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.СНСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.СОСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ВОСМССведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ООСМССведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ОПВРСведенияОДоходах);
	
	СтруктураПоиска = Новый Структура("ФизЛицо");
	
	Для Каждого НаборЗаписей Из МассивНаборыЗаписей Цикл
	
		НаборЗаписей.мТаблицаДвижений = НаборЗаписей.Выгрузить();
		НаборЗаписей.мТаблицаДвижений.Индексы.Добавить("ФизЛицо");
		
		Для Каждого ЭлементСписка Из СотрудникиСписок Цикл
		    СтруктураПоиска.ФизЛицо = ЭлементСписка.ФизЛицо;
			
		    НайденныеСтроки = НаборЗаписей.мТаблицаДвижений.НайтиСтроки(СтруктураПоиска);
		    
		    Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		    	НаборЗаписей.мТаблицаДвижений.Удалить(НайденнаяСтрока);
		    КонецЦикла;
		    
		КонецЦикла;
	
	КонецЦикла;
	
	// теперь сформируем новые движения по регистрам накопления для перерассчитанных работников
	ВыборкаПоСтрокамДокумента = СформироватьЗапросПоНачисления(ВыборкаПоШапкеДокумента, Истина, СотрудникиСписок).Выбрать();
	Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл
		ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, ИсчислениеНалоговСтруктурныхЕдиниц);
	КонецЦикла;

	// запишем движения регистров накопления в базу
	Для Каждого НаборЗаписей Из МассивНаборыЗаписей Цикл
	    ОбщегоНазначения.СвернутьТаблицуДвиженийРегистраНакопления(НаборЗаписей);
	    НаборЗаписей.мТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
	    НаборЗаписей.Загрузить(НаборЗаписей.мТаблицаДвижений);
	    НаборЗаписей.Записать();
	КонецЦикла;
	
	////////////////////////////////////////////////////////////////////////
	// Удалим записи перерасчета по которым выполнен перерасчет
		
	НаборЗаписей = РегистрыРасчета.ДополнительныеНачисленияРаботниковОрганизаций.Перерасчеты.ПерерасчетДополнительныхНачислений.СоздатьНаборЗаписей();
		
	НаборЗаписей.Отбор.ОбъектПерерасчета.Значение = Ссылка;
	Если Сотрудники <> Неопределено Тогда
		НаборЗаписей.Прочитать();
		СтрокиКУдалению = Новый Массив;
		Для Каждого СтрокаПерерасчета из НаборЗаписей Цикл
			Если Сотрудники.НайтиПоЗначению(СтрокаПерерасчета.Сотрудник) <> Неопределено Тогда
				СтрокиКУдалению.Добавить(СтрокаПерерасчета);
			КонецЕсли;
		КонецЦикла;
		Для Каждого Строка Из СтрокиКУдалению Цикл
			НаборЗаписей.Удалить(Строка);
		КонецЦикла;
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры // Перерассчитать()

// Заполняет документ по перерассчитываемому документу
//
Процедура ЗаполнитьПоПерерассчитываемомуДокументу(ИсходныйДокумент, Знач Сотрудники = Неопределено) Экспорт
	
	ПерерассчитываемыйДокумент = ИсходныйДокумент.Ссылка;
 	ЗаполнитьЗначенияСвойств(ЭтотОбъект,ИсходныйДокумент,,
		"Проведен, Номер, Дата, ПометкаУдаления, ПерерассчитываемыйДокумент, ПериодРегистрации, Комментарий, Ответственный, Автор"); // кроме указанных
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ПерерассчитываемыйДокумент", ПерерассчитываемыйДокумент);
	
	Если Сотрудники = "ПоДаннымПерерасчета" Тогда
		
		Исправления = ПроведениеРасчетов.ПолучитьДокументИсправление(ПерерассчитываемыйДокумент, "КритерийОтбора"); 
		Запрос.УстановитьПараметр("Исправления", Исправления);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СотрудникиОрганизаций.Сотрудник
		|ИЗ
		|	Документ.ПремииРаботниковОрганизаций.Начисления КАК СотрудникиОрганизаций
		|ГДЕ
		|	СотрудникиОрганизаций.Ссылка = &ПерерассчитываемыйДокумент
		|	И (НЕ СотрудникиОрганизаций.Сотрудник В
		|				(ВЫБРАТЬ
		|					Начисления.Сотрудник
		|				ИЗ
		|					Документ.ПремииРаботниковОрганизаций.Начисления КАК Начисления
		|				ГДЕ
		|					Начисления.Ссылка В (&Исправления)
		|					И Начисления.Сторно))
		|	И СотрудникиОрганизаций.Физлицо В
		|			(ВЫБРАТЬ
		|				Перерасчет.ФизЛицо
		|			ИЗ
		|				РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.ПерерасчетДополнительныхНачислений КАК Перерасчет
		|			ГДЕ
		|				Перерасчет.ОбъектПерерасчета = &ПерерассчитываемыйДокумент)";
		
		Сотрудники = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СотрудникиПерерасчета", Сотрудники);
	Запрос.УстановитьПараметр("ПоВсемСотрудникам",     Сотрудники = Неопределено);
	
	// выполним запрос к Начисления
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизЛицо КАК ФизЛицо,
	|	Начисления.Показатель1,
	|	Начисления.Показатель2,
	|	Начисления.Показатель3,
	|	Начисления.Показатель4,
	|	Начисления.Показатель5,
	|	Начисления.Показатель6,
	|	- Начисления.Результат КАК Результат,
	|	ИСТИНА КАК Сторно,
	|	Начисления.СпособОтраженияВБухучете,
	|	ЛОЖЬ КАК Авторасчет,
	|	Начисления.НомерСтроки,
	|	Начисления.ДополнительныеДанные КАК ДополнительныеДанные
	|ИЗ
	|	Документ.ПремииРаботниковОрганизаций.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Ссылка = &ПерерассчитываемыйДокумент
	|	И (НЕ Начисления.Сторно)
	|	И (Начисления.Сотрудник В(&СотрудникиПерерасчета) ИЛИ &ПоВсемСотрудникам)
	|	И Начисления.Ссылка.Проведен
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.Сотрудник,
	|	Начисления.Сотрудник.Физлицо,
	|	Начисления.Показатель1,
	|	Начисления.Показатель2,
	|	Начисления.Показатель3,
	|	Начисления.Показатель4,
	|	Начисления.Показатель5,
	|	Начисления.Показатель6,
	|	0,
	|	Начисления.СпособОтраженияВБухучете,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	Начисления.НомерСтроки,
	|	Начисления.ДополнительныеДанные
	|ИЗ
	|	Документ.ПремииРаботниковОрганизаций.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Ссылка = &ПерерассчитываемыйДокумент
	|	И (НЕ Начисления.Сторно)
	|	И (&ПоВсемСотрудникам
	|	ИЛИ Начисления.Сотрудник В (&СотрудникиПерерасчета))
	|	И Начисления.Ссылка.Проведен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Начисления.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // ЗаполнитьПоПерерассчитываемомуДокументу()

// Выполняет автоматическое заполнение документа по данным документа и переданным параметрам
// 
// Параметры: 
//  ПостроительЗапроса - построитель запроса, который используется для ограничения состава физлиц
//                       по которым выполняется заполнение документа
//
//
Процедура Автозаполнение(ЗначениеВыбора) Экспорт

	Если НЕ ЗначениеЗаполнено(ВидРасчета) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("Структура") Тогда
		
		ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
		
		ТЗ = ЗначениеВыбора.Данные;
		Если ТЗ.Колонки.Найти("ПодразделениеОрганизации") = Неопределено Тогда
			
			Запрос = Новый Запрос;		
			
			Запрос.УстановитьПараметр("ГоловнаяОрганизация" , ГоловнаяОрганизация);
			Запрос.УстановитьПараметр("ДатаАктуальности", ?(ЗначениеЗаполнено(ДатаОкончанияБП),КонецДня(ДатаОкончанияБП),КонецМесяца(ПериодРегистрации)));
			Запрос.УстановитьПараметр("ВнешняяТаблица", ТЗ);
			Запрос.Текст =  "ВЫБРАТЬ
			                |	ТаблицаРаботники.Сотрудник,
			                |	ТаблицаРаботники.ФизЛицо
			                |ПОМЕСТИТЬ ВТ_Работники
			                |ИЗ
			                |	&ВнешняяТаблица КАК ТаблицаРаботники
			                |;
			                |
			                |////////////////////////////////////////////////////////////////////////////////
			                |ВЫБРАТЬ
			                |	ВТ_Работники.Сотрудник КАК Сотрудник,
			                |	ВТ_Работники.ФизЛицо КАК ФизЛицо,
			                |	РаботникиОрганизацийСрезПоследних.Организация,
			                |	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации,
			                |	РаботникиОрганизацийСрезПоследних.Должность,
			                |	РаботникиОрганизацийСрезПоследних.ТарифныйРазряд,
			                |	РаботникиОрганизацийСрезПоследних.ГрафикРаботы,
			                |	РаботникиОрганизацийСрезПоследних.Период
			                |ИЗ
			                |	ВТ_Работники КАК ВТ_Работники
			                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
			                |				&ДатаАктуальности,
			                |				Сотрудник В
			                |						(ВЫБРАТЬ
			                |							Работник.Сотрудник
			                |						ИЗ
			                |							ВТ_Работники КАК Работник)
			                |					И Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизацийСрезПоследних
			                |		ПО ВТ_Работники.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
							|";

			 ТЗ = Запрос.Выполнить().Выгрузить();			 
		КонецЕсли;
	
		Запрос = Новый Запрос;
		
		
		Запрос.УстановитьПараметр("ГоловнаяОрганизация" , ГоловнаяОрганизация);		
		Запрос.УстановитьПараметр("Организация" , Организация);				
		Запрос.УстановитьПараметр("ВнешняяТаблица", ТЗ);
		Запрос.УстановитьПараметр("ДатаАктуальности", ?(ЗначениеЗаполнено(ДатаОкончанияБП),КонецДня(ДатаОкончанияБП),КонецМесяца(ПериодРегистрации)));
		Запрос.УстановитьПараметр("ТипПоказателяТарифныйРазряд", Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд);
		Запрос.УстановитьПараметр("парамПустойТарифныйРазряд", Справочники.ТарифныеРазряды.ПустаяСсылка());
		Запрос.УстановитьПараметр("НачальнаяДата", '00010101');
		Запрос.УстановитьПараметр("ВидРасчета", ВидРасчета);
		Запрос.УстановитьПараметр("Прекратить", Перечисления.ВидыДействияСНачислением.Прекратить);
		Запрос.УстановитьПараметр("парамВалютаРегламентУчета" , Константы.ВалютаРегламентированногоУчета.Получить());
		Запрос.УстановитьПараметр("парамПустаяВалюта" , Справочники.Валюты.ПустаяСсылка());
		Запрос.УстановитьПараметр("ТипыПоказателейБезВалюты", ПроведениеРасчетов.ПолучитьСписокТиповПоказателейСхемМотивацииНеТребующихУказанияВалюты());		
		Запрос.УстановитьПараметр("СписокУпрСпособовРасчета", ПроведениеРасчетов.ПолучитьСписокВариантовУпрНачислений());
		Запрос.УстановитьПараметр("ПустойПоказатель", Справочники.ПоказателиСхемМотивации.ПустаяСсылка());
		Запрос.УстановитьПараметр("ВидПоказателяИндивидуальный", Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный);
		Запрос.УстановитьПараметр("ВидПоказателяПоПодразделению", Перечисления.ВидыПоказателейСхемМотивации.ПоПодразделению);
		                                                            	
		Запрос.Текст =  "ВЫБРАТЬ
						|	ТаблицаРаботники.Сотрудник,		                		                
		                |	ТаблицаРаботники.ФизЛицо,
		                |	ТаблицаРаботники.ГрафикРаботы,		                
						|	ТаблицаРаботники.ПодразделениеОрганизации,
		                |	ТаблицаРаботники.Должность,
		                |	ТаблицаРаботники.Организация,
		                |	ТаблицаРаботники.Период       
		                |
		                |ПОМЕСТИТЬ ВТ_Работники
		                |ИЗ
		                |	&ВнешняяТаблица КАК ТаблицаРаботники
		                |
		                |ИНДЕКСИРОВАТЬ ПО
		                |	ТаблицаРаботники.Сотрудник
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ОсновныеНачисленияОрганизаций.Ссылка КАК ВидРасчета,
		                |	Показатели1.Показатель.Наименование КАК Показатель1Наименование,
		                |	Показатели2.Показатель.Наименование КАК Показатель2Наименование,
		                |	Показатели3.Показатель.Наименование КАК Показатель3Наименование,
		                |	Показатели4.Показатель.Наименование КАК Показатель4Наименование,
		                |	Показатели5.Показатель.Наименование КАК Показатель5Наименование,
		                |	Показатели6.Показатель.Наименование КАК Показатель6Наименование,
		                |	Показатели1.Показатель.ТипПоказателя КАК Показатель1ТипПоказателя,
		                |	Показатели2.Показатель.ТипПоказателя КАК Показатель2ТипПоказателя,
		                |	Показатели3.Показатель.ТипПоказателя КАК Показатель3ТипПоказателя,
		                |	Показатели4.Показатель.ТипПоказателя КАК Показатель4ТипПоказателя,
		                |	Показатели5.Показатель.ТипПоказателя КАК Показатель5ТипПоказателя,
		                |	Показатели6.Показатель.ТипПоказателя КАК Показатель6ТипПоказателя,
		                |	Показатели1.Показатель.ВидПоказателя КАК Показатель1ВидПоказателя,
		                |	Показатели2.Показатель.ВидПоказателя КАК Показатель2ВидПоказателя,
		                |	Показатели3.Показатель.ВидПоказателя КАК Показатель3ВидПоказателя,
		                |	Показатели4.Показатель.ВидПоказателя КАК Показатель4ВидПоказателя,
		                |	Показатели5.Показатель.ВидПоказателя КАК Показатель5ВидПоказателя,
		                |	Показатели6.Показатель.ВидПоказателя КАК Показатель6ВидПоказателя,
		                |	Показатели1.Показатель КАК Показатель1,
		                |	Показатели2.Показатель КАК Показатель2,
		                |	Показатели3.Показатель КАК Показатель3,
		                |	Показатели4.Показатель КАК Показатель4,
		                |	Показатели5.Показатель КАК Показатель5,
		                |	Показатели6.Показатель КАК Показатель6
		                |ПОМЕСТИТЬ ВТ_Показатели
		                |ИЗ
		                |	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели1
		                |		ПО (Показатели1.НомерСтроки = 1)
		                |			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели1.Ссылка
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели2
		                |		ПО (Показатели2.НомерСтроки = 2)
		                |			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели2.Ссылка
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели3
		                |		ПО (Показатели3.НомерСтроки = 3)
		                |			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели3.Ссылка
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели4
		                |		ПО (Показатели4.НомерСтроки = 4)
		                |			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели4.Ссылка
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели5
		                |		ПО (Показатели5.НомерСтроки = 5)
		                |			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели5.Ссылка
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели6
		                |		ПО (Показатели6.НомерСтроки = 6)
		                |			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели6.Ссылка
		                |
		                |ОБЪЕДИНИТЬ ВСЕ
		                |
		                |ВЫБРАТЬ
		                |	ДополнительныеНачисленияОрганизаций.Ссылка,
		                |	Показатели1.Показатель.Наименование,
		                |	Показатели2.Показатель.Наименование,
		                |	Показатели3.Показатель.Наименование,
		                |	Показатели4.Показатель.Наименование,
		                |	Показатели5.Показатель.Наименование,
		                |	Показатели6.Показатель.Наименование,
		                |	Показатели1.Показатель.ТипПоказателя,
		                |	Показатели2.Показатель.ТипПоказателя,
		                |	Показатели3.Показатель.ТипПоказателя,
		                |	Показатели4.Показатель.ТипПоказателя,
		                |	Показатели5.Показатель.ТипПоказателя,
		                |	Показатели6.Показатель.ТипПоказателя,
		                |	Показатели1.Показатель.ВидПоказателя,
		                |	Показатели2.Показатель.ВидПоказателя,
		                |	Показатели3.Показатель.ВидПоказателя,
		                |	Показатели4.Показатель.ВидПоказателя,
		                |	Показатели5.Показатель.ВидПоказателя,
		                |	Показатели6.Показатель.ВидПоказателя,
		                |	Показатели1.Показатель,
		                |	Показатели2.Показатель,
		                |	Показатели3.Показатель,
		                |	Показатели4.Показатель,
		                |	Показатели5.Показатель,
		                |	Показатели6.Показатель
		                |ИЗ
		                |	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели1
		                |		ПО (Показатели1.НомерСтроки = 1)
		                |			И ДополнительныеНачисленияОрганизаций.Ссылка = Показатели1.Ссылка
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели2
		                |		ПО (Показатели2.НомерСтроки = 2)
		                |			И ДополнительныеНачисленияОрганизаций.Ссылка = Показатели2.Ссылка
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели3
		                |		ПО (Показатели3.НомерСтроки = 3)
		                |			И ДополнительныеНачисленияОрганизаций.Ссылка = Показатели3.Ссылка
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели4
		                |		ПО (Показатели4.НомерСтроки = 4)
		                |			И ДополнительныеНачисленияОрганизаций.Ссылка = Показатели4.Ссылка
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели5
		                |		ПО (Показатели5.НомерСтроки = 5)
		                |			И ДополнительныеНачисленияОрганизаций.Ссылка = Показатели5.Ссылка
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели6
		                |		ПО (Показатели6.НомерСтроки = 6)
		                |			И ДополнительныеНачисленияОрганизаций.Ссылка = Показатели6.Ссылка
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                |	НачисленияРаботниковОрганизации.Сотрудник КАК Сотрудник,
		                |	Работники.Должность,
		                |	&ДатаАктуальности КАК Период,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ВидРасчетаИзмерение.Код ЕСТЬ NULL 
		                |			ТОГДА ИСТИНА
		                |		ИНАЧЕ ЛОЖЬ
		                |	КОНЕЦ КАК ОсновноеНачисление,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.ВидРасчетаЗавершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.ВидРасчета
		                |	КОНЕЦ КАК ВидРасчета,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.ДействиеЗавершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Действие
		                |	КОНЕЦ КАК Действие,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.Показатель1Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель1
		                |	КОНЕЦ КАК Показатель1,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.Валюта1Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта1
		                |	КОНЕЦ КАК Валюта1,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд1Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.ТарифныйРазряд1
		                |	КОНЕЦ КАК ТарифныйРазряд1,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.Показатель2Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель2
		                |	КОНЕЦ КАК Показатель2,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.Валюта2Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта2
		                |	КОНЕЦ КАК Валюта2,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд2Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.ТарифныйРазряд2
		                |	КОНЕЦ КАК ТарифныйРазряд2,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.Показатель3Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель3
		                |	КОНЕЦ КАК Показатель3,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.Валюта3Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта3
		                |	КОНЕЦ КАК Валюта3,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд3Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.ТарифныйРазряд3
		                |	КОНЕЦ КАК ТарифныйРазряд3,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.Показатель4Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель4
		                |	КОНЕЦ КАК Показатель4,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.Валюта4Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта4
		                |	КОНЕЦ КАК Валюта4,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд4Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.ТарифныйРазряд4
		                |	КОНЕЦ КАК ТарифныйРазряд4,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.Показатель5Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель5
		                |	КОНЕЦ КАК Показатель5,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.Валюта5Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта5
		                |	КОНЕЦ КАК Валюта5,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд5Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.ТарифныйРазряд5
		                |	КОНЕЦ КАК ТарифныйРазряд5,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.Показатель6Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель6
		                |	КОНЕЦ КАК Показатель6,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.Валюта6Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта6
		                |	КОНЕЦ КАК Валюта6,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд6Завершения
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.ТарифныйРазряд6
		                |	КОНЕЦ КАК ТарифныйРазряд6
		                |ПОМЕСТИТЬ ВТ_ПлановыеНачисления
		                |ИЗ
		                |	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
		                |			&ДатаАктуальности,
		                |			Организация = &ГоловнаяОрганизация
		                |				И Сотрудник В
		                |					(ВЫБРАТЬ
		                |						ВТ_Работники.Сотрудник
		                |					ИЗ
		                |						ВТ_Работники)) КАК НачисленияРаботниковОрганизации
		                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		                |				&ДатаАктуальности,
		                |				Организация = &ГоловнаяОрганизация
		                |					И Сотрудник В
		                |						(ВЫБРАТЬ
		                |							ВТ_Работники.Сотрудник
		                |						ИЗ
		                |							ВТ_Работники)) КАК Работники
		                |		ПО НачисленияРаботниковОрганизации.Сотрудник = Работники.Сотрудник
		                |ГДЕ
		                |	ВЫБОР
		                |			КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &ДатаАктуальности
		                |					И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата
		                |				ТОГДА НачисленияРаботниковОрганизации.ДействиеЗавершения
		                |			ИНАЧЕ НачисленияРаботниковОрганизации.Действие
		                |		КОНЕЦ <> &Прекратить
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                |	Работники.Сотрудник КАК Сотрудник,
		                |	Работники.ФизЛицо КАК ФизЛицо,
		                |	ВЫБОР
		                |		КОГДА Работники.Период >= НачисленияРаботниковОрганизации.Период
		                |				ИЛИ НачисленияРаботниковОрганизации.Период ЕСТЬ NULL 
		                |			ТОГДА Работники.Период
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Период
		                |	КОНЕЦ КАК Период,
		                |	Работники.Период КАК ПериодРаботники,
		                |	НачисленияРаботниковОрганизации.ОсновноеНачисление КАК ОсновноеНачисление,
		                |	НачисленияРаботниковОрганизации.Период КАК ПериодНачисления,
		                |	НачисленияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
		                |	НачисленияРаботниковОрганизации.ВидРасчета.Наименование КАК ВидРасчетаНаименование,
		                |	НачисленияРаботниковОрганизации.ВидРасчета.СпособРасчета КАК СпособРасчета,
		                |	НачисленияРаботниковОрганизации.ВидРасчета.КатегорияРасчета КАК КатегорияРасчета,
		                |	НачисленияРаботниковОрганизации.ВидРасчета.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
		                |	НачисленияРаботниковОрганизации.ВидРасчета.ВидСтажа КАК ВидСтажа,
		                |	НачисленияРаботниковОрганизации.ВидРасчета.КоэффициентСтажа КАК КоэффициентСтажа,
		                |	НачисленияРаботниковОрганизации.Действие КАК Действие,
		                |	ПоказателиНачислений.Показатель1 КАК ПоказательМотивации1,
		                |	ПоказателиНачислений.Показатель1ТипПоказателя КАК ТипПоказателя1,
		                |	ПоказателиНачислений.Показатель1ВидПоказателя КАК ВидПоказателя1,
		                |	НачисленияРаботниковОрганизации.Показатель1,
		                |	НачисленияРаботниковОрганизации.Валюта1,
		                |	НачисленияРаботниковОрганизации.ТарифныйРазряд1,
		                |	ПоказателиНачислений.Показатель2 КАК ПоказательМотивации2,
		                |	ПоказателиНачислений.Показатель2ТипПоказателя КАК ТипПоказателя2,
		                |	ПоказателиНачислений.Показатель2ВидПоказателя КАК ВидПоказателя2,
		                |	НачисленияРаботниковОрганизации.Показатель2,
		                |	НачисленияРаботниковОрганизации.Валюта2,
		                |	НачисленияРаботниковОрганизации.ТарифныйРазряд2,
		                |	ПоказателиНачислений.Показатель3 КАК ПоказательМотивации3,
		                |	ПоказателиНачислений.Показатель3ТипПоказателя КАК ТипПоказателя3,
		                |	ПоказателиНачислений.Показатель3ВидПоказателя КАК ВидПоказателя3,
		                |	НачисленияРаботниковОрганизации.Показатель3,
		                |	НачисленияРаботниковОрганизации.Валюта3,
		                |	НачисленияРаботниковОрганизации.ТарифныйРазряд3,
		                |	ПоказателиНачислений.Показатель4 КАК ПоказательМотивации4,
		                |	ПоказателиНачислений.Показатель4ТипПоказателя КАК ТипПоказателя4,
		                |	ПоказателиНачислений.Показатель4ВидПоказателя КАК ВидПоказателя4,
		                |	НачисленияРаботниковОрганизации.Показатель4,
		                |	НачисленияРаботниковОрганизации.Валюта4,
		                |	НачисленияРаботниковОрганизации.ТарифныйРазряд4,
		                |	ПоказателиНачислений.Показатель5 КАК ПоказательМотивации5,
		                |	ПоказателиНачислений.Показатель5ТипПоказателя КАК ТипПоказателя5,
		                |	ПоказателиНачислений.Показатель5ВидПоказателя КАК ВидПоказателя5,
		                |	НачисленияРаботниковОрганизации.Показатель5,
		                |	НачисленияРаботниковОрганизации.Валюта5,
		                |	НачисленияРаботниковОрганизации.ТарифныйРазряд5,
		                |	ПоказателиНачислений.Показатель6 КАК ПоказательМотивации6,
		                |	ПоказателиНачислений.Показатель6ТипПоказателя КАК ТипПоказателя6,
		                |	ПоказателиНачислений.Показатель6ВидПоказателя КАК ВидПоказателя6,
		                |	НачисленияРаботниковОрганизации.Показатель6,
		                |	НачисленияРаботниковОрганизации.Валюта6,
		                |	НачисленияРаботниковОрганизации.ТарифныйРазряд6,
		                |	Работники.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		                |	Работники.ГрафикРаботы КАК ГрафикРаботы,
		                |	НачисленияРаботниковОрганизации.Должность КАК Должность
		                |ПОМЕСТИТЬ ВТ_ПлановыеНачисленияИтог
		                |ИЗ
		                |	ВТ_Работники КАК Работники
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПлановыеНачисления КАК НачисленияРаботниковОрганизации
		                |		ПО (НачисленияРаботниковОрганизации.Сотрудник = Работники.Сотрудник)
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Показатели КАК ПоказателиНачислений
		                |		ПО (НачисленияРаботниковОрганизации.ВидРасчета = ПоказателиНачислений.ВидРасчета)
		                |
		                |ИНДЕКСИРОВАТЬ ПО
		                |	Сотрудник
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                |	РазмерТарифныхСтавок.Должность,
		                |	РазмерТарифныхСтавок.ТарифныйРазряд,
		                |	РазмерТарифныхСтавок.Размер,
		                |	РазмерТарифныхСтавок.Валюта
		                |ПОМЕСТИТЬ ВТ_РазмерТарифныхСтавок
		                |ИЗ
		                |	РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&ДатаАктуальности, ) КАК РазмерТарифныхСтавок
		                |
		                |ИНДЕКСИРОВАТЬ ПО
		                |	РазмерТарифныхСтавок.Должность,
		                |	РазмерТарифныхСтавок.ТарифныйРазряд
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                |	НачисленияРаботниковОрганизации.Сотрудник КАК Сотрудник,
		                |	НачисленияРаботниковОрганизации.Период,
		                |	НачисленияРаботниковОрганизации.ПериодРаботники,
		                |	НачисленияРаботниковОрганизации.ПериодНачисления,
		                |	НачисленияРаботниковОрганизации.ОсновноеНачисление КАК ОсновноеНачисление,
		                |	НачисленияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
		                |	НачисленияРаботниковОрганизации.ВидРасчетаНаименование КАК ВидРасчетаНаименование,
		                |	НачисленияРаботниковОрганизации.СпособРасчета КАК СпособРасчета,
		                |	НачисленияРаботниковОрганизации.КатегорияРасчета КАК КатегорияРасчета,
		                |	НачисленияРаботниковОрганизации.ПоказательМотивации1 КАК ПоказательМотивации1,
		                |	НачисленияРаботниковОрганизации.ПоказательМотивации2 КАК ПоказательМотивации2,
		                |	НачисленияРаботниковОрганизации.ПоказательМотивации3 КАК ПоказательМотивации3,
		                |	НачисленияРаботниковОрганизации.ПоказательМотивации4 КАК ПоказательМотивации4,
		                |	НачисленияРаботниковОрганизации.ПоказательМотивации5 КАК ПоказательМотивации5,
		                |	НачисленияРаботниковОрганизации.ПоказательМотивации6 КАК ПоказательМотивации6,
		                |	НачисленияРаботниковОрганизации.ТипПоказателя1 КАК ТипПоказателя1,
		                |	НачисленияРаботниковОрганизации.ТипПоказателя2 КАК ТипПоказателя2,
		                |	НачисленияРаботниковОрганизации.ТипПоказателя3 КАК ТипПоказателя3,
		                |	НачисленияРаботниковОрганизации.ТипПоказателя4 КАК ТипПоказателя4,
		                |	НачисленияРаботниковОрганизации.ТипПоказателя5 КАК ТипПоказателя5,
		                |	НачисленияРаботниковОрганизации.ТипПоказателя6 КАК ТипПоказателя6,
		                |	НачисленияРаботниковОрганизации.ВидПоказателя1 КАК ВидПоказателя1,
		                |	НачисленияРаботниковОрганизации.ВидПоказателя2 КАК ВидПоказателя2,
		                |	НачисленияРаботниковОрганизации.ВидПоказателя3 КАК ВидПоказателя3,
		                |	НачисленияРаботниковОрганизации.ВидПоказателя4 КАК ВидПоказателя4,
		                |	НачисленияРаботниковОрганизации.ВидПоказателя5 КАК ВидПоказателя5,
		                |	НачисленияРаботниковОрганизации.ВидПоказателя6 КАК ВидПоказателя6,
		                |	НачисленияРаботниковОрганизации.ВидСтажа КАК ВидСтажа,
		                |	НачисленияРаботниковОрганизации.КоэффициентСтажа КАК КоэффициентСтажа,
		                |	НачисленияРаботниковОрганизации.Действие КАК Действие,
		                |	НачисленияРаботниковОрганизации.ГрафикРаботы,
		                |	НачисленияРаботниковОрганизации.ПодразделениеОрганизации,
		                |	НачисленияРаботниковОрганизации.Должность,
		                |	ВЫБОР
		                |		КОГДА ЕСТЬNULL(НачисленияРаботниковОрганизации.ТребуетВводаТарифногоРазряда, ЛОЖЬ)
		                |				ИЛИ НачисленияРаботниковОрганизации.ТипПоказателя1 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд1
		                |		ИНАЧЕ &парамПустойТарифныйРазряд
		                |	КОНЕЦ КАК ТарифныйРазряд1,
		                |	ВЫБОР
		                |		КОГДА (ЕСТЬNULL(НачисленияРаботниковОрганизации.ТребуетВводаТарифногоРазряда, ЛОЖЬ)
		                |				ИЛИ НачисленияРаботниковОрганизации.ТипПоказателя1 = &ТипПоказателяТарифныйРазряд)
		                |				И ТарифныеСтавки1.Размер ЕСТЬ NULL 
		                |			ТОГДА ИСТИНА
		                |		ИНАЧЕ ЛОЖЬ
		                |	КОНЕЦ КАК НеУказанРазмерТарифныхСтавок1,
		                |	ВЫБОР
		                |		КОГДА ЕСТЬNULL(НачисленияРаботниковОрганизации.ТребуетВводаТарифногоРазряда, ЛОЖЬ)
		                |				ИЛИ НачисленияРаботниковОрганизации.ТипПоказателя1 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА ТарифныеСтавки1.Размер
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель1
		                |	КОНЕЦ КАК Показатель1,
		                |	ВЫБОР
		                |		КОГДА ЕСТЬNULL(НачисленияРаботниковОрганизации.ТребуетВводаТарифногоРазряда, ЛОЖЬ)
		                |				ИЛИ НачисленияРаботниковОрганизации.ТипПоказателя1 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА ТарифныеСтавки1.Валюта
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта1
		                |	КОНЕЦ КАК Валюта1,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя2 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд2
		                |		ИНАЧЕ &парамПустойТарифныйРазряд
		                |	КОНЕЦ КАК ТарифныйРазряд2,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя2 = &ТипПоказателяТарифныйРазряд
		                |				И ТарифныеСтавки2.Размер ЕСТЬ NULL 
		                |			ТОГДА ИСТИНА
		                |		ИНАЧЕ ЛОЖЬ
		                |	КОНЕЦ КАК НеУказанРазмерТарифныхСтавок2,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя2 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА ТарифныеСтавки2.Размер
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель2
		                |	КОНЕЦ КАК Показатель2,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя2 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА ТарифныеСтавки2.Валюта
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта2
		                |	КОНЕЦ КАК Валюта2,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя3 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд3
		                |		ИНАЧЕ &парамПустойТарифныйРазряд
		                |	КОНЕЦ КАК ТарифныйРазряд3,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя3 = &ТипПоказателяТарифныйРазряд
		                |				И ТарифныеСтавки3.Размер ЕСТЬ NULL 
		                |			ТОГДА ИСТИНА
		                |		ИНАЧЕ ЛОЖЬ
		                |	КОНЕЦ КАК НеУказанРазмерТарифныхСтавок3,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя3 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА ТарифныеСтавки3.Размер
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель3
		                |	КОНЕЦ КАК Показатель3,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя3 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА ТарифныеСтавки3.Валюта
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта3
		                |	КОНЕЦ КАК Валюта3,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя4 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд4
		                |		ИНАЧЕ &парамПустойТарифныйРазряд
		                |	КОНЕЦ КАК ТарифныйРазряд4,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя4 = &ТипПоказателяТарифныйРазряд
		                |				И ТарифныеСтавки4.Размер ЕСТЬ NULL 
		                |			ТОГДА ИСТИНА
		                |		ИНАЧЕ ЛОЖЬ
		                |	КОНЕЦ КАК НеУказанРазмерТарифныхСтавок4,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя4 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА ТарифныеСтавки4.Размер
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель4
		                |	КОНЕЦ КАК Показатель4,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя4 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА ТарифныеСтавки4.Валюта
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта4
		                |	КОНЕЦ КАК Валюта4,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя5 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд5
		                |		ИНАЧЕ &парамПустойТарифныйРазряд
		                |	КОНЕЦ КАК ТарифныйРазряд5,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя5 = &ТипПоказателяТарифныйРазряд
		                |				И ТарифныеСтавки5.Размер ЕСТЬ NULL 
		                |			ТОГДА ИСТИНА
		                |		ИНАЧЕ ЛОЖЬ
		                |	КОНЕЦ КАК НеУказанРазмерТарифныхСтавок5,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя5 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА ТарифныеСтавки5.Размер
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель5
		                |	КОНЕЦ КАК Показатель5,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя5 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА ТарифныеСтавки5.Валюта
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта5
		                |	КОНЕЦ КАК Валюта5,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя6 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд6
		                |		ИНАЧЕ &парамПустойТарифныйРазряд
		                |	КОНЕЦ КАК ТарифныйРазряд6,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя6 = &ТипПоказателяТарифныйРазряд
		                |				И ТарифныеСтавки6.Размер ЕСТЬ NULL 
		                |			ТОГДА ИСТИНА
		                |		ИНАЧЕ ЛОЖЬ
		                |	КОНЕЦ КАК НеУказанРазмерТарифныхСтавок6,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя6 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА ТарифныеСтавки6.Размер
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель6
		                |	КОНЕЦ КАК Показатель6,
		                |	ВЫБОР
		                |		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя6 = &ТипПоказателяТарифныйРазряд
		                |			ТОГДА ТарифныеСтавки6.Валюта
		                |		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта6
		                |	КОНЕЦ КАК Валюта6
		                |ПОМЕСТИТЬ ВТ_СписокНачислений
		                |ИЗ
		                |	ВТ_ПлановыеНачисленияИтог КАК НачисленияРаботниковОрганизации
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазмерТарифныхСтавок КАК ТарифныеСтавки1
		                |		ПО НачисленияРаботниковОрганизации.Должность = ТарифныеСтавки1.Должность
		                |			И НачисленияРаботниковОрганизации.ТарифныйРазряд1 = ТарифныеСтавки1.ТарифныйРазряд
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазмерТарифныхСтавок КАК ТарифныеСтавки2
		                |		ПО НачисленияРаботниковОрганизации.Должность = ТарифныеСтавки2.Должность
		                |			И НачисленияРаботниковОрганизации.ТарифныйРазряд2 = ТарифныеСтавки2.ТарифныйРазряд
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазмерТарифныхСтавок КАК ТарифныеСтавки3
		                |		ПО НачисленияРаботниковОрганизации.Должность = ТарифныеСтавки3.Должность
		                |			И НачисленияРаботниковОрганизации.ТарифныйРазряд3 = ТарифныеСтавки3.ТарифныйРазряд
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазмерТарифныхСтавок КАК ТарифныеСтавки4
		                |		ПО НачисленияРаботниковОрганизации.Должность = ТарифныеСтавки4.Должность
		                |			И НачисленияРаботниковОрганизации.ТарифныйРазряд4 = ТарифныеСтавки4.ТарифныйРазряд
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазмерТарифныхСтавок КАК ТарифныеСтавки5
		                |		ПО НачисленияРаботниковОрганизации.Должность = ТарифныеСтавки5.Должность
		                |			И НачисленияРаботниковОрганизации.ТарифныйРазряд5 = ТарифныеСтавки5.ТарифныйРазряд
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазмерТарифныхСтавок КАК ТарифныеСтавки6
		                |		ПО НачисленияРаботниковОрганизации.Должность = ТарифныеСтавки6.Должность
		                |			И НачисленияРаботниковОрганизации.ТарифныйРазряд6 = ТарифныеСтавки6.ТарифныйРазряд
		                |
		                |ИНДЕКСИРОВАТЬ ПО
		                |	Сотрудник,
		                |	ВидРасчета
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                |	ЗначенияПоказателейСхемМотивации.Показатель КАК Показатель,
		                |	ЗначенияПоказателейСхемМотивации.Подразделение,
		                |	ЗначенияПоказателейСхемМотивации.Сотрудник КАК Сотрудник,
		                |	ЗначенияПоказателейСхемМотивации.Валюта,
		                |	ВЫБОР
		                |		КОГДА ЗначенияПоказателейСхемМотивации.Валюта = &парамВалютаРегламентУчета
		                |				ИЛИ ЗначенияПоказателейСхемМотивации.Валюта = &парамПустаяВалюта
		                |				ИЛИ ЗначенияПоказателейСхемМотивации.Показатель.ТипПоказателя В (&ТипыПоказателейБезВалюты)
		                |			ТОГДА 1
		                |		ИНАЧЕ ЗначенияПоказателейСхемМотивацииВалюта.Курс
		                |	КОНЕЦ КАК Курс,
		                |	ВЫБОР
		                |		КОГДА ЗначенияПоказателейСхемМотивации.Валюта = &парамВалютаРегламентУчета
		                |				ИЛИ ЗначенияПоказателейСхемМотивации.Валюта = &парамПустаяВалюта
		                |				ИЛИ ЗначенияПоказателейСхемМотивации.Показатель.ТипПоказателя В (&ТипыПоказателейБезВалюты)
		                |			ТОГДА 1
		                |		ИНАЧЕ ЕСТЬNULL(ЗначенияПоказателейСхемМотивацииВалюта.Курс / ЗначенияПоказателейСхемМотивацииВалюта.Кратность, 0)
		                |	КОНЕЦ * ЗначенияПоказателейСхемМотивации.Значение КАК Значение
		                |ПОМЕСТИТЬ ВТ_ЗначенияПоказателейСхемМотивации
		                |ИЗ
		                |	РегистрСведений.ЗначенияПоказателейСхемМотивации.СрезПоследних(&ДатаАктуальности, Организация = &Организация) КАК ЗначенияПоказателейСхемМотивации
		                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом.СрезПоследних(&ДатаАктуальности, ) КАК ЗначенияПоказателейСхемМотивацииВалюта
		                |		ПО ЗначенияПоказателейСхемМотивации.Валюта = ЗначенияПоказателейСхемМотивацииВалюта.Валюта
		                |
		                |ИНДЕКСИРОВАТЬ ПО
		                |	Показатель
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ОсновныеНачисленияОрганизацийПоказатели.Показатель КАК Показатель,
		                |	ОсновныеНачисленияОрганизацийПоказатели.Показатель.ВозможностьИзменения,
		                |	ОсновныеНачисленияОрганизацийПоказатели.НомерСтроки КАК НомерСтроки,
		                |	ОсновныеНачисленияОрганизацийПоказатели.Ссылка КАК Ссылка,
		                |	ВЫБОР
		                |		КОГДА ОсновныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
		                |			ТОГДА ИСТИНА
		                |		КОГДА ОсновныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
		                |			ТОГДА ИСТИНА
		                |		КОГДА ОсновныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
		                |			ТОГДА ИСТИНА
		                |		КОГДА ОсновныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка
		                |			ТОГДА ИСТИНА
		                |		ИНАЧЕ ЛОЖЬ
		                |	КОНЕЦ КАК ЭтоТарифнаяСтавка
		                |ПОМЕСТИТЬ ВТ_НеЗапрашиваемыеПриКадровыхПеремещениях
		                |ИЗ
		                |	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияОрганизацийПоказатели
		                |ГДЕ
		                |	(НЕ ОсновныеНачисленияОрганизацийПоказатели.ЗапрашиватьПриКадровыхПеремещениях
		                |			ИЛИ ОсновныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
		                |			ИЛИ ОсновныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
		                |			ИЛИ ОсновныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
		                |			ИЛИ ОсновныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка)
		                |	И ОсновныеНачисленияОрганизацийПоказатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.Ежемесячно)
		                |
		                |ОБЪЕДИНИТЬ
		                |
		                |ВЫБРАТЬ
		                |	ДополнительныеНачисленияОрганизацийПоказатели.Показатель,
		                |	ДополнительныеНачисленияОрганизацийПоказатели.Показатель.ВозможностьИзменения,
		                |	ДополнительныеНачисленияОрганизацийПоказатели.НомерСтроки,
		                |	ДополнительныеНачисленияОрганизацийПоказатели.Ссылка,
		                |	ВЫБОР
		                |		КОГДА ДополнительныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
		                |			ТОГДА ИСТИНА
		                |		КОГДА ДополнительныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
		                |			ТОГДА ИСТИНА
		                |		КОГДА ДополнительныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
		                |			ТОГДА ИСТИНА
		                |		КОГДА ДополнительныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка
		                |			ТОГДА ИСТИНА
		                |		ИНАЧЕ ЛОЖЬ
		                |	КОНЕЦ
		                |ИЗ
		                |	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК ДополнительныеНачисленияОрганизацийПоказатели
		                |ГДЕ
		                |	(НЕ ДополнительныеНачисленияОрганизацийПоказатели.ЗапрашиватьПриКадровыхПеремещениях
		                |			ИЛИ ДополнительныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
		                |			ИЛИ ДополнительныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
		                |			ИЛИ ДополнительныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
		                |			ИЛИ ДополнительныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка)
		                |	И ДополнительныеНачисленияОрганизацийПоказатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.Ежемесячно)
		                |
		                |ИНДЕКСИРОВАТЬ ПО
		                |	Показатель
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ РАЗЛИЧНЫЕ
		                |	ОсновныеНачисленияОрганизаций.Ссылка КАК Ссылка,
		                |	ВЫБОР
		                |		КОГДА ОсновныеНачисленияОрганизаций.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам))
		                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
		                |		КОГДА ОсновныеНачисленияОрганизаций.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок))
		                |			ТОГДА ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
		                |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
		                |	КОНЕЦ КАК Показатель,
		                |	1 КАК НомерСтроки,
		                |	ИСТИНА КАК ЭтоТарифнаяСтавка
		                |ПОМЕСТИТЬ ВТ_ВводимыеВПлановыхНачисленияхПоказатели
		                |ИЗ
		                |	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		                |ГДЕ
		                |	ОсновныеНачисленияОрганизаций.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке))
		                |	И ОсновныеНачисленияОрганизаций.ЗачетОтработанногоВремени
		                |
		                |ОБЪЕДИНИТЬ
		                |
		                |ВЫБРАТЬ РАЗЛИЧНЫЕ
		                |	ОсновныеНачисленияОрганизацийПоказатели.Ссылка,
		                |	ОсновныеНачисленияОрганизацийПоказатели.Показатель,
		                |	ОсновныеНачисленияОрганизацийПоказатели.НомерСтроки,
		                |	ИСТИНА
		                |ИЗ
		                |	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияОрганизацийПоказатели
		                |ГДЕ
		                |	ОсновныеНачисленияОрганизацийПоказатели.Ссылка.ЗачетОтработанногоВремени
		                |	И ОсновныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка
		                |
		                |ОБЪЕДИНИТЬ
		                |
		                |ВЫБРАТЬ РАЗЛИЧНЫЕ
		                |	ОсновныеНачисленияОрганизацийПоказатели.Ссылка,
		                |	ОсновныеНачисленияОрганизацийПоказатели.Показатель,
		                |	ОсновныеНачисленияОрганизацийПоказатели.НомерСтроки,
		                |	ЛОЖЬ
		                |ИЗ
		                |	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияОрганизацийПоказатели
		                |ГДЕ
		                |	ОсновныеНачисленияОрганизацийПоказатели.Показатель В
		                |			(ВЫБРАТЬ
		                |				ВТ_НеЗапрашиваемыеПриКадровыхПеремещениях.Показатель
		                |			ИЗ
		                |				ВТ_НеЗапрашиваемыеПриКадровыхПеремещениях)
		                |	И НЕ ОсновныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка
		                |
		                |ОБЪЕДИНИТЬ
		                |
		                |ВЫБРАТЬ РАЗЛИЧНЫЕ
		                |	ДополнительныеНачисленияОрганизацийПоказатели.Ссылка,
		                |	ДополнительныеНачисленияОрганизацийПоказатели.Показатель,
		                |	ДополнительныеНачисленияОрганизацийПоказатели.НомерСтроки,
		                |	ИСТИНА
		                |ИЗ
		                |	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК ДополнительныеНачисленияОрганизацийПоказатели
		                |ГДЕ
		                |	ДополнительныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка
		                |
		                |ОБЪЕДИНИТЬ
		                |
		                |ВЫБРАТЬ РАЗЛИЧНЫЕ
		                |	ДополнительныеНачисленияОрганизацийПоказатели.Ссылка,
		                |	ДополнительныеНачисленияОрганизацийПоказатели.Показатель,
		                |	ДополнительныеНачисленияОрганизацийПоказатели.НомерСтроки,
		                |	ЛОЖЬ
		                |ИЗ
		                |	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК ДополнительныеНачисленияОрганизацийПоказатели
		                |ГДЕ
		                |	ДополнительныеНачисленияОрганизацийПоказатели.Показатель В
		                |			(ВЫБРАТЬ
		                |				ВТ_НеЗапрашиваемыеПриКадровыхПеремещениях.Показатель
		                |			ИЗ
		                |				ВТ_НеЗапрашиваемыеПриКадровыхПеремещениях)
		                |	И НЕ ДополнительныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка
		                |
		                |ИНДЕКСИРОВАТЬ ПО
		                |	Ссылка
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ РАЗЛИЧНЫЕ
		                |	СписокНачислений.Сотрудник КАК Сотрудник,
		                |	СписокНачислений.Период,
		                |	СписокНачислений.ПериодРаботники КАК ПериодРаботники,
		                |	СписокНачислений.ПериодНачисления КАК ПериодНачисления,
		                |	ВводимыеПоказатели.Показатель КАК Показатель,
		                |	ВЫБОР
		                |		КОГДА ВводимыеПоказатели.НомерСтроки = 1
		                |			ТОГДА СписокНачислений.Показатель1
		                |		КОГДА ВводимыеПоказатели.НомерСтроки = 2
		                |			ТОГДА СписокНачислений.Показатель2
		                |		КОГДА ВводимыеПоказатели.НомерСтроки = 3
		                |			ТОГДА СписокНачислений.Показатель3
		                |		КОГДА ВводимыеПоказатели.НомерСтроки = 4
		                |			ТОГДА СписокНачислений.Показатель4
		                |		КОГДА ВводимыеПоказатели.НомерСтроки = 5
		                |			ТОГДА СписокНачислений.Показатель5
		                |		КОГДА ВводимыеПоказатели.НомерСтроки = 6
		                |			ТОГДА СписокНачислений.Показатель6
		                |	КОНЕЦ КАК ЗначениеПоказателя,
		                |	ВЫБОР
		                |		КОГДА ВводимыеПоказатели.НомерСтроки = 1
		                |			ТОГДА СписокНачислений.Валюта1
		                |		КОГДА ВводимыеПоказатели.НомерСтроки = 2
		                |			ТОГДА СписокНачислений.Валюта2
		                |		КОГДА ВводимыеПоказатели.НомерСтроки = 3
		                |			ТОГДА СписокНачислений.Валюта3
		                |		КОГДА ВводимыеПоказатели.НомерСтроки = 4
		                |			ТОГДА СписокНачислений.Валюта4
		                |		КОГДА ВводимыеПоказатели.НомерСтроки = 5
		                |			ТОГДА СписокНачислений.Валюта5
		                |		КОГДА ВводимыеПоказатели.НомерСтроки = 6
		                |			ТОГДА СписокНачислений.Валюта6
		                |	КОНЕЦ КАК ВалютаПоказателя
		                |ПОМЕСТИТЬ ВТ_ЗначенияВводимыхКадровыхПоказателей1
		                |ИЗ
		                |	ВТ_СписокНачислений КАК СписокНачислений
		                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВводимыеВПлановыхНачисленияхПоказатели КАК ВводимыеПоказатели
		                |		ПО СписокНачислений.ВидРасчета = ВводимыеПоказатели.Ссылка
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ РАЗЛИЧНЫЕ
		                |	ЗначенияВводимыхКадровыхПоказателей.Сотрудник КАК Сотрудник,
		                |	ЗначенияВводимыхКадровыхПоказателей.Период,
		                |	ЗначенияВводимыхКадровыхПоказателей.ПериодРаботники КАК ПериодРаботники,
		                |	ЗначенияВводимыхКадровыхПоказателей.ПериодНачисления КАК ПериодНачисления,
		                |	ЗначенияВводимыхКадровыхПоказателей.Показатель КАК Показатель,
		                |	ВЫБОР
		                |		КОГДА ЗначенияВводимыхКадровыхПоказателей.ВалютаПоказателя = &парамВалютаРегламентУчета
		                |				ИЛИ ЗначенияВводимыхКадровыхПоказателей.ВалютаПоказателя = &парамПустаяВалюта
		                |				ИЛИ ЗначенияВводимыхКадровыхПоказателей.Показатель.ТипПоказателя В (&ТипыПоказателейБезВалюты)
		                |			ТОГДА 1
		                |		ИНАЧЕ ЗначенияВводимыхКадровыхПоказателейВалюта.Курс
		                |	КОНЕЦ КАК КурсПоказателя,
		                |	ВЫБОР
		                |		КОГДА ЗначенияВводимыхКадровыхПоказателей.ВалютаПоказателя = &парамВалютаРегламентУчета
		                |				ИЛИ ЗначенияВводимыхКадровыхПоказателей.ВалютаПоказателя = &парамПустаяВалюта
		                |				ИЛИ ЗначенияВводимыхКадровыхПоказателей.Показатель.ТипПоказателя В (&ТипыПоказателейБезВалюты)
		                |			ТОГДА 1
		                |		ИНАЧЕ ЕСТЬNULL(ЗначенияВводимыхКадровыхПоказателейВалюта.Курс / ЗначенияВводимыхКадровыхПоказателейВалюта.Кратность, 0)
		                |	КОНЕЦ * ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя КАК ЗначениеПоказателя
		                |ПОМЕСТИТЬ ВТ_ЗначенияВводимыхКадровыхПоказателей
		                |ИЗ
		                |	ВТ_ЗначенияВводимыхКадровыхПоказателей1 КАК ЗначенияВводимыхКадровыхПоказателей
		                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом.СрезПоследних(&ДатаАктуальности, ) КАК ЗначенияВводимыхКадровыхПоказателейВалюта
		                |		ПО ЗначенияВводимыхКадровыхПоказателей.ВалютаПоказателя = ЗначенияВводимыхКадровыхПоказателейВалюта.Валюта
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ РАЗЛИЧНЫЕ
		                |	НеВводимыеПоказатели.Ссылка КАК ВидРасчета,
		                |	НеВводимыеПоказатели.НомерСтроки КАК НомерСтроки,
		                |	НеВводимыеПоказатели.Показатель КАК Показатель,
		                |	НеВводимыеПоказатели.ПоказательВозможностьИзменения КАК ПоказательВозможностьИзменения,
		                |	НеВводимыеПоказатели.ЭтоТарифнаяСтавка КАК ЭтоТарифнаяСтавка,
		                |	СУММА(ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя) КАК ЗначениеПоказателя,
		                |	ЗначенияВводимыхКадровыхПоказателей.Сотрудник КАК Сотрудник,
		                |	ЗначенияВводимыхКадровыхПоказателей.Период,
		                |	ЗначенияВводимыхКадровыхПоказателей.ПериодРаботники,
		                |	ЗначенияВводимыхКадровыхПоказателей.ПериодНачисления
		                |ПОМЕСТИТЬ ВТ_ЗначенияВведенныхКадровыхПоказателей
		                |ИЗ
		                |	ВТ_НеЗапрашиваемыеПриКадровыхПеремещениях КАК НеВводимыеПоказатели
		                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗначенияВводимыхКадровыхПоказателей КАК ЗначенияВводимыхКадровыхПоказателей
		                |		ПО НеВводимыеПоказатели.Показатель = ЗначенияВводимыхКадровыхПоказателей.Показатель
		                |ГДЕ
		                |	ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя <> 0
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	НеВводимыеПоказатели.Ссылка,
		                |	НеВводимыеПоказатели.НомерСтроки,
		                |	НеВводимыеПоказатели.Показатель,
		                |	НеВводимыеПоказатели.ПоказательВозможностьИзменения,
		                |	НеВводимыеПоказатели.ЭтоТарифнаяСтавка,
		                |	ЗначенияВводимыхКадровыхПоказателей.Сотрудник,
		                |	ЗначенияВводимыхКадровыхПоказателей.Период,
		                |	ЗначенияВводимыхКадровыхПоказателей.ПериодРаботники,
		                |	ЗначенияВводимыхКадровыхПоказателей.ПериодНачисления
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	СписокРаботников.Сотрудник КАК Сотрудник,
		                |	СписокРаботников.ФизЛицо КАК ФизЛицо,
		                |	СписокРаботников.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		                |	ПоказателиНачислений.ВидРасчета КАК ВидРасчета,
		                |	ПоказателиНачислений.ВидРасчета.Наименование КАК ВидРасчетаНаименование,
		                |	ПоказателиНачислений.ВидРасчета.СпособРасчета КАК СпособРасчета,
		                |	ПоказателиНачислений.ВидРасчета.КатегорияРасчета КАК КатегорияРасчета,
		                |	ПоказателиНачислений.ВидРасчета.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
		                |	ПоказателиНачислений.Показатель1 КАК ПоказательМотивации1,
		                |	ПоказателиНачислений.Показатель1ТипПоказателя КАК ТипПоказателя1,
		                |	ПоказателиНачислений.Показатель1ВидПоказателя КАК ВидПоказателя1,
		                |	ПоказателиНачислений.Показатель2 КАК ПоказательМотивации2,
		                |	ПоказателиНачислений.Показатель2ТипПоказателя КАК ТипПоказателя2,
		                |	ПоказателиНачислений.Показатель2ВидПоказателя КАК ВидПоказателя2,
		                |	ПоказателиНачислений.Показатель3 КАК ПоказательМотивации3,
		                |	ПоказателиНачислений.Показатель3ТипПоказателя КАК ТипПоказателя3,
		                |	ПоказателиНачислений.Показатель3ВидПоказателя КАК ВидПоказателя3,
		                |	ПоказателиНачислений.Показатель4 КАК ПоказательМотивации4,
		                |	ПоказателиНачислений.Показатель4ТипПоказателя КАК ТипПоказателя4,
		                |	ПоказателиНачислений.Показатель4ВидПоказателя КАК ВидПоказателя4,
		                |	ПоказателиНачислений.Показатель5 КАК ПоказательМотивации5,
		                |	ПоказателиНачислений.Показатель5ТипПоказателя КАК ТипПоказателя5,
		                |	ПоказателиНачислений.Показатель5ВидПоказателя КАК ВидПоказателя5,
		                |	ПоказателиНачислений.Показатель6 КАК ПоказательМотивации6,
		                |	ПоказателиНачислений.Показатель6ТипПоказателя КАК ТипПоказателя6,
		                |	ПоказателиНачислений.Показатель6ВидПоказателя КАК ВидПоказателя6
		                |ПОМЕСТИТЬ ВТ_СписокРаботников
		                |ИЗ
		                |	ВТ_Работники КАК СписокРаботников
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Показатели КАК ПоказателиНачислений
		                |		ПО (&ВидРасчета = ПоказателиНачислений.ВидРасчета)
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	СписокРаботников.Сотрудник,
		                |	СписокРаботников.ФизЛицо,
		                |	СписокРаботников.ВидРасчета,
		                |	МАКСИМУМ(ВЫБОР
		                |			КОГДА СписокРаботников.СпособРасчета В (&СписокУпрСпособовРасчета)
		                |					И СписокРаботников.ПоказательМотивации1 <> &ПустойПоказатель
		                |					И НЕ ЗначенияПоказателейСхемМотивации1.Значение ЕСТЬ NULL 
		                |				ТОГДА ЗначенияПоказателейСхемМотивации1.Значение
		                |			КОГДА СписокРаботников.СпособРасчета В (&СписокУпрСпособовРасчета)
		                |					И СписокРаботников.ПоказательМотивации1 <> &ПустойПоказатель
		                |					И НЕ ЗначенияВведенныхКадровыхПоказателей.Показатель ЕСТЬ NULL 
		                |					И ЗначенияВведенныхКадровыхПоказателей.Показатель <> &ПустойПоказатель
		                |					И ЗначенияВведенныхКадровыхПоказателей.НомерСтроки = 1
		                |				ТОГДА ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя
		                |			ИНАЧЕ 0
		                |		КОНЕЦ) КАК Показатель1,
		                |	МАКСИМУМ(ВЫБОР
		                |			КОГДА СписокРаботников.СпособРасчета В (&СписокУпрСпособовРасчета)
		                |					И СписокРаботников.ПоказательМотивации2 <> &ПустойПоказатель
		                |					И НЕ ЗначенияПоказателейСхемМотивации2.Значение ЕСТЬ NULL 
		                |				ТОГДА ЗначенияПоказателейСхемМотивации2.Значение
		                |			КОГДА СписокРаботников.СпособРасчета В (&СписокУпрСпособовРасчета)
		                |					И СписокРаботников.ПоказательМотивации2 <> &ПустойПоказатель
		                |					И НЕ ЗначенияВведенныхКадровыхПоказателей.Показатель ЕСТЬ NULL 
		                |					И ЗначенияВведенныхКадровыхПоказателей.Показатель <> &ПустойПоказатель
		                |					И ЗначенияВведенныхКадровыхПоказателей.НомерСтроки = 2
		                |				ТОГДА ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя
		                |			ИНАЧЕ 0
		                |		КОНЕЦ) КАК Показатель2,
		                |	МАКСИМУМ(ВЫБОР
		                |			КОГДА СписокРаботников.СпособРасчета В (&СписокУпрСпособовРасчета)
		                |					И СписокРаботников.ПоказательМотивации3 <> &ПустойПоказатель
		                |					И НЕ ЗначенияПоказателейСхемМотивации3.Значение ЕСТЬ NULL 
		                |				ТОГДА ЗначенияПоказателейСхемМотивации3.Значение
		                |			КОГДА СписокРаботников.СпособРасчета В (&СписокУпрСпособовРасчета)
		                |					И СписокРаботников.ПоказательМотивации3 <> &ПустойПоказатель
		                |					И НЕ ЗначенияВведенныхКадровыхПоказателей.Показатель ЕСТЬ NULL 
		                |					И ЗначенияВведенныхКадровыхПоказателей.Показатель <> &ПустойПоказатель
		                |					И ЗначенияВведенныхКадровыхПоказателей.НомерСтроки = 3
		                |				ТОГДА ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя
		                |			ИНАЧЕ 0
		                |		КОНЕЦ) КАК Показатель3,
		                |	МАКСИМУМ(ВЫБОР
		                |			КОГДА СписокРаботников.СпособРасчета В (&СписокУпрСпособовРасчета)
		                |					И СписокРаботников.ПоказательМотивации4 <> &ПустойПоказатель
		                |					И НЕ ЗначенияПоказателейСхемМотивации4.Значение ЕСТЬ NULL 
		                |				ТОГДА ЗначенияПоказателейСхемМотивации4.Значение
		                |			КОГДА СписокРаботников.СпособРасчета В (&СписокУпрСпособовРасчета)
		                |					И СписокРаботников.ПоказательМотивации4 <> &ПустойПоказатель
		                |					И НЕ ЗначенияВведенныхКадровыхПоказателей.Показатель ЕСТЬ NULL 
		                |					И ЗначенияВведенныхКадровыхПоказателей.Показатель <> &ПустойПоказатель
		                |					И ЗначенияВведенныхКадровыхПоказателей.НомерСтроки = 4
		                |				ТОГДА ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя
		                |			ИНАЧЕ 0
		                |		КОНЕЦ) КАК Показатель4,
		                |	МАКСИМУМ(ВЫБОР
		                |			КОГДА СписокРаботников.СпособРасчета В (&СписокУпрСпособовРасчета)
		                |					И СписокРаботников.ПоказательМотивации5 <> &ПустойПоказатель
		                |					И НЕ ЗначенияПоказателейСхемМотивации5.Значение ЕСТЬ NULL 
		                |				ТОГДА ЗначенияПоказателейСхемМотивации5.Значение
		                |			КОГДА СписокРаботников.СпособРасчета В (&СписокУпрСпособовРасчета)
		                |					И СписокРаботников.ПоказательМотивации5 <> &ПустойПоказатель
		                |					И НЕ ЗначенияВведенныхКадровыхПоказателей.Показатель ЕСТЬ NULL 
		                |					И ЗначенияВведенныхКадровыхПоказателей.Показатель <> &ПустойПоказатель
		                |					И ЗначенияВведенныхКадровыхПоказателей.НомерСтроки = 5
		                |				ТОГДА ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя
		                |			ИНАЧЕ 0
		                |		КОНЕЦ) КАК Показатель5,
		                |	МАКСИМУМ(ВЫБОР
		                |			КОГДА СписокРаботников.СпособРасчета В (&СписокУпрСпособовРасчета)
		                |					И СписокРаботников.ПоказательМотивации6 <> &ПустойПоказатель
		                |					И НЕ ЗначенияПоказателейСхемМотивации6.Значение ЕСТЬ NULL 
		                |				ТОГДА ЗначенияПоказателейСхемМотивации6.Значение
		                |			КОГДА СписокРаботников.СпособРасчета В (&СписокУпрСпособовРасчета)
		                |					И СписокРаботников.ПоказательМотивации6 <> &ПустойПоказатель
		                |					И НЕ ЗначенияВведенныхКадровыхПоказателей.Показатель ЕСТЬ NULL 
		                |					И ЗначенияВведенныхКадровыхПоказателей.Показатель <> &ПустойПоказатель
		                |					И ЗначенияВведенныхКадровыхПоказателей.НомерСтроки = 6
		                |				ТОГДА ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя
		                |			ИНАЧЕ 0
		                |		КОНЕЦ) КАК Показатель6
		                |ИЗ
		                |	ВТ_СписокРаботников КАК СписокРаботников
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияВведенныхКадровыхПоказателей КАК ЗначенияВведенныхКадровыхПоказателей
		                |		ПО СписокРаботников.Сотрудник = ЗначенияВведенныхКадровыхПоказателей.Сотрудник
		                |			И СписокРаботников.ВидРасчета = ЗначенияВведенныхКадровыхПоказателей.ВидРасчета
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации1
		                |		ПО СписокРаботников.ПоказательМотивации1 = ЗначенияПоказателейСхемМотивации1.Показатель
		                |			И (ВЫБОР
		                |				КОГДА СписокРаботников.ВидПоказателя1 = &ВидПоказателяИндивидуальный
		                |					ТОГДА СписокРаботников.Сотрудник = ЗначенияПоказателейСхемМотивации1.Сотрудник
		                |				КОГДА СписокРаботников.ВидПоказателя1 = &ВидПоказателяПоПодразделению
		                |					ТОГДА СписокРаботников.ПодразделениеОрганизации = ЗначенияПоказателейСхемМотивации1.Подразделение
		                |				ИНАЧЕ ИСТИНА
		                |			КОНЕЦ)
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации2
		                |		ПО СписокРаботников.ПоказательМотивации2 = ЗначенияПоказателейСхемМотивации2.Показатель
		                |			И (ВЫБОР
		                |				КОГДА СписокРаботников.ВидПоказателя2 = &ВидПоказателяИндивидуальный
		                |					ТОГДА СписокРаботников.Сотрудник = ЗначенияПоказателейСхемМотивации2.Сотрудник
		                |				КОГДА СписокРаботников.ВидПоказателя2 = &ВидПоказателяПоПодразделению
		                |					ТОГДА СписокРаботников.ПодразделениеОрганизации = ЗначенияПоказателейСхемМотивации2.Подразделение
		                |				ИНАЧЕ ИСТИНА
		                |			КОНЕЦ)
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации3
		                |		ПО СписокРаботников.ПоказательМотивации3 = ЗначенияПоказателейСхемМотивации3.Показатель
		                |			И (ВЫБОР
		                |				КОГДА СписокРаботников.ВидПоказателя3 = &ВидПоказателяИндивидуальный
		                |					ТОГДА СписокРаботников.Сотрудник = ЗначенияПоказателейСхемМотивации3.Сотрудник
		                |				КОГДА СписокРаботников.ВидПоказателя3 = &ВидПоказателяПоПодразделению
		                |					ТОГДА СписокРаботников.ПодразделениеОрганизации = ЗначенияПоказателейСхемМотивации3.Подразделение
		                |				ИНАЧЕ ИСТИНА
		                |			КОНЕЦ)
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации4
		                |		ПО СписокРаботников.ПоказательМотивации4 = ЗначенияПоказателейСхемМотивации4.Показатель
		                |			И (ВЫБОР
		                |				КОГДА СписокРаботников.ВидПоказателя4 = &ВидПоказателяИндивидуальный
		                |					ТОГДА СписокРаботников.Сотрудник = ЗначенияПоказателейСхемМотивации4.Сотрудник
		                |				КОГДА СписокРаботников.ВидПоказателя4 = &ВидПоказателяПоПодразделению
		                |					ТОГДА СписокРаботников.ПодразделениеОрганизации = ЗначенияПоказателейСхемМотивации4.Подразделение
		                |				ИНАЧЕ ИСТИНА
		                |			КОНЕЦ)
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации5
		                |		ПО СписокРаботников.ПоказательМотивации5 = ЗначенияПоказателейСхемМотивации5.Показатель
		                |			И (ВЫБОР
		                |				КОГДА СписокРаботников.ВидПоказателя5 = &ВидПоказателяИндивидуальный
		                |					ТОГДА СписокРаботников.Сотрудник = ЗначенияПоказателейСхемМотивации5.Сотрудник
		                |				КОГДА СписокРаботников.ВидПоказателя5 = &ВидПоказателяПоПодразделению
		                |					ТОГДА СписокРаботников.ПодразделениеОрганизации = ЗначенияПоказателейСхемМотивации5.Подразделение
		                |				ИНАЧЕ ИСТИНА
		                |			КОНЕЦ)
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации6
		                |		ПО СписокРаботников.ПоказательМотивации6 = ЗначенияПоказателейСхемМотивации6.Показатель
		                |			И (ВЫБОР
		                |				КОГДА СписокРаботников.ВидПоказателя6 = &ВидПоказателяИндивидуальный
		                |					ТОГДА СписокРаботников.Сотрудник = ЗначенияПоказателейСхемМотивации6.Сотрудник
		                |				КОГДА СписокРаботников.ВидПоказателя6 = &ВидПоказателяПоПодразделению
		                |					ТОГДА СписокРаботников.ПодразделениеОрганизации = ЗначенияПоказателейСхемМотивации6.Подразделение
		                |				ИНАЧЕ ИСТИНА
		                |			КОНЕЦ)
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	СписокРаботников.Сотрудник,
		                |	СписокРаботников.ФизЛицо,
		                |	СписокРаботников.ВидРасчета";

		РезультатЗапроса = Запрос.Выполнить();
		Результат = РезультатЗапроса.Выгрузить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ЗначениеВыбора.Вставить("Данные",Результат);		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // Автозаполнение()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("парамОрганизация" , Организация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПремииРаботниковОрганизаций.Дата,
	|	ПремииРаботниковОрганизаций.ПериодРегистрации,
	|	ПремииРаботниковОрганизаций.Организация,
	|	ВЫБОР
	|		КОГДА ПремииРаботниковОрганизаций.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ПремииРаботниковОрганизаций.Организация
	|		ИНАЧЕ ПремииРаботниковОрганизаций.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ПремииРаботниковОрганизаций.ВидРасчета,
	|	ПремииРаботниковОрганизаций.ЧислоМесяцев,
	|	ПремииРаботниковОрганизаций.ДатаНачалаБП КАК БазовыйПериодНачало,
	|	ПремииРаботниковОрганизаций.ДатаОкончанияБП КАК БазовыйПериодКонец,
	|	ПремииРаботниковОрганизаций.ПерерассчитываемыйДокумент КАК ПерерассчитываемыйДокумент,
	|	ПремииРаботниковОрганизаций.ПерерассчитываемыйДокумент.ПериодРегистрации КАК ПериодПерерасчета,
	|	ПремииРаботниковОрганизаций.ПерерассчитываемыйДокумент.Организация КАК ОрганизацияПерерасчета,
	|	ПремииРаботниковОрганизаций.Ссылка,
	|	ПремииРаботниковОрганизаций.ВидРасчета.ВидПремии КАК ВидПремии,
	|	ПремииРаботниковОрганизаций.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ПремииРаботниковОрганизаций.ВидРасчета.ВидДохода КАК ВидДохода,
	|	ПремииРаботниковОрганизаций.ВидРасчета.ОблагаетсяИПН КАК ОблагаетсяИПН,
	|	ПремииРаботниковОрганизаций.ВидРасчета.ОблагаетсяСН КАК ОблагаетсяСН,
	|	ПремииРаботниковОрганизаций.ВидРасчета.ОблагаетсяОПВ КАК ОблагаетсяОПВ,
	|	ПремииРаботниковОрганизаций.ВидРасчета.ОблагаетсяСО КАК ОблагаетсяСО,
	|	ПремииРаботниковОрганизаций.ВидРасчета.ОблагаетсяОППВ КАК ОблагаетсяОППВ,
	|	ПремииРаботниковОрганизаций.ВидРасчета.ОблагаетсяВОСМС КАК ОблагаетсяВОСМС,
	|	ПремииРаботниковОрганизаций.ВидРасчета.ОблагаетсяООСМС КАК ОблагаетсяООСМС,
	|	ПремииРаботниковОрганизаций.ВидРасчета.ОблагаетсяОПВР КАК ОблагаетсяОПВР,
	|	ЕСТЬNULL(УчетНалогообложенияПоВидамДоходов.УчитыватьИПН, ИСТИНА) КАК УчитыватьИПН,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьОПВ ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьОПВ
	|		КОГДА ЕСТЬNULL(ПремииРаботниковОрганизаций.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьОПВ,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьСН ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьСН
	|		КОГДА ЕСТЬNULL(ПремииРаботниковОрганизаций.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьСН,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьСО ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьСО
	|		КОГДА ЕСТЬNULL(ПремииРаботниковОрганизаций.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьСО,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьОППВ ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьОППВ
	|		КОГДА ЕСТЬNULL(ПремииРаботниковОрганизаций.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьОППВ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтавкиОСМССПоНалогоплательщику.СтавкаВзносы, ЕСТЬNULL(СтавкиОСМС.СтавкаВзносы,0)) > 0 И ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчетСрезПоследних.ОрганизацияЯвляетсяПлательщикомСН, ЛОЖЬ)
	|				И ПремииРаботниковОрганизаций.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|			ТОГДА ИСТИНА
	|		КОГДА &парамПериодРегистрации >= ДАТАВРЕМЯ(2020, 1, 1) И ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчетСрезПоследних.ОрганизацияЯвляетсяПлательщикомСН, ЛОЖЬ)
	|				И ПремииРаботниковОрганизаций.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(СтавкиОСМССПоНалогоплательщику.СтавкаВзносы, ЕСТЬNULL(СтавкиОСМС.СтавкаВзносы,0)) <= 0 И &парамПериодРегистрации < ДАТАВРЕМЯ(2020, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьВОСМС ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьВОСМС
	|		КОГДА ЕСТЬNULL(СтавкиОСМССПоНалогоплательщику.СтавкаВзносы, ЕСТЬNULL(СтавкиОСМС.СтавкаВзносы,0)) > 0 И ЕСТЬNULL(ПремииРаботниковОрганизаций.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		КОГДА &парамПериодРегистрации >= ДАТАВРЕМЯ(2020, 1, 1) И ЕСТЬNULL(ПремииРаботниковОрганизаций.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьВОСМС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтавкиОСМССПоНалогоплательщику.СтавкаОтчисления, ЕСТЬNULL(СтавкиОСМС.СтавкаОтчисления,0)) <= 0 И &парамПериодРегистрации < ДАТАВРЕМЯ(2020, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьООСМС ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьООСМС
	|		КОГДА ЕСТЬNULL(СтавкиОСМССПоНалогоплательщику.СтавкаОтчисления, ЕСТЬNULL(СтавкиОСМС.СтавкаОтчисления,0)) > 0 И ЕСТЬNULL(ПремииРаботниковОрганизаций.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		КОГДА &парамПериодРегистрации >= ДАТАВРЕМЯ(2020, 1, 1) И ЕСТЬNULL(ПремииРаботниковОрганизаций.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьООСМС,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьОПВР ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьОПВР
	|		КОГДА &парамПериодРегистрации >= ДАТАВРЕМЯ(2024, 1, 1) И ЕСТЬNULL(ПремииРаботниковОрганизаций.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьОПВР,
	|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчетСрезПоследних.РаспределятьНалогиПоСтруктурнымЕдиницам, ЛОЖЬ) КАК РаспределятьНалогиПоСтруктурнымЕдиницам,
	|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчетСрезПоследних.РаспределятьНалогиПоПодразделениямОрганизаций, ЛОЖЬ) КАК РаспределятьНалогиПоПодразделениямОрганизаций,
	|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчетСрезПоследних.ОрганизацияЯвляетсяВкладчикомОППВ, ЛОЖЬ) КАК ОрганизацияЯвляетсяВкладчикомОППВ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчетСрезПоследних.ОрганизацияЯвляетсяПлательщикомСН, ЛОЖЬ)
	|				И ПремииРаботниковОрганизаций.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|			ТОГДА ПремииРаботниковОрганизаций.Организация.ИндивидуальныйПредприниматель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИндивидуальныйПредприниматель
	|ИЗ
	|	Документ.ПремииРаботниковОрганизаций КАК ПремииРаботниковОрганизаций,
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамПериодРегистрации, Организация = &парамОрганизация) КАК УчетнаяПолитикаНалоговыйУчетСрезПоследних
	|		ПО ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетНалогообложенияПоВидамДоходов.СрезПоследних(&парамПериодРегистрации, ) КАК УчетНалогообложенияПоВидамДоходов
	|		ПО ПремииРаботниковОрганизаций.ВидРасчета.ВидДохода = УчетНалогообложенияПоВидамДоходов.ВидДохода 
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахОСМС.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = &парамОрганизация) КАК СтавкиОСМССПоНалогоплательщику
	|		ПО ПремииРаботниковОрганизаций.ВидРасчета.ВидДохода = СтавкиОСМССПоНалогоплательщику.ВидДохода
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахОСМС.СрезПоследних(&парамПериодРегистрации, Налогоплательщик = &парамПустаяОрганизация) КАК СтавкиОСМС
	|		ПО ПремииРаботниковОрганизаций.ВидРасчета.ВидДохода = СтавкиОСМС.ВидДохода
	|ГДЕ
	|	ПремииРаботниковОрганизаций.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "Начисления" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоНачисления(ВыборкаПоШапкеДокумента, Перерасчет = Ложь, Сотрудники = НеОпределено)

	Запрос = Новый Запрос;
	МестоРаботыТекст="";
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", ВыборкаПоШапкеДокумента.Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("НачалоПериодаРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("КонецПериодаРегистрации", КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации));
	Запрос.УстановитьПараметр("ДатаРегистрации", ?(Дата > КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации),КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации),?(Дата < ВыборкаПоШапкеДокумента.ПериодРегистрации,ВыборкаПоШапкеДокумента.ПериодРегистрации,Дата)));
	Запрос.УстановитьПараметр("парамСотрудники", Сотрудники);
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями И Не ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда
	
		ПериодыСотрудникаТекст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ 
		|	Сотрудник,
		|	&НачалоПериодаРегистрации КАК Период
		|ИЗ 
		|	Документ.ПремииРаботниковОрганизаций.Начисления 
		|ГДЕ 
		|	Ссылка = &ДокументСсылка
		|	" + ?(Сотрудники <> Неопределено, " И Сотрудник В (&парамСотрудники)", "");
		
		
		МестоРаботыТекст = ПроведениеРасчетов.СформироватьТекстЗапросаСтруктурныеЕдиницы(ПериодыСотрудникаТекст, 
																		ВыборкаПоШапкеДокумента.Организация,
																		Запрос);
		МестоРаботыТекст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ *  
							|	ПОМЕСТИТЬ МестоРаботыВТ
							|	ИЗ ("+МестоРаботыТекст+") КАК МестаРабот;";
		МестоРаботыВТ="МестоРаботыВТ";
	
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ОрганизацияЯвляетсяВкладчикомОППВ Тогда
		
		Если Запрос.МенеджерВременныхТаблиц = Неопределено Тогда
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("БазовыйПериодКонец", ВыборкаПоШапкеДокумента.БазовыйПериодКонец);
		
		ПериодыНачисленийТекст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	Начисления.Сотрудник,
			|	&БазовыйПериодКонец КАК ПериодНачисления
			|ПОМЕСТИТЬ ВТ_ПериодыНачислений
			|ИЗ
			|	Документ.ПремииРаботниковОрганизаций.Начисления КАК Начисления
			|ГДЕ
			|	Начисления.Ссылка = &ДокументСсылка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Начисления.Сотрудник,
			|	ПериодНачисления";
			
		Запрос.Текст = ПериодыНачисленийТекст;
		Запрос.Выполнить();
		
		ПериодыНачисленийТекст = "ВТ_ПериодыНачислений";
		
		ПериодыИсчисленияОППВТекст = ПроведениеРасчетов.СформироватьТекстЗапросаПериодыИсчисленияОППВ(ПериодыНачисленийТекст, ВыборкаПоШапкеДокумента.Организация, Запрос);
		
	КонецЕсли;

	Запрос.Текст = МестоРаботыТекст+
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтрокиНачисления.НомерСтроки КАК НомерСтроки,
	|	СтрокиНачисления.Показатель1,
	|	СтрокиНачисления.Показатель2,
	|	СтрокиНачисления.Показатель3,
	|	СтрокиНачисления.Показатель4,	
	|	СтрокиНачисления.Показатель5,
	|	СтрокиНачисления.Показатель6,	
	|	СтрокиНачисления.ДополнительныеДанные,
	|	СтрокиНачисления.Сотрудник,
	|	СтрокиНачисления.Сотрудник.Наименование КАК СотрудникНаименование,
	|	СтрокиНачисления.Сотрудник.ФизЛицо КАК ФизЛицо,
	|	ВЫБОР
	|		КОГДА ДанныеПоРаботникуПослеРегистрации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|			ТОГДА ДанныеПоРаботникуПослеРегистрации.ПодразделениеОрганизации
	|		ИНАЧЕ ДанныеПоРаботникуДоРегистрации.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ДанныеПоРаботникуДоРегистрации.ПричинаИзмененияСостояния,
	|	ДанныеПоРаботникуДоРегистрации.Период КАК ДатаПоследнегоДвиженияПоРаботнику,
	|	СтрокиНачисления.Результат,
	|	СтрокиНачисления.Сторно,
	|	СтрокиНачисления.СуммаВычетовДоходовОтОбратного,
	|	ВЫБОР
	|		КОГДА ДанныеПоРаботникуДоРегистрации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			ТОГДА ВЫБОР
	|					КОГДА ДОБАВИТЬКДАТЕ(ДанныеПоРаботникуДоРегистрации.Период, ДЕНЬ, -1) < &НачалоПериодаРегистрации
	|						ТОГДА &ДатаРегистрации
	|					ИНАЧЕ ДОБАВИТЬКДАТЕ(ДанныеПоРаботникуДоРегистрации.Период, ДЕНЬ, -1)
	|				КОНЕЦ
	|		КОГДА ДанныеПоРаботникуПослеРегистрации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеПоРаботникуПослеРегистрации.Период > &КонецПериодаРегистрации
	|						ТОГДА &ДатаРегистрации
	|					ИНАЧЕ ДанныеПоРаботникуПослеРегистрации.Период
	|				КОНЕЦ
	|		ИНАЧЕ &ДатаРегистрации
	|	КОНЕЦ КАК ДатаРегистрации,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА СтрокиНачисления.Ссылка.СпособОтраженияВБухучете
	|		ИНАЧЕ СтрокиНачисления.СпособОтраженияВБухучете
	|	КОНЕЦ КАК СпособОтраженияВБухучете,
	|	СтрокиНачисления.Авторасчет,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.Сторно
	|			ТОГДА СтрокиНачисления.Ссылка.ПерерассчитываемыйДокумент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СторнируемыйДокумент,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.Сотрудник.Организация = &ГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации";
	
	Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам И мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
	Запрос.Текст = Запрос.Текст + ",
	|	ВЫБОР
	|		КОГДА  ВЫБОР
	|					КОГДА ДанныеПоРаботникуПослеРегистрации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|						ТОГДА ДанныеПоРаботникуПослеРегистрации.ПодразделениеОрганизации.ЯвляетсяСтруктурнымПодразделением
	|					ИНАЧЕ ДанныеПоРаботникуДоРегистрации.ПодразделениеОрганизации.ЯвляетсяСтруктурнымПодразделением
	|				КОНЕЦ
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеПоРаботникуПослеРегистрации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|						ТОГДА ДанныеПоРаботникуПослеРегистрации.ПодразделениеОрганизации
	|					ИНАЧЕ ДанныеПоРаботникуДоРегистрации.ПодразделениеОрганизации
	|				КОНЕЦ
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК СтруктурнаяЕдиница";
	ИначеЕсли мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
	Запрос.Текст = Запрос.Текст + ",
	|	ВЫБОР
	|		КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
	|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК СтруктурнаяЕдиница";
	Иначе
	Запрос.Текст = Запрос.Текст + ",
	|	&Организация КАК СтруктурнаяЕдиница";
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ОрганизацияЯвляетсяВкладчикомОППВ Тогда
	Запрос.Текст = Запрос.Текст + ",
	|	ПериодыИсчисленияОППВ.ИсчислятьОППВ КАК ИсчислятьОППВ
	|";
	Иначе
	Запрос.Текст = Запрос.Текст + ",
	|	ЛОЖЬ КАК ИсчислятьОППВ
	|";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|ИЗ
	|	Документ.ПремииРаботниковОрганизаций.Начисления КАК СтрокиНачисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&ДатаРегистрации,
	|			Организация = &ГоловнаяОрганизация
	|		    И Сотрудник В
	|		        (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		            ПремииРаботниковОрганизацииНачисления.Сотрудник
	|		        ИЗ
	|		            Документ.ПремииРаботниковОрганизаций.Начисления КАК ПремииРаботниковОрганизацииНачисления
	|		        ГДЕ
	|		            ПремииРаботниковОрганизацииНачисления.Ссылка = &ДокументСсылка)) КАК ДанныеПоРаботникуДоРегистрации
	|		ПО ДанныеПоРаботникуДоРегистрации.Сотрудник = СтрокиНачисления.Сотрудник
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПервых(
	|			&ДатаРегистрации,
	|			Организация = &ГоловнаяОрганизация
	|		    И Сотрудник В
	|		        (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		            ПремииРаботниковОрганизацииНачисления.Сотрудник
	|		        ИЗ
	|		            Документ.ПремииРаботниковОрганизаций.Начисления КАК ПремииРаботниковОрганизацииНачисления
	|		        ГДЕ
	|		            ПремииРаботниковОрганизацииНачисления.Ссылка = &ДокументСсылка)) КАК ДанныеПоРаботникуПослеРегистрации
	|		ПО ДанныеПоРаботникуПослеРегистрации.Сотрудник = СтрокиНачисления.Сотрудник";
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями И Не ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда
	Запрос.Текст = Запрос.Текст + "
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + МестоРаботыВТ + " КАК МестоРаботы
	|		ПО СтрокиНачисления.Сотрудник = МестоРаботы.Сотрудник
	|";
	КонецЕсли;
	
	Если ВыборкаПоШапкеДокумента.ОрганизацияЯвляетсяВкладчикомОППВ Тогда
	Запрос.Текст = Запрос.Текст + "
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПериодыИсчисленияОППВТекст + " КАК ПериодыИсчисленияОППВ
	|		ПО СтрокиНачисления.Сотрудник = ПериодыИсчисленияОППВ.Сотрудник
	|";
	КонецЕсли;
		
	Запрос.Текст = Запрос.Текст + "
	|ГДЕ
	|	СтрокиНачисления.Ссылка = &ДокументСсылка
	|	" + ?(Сотрудники <> Неопределено, " И СтрокиНачисления.Сотрудник В (&парамСотрудники)", "") + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоНачисления()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении,
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	//  Организация
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не указана организация, по которой выполняются начисления!", Отказ, Заголовок);
	КонецЕсли;

	//  ВидРасчета
	ЕстьВидРасчета = ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ВидРасчета);
	Если Не ЕстьВидРасчета Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не указан вид премии!", Отказ, Заголовок);
	КонецЕсли;

	//  Число месяцев
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ЧислоМесяцев) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не указано число месяцев за которые начисляется премия!", Отказ, Заголовок);
	КонецЕсли;

	// соответствие периодов документа и перерассчитываемого документа
	Если ВыборкаПоШапкеДокумента.ПериодПерерасчета <> null 
		и ВыборкаПоШапкеДокумента.ПериодРегистрации <= ВыборкаПоШапкеДокумента.ПериодПерерасчета Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Период документа должен быть больше периода перерассчитываемого документа!", Отказ, Заголовок);
	КонецЕсли;
	// соответствие организаций документа и перерассчитываемого документа
	Если ВыборкаПоШапкеДокумента.ОрганизацияПерерасчета <> null 
		и ВыборкаПоШапкеДокумента.Организация <> ВыборкаПоШапкеДокумента.ОрганизацияПерерасчета Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Организация, заданная для документа, должна совпадать с организацией перерассчитываемого документа!", Отказ, Заголовок);
	КонецЕсли;

	Если ЕстьВидРасчета Тогда
		
		Если ВыборкаПоШапкеДокумента.ВидПремии = Перечисления.ВидыПремии.НеПремия Тогда
			
			ОбщегоНазначения.ОшибкаПриПроведении("В качестве премии указан вид расчета, не описанный как премия!", Отказ, Заголовок);
			
		Иначе
			
			ЕстьДатаНачалаБП = ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.БазовыйПериодНачало);
			ЕстьДатаОкончанияБП = ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.БазовыйПериодКонец);
			
			Если Не ЕстьДатаНачалаБП Тогда
				ОбщегоНазначения.ОшибкаПриПроведении("Не указана дата начала базового периода!", Отказ, Заголовок);
			КонецЕсли;
				
			Если Не ЕстьДатаОкончанияБП Тогда
				ОбщегоНазначения.ОшибкаПриПроведении("Не указана дата окончания базового периода!", Отказ, Заголовок);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ВыборкаПоШапкеДокумента.ВидПремии = Перечисления.ВидыПремии.ГодоваяПремия Тогда
			
			Если ЕстьДатаНачалаБП И ЕстьДатаОкончанияБП Тогда
				
				Если Год(ВыборкаПоШапкеДокумента.БазовыйПериодНачало) <> Год(ВыборкаПоШапкеДокумента.БазовыйПериодКонец) Тогда
					
					ОбщегоНазначения.ОшибкаПриПроведении("Для годовой премии дата начала и окончания базового периода должны быть в пределах одного года!", Отказ, Заголовок)
					
				КонецЕсли; 
				
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "Начисления" документа.
// Если какой-то из реквизтов, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса к ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса к ТЧ документа, 
//  Отказ 						- флаг отказа в проведении,
//	Заголовок					- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Начисления"": ";
									
	// Организация сотрудника должна совпадать с организацией документа
	Если ВыборкаПоСтрокамДокумента.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "организация документа не соответствует организации, указанной в карточке сотрудника!", Отказ, Заголовок);
	КонецЕсли;
	
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;

	// Предупредим пользователя, если начисления делаются уже уволенном работнику
	Если ВыборкаПоСтрокамДокумента.ПричинаИзмененияСостояния = Перечисления.ПричиныИзмененияСостояния.Увольнение Тогда
		ДатаНачала = ВыборкаПоСтрокамДокумента.ДатаРегистрации;

		СтрокаПродолжениеСообщенияОбОшибке = "на " + Формат(ДатаНачала, "ДЛФ=DD") + " сотрудник " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " уже уволен (с " + Формат(ВыборкаПоСтрокамДокумента.ДатаПоследнегоДвиженияПоРаботнику, "ДЛФ=DD") + ")!";
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + СтрокаПродолжениеСообщенияОбОшибке, Ложь, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиНачисления()

// По строке выборок из результатов запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента					- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента				- спозиционированная на определеной строке выборка 
//				  							  из результата запроса к ТЧ документа, 
//  СтруктураПроведенияПоРегистрамРасчета	- структура, содержащая имена регистров 
//              	                          расчета по которым надо проводить документ,
//  СтруктураПараметров                  	- структура параметров проведения,
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамРасчета(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента)

	Движение = Движения.ДополнительныеНачисленияРаботниковОрганизаций.Добавить();

	// Свойства
	Движение.ПериодРегистрации    	= ВыборкаПоСтрокамДокумента.ДатаРегистрации;
	Движение.ВидРасчета				= ВыборкаПоШапкеДокумента.ВидРасчета;
	Движение.БазовыйПериодНачало	= ВыборкаПоШапкеДокумента.БазовыйПериодНачало;
	Движение.БазовыйПериодКонец		= КонецДня(ВыборкаПоШапкеДокумента.БазовыйПериодКонец);
	Движение.Сторно					= ВыборкаПоСтрокамДокумента.Сторно;

	// Измерения
	Движение.Сотрудник              = ВыборкаПоСтрокамДокумента.Сотрудник;
	Движение.ФизЛицо                = ВыборкаПоСтрокамДокумента.ФизЛицо;
	Движение.Организация			= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;

	// Ресурсы
	Движение.Результат				= ВыборкаПоСтрокамДокумента.Результат;
	
	// Реквизиты
	Движение.Показатель1				= ВыборкаПоСтрокамДокумента.Показатель1;
	Движение.Показатель2				= ВыборкаПоСтрокамДокумента.Показатель2;
	Движение.Показатель3				= ВыборкаПоСтрокамДокумента.Показатель3;
	Движение.Показатель4				= ВыборкаПоСтрокамДокумента.Показатель4;
	Движение.Показатель5				= ВыборкаПоСтрокамДокумента.Показатель5;
	Движение.Показатель6				= ВыборкаПоСтрокамДокумента.Показатель6;
	Движение.ЧислоМесяцев           	= ВыборкаПоШапкеДокумента.ЧислоМесяцев;
	Движение.ПодразделениеОрганизации 	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
	Движение.ОбособленноеПодразделение 	= ВыборкаПоШапкеДокумента.Организация;
	Движение.СпособОтраженияВБухучете 	= ВыборкаПоСтрокамДокумента.СпособОтраженияВБухучете;
	Движение.ДополнительныеДанные		= ВыборкаПоСтрокамДокумента.ДополнительныеДанные;
	Движение.Авторасчет 				= ВыборкаПоСтрокамДокумента.Авторасчет;
	Движение.СторнируемыйДокумент		= ВыборкаПоСтрокамДокумента.СторнируемыйДокумент;
	Движение.СуммаВычетовДоходовОтОбратного = ВыборкаПоСтрокамДокумента.СуммаВычетовДоходовОтОбратного;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамРасчета

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                  - выборка из результата запроса по шапке документа
//  СтруктураПроведенияПоРегистрамНакопления - структура, содержащая имена регистров 
//                                             накопления по которым надо проводить документ
//  СтруктураПараметров                      - структура параметров проведения.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, ИсчислениеНалоговСтруктурныхЕдиниц)
	
    Если ВыборкаПоСтрокамДокумента.Результат = 0 Тогда
    	// нулевые суммы не записываем
    	Возврат;
    КонецЕсли;

    Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик 		= ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница,
																					ВыборкаПоШапкеДокумента.Организация,
																					ИсчислениеНалоговСтруктурныхЕдиниц,
																					Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
    КонецЕсли;

	////////////////////////////////
	// ИПНСведенияОДоходах
	
	Если ВыборкаПоШапкеДокумента.УчитыватьИПН Тогда
		
		Движение = Движения.ИПНСведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоШапкеДокумента.ОблагаетсяИПН;
		Движение.ВидРасчета			= ВыборкаПоШапкеДокумента.ВидРасчета;
		Движение.ВидДохода			= ВыборкаПоШапкеДокумента.ВидДохода;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;
															
	КонецЕсли;
	
	////////////////////////////////
	// СНСведенияОДоходах
	
	Если ВыборкаПоШапкеДокумента.УчитыватьСН Тогда
		
		Движение = Движения.СНСведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоШапкеДокумента.ОблагаетсяСН;
		Движение.ВидРасчета			= ВыборкаПоШапкеДокумента.ВидРасчета;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;

	КонецЕсли;
	
	////////////////////////////////
	// ОПВСведенияОДоходах
	
	Если ВыборкаПоШапкеДокумента.УчитыватьОПВ Тогда 
		
		Движение = Движения.ОПВСведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоШапкеДокумента.ОблагаетсяОПВ;
		Движение.ВидРасчета			= ВыборкаПоШапкеДокумента.ВидРасчета;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;

	КонецЕсли;
	
	////////////////////////////////
	// СОСведенияОДоходах
	
	Если ВыборкаПоШапкеДокумента.УчитыватьСО Тогда
		
		Движение = Движения.СОСведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоШапкеДокумента.ОблагаетсяСО;
		Движение.ВидРасчета			= ВыборкаПоШапкеДокумента.ВидРасчета;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;
	
	КонецЕсли;
	
	
	////////////////////////////////
	// ОППВСведенияОДоходах
	
	Если ВыборкаПоШапкеДокумента.ОрганизацияЯвляетсяВкладчикомОППВ 
		И ВыборкаПоСтрокамДокумента.ИсчислятьОППВ
		И ВыборкаПоШапкеДокумента.УчитыватьОППВ Тогда
		
		Движение = Движения.ОППВСведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоШапкеДокумента.ОблагаетсяОППВ;
		Движение.ВидРасчета			= ВыборкаПоШапкеДокумента.ВидРасчета;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;
	
	КонецЕсли;
	
	////////////////////////////////
	// ВОСМССведенияОДоходах
	
	Если ВыборкаПоШапкеДокумента.УчитыватьВОСМС  Тогда 

		Движение = Движения.ВОСМССведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоШапкеДокумента.ОблагаетсяВОСМС;
		Движение.ВидРасчета			= ВыборкаПоШапкеДокумента.ВидРасчета;
		Движение.ВидДохода				= ВыборкаПоШапкеДокумента.ВидДохода;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;

	КонецЕсли;
	
	////////////////////////////////
	// ООСМССведенияОДоходах
	
	Если ВыборкаПоШапкеДокумента.УчитыватьООСМС
		И НЕ ВыборкаПоСтрокамДокумента.ФизЛицо = ВыборкаПоШапкеДокумента.ИндивидуальныйПредприниматель Тогда 
		
		Движение = Движения.ООСМССведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоШапкеДокумента.ОблагаетсяООСМС;
		Движение.ВидРасчета			= ВыборкаПоШапкеДокумента.ВидРасчета;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;
	
	КонецЕсли;
	
	////////////////////////////////
	// ОПВРСведенияОДоходах
	
	Если ВыборкаПоШапкеДокумента.УчитыватьОПВР Тогда
		
		Движение = Движения.ОПВРСведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоШапкеДокумента.ОблагаетсяОПВР;
		Движение.ВидРасчета			= ВыборкаПоШапкеДокумента.ВидРасчета;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;
	
	КонецЕсли;
		
	////////////////////////////////
	// ВзаиморасчетыСРаботникамиОрганизаций
	
	Движение = Движения.ВзаиморасчетыСРаботникамиОрганизаций.мТаблицаДвижений.Добавить();
	
	//Свойства
	Движение.ВидДвижения	= ВидДвиженияНакопления.Приход;
	Движение.Период 		= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
	
	// Измерения
	Движение.ФизЛицо				= ВыборкаПоСтрокамДокумента.ФизЛицо;
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Движение.Налогоплательщик	= Налогоплательщик;
	Иначе
		Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
	КонецЕсли;
	Движение.СтруктурнаяЕдиница		= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
	Движение.ПериодВзаиморасчетов	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
	Движение.Организация			= ВыборкаПоШапкеДокумента.Организация;
	Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
		Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
	КонецЕсли;
	
	// Ресурсы
	Движение.СуммаВзаиморасчетов	= ВыборкаПоСтрокамДокумента.Результат;
	
	// Реквизиты
	Движение.ВидСтроки				= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамНакопления()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ПередЗаписью"
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(Начисления);

	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ);
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, Режим)
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);

	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект) Тогда
		Возврат
	КонецЕсли;
	
	// создадим таблицы движений по структуре совпадающие со структрой регистров накопления
	МассивНаборыЗаписей = Новый Массив();
	МассивНаборыЗаписей.Добавить(Движения.ВзаиморасчетыСРаботникамиОрганизаций);
	МассивНаборыЗаписей.Добавить(Движения.ИПНСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ОПВСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.СНСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.СОСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ОППВСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ВОСМССведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ООСМССведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ОПВРСведенияОДоходах);
	
	Для Каждого НаборЗаписей Из МассивНаборыЗаписей Цикл
		НаборЗаписей.мТаблицаДвижений = НаборЗаписей.ВыгрузитьКолонки();
	КонецЦикла;
	

	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	УчетнаяПолитикаПоПерсоналуОрганизации = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация];

	ИсчислениеНалоговСтруктурныхЕдиниц = глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц");

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда

			// получим реквизиты табличной части
			РезультатЗапросаПоНачисления = СформироватьЗапросПоНачисления(ВыборкаПоШапкеДокумента);
			ВыборкаПоНачислениям = РезультатЗапросаПоНачисления.Выбрать();

			Пока ВыборкаПоНачислениям.Следующий() Цикл

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям, Отказ, Заголовок);

				Если НЕ Отказ Тогда

					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуВДвиженияПоРегистрамРасчета(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям);
					ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям, ИсчислениеНалоговСтруктурныхЕдиниц);

				КонецЕсли;

			КонецЦикла;

			Если НЕ Отказ Тогда
				// свернем таблицы регистров накопления и запишем их в наборы записей
				Для Каждого НаборЗаписей Из МассивНаборыЗаписей Цикл
					ОбщегоНазначения.СвернутьТаблицуДвиженийРегистраНакопления(НаборЗаписей);
					НаборЗаписей.мТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
					НаборЗаписей.Загрузить(НаборЗаписей.мТаблицаДвижений);
				Конеццикла;
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;

КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события "ПриКопировании"
//
Процедура ПриКопировании(ОбъектКопирования)
	
	ПерерассчитываемыйДокумент = Неопределено;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ 

мПоддержкаРаботыСоСтруктурнымиПодразделениями = Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить();

