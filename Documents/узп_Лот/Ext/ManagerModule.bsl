#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//// анализ промежуточного исполнения
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ЗаказПоставщику";
	//КомандаПечати.Представление = НСтр("ru = 'Заказ поставщику'");
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	//КомандаПечати.Порядок = 1;
	//
	Возврат;	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	//Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаказПоставщику") Тогда
	//	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
	//		КоллекцияПечатныхФорм,
	//		"ЗаказПоставщику",
	//		НСтр("ru = 'Заказ поставщику'"),
	//		ПечатьЗаказПоставщику(МассивОбъектов, ОбъектыПечати),
	//		,
	//		"Документ.узп_ЗаказПоставщику.ПФ_MXL_ЗаказПоставщику");
	//КонецЕсли;
	//
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

Процедура ПолучитьСписокОценок2(Лот, Оценки) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Лот);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЕСТЬNULL(узп_ОценкаПоставщиков.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК КонтрагентОценка,
	               |	узп_ОценкаПоставщиков.Ссылка КАК ОценкаПоставщика,
	               |	узп_РегистрацияЦенПоставщиков.Ссылка КАК РегистрацияЦен,
	               |	ЕСТЬNULL(узп_РегистрацияЦенПоставщиков.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК КонтрагентРегистрация,
	               |	узп_ОценкаПоставщиков.Проведен КАК ОценкаПроведен,
	               |	узп_РегистрацияЦенПоставщиков.Проведен КАК РегистрацияПроведен
	               |ПОМЕСТИТЬ ВТ
	               |ИЗ
	               |	Документ.узп_ОценкаПоставщиков КАК узп_ОценкаПоставщиков
	               |		ПОЛНОЕ СОЕДИНЕНИЕ Документ.узп_РегистрацияЦенПоставщиков КАК узп_РегистрацияЦенПоставщиков
	               |		ПО узп_ОценкаПоставщиков.Контрагент = узп_РегистрацияЦенПоставщиков.Контрагент
	               |			И узп_ОценкаПоставщиков.Лот = узп_РегистрацияЦенПоставщиков.ДокументОснование
	               |ГДЕ
	               |	&Ссылка <> ЗНАЧЕНИЕ(Документ.узп_Лот.ПустаяСсылка)
	               |	И (узп_ОценкаПоставщиков.Лот = &Ссылка
	               |			ИЛИ узп_РегистрацияЦенПоставщиков.ДокументОснование = &Ссылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ.ОценкаПоставщика КАК ОценкаПоставщика,
	               |	ВТ.РегистрацияЦен КАК РегистрацияЦен,
	               |	ВЫБОР
	               |		КОГДА ВТ.КонтрагентОценка = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	               |			ТОГДА ВТ.КонтрагентРегистрация
	               |		ИНАЧЕ ВТ.КонтрагентОценка
	               |	КОНЕЦ КАК Контрагент,
	               |	ВТ.ОценкаПроведен,
	               |	ВТ.РегистрацияПроведен
	               |ИЗ
	               |	ВТ КАК ВТ";
				   
	Оценки.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ПолучитьСписокОценок1(Лот, Оценки) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Лот);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЕСТЬNULL(узп_ОценкаПоставщиков.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Контрагент,
	               |	узп_ОценкаПоставщиков.Ссылка КАК ОценкаПоставщика,
	               |	узп_ОценкаПоставщиков.Проведен КАК ОценкаПроведен
	               |ИЗ
	               |	Документ.узп_ОценкаПоставщиков КАК узп_ОценкаПоставщиков
	               |ГДЕ
	               |	&Ссылка <> ЗНАЧЕНИЕ(Документ.узп_Лот.ПустаяСсылка)
	               |	И узп_ОценкаПоставщиков.Лот = &ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	узп_РегистрацияЦенПоставщиков.Ссылка КАК РегистрацияЦен,
	               |	ЕСТЬNULL(узп_РегистрацияЦенПоставщиков.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Контрагент,
	               |	узп_РегистрацияЦенПоставщиков.Проведен КАК РегистрацияПроведен
	               |ИЗ
	               |	Документ.узп_РегистрацияЦенПоставщиков КАК узп_РегистрацияЦенПоставщиков
	               |ГДЕ
	               |	&Ссылка <> ЗНАЧЕНИЕ(Документ.узп_Лот.ПустаяСсылка)
	               |	И узп_РегистрацияЦенПоставщиков.ДокументОснование = &Ссылка";
	Результат = Запрос.ВыполнитьПакет();
	ТЧОценки = Результат[0].Выгрузить();
	ТЧЦены = Результат[1].Выгрузить();
	
	ТЧВрем = Результат[0].Выгрузить(,"Контрагент");
	Для Каждого СтрокаТЧ из ТЧЦены Цикл
		НоваяСтрока = ТЧВрем.Добавить();
		НоваяСтрока.Контрагент = СтрокаТЧ.Контрагент;
	КонецЦикла;
	ТЧВрем.Свернуть("Контрагент");
	ТЧВрем.Сортировать("Контрагент");
	СписокКонтрагентов = ТЧВрем.ВыгрузитьКолонку("Контрагент");
	
	Для каждого СтрокаТЧ Из СписокКонтрагентов Цикл
		НайденныеОценки = ТЧОценки.НайтиСтроки(Новый Структура("контрагент",СтрокаТЧ));
		НайденныеЦены = ТЧЦены.НайтиСтроки(Новый Структура("контрагент",СтрокаТЧ));
		
	КонецЦикла;
	
	
	ТЧВрем = Оценки.Выгрузить();
	ТЧВрем.Очистить();
	
	//Оценки.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ПолучитьСписокОценок3(Лот, Оценки) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Лот);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЕСТЬNULL(узп_ОценкаПоставщиков.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Контрагент,
	               |	узп_ОценкаПоставщиков.Ссылка КАК ОценкаПоставщика,
	               |	NULL КАК РегистрацияЦен,
	               |	узп_ОценкаПоставщиков.Проведен КАК ОценкаПроведен,
	               |	NULL КАК РегистрацияПроведен
	               |ПОМЕСТИТЬ ВТ
	               |ИЗ
	               |	Документ.узп_ОценкаПоставщиков КАК узп_ОценкаПоставщиков
	               |ГДЕ
	               |	&Ссылка <> ЗНАЧЕНИЕ(Документ.узп_Лот.ПустаяСсылка)
	               |	И узп_ОценкаПоставщиков.Лот = &Ссылка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЕСТЬNULL(узп_РегистрацияЦенПоставщиков.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)),
	               |	NULL,
	               |	узп_РегистрацияЦенПоставщиков.Ссылка,
	               |	NULL,
	               |	узп_РегистрацияЦенПоставщиков.Проведен
	               |ИЗ
	               |	Документ.узп_РегистрацияЦенПоставщиков КАК узп_РегистрацияЦенПоставщиков
	               |ГДЕ
	               |	&Ссылка <> ЗНАЧЕНИЕ(Документ.узп_Лот.ПустаяСсылка)
	               |	И узп_РегистрацияЦенПоставщиков.ДокументОснование = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ.Контрагент,
	               |	ВТ.ОценкаПоставщика КАК ОценкаПоставщика,
	               |	ВТ.РегистрацияЦен КАК РегистрацияЦен,
	               |	ВТ.ОценкаПроведен,
	               |	ВТ.РегистрацияПроведен
	               |ИЗ
	               |	ВТ КАК ВТ";
	//ТЧ = Запрос.Выполнить().Выгрузить();
	СписокКонтрагентов = Запрос.Выполнить().Выгрузить();
	СписокКонтрагентов.Свернуть("Контрагент");
	ВремТЧ = Запрос.Выполнить().Выгрузить();
	ТЧ = Запрос.Выполнить().Выгрузить();
	//ТЧ.Очистить();
	//ТЧ.Свернуть("Контрагент, ОценкаПоставщика, ОценкаПроведен");
	Для Каждого Контрагент Из СписокКонтрагентов Цикл
		НайденныеСтроки = ВремТЧ.НайтиСтроки(Новый Структура("Контрагент",Контрагент));
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			//НоваяСтрока = ТЧ.Добавить();
			//НоваяСтрока
		КонецЦикла;
		
	КонецЦикла;
	
	//ТЧ.Свернуть("Контрагент", "ОценкаПоставщика, РегистрацияЦен, ОценкаПроведен, РегистрацияПроведен");
	Оценки.Загрузить(ТЧ);
	//Оценки.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ПолучитьСписокОценок(Лот, Оценки) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Лот);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЕСТЬNULL(узп_ОценкаПоставщиков.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК КонтрагентОценка,
	               |	узп_ОценкаПоставщиков.Ссылка КАК ОценкаПоставщика,
	               |	узп_РегистрацияЦенПоставщиков.Ссылка КАК РегистрацияЦен,
	               |	ЕСТЬNULL(узп_РегистрацияЦенПоставщиков.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК КонтрагентРегистрация,
	               |	узп_ОценкаПоставщиков.Проведен КАК ОценкаПроведен,
	               |	узп_РегистрацияЦенПоставщиков.Проведен КАК РегистрацияПроведен
	               |ПОМЕСТИТЬ ВТ
	               |ИЗ
	               |	Документ.узп_ОценкаПоставщиков КАК узп_ОценкаПоставщиков
	               |		ПОЛНОЕ СОЕДИНЕНИЕ Документ.узп_РегистрацияЦенПоставщиков КАК узп_РегистрацияЦенПоставщиков
	               |		ПО узп_ОценкаПоставщиков.Контрагент = узп_РегистрацияЦенПоставщиков.Контрагент
	               |			И узп_ОценкаПоставщиков.Лот = узп_РегистрацияЦенПоставщиков.ДокументОснование
	               |ГДЕ
	               |	&Ссылка <> ЗНАЧЕНИЕ(Документ.узп_Лот.ПустаяСсылка)
	               |	И (узп_ОценкаПоставщиков.Лот = &Ссылка
	               |			ИЛИ узп_РегистрацияЦенПоставщиков.ДокументОснование = &Ссылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ.ОценкаПоставщика КАК ОценкаПоставщика,
	               |	ВТ.РегистрацияЦен КАК РегистрацияЦен,
	               |	ВЫБОР
	               |		КОГДА ВТ.КонтрагентОценка = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	               |			ТОГДА ВТ.КонтрагентРегистрация
	               |		ИНАЧЕ ВТ.КонтрагентОценка
	               |	КОНЕЦ КАК Контрагент,
	               |	ВТ.ОценкаПроведен,
	               |	ВТ.РегистрацияПроведен
	               |ИЗ
	               |	ВТ КАК ВТ";
	Результат = Запрос.Выполнить();
	ТЧ = Результат.Выгрузить();
	Контрагенты = ТЧ.Скопировать(,"Контрагент");
	ОценкиПоставщиков = ТЧ.Скопировать(,"Контрагент, ОценкаПоставщика, ОценкаПроведен");
	РегистрацияЦенПоставщиков = ТЧ.Скопировать(,"Контрагент, РегистрацияЦен, РегистрацияПроведен");
	Контрагенты.Свернуть("Контрагент");
	ОценкиПоставщиков.Свернуть("Контрагент, ОценкаПоставщика, ОценкаПроведен");
	РегистрацияЦенПоставщиков.Свернуть("Контрагент, РегистрацияЦен, РегистрацияПроведен");
	Оценки.Строки.Очистить();
	НоваяСтрокаЛот = Оценки.Строки.Добавить();
	Если ЗначениеЗаполнено(Лот) Тогда
		НоваяСтрокаЛот.Документ = Лот;
		Если Контрагенты.Количество() = 0 Тогда 
			НоваяСтрокаДокумент = НоваяСтрокаЛот.Строки.Добавить();
			НоваяСтрокаДокумент.Документ = "Создать документ оценки поставщика";
			НоваяСтрокаДокумент = НоваяСтрокаЛот.Строки.Добавить();
			НоваяСтрокаДокумент.Документ = "Создать документ регистрация цен поставщика";
		КонецЕсли;
	Иначе
		НоваяСтрокаЛот.Документ = "Лот не записан";
	КонецЕсли;
	
	Если Лот.Проведен Тогда
		НоваяСтрокаЛот.Картинка = БиблиотекаКартинок.узп_Проведен;
	Иначе
		НоваяСтрокаЛот.Картинка = БиблиотекаКартинок.узп_НеПроведен;
	КонецЕсли;
	
	НоваяСтрокаЛот.Картинка = БиблиотекаКартинок.Документ;
	Для Каждого СтрокаКонтрагент из Контрагенты Цикл
		НоваяСтрокаКонтрагент = НоваяСтрокаЛот.Строки.Добавить();
		НоваяСтрокаКонтрагент.Контрагент = СтрокаКонтрагент.Контрагент;
		НоваяСтрокаКонтрагент.Картинка = БиблиотекаКартинок.Контрагенты;
		ПараметрыПоиска = Новый Структура("Контрагент",СтрокаКонтрагент.Контрагент);
		НайденныеСтроки = ОценкиПоставщиков.НайтиСтроки(ПараметрыПоиска);
		НоваяСтрокаОценка = НоваяСтрокаКонтрагент.Строки.Добавить();
		НоваяСтрокаОценка.Документ = "Оценки поставщика";
		НоваяСтрокаОценка.картинка = БиблиотекаКартинок.СостояниеОбменаДаннымиОшибка;
		Для Каждого НайденнаяСтрока из НайденныеСтроки Цикл
			Если Не НайденнаяСтрока.ОценкаПоставщика = NULL Тогда 
				НоваяСтрокаОценка.Картинка = БиблиотекаКартинок.СостояниеОбменаДаннымиУспех;
				НоваяСтрокаДокумент = НоваяСтрокаОценка.Строки.Добавить();
				НоваяСтрокаДокумент.Документ = НайденнаяСтрока.ОценкаПоставщика;
				Если НайденнаяСтрока.ОценкаПроведен тогда
					НоваяСтрокаДокумент.Картинка = БиблиотекаКартинок.СостояниеХорошее;
				Иначе
					НоваяСтрокаДокумент.Картинка = БиблиотекаКартинок.СостояниеТревожное;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		НоваяСтрокаДокумент = НоваяСтрокаОценка.Строки.Добавить();
		НоваяСтрокаДокумент.Документ = "Создать документ оценки поставщика";
		НайденныеСтроки = РегистрацияЦенПоставщиков.НайтиСтроки(ПараметрыПоиска);
		НоваяСтрокаЦены = НоваяСтрокаКонтрагент.Строки.Добавить();
		НоваяСтрокаЦены.Документ = "Регистрация цен поставщика";
		НоваяСтрокаЦены.картинка = БиблиотекаКартинок.СостояниеОбменаДаннымиОшибка;
		Для Каждого НайденнаяСтрока из НайденныеСтроки Цикл
			Если Не НайденнаяСтрока.РегистрацияЦен = NULL Тогда 
				НоваяСтрокаЦены.Картинка = БиблиотекаКартинок.СостояниеОбменаДаннымиУспех;
				НоваяСтрокаДокумент = НоваяСтрокаЦены.Строки.Добавить();
				НоваяСтрокаДокумент.Документ = НайденнаяСтрока.РегистрацияЦен;
				Если НайденнаяСтрока.РегистрацияПроведен тогда
					НоваяСтрокаДокумент.Картинка = БиблиотекаКартинок.СостояниеХорошее;
				Иначе
					НоваяСтрокаДокумент.Картинка = БиблиотекаКартинок.СостояниеТревожное;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		НоваяСтрокаДокумент = НоваяСтрокаЦены.Строки.Добавить();
		НоваяСтрокаДокумент.Документ = "Создать документ регистрация цен поставщика";
	КонецЦикла;
КонецПроцедуры

#КонецЕсли
