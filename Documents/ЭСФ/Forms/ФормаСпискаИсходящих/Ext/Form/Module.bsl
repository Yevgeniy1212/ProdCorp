////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭСФСерверПереопределяемый.ЭСФФормаСпискаИВыбораПриСозданииНаСервере(ЭтаФорма);
	
	Если ЭСФКлиентСерверПереопределяемый.ИспользуютсяСтруктурныеПодразделения() Тогда
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, """"" КАК СтруктурноеПодразделение,", "ЭСФ.СтруктурноеПодразделение,");
	Иначе
		Элементы.СписокСтруктурноеПодразделение.Видимость = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.СчетФактура) Тогда
		ЭСФКлиентСерверПереопределяемый.УстановитьЭлементОтбораСписка(Список, "СчетФактура", Параметры.СчетФактура);
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭСФЧерезAPI")
		И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьОбменЭСФЧерезXML") Тогда
		ОтказПриОткрытии = Истина;
	КонецЕсли;
	
	УстановитьВидимостьГиперссылкиОчереди();
	
	УстановитьВидимостьСостоянияИТС();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Контейнер = ЭСФКлиентСервер.КонтейнерМетодов();	
	Контейнер.ПриОткрытииФормы(ЭтаФорма, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтказПриОткрытии Тогда
        Отказ = Истина;
        ПоказатьПредупреждение(,ЭСФКлиентСервер.ТекстСообщенияНеУстановленыОбеКонстанты());
    КонецЕсли;
	
	КлючУникальности = Новый УникальныйИдентификатор;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = ЭСФКлиентСервер.ИмяСобытияЗаписьЭСФ() Тогда
		
		Элементы.Список.Обновить();
		УстановитьВидимостьГиперссылкиОчереди();
		УстановитьВидимостьСостоянияИТС();
		
	ИначеЕсли ИмяСобытия = "ЭСФ_ПроверятьОповещенияФоновогоЗадания"
		И ЭтаФорма.КлючУникальности = Источник Тогда
		
		ЭСФКлиентПереопределяемый.ОбработкаОповещенияЭСФ_ПроверятьОповещенияФоновогоЗадания(ЭтаФорма, Параметр);
		УстановитьВидимостьГиперссылкиОчереди();
		УстановитьВидимостьСостоянияИТС();
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)	
	УстановитьБыстрыйОтбор("Организация", Организация);
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	УстановитьБыстрыйОтбор("Контрагент", Контрагент);
КонецПроцедуры

&НаКлиенте
Процедура СостояниеПриИзменении(Элемент)
	УстановитьБыстрыйОтбор("Состояние", Состояние);
КонецПроцедуры

&НаКлиенте
Процедура ВидПриИзменении(Элемент)
	УстановитьБыстрыйОтбор("Вид", Вид);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОчередьОтправкиЭСФ(Команда)
	ЭСФКлиент.ОткрытьФормуОчередиЭСФ(,);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОчередьОтправкиЭСФ(Команда)
	УстановитьВидимостьГиперссылкиОчереди();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УстановитьБыстрыйОтбор(ВидЭлемента, ЗначениеЭлемента)
	
	ЭСФКлиентСерверПереопределяемый.ИзменитьЭлементОтбораСписка(Список, ВидЭлемента, ЗначениеЭлемента, ЗначениеЗаполнено(ЗначениеЭлемента));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьГиперссылкиОчереди()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПользовательОтправки", ЭСФКлиентСерверПереопределяемый.ТекущийПользователь());
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОчередьОтправкиЭСФ.ЭСФ) КАК КоличествоЭСФ
		|ИЗ
		|	РегистрСведений.ОчередьОтправкиЭСФ КАК ОчередьОтправкиЭСФ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОчередьОтправкиЭСФ.ЭСФ) КАК КоличествоЭСФ
		|ИЗ
		|	РегистрСведений.ОчередьОтправкиЭСФ КАК ОчередьОтправкиЭСФ
		|ГДЕ
		|	ОчередьОтправкиЭСФ.ПользовательОтправки = &ПользовательОтправки";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаОбщееКоличество = РезультатЗапроса[0].Выбрать();
	ВыборкаКоличествоПоПользователю = РезультатЗапроса[1].Выбрать();
	
	ВыборкаОбщееКоличество.Следующий();
	ЕстьЗаписи = ВыборкаОбщееКоличество.КоличествоЭСФ <> 0;
	ЕстьЗаписиПользователя = ВыборкаКоличествоПоПользователю.Следующий();
	
	Элементы.ГруппаОчередьОтправкиЭСФ.Видимость = ЕстьЗаписи;
	
	Если ЕстьЗаписи Тогда
		
		ТекстОтркытьРегистрОчередьОтправкиЭСФ = НСтр("ru = 'В очереди отправки находится %1 ЭСФ, из них текущим пользователем отправляется %2'");
		ТекстОтркытьРегистрОчередьОтправкиЭСФ = СтрЗаменить(ТекстОтркытьРегистрОчередьОтправкиЭСФ, "%1", ВыборкаОбщееКоличество.КоличествоЭСФ);
		
		Если ЕстьЗаписиПользователя Тогда
			ТекстОтркытьРегистрОчередьОтправкиЭСФ = СтрЗаменить(ТекстОтркытьРегистрОчередьОтправкиЭСФ, "%2", ВыборкаКоличествоПоПользователю.КоличествоЭСФ);
		Иначе
			ТекстОтркытьРегистрОчередьОтправкиЭСФ = СтрЗаменить(ТекстОтркытьРегистрОчередьОтправкиЭСФ, "%2", 0);
		КонецЕсли;
		
		Элементы.ОтркытьОчередьОтправкиЭСФ.Заголовок = ТекстОтркытьРегистрОчередьОтправкиЭСФ;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСостоянияИТС()
	
	ДатаОкончанияПодписки = ЭлектронноеВзаимодействиеССервисами.ПолучитьДатуОкончанияПодписки();
	
	Элементы.ГруппаСостояниеИТС.Видимость = ЗначениеЗаполнено(ДатаОкончанияПодписки);
	
	Если Элементы.ГруппаСостояниеИТС.Видимость Тогда
		ServiceNick = ЭлектронноеВзаимодействиеССервисами.ПолучитьServiceNickИСЭСФ();
		Если ЭлектронноеВзаимодействиеССервисами.ВыводитьИнформациюОСрокахПодписки(ServiceNick, Организация, ДатаОкончанияПодписки) Тогда
			Элементы.ГруппаСостояниеИТС.ЦветФона = Новый Цвет(251, 212, 212);
			ТекстСостояния = ЭлектронноеВзаимодействиеССервисами.ПолучитьТекстИнформацииСостояниеПодписки(ДатаОкончанияПодписки);
			Элементы.ОписаниеСостоянияПодписки.Заголовок = ТекстСостояния;
		Иначе
			Элементы.ГруппаСостояниеИТС.ЦветФона = Новый Цвет(204, 255, 204);
			ТекстСостояния = ЭлектронноеВзаимодействиеССервисами.ПолучитьТекстИнформацииСостояниеПодписки();
			Элементы.ОписаниеСостоянияПодписки.Заголовок = ТекстСостояния;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнформациюИТС(Команда)
	
	ЭлектронноеВзаимодействиеССервисамиВызовСервера.ОбновитьДанныеОкончанияПодписки();
	УстановитьВидимостьСостоянияИТС();
	
КонецПроцедуры
