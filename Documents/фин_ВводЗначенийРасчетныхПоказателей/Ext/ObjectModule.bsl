#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
////////////////////////////////////////////////////////////////////////////


// Процедура ПередЗаписью
// 
Процедура ПередЗаписью(Отказ,РежимЗаписи,РежимПроведения)
	Если ОбменДанными.Загрузка ИЛИ ПометкаУдаления ИЛИ ДополнительныеСвойства.Свойство("ВнешняяОбработка") Тогда
		Возврат;
	КонецЕсли;
	Если Не Сценарий.Пустая() Тогда
		ПериодПланирования = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(ПериодПланирования,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(Сценарий));
	КонецЕсли;
	Для Каждого СтрокаТЧ Из ЗначенияПоказателей Цикл
		Если СтрокаТЧ.Номенклатура=Неопределено Тогда
			СтрокаТЧ.Номенклатура=?(Сценарий.ДетализацияПланирования=фин_ОбщегоНазначенияВызовСервераПовтИсп.ДетализацияПланированияНоменклатурныеГруппы(),Справочники["НоменклатурныеГруппы"].ПустаяСсылка(),Справочники.Номенклатура.ПустаяСсылка());
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры //ПередЗаписью


//Процедура ОбработкаПроведения
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	фин_ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	ПараметрыПроведения = Документы.фин_ВводЗначенийРасчетныхПоказателей.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаЗначенияПоказателей, Движения, Отказ,"ЗначенияПоказателей",,, ?(РасчетныйПоказатель.СпособВвода = Перечисления.фин_СпособыВводаЗначенийРасчетныхПоказателей.ВКаждомПериоде,"фин_ЗначенияРасчетныхПоказателейЗаПериод","фин_ПериодическиеЗначенияРасчетныхПоказателей"));	
	
КонецПроцедуры //ОбработкаПроведения

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект,фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"));
КонецПроцедуры



#КонецЕсли
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Для Каждого СтрокаСценарий Из ДополнительныеСценарии Цикл
		Если СтрокаСценарий.Сценарий = Сценарий Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке № "+СтрокаСценарий.НомерСтроки+" указан сценарий, уже выбранный в шапке документа! Использовать сценарий в документе можно только один раз!",,,,Отказ);	
		КонецЕсли;
		Для Каждого СтрокаСценарийПроверка Из ДополнительныеСценарии Цикл
			Если СтрокаСценарийПроверка.НомерСтроки<=СтрокаСценарий.НомерСтроки Тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаСценарий.Сценарий = СтрокаСценарийПроверка.Сценарий Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке № "+СтрокаСценарийПроверка.НомерСтроки+" указан сценарий, уже выбранный в строке № "+СтрокаСценарий.НомерСтроки+"! Использовать сценарий в документе можно только один раз!",,,,Отказ);	
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры
