////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("СтрокиЗаполнения") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Параметры.Свойство("Дата",Дата);
	Дерево = ДанныеФормыВЗначение(ДеревоВыбора,Тип("ДеревоЗначений"));
	Для Каждого ЭлементТЧ Из Параметры.СтрокиЗаполнения Цикл
		СтрокаДерева = Дерево.Строки.Добавить();
		СтрокаДерева.ТабличнаяЧасть = ЭлементТЧ.Ключ;
		СтрокаДерева.КартинкаТЧ=Истина;
		Наполнение = ЭлементТЧ.Значение;
		Для Каждого ЭлементНаполнения Из Наполнение Цикл
			СтрокаНомер = СтрокаДерева.Строки.Добавить();
			СтрокаНомер.НомерСтроки = ЭлементНаполнения.Ключ;
			СтрокаНомер.ПлановаяНоменклатура = ЭлементНаполнения.Значение.ПлановаяНоменклатура;
			СтрокаНомер.Характеристика = ЭлементНаполнения.Значение.Характеристика;
			СтрокаНомер.КартинкаСтрока = Истина;
			Если ТипЗнч(ЭлементНаполнения.Значение.Номенклатура)=Тип("Массив") Тогда
				Пометка = Истина;
				Для Каждого Номенклатура Из ЭлементНаполнения.Значение.Номенклатура Цикл
					СтрокаНоменклатура = СтрокаНомер.Строки.Добавить();
					СтрокаНоменклатура.Выбрано = Пометка;
					СтрокаНоменклатура.Номенклатура = Номенклатура;
					СтрокаНоменклатура.КартинкаНоменклатура = Истина;
					Пометка = Ложь;
				КонецЦикла;
			Иначе
				СтрокаНоменклатура = СтрокаНомер.Строки.Добавить();
				СтрокаНоменклатура.Выбрано = Истина;
				СтрокаНоменклатура.КартинкаНоменклатура = Истина;
			КонецЕсли;
		КонецЦикла;
		СтрокаДерева.Строки.Сортировать("НомерСтроки");
	КонецЦикла;
	ЗначениеВДанныеФормы(Дерево, ДеревоВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для Каждого ЭлементДерева Из ДеревоВыбора.ПолучитьЭлементы() Цикл
		Элементы.ДеревоВыбора.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ <ДеревоВыбора>

&НаКлиенте
Процедура ДеревоВыбораВыбраноПриИзменении(Элемент)
	
	Идентификатор = Элементы.ДеревоВыбора.ТекущаяСтрока;
	Родитель = ДеревоВыбора.НайтиПоидентификатору(Элементы.ДеревоВыбора.ТекущаяСтрока).ПолучитьРодителя();
	Для Каждого ЭлементДерева Из Родитель.ПолучитьЭлементы() Цикл
		Если ЭлементДерева.ПолучитьИдентификатор()<>Идентификатор Тогда
			ЭлементДерева.Выбрано = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	Результат = ВернутьРезультат();
	Если НеназначенныеСоответствия.Количество()>0 Тогда
		ОповещениеВопроса = Новый ОписаниеОповещения("ПослеЗакрытияВопросаЗакрытьФорму", ЭтаФорма, Результат);
		ПоказатьВопрос(ОповещениеВопроса, НСтр("ru = 'Сохранить назначенные соответствия регламентированной и плановой номенклатуры для дальнейшего использования?'"), РежимДиалогаВопрос.ДаНет);
	Иначе 
		Закрыть(Результат);
	КонецЕсли;	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗакрытьФорму(РезультатДиалога, Результат) Экспорт
	
    Если РезультатДиалога = КодВозвратаДиалога.Да Тогда
        СохранитьСоответствия();
    КонецЕсли;

    Закрыть(Результат);

КонецПроцедуры

&НаСервере
Процедура СохранитьСоответствия()
	
	Для Каждого СтрокаСоответствие Из НеназначенныеСоответствия Цикл
		НаборЗаписей = РегистрыСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.РегламентированнаяНоменклатура.Установить(СтрокаСоответствие.Номенклатура);
		НЗ = НаборЗаписей.Добавить();
		НЗ.Период = Дата;
		НЗ.ПлановаяНоменклатура = СтрокаСоответствие.ПлановаяНоменклатура;
		НЗ.РегламентированнаяНоменклатура = СтрокаСоответствие.Номенклатура;
		НЗ.ХарактеристикаПлановойНоменклатуры = СтрокаСоответствие.Характеристика;
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(	"Не сохранено соответствие для регл. номенклатуры " + СтрокаСоответствие.Номенклатура + ":
																|	" + ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ВернутьРезультат()
	
	НеназначенныеСоответствия.Очистить();
	Дерево = ДанныеФормыВЗначение(ДеревоВыбора,Тип("ДеревоЗначений"));
	СтрокиЗаполнения = Новый Структура;
	Для Каждого ЭлементТЧ Из Дерево.Строки Цикл
		СоответствиеСтроки = Новый Соответствие;
		Для Каждого ЭлементНаполнения Из ЭлементТЧ.Строки Цикл
			Номенклатура = Неопределено;
			Для Каждого СтрокаНоменклатура Из ЭлементНаполнения.Строки Цикл
				Если СтрокаНоменклатура.Выбрано И ЗначениеЗаполнено(СтрокаНоменклатура.Номенклатура) Тогда
					Номенклатура =  СтрокаНоменклатура.Номенклатура;
					СтрокаНовое = НеназначенныеСоответствия.Добавить();
					СтрокаНовое.Номенклатура = СтрокаНоменклатура.Номенклатура;
					СтрокаНовое.ПлановаяНоменклатура = ЭлементНаполнения.ПлановаяНоменклатура;
					СтрокаНовое.Характеристика = ЭлементНаполнения.Характеристика;
				КонецЕсли;
			КонецЦикла;
			Если ЗначениеЗаполнено(Номенклатура) Тогда
				СоответствиеСтроки.Вставить(ЭлементНаполнения.НомерСтроки,Номенклатура);
			КонецЕсли;
		КонецЦикла;
		СтрокиЗаполнения.Вставить(ЭлементТЧ.ТабличнаяЧасть,СоответствиеСтроки);
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВТ",НеназначенныеСоответствия.Выгрузить());
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВТ.Номенклатура,
		|	ВТ.ПлановаяНоменклатура,
		|	ВТ.Характеристика
		|ПОМЕСТИТЬ ВТ_Кортеж
		|ИЗ
		|	&ВТ КАК ВТ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Кортеж.Номенклатура КАК Номенклатура,
		|	ВТ_Кортеж.ПлановаяНоменклатура,
		|	ВТ_Кортеж.Характеристика
		|ИЗ
		|	ВТ_Кортеж КАК ВТ_Кортеж
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних КАК Соответствие
		|		ПО ВТ_Кортеж.Номенклатура = Соответствие.РегламентированнаяНоменклатура
		|			И ВТ_Кортеж.ПлановаяНоменклатура = Соответствие.ПлановаяНоменклатура
		|			И ВТ_Кортеж.Характеристика = Соответствие.ХарактеристикаПлановойНоменклатуры
		|ГДЕ
		|	ВТ_Кортеж.Номенклатура ССЫЛКА Справочник.Номенклатура
		|			И ВТ_Кортеж.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И Соответствие.РегламентированнаяНоменклатура ЕСТЬ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура";

	Результат = Запрос.Выполнить();

	НеназначенныеСоответствия.Очистить();
	НеназначенныеСоответствия.Загрузить(Результат.Выгрузить());

	Возврат СтрокиЗаполнения;
	
КонецФункции

