#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Регистрация договора
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РегистрацияДоговоров";
	КомандаПечати.Представление = НСтр("ru = 'Печать'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ фин_ОбщегоНазначенияВызовСервераПовтИсп.ЕстьДополнительноеПравоПользователя("ПечатьНепроведенныхДокументов");
	КомандаПечати.Порядок = 50;	
		
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Печать расходной накладной
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РегистрацияДоговоров") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РегистрацияДоговоров",
			НСтр("ru = 'Печать'"),
			ПечатьРегистрацияДоговоров(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.дог_РегистрацияДоговоров.РегистрацияДоговоров");
	КонецЕсли;
		
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка табличных печатных документов.

Функция ПечатьРегистрацияДоговоров(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "дог_РегистрацияДоговоров_РегистрацияДоговоров";
	
	ПризнакПроекта = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("узп_ВестиУчетЗакупокПоПроектам");
	Если ПризнакПроекта тогда
		Проект = ", Проект";
	Иначе
		Проект = "";
	КонецЕсли;
	Макет = Документы.дог_РегистрацияДоговоров.ПолучитьМакет("РегистрацияДоговоров");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегистрацияДоговоров.Ссылка КАК Ссылка,
	|	РегистрацияДоговоров.Автор,
	|	РегистрацияДоговоров.Дата,
	|	РегистрацияДоговоров.ДоговорКонтрагента,
	|	РегистрацияДоговоров.Номер,
	|	РегистрацияДоговоров.Организация,
	|	РегистрацияДоговоров.Ответственный,
	|	РегистрацияДоговоров.СрокПоставки,
	|	РегистрацияДоговоров.Подразделение,
	|	РегистрацияДоговоров.СтруктурноеПодразделение,
	|	РегистрацияДоговоров.Контрагент,
	|	РегистрацияДоговоров.УчитыватьНДС,
	|	РегистрацияДоговоров.ДоговорКонтрагента.Наименование КАК ДоговорКонтрагентаНаименование,
	|	РегистрацияДоговоров.Контрагент.Наименование
	|ИЗ
	|	Документ.дог_РегистрацияДоговоров КАК РегистрацияДоговоров
	|ГДЕ
	|	РегистрацияДоговоров.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
	Выборка = Запрос.Выполнить().Выбрать();
 	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегистрацияДоговоровТовары.Ссылка КАК Ссылка,
	|	РегистрацияДоговоровТовары.Номенклатура,
	|	РегистрацияДоговоровТовары.ДатаПоставки,
	|	РегистрацияДоговоровТовары.ЕдиницаИзмерения,
	|	РегистрацияДоговоровТовары.Коэффициент,
	|	СУММА(РегистрацияДоговоровТовары.Количество) КАК Количество,
	|	РегистрацияДоговоровТовары.Цена,
	|	РегистрацияДоговоровТовары.СтавкаНДС,
	|	СУММА(РегистрацияДоговоровТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(РегистрацияДоговоровТовары.Сумма) КАК Сумма"+ Проект+"
	|ИЗ
	|	Документ.дог_РегистрацияДоговоров.Товары КАК РегистрацияДоговоровТовары
	|ГДЕ
	|	РегистрацияДоговоровТовары.Ссылка В(&Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияДоговоровТовары.Ссылка,
	|	РегистрацияДоговоровТовары.Номенклатура,
	|	РегистрацияДоговоровТовары.ДатаПоставки,
	|	РегистрацияДоговоровТовары.ЕдиницаИзмерения,
	|	РегистрацияДоговоровТовары.Коэффициент,
	|	РегистрацияДоговоровТовары.Цена,
	|	РегистрацияДоговоровТовары.СтавкаНДС"+ Проект+"";
	ВыборкаТовары = Запрос.Выполнить().Выбрать();
 	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегистрацияДоговоровУслуги.Ссылка,
	|	РегистрацияДоговоровУслуги.Номенклатура,
	|	РегистрацияДоговоровУслуги.ДатаПоставки,
	|	СУММА(РегистрацияДоговоровУслуги.Количество) КАК Количество,
	|	РегистрацияДоговоровУслуги.Цена,
	|	РегистрацияДоговоровУслуги.СтавкаНДС,
	|	СУММА(РегистрацияДоговоровУслуги.СуммаНДС) КАК СуммаНДС,
	|	СУММА(РегистрацияДоговоровУслуги.Сумма) КАК Сумма"+ Проект+"
	|ИЗ
	|	Документ.дог_РегистрацияДоговоров.Услуги КАК РегистрацияДоговоровУслуги
	|ГДЕ
	|	РегистрацияДоговоровУслуги.Ссылка В(&Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияДоговоровУслуги.Ссылка,
	|	РегистрацияДоговоровУслуги.Номенклатура,
	|	РегистрацияДоговоровУслуги.ДатаПоставки,
	|	РегистрацияДоговоровУслуги.Цена,
	|	РегистрацияДоговоровУслуги.СтавкаНДС"+ Проект+"";
	ВыборкаУслуги = Запрос.Выполнить().Выбрать();
  	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегистрацияДоговоровОС.Ссылка,
	|	РегистрацияДоговоровОС.Номенклатура,
	|	РегистрацияДоговоровОС.ДатаПоставки,
	|	СУММА(РегистрацияДоговоровОС.Количество) КАК Количество,
	|	РегистрацияДоговоровОС.Цена,
	|	РегистрацияДоговоровОС.СтавкаНДС,
	|	СУММА(РегистрацияДоговоровОС.СуммаНДС) КАК СуммаНДС,
	|	СУММА(РегистрацияДоговоровОС.Сумма) КАК Сумма"+ Проект+"
	|ИЗ
	|	Документ.дог_РегистрацияДоговоров.ОС КАК РегистрацияДоговоровОС
	|ГДЕ
	|	РегистрацияДоговоровОС.Ссылка В(&Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияДоговоровОС.Ссылка,
	|	РегистрацияДоговоровОС.Номенклатура,
	|	РегистрацияДоговоровОС.ДатаПоставки,
	|	РегистрацияДоговоровОС.Цена,
	|	РегистрацияДоговоровОС.СтавкаНДС"+ Проект+"";
	ВыборкаОС = Запрос.Выполнить().Выбрать();

	Шапка = Макет.ПолучитьОбласть("Шапка");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка");
		ОбластьТовары = Макет.ПолучитьОбласть("Товары");
		ОбластьУслугиШапка = Макет.ПолучитьОбласть("УслугиШапка");
		ОбластьУслуги = Макет.ПолучитьОбласть("Услуги");
		ОбластьОСШапка = Макет.ПолучитьОбласть("ОСШапка");
		ОбластьОС = Макет.ПолучитьОбласть("ОС");
		Если НЕ Выборка.УчитыватьНДС Тогда
			ОбластьТоварыШапка.УдалитьОбласть(ОбластьТоварыШапка.Область("R2C10:R2C11"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьУслугиШапка.УдалитьОбласть(ОбластьУслугиШапка.Область("R2C8:R2C9"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьТовары.УдалитьОбласть(ОбластьТовары.Область("R1C10:R1C11"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьУслуги.УдалитьОбласть(ОбластьУслуги.Область("R1C8:R1C9"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьОСШапка.УдалитьОбласть(ОбластьТовары.Область("R1C6:R1C7"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьОС.УдалитьОбласть(ОбластьУслуги.Область("R1C6:R1C7"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		КонецЕсли;
   		Если НЕ ПризнакПроекта Тогда
			ОбластьТоварыШапка.УдалитьОбласть(ОбластьТоварыШапка.Область("ШапкаТоварыПроекты"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьУслугиШапка.УдалитьОбласть(ОбластьУслугиШапка.Область("ШапкаУслугиПроекты"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьОСШапка.УдалитьОбласть(ОбластьОСШапка.Область("ШапкаОСПроекты"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьТовары.УдалитьОбласть(ОбластьТовары.Область("ТоварыПроекты"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьУслуги.УдалитьОбласть(ОбластьУслуги.Область("УслугиПроекты"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьОС.УдалитьОбласть(ОбластьОС.Область("ОСПроекты"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		КонецЕсли;

		Шапка.Параметры.Заполнить(Выборка);
		Шапка.Параметры.ОрганизацияНаименование = Выборка.Организация.Наименование+?(ЗначениеЗаполнено(Выборка.СтруктурноеПодразделение),"/"+Выборка.СтруктурноеПодразделение.Наименование,"");
		//Шапка.Параметры.Поставщик = Выборка.Контрагент.Наименование+?(ЗначениеЗаполнено(Выборка.ДоговорКонтрагента),"/ договор: "+Выборка.ДоговорКонтрагента.Наименование,"");
		Шапка.Параметры.Поставщик = Строка(Выборка.Контрагент)+?(ЗначениеЗаполнено(Выборка.ДоговорКонтрагента),"/ договор: "+Выборка.ДоговорКонтрагентаНаименование,"");
		ТабДок.Вывести(Шапка, Выборка.Уровень());
	
		ВыводитьШапку = Истина;
		ВыборкаТовары.Сбросить();
		Пока ВыборкаТовары.НайтиСледующий(Выборка.Ссылка, "Ссылка") Цикл
			Если ВыводитьШапку Тогда
				ТабДок.Вывести(ОбластьТоварыШапка);
				ВыводитьШапку = Ложь;
			КонецЕсли;			
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
		КонецЦикла;

		ВыводитьШапку = Истина;
		ВыборкаУслуги.Сбросить();
		Пока ВыборкаУслуги.НайтиСледующий(Выборка.Ссылка, "Ссылка") Цикл
			Если ВыводитьШапку Тогда
				ТабДок.Вывести(ОбластьУслугиШапка);
				ВыводитьШапку = Ложь;
			КонецЕсли;			
			ОбластьУслуги.Параметры.Заполнить(ВыборкаУслуги);
			ТабДок.Вывести(ОбластьУслуги, ВыборкаУслуги.Уровень());
		КонецЦикла;
  
		ВыводитьШапку = Истина;
		ВыборкаОС.Сбросить();
		Пока ВыборкаОС.НайтиСледующий(Выборка.Ссылка, "Ссылка") Цикл
			Если ВыводитьШапку Тогда
				ТабДок.Вывести(ОбластьОСШапка);
				ВыводитьШапку = Ложь;
			КонецЕсли;			
			ОбластьОС.Параметры.Заполнить(ВыборкаОС);
			ТабДок.Вывести(ОбластьОС, ВыборкаОС.Уровень());
		КонецЦикла;

		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);

		ВставлятьРазделительСтраниц = Истина;
	
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ВыборкаПоСпецификации(Объект) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СпецификацияДоговоровСрезПоследних.НоменклатураОС,
		|	СпецификацияДоговоровСрезПоследних.ДатаПоставки,
		|	СпецификацияДоговоровСрезПоследних.ЕдиницаИзмерения,
		|	СпецификацияДоговоровСрезПоследних.Коэффициент,
		|	СпецификацияДоговоровСрезПоследних.СтавкаНДС,
		|	СпецификацияДоговоровСрезПоследних.Цена,
		|	СпецификацияДоговоровСрезПоследних.ОбъектРемонта,
		|	СпецификацияДоговоровСрезПоследних.Подразделение,
		|	СпецификацияДоговоровСрезПоследних.Заказ,
		|	СпецификацияДоговоровСрезПоследних.ЗаявкаМТС,
		|	СпецификацияДоговоровСрезПоследних.Количество,
		|	СпецификацияДоговоровСрезПоследних.СуммаНДС,
		|	СпецификацияДоговоровСрезПоследних.Сумма
		|ПОМЕСТИТЬ Специфика
		|ИЗ
		|	РегистрСведений.дог_СпецификацияДоговоров.СрезПоследних(
		|			&Момент,
		|			Договор = &Договор
		|				И Организация = &Организация) КАК СпецификацияДоговоровСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""Товары"" КАК ИмяТЧ,
		|	Специфика.НоменклатураОС КАК Номенклатура,
		|	Специфика.ДатаПоставки КАК ДатаПоставки,
		|	Специфика.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Специфика.Коэффициент КАК Коэффициент,
		|	Специфика.СтавкаНДС КАК СтавкаНДС,
		|	Специфика.Цена КАК Цена,
		|	Специфика.ОбъектРемонта КАК ОбъектРемонта,
		|	Специфика.Подразделение КАК Подразделение,
		|	Специфика.Заказ,
		|	Специфика.ЗаявкаМТС,
		|	Специфика.Количество КАК Количество,
		|	Специфика.СуммаНДС КАК СуммаНДС,
		|	Специфика.Сумма КАК Сумма
		|ИЗ
		|	Специфика КАК Специфика
		|ГДЕ
		|	(Специфика.НоменклатураОС ССЫЛКА Справочник.Номенклатура
		|			ИЛИ Специфика.НоменклатураОС ССЫЛКА Справочник.фин_ПлановаяНоменклатура
		|				И Специфика.НоменклатураОС.ТипПозицииВПланеЗакупок = ЗНАЧЕНИЕ(Перечисление.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.Товар))
		|	И Специфика.НоменклатураОС.Услуга = ЛОЖЬ
		|	И (Специфика.Количество > 0
		|			ИЛИ Специфика.СуммаНДС > 0
		|			ИЛИ Специфика.Сумма > 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""ОС"",
		|	Специфика.НоменклатураОС,
		|	Специфика.ДатаПоставки,
		|	NULL,
		|	NULL,
		|	Специфика.СтавкаНДС,
		|	Специфика.Цена,
		|	NULL,
		|	Специфика.Подразделение,
		|	Специфика.Заказ,
		|	Специфика.ЗаявкаМТС,
		|	Специфика.Количество,
		|	Специфика.СуммаНДС,
		|	Специфика.Сумма
		|ИЗ
		|	Специфика КАК Специфика
		|ГДЕ
		|	(Специфика.НоменклатураОС ССЫЛКА Справочник.ОсновныеСредства
		|			ИЛИ Специфика.НоменклатураОС ССЫЛКА Справочник.НематериальныеАктивы
		|			ИЛИ Специфика.НоменклатураОС ССЫЛКА Справочник.фин_ПлановаяНоменклатура
		|				И (Специфика.НоменклатураОС.ТипПозицииВПланеЗакупок = ЗНАЧЕНИЕ(Перечисление.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.ОсновноеСредство)
		|					ИЛИ Специфика.НоменклатураОС.ТипПозицииВПланеЗакупок = ЗНАЧЕНИЕ(Перечисление.узп_ТипыПозицийПлановойНоменклатурыВПланеЗакупок.НематериальныйАктив)))
		|	И (Специфика.Количество > 0
		|			ИЛИ Специфика.СуммаНДС > 0
		|			ИЛИ Специфика.Сумма > 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""Услуги"",
		|	Специфика.НоменклатураОС,
		|	Специфика.ДатаПоставки,
		|	NULL,
		|	NULL,
		|	Специфика.СтавкаНДС,
		|	Специфика.Цена,
		|	Специфика.ОбъектРемонта,
		|	Специфика.Подразделение,
		|	Специфика.Заказ,
		|	Специфика.ЗаявкаМТС,
		|	Специфика.Количество,
		|	Специфика.СуммаНДС,
		|	Специфика.Сумма
		|ИЗ
		|	Специфика КАК Специфика
		|ГДЕ
		|	(Специфика.НоменклатураОС ССЫЛКА Справочник.Номенклатура
		|			ИЛИ Специфика.НоменклатураОС ССЫЛКА Справочник.фин_ПлановаяНоменклатура)
		|	И Специфика.НоменклатураОС.Услуга
		|	И (Специфика.Количество > 0
		|			ИЛИ Специфика.СуммаНДС > 0
		|			ИЛИ Специфика.Сумма > 0)
		|ИТОГИ ПО
		|	ИмяТЧ";
    Запрос.УстановитьПараметр("Момент", ?(Объект.Ссылка.Пустая(),Объект.Дата,Объект.Ссылка.МоментВремени()));
	Запрос.УстановитьПараметр("Договор", ?(Объект.ВидОперации = Перечисления.дог_ВидыОперацийДоговор.Договор ИЛИ Объект.ВариантРегистрацииДополнительногоСоглашения = Перечисления.дог_ВариантыРегистрацииДополнительныхСоглашений.КорректировкаСуществующегоДоговораКонтрагента, Объект.ДоговорКонтрагента, Объект.ПервоначальныйДоговор));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Результат = Запрос.Выполнить();

	Возврат Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
КонецФункции

Процедура ПроверитьДоступныйЛимитНаличногоРасчета(Объект, Отказ) Экспорт
	
	Если Объект.СпособОплаты = Перечисления.ден_ВидыДенежныхСредств.Наличные Тогда
		мВидОбязательства = ?(Объект.ВидОперацииПоДоговору = Перечисления.дог_ВидыОперацийПоДоговору.НетоварныеОперации, Объект.ВидОбязательства, ?(Объект.ВидДоговораПоТоварнымОперациям=Перечисления.дог_ВидыДоговоровПоТоварнымОперациям.ДоговорРеализации,Перечисления.дог_ВидыОбязательствПоДоговору.Входящее,Перечисления.дог_ВидыОбязательствПоДоговору.Исходящее));

		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	РекомендуемыеПределыСумм.РекомендуемыйПредел,
			|	РекомендуемыеПределыСумм.ЕдиницаИзмерения,
			|	РекомендуемыеПределыСумм.ЗапрещатьПроведениеПриПревышении
			|ИЗ
			|	РегистрСведений.дог_РекомендуемыеПределыСуммДоговоровСОплатойЗаНаличныйРасчет.СрезПоследних(&Дата, ВидОбязательства = &ВидОбязательства) КАК РекомендуемыеПределыСумм
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	РекомендуемыеПределыСумм.РекомендуемыйПредел,
			|	РекомендуемыеПределыСумм.ЕдиницаИзмерения,
			|	РекомендуемыеПределыСумм.ЗапрещатьПроведениеПриПревышении
			|ИЗ
			|	РегистрСведений.дог_РекомендуемыеПределыСуммДоговоровСОплатойЗаНаличныйРасчет.СрезПоследних(&Дата, ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.дог_ВидыОбязательствПоДоговору.ПустаяСсылка)) КАК РекомендуемыеПределыСумм";

		Запрос.УстановитьПараметр("ВидОбязательства", мВидОбязательства);
		Запрос.УстановитьПараметр("Дата", Объект.Дата);

		Результат = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Множитель = 1;
			Если ВыборкаДетальныеЗаписи.ЕдиницаИзмерения=Перечисления.дог_ЕдиницыИзмеренияСуммПределов.МРП Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	РегламентированныеПоказатели.РазмерМРП
				|ИЗ
				|	РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&Дата, ) КАК РегламентированныеПоказатели";
				Запрос.УстановитьПараметр("Дата", Объект.Дата);
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					Множитель = Выборка.РазмерМРП;
				Иначе
					Множитель = 0;
				КонецЕсли;
			КонецЕсли;
			СуммаПредел = ВыборкаДетальныеЗаписи.РекомендуемыйПредел * Множитель;
			
			ВалютаРегУчета = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета");
			
			Если ВалютаРегУчета = Объект.ВалютаДокумента Тогда
				ОбщаяСуммаДоговораРегл =  Объект.ОбщаяСуммаДоговора;
			Иначе
				КурсРегл 	= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаРегУчета, Объект.Дата);
				КурсВал 	= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(Объект.ВалютаДокумента, Объект.Дата);
				ОбщаяСуммаДоговораРегл =  фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Объект.ОбщаяСуммаДоговора, Объект.ВалютаДокумента, ВалютаРегУчета, КурсВал.Курс, КурсРегл.Курс,КурсВал.Кратность,КурсРегл.Кратность);
			КонецЕсли;
			Если ОбщаяСуммаДоговораРегл>СуммаПредел Тогда
				Если ВыборкаДетальныеЗаписи.ЗапрещатьПроведениеПриПревышении Тогда
					Отказ = Истина;
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сумма наличных расчетов превышает установленный рекомендуемый предел ("+Строка(ВыборкаДетальныеЗаписи.РекомендуемыйПредел)+" "+?(ВыборкаДетальныеЗаписи.ЕдиницаИзмерения=Перечисления.дог_ЕдиницыИзмеренияСуммПределов.МРП,"МРП",ВалютаРегУчета)+")!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоАктуальныйРегистратор(Объект, Договор, ВключаяКорретирующиеДопСоглашения = Ложь) Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	дог_РегистрацияДоговоров.Ссылка
		|ИЗ
		|	Документ.дог_РегистрацияДоговоров КАК дог_РегистрацияДоговоров
		|ГДЕ
		|	"+?(ВключаяКорретирующиеДопСоглашения,"(дог_РегистрацияДоговоров.ДоговорКонтрагента = &ДоговорКонтрагента ИЛИ (дог_РегистрацияДоговоров.ПервоначальныйДоговор = &ДоговорКонтрагента И дог_РегистрацияДоговоров.ВариантРегистрацииДополнительногоСоглашения=ЗНАЧЕНИЕ(Перечисление.дог_ВариантыРегистрацииДополнительныхСоглашений.ПереносДоговорныхОбязательствНаНовыйДоговорКонтрагента)))","дог_РегистрацияДоговоров.ДоговорКонтрагента = &ДоговорКонтрагента")+"
		|	И дог_РегистрацияДоговоров.Проведен = Истина
		|	И дог_РегистрацияДоговоров.Дата > &Дата
		|	И дог_РегистрацияДоговоров.Ссылка <> &Ссылка";

	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);

	Результат = Запрос.Выполнить();

	Возврат Результат.Пустой();

КонецФункции

Процедура ИзменитьДанныеДоговора(Объект, Отказ) Экспорт 
	
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("дог_УправлениеКарточкойДоговораДокументамиРегистрации") И НЕ Отказ И Объект.ВидОперации = Перечисления.дог_ВидыОперацийДоговор.ДополнительноеСоглашение Тогда
		Если ЭтоАктуальныйРегистратор(Объект, Объект.ДоговорКонтрагента) Тогда

			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Договоры.ВидОперацииПоДоговору,
				|	Договоры.ДатаДоговора,
				|	Договоры.ДатаНачала,
				|	Договоры.ДатаОкончания,
				|	Договоры.ТипЦен,
				|	Договоры.ВходящийНомер,
				|	Договоры.ВедениеВзаиморасчетов,
				|	Договоры.ВидДоговораПоТоварнымОперациям,
				|	Договоры.ВидОбязательства
				|ИЗ
				|	РегистрСведений.дог_ДоговорыИДополнительныеСоглашения.СрезПоследних(&Момент, Договор = &Договор) КАК Договоры";

			Запрос.УстановитьПараметр("Договор", Объект.ДоговорКонтрагента);
			Запрос.УстановитьПараметр("Момент", Объект.МоментВремени());

			Результат = Запрос.Выполнить();

			ВыборкаДетальныеЗаписи = Результат.Выбрать();

			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				НовыйДоговор = Объект.ДоговорКонтрагента.ПолучитьОбъект();
				Если (ВыборкаДетальныеЗаписи.ВидОперацииПоДоговору = Перечисления.дог_ВидыОперацийПоДоговору.ТоварныеОперации И ВыборкаДетальныеЗаписи.ВидДоговораПоТоварнымОперациям = Перечисления.дог_ВидыДоговоровПоТоварнымОперациям.ДоговорПоставки)
					ИЛИ (ВыборкаДетальныеЗаписи.ВидОперацииПоДоговору = Перечисления.дог_ВидыОперацийПоДоговору.НетоварныеОперации И ВыборкаДетальныеЗаписи.ВидОбязательства = Перечисления.дог_ВидыОбязательствПоДоговору.Исходящее) Тогда
					НовыйДоговор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
				ИначеЕсли (Объект.ВидОперацииПоДоговору = Перечисления.дог_ВидыОперацийПоДоговору.ТоварныеОперации 
					И (ВыборкаДетальныеЗаписи.ВидДоговораПоТоварнымОперациям = Перечисления.дог_ВидыДоговоровПоТоварнымОперациям.ДоговорРеализации ИЛИ ВыборкаДетальныеЗаписи.ВидДоговораПоТоварнымОперациям = Перечисления.дог_ВидыДоговоровПоТоварнымОперациям.ЗаказНаПриобретение))
					ИЛИ (ВыборкаДетальныеЗаписи.ВидОперацииПоДоговору = Перечисления.дог_ВидыОперацийПоДоговору.НетоварныеОперации И ВыборкаДетальныеЗаписи.ВидОбязательства = Перечисления.дог_ВидыОбязательствПоДоговору.Входящее) Тогда
					НовыйДоговор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
				Иначе
					НовыйДоговор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Прочее;
				КонецЕсли;
				НовыйДоговор.ДатаДоговора = ВыборкаДетальныеЗаписи.ДатаДоговора;
				НовыйДоговор.ДатаНачалаДействияДоговора = ВыборкаДетальныеЗаписи.ДатаНачала;
				НовыйДоговор.ДатаОкончанияДействияДоговора = ВыборкаДетальныеЗаписи.ДатаОкончания;
				Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("дог_РежимФормированияНаименованияКарточкиДоговора")=Перечисления.общ_РежимыФормирования.Автоматически Тогда
					НовыйДоговор.Наименование = "Договор № "+ВыборкаДетальныеЗаписи.ВходящийНомер+" от "+Формат(ВыборкаДетальныеЗаписи.ДатаДоговора,"ДФ=dd.MM.yyyy; ДП='Пустая дата'");
				КонецЕсли;
				НовыйДоговор.ТипЦен = ВыборкаДетальныеЗаписи.ТипЦен;
				НовыйДоговор.НомерДоговора = ВыборкаДетальныеЗаписи.ВходящийНомер;
				НовыйДоговор.ВедениеВзаиморасчетов = ВыборкаДетальныеЗаписи.ВедениеВзаиморасчетов;
				Попытка
					НовыйДоговор.Записать();
				Исключение
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка при изменении данных договора """+Объект.ДоговорКонтрагента+""":
						|	"+ОписаниеОшибки(),,,,Отказ);					
				КонецПопытки;		
			КонецЦикла;

		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ИзвлечьПередаваемыеДанные(Группа, Ключ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		ТекущиеДанные = ПараметрыСеанса.дог_ПередаваемыеДанные;
	Исключение
		ТекущиеДанные = Новый Соответствие;
	КонецПопытки;
	
	НовыеДанные = Новый Соответствие;
	Результат = Неопределено;
	Для Каждого Элемент Из ТекущиеДанные Цикл
		Если Ключ = Элемент.Ключ Тогда
			ДанныеГруппы = Новый Структура;
			Для Каждого ЭлементГруппы Из Элемент.Значение Цикл
				Если Группа = ЭлементГруппы.Ключ Тогда
					Результат = ЗначениеИзСтрокиВнутр(ЭлементГруппы.Значение);
				Иначе
					ДанныеГруппы.Вставить(ЭлементГруппы.Ключ,ЭлементГруппы.Значение);
				КонецЕсли;
			КонецЦикла;
			НовыеДанные.Вставить(Элемент.Ключ, Новый ФиксированнаяСтруктура(ДанныеГруппы));
		Иначе
			НовыеДанные.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЕсли;
	КонецЦикла;
	ПараметрыСеанса.дог_ПередаваемыеДанные = Новый ФиксированноеСоответствие(НовыеДанные);
	
	Возврат Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = фин_УправлениеПроведениемДокументовСервер.ПодготовитьПараметрыПроведения(ДокументСсылка,Отказ);
	
	ДоговорПоставки = Ложь;
	Если ДокументСсылка.ВидОперацииПоДоговору = Перечисления.дог_ВидыОперацийПоДоговору.ТоварныеОперации
		И ДокументСсылка.ВидДоговораПоТоварнымОперациям = Перечисления.дог_ВидыДоговоровПоТоварнымОперациям.ДоговорПоставки Тогда
		ДоговорПоставки = Истина;
	КонецЕсли;
	
	Если ПараметрыПроведения.ТаблицаТовары = Неопределено Тогда 
		ПараметрыПроведения.ТаблицаТовары = ДокументСсылка.Товары.ВыгрузитьКолонки();
	КонецЕсли;
	Если ПараметрыПроведения.ТаблицаУслуги = Неопределено Тогда 
		ПараметрыПроведения.ТаблицаУслуги = ДокументСсылка.Услуги.ВыгрузитьКолонки();
	КонецЕсли;
	Если ПараметрыПроведения.ТаблицаОС = Неопределено Тогда 
		ПараметрыПроведения.ТаблицаОС = ДокументСсылка.ОС.ВыгрузитьКолонки();
	КонецЕсли;	
	
	Если НЕ ДоговорПоставки Тогда
		ПараметрыПроведения.ТаблицаТовары.ЗаполнитьЗначения(Справочники.ОсновныеСредства.ПустаяСсылка(),"ОбъектРемонта");
		ПараметрыПроведения.ТаблицаУслуги.ЗаполнитьЗначения(Справочники.ОсновныеСредства.ПустаяСсылка(),"ОбъектРемонта");
		ПараметрыПроведения.ТаблицаТовары.ЗаполнитьЗначения(Справочники.ПодразделенияОрганизаций.ПустаяСсылка(),"Подразделение");
		ПараметрыПроведения.ТаблицаУслуги.ЗаполнитьЗначения(Справочники.ПодразделенияОрганизаций.ПустаяСсылка(),"Подразделение");
	КонецЕсли;
	Если НЕ ДокументСсылка.УчитыватьНДС Тогда
		ПараметрыПроведения.ТаблицаТовары.ЗаполнитьЗначения(Справочники.СтавкиНДС.ПустаяСсылка(),"СтавкаНДС");
		ПараметрыПроведения.ТаблицаУслуги.ЗаполнитьЗначения(Справочники.СтавкиНДС.ПустаяСсылка(),"СтавкаНДС");
        ПараметрыПроведения.ТаблицаОС.ЗаполнитьЗначения(Справочники.СтавкиНДС.ПустаяСсылка(),"СтавкаНДС");
    КонецЕсли;	
	
	ПараметрыПроведения.ТаблицаТовары.Свернуть("Номенклатура, СтавкаНДС, ЕдиницаИзмерения, Коэффициент, Цена, ДатаПоставки, ОбъектРемонта, Подразделение,Заказ,ЗаявкаМТС,Проект","Количество, Сумма, СуммаНДС");
	ПараметрыПроведения.ТаблицаУслуги.Свернуть("Номенклатура, СтавкаНДС, Цена, ДатаПоставки, ОбъектРемонта, Подразделение,Заказ,ЗаявкаМТС,Проект","Количество,Сумма,СуммаНДС");
	ПараметрыПроведения.ТаблицаОС.Свернуть("Номенклатура, СтавкаНДС, Цена, ДатаПоставки, Подразделение,Заказ,ЗаявкаМТС,Проект","Количество,Сумма,СуммаНДС");
	
	Возврат ПараметрыПроведения;

КонецФункции 

//Процедура ДвиженияПоРегистрам
//
Процедура СформироватьДвиженияПоРегистрам(Объект, Движения, ТаблицаПоТоварам, ТаблицаПоУслугам, ТаблицаПоОС) Экспорт
	УчетНДС = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("УчитыватьСуммуНДСПриУчетеИсполненияТоварныхДоговоров");
	Если Объект.ВидОперации = Перечисления.дог_ВидыОперацийДоговор.ДополнительноеСоглашение Тогда
		ОбработатьИзмененияСпецифики(Объект, Движения, ТаблицаПоТоварам, ТаблицаПоУслугам, ТаблицаПоОС);
	КонецЕсли;
	Движения.дог_ДоговорыИДополнительныеСоглашения.Записывать 	= Истина;
	Движения.дог_ДополнительныеПараметрыДоговоров.Записывать 		= Истина;
	Движения.дог_СпецификацияДоговоров.Записывать 				= Истина;
	Движения.дог_СобытияПоДоговорам.Записывать 					= Истина;
	Движения.дог_ЗарегистрированныеДоговорыКонтрагентов.Записывать = Истина;
	//Регистр дог_ДоговорыИДополнительныеСоглашения
	Если Объект.ВидОперации = Перечисления.дог_ВидыОперацийДоговор.ДополнительноеСоглашение Тогда
		Если Объект.ВариантРегистрацииДополнительногоСоглашения<>Перечисления.дог_ВариантыРегистрацииДополнительныхСоглашений.КорректировкаСуществующегоДоговораКонтрагента Тогда
			Если Объект.ВариантРегистрацииДополнительногоСоглашения=Перечисления.дог_ВариантыРегистрацииДополнительныхСоглашений.ПереносДоговорныхОбязательствНаНовыйДоговорКонтрагента Тогда

				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	Договоры.Организация,
					|	Договоры.Договор,
					|	Договоры.СтруктурноеПодразделение,
					|	Договоры.ВерхнийПределЗадолженности,
					|	Договоры.ВидДоговораПоТоварнымОперациям,
					|	Договоры.ВидОбязательства,
					|	Договоры.ВидОперацииЗаявки,
					|	Договоры.ВидОперацииПоДоговору,
					|	Договоры.ВидОплаты,
					|	Договоры.ВходящийНомер,
					|	Договоры.График,
					|	Договоры.ДатаДоговора,
					|	Договоры.ДатаНачала,
					|	Договоры.ДатаНачалаОплаты,
					|	Договоры.ДатаОкончания,
					|	Договоры.ДатаОкончанияОплаты,
					|	Договоры.ДатаОплаты,
					|	Договоры.ДеньОплаты,
					|	Договоры.КоличествоДнейНачисленияПени,
					|	Договоры.КоличествоДнейПросрочки,
					|	Договоры.МинимальнаяСуммаПлатежа,
					|	Договоры.ОбщаяСуммаДоговора,
					|	Договоры.ПериодичностьОплаты,
					|	Договоры.ПериодичностьСмещения,
					|	Договоры.Подразделение,
					|	Договоры.ПроцентОтСуммы,
					|	Договоры.СмещениеВПериодах,
					|	Договоры.СпособНачисленияПени,
					|	Договоры.СпособОплаты,
					|	Договоры.СпособРасчетаСуммыПлатежа,
					|	Договоры.СтавкаПени,
					|	Договоры.СтатьяДДС,
					|	Договоры.СуммаВключаетНДС,
					|	Договоры.СуммаПлатежа,
					|	Договоры.Сценарий,
					|	Договоры.ТипЦен,
					|	Договоры.УчитыватьНДС,
					|	Договоры.ФинансовыйПоказатель,
					|	Договоры.ФинансовыйПоказательСценария,
					|	Договоры.ВедениеВзаиморасчетов,
					|	Договоры.КонтролироватьСрокиПоставки,
					|	Договоры.АвтоматическоеСозданиеСобытийДляРасчетовПоГрафику,
					|	Договоры.ПравилоРасчетаПлатежей
					|ИЗ
					|	РегистрСведений.дог_ДоговорыИДополнительныеСоглашения.СрезПоследних(&МоментВремени, Договор = &ПервоначальныйДоговор) КАК Договоры";

				Запрос.УстановитьПараметр("МоментВремени", Объект.МоментВремени());
				Запрос.УстановитьПараметр("ПервоначальныйДоговор", Объект.ПервоначальныйДоговор);

				Результат = Запрос.Выполнить();

				ВыборкаДетальныеЗаписи = Результат.Выбрать();

				Если ВыборкаДетальныеЗаписи.Следующий() Тогда
					Движение = Движения.дог_ДоговорыИДополнительныеСоглашения.Добавить();
					Движение.Период = ?(Объект.ВидОперации=Перечисления.дог_ВидыОперацийДоговор.Договор,НачалоДня(Объект.Дата),Объект.Дата);
					ЗаполнитьЗначенияСвойств(Движение,ВыборкаДетальныеЗаписи);
					Если Объект.ВариантРегистрацииДополнительногоСоглашения=Перечисления.дог_ВариантыРегистрацииДополнительныхСоглашений.ПереносДоговорныхОбязательствНаНовыйДоговорКонтрагента Тогда
						Движение.ЗамещающийДоговор = Объект.ДоговорКонтрагента;
					КонецЕсли;
					Движение.ВариантРегистрацииДополнительногоСоглашения 	= Объект.ВариантРегистрацииДополнительногоСоглашения;
				КонецЕсли;

			КонецЕсли;
			
			Движение = Движения.дог_ЗарегистрированныеДоговорыКонтрагентов.Добавить();
			Движение.Период						= Объект.Дата;
			Движение.Организация				= Объект.Организация;
			Движение.СтруктурноеПодразделение	= Объект.СтруктурноеПодразделение;
			Движение.Контрагент					= Объект.Контрагент;
			Движение.Договор					= Объект.ДоговорКонтрагента;
			Движение.ПервоначальныйДоговор		= Объект.ПервоначальныйДоговор;
			Движение.ВариантРегистрацииДополнительногоСоглашения 	= Объект.ВариантРегистрацииДополнительногоСоглашения;
			Если Объект.ВариантРегистрацииДополнительногоСоглашения=Перечисления.дог_ВариантыРегистрацииДополнительныхСоглашений.ПереносДоговорныхОбязательствНаНовыйДоговорКонтрагента Тогда
				Движение = Движения.дог_ЗарегистрированныеДоговорыКонтрагентов.Добавить();
				Движение.Период						= Объект.Дата;
				Движение.Организация				= Объект.Организация;
				Движение.СтруктурноеПодразделение	= Объект.СтруктурноеПодразделение;
				Движение.Контрагент					= Объект.Контрагент;
				Движение.Договор					= Объект.ПервоначальныйДоговор;
				Движение.ПервоначальныйДоговор		= дог_УправлениеДоговорами.ПолучитьПервоначальныйДоговорКонтрагента(Объект.ПервоначальныйДоговор);
				Движение.ВариантРегистрацииДополнительногоСоглашения 	= Объект.ВариантРегистрацииДополнительногоСоглашения;
				Движение.ЗамещающийДоговор 			= Объект.ДоговорКонтрагента;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Движение = Движения.дог_ЗарегистрированныеДоговорыКонтрагентов.Добавить();
		Движение.Период						= Объект.Дата;
		Движение.Организация				= Объект.Организация;
		Движение.СтруктурноеПодразделение	= Объект.СтруктурноеПодразделение;
		Движение.Контрагент					= Объект.Контрагент;
		Движение.Договор					= Объект.ДоговорКонтрагента;
		Движение.ПервоначальныйДоговор		= Объект.ДоговорКонтрагента;
	КонецЕсли;
	Движение = Движения.дог_ДоговорыИДополнительныеСоглашения.Добавить();
	Движение.Период = ?(Объект.ВидОперации=Перечисления.дог_ВидыОперацийДоговор.Договор,НачалоДня(Объект.Дата),Объект.Дата);
	Движение.СтруктурноеПодразделение = Объект.СтруктурноеПодразделение;
	Движение.ВидОперацииПоДоговору = Объект.ВидОперацииПоДоговору;
	//Если Объект.ВидОперацииПоДоговору = Перечисления.дог_ВидыОперацийПоДоговору.ТоварныеОперации Тогда
	//	Движение.ВидДоговораПоТоварнымОперациям = Объект.ВидДоговораПоТоварнымОперациям;
	//Иначе
	Движение.ВидОбязательства = Объект.ВидОбязательства;		
	//КонецЕсли;
	Движение.ДатаДоговора 			= Объект.ДатаДоговора;
	Движение.ДатаНачала 			= Объект.ДатаНачала;
	Движение.ДатаОкончания 			= Объект.ДатаОкончания;
	Движение.ВходящийНомер 			= Объект.ВходящийНомер;
	Движение.Договор 				= Объект.ДоговорКонтрагента;
	Движение.Организация 			= Объект.Организация;
	Движение.СпособОплаты 			= Объект.СпособОплаты;
	Движение.ВидОплаты 				= Объект.ВидОплаты;
	Движение.УчитыватьНДС 			= Объект.УчитыватьНДС;
	Движение.ОбщаяСуммаДоговора		= Объект.ОбщаяСуммаДоговора;
	Движение.ТипЦен 				= Объект.ТипЦен;
	Движение.СтатьяДДС 				= Объект.СтатьяДДС;
	Движение.Подразделение 			= Объект.Подразделение;
	Движение.СуммаВключаетНДС 		= Объект.СуммаВключаетНДС;
	Движение.ВидОперацииЗаявки 		= Объект.ВидОперацииЗаявки;
	Движение.ВедениеВзаиморасчетов 	= Объект.ВедениеВзаиморасчетов;
	Если Объект.ВидОплаты = Перечисления.дог_ВидыОплатыПоДоговору.Разовая Тогда
		Движение.ДатаОплаты = Объект.ДатаОплаты;
	ИначеЕсли Объект.ВидОплаты = Перечисления.дог_ВидыОплатыПоДоговору.Регулярная Тогда
		Движение.ДеньОплаты = Объект.ДеньОплаты;
        Движение.ПериодичностьОплаты			= Объект.ПериодичностьОплаты;
		Движение.ДатаНачалаОплаты 				= Объект.ДатаНачалаОплаты;
		Движение.ДатаОкончанияОплаты 			= Объект.ДатаОкончанияОплаты;
		Движение.ПериодичностьСмещения 			= Объект.ПериодичностьСмещения;
		Движение.СмещениеВПериодах 				= Объект.СмещениеВПериодах;
 		Движение.АвтоматическоеСозданиеСобытийДляРасчетовПоГрафику 		= Объект.АвтоматическоеСозданиеСобытийДляРасчетовПоГрафику;
		Если Объект.АвтоматическоеСозданиеСобытийДляРасчетовПоГрафику Тогда
			Движение.ПравилоРасчетаПлатежей 		= Объект.ПравилоРасчетаПлатежей;
		КонецЕсли;
   ИначеЕсли Объект.ВидОплаты = Перечисления.дог_ВидыОплатыПоДоговору.ПоГрафику Тогда
        Движение.График 							= Объект.График;
		Движение.АвтоматическоеСозданиеСобытийДляРасчетовПоГрафику 		= Объект.АвтоматическоеСозданиеСобытийДляРасчетовПоГрафику;
		Если Объект.АвтоматическоеСозданиеСобытийДляРасчетовПоГрафику Тогда
			Движение.ПравилоРасчетаПлатежей 		= Объект.ПравилоРасчетаПлатежей;
			Движение.ДеньОплаты 					= Объект.ДеньОплаты;
	        Движение.ПериодичностьОплаты			= Объект.ПериодичностьОплаты;
			Движение.ДатаНачалаОплаты 				= Объект.ДатаНачалаОплаты;
			Движение.ДатаОкончанияОплаты 			= Объект.ДатаОкончанияОплаты;
			Движение.ПериодичностьСмещения 			= Объект.ПериодичностьСмещения;
			Движение.СмещениеВПериодах 				= Объект.СмещениеВПериодах;
		КонецЕсли;
	КонецЕсли;                                             
	Движение.СпособНачисленияПени 				= Объект.СпособНачисленияПени;
	Движение.СтавкаПени 						= Объект.СтавкаПени;                 
	Движение.КоличествоДнейНачисленияПени 		= Объект.КоличествоДнейНачисленияПени;
	Движение.КоличествоДнейПросрочки 			= Объект.КоличествоДнейПросрочки;
	Движение.ДопСоглашение 						= ?(Объект.ВидОперации = Перечисления.дог_ВидыОперацийДоговор.ДополнительноеСоглашение,Истина,Ложь);
	Движение.СпособРасчетаСуммыПлатежа			= Объект.СпособРасчетаСуммыПлатежа;
	Движение.МинимальнаяСуммаПлатежа 			= Объект.МинимальнаяСуммаПлатежа;
	Движение.ВерхнийПределЗадолженности 		= Объект.ВерхнийПределЗадолженности;
	Движение.ПроцентОтСуммы = Объект.ПроцентОтСуммы;
	Движение.СуммаПлатежа 	= Объект.СуммаПлатежа;
	Движение.Сценарий 		= Объект.Сценарий;
	Движение.ФинансовыйПоказатель 				= Объект.ФинансовыйПоказатель;
	Движение.ФинансовыйПоказательСценария 		= Объект.ФинансовыйПоказательСценария;
	
	Если Объект.ВидОперации = Перечисления.дог_ВидыОперацийДоговор.ДополнительноеСоглашение Тогда
		Движение.ВариантРегистрацииДополнительногоСоглашения 	= Объект.ВариантРегистрацииДополнительногоСоглашения;
		Движение.ПервоначальныйДоговор 							= Объект.ПервоначальныйДоговор;
	КонецЕсли;
	
	Если Объект.ВидОперацииПоДоговору = Перечисления.дог_ВидыОперацийПоДоговору.ТоварныеОперации Тогда
		Движение.КонтролироватьСрокиПоставки	= Объект.КонтролироватьСрокиПоставки;
	КонецЕсли;
	

	//Регистр дог_ДополнительныеПараметрыДоговоров
	Для Каждого ТекСтр Из Объект.ДополнительныеПараметры Цикл
		Движение = Движения.дог_ДополнительныеПараметрыДоговоров.Добавить();
		Движение.Период 	= Объект.Дата;
		Движение.Договор 	= Объект.ДоговорКонтрагента;
		ЗаполнитьЗначенияСвойств(Движение, ТекСтр);
	КонецЦикла;
	
	УчетПоПроектам = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("узп_ВестиУчетЗакупокПоПроектам");
	
	Если Объект.ВидОперацииПоДоговору = Перечисления.дог_ВидыОперацийПоДоговору.ТоварныеОперации Тогда
		ДоговорПоставки 	= ?(Объект.ВидДоговораПоТоварнымОперациям = Перечисления.дог_ВидыДоговоровПоТоварнымОперациям.ДоговорПоставки
			ИЛИ Объект.ВидДоговораПоТоварнымОперациям = Перечисления.дог_ВидыДоговоровПоТоварнымОперациям.ЗаказНаПриобретение,Истина,Ложь);
		
		Для Каждого ТекСтр Из ТаблицаПоТоварам Цикл
			Движение = Движения.дог_СпецификацияДоговоров.Добавить();
			//измерения
			Движение.Период 		= Объект.Дата;
			Движение.СтруктурноеПодразделение = Объект.СтруктурноеПодразделение;
			Движение.Организация 	= Объект.Организация;
			Движение.Договор 		= Объект.ДоговорКонтрагента;
			Движение.НоменклатураОС = ТекСтр.Номенклатура;
			Движение.ДатаПоставки 	= ТекСтр.ДатаПоставки;
			Движение.ЕдиницаИзмерения = ТекСтр.ЕдиницаИзмерения;
			Движение.Коэффициент 	= ТекСтр.Коэффициент;
			Движение.Цена 			= ТекСтр.Цена;
			Если Объект.УчитыватьНДС Тогда
				Движение.СтавкаНДС 	= ТекСтр.СтавкаНДС;
				Движение.СуммаНДС 	= ТекСтр.СуммаНДС;
			КонецЕсли;
			Движение.Подразделение 	= ТекСтр.Подразделение;
			Движение.Заказ 			= ТекСтр.Заказ;
			Движение.ЗаявкаМТС 		= ТекСтр.ЗаявкаМТС;
			Движение.ОбъектРемонта 	= ТекСтр.ОбъектРемонта;
			//ресурсы
			Движение.Количество 	= ТекСтр.Количество;
			Движение.Сумма 			= ТекСтр.Сумма;
			Если УчетПоПроектам Тогда
				Движение.Проект			= ТекСтр.Проект;
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого ТекСтр Из ТаблицаПоУслугам Цикл
			Движение = Движения.дог_СпецификацияДоговоров.Добавить();
			//измерения
			Движение.Период 		= Объект.Дата;
			Движение.СтруктурноеПодразделение = Объект.СтруктурноеПодразделение;
			Движение.Организация 	= Объект.Организация;
			Движение.Договор 		= Объект.ДоговорКонтрагента;
			Движение.НоменклатураОС = ТекСтр.Номенклатура;
			Движение.ДатаПоставки 	= ТекСтр.ДатаПоставки;
			Движение.Цена = ТекСтр.Цена;
			Если Объект.УчитыватьНДС Тогда
				Движение.СтавкаНДС 	= ТекСтр.СтавкаНДС;
				Движение.СуммаНДС 	= ТекСтр.СуммаНДС;
			КонецЕсли;
			Движение.Подразделение 	= ТекСтр.Подразделение;
			Движение.Заказ 			= ТекСтр.Заказ;
			Движение.ЗаявкаМТС 		= ТекСтр.ЗаявкаМТС;
			Движение.ОбъектРемонта 	= ТекСтр.ОбъектРемонта;
			//ресурсы
			Движение.Количество 	= ТекСтр.Количество;
			Движение.Сумма 			= ТекСтр.Сумма;
			Если УчетПоПроектам тогда
				Движение.Проект			= ТекСтр.Проект;
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого ТекСтр Из ТаблицаПоОС Цикл
			Движение = Движения.дог_СпецификацияДоговоров.Добавить();
			//измерения
			Движение.Период 					= Объект.Дата;
			Движение.СтруктурноеПодразделение 	= Объект.СтруктурноеПодразделение;
			Движение.Организация 				= Объект.Организация;
			Движение.Договор 					= Объект.ДоговорКонтрагента;
			Движение.НоменклатураОС 			= ТекСтр.Номенклатура;
			Движение.ДатаПоставки 				= ТекСтр.ДатаПоставки;
			
			Если Объект.УчитыватьНДС Тогда
				Движение.СтавкаНДС 				= ТекСтр.СтавкаНДС;
				Движение.СуммаНДС 				= ТекСтр.СуммаНДС;
			КонецЕсли;
			//ресурсы
			Движение.Количество 	= ТекСтр.Количество;
			Движение.Цена 			= ТекСтр.Цена;
			Движение.Подразделение 	= ТекСтр.Подразделение;
			Движение.Заказ 			= ТекСтр.Заказ;
			Движение.ЗаявкаМТС 		= ТекСтр.ЗаявкаМТС;
			Движение.Сумма 			= ТекСтр.Сумма;
			Если УчетПоПроектам Тогда
				Движение.Проект			= ТекСтр.Проект;
			КонецЕсли;
						
		КонецЦикла;

		ДвиженияПоЗаказам(Объект, Движения, ДоговорПоставки);
		
	КонецЕсли;
	
	Движение 							= Движения.дог_СобытияПоДоговорам.Добавить();
	Движение.Организация 				= Объект.Организация;
	Движение.СтруктурноеПодразделение	= Объект.СтруктурноеПодразделение;
	Движение.ДоговорКонтрагента 		= Объект.ДоговорКонтрагента;
	Движение.Период 					= Объект.Дата;
	Движение.Событие 					= ?(Объект.ВидОперации = Перечисления.дог_ВидыОперацийДоговор.Договор,Справочники.дог_СобытияПоДоговору.РегистрацияДоговора,Справочники.дог_СобытияПоДоговору.ЗаключениеДополнительногоСоглашения);
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("УчитыватьИсполнениеТоварныхДоговоров") Тогда
		ДвиженияПоИсполнениюДоговоров(Объект, Движения, ТаблицаПоТоварам, ТаблицаПоУслугам, ТаблицаПоОС, УчетНДС);
	КонецЕсли;
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("дог_КонтролироватьСрокиПоставокПоДоговорам") И Объект.КонтролироватьСрокиПоставки И фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("дог_ДатаНачалаКонтроляСроковПоставокПоДоговорам")<=Объект.Дата Тогда
		ДвиженияПоГрафикуПоставок(Объект, Движения, ТаблицаПоТоварам,ТаблицаПоУслугам,ТаблицаПоОС);
	КонецЕсли;
	
	Если Объект.ВидОплаты = Перечисления.дог_ВидыОплатыПоДоговору.ПоИндивидуальномуГрафику Тогда
		ДвиженияПоДаннымИндивидуальногоГрафика(Объект, Движения);
	КонецЕсли;
КонецПроцедуры

Процедура ДвиженияПоДаннымИндивидуальногоГрафика(Объект, Движения)
    Движения.дог_ДанныеИндивидуальныхГрафиковПлатежейПоДоговорам.Записывать	= Истина;
	Для Каждого СтрокаГрафик Из Объект.ГрафикПлатежей Цикл
		Движение = Движения.дог_ДанныеИндивидуальныхГрафиковПлатежейПоДоговорам.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, СтрокаГрафик);
		Движение.Организация 				= Объект.Организация;
		Движение.СтруктурноеПодразделение 	= Объект.СтруктурноеПодразделение;
		Движение.Договор 					= Объект.ДоговорКонтрагента;
		Движение.ДокументРегистрации 		= Объект.Ссылка;
		Движение.Период 					= Объект.Дата;
	КонецЦикла;

КонецПроцедуры
 
Процедура ДвиженияПоГрафикуПоставок(Объект, Движения, ТабТов, ТабУсл, ТабОС)
	Движения.дог_ГрафикиПоставокПоДоговорам.Записать();
	Движения.дог_ГрафикиПоставокПоДоговорам.Записывать = Истина;
	Запрос = Новый Запрос;
	Если Объект.ВидОперации=Перечисления.дог_ВидыОперацийДоговор.ДополнительноеСоглашение И Объект.ВариантРегистрацииДополнительногоСоглашения=Перечисления.дог_ВариантыРегистрацииДополнительныхСоглашений.КорректировкаСуществующегоДоговораКонтрагента И Объект.СпособКорректировкиТоварнойСпецификацииДоговора = Перечисления.дог_СпособыКорректировкиТоварнойСпецификацииДоговора.УказаниеИзменяемыхНоменклатурныхПозиций Тогда
		Движения.дог_СпецификацияДоговоров.Записать();
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СпецификацияДоговоров.НоменклатураОС КАК Номенклатура,
			|	СпецификацияДоговоров.ДатаПоставки КАК ДатаПоставки,
			|	СУММА(СпецификацияДоговоров.Количество * ВЫБОР
			|			КОГДА СпецификацияДоговоров.Коэффициент = 0
			|				ТОГДА 1
			|			ИНАЧЕ СпецификацияДоговоров.Коэффициент
			|		КОНЕЦ) КАК Количество
			|ПОМЕСТИТЬ Док
			|ИЗ
			|	РегистрСведений.дог_СпецификацияДоговоров.СрезПоследних(
			|			&Момент,
			|			Договор = &ДоговорКонтрагента
			|				И Организация = &Организация) КАК СпецификацияДоговоров
			|ГДЕ
			|	СпецификацияДоговоров.Количество <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	СпецификацияДоговоров.НоменклатураОС,
			|	СпецификацияДоговоров.ДатаПоставки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	&ДоговорКонтрагента КАК ДоговорКонтрагента,
			|	Док.ДатаПоставки КАК ДатаПоставки,
			|	Док.Номенклатура,
			|	Док.Количество,
			|	ИсполнениеДоговоровОбороты.НоменклатураОС,
			|	ИсполнениеДоговоровОбороты.КоличествоПриход
			|ИЗ
			|	Док КАК Док
			|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.дог_ГрафикиПоставокПоДоговорам.Обороты(
			|				,
			|				&Момент,
			|				,
			|				ДоговорКонтрагента = &ДоговорКонтрагента
			|					И Организация = &Организация) КАК ИсполнениеДоговоровОбороты
			|		ПО Док.Номенклатура = ИсполнениеДоговоровОбороты.НоменклатураОС
			|			И Док.ДатаПоставки = ИсполнениеДоговоровОбороты.ДатаПоставки
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаПоставки";
	Иначе
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Таб.Номенклатура КАК Номенклатура,
			|	Таб.ДатаПоставки КАК ДатаПоставки,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(Таб.Коэффициент, 0) <> 0
			|			ТОГДА Таб.Количество * Таб.Коэффициент
			|		ИНАЧЕ Таб.Коэффициент
			|	КОНЕЦ КАК Количество
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	&ТабТов КАК Таб
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Таб.Номенклатура КАК Номенклатура,
			|	Таб.ДатаПоставки КАК ДатаПоставки,
			|	Таб.Количество
			|ПОМЕСТИТЬ Услуги
			|ИЗ
			|	&ТабУсл КАК Таб
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Таб.Номенклатура КАК Номенклатура,
			|	Таб.ДатаПоставки КАК ДатаПоставки,
			|	Таб.Количество КАК Количество
			|ПОМЕСТИТЬ ОС
			|ИЗ
			|	&ТабОС КАК Таб
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.Номенклатура,
			|	ВложенныйЗапрос.ДатаПоставки КАК ДатаПоставки,
			|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
			|ПОМЕСТИТЬ Док
			|ИЗ
			|	(ВЫБРАТЬ
			|		ОС.Номенклатура КАК Номенклатура,
			|		ОС.ДатаПоставки КАК ДатаПоставки,
			|		ОС.Количество КАК Количество
			|	ИЗ
			|		ОС КАК ОС
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Товары.Номенклатура,
			|		Товары.ДатаПоставки,
			|		Товары.Количество
			|	ИЗ
			|		Товары КАК Товары
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Услуги.Номенклатура,
			|		Услуги.ДатаПоставки,
			|		Услуги.Количество
			|	ИЗ
			|		Услуги КАК Услуги) КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.Номенклатура,
			|	ВложенныйЗапрос.ДатаПоставки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	&ДоговорКонтрагента КАК ДоговорКонтрагента,
			|	Док.Номенклатура,
			|	Док.ДатаПоставки КАК ДатаПоставки,
			|	Док.Количество,
			|	ИсполнениеДоговоровОбороты.НоменклатураОС,
			|	ИсполнениеДоговоровОбороты.КоличествоПриход
			|ИЗ
			|	Док КАК Док
			|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.дог_ГрафикиПоставокПоДоговорам.Обороты(
			|				,
			|				&Момент,
			|				,
			|				ДоговорКонтрагента = &ДоговорКонтрагента
			|					И Организация = &Организация) КАК ИсполнениеДоговоровОбороты
			|		ПО Док.Номенклатура = ИсполнениеДоговоровОбороты.НоменклатураОС
			|			И Док.ДатаПоставки = ИсполнениеДоговоровОбороты.ДатаПоставки
			|
			|";
			
		Если Объект.ВариантРегистрацииДополнительногоСоглашения=Перечисления.дог_ВариантыРегистрацииДополнительныхСоглашений.ПереносДоговорныхОбязательствНаНовыйДоговорКонтрагента Тогда
			Запрос.Текст =Запрос.Текст +"
			|ОБЪЕДИНИТЬ ВСЕ
			|ВЫБРАТЬ
			|	&ПервоначальныйДоговор, 
			|	NULL,
			|	ИсполнениеДоговоровОбороты.ДатаПоставки,
			|	NULL,
			|	ИсполнениеДоговоровОбороты.НоменклатураОС,
			|	ИсполнениеДоговоровОбороты.КоличествоПриход - ИсполнениеДоговоровОбороты.КоличествоРасход
			|ИЗ
			|	РегистрНакопления.дог_ГрафикиПоставокПоДоговорам.Обороты(
			|				,
			|				&Момент,
			|				,
			|				ДоговорКонтрагента = &ПервоначальныйДоговор
			|					И Организация = &Организация) КАК ИсполнениеДоговоровОбороты
			|	ГДЕ ИсполнениеДоговоровОбороты.КоличествоПриход - ИсполнениеДоговоровОбороты.КоличествоРасход >0
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаПоставки";
			
			Запрос.УстановитьПараметр("ПервоначальныйДоговор", Объект.ПервоначальныйДоговор);
		Иначе
			Запрос.Текст =Запрос.Текст +"
			|УПОРЯДОЧИТЬ ПО
			|	ДатаПоставки";
		КонецЕсли;
	КонецЕсли;
	Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Момент", Объект.МоментВремени());
	Запрос.УстановитьПараметр("ТабТов", ТабТов);
	Запрос.УстановитьПараметр("ТабУсл", ТабУсл);
    Запрос.УстановитьПараметр("ТабОС", ТабОС);

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Номенклатура = Null Тогда
			Номенклатура = Выборка.НоменклатураОС;
			Количество = -Выборка.КоличествоПриход;
		ИначеЕсли Выборка.НоменклатураОС = Null Тогда
			Номенклатура = Выборка.Номенклатура;
			Количество = Выборка.Количество;
		Иначе
			Номенклатура = Выборка.Номенклатура;
			Количество = Выборка.Количество - Выборка.КоличествоПриход;
		КонецЕсли;
		Если Количество <> 0 Тогда
			Движение = Движения.дог_ГрафикиПоставокПоДоговорам.ДобавитьПриход();
			Движение.Период 						= Объект.Дата;
			Движение.Организация 					= Объект.Организация;
			Движение.СтруктурноеПодразделение 		= Объект.СтруктурноеПодразделение;
			Движение.ДоговорКонтрагента 			= Выборка.ДоговорКонтрагента;
			Движение.НоменклатураОС 				= Номенклатура;
			Движение.Контрагент 					= Объект.Контрагент;
			Движение.ВидДоговораПоТоварнымОперациям = Объект.ВидДоговораПоТоварнымОперациям;
			Движение.ДатаПоставки 					= Выборка.ДатаПоставки;
			Движение.Количество 					= Количество;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДвиженияПоИсполнениюДоговоров(Объект, Движения, ТабТов, ТабУсл, ТабОС, УчетНДС)
	Движения.дог_ИсполнениеДоговоров.Записать();
	Движения.дог_ИсполнениеДоговоров.Записывать = Истина;
	Запрос = Новый Запрос;
	Если Объект.ВидОперации=Перечисления.дог_ВидыОперацийДоговор.ДополнительноеСоглашение И Объект.ВариантРегистрацииДополнительногоСоглашения=Перечисления.дог_ВариантыРегистрацииДополнительныхСоглашений.КорректировкаСуществующегоДоговораКонтрагента И Объект.СпособКорректировкиТоварнойСпецификацииДоговора = Перечисления.дог_СпособыКорректировкиТоварнойСпецификацииДоговора.УказаниеИзменяемыхНоменклатурныхПозиций Тогда
		Движения.дог_СпецификацияДоговоров.Записать();
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СпецификацияДоговоров.НоменклатураОС КАК Номенклатура,
			|	СУММА(СпецификацияДоговоров.Количество*ВЫБОР КОГДА СпецификацияДоговоров.Коэффициент=0 ТОГДА 1 ИНАЧЕ СпецификацияДоговоров.Коэффициент КОНЕЦ) КАК Количество,
			|	СУММА(СпецификацияДоговоров.Сумма) КАК Сумма,
			|	СУММА(СпецификацияДоговоров.СуммаНДС) КАК СуммаНДС
			|ПОМЕСТИТЬ Док
			|ИЗ
			|	РегистрСведений.дог_СпецификацияДоговоров.СрезПоследних(&Момент,Договор=&ДоговорКонтрагента И Организация = &Организация) КАК СпецификацияДоговоров
			|ГДЕ СпецификацияДоговоров.Количество<>0
			|
			|СГРУППИРОВАТЬ ПО
			|	СпецификацияДоговоров.НоменклатураОС
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	&ДоговорКонтрагента КАК ДоговорКонтрагента, 
			|	Док.Номенклатура,
			|	Док.Количество,
			|	Док.Сумма,
			|	Док.СуммаНДС,
			|	ИсполнениеДоговоровОбороты.НоменклатураОС,
			|	ИсполнениеДоговоровОбороты.КоличествоПриход,
			|	ИсполнениеДоговоровОбороты.СуммаПриход
			|ИЗ
			|	Док КАК Док
			|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.дог_ИсполнениеДоговоров.Обороты(
			|				,
			|				&Момент,
			|				,
			|				ДоговорКонтрагента = &ДоговорКонтрагента
			|					И Организация = &Организация) КАК ИсполнениеДоговоровОбороты
			|		ПО Док.Номенклатура = ИсполнениеДоговоровОбороты.НоменклатураОС";
	Иначе
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Таб.Номенклатура КАК Номенклатура,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(Таб.Коэффициент, 0) <> 0
			|			ТОГДА Таб.Количество * Таб.Коэффициент
			|		ИНАЧЕ Таб.Коэффициент
			|	КОНЕЦ КАК Количество,
			|	Таб.Сумма,
			|	Таб.СуммаНДС
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	&ТабТов КАК Таб
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Таб.Номенклатура КАК Номенклатура,
			|	Таб.Количество,
			|	Таб.Сумма,
			|	Таб.СуммаНДС
			|ПОМЕСТИТЬ Услуги
			|ИЗ
			|	&ТабУсл КАК Таб
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Таб.Номенклатура КАК Номенклатура,
			|	Таб.Количество КАК Количество,
			|	Таб.Сумма,
			|	Таб.СуммаНДС
			|ПОМЕСТИТЬ ОС
			|ИЗ
			|	&ТабОС КАК Таб
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.Номенклатура,
			|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
			|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
			|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС
			|ПОМЕСТИТЬ Док
			|ИЗ
			|	(ВЫБРАТЬ
			|		ОС.Номенклатура КАК Номенклатура,
			|		ОС.Количество КАК Количество,
			|		ОС.Сумма КАК Сумма,
			|		ОС.СуммаНДС КАК СуммаНДС
			|	ИЗ
			|		ОС КАК ОС
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Товары.Номенклатура,
			|		Товары.Количество,
			|		Товары.Сумма,
			|		Товары.СуммаНДС
			|	ИЗ
			|		Товары КАК Товары
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Услуги.Номенклатура,
			|		Услуги.Количество,
			|		Услуги.Сумма,
			|		Услуги.СуммаНДС
			|	ИЗ
			|		Услуги КАК Услуги) КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	&ДоговорКонтрагента КАК ДоговорКонтрагента, 
			|	Док.Номенклатура,
			|	Док.Количество,
			|	Док.Сумма,
			|	Док.СуммаНДС,
			|	ИсполнениеДоговоровОбороты.НоменклатураОС,
			|	ИсполнениеДоговоровОбороты.КоличествоПриход,
			|	ИсполнениеДоговоровОбороты.СуммаПриход
			|ИЗ
			|	Док КАК Док
			|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.дог_ИсполнениеДоговоров.Обороты(
			|				,
			|				&Момент,
			|				,
			|				ДоговорКонтрагента = &ДоговорКонтрагента
			|					И Организация = &Организация) КАК ИсполнениеДоговоровОбороты
			|		ПО Док.Номенклатура = ИсполнениеДоговоровОбороты.НоменклатураОС";
			
		Если Объект.ВариантРегистрацииДополнительногоСоглашения=Перечисления.дог_ВариантыРегистрацииДополнительныхСоглашений.ПереносДоговорныхОбязательствНаНовыйДоговорКонтрагента Тогда
			Запрос.Текст = Запрос.Текст +"
			|ОБЪЕДИНИТЬ ВСЕ
			|ВЫБРАТЬ
			|	&ПервоначальныйДоговор, 
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL,
			|	ИсполнениеДоговоровОбороты.НоменклатураОС,
			|	ИсполнениеДоговоровОбороты.КоличествоПриход - ИсполнениеДоговоровОбороты.КоличествоРасход,
			|	ИсполнениеДоговоровОбороты.СуммаПриход  - ИсполнениеДоговоровОбороты.СуммаРасход
			|ИЗ
			|	РегистрНакопления.дог_ИсполнениеДоговоров.Обороты(
			|				,
			|				&Момент,
			|				,
			|				ДоговорКонтрагента = &ПервоначальныйДоговор
			|					И Организация = &Организация) КАК ИсполнениеДоговоровОбороты
			|	ГДЕ ИсполнениеДоговоровОбороты.КоличествоПриход - ИсполнениеДоговоровОбороты.КоличествоРасход >0";
			
			Запрос.УстановитьПараметр("ПервоначальныйДоговор", Объект.ПервоначальныйДоговор);
		КонецЕсли;
	КонецЕсли;
	Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Момент", Объект.МоментВремени());
	Запрос.УстановитьПараметр("ТабТов",ТабТов);
	Запрос.УстановитьПараметр("ТабУсл",ТабУсл);
    Запрос.УстановитьПараметр("ТабОС",ТабОС);

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Номенклатура = Null Тогда
			Номенклатура = Выборка.НоменклатураОС;
			Сумма = -Выборка.СуммаПриход;
			Количество = -Выборка.КоличествоПриход;
		ИначеЕсли Выборка.НоменклатураОС = Null Тогда
			Номенклатура = Выборка.Номенклатура;
			Если УчетНДС Тогда
				Сумма = ?(Объект.СуммаВключаетНДС,Выборка.Сумма,Выборка.Сумма+Выборка.СуммаНДС);
			Иначе
				Сумма = ?(Объект.СуммаВключаетНДС,Выборка.Сумма-Выборка.СуммаНДС,Выборка.Сумма);
			КонецЕсли;
			Количество = Выборка.Количество;
		Иначе
			Номенклатура = Выборка.Номенклатура;
			Если УчетНДС Тогда
				Сумма = ?(Объект.СуммаВключаетНДС,Выборка.Сумма,Выборка.Сумма+Выборка.СуммаНДС) - Выборка.СуммаПриход;
			Иначе
				Сумма = ?(Объект.СуммаВключаетНДС,Выборка.Сумма-Выборка.СуммаНДС,Выборка.Сумма) - Выборка.СуммаПриход;
			КонецЕсли;
			Количество = Выборка.Количество - Выборка.КоличествоПриход;
		КонецЕсли;
		Если Количество <> 0 Или Сумма <> 0 Тогда
			Движение = Движения.дог_ИсполнениеДоговоров.ДобавитьПриход();
			Движение.СтруктурноеПодразделение = Объект.СтруктурноеПодразделение;
			Движение.Организация = Объект.Организация;
			Движение.ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
			Движение.Период = Объект.Дата;
			Движение.НоменклатураОС = Номенклатура;
			Движение.Количество = Количество;
			Движение.Сумма = Сумма;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДвиженияПоЗаказам(Объект, Движения, ДоговорПоставки)
    Движения.узп_ЗаказыПокупателей.Записывать	= Истина;
	Движения.узп_ЗаказыПоставщикам.Записывать	= Истина;
	
	УчетПоПроектам = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("узп_ВестиУчетЗакупокПоПроектам");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрацияДоговоровТовары.Номенклатура,
		|	РегистрацияДоговоровТовары.Заказ,
		|	РегистрацияДоговоровТовары.Ссылка.Организация,
		|	РегистрацияДоговоровТовары.Ссылка.СтруктурноеПодразделение,
		|	Соответствие.ПлановаяНоменклатура КАК НоменклатураПлановая,
		|	Соответствие.ХарактеристикаПлановойНоменклатуры КАК Характеристика,
		|	РегистрацияДоговоровТовары.Подразделение,"+?(УчетПоПроектам,"
		|	РегистрацияДоговоровТовары.Проект,","")+"
		|	РегистрацияДоговоровТовары.Заказ,
		|	РегистрацияДоговоровТовары.ЗаявкаМТС КАК Заявка,
		|	РегистрацияДоговоровТовары.Ссылка.Контрагент,
		|	РегистрацияДоговоровТовары.ЕдиницаИзмерения,
		|	РегистрацияДоговоровТовары.ДатаПоставки КАК СрокПоставки,
		|	РегистрацияДоговоровТовары.Количество,
		|	РегистрацияДоговоровТовары.Сумма + ВЫБОР
		|		КОГДА РегистрацияДоговоровТовары.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА РегистрацияДоговоровТовары.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ РегистрацияДоговоровТовары.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	РегистрацияДоговоровТовары.Количество * РегистрацияДоговоровТовары.Коэффициент КАК КоличествоБазовое,
		|	РегистрацияДоговоровТовары.Ссылка.ВалютаДокумента,
		|	РегистрацияДоговоровТовары.Цена,
		|	РегистрацияДоговоровТовары.СтавкаНДС КАК СтавкаНДС
		|ИЗ
		|	Документ.дог_РегистрацияДоговоров.Товары КАК РегистрацияДоговоровТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК Соответствие
		|		ПО РегистрацияДоговоровТовары.Номенклатура = Соответствие.РегламентированнаяНоменклатура
		|ГДЕ
		|	РегистрацияДоговоровТовары.Ссылка = &Ссылка
		|	И РегистрацияДоговоровТовары.Заказ ССЫЛКА Документ."+?(ДоговорПоставки,"узп_ЗаказПоставщику","узп_ЗаказПокупателя")+"
		|	И РегистрацияДоговоровТовары.Заказ <> &ЗаказПустой
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрацияДоговоровУслуги.Номенклатура,
		|	РегистрацияДоговоровУслуги.Заказ,
		|	РегистрацияДоговоровУслуги.Ссылка.Организация,
		|	РегистрацияДоговоровУслуги.Ссылка.СтруктурноеПодразделение,
		|	Соответствие.ПлановаяНоменклатура,
		|	Соответствие.ХарактеристикаПлановойНоменклатуры,
		|	РегистрацияДоговоровУслуги.Подразделение,"+?(УчетПоПроектам,"
		|	РегистрацияДоговоровУслуги.Проект,","")+"
		|	РегистрацияДоговоровУслуги.Заказ,
		|	РегистрацияДоговоровУслуги.ЗаявкаМТС,
		|	РегистрацияДоговоровУслуги.Ссылка.Контрагент,
		|	NULL,
		|	РегистрацияДоговоровУслуги.ДатаПоставки,
		|	РегистрацияДоговоровУслуги.Количество,
		|	РегистрацияДоговоровУслуги.Сумма + ВЫБОР
		|		КОГДА РегистрацияДоговоровУслуги.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА РегистрацияДоговоровУслуги.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ РегистрацияДоговоровУслуги.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	РегистрацияДоговоровУслуги.Количество,
		|	РегистрацияДоговоровУслуги.Ссылка.ВалютаДокумента,
		|	РегистрацияДоговоровУслуги.Цена,
		|	РегистрацияДоговоровУслуги.СтавкаНДС
		|ИЗ
		|	Документ.дог_РегистрацияДоговоров.Услуги КАК РегистрацияДоговоровУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствиеПлановойИРегламентированнойНоменклатуры.СрезПоследних(&Дата, ) КАК Соответствие
		|		ПО РегистрацияДоговоровУслуги.Номенклатура = Соответствие.РегламентированнаяНоменклатура
		|ГДЕ
		|	РегистрацияДоговоровУслуги.Ссылка = &Ссылка
		|	И РегистрацияДоговоровУслуги.Заказ ССЫЛКА Документ."+?(ДоговорПоставки,"узп_ЗаказПоставщику","узп_ЗаказПокупателя")+"
		|	И РегистрацияДоговоровУслуги.Заказ <> &ЗаказПустой
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрацияДоговоровОС.Номенклатура,
		|	РегистрацияДоговоровОС.Заказ,
		|	РегистрацияДоговоровОС.Ссылка.Организация,
		|	РегистрацияДоговоровОС.Ссылка.СтруктурноеПодразделение,
		|	РегистрацияДоговоровОС.Номенклатура,
		|	РегистрацияДоговоровОС.Характеристика,
		|	РегистрацияДоговоровОС.Подразделение,"+?(УчетПоПроектам,"
		|	РегистрацияДоговоровОС.Проект,","")+"
		|	РегистрацияДоговоровОС.Заказ,
		|	РегистрацияДоговоровОС.ЗаявкаМТС,
		|	РегистрацияДоговоровОС.Ссылка.Контрагент,
		|	NULL,
		|	РегистрацияДоговоровОС.ДатаПоставки,
		|	РегистрацияДоговоровОС.Количество,
		|	РегистрацияДоговоровОС.Сумма + ВЫБОР
		|		КОГДА РегистрацияДоговоровОС.Ссылка.УчитыватьНДС
		|			ТОГДА ВЫБОР
		|					КОГДА РегистрацияДоговоровОС.Ссылка.СуммаВключаетНДС
		|						ТОГДА 0
		|					ИНАЧЕ РегистрацияДоговоровОС.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	РегистрацияДоговоровОС.Количество,
		|	РегистрацияДоговоровОС.Ссылка.ВалютаДокумента,
		|	РегистрацияДоговоровОС.Цена,
		|	РегистрацияДоговоровОС.СтавкаНДС
		|ИЗ
		|	Документ.дог_РегистрацияДоговоров.ОС КАК РегистрацияДоговоровОС
		|ГДЕ
		|	РегистрацияДоговоровОС.Ссылка = &Ссылка
		|	И РегистрацияДоговоровОС.Заказ ССЫЛКА Документ."+?(ДоговорПоставки,"узп_ЗаказПоставщику","узп_ЗаказПокупателя")+"
		|	И РегистрацияДоговоровОС.Заказ <> &ЗаказПустой";

	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("ЗаказПустой", ?(ДоговорПоставки,Документы.узп_ЗаказПоставщику.ПустаяСсылка(),Документы.узп_ЗаказПокупателя.ПустаяСсылка()));
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	КурсДокумента = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(Объект.ВалютаДокумента, Объект.Дата);
	ВалютаУпр = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
	КурсУпр = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаУпр, Объект.Дата);
	СоответствиеКурсов = Новый Соответствие;

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = ?(ДоговорПоставки,Движения.узп_ЗаказыПоставщикам.Добавить(),Движения.узп_ЗаказыПокупателей.Добавить());
		ЗаполнитьЗначенияСвойств(Движение,ВыборкаДетальныеЗаписи);
		Если НЕ ДоговорПоставки Тогда
			Движение.Подразделение = Движение.Заказ.Подразделение;
		КонецЕсли;
		 Движение.ПриходРасход = Перечисления.узп_ВидыОборотовПоЗаказам.ЗарегистрированоВДоговоре;
		Движение.Период = Объект.Дата;
		ВалютаЗаказа = Движение.Заказ.ВалютаДокумента;
		Если ВалютаУпр <> Объект.ВалютаДокумента Тогда
			Движение.СуммаУпр = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма, Объект.ВалютаДокумента,ВалютаУпр,КурсДокумента.Курс,КурсУпр.Курс,КурсДокумента.Кратность,КурсУпр.Кратность);
		Иначе
			Движение.СуммаУпр = Движение.Сумма;
		КонецЕсли;
		Если ВалютаЗаказа <> Объект.ВалютаДокумента Тогда
			КурсЗаказа = СоответствиеКурсов.Получить(ВалютаЗаказа);
			Если КурсЗаказа = Неопределено Тогда
				КурсЗаказа = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаЗаказа, Объект.Дата);
				СоответствиеКурсов.Вставить(ВалютаЗаказа,КурсЗаказа);
			КонецЕсли;
			Движение.Сумма = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(Движение.Сумма, Объект.ВалютаДокумента,ВалютаЗаказа,КурсДокумента.Курс,КурсЗаказа.Курс,КурсДокумента.Кратность,КурсЗаказа.Кратность);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ОбработатьИзмененияСпецифики(Объект, Движения, ТаблицаПоТоварам, ТаблицаПоУслугам, ТаблицаПоОС)
	Если Объект.ВидОперации = Перечисления.дог_ВидыОперацийДоговор.ДополнительноеСоглашение Тогда
		Если Объект.ВариантРегистрацииДополнительногоСоглашения<>Перечисления.дог_ВариантыРегистрацииДополнительныхСоглашений.КорректировкаСуществующегоДоговораКонтрагента Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ВидДоговораПоТоварнымОперациям,
		|	ДоговорыИДополнительныеСоглашенияСрезПоследних.ВидОперацииПоДоговору
		|ИЗ
		|	РегистрСведений.дог_ДоговорыИДополнительныеСоглашения.СрезПоследних(
		|			&Момент,
		|			Организация = &Организация
		|				И Договор = &Договор) КАК ДоговорыИДополнительныеСоглашенияСрезПоследних";

	Запрос.УстановитьПараметр("Договор", Объект.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Момент", Объект.МоментВремени());
	Запрос.УстановитьПараметр("Организация", Объект.Организация);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ВидДогПоТО = ВыборкаДетальныеЗаписи.ВидДоговораПоТоварнымОперациям;
		ВидОперПоДог = ВыборкаДетальныеЗаписи.ВидОперацииПоДоговору;
	КонецЦикла;
	// Если были товарные, а стали не товарные, то очищаем всю специфику
	Если (Объект.ВидОперацииПоДоговору = Перечисления.дог_ВидыОперацийПоДоговору.НетоварныеОперации И Объект.ВидОперацииПоДоговору <> ВидОперПоДог) 
		ИЛИ Объект.ВидОперацииПоДоговору = Перечисления.дог_ВидыОперацийПоДоговору.ТоварныеОперации Тогда
		Если НЕ Объект.СпособКорректировкиТоварнойСпецификацииДоговора = Перечисления.дог_СпособыКорректировкиТоварнойСпецификацииДоговора.УказаниеИзменяемыхНоменклатурныхПозиций Тогда

			ОбнулитьСпецифику(Объект, Движения, ТаблицаПоТоварам, ТаблицаПоУслугам, ТаблицаПоОС);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбнулитьСпецифику(Объект, Движения, ТаблицаПоТоварам, ТаблицаПоУслугам, ТаблицаПоОС)

    Движения.дог_СпецификацияДоговоров.Записывать = Истина;
	
    ВыборкаИмяТЧ = Документы.дог_РегистрацияДоговоров.ВыборкаПоСпецификации(Объект);
	Пока ВыборкаИмяТЧ.Следующий() Цикл

		ВыборкаДетальныеЗаписи = ВыборкаИмяТЧ.Выбрать();
        ИмяТЧ = ВыборкаИмяТЧ.ИмяТЧ;
		
		Ключи = "Номенклатура, ДатаПоставки, СтавкаНДС,Заказ,ЗаявкаМТС, Цена, Подразделение";
		Если ИмяТЧ = "Товары" Тогда
			Ключи = Ключи + ", ЕдиницаИзмерения, Коэффициент, ОбъектРемонта";
		ИначеЕсли ИмяТЧ = "Услуги" Тогда
			Ключи = Ключи + ", ОбъектРемонта";
		КонецЕсли;
		СтруктураПоиска = Новый Структура(Ключи);
			
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(СтруктураПоиска,ВыборкаДетальныеЗаписи);
			Если ИмяТЧ = "Товары" Тогда				
				НайденныеСтроки = ТаблицаПоТоварам.НайтиСтроки(СтруктураПоиска);
			ИначеЕсли ИмяТЧ = "Услуги" Тогда				
				НайденныеСтроки = ТаблицаПоУслугам.НайтиСтроки(СтруктураПоиска);
			Иначе 
				НайденныеСтроки = ТаблицаПоОС.НайтиСтроки(СтруктураПоиска);
			КонецЕсли;
			Если НайденныеСтроки.Количество()=0 Тогда
				Движение = Движения.дог_СпецификацияДоговоров.Добавить();
				Движение.Период = Объект.Дата;
				Движение.СтруктурноеПодразделение = Объект.СтруктурноеПодразделение;
				Движение.Организация = Объект.Организация;
				Движение.Договор = ?(Объект.ВидОперации=Перечисления.дог_ВидыОперацийДоговор.Договор ИЛИ Объект.ВариантРегистрацииДополнительногоСоглашения=Перечисления.дог_ВариантыРегистрацииДополнительныхСоглашений.КорректировкаСуществующегоДоговораКонтрагента, Объект.ДоговорКонтрагента, Объект.ПервоначальныйДоговор);
				Движение.НоменклатураОС = ВыборкаДетальныеЗаписи.Номенклатура;
				ЗаполнитьЗначенияСвойств(Движение,СтруктураПоиска);
				Движение.Количество = 0;
				Движение.Сумма = 0;
				Движение.СуммаНДС = 0;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли