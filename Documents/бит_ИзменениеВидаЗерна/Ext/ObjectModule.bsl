////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мВалютаРегламентированногоУчета Экспорт;
Перем мИспользоватьОборотнуюНоменклатуру Экспорт;
Перем мРазделятьПоСтавкамНДС Экспорт;
Перем мУчетВПродажныхЦенах Экспорт;
// переменные для управления реквизитами налогового учета
Перем мУчетнаяПолитикаПоНалоговомуУчету Экспорт;
Перем мУчетнаяПолитикаПоБухгалтерскомуУчету Экспорт;

Перем мОтображатьСтруктурныеПодразделения Экспорт;


// Заполняет счета БУ в строке табличной части.
//
Процедура ЗаполнитьСчетаБУ(СтрокаТЧ, ИмяТабЧасти, СчетаУчета, СчетаУчетаНовые, ЗаполнятьБУ, ЗаполнятьНУ)

	Если ЗаполнятьБУ = Истина Тогда
		
		СтрокаТЧ.СчетУчетаБУ      = СчетаУчета.СчетУчетаБУ;
		СтрокаТЧ.НовыйСчетУчетаБУ = СчетаУчетаНовые.СчетУчетаБУ;

	ИначеЕсли ЗаполнятьБУ = Ложь Тогда

		СтрокаТЧ.СчетУчетаБУ      = ПланыСчетов.Типовой.ПустаяСсылка();
		СтрокаТЧ.НовыйСчетУчетаБУ = ПланыСчетов.Типовой.ПустаяСсылка();

	КонецЕсли;
	
	Если ЗаполнятьНУ = Истина Тогда
		
		СтрокаТЧ.СчетУчетаНУ      = СчетаУчета.СчетУчетаНУ;
		СтрокаТЧ.НовыйСчетУчетаНУ = СчетаУчетаНовые.СчетУчетаНУ;

	ИначеЕсли ЗаполнятьНУ = Ложь Тогда

		СтрокаТЧ.СчетУчетаНУ      = ПланыСчетов.Налоговый.ПустаяСсылка();
		СтрокаТЧ.НовыйСчетУчетаНУ = ПланыСчетов.Налоговый.ПустаяСсылка();

	КонецЕсли; 
	
КонецПроцедуры // ЗаполнитьСчетаБУ()

// Заполняет счета БУ и НУ в строке табличной части.
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТЧ, ИмяТабЧасти, ЗаполнятьБУ, ЗаполнятьНУ) Экспорт

	СчетаУчета 		= ПроцедурыБухгалтерскогоУчета.ПолучитьСчетаУчетаНоменклатуры(Организация, СтрокаТЧ.Номенклатура);
	СчетаУчетаНовые = ПроцедурыБухгалтерскогоУчета.ПолучитьСчетаУчетаНоменклатуры(Организация, СтрокаТЧ.Номенклатура);

	ЗаполнитьСчетаБУ(СтрокаТЧ, ИмяТабЧасти, СчетаУчета, СчетаУчетаНовые, ЗаполнятьБУ, ЗаполнятьНУ);

КонецПроцедуры // ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл()

// Процедура заполняет счета БУ в табличной части.
//
Процедура ЗаполнитьСчетаУчетаВТабЧасти(ТабличнаяЧасть, ИмяТабЧасти, ЗаполнятьБУ, ЗаполнятьНУ) Экспорт

	Для Каждого СтрокаТабЧасти Из ТабличнаяЧасть Цикл		
		ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаТабЧасти, ИмяТабЧасти, ЗаполнятьБУ, ЗаполнятьНУ);		
	КонецЦикла;

КонецПроцедуры // обЗаполнитьСчетаУчетаВТабЧасти()

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр ур_ЗерноНаСкладах 
	Движения.ур_ЗерноНаСкладах.Записывать = Истина;
	Движения.ур_ЗерноНаСкладах.Очистить();
	
	// регистр ур_ЗерноВЗалоге 
	Движения.ур_ЗерноВЗалоге.Записывать = Истина;
	Движения.ур_ЗерноВЗалоге.Очистить();
	
	Для Каждого ТекСтрокаТоварыОУ Из ТоварыОУ Цикл
		
		//ур_ЗерноНаСкладах
		Движение = Движения.ур_ЗерноНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.ВидРесурса = ТекСтрокаТоварыОУ.ВидРесурса;
		Движение.Склад = ТекСтрокаТоварыОУ.Склад;
		Движение.Культура = ТекСтрокаТоварыОУ.Культура;
		Движение.Класс = ТекСтрокаТоварыОУ.Класс;
		Движение.ГодУрожая = ТекСтрокаТоварыОУ.ГодУрожая;
		Движение.ЗерноваяРасписка = ТекСтрокаТоварыОУ.ЗерноваяРасписка;
		Движение.Видзерна = ТекСтрокаТоварыОУ.ВидЗерна;
		Движение.ЗачтенныйВес = ТекСтрокаТоварыОУ.ОстатокПоОперУчету;
		Движение.ТипОперации = ТипОперации;
		
		Движение = Движения.ур_ЗерноНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.ВидРесурса = ТекСтрокаТоварыОУ.ВидРесурса;
		Движение.Склад = ТекСтрокаТоварыОУ.Склад;
		Движение.Культура = ТекСтрокаТоварыОУ.НоменклатураЗамена.ВидКультуры;
		Движение.Класс = ТекСтрокаТоварыОУ.НоменклатураЗамена.Класс;
		Движение.ГодУрожая = ТекСтрокаТоварыОУ.ГодУрожая;
		Движение.ЗерноваяРасписка = ТекСтрокаТоварыОУ.ЗерноваяРасписка;
		Движение.Видзерна = ТекСтрокаТоварыОУ.ВидЗерна;
		Движение.ЗачтенныйВес = ТекСтрокаТоварыОУ.ОстатокПоОперУчету;
		Движение.ТипОперации = ТипОперации;
		
		//ур_ЗерноВЗалоге
		Движение = Движения.ур_ЗерноВЗалоге.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.ВидРесурса = ТекСтрокаТоварыОУ.ВидРесурса;
		Движение.Склад = ТекСтрокаТоварыОУ.Склад;
		Движение.ТипОперации = ТипОперации;
		Движение.ГодУрожая = ТекСтрокаТоварыОУ.ГодУрожая;
		Движение.Культура = ТекСтрокаТоварыОУ.Культура;
		Движение.Класс = ТекСтрокаТоварыОУ.Класс;
		Движение.Зерноваярасписка = ТекСтрокаТоварыОУ.ЗерноваяРасписка;
		Движение.Зачтенныйвес = ТекСтрокаТоварыОУ.КоличествоЗабронировано;
		
		Движение = Движения.ур_ЗерноВЗалоге.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.ВидРесурса = ТекСтрокаТоварыОУ.ВидРесурса;
		Движение.Склад = ТекСтрокаТоварыОУ.Склад;
		Движение.ТипОперации = ТипОперации;
		Движение.ГодУрожая = ТекСтрокаТоварыОУ.ГодУрожая;
		Движение.Культура = ТекСтрокаТоварыОУ.НоменклатураЗамена.ВидКультуры;
		Движение.Класс = ТекСтрокаТоварыОУ.НоменклатураЗамена.Класс;
		Движение.Зерноваярасписка = ТекСтрокаТоварыОУ.ЗерноваяРасписка;
		Движение.Зачтенныйвес = ТекСтрокаТоварыОУ.КоличествоЗабронировано;

		
		Если ТекСтрокаТоварыОУ.ЗерноваяРасписка <> Документы.ур_ЗерноваяРасписка.ПустаяСсылка() И 
				ТекСтрокаТоварыОУ.ЗерноваяРасписка.Культура <> ТекСтрокаТоварыОУ.НоменклатураЗамена Тогда
				
			ЗернРасписка = ТекСтрокаТоварыОУ.ЗерноваяРасписка.ПолучитьОбъект();
			ЗернРасписка.Культура = ТекСтрокаТоварыОУ.НоменклатураЗамена;
			ЗернРасписка.ВидКультуры = ТекСтрокаТоварыОУ.НоменклатураЗамена.ВидКультуры;

			ЗернРасписка.Записать();
		КонецЕсли;
		
	КонецЦикла;

	
	Движения.Типовой.Записывать = Истина;
	Движения.Налоговый.Записывать = Истина;
	
	ПроводкиБУ 					= Движения.Типовой;
	ПроводкиНУ 					= Движения.Налоговый;
		 	
	Для Каждого СтрокаТЗ ИЗ ТоварыБУ Цикл
		
		Проводка = ПроводкиБУ.Добавить();
			
		Проводка.Период       = Дата;
		Проводка.Организация  = Организация;
		
		Проводка.Содержание   = "Изменение вида зерна";
			
		Проводка.СчетДт       = СтрокаТЗ.СчетУчетаБУ;
		ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Номенклатура", СтрокаТЗ.НоменклатураЗамена,Истина, );
					
		Проводка.СчетКт       = СтрокаТЗ.СчетУчетаБУ;
		ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Номенклатура", СтрокаТЗ.Номенклатура,Истина, );
		
		Проводка.КоличествоДт = СтрокаТЗ.ОстатокПоБУ;
		Проводка.КоличествоКт = СтрокаТЗ.ОстатокПоБУ;
			
		Проводка.Сумма = СтрокаТЗ.Сумма;
		
		
		
		ПроводкаНУ = ПроводкиНУ.Добавить();
			
		ПроводкаНУ.Период       = Дата;
		ПроводкаНУ.Организация  = Организация;
		
		ПроводкаНУ.Содержание   = "Изменение вида зерна";
			
		ПроводкаНУ.СчетДт       = СтрокаТЗ.СчетУчетаНУ;
		ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт,ПроводкаНУ.СубконтоДт,"Номенклатура", СтрокаТЗ.НоменклатураЗамена,Истина, );
					
		ПроводкаНУ.СчетКт       = СтрокаТЗ.СчетУчетаНУ;
		ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт,ПроводкаНУ.СубконтоКт,"Номенклатура", СтрокаТЗ.Номенклатура,Истина, );
		
		ПроводкаНУ.КоличествоДт = СтрокаТЗ.ОстатокПоБУ;
		ПроводкаНУ.КоличествоКт = СтрокаТЗ.ОстатокПоБУ;
			
		ПроводкаНУ.Сумма = СтрокаТЗ.Сумма;

		ПроводкаНУ.ВидУчетаДт = ВидУчетаНУ;
		ПроводкаНУ.ВидУчетаКт = ВидУчетаНУ;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Для Каждого ТекСтрокаТоварыОУ Из ТоварыОУ Цикл
		
		Если ТекСтрокаТоварыОУ.ЗерноваяРасписка <> Документы.ур_ЗерноваяРасписка.ПустаяСсылка() И 
				ТекСтрокаТоварыОУ.ЗерноваяРасписка.Культура <> ТекСтрокаТоварыОУ.Номенклатура Тогда

			ЗернРасписка = ТекСтрокаТоварыОУ.ЗерноваяРасписка.ПолучитьОбъект();
			ЗернРасписка.Культура = ТекСтрокаТоварыОУ.Номенклатура;
			ЗернРасписка.ВидКультуры = ТекСтрокаТоварыОУ.Номенклатура.ВидКультуры;
			ЗернРасписка.Записать();
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
УчетнаяПолитикаНеЗадана = Ложь;
мОтображатьСтруктурныеПодразделения = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений();