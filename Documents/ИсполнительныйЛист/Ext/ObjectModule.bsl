////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	Запрос.Текст = "ВЫБРАТЬ
	               |	ИсполнительныйЛист.Дата,
	               |	ИсполнительныйЛист.Организация,
	               |	ВЫБОР 
	               |		КОГДА ИсполнительныйЛист.Организация.ГоловнаяОрганизация = &парамПустаяОрганизация 
	               |			ТОГДА ИсполнительныйЛист.Организация 
	               |		ИНАЧЕ ИсполнительныйЛист.Организация.ГоловнаяОрганизация 
	               |	КОНЕЦ КАК ГоловнаяОрганизация,
	               |	ИсполнительныйЛист.Физлицо,
	               |	ИсполнительныйЛист.ДатаДействия,
	               |	ИсполнительныйЛист.ДатаОкончания,
	               |	ИсполнительныйЛист.Размер,
	               |	ИсполнительныйЛист.Предел,
	               |	ИсполнительныйЛист.СпособРасчетаИЛ,
	               |	ИсполнительныйЛист.Получатель,
	               |	ИсполнительныйЛист.Ссылка,
	               |	ИсполнительныйЛист.ВидРасчетаПочтовыйСбор
	               |ИЗ
	               |	Документ.ИсполнительныйЛист КАК ИсполнительныйЛист
	               |
	               |ГДЕ
	               |	ИсполнительныйЛист.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не указана организация!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Физлицо) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не указан сотрудник!", Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ДатаДействия) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не указана дата действия удержания!", Отказ, Заголовок);
	КонецЕсли;
	
	// Получатель
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Получатель) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не указан получатель!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                - выборка из результата запроса по шапке документа,
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента)

	// Движения регистра ПлановыеУдержанияРаботниковОрганизаций
	
	// Определим вид расчета
	
	//ЦС
	Если ВидРасчетаВручную тогда
		ВидРасчета = ПроизвольныйВидРасчета;	
	Иначе		
		Если ВыборкаПоШапкеДокумента.СпособРасчетаИЛ = 1 Тогда// Процентом
			
			Если ВыборкаПоШапкеДокумента.Предел = 0 Тогда
				ВидРасчета = ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентом;
			Иначе	
				ВидРасчета = ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентомДоПредела;
			КонецЕсли; 
			
		Иначе// Фикс суммой	
			
			Если ВыборкаПоШапкеДокумента.Предел = 0 Тогда
				ВидРасчета = ПланыВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммой;
			Иначе	
				ВидРасчета = ПланыВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммойДоПредела;
			КонецЕсли; 
			
		КонецЕсли;  
	КонецЕсли;
     //Конец ЦС
	Движение = Движения.ПлановыеУдержанияРаботниковОрганизаций.Добавить();
	// свойства
	Движение.Период             = ВыборкаПоШапкеДокумента.ДатаДействия;

	// измерения
	Движение.Организация        = ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Движение.ФизЛицо            = ВыборкаПоШапкеДокумента.ФизЛицо;
	Движение.ВидРасчета         = ВидРасчета;
	
	Движение.ДокументОснование	= ВыборкаПоШапкеДокумента.Ссылка;

	// ресурсы
	Движение.Действие			= Перечисления.ВидыДействияСНачислением.Начать;
	Движение.Показатель1		= ВыборкаПоШапкеДокумента.Размер;
	Движение.ПериодЗавершения	= ВыборкаПоШапкеДокумента.ДатаОкончания;
	Движение.ДействиеЗавершения = Перечисления.ВидыДействияСНачислением.Прекратить;
	
	Если НЕ ВыборкаПоШапкеДокумента.ВидРасчетаПочтовыйСбор.Пустая() Тогда
		
		Движение = Движения.ПлановыеУдержанияРаботниковОрганизаций.Добавить();
		// свойства
		Движение.Период             = ВыборкаПоШапкеДокумента.ДатаДействия;

		// измерения
		Движение.Организация        = ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ФизЛицо            = ВыборкаПоШапкеДокумента.ФизЛицо;
		Движение.ВидРасчета         = ВыборкаПоШапкеДокумента.ВидРасчетаПочтовыйСбор;
		
		Движение.ДокументОснование	= ВыборкаПоШапкеДокумента.Ссылка;

		// ресурсы
		Движение.Действие			= Перечисления.ВидыДействияСНачислением.Начать;
		// реальный размер будет определяться по шкале
		Движение.ПериодЗавершения	= ВыборкаПоШапкеДокумента.ДатаОкончания;
		Движение.ДействиеЗавершения = Перечисления.ВидыДействияСНачислением.Прекратить;
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамСведений

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект) Тогда
		Возврат
	КонецЕсли;

	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда

			Если НЕ Отказ Тогда
				// Заполним записи в наборах записей регистров
				ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента);
			КонецЕсли;
			
		КонецЕсли; 

	КонецЕсли;

КонецПроцедуры
