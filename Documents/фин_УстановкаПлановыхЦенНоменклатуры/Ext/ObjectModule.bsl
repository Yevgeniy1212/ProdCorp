#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Информация = Строка(ТипЦен);
КонецПроцедуры

// Процедура - обработчик события "ОбработкаПроведения".
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	фин_ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.фин_УстановкаПлановыхЦенНоменклатуры.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаТовары, Движения, Отказ,"Товары",,, "фин_ПрогнозныеЦеныНоменклатуры",,);	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//Проверить дубли товары
	/////////////////////////////
	//ТаблицаДублей = Товары.Скопировать();
	ТаблицаДублей = Товары.Выгрузить();
	// Подсчитываем количество повторений.
	ТаблицаДублей.Колонки.Добавить("КоличествоПовторений");
	ТаблицаДублей.ЗаполнитьЗначения(1, "КоличествоПовторений");
	ТаблицаДублей.Свернуть("Номенклатура", "КоличествоПовторений");
	// Если количество повторений > 1, выдаем сообщение об ошибке.
	Если ?(ТаблицаДублей.Количество() > 0, ТаблицаДублей.Итог("КоличествоПовторений") / ТаблицаДублей.Количество(), 0) > 1 Тогда
		ТекстСообщенияОбОшибке = "";
		// Цикл по каждому найденному повторению.
		Для Каждого СтрокаТаблицыДублей Из ТаблицаДублей Цикл
			Если СтрокаТаблицыДублей.КоличествоПовторений = 1 Тогда
				Продолжить; // повторений нет.
			КонецЕсли;
			// Добавим перевод строки, если требуется.
			ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке 
								   + ?(НЕ ЗначениеЗаполнено(ТекстСообщенияОбОшибке), "", "
																						|");
			ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке
								   + "В строках №№ "; 
			// Выводим номера строк.
			СписокНомеровСтрок = "";
			МассивСтрок = Товары.НайтиСтроки(Новый Структура("Номенклатура", СтрокаТаблицыДублей.Номенклатура));
			Для Каждого Строка Из МассивСтрок Цикл
				СписокНомеровСтрок = СписокНомеровСтрок + ?(НЕ ЗначениеЗаполнено(СписокНомеровСтрок), "", ", ") + Строка.НомерСтроки;
			КонецЦикла;
			ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке
								   + СписокНомеровСтрок
								   + " в табличной части документа указана одна и та же номенклатурная позиция.";
		КонецЦикла;
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияОбОшибке);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если (НЕ ЗначениеЗаполнено(ДанныеЗаполнения)) ИЛИ ТипЗнч(ДанныеЗаполнения)=Тип("Структура") Тогда
		фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект,фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"));
		Возврат;
	КонецЕсли;
	Документы.фин_УстановкаПлановыхЦенНоменклатуры.ЗаполнитьПоДокументуОснованию(ЭтотОбъект,ДанныеЗаполнения);
	
	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект,фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"));
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#КонецЕсли

