
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийформы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ДокументПриСозданииНаСервере(ЭтотОбъект);
	
	ПодготовитьФормуНаСервере();
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.УстановитьЗаголовокФормыДокумента(, Объект.Ссылка, ЭтотОбъект);
	
	// Активизировать табличную часть
	УстановитьТекущуюСтраницуОсновнойПанели();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ДокументПриЧтенииНаСервере(ЭтотОбъект,ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_фин_КалендарныйПланБюджетнойКампании", ПараметрыЗаписи, Объект.Ссылка);	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.УстановитьЗаголовокФормыДокумента(, Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	общ_ОбщегоНазначенияКлиент.ОбработкаОповещенияФормыДокумента(ЭтотОбъект, Объект.Ссылка, ИмяСобытия, Параметр, Источник);

КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
//	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
	//	// Изменение времени не влияет на поведение документа.
	//	ТекущаяДатаДокумента = Объект.Дата;
	//	Возврат;
	//КонецЕсли;
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	СценарийПриИзмененииКлиент();
КонецПроцедуры

&НаКлиенте
Процедура НадписьПериодПланированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораПериодаПланирования",ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.фин_ВыборБюджетногоПериода",Новый Структура("НачалоПериодаПланирования,КонецПериодаПланирования,Периодичность,РазрешитьПроизвольныйПериод",Объект.ПериодПланирования,ГоризонтПланирования,Объект.Сценарий,Ложь),ЭтотОбъект,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещения);
КонецПроцедуры

#КонецОбласти


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	Если НЕ фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Автозаполнение(Команда)
	АвтозаполнениеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КонтрольПоРегламенту(Команда)
	Если ЗначениеЗаполнено(БюджетныйРегламент()) Тогда
		РезультатПроверки = КонтрольПоРегламентуНаСервере();
		Если РезультатПроверки = "" Тогда
			ПоказатьПредупреждение(,"Ошибок не обнаружено");
		Иначе
			ОткрытьФорму("Обработка.фин_ГрафикБюджетногоПроцесса.Форма.ИнформацияОбОшибках",Новый Структура("Текст",РезультатПроверки),ЭтотОбъект,Новый УникальныйИдентификатор,?(фин_ОбщегоНазначенияКлиентПовтИсп.РежимОтдельногоОткрытияОкон(),ВариантОткрытияОкна.ОтдельноеОкно,Окно));
		КонецЕсли;
	Иначе
		ПоказатьПредупреждение(,"Редактируемый график не связан с регламентом!");
	КонецЕсли;
КонецПроцедуры


#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


#Область ПроцедурыУправленияФормой

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ТекущаяДатаДокумента = Объект.Дата;
	БюджетированиеПоОрганизациям 	= фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("БюджетированиеПоОрганизациям");
	ВестиУчетПоПроектам 			= фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ВестиУчетПоПроектам");
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Если НЕ (ЗначениеЗаполнено(Параметры.ЗначениеКопирования) ИЛИ ЗначениеЗаполнено(Параметры.Основание)) Тогда
			// по умолчанию при распределении учитываются все возможные показатели
			Объект.Сценарий 	= фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ОсновнойСценарийПланирования");
			Объект.Состояние 	= фин_БюджетированиеОбщегоНазначения.СостояниеОбъектаПоУмолчанию();
			Если БюджетированиеПоОрганизациям Тогда
				Объект.Организация 	= фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Объект.Сценарий) Тогда
				Объект.ПериодПланирования 	= ТекущаяДата();
			Иначе
				Если НЕ ЗначениеЗаполнено(Объект.ПериодПланирования) Тогда
					Объект.ПериодПланирования	= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(ТекущаяДата(),фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(Объект.Сценарий));
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;
		
	КонецЕсли;
	
	фин_БюджетированиеОбщегоНазначения.НастроитьОформлениеТабличногоПоля(Элементы.ГрафикПроцесса);
	
	мПериод 	= Объект.ПериодПланирования;
	
	// обработка доступности формы на основании данных согласования документов
	усд_УправлениеСогласованиемДокументов.ДоступностьРедактированияДокумента(ЭтотОбъект,Объект);
	
	мПериод = Объект.ПериодПланирования;
	фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.УстановитьГоризонтПланированияИПредставлениеБюджетногоПериода(НадписьПериодПланирования,ГоризонтПланирования,Объект.ПериодПланирования,Объект.Сценарий);
	
	Элементы.ВидШкалыВремени.СписокВыбора.Добавить(ТипЕдиницыШкалыВремени.День);
	Элементы.ВидШкалыВремени.СписокВыбора.Добавить(ТипЕдиницыШкалыВремени.Неделя);
	Элементы.ВидШкалыВремени.СписокВыбора.Добавить(ТипЕдиницыШкалыВремени.Месяц);
	Элементы.ВидШкалыВремени.СписокВыбора.Добавить(ТипЕдиницыШкалыВремени.Квартал);
	Элементы.ВидШкалыВремени.СписокВыбора.Добавить(ТипЕдиницыШкалыВремени.Год);
	ВидШкалыВремени = ТипЕдиницыШкалыВремени.День;

	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	// Проверка ведения однофирменности
	Элементы.Организация.Видимость = Форма.БюджетированиеПоОрганизациям;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущуюСтраницуОсновнойПанели()
	
	

КонецПроцедуры 

#КонецОбласти

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ


#Область ПроцедурыРаботыСДополнительнымиДанными

&НаКлиенте
Процедура СценарийПриИзмененииКлиент()
	Объект.ПериодПланирования		= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.СинхронизироватьПериодПланированияСоСценарием(Объект.ПериодПланирования,Объект.Сценарий);
	фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.УстановитьГоризонтПланированияИПредставлениеБюджетногоПериода(НадписьПериодПланирования,ГоризонтПланирования,Объект.ПериодПланирования,Объект.Сценарий);
КонецПроцедуры

&НаСервере
Процедура АвтозаполнениеНаСервере()

	Документы.фин_КалендарныйПланБюджетнойКампании.Автозаполнение(Объект);
	Диаграмма.Очистить();
КонецПроцедуры

&НаСервере
Процедура ОбновитьДиаграммуНаСервере()
	Документы.фин_КалендарныйПланБюджетнойКампании.ОбновитьДиаграмму(Объект,Диаграмма,ВидШкалыВремени);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДиаграмму(Команда)
	ОбновитьДиаграммуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаВыбор(Элемент, Значения, СтандартнаяОбработка, Дата)
	Если ТипЗнч(Значения)=Тип("Массив") Тогда
		Для Каждого Расшифровка Из Значения Цикл
			Если ТипЗнч(Расшифровка.Расшифровка)=Тип("Структура") Тогда
				СтандартнаяОбработка = Ложь;
				СписокДействий = Новый СписокЗначений;
				СписокДействий.Добавить("Перейти","Перейти к строке плана");
				СписокДействий.Добавить("Исполнитель","Назначить исполнителя");
				СписокДействий.Добавить("Удалить","Удалить задачу");
				ОписаниеОповещенияВыбораДействия = Новый ОписаниеОповещения("ОбработкаВыбораДействия",ЭтотОбъект,Расшифровка.Расшифровка);
				ПоказатьВыборИзМеню(ОписаниеОповещенияВыбораДействия,СписокДействий,Элементы.Диаграмма);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораДействия(Результат,ДополнительныеПараметры) Экспорт
	Если Результат=Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Результат.Значение = "Удалить" Тогда
		СтрокиТЧ = Объект.ГрафикПроцесса.НайтиСтроки(ДополнительныеПараметры);
		Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
			Объект.ГрафикПроцесса.Удалить(СтрокаТЧ);
		КонецЦикла;
		ОбновитьДиаграммуНаСервере();
	ИначеЕсли Результат.Значение = "Перейти" Тогда
		СтрокиТЧ = Объект.ГрафикПроцесса.НайтиСтроки(ДополнительныеПараметры);
		Если СтрокиТЧ.Количество()>0 Тогда
			ИдентификаторСтроки = СтрокиТЧ[0].ПолучитьИдентификатор();
			Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.ГруппаКалендарныйПлан;
			Элементы.ГрафикПроцесса.ТекущаяСтрока = ИдентификаторСтроки;
		КонецЕсли;
	ИначеЕсли Результат.Значение = "Исполнитель" Тогда
		ЗаполнитьИсполнителя(ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИсполнителя(ДополнительныеПараметры)
	мРежимВыбора = РежимВыбораПользователя();
	Если мРежимВыбора = 0 Тогда
		ФормаВыбора = ПолучитьФорму("Справочник.Пользователи.ФормаВыбора");
		ФормаВыбора.РежимВыбора = Истина;
		Результат = ФормаВыбора.ОткрытьМодально();
		Если ЗначениеЗаполнено(Результат) Тогда
			ОбработкаВыбораПользователя(Результат,ДополнительныеПараметры);
		КонецЕсли;
	Иначе
		ОповещениеВыбораПользователя = Новый ОписаниеОповещения("ОбработкаВыбораПользователя",ЭтотОбъект,ДополнительныеПараметры);
		ОткрытьФорму("Справочник.Пользователи.ФормаВыбора",Новый Структура("РежимВыбора",Истина),ЭтотОбъект,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОповещениеВыбораПользователя);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция РежимВыбораПользователя()
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_РежимИнтеграцииСУчетнойСистемой")=Перечисления.фин_РежимыИнтеграцииСУчетнойСистемой.БухгалтерияДляКазахстана ИЛИ фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_РежимИнтеграцииСУчетнойСистемой")=Перечисления.фин_РежимыИнтеграцииСУчетнойСистемой.КомплексноеУправлениеФинансамиИБюджетированиеДляКазахстана И ТекущийРежимЗапуска()=РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение Тогда
		Возврат 0;	
	Иначе
		Возврат 1;	
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбораПользователя(ВыбранныйПользователь,ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(ВыбранныйПользователь) Тогда
		СтрокиТЧ = Объект.ГрафикПроцесса.НайтиСтроки(ДополнительныеПараметры);
		Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
			СтрокаТЧ.Пользователь = ВыбранныйПользователь;
		КонецЦикла;
		ОбновитьДиаграммуНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаОбработкаРасшифровки(Элемент, Расшифровки, СтандартнаяОбработка, Дата)
	Если ТипЗнч(Расшифровки)=Тип("Массив") Тогда
		Для Каждого Расшифровка Из Расшифровки Цикл
			Если ТипЗнч(Расшифровка)=Тип("Структура") Тогда
				СтандартнаяОбработка = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаПриОкончанииРедактированияИнтервала(Элемент, Интервал, ОтменаРедактирования)
	Если ТолькоПросмотр Тогда
		ОтменаРедактирования = Истина;
		Возврат;
	КонецЕсли;
	Интервал.Начало = НачалоДня(Интервал.Начало);
	Интервал.Конец  = КонецДня(Интервал.Конец);
	НачалоПериода 	= Интервал.Начало;
	КонецПериода 	= Интервал.Конец;
	СтруктураПоиска = Интервал.Расшифровка;
	
	СтрокиТЧ = Объект.ГрафикПроцесса.НайтиСтроки(СтруктураПоиска);
	Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
		СтрокаТЧ.ДатаНачала 	= НачалоПериода;
		СтрокаТЧ.ДатаЗавершения = КонецПериода;
	КонецЦикла;
	ОтменаРедактирования = Ложь;
	Модифицированность = Истина;
	ОбновитьДиаграммуНаСервере();
КонецПроцедуры

&НаСервере
Функция БюджетныйРегламент()
	Возврат Документы.фин_КалендарныйПланБюджетнойКампании.БюджетныйРегламент(Объект);
КонецФункции

&НаСервере
Функция КонтрольПоРегламентуНаСервере()
	БюджетныйРегламент = БюджетныйРегламент();
	СтрокиГрафика = Объект.ГрафикПроцесса.Выгрузить();
	Ошибки = фин_ПроцедурыКалендарногоПланирования.ИмеющиесяРасхожденияСРегламентом(БюджетныйРегламент,СтрокиГрафика,Объект.Сценарий,ЭтотОбъект,Истина);
	Возврат Ошибки;
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбораПериодаПланирования(РезультатВыбора,ДополнительныеПараметры) Экспорт
	Если РезультатВыбора<>Неопределено Тогда
		Модифицированность=Истина;
		Объект.ПериодПланирования = РезультатВыбора.НачалоПериода;
		фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.УстановитьГоризонтПланированияИПредставлениеБюджетногоПериода(НадписьПериодПланирования,ГоризонтПланирования,Объект.ПериодПланирования,Объект.Сценарий);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


