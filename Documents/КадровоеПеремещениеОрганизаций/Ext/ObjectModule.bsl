Перем мДлинаСуток;
Перем СоответствиеВалютныеСпособыРасчета;
Перем мВалютаРегламентированногоУчета Экспорт; // Хранит значение константы ВалютаРегламентированногоУчета - для ввода значений по умолчанию

// Механизм исправлений
Перем мВосстанавливатьДвижения;
Перем мСоответствиеДвижений;
Перем мИсправляемыйДокумент;

// Учет ОППВ
Перем мОрганизацияЯвляетсяВкладчикомОППВ Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА   

// Заполняет документ по перерассчитываемому документу
// ИсходныйДокумент - тип ДокументОбъект.КомандировкиОрганизаций
//
Процедура ЗаполнитьПоПерерассчитываемомуДокументу(ИсходныйДокумент, Сотрудники = Неопределено) Экспорт
	
	ПроведениеРасчетов.ЗаполнитьИсправлениеПоКадровомуДокументу(ЭтотОбъект, ИсходныйДокумент.Ссылка, Сотрудники);
	
КонецПроцедуры // ЗаполнитьПоПерерассчитываемомуДокументу()

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Функция пересчитывает размеры основных начислений
//
// Параметры:
//	ВыборкаСтрокОсновныхНачислений - строка выборки из результата запроса по основным начислениям
//	ИзСтарогоВНовый - булево, если Истина, то пересчет из ПрежнегоРазмер в Размер, иначе - наоборот
//
Функция ПересчитатьРазмер(ВыборкаСтрокОсновныхНачислений, ИзСтарогоВНовый = Истина)

	Если ИзСтарогоВНовый Тогда
		НовыйСпособРасчета 		= ВыборкаСтрокОсновныхНачислений.СпособРасчета;
		ПрежнийСпособРасчета 	= ВыборкаСтрокОсновныхНачислений.ПрежнийСпособРасчета;
		ПрежнийПоказатель1		= ВыборкаСтрокОсновныхНачислений.ПрежнийПоказатель1ДляКоэффициентаИндексации;
		Если ПроведениеРасчетов.ЭтоРасчетПоМинимальнойЗаработнойПлате(ПрежнийСпособРасчета) Тогда
			ПрежнийПоказатель1 	= ПрежнийПоказатель1 * ВыборкаСтрокОсновныхНачислений.ПрежнийРазмерМЗП;
		КонецЕсли;
	Иначе
		НовыйСпособРасчета 		= ВыборкаСтрокОсновныхНачислений.ПрежнийСпособРасчета;
		ПрежнийСпособРасчета 	= ВыборкаСтрокОсновныхНачислений.СпособРасчета;
		ПрежнийПоказатель1		= ВыборкаСтрокОсновныхНачислений.Показатель1ДляКоэффициентаИндексации;
		Если ПроведениеРасчетов.ЭтоРасчетПоМинимальнойЗаработнойПлате(ПрежнийСпособРасчета) Тогда
			ПрежнийПоказатель1 	= ПрежнийПоказатель1 * ВыборкаСтрокОсновныхНачислений.ТекущийРазмерМЗП;
		КонецЕсли;
	КонецЕсли;

	Если НовыйСпособРасчета = ПрежнийСпособРасчета Тогда
		
		// остался старый способ расчета
		Возврат ПрежнийПоказатель1;
		
	Иначе
		
		// новый способ расчета отличается от прежнего	
		СпособыРасчета = Перечисления.СпособыРасчетаОплатыТруда;
		
		// характер нового способа расчета
		НовыйРасчетЗаМесяц 		= (НовыйСпособРасчета = СпособыРасчета.ПоМесячнойТарифнойСтавкеПоДням
									ИЛИ НовыйСпособРасчета = СпособыРасчета.ПоМесячнойТарифнойСтавкеПоЧасам
									ИЛИ НовыйСпособРасчета = СпособыРасчета.ПоМинимальнойЗаработнойПлатеПоДням
									ИЛИ НовыйСпособРасчета = СпособыРасчета.ПоМинимальнойЗаработнойПлатеПоЧасам);
									
		НовыйРасчетЗаДень		= НовыйСпособРасчета = СпособыРасчета.ПоДневнойТарифнойСтавке;
		
		// характер прежнего способа расчета
		ПрежнийРасчетЗаМесяц 	= (ПрежнийСпособРасчета = СпособыРасчета.ПоМесячнойТарифнойСтавкеПоДням
									ИЛИ ПрежнийСпособРасчета = СпособыРасчета.ПоМесячнойТарифнойСтавкеПоЧасам
									ИЛИ ПрежнийСпособРасчета = СпособыРасчета.ПоМинимальнойЗаработнойПлатеПоДням
									ИЛИ ПрежнийСпособРасчета = СпособыРасчета.ПоМинимальнойЗаработнойПлатеПоЧасам);
		
		ПрежнийРасчетЗаДень		= ПрежнийСпособРасчета = СпособыРасчета.ПоДневнойТарифнойСтавке;

		//сам пересчет
		Если НовыйРасчетЗаМесяц Тогда // в месячную тарифную ставку
		
			Если ПрежнийРасчетЗаМесяц Тогда // из месячной по дням в месячную по часам или наоборот
					
				Возврат ПрежнийПоказатель1;
				
			ИначеЕсли ПрежнийРасчетЗаДень Тогда //из дневной в месячную
					
				Возврат ПрежнийПоказатель1 * ВыборкаСтрокОсновныхНачислений.НормаДней;
				
			Иначе // из часовой в месячную
			
				Возврат ПрежнийПоказатель1 * ВыборкаСтрокОсновныхНачислений.НормаЧасов;
			
			КонецЕсли;
		
		ИначеЕсли НовыйРасчетЗаДень Тогда // в дневную тарифную ставку
			
			Если ПрежнийРасчетЗаМесяц Тогда // из месячной в дневную
				
				Возврат ?(ВыборкаСтрокОсновныхНачислений.НормаДней <> 0, ПрежнийПоказатель1 / ВыборкаСтрокОсновныхНачислений.НормаДней, 0);
	
			ИначеЕсли ПрежнийРасчетЗаДень Тогда // сюда попасть не должны, но все же - из дневной в дневную
			
				Возврат ПрежнийПоказатель1;
			
			Иначе // из часовой в дневную

				Если ВыборкаСтрокОсновныхНачислений.ВидГрафика = Перечисления.ВидыРабочихГрафиков.Шестидневка Тогда	
					ПродолжительностьРабочегоДня = ВыборкаСтрокОсновныхНачислений.ДлительностьРабочейНедели / 6;
				Иначе	
					// для пятидневки и сменного графика
					ПродолжительностьРабочегоДня = ВыборкаСтрокОсновныхНачислений.ДлительностьРабочейНедели / 5;
				КонецЕсли;
			
				Возврат ПрежнийПоказатель1 * ПродолжительностьРабочегоДня; 
			
			КонецЕсли;
		
		Иначе // в часовую тарифную ставку
		
			Если ПрежнийРасчетЗаМесяц Тогда // из месячной в часовую
			
				Возврат ?(ВыборкаСтрокОсновныхНачислений.НормаЧасов <> 0, ПрежнийПоказатель1 / ВыборкаСтрокОсновныхНачислений.НормаЧасов, 0);
		
			ИначеЕсли ПрежнийРасчетЗаДень Тогда // из дневной в часовую
			
				Возврат ПроцедурыУправленияПерсоналом.ПолучитьЧасовуюТарифнуюСтавкуНаОсновеДневнойСтавки(ПрежнийПоказатель1, ВыборкаСтрокОсновныхНачислений.ДлительностьРабочейНедели, ВыборкаСтрокОсновныхНачислений.ВидГрафика);
			
			Иначе // из часовой в часовую (например, часовой тариф и сдельный наряд)
			
				Возврат ПрежнийПоказатель1;
			
			КонецЕсли;
			
		КонецЕсли;

	КонецЕсли;
	
КонецФункции // ПересчитатьПрежнийРазмер()

// Формирует запрос по документу
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросДляПечати(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Руководитель", Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
    Запрос.УстановитьПараметр("ДатаДокумента", Дата);
    Запрос.УстановитьПараметр("Организация", Организация);

	Если Режим = "ПоРеквизитамДокумента" Тогда

		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность КАК ДолжностьРуководителя,
		|	КадровоеПеремещениеОрганизаций.Номер КАК НомерДок,
		|	КадровоеПеремещениеОрганизаций.Дата КАК ДатаДок,
		|	ВЫРАЗИТЬ(КадровоеПеремещениеОрганизаций.Организация.НаименованиеПолное КАК СТРОКА(1000)) КАК НазваниеОрганизации,
		|	КадровоеПеремещениеОрганизаций.Организация.КодПоОКПО КАК КодПоОКПО,
		|	ВЫБОР 
		|		КОГДА (ФИОФизЛицСрезПоследних.ФизЛицо) ЕСТЬ NULL  
		|			ТОГДА ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование 
		|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР 
		|													КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """" 
		|														ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + ""."" 
		|													ИНАЧЕ """" 
		|											   КОНЕЦ + ВЫБОР 
		|															КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """" 
		|																ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + ""."" 
		|															ИНАЧЕ """" 
		|														КОНЕЦ 
		|	КОНЕЦ КАК ФИОРуководителя
		|ИЗ
		|	Документ.КадровоеПеремещениеОрганизаций КАК КадровоеПеремещениеОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ) КАК ОтветственныеЛицаОрганизацийСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследних
		|			ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|		ПО (ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо = &Руководитель) 
		|			И КадровоеПеремещениеОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница
		|
		|ГДЕ
		|	КадровоеПеремещениеОрганизаций.Ссылка = &ДокументСсылка";

	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда

	    Запрос.УстановитьПараметр("РеглВалюта",	 мВалютаРегламентированногоУчета);
	    Запрос.УстановитьПараметр("ПустаяВалюта",	Справочники.Валюты.ПустаяСсылка());
	    Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	    Запрос.УстановитьПараметр("Прием", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	    Запрос.УстановитьПараметр("Прекратить", Перечисления.ВидыДействияСНачислением.Прекратить);
	    Запрос.УстановитьПараметр("ТипПоказателяТарифныйРазряд", Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТЧРаботникиОрганизации.Сотрудник КАК Сотрудник,
		|	ТЧРаботникиОрганизации.Должность КАК Должность,
		|	РазмерТарифныхСтавок.ТарифныйРазряд КАК ТарифныйРазряд,
		|	МАКСИМУМ(РазмерТарифныхСтавок.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_ПоследниеДаты
		|ИЗ
		|	Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК ТЧРаботникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
		|		ПО ТЧРаботникиОрганизации.Должность = РазмерТарифныхСтавок.Должность
		|			И (РазмерТарифныхСтавок.Период <= ТЧРаботникиОрганизации.ДатаНачала)
		|ГДЕ
		|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка
		|	И (НЕ ТЧРаботникиОрганизации.Сторно)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТЧРаботникиОрганизации.Сотрудник,
		|	ТЧРаботникиОрганизации.Должность,
		|	РазмерТарифныхСтавок.ТарифныйРазряд
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ТарифныйРазряд
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТЧРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
		|	МАКСИМУМ(РаботникиОрганизации.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_ПоследниеДатыПриема
		|ИЗ
		|	Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК ТЧРаботникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		ПО ТЧРаботникиОрганизации.Сотрудник = РаботникиОрганизации.Сотрудник
		|			И (РаботникиОрганизации.Организация = &ГоловнаяОрганизация)
		|			И (РаботникиОрганизации.Период <= ТЧРаботникиОрганизации.ДатаНачала)
		|			И (РаботникиОрганизации.ПричинаИзмененияСостояния = &Прием)
		|ГДЕ
		|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка
		|	И (НЕ ТЧРаботникиОрганизации.Сторно)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТЧРаботникиОрганизации.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СписокДат.Сотрудник КАК Сотрудник,
		|	РаботникиОрганизации.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизацииНаименование,
		|	РаботникиОрганизации.Должность.Наименование КАК ДолжностьНаименование,
		|	РаботникиОрганизации.ТарифныйРазряд.Наименование КАК ТарифныйРазрядНаименование
		|ПОМЕСТИТЬ ВТ_Работники
		|ИЗ
		|	(ВЫБРАТЬ
		|		РаботникиВнутри.Сотрудник КАК Сотрудник,
		|		МАКСИМУМ(РаботникиВнутри.Период) КАК ДатаПоследнегоИзменения
		|	ИЗ
		|		РегистрСведений.РаботникиОрганизаций КАК РаботникиВнутри
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК Док
		|			ПО РаботникиВнутри.Сотрудник = Док.Сотрудник
		|				И (РаботникиВнутри.Организация = &ГоловнаяОрганизация)
		|				И РаботникиВнутри.Период < Док.ДатаНачала
		|	ГДЕ
		|		Док.Ссылка = &ДокументСсылка
		|		И (НЕ Док.Сторно)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		РаботникиВнутри.Сотрудник) КАК СписокДат
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		ПО СписокДат.Сотрудник = РаботникиОрганизации.Сотрудник
		|			И (РаботникиОрганизации.Организация = &ГоловнаяОрганизация)
		|			И СписокДат.ДатаПоследнегоИзменения = РаботникиОрганизации.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТЧРаботникиОрганизации.Сотрудник КАК Сотрудник,
		|	ТЧРаботникиОрганизации.Должность КАК Должность,
		|	ТЧОсновныеНачисления.ТарифныйРазряд1 КАК ТарифныйРазряд,
		|	МАКСИМУМ(РазмерТарифныхСтавок.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_ПоследниеДатыТарифныхСтавок
		|ИЗ
		|	Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК ТЧРаботникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещениеОрганизаций.ОсновныеНачисления КАК ТЧОсновныеНачисления
		|		ПО ТЧРаботникиОрганизации.Сотрудник = ТЧОсновныеНачисления.Сотрудник
		|			И (ТЧОсновныеНачисления.Ссылка = &ДокументСсылка)
		|			И (ТЧОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
		|		ПО ТЧРаботникиОрганизации.Должность = РазмерТарифныхСтавок.Должность
		|			И (ТЧОсновныеНачисления.ТарифныйРазряд1 = РазмерТарифныхСтавок.ТарифныйРазряд)
		|			И (РазмерТарифныхСтавок.Период <= ТЧРаботникиОрганизации.ДатаНачала)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели
		|		ПО (ТЧОсновныеНачисления.ВидРасчета = Показатели.Ссылка)
		|			И (Показатели.НомерСтроки = 1)
		|ГДЕ
		|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка
		|	И (НЕ ТЧРаботникиОрганизации.Сторно)
		|	И (ТЧОсновныеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда
		|			ИЛИ Показатели.Показатель.ТипПоказателя = &ТипПоказателяТарифныйРазряд)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТЧРаботникиОрганизации.Сотрудник,
		|	ТЧРаботникиОрганизации.Должность,
		|	ТЧОсновныеНачисления.ТарифныйРазряд1
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТЧОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ТЧОсновныеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда
		|					ИЛИ Показатели.Показатель.ТипПоказателя = &ТипПоказателяТарифныйРазряд
		|				ТОГДА РазмерТарифныхСтавок.Размер
		|			ИНАЧЕ ТЧОсновныеНачисления.Показатель1
		|		КОНЕЦ) КАК ОкладТарифнаяСтавка,
		|	МАКСИМУМ(ТЧОсновныеНачисления.ВидРасчета.СпособРасчета) КАК СпособРасчета,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ТЧОсновныеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда
		|					ИЛИ Показатели.Показатель.ТипПоказателя = &ТипПоказателяТарифныйРазряд
		|				ТОГДА РазмерТарифныхСтавок.Валюта
		|			ИНАЧЕ ТЧОсновныеНачисления.Валюта1
		|		КОНЕЦ) КАК ВалютаТарифнойСтавки
		|ПОМЕСТИТЬ ВТ_СведенияОбОсновномНачислении
		|ИЗ
		|	Документ.КадровоеПеремещениеОрганизаций.ОсновныеНачисления КАК ТЧОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели
		|		ПО ТЧОсновныеНачисления.ВидРасчета = Показатели.Ссылка
		|			И (Показатели.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследниеДатыТарифныхСтавок КАК ПоследниеДатыТарифныхСтавок
		|		ПО ТЧОсновныеНачисления.Сотрудник = ПоследниеДатыТарифныхСтавок.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
		|		ПО (ПоследниеДатыТарифныхСтавок.Должность = РазмерТарифныхСтавок.Должность)
		|			И (ПоследниеДатыТарифныхСтавок.ТарифныйРазряд = РазмерТарифныхСтавок.ТарифныйРазряд)
		|			И (ПоследниеДатыТарифныхСтавок.Период = РазмерТарифныхСтавок.Период)
		|ГДЕ
		|	ТЧОсновныеНачисления.Ссылка = &ДокументСсылка
		|	И ТЧОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени
		|	И ТЧОсновныеНачисления.Действие <> &Прекратить
		|	И (НЕ ТЧОсновныеНачисления.Сторно)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТЧОсновныеНачисления.Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТЧОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ТЧОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ТЧОсновныеНачисления.ВидРасчета КАК ВидНадбавки,
		|	ТЧОсновныеНачисления.Показатель1 КАК РазмерНадбавки,
		|	ТЧОсновныеНачисления.Валюта1 КАК ВалютаНадбавки,
		|	ТЧОсновныеНачисления.ТарифныйРазряд1 КАК ТарифныйРазрядНадбавки
		|ПОМЕСТИТЬ ВТ_Надбавки
		|ИЗ
		|	Документ.КадровоеПеремещениеОрганизаций.ОсновныеНачисления КАК ТЧОсновныеНачисления
		|ГДЕ
		|	ТЧОсновныеНачисления.Ссылка = &ДокументСсылка
		|	И ТЧОсновныеНачисления.Действие <> &Прекратить
		|	И (НЕ ТЧОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени)
		|	И (НЕ ТЧОсновныеНачисления.Сторно)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТЧДополнительныеНачисления.Сотрудник,
		|	ТЧДополнительныеНачисления.НомерСтроки + 99999,
		|	ТЧДополнительныеНачисления.ВидРасчета,
		|	ТЧДополнительныеНачисления.Показатель1,
		|	ТЧДополнительныеНачисления.Валюта1,
		|	ТЧДополнительныеНачисления.ТарифныйРазряд1
		|ИЗ
		|	Документ.КадровоеПеремещениеОрганизаций.ДополнительныеНачисления КАК ТЧДополнительныеНачисления
		|ГДЕ
		|	ТЧДополнительныеНачисления.Ссылка = &ДокументСсылка
		|	И ТЧДополнительныеНачисления.Действие <> &Прекратить
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоследниеДатыНадбавокПоШР.Сотрудник,
		|	9999999999,
		|	НадбавкиПоШР.ВидНадбавки,
		|	НадбавкиПоШР.Показатель1,
		|	НадбавкиПоШР.Валюта1,
		|	ПоследниеДатыНадбавокПоШР.ТарифныйРазряд
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТЧРаботникиОрганизации.Сотрудник КАК Сотрудник,
		|		ТЧРаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|		ТЧРаботникиОрганизации.Должность КАК Должность,
		|		ТЧРаботникиОрганизации.ТарифныйРазряд КАК ТарифныйРазряд,
		|		МАКСИМУМ(НадбавкиПоШР.Период) КАК Период
		|	ИЗ
		|		Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК ТЧРаботникиОрганизации
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций КАК НадбавкиПоШР
		|			ПО ТЧРаботникиОрганизации.ПодразделениеОрганизации = НадбавкиПоШР.ПодразделениеОрганизации
		|				И ТЧРаботникиОрганизации.Должность = НадбавкиПоШР.Должность
		|				И ТЧРаботникиОрганизации.ТарифныйРазряд = НадбавкиПоШР.ТарифныйРазряд
		|				И (НадбавкиПоШР.Период <= ТЧРаботникиОрганизации.ДатаНачала)
		|	ГДЕ
		|		ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка
		|		И (НЕ ТЧРаботникиОрганизации.Сторно)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТЧРаботникиОрганизации.Сотрудник,
		|		ТЧРаботникиОрганизации.ПодразделениеОрганизации,
		|		ТЧРаботникиОрганизации.Должность,
		|		ТЧРаботникиОрганизации.ТарифныйРазряд) КАК ПоследниеДатыНадбавокПоШР
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций КАК НадбавкиПоШР
		|		ПО ПоследниеДатыНадбавокПоШР.ПодразделениеОрганизации = НадбавкиПоШР.ПодразделениеОрганизации
		|			И ПоследниеДатыНадбавокПоШР.Должность = НадбавкиПоШР.Должность
		|			И ПоследниеДатыНадбавокПоШР.ТарифныйРазряд = НадбавкиПоШР.ТарифныйРазряд
		|			И ПоследниеДатыНадбавокПоШР.Период = НадбавкиПоШР.Период
		|ГДЕ
		|	НадбавкиПоШР.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Надбавки.Сотрудник КАК Сотрудник,
		|	Надбавки.НомерСтроки КАК НомерСтроки,
		|	Надбавки.ВидНадбавки КАК ВидНадбавки,
		|	ВЫБОР
		|		КОГДА Надбавки.ВидНадбавки.ТребуетВводаТарифногоРазряда
		|			ТОГДА РазмерТарифныхСтавок.Размер
		|		ИНАЧЕ Надбавки.РазмерНадбавки
		|	КОНЕЦ КАК РазмерНадбавки,
		|	ВЫБОР
		|		КОГДА Надбавки.ВидНадбавки.ТребуетВводаТарифногоРазряда
		|			ТОГДА РазмерТарифныхСтавок.Валюта
		|		ИНАЧЕ Надбавки.ВалютаНадбавки
		|	КОНЕЦ КАК ВалютаНадбавки
		|ПОМЕСТИТЬ ВТ_СведенияОНадбавках
		|ИЗ
		|	ВТ_Надбавки КАК Надбавки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследниеДаты КАК ПоследниеДатыТарифныхСтавок
		|		ПО Надбавки.Сотрудник = ПоследниеДатыТарифныхСтавок.Сотрудник
		|			И Надбавки.ТарифныйРазрядНадбавки = ПоследниеДатыТарифныхСтавок.ТарифныйРазряд
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
		|		ПО (ПоследниеДатыТарифныхСтавок.Должность = РазмерТарифныхСтавок.Должность)
		|			И (ПоследниеДатыТарифныхСтавок.ТарифныйРазряд = РазмерТарифныхСтавок.ТарифныйРазряд)
		|			И (ПоследниеДатыТарифныхСтавок.Период = РазмерТарифныхСтавок.Период)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Док.ДатаНачала,
		|	Док.ДатаОкончания,
		|	ВЫБОР
		|		КОГДА ФИОФизЛицСрезПоследних.Фамилия ЕСТЬ NULL 
		|			ТОГДА Док.ФизЛицо.Наименование
		|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
		|	КОНЕЦ КАК Работник,
		|	ВЫБОР
		|		КОГДА ПриемНаРаботуОрганизацииРаботники.Сотрудник ЕСТЬ NULL 
		|			ТОГДА """"
		|		ИНАЧЕ ПриемНаРаботуОрганизацииРаботники.Сотрудник.ДатаДоговора
		|	КОНЕЦ КАК ТрудовойДоговорДата,
		|	ВЫБОР
		|		КОГДА ПриемНаРаботуОрганизацииРаботники.Сотрудник ЕСТЬ NULL 
		|			ТОГДА """"
		|		ИНАЧЕ ПриемНаРаботуОрганизацииРаботники.Сотрудник.НомерДоговора
		|	КОНЕЦ КАК ТрудовойДоговорНомер,
		|	ВЫРАЗИТЬ(Док.ОснованиеПеремещения КАК СТРОКА(1000)) КАК ОснованиеПеремещения,
		|	Док.СтатьяЗаконаОТрудеРК КАК СтатьяЗаконаОТрудеРК,
		|	Док.НомерСтроки КАК НомерСтроки,
		|	Док.Сторно КАК Сторно,
		|	Док.ПодразделениеОрганизации.Наименование КАК НовоеПодразделение,
		|	Док.Должность.Наименование КАК НоваяДолжность,
		|	Док.ТарифныйРазряд.Наименование КАК НовыйТарифныйРазряд,
		|	Работники.ПодразделениеОрганизацииНаименование КАК ПрежнееПодразделение,
		|	Работники.ДолжностьНаименование КАК ПрежняяДолжность,
		|	Работники.ТарифныйРазрядНаименование КАК ПрежнийТарифныйРазряд,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СведенияОбОсновномНачислении.ВалютаТарифнойСтавки, &РеглВалюта) В (&РеглВалюта, &ПустаяВалюта)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВалютаТарифнойСтавкиЯвляетсяВалютойРеглУчета,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СведенияОбОсновномНачислении.ВалютаТарифнойСтавки, &РеглВалюта) В (&РеглВалюта, &ПустаяВалюта)
		|			ТОГДА ВЫРАЗИТЬ(РегламентированнаяВалюта.ПараметрыПрописиНаРусском КАК СТРОКА(1000))
		|		ИНАЧЕ ВЫРАЗИТЬ(СведенияОбОсновномНачислении.ВалютаТарифнойСтавки.ПараметрыПрописиНаРусском КАК СТРОКА(1000))
		|	КОНЕЦ КАК ПараметрыПрописиВалютыТарифнойСтавки,
		|	ЕСТЬNULL(СведенияОбОсновномНачислении.ОкладТарифнаяСтавка, 0) КАК ОкладТарифнаяСтавка,
		|	СведенияОбОсновномНачислении.СпособРасчета КАК СпособРасчетаОсновногоНачисления,
		|	Док.Сотрудник.Код КАК ТабельныйНомер,
		|	ЕСТЬNULL(СведенияОНадбавках.НомерСтроки, 0) КАК НомерСтрокиНадбавки,
		|	ЕСТЬNULL(СведенияОНадбавках.ВидНадбавки.Наименование, """") КАК ВидНадбавкиНаименование,
		|	СведенияОНадбавках.ВидНадбавки.СпособРасчета КАК СпособРасчета,
		|	СведенияОНадбавках.РазмерНадбавки,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СведенияОНадбавках.ВалютаНадбавки, &РеглВалюта) В (&РеглВалюта, &ПустаяВалюта)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВалютаНадбавкиЯвляетсяВалютойРеглУчета,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СведенияОНадбавках.ВалютаНадбавки, &РеглВалюта) В (&РеглВалюта, &ПустаяВалюта)
		|			ТОГДА ВЫРАЗИТЬ(РегламентированнаяВалюта.ПараметрыПрописиНаРусском КАК СТРОКА(1000))
		|		ИНАЧЕ ВЫРАЗИТЬ(СведенияОНадбавках.ВалютаНадбавки.ПараметрыПрописиНаРусском КАК СТРОКА(1000))
		|	КОНЕЦ КАК ПараметрыПрописиВалютыНадбавки
		|ИЗ
		|	Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
		|				&ДатаДокумента,
		|				ФизЛицо В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						КадровоеПеремещениеОрганизацииРаботники.ФизЛицо
		|					ИЗ
		|						Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК КадровоеПеремещениеОрганизацииРаботники
		|					ГДЕ
		|						КадровоеПеремещениеОрганизацииРаботники.Ссылка = &ДокументСсылка)) КАК ФИОФизЛицСрезПоследних
		|		ПО Док.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследниеДатыПриема КАК ПоследниеДатыПриема
		|		ПО Док.НомерСтроки = ПоследниеДатыПриема.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ЗаписиОПриеме
		|		ПО Док.Сотрудник = ЗаписиОПриеме.Сотрудник
		|			И (ЗаписиОПриеме.Организация = &ГоловнаяОрганизация)
		|			И (ПоследниеДатыПриема.Период = ЗаписиОПриеме.Период)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботуВОрганизацию.РаботникиОрганизации КАК ПриемНаРаботуОрганизацииРаботники
		|		ПО (ПриемНаРаботуОрганизацииРаботники.Сотрудник = Док.Сотрудник)
		|			И (ПриемНаРаботуОрганизацииРаботники.Ссылка.Проведен)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Работники КАК Работники
		|		ПО Док.Сотрудник = Работники.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОбОсновномНачислении КАК СведенияОбОсновномНачислении
		|		ПО Док.Сотрудник = СведенияОбОсновномНачислении.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОНадбавках КАК СведенияОНадбавках
		|		ПО Док.Сотрудник = СведенияОНадбавках.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК РегламентированнаяВалюта
		|		ПО (РегламентированнаяВалюта.Ссылка = &РеглВалюта)
		|ГДЕ
		|	Док.Ссылка = &ДокументСсылка
		|	И (НЕ Док.Сторно)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	НомерСтрокиНадбавки
		|ИТОГИ ПО
		|	НомерСтроки";
	Иначе
		Возврат Неопределено
	КонецЕсли;
	                 
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросДляПечати()

#Если ТолстыйКлиентОбычноеПриложение Тогда

// Функция формирует табличный документ с печатной формой приказа по списку сотрудников,
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриказаСписком(ИмяМакета)

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КадровоеПеремещениеОрганизации_Т5а";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
    ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;

	// получаем данные для печати
	ВыборкаДляШапки = СформироватьЗапросДляПечати("ПоРеквизитамДокумента").Выбрать();
	ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента").Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	// подсчитываем количество страниц документа - для корректного разбиения на страницы
	ВсегоСтрокДокумента = ВыборкаРаботники.Количество();

	// запоминаем области макета
	Макет = ПолучитьМакет(ИмяМакета);
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
	ПовторятьПриПечатиСтроки = Макет.ПолучитьОбласть("ПовторятьПриПечати"); // повторяющаяся шапка страницы
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");// Подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаРаботник"); // строка работника

	// массив с двумя строками - для разбиения на страницы
    ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьМакета);
	
    // выводим данные о руководителях организации
	Если ВыборкаДляШапки.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапки); // Шапка документа.
		ОбластьМакетаШапка.Параметры.НазваниеОрганизации = СокрЛП(ВыборкаДляШапки.НазваниеОрганизации);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапки);// Для подвала.
	КонецЕсли;
	
	ОбластьМакетаШапка.Параметры.НомерДок = ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект, глСписокПрефиксовУзлов);

	// Начинаем формировать выходной документ
	ТабДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.

	ВыведеноСтрок = 0;
	// выводим строки по работникам
	Пока ВыборкаРаботники.Следующий() Цикл
		
		ВложеннаяВыборка = ВыборкаРаботники.Выбрать(); 
		ВложеннаяВыборка.Следующий();
	
		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВложеннаяВыборка);
		ОбластьМакета.Параметры.ОснованиеПеремещения = СокрЛП(ВложеннаяВыборка.ОснованиеПеремещения);
		// Уточним валюту тарифной ставки
		ОкладВПечатнойФорме = ВложеннаяВыборка.ОкладТарифнаяСтавка;
		Если ПроведениеРасчетов.ЭтоРасчетПоМинимальнойЗаработнойПлате(ВложеннаяВыборка.СпособРасчетаОсновногоНачисления) Тогда
			ОбластьМакета.Параметры.ОкладТарифнаяСтавка = "" + ОкладВПечатнойФорме + " МЗП";		
		ИначеЕсли НЕ ВложеннаяВыборка.ВалютаТарифнойСтавкиЯвляетсяВалютойРеглУчета Тогда
			НазваниеВалютыЦелойЧасти = "";
			НазваниеВалютыДробнойЧасти = "";
			ОбщегоНазначения.ПолучитьНазваниеЦелойИДробнойЧастиВалюты(ВложеннаяВыборка.ПараметрыПрописиВалютыТарифнойСтавки, ОкладВПечатнойФорме, НазваниеВалютыЦелойЧасти, НазваниеВалютыДробнойЧасти);
			ОбластьМакета.Параметры.ОкладТарифнаяСтавка = "" + Формат(ОкладВПечатнойФорме,"ЧЦ=15; ЧДЦ=2") + Символы.ПС + "(" + НазваниеВалютыЦелойЧасти + ")";
		Иначе
			ОбластьМакета.Параметры.ОкладТарифнаяСтавка = ОкладВПечатнойФорме;
		КонецЕсли;
		Если ЗначениеЗаполнено(ВложеннаяВыборка.НовыйТарифныйРазряд) Тогда
			ОбластьМакета.Параметры.НоваяДолжность = "" + ВложеннаяВыборка.НоваяДолжность + ", " + ВложеннаяВыборка.НовыйТарифныйРазряд;
		КонецЕсли;
		Если ЗначениеЗаполнено(ВложеннаяВыборка.ПрежнийТарифныйРазряд) Тогда
			ОбластьМакета.Параметры.ПрежняяДолжность = "" + ВложеннаяВыборка.ПрежняяДолжность + ", " + ВложеннаяВыборка.ПрежнийТарифныйРазряд;
		КонецЕсли;
		
		// разбиение на страницы
		ВыведеноСтрок = ВыведеноСтрок + 1;
		
		// Проверим, уместится ли строка на странице или надо открывать новую страницу
		ВывестиПодвалЛиста = Не УниверсальныеМеханизмы.ПроверитьВыводДляТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		Если Не ВывестиПодвалЛиста и ВыведеноСтрок = ВсегоСтрокДокумента Тогда
			ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
			ВывестиПодвалЛиста = Не УниверсальныеМеханизмы.ПроверитьВыводДляТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		КонецЕсли;
		Если ВывестиПодвалЛиста Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ПовторятьПриПечатиСтроки);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;

	// если не было ни одного работника - выводим пустой бланк
	Если ТабДокумент.ВысотаТаблицы = ОбластьМакетаШапка.ВысотаТаблицы Тогда
		СчПечати = 0;
		ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
		ОбластьМакета.Параметры.Работник = " " + Символы.ПС + " ";
		Пока УниверсальныеМеханизмы.ПроверитьВыводДляТабличногоДокумента(ТабДокумент, ВыводимыеОбласти) Цикл
			СчПечати = СчПечати + 1;
			Если СчПечати > 15 Тогда 
				Прервать;
			КонецЕсли;			
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
	КонецЕсли;
	
	// выводим предварительно подготовленный Подвал документа.
	ТабДокумент.Вывести(ОбластьМакетаПодвал);

	Возврат ТабДокумент;

КонецФункции // ПечатьПриказаСписком()	

// Функция формирует табличный документ с печатной формой по одному сотруднику,
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПриказа(ИмяМакета)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КадровоеПеремещениеОрганизации_Т5";
	
	// получаем данные для печати
	ВыборкаДляШапки = СформироватьЗапросДляПечати("ПоРеквизитамДокумента").Выбрать();
	ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента").Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	// запоминаем области макета
	Макет = ПолучитьМакет(ИмяМакета);
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа
	ОбластьМакетаРаботникНачало = Макет.ПолучитьОбласть("РаботникНачало"); // начало строки работника
	ОбластьМакетаНадбавка = Макет.ПолучитьОбласть("Надбавка"); // строка надбавки
	ОбластьМакетаРаботникКонец = Макет.ПолучитьОбласть("РаботникКонец"); // конец строки работника
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал"); // Подвал документа

	// выводим данные о руководителях организации
    Если ВыборкаДляШапки.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапки); // Шапка документа.
		ОбластьМакетаШапка.Параметры.НазваниеОрганизации = СокрЛП(ВыборкаДляШапки.НазваниеОрганизации);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапки); // Для подвала.
		НомерДокДляПечати	= ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект, глСписокПрефиксовУзлов);
		ОбластьМакетаШапка.Параметры.НомерДок = НомерДокДляПечати;
	КонецЕсли;
	
	// название для целой и дробной части валюты регл учета
	НазваниеЦелойЧастиВалютыРеглУчета = "";
	НазваниеДробнойЧастиВалютыРеглУчета = "";
	ОбщегоНазначения.ПолучитьНазваниеЦелойИДробнойЧастиВалюты(мВалютаРегламентированногоУчета, 0, НазваниеЦелойЧастиВалютыРеглУчета, НазваниеДробнойЧастиВалютыРеглУчета);	
	
	НомерДляВыводаНаПечать = 0;

	// Начинаем формировать выходной документ
	Пока ВыборкаРаботники.Следующий() Цикл

		ВложеннаяВыборка = ВыборкаРаботники.Выбрать(); 
		НомерШага = 0;
		Пока ВложеннаяВыборка.Следующий() Цикл

		    НомерШага = НомерШага + 1;

			Если РаботникиОрганизации.Количество() > 1 И НЕ ВложеннаяВыборка.Сторно Тогда
				НомерДляВыводаНаПечать = НомерДляВыводаНаПечать + 1;		
			КонецЕсли;
			
			Если НомерШага = 1 Тогда
				// Каждый приказ на отдельной странице.
				Если ТабДокумент.ВысотаТаблицы > 0 Тогда
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				
				// Шапка документа.
				Если РаботникиОрганизации.Количество() > 1 Тогда
					ОбластьМакетаШапка.Параметры.НомерДок = НомерДокДляПечати + "/" + НомерДляВыводаНаПечать;
				КонецЕсли;
				ТабДокумент.Вывести(ОбластьМакетаШапка);

				// Данные по работнику.
				ОбластьМакетаРаботникНачало.Параметры.Заполнить(ВложеннаяВыборка);
				ОбластьМакетаРаботникКонец.Параметры.Заполнить(ВложеннаяВыборка);
				
				Если НЕ ЗначениеЗаполнено(ВложеннаяВыборка.ДатаОкончания) Тогда
					ОбластьМакетаРаботникНачало.Параметры.ВидПеревода = "постоянно"
				Иначе
					ОбластьМакетаРаботникНачало.Параметры.ВидПеревода = "временно"
				КонецЕсли;	
				
				// Уточним валюту тарифной ставки
				ОкладВПечатнойФорме = ВложеннаяВыборка.ОкладТарифнаяСтавка;
				НазваниеВалютыЦелойЧасти = "";
				НазваниеВалютыДробнойЧасти = "";
				ОбщегоНазначения.ПолучитьНазваниеЦелойИДробнойЧастиВалюты(ВложеннаяВыборка.ПараметрыПрописиВалютыТарифнойСтавки, ОкладВПечатнойФорме, НазваниеВалютыЦелойЧасти, НазваниеВалютыДробнойЧасти);
				ОбластьМакетаРаботникНачало.Параметры.ВалютаЦелойЧасти = ?(ЗначениеЗаполнено(НазваниеВалютыЦелойЧасти), НазваниеВалютыЦелойЧасти, НазваниеЦелойЧастиВалютыРеглУчета);
				ОбластьМакетаРаботникНачало.Параметры.ВалютаДробнойЧасти = ?(ЗначениеЗаполнено(НазваниеВалютыДробнойЧасти), НазваниеВалютыДробнойЧасти, НазваниеДробнойЧастиВалютыРеглУчета);
				
				Если ПроведениеРасчетов.ЭтоРасчетПоМинимальнойЗаработнойПлате(ВложеннаяВыборка.СпособРасчетаОсновногоНачисления) Тогда
					ОбластьМакетаРаботникНачало.Параметры.ОкладТарифнаяСтавкаЦелаяЧасть = "" + ОкладВПечатнойФорме + " МЗП";
				Иначе
					ОбластьМакетаРаботникНачало.Параметры.ОкладТарифнаяСтавкаЦелаяЧасть = Цел(ОкладВПечатнойФорме);
					ДробнаяЧасть = ОкладВПечатнойФорме - Цел(ОкладВПечатнойФорме);
					ОбластьМакетаРаботникНачало.Параметры.ОкладТарифнаяСтавкаДробнаяЧасть = ?(ДробнаяЧасть = 0, "00", ДробнаяЧасть*100); 
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВложеннаяВыборка.НовыйТарифныйРазряд) Тогда
					ОбластьМакетаРаботникНачало.Параметры.НоваяДолжность = "" + ВложеннаяВыборка.НоваяДолжность + ", " + ВложеннаяВыборка.НовыйТарифныйРазряд;
				КонецЕсли;
				Если ЗначениеЗаполнено(ВложеннаяВыборка.ПрежнийТарифныйРазряд) Тогда
					ОбластьМакетаРаботникНачало.Параметры.ПрежняяДолжность = "" + ВложеннаяВыборка.ПрежняяДолжность + ", " + ВложеннаяВыборка.ПрежнийТарифныйРазряд;
				КонецЕсли;
				
				ТабДокумент.Вывести(ОбластьМакетаРаботникНачало);
				
			КонецЕсли;
		
			// если есть надбавки, то выводим их
			Если ЗначениеЗаполнено(ВложеннаяВыборка.НомерСтрокиНадбавки) Тогда

				ОбластьМакетаНадбавка.Параметры.ВидНадбавкиНаименование = НРег(ВложеннаяВыборка.ВидНадбавкиНаименование);
				ОбластьМакетаНадбавка.Параметры.НадбавкаЦелаяЧасть   = "";
				ОбластьМакетаНадбавка.Параметры.НадбавкаДробнаяЧасть = "";
				ОбластьМакетаНадбавка.Параметры.ВалютаЦелойЧасти = НазваниеЦелойЧастиВалютыРеглУчета;
				ОбластьМакетаНадбавка.Параметры.ВалютаДробнойЧасти = НазваниеДробнойЧастиВалютыРеглУчета;
				
				Если ВложеннаяВыборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.Процентом
						ИЛИ ВложеннаяВыборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПроцентом 
						ИЛИ ВложеннаяВыборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ДоплатаЗаНочныеЧасы Тогда
					
					ОбластьМакетаНадбавка.Параметры.НадбавкаЦелаяЧасть = "" + ВложеннаяВыборка.РазмерНадбавки + "%";
					
				ИначеЕсли ВложеннаяВыборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателю
							ИЛИ ВложеннаяВыборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателюПоЧасам
							ИЛИ ВложеннаяВыборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателюПоДням Тогда
				
					ОбластьМакетаНадбавка.Параметры.НадбавкаЦелаяЧасть = "" + ВложеннаяВыборка.РазмерНадбавки + " МРП";
					
				ИначеЕсли ВложеннаяВыборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМинимальнойЗаработнойПлате
							ИЛИ ВложеннаяВыборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМинимальнойЗаработнойПлатеПоЧасам
							ИЛИ ВложеннаяВыборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМинимальнойЗаработнойПлатеПоДням Тогда
				
					ОбластьМакетаНадбавка.Параметры.НадбавкаЦелаяЧасть = "" + ВложеннаяВыборка.РазмерНадбавки + " МЗП";
					
				Иначе
	
					НазваниеВалютыЦелойЧасти = "";
					НазваниеВалютыДробнойЧасти = "";
					ОбщегоНазначения.ПолучитьНазваниеЦелойИДробнойЧастиВалюты(ВложеннаяВыборка.ПараметрыПрописиВалютыНадбавки, ВложеннаяВыборка.РазмерНадбавки, НазваниеВалютыЦелойЧасти, НазваниеВалютыДробнойЧасти);
				
					ОбластьМакетаНадбавка.Параметры.НадбавкаЦелаяЧасть = "" + Цел(ВложеннаяВыборка.РазмерНадбавки);
					ОбластьМакетаНадбавка.Параметры.ВалютаЦелойЧасти   = НазваниеВалютыЦелойЧасти;
					
					ДробнаяЧасть = ВложеннаяВыборка.РазмерНадбавки - Цел(ВложеннаяВыборка.РазмерНадбавки);
					ОбластьМакетаНадбавка.Параметры.НадбавкаДробнаяЧасть = ?(ДробнаяЧасть = 0, "00", ДробнаяЧасть*100);
					ОбластьМакетаНадбавка.Параметры.ВалютаДробнойЧасти = НазваниеВалютыДробнойЧасти;	
					
				КонецЕсли;	
				
				ТабДокумент.Вывести(ОбластьМакетаНадбавка);
					
			КонецЕсли;
			
		КонецЦикла;
		
		ТабДокумент.Вывести(ОбластьМакетаРаботникКонец);

		// Подвал документа.
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		
	КонецЦикла;
	
	// если не было ни одного работника - выводим пустой бланк
	Если ТабДокумент.ВысотаТаблицы = 0 Тогда
        ТабДокумент.Вывести(ОбластьМакетаШапка);
        ОбластьМакетаРаботникНачало.Параметры.ВалютаЦелойЧасти = НазваниеЦелойЧастиВалютыРеглУчета;
        ОбластьМакетаРаботникНачало.Параметры.ВалютаДробнойЧасти = НазваниеДробнойЧастиВалютыРеглУчета;
        ТабДокумент.Вывести(ОбластьМакетаРаботникНачало);
		ОбластьМакетаНадбавка.Параметры.ВалютаЦелойЧасти = НазваниеЦелойЧастиВалютыРеглУчета;
		ОбластьМакетаНадбавка.Параметры.ВалютаДробнойЧасти = НазваниеДробнойЧастиВалютыРеглУчета;
		ТабДокумент.Вывести(ОбластьМакетаНадбавка);
		ТабДокумент.Вывести(ОбластьМакетаРаботникКонец);
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьПриказа()	

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеПользователями.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	// Получить экземпляр документа на печать
	Если ИмяМакета = "Приказ" Тогда
		ТабДокумент = ПечатьПриказа(ИмяМакета);
	ИначеЕсли ИмяМакета = "ПриказСписком" тогда
		ТабДокумент = ПечатьПриказаСписком(ИмяМакета);
	Иначе
		ТабДокумент = КадровоеПеремещениеОрганизацийПереопределяемый.ПечатьДополнительныхФорм(ИмяМакета, ЭтотОбъект);
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект,"Кадровое перемещение "));

КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = Новый Структура;
	
	СтруктураПечатныхФорм.Вставить("ПриказСписком",	"Приказ на список сотрудников");
	СтруктураПечатныхФорм.Вставить("Приказ",		"Приказ на каждого сотрудника");
	
	КадровоеПеремещениеОрганизацийПереопределяемый.ДополнитьСтруктуруПечатныхФорм(СтруктураПечатныхФорм, ЭтотОбъект);
	
	Возврат СтруктураПечатныхФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Добавляет строку с начислением сотурдник.
//
Процедура ДобавитьНачисленияПоСтроке(СтрокаТабличнойЧасти) Экспорт
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтрокаТабличнойЧасти);
	
	ДействияСНачислениями = ЗаполнениеДокументов.ПолучитьТаблицуДействийСНачислениями(РаботникиОрганизации.Выгрузить(МассивСтрок), Ссылка, Дата, Организация, "ДатаНачала", ?(ИндексацияЗаработка, КоэффициентИндексацииЗаработка, 1), , , ОбособленноеПодразделениеКуда);

	СтруктураПоиска = Новый Структура("Сотрудник, ВидРасчета");
	
	Для Каждого СтрокаТаблицы Из ДействияСНачислениями Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТаблицы);

		Если СтрокаТаблицы.ВидНачислений = "Основные" Тогда
			МассивНачислений = ОсновныеНачисления.НайтиСтроки(СтруктураПоиска);
		Иначе
			МассивНачислений = ДополнительныеНачисления.НайтиСтроки(СтруктураПоиска);
		КонецЕсли;
			
		Если МассивНачислений.Количество() <> 0 Тогда
			Продолжить;
		КонецЕсли;

		Если СтрокаТаблицы.ВидНачислений = "Основные" Тогда
			ЗаполнитьЗначенияСвойств(ОсновныеНачисления.Добавить(), СтрокаТаблицы);
		Иначе
			ЗаполнитьЗначенияСвойств(ДополнительныеНачисления.Добавить(), СтрокаТаблицы);
		КонецЕсли;
		
	КонецЦикла;
	
	КадровоеПеремещениеОрганизацийПереопределяемый.ДобавитьДополнительноПоСтроке(ЭтотОбъект, СтрокаТабличнойЧасти);
	
КонецПроцедуры // ДобавитьНачисленияПоСтроке()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ РАБОТЫ ФОРМ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("ПустаяОрганизация" , Справочники.Организации.ПустаяСсылка());

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КадровоеПеремещениеОрганизаций.Дата,
	|	КадровоеПеремещениеОрганизаций.Организация,
	|	ВЫБОР
	|		КОГДА КадровоеПеремещениеОрганизаций.Организация.ГоловнаяОрганизация = &ПустаяОрганизация
	|			ТОГДА КадровоеПеремещениеОрганизаций.Организация
	|		ИНАЧЕ КадровоеПеремещениеОрганизаций.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	КадровоеПеремещениеОрганизаций.ОбособленноеПодразделениеКуда,
	|	КадровоеПеремещениеОрганизаций.Ссылка,
	|	КадровоеПеремещениеОрганизаций.ИндексацияЗаработка
	|ИЗ
	|	Документ.КадровоеПеремещениеОрганизаций КАК КадровоеПеремещениеОрганизаций
	|ГДЕ
	|	КадровоеПеремещениеОрганизаций.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "РаботникиОрганизации" документа
//
// Параметры: 
//  Режим        - режим проведения.
//  
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоРаботникиОрганизации(Режим)

	Запрос = Новый Запрос;
   	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
                         
    СписокСтруктурныхПодразделений = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(Организация);
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",					Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", 			Организация);
	Запрос.УстановитьПараметр("СписокСтруктурныхПодразделений", СписокСтруктурныхПодразделений);
   	Запрос.УстановитьПараметр("ПустаяДата", 					Дата('00010101'));	
	Запрос.УстановитьПараметр("Прием", 							Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	Запрос.УстановитьПараметр("Уволен", 						Перечисления.ПричиныИзмененияСостояния.Увольнение);	

	Запрос.Текст =
	"ВЫБРАТЬ
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.Ссылка,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.Сотрудник,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ФизЛицо,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ДатаНачала,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ДатаОкончания,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ПодразделениеОрганизации,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ПодразделениеОрганизации.Владелец,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.Должность,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ЗанимаемыхСтавок,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.СпособРасчета,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ГрафикРаботы,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ИсчислятьОППВ,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ОснованиеПеремещения,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ПроизошедшееСобытие,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ТарифныйРазряд,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.СтатьяЗаконаОТрудеРК,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.Сторно
	|ПОМЕСТИТЬ ВТСтрокиДокумента
	|ИЗ
	|	Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК КадровоеПеремещениеОрганизацииРаботникиОрганизации
	|ГДЕ
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.Ссылка = &ДокументСсылка
	|	И (НЕ КадровоеПеремещениеОрганизацииРаботникиОрганизации.Сторно)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки";
	
	Результат = Запрос.Выполнить().Выгрузить();

	Если СписокСтруктурныхПодразделений.НайтиПоЗначению(ОбособленноеПодразделениеКуда) = Неопределено Тогда
		Запрос.УстановитьПараметр("ОрганизацияВладелец", Организация);
	Иначе
		Запрос.УстановитьПараметр("ОрганизацияВладелец", ОбособленноеПодразделениеКуда);
	КонецЕсли;

	ПроверкаШтатногоРасписания = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация].ПроверкаШтатногоРасписания;
	
	Если ПроверкаШтатногоРасписания Тогда
		
		// определим самую раннюю дату перемещения, чтобы с нее начать расчет остатков штатных единиц
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	МИНИМУМ(КадровоеПеремещениеОрганизацииРаботникиОрганизации.ДатаНачала) КАК ДатаНачала
		               |ИЗ
		               |	ВТСтрокиДокумента КАК КадровоеПеремещениеОрганизацииРаботникиОрганизации
		               |ГДЕ
		               |	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ДатаНачала <> &ПустаяДата";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ДатаС = ?(НЕ ЗначениеЗаполнено(Выборка.ДатаНачала),Дата,Выборка.ДатаНачала)
		КонецЕсли;
		
	   	Запрос.УстановитьПараметр("ДатаНачала", ДатаС);
	   	Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);

	КонецЕсли;

	// Описание текста запроса:
	// Первая часть запроса  - вид строки запроса "ДанныеДляДвиженийКадров": 
    // 1. Выборка "ТЧРаботникиОрганизации": 
	//		Выбираются строки документа.  
	// 2. Выборка "ДанныеПоРаботникиДоНазначения": 
	//		Для каждой строки ТЧРаботникиОрганизации выполняем срез по регистру РаботникиОрганизации на дату ДатаНачала
	//		для выполнения движений и проверки "Работает ли работник на дату перемещения"
	//		(Использует данные выборки "ДатыПоследнихДвиженийРаботников")
	// 3. Выборка "ПересекающиесяСтроки": 
	//		Среди остальных строк документа ищем строки, имеющие пересекающийся период действия
	//
	// Вторая часть запроса - вид строки запроса "КонфликтныйДокумент" - поиск конфликтных документов: 
	// 1. Выборка "ТЧРаботникиОрганизации":
	//		Выбираются строки документа 
	// 2. Выборка "РаботникиОрганизации":
	//		Для каждой строки ТЧРаботникиОрганизации ищем движения по регистру РаботникиОрганизации за период [ДатаНачала, ДатаОкончания]
	
	ТекстЗапросаВТ = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                 |	ДатыПоследнихДвиженийРаботников.НомерСтроки КАК НомерСтроки,
	                 |	ДатыПоследнихДвиженийРаботников.Период КАК Период,
	                 |	ДанныеПоРаботникуДоНазначения.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
	                 |	ДанныеПоРаботникуДоНазначения.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	                 |	ДанныеПоРаботникуДоНазначения.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	                 |	ДанныеПоРаботникуДоНазначения.Должность КАК Должность,
	                 |	ДанныеПоРаботникуДоНазначения.ТарифныйРазряд КАК ТарифныйРазряд,
	                 |	ДанныеПоРаботникуДоНазначения.ГрафикРаботы КАК ГрафикРаботы,
	                 |	ДанныеПоРаботникуДоНазначения.ИсчислятьОППВ КАК ИсчислятьОППВ,
	                 |	ДанныеПоРаботникуДоНазначения.Сотрудник.Код КАК ТабельныйНомер
	                 |
	                 |ПОМЕСТИТЬ ВТ_ДанныеПоРаботникуДоНазначения
	                 |ИЗ
	                 |	(ВЫБРАТЬ
	                 |		ТЧРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
	                 |		МАКСИМУМ(Работники.Период) КАК Период,
					 |		ТЧРаботникиОрганизации.Сотрудник КАК Сотрудник
	                 |	ИЗ
	                 |		ВТСтрокиДокумента КАК ТЧРаботникиОрганизации
	                 |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	                 |			ПО ТЧРаботникиОрганизации.Сотрудник = Работники.Сотрудник
	                 |				И (Работники.Организация = &ГоловнаяОрганизация)
	                 |				И (Работники.Период <= ТЧРаботникиОрганизации.ДатаНачала)
	                 |	
	                 |	СГРУППИРОВАТЬ ПО
	                 |		ТЧРаботникиОрганизации.НомерСтроки,
					 |		ТЧРаботникиОрганизации.Сотрудник) КАК ДатыПоследнихДвиженийРаботников
	                 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДанныеПоРаботникуДоНазначения
	                 |		ПО (ДанныеПоРаботникуДоНазначения.Организация = &ГоловнаяОрганизация)
	                 |			И (ДанныеПоРаботникуДоНазначения.Период = ДатыПоследнихДвиженийРаботников.Период)
					 |			И ДатыПоследнихДвиженийРаботников.Сотрудник = ДанныеПоРаботникуДоНазначения.Сотрудник
	                 |
	                 |ИНДЕКСИРОВАТЬ ПО
	                 |	НомерСтроки
	                 |;
	                 |
	                 |////////////////////////////////////////////////////////////////////////////////
	                 |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                 |	ТЧРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
	                 |	МИНИМУМ(ТЧРаботникиОрганизации2.НомерСтроки) КАК КонфликтнаяСтрокаНомер
	                 |
	                 |ПОМЕСТИТЬ ВТ_ПересекающиесяСтроки
	                 |ИЗ
	                 |	ВТСтрокиДокумента КАК ТЧРаботникиОрганизации
	                 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК ТЧРаботникиОрганизации2
	                 |		ПО (ТЧРаботникиОрганизации2.Ссылка = ТЧРаботникиОрганизации.Ссылка)
					 |			И ТЧРаботникиОрганизации.Сотрудник = ТЧРаботникиОрганизации2.Сотрудник
	                 |			И ТЧРаботникиОрганизации.НомерСтроки < ТЧРаботникиОрганизации2.НомерСтроки
					 |			И ТЧРаботникиОрганизации.Сторно = ТЧРаботникиОрганизации2.Сторно
	                 |
	                 |СГРУППИРОВАТЬ ПО
	                 |	ТЧРаботникиОрганизации.НомерСтроки
	                 |
	                 |ИНДЕКСИРОВАТЬ ПО
	                 |	НомерСтроки
					 |;";
					 
		ТекстЗапроса = "
				   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	""ДанныеДляДвиженийКадров"" КАК ВидСтрокиЗапроса,
	               |	ТЧРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
				   |	ТЧРаботникиОрганизации.Сотрудник КАК Сотрудник,
				   |	ТЧРаботникиОрганизации.Сотрудник.Наименование КАК СотрудникНаименование,
	               |	ТЧРаботникиОрганизации.ДатаНачала КАК ДатаНачала,
	               |	ТЧРаботникиОрганизации.ДатаОкончания КАК ДатаОкончания,
	               |	ТЧРаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	               |	ТЧРаботникиОрганизации.Должность КАК Должность,
				   |	ТЧРаботникиОрганизации.ТарифныйРазряд КАК ТарифныйРазряд,
	               |	ТЧРаботникиОрганизации.ПроизошедшееСобытие КАК ПроизошедшееСобытие,
	               |	ТЧРаботникиОрганизации.СпособРасчета КАК СпособРасчета,
	               |	ТЧРаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,
	               |	ТЧРаботникиОрганизации.ИсчислятьОППВ КАК ИсчислятьОППВ,
	               |	ТЧРаботникиОрганизации.СтатьяЗаконаОТрудеРК КАК СтатьяЗаконаОТрудеРК,
	               |	ТЧРаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
	               |	ТЧРаботникиОрганизации.ПодразделениеОрганизации.Владелец КАК ОрганизацияПодразделения,
	               |	ВЫБОР 
	               |		КОГДА ТЧРаботникиОрганизации.ПодразделениеОрганизации.Владелец <> &ОрганизацияВладелец
	               |			ТОГДА ИСТИНА 
	               |		ИНАЧЕ ЛОЖЬ 
	               |	КОНЕЦ КАК ОшибкаПодразделениеНеПринадлежитОрганизации,
		   		   |	ВЫБОР
				   |		КОГДА ТЧРаботникиОрганизации.Сотрудник.Организация = &ГоловнаяОрганизация
				   |			ТОГДА ЛОЖЬ
				   |		ИНАЧЕ ИСТИНА
				   |	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации,
	               |	ДанныеПоРаботникуДоНазначения.ПодразделениеОрганизации КАК ПрежнееПодразделение,
	               |	ДанныеПоРаботникуДоНазначения.ОбособленноеПодразделение КАК ПрежняяОрганизация,
	               |	ДанныеПоРаботникуДоНазначения.Должность КАК ПрежняяДолжность,
				   |	ДанныеПоРаботникуДоНазначения.ТарифныйРазряд КАК ПрежнийТарифныйРазряд,
	               |	ДанныеПоРаботникуДоНазначения.ЗанимаемыхСтавок КАК ПрежняяСтавка,
	               |	ДанныеПоРаботникуДоНазначения.ГрафикРаботы КАК ПрежнийГрафикРаботы,
	               |	ДанныеПоРаботникуДоНазначения.ИсчислятьОППВ КАК ПрежнееЗначениеИсчислятьОППВ,
	               |	ДанныеПоРаботникуДоНазначения.Период КАК ДатаПоследнегоДвиженияПоРаботнику,
	               |	ПересекающиесяСтроки.КонфликтнаяСтрокаНомер,
	               |	NULL КАК КонфликтныйДокумент";
				   
    Если ПроверкаШтатногоРасписания Тогда
		//  Дополнительно используем выборки: 
		// 1. ШтатноеРасписаниеОрганизаций
		//		Для каждой строки ТЧРаботникиОрганизации выполняем срез по регистру ШтатноеРасписаниеОрганизаций на дату ДатаНачала
		//		для проверки наличия ставок в штатном расписании
		//		(Использует данные выборки "ДатыШтатногоРасписания")
		// 2. ЗанятоСтавок
		//		Для каждой строки ТЧРаботникиОрганизации на дату ДатаНачала
		//		подсчитываем количество занятых ставок (с учетом "предшествующих" данных текущего документа)
		//
		ТекстЗапроса = ТекстЗапроса + ",
	               |	СвободноСтавокНаДатуПриема.ОстатокСтавок КАК ОстатокСтавок";
	КонецЕсли;
			   
	ТекстЗапроса = ТекстЗапроса + "
	               |ИЗ
	               |	ВТСтрокиДокумента КАК ТЧРаботникиОрганизации
	               |
				   |	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеПоРаботникуДоНазначения КАК ДанныеПоРаботникуДоНазначения
				   |	ПО ТЧРаботникиОрганизации.НомерСтроки = ДанныеПоРаботникуДоНазначения.НомерСтроки
				   |
	               |	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПересекающиесяСтроки КАК ПересекающиесяСтроки
	               |		ПО ТЧРаботникиОрганизации.НомерСтроки = ПересекающиесяСтроки.НомерСтроки";
				   
			// ШтатноеРасписание.КоличествоСтавок	- по штатному расписанию
			// Вакансии.КоличествоСтавок			- занято уже проведенными ранее документами
			// РанееЗанятоСтавок.КоличествоСтавок	- занимается ставок по этой должности и подразделению в этом же документе в остальных строках в случае успешного проведения
			// ОсвобождаетсяСтавок.КоличествоСтавок	- освобождается ставок по этой должности и подразделению в этом же документе в остальных строках в случае успешного проведения
    Если ПроверкаШтатногоРасписания Тогда
		
		ТекстВТШтатноеРасписание = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                           |	Работники.НомерСтроки КАК НомерСтроки,
		                           |	Работники.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		                           |	Работники.Должность КАК Должность,
		                           |	Работники.ТарифныйРазряд КАК ТарифныйРазряд,
		                           |	ИтогоЗанятоПоДолжности.КоличествоСтавок КАК КоличествоСтавок
		                           |
		                           |ПОМЕСТИТЬ ВТ_ОсвобождаетсяСтавок
		                           |ИЗ
		                           |	ВТСтрокиДокумента КАК Работники
		                           |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                           |			СУММА(РаботникиОрганизаций.ЗанимаемыхСтавок) КАК КоличествоСтавок,
		                           |			РаботникиОрганизаций.Должность КАК Должность,
		                           |			РаботникиОрганизаций.ТарифныйРазряд КАК ТарифныйРазряд,
		                           |			РаботникиОрганизаций.ПодразделениеОрганизации КАК ПодразделениеОрганизации
		                           |		ИЗ
		                           |			(ВЫБРАТЬ
		                           |				МАКСИМУМ(Работники.Период) КАК Период,
								   |				Работники.Сотрудник КАК Сотрудник
		                           |			ИЗ
		                           |				ВТСтрокиДокумента КАК ТЧРаботникиОрганизации
		                           |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
		                           |					ПО ТЧРаботникиОрганизации.Сотрудник = Работники.Сотрудник
		                           |						И (Работники.Организация = &ГоловнаяОрганизация)
		                           |						И (Работники.Период <= ТЧРаботникиОрганизации.ДатаНачала)
		                           |						И (Работники.Регистратор.Проведен)
		                           |			
		                           |			СГРУППИРОВАТЬ ПО
								   |				Работники.Сотрудник) КАК ПоследниеСтавки
		                           |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		                           |				ПО ПоследниеСтавки.Период = РаботникиОрганизаций.Период
								   |					И ПоследниеСтавки.Сотрудник = РаботникиОрганизаций.Сотрудник
		                           |		
		                           |		СГРУППИРОВАТЬ ПО
		                           |			РаботникиОрганизаций.Должность,
		                           |			РаботникиОрганизаций.ТарифныйРазряд,
		                           |			РаботникиОрганизаций.ПодразделениеОрганизации) КАК ИтогоЗанятоПоДолжности
		                           |		ПО (ИтогоЗанятоПоДолжности.Должность = Работники.Должность)
		                           |			И (ИтогоЗанятоПоДолжности.ТарифныйРазряд = Работники.ТарифныйРазряд)
		                           |			И (ИтогоЗанятоПоДолжности.ПодразделениеОрганизации = Работники.ПодразделениеОрганизации)
		                           |
		                           |ИНДЕКСИРОВАТЬ ПО
		                           |	НомерСтроки
		                           |;
		                           |
		                           |////////////////////////////////////////////////////////////////////////////////
		                           |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                           |	Работники.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		                           |	Работники.Должность КАК Должность,
		                           |	Работники.ТарифныйРазряд КАК ТарифныйРазряд,
		                           |	Работники.НомерСтроки КАК НомерСтроки,
		                           |	МАКСИМУМ(ШтатноеРасписание.Период) КАК МаксПериод
		                           |
		                           |ПОМЕСТИТЬ ВТ_МаксимальныеПериодыШР
		                           |ИЗ
		                           |	ВТСтрокиДокумента КАК Работники
		                           |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                           |			ЕСТЬNULL(ШтатноеРасписание.Период, &ДатаНачала) КАК Период,
		                           |			Работники.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		                           |			Работники.Должность КАК Должность,
		                           |			Работники.ТарифныйРазряд КАК ТарифныйРазряд
		                           |		ИЗ
		                           |			ВТСтрокиДокумента КАК Работники
		                           |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтатноеРасписаниеОрганизаций КАК ШтатноеРасписание
		                           |				ПО Работники.ПодразделениеОрганизации = ШтатноеРасписание.ПодразделениеОрганизации
		                           |					И Работники.Должность = ШтатноеРасписание.Должность
		                           |					И Работники.ТарифныйРазряд = ШтатноеРасписание.ТарифныйРазряд) КАК ШтатноеРасписание
		                           |		ПО Работники.ПодразделениеОрганизации = ШтатноеРасписание.ПодразделениеОрганизации
		                           |			И Работники.Должность = ШтатноеРасписание.Должность
		                           |			И Работники.ТарифныйРазряд = ШтатноеРасписание.ТарифныйРазряд
		                           |			И Работники.ДатаНачала >= ШтатноеРасписание.Период
		                           |
		                           |СГРУППИРОВАТЬ ПО
		                           |	Работники.ПодразделениеОрганизации,
		                           |	Работники.НомерСтроки,
		                           |	Работники.Должность,
		                           |	Работники.ТарифныйРазряд
		                           |
		                           |ИНДЕКСИРОВАТЬ ПО
		                           |	НомерСтроки
		                           |;
		                           |
		                           |////////////////////////////////////////////////////////////////////////////////
		                           |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                           |	Работники.НомерСтроки КАК НомерСтроки,
		                           |	Работники.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		                           |	Работники.Должность КАК Должность,
		                           |	Работники.ТарифныйРазряд КАК ТарифныйРазряд,
		                           |	СУММА(ВЫБОР
		                           |			КОГДА Вакансии.ВидДвижения = &Приход
		                           |				ТОГДА Вакансии.КоличествоСтавок
		                           |			ИНАЧЕ -Вакансии.КоличествоСтавок
		                           |		КОНЕЦ) КАК КоличествоСтавок
		                           |
		                           |ПОМЕСТИТЬ ВТ_Вакансии
		                           |ИЗ
		                           |	ВТСтрокиДокумента КАК Работники
		                           |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗанятыеШтатныеЕдиницыОрганизаций КАК Вакансии
		                           |		ПО Работники.ПодразделениеОрганизации = Вакансии.ПодразделениеОрганизации
		                           |			И Работники.Должность = Вакансии.Должность
		                           |			И Работники.ТарифныйРазряд = Вакансии.ТарифныйРазряд
		                           |			И Работники.ДатаНачала >= Вакансии.Период
		                           |			И (Вакансии.Регистратор <> &ДокументСсылка)
		                           |
		                           |СГРУППИРОВАТЬ ПО
		                           |	Работники.ПодразделениеОрганизации,
		                           |	Работники.Должность,
		                           |	Работники.ТарифныйРазряд,
		                           |	Работники.НомерСтроки
		                           |
		                           |ИНДЕКСИРОВАТЬ ПО
		                           |	НомерСтроки
		                           |;
		                           |
		                           |////////////////////////////////////////////////////////////////////////////////
		                           |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                           |	СтрокиДокумента.НомерСтроки КАК НомерСтроки,
		                           |	СУММА(ВЫБОР
		                           |			КОГДА КадровоеПеремещениеОрганизацийРаботникиОрганизации.ДатаНачала <= СтрокиДокумента.ДатаНачала
		                           |				ТОГДА КадровоеПеремещениеОрганизацийРаботникиОрганизации.ЗанимаемыхСтавок
		                           |			ИНАЧЕ 0
		                           |		КОНЕЦ - ВЫБОР
		                           |			КОГДА КадровоеПеремещениеОрганизацийРаботникиОрганизации.ДатаОкончания < СтрокиДокумента.ДатаНачала
		                           |					И КадровоеПеремещениеОрганизацийРаботникиОрганизации.ДатаОкончания <> &ПустаяДата
		                           |					И КадровоеПеремещениеОрганизацийРаботникиОрганизации.ПроизошедшееСобытие
		                           |				ТОГДА КадровоеПеремещениеОрганизацийРаботникиОрганизации.ЗанимаемыхСтавок
		                           |			ИНАЧЕ 0
		                           |		КОНЕЦ) КАК КоличествоСтавок
		                           |
		                           |ПОМЕСТИТЬ ВТ_РанееЗанятоСтавок
		                           |ИЗ
		                           |	ВТСтрокиДокумента КАК СтрокиДокумента
		                           |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК КадровоеПеремещениеОрганизацийРаботникиОрганизации
		                           |		ПО СтрокиДокумента.Ссылка = КадровоеПеремещениеОрганизацийРаботникиОрганизации.Ссылка
		                           |			И СтрокиДокумента.НомерСтроки <> КадровоеПеремещениеОрганизацийРаботникиОрганизации.НомерСтроки
		                           |			И СтрокиДокумента.ПодразделениеОрганизации = КадровоеПеремещениеОрганизацийРаботникиОрганизации.ПодразделениеОрганизации
		                           |			И СтрокиДокумента.Должность = КадровоеПеремещениеОрганизацийРаботникиОрганизации.Должность
		                           |			И СтрокиДокумента.ТарифныйРазряд = КадровоеПеремещениеОрганизацийРаботникиОрганизации.ТарифныйРазряд
								   |			И СтрокиДокумента.Сторно = КадровоеПеремещениеОрганизацийРаботникиОрганизации.Сторно
		                           |
		                           |СГРУППИРОВАТЬ ПО
		                           |	СтрокиДокумента.НомерСтроки
		                           |
		                           |ИНДЕКСИРОВАТЬ ПО
		                           |	НомерСтроки
		                           |;
		                           |
		                           |////////////////////////////////////////////////////////////////////////////////
		                           |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                           |	МаксимальныеПериодыШР.НомерСтроки КАК НомерСтроки,
		                           |	ЕСТЬNULL(ШтатноеРасписание.КоличествоСтавок, 0) - ЕСТЬNULL(Вакансии.КоличествоСтавок, 0) - ЕСТЬNULL(РанееЗанятоСтавок.КоличествоСтавок, 0) + ЕСТЬNULL(ОсвобождаетсяСтавок.КоличествоСтавок, 0) КАК ОстатокСтавок
		                           |
		                           |ПОМЕСТИТЬ ВТ_СвободноСтавок
		                           |ИЗ
		                           |	ВТ_МаксимальныеПериодыШР КАК МаксимальныеПериодыШР
		                           |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтатноеРасписаниеОрганизаций КАК ШтатноеРасписание
		                           |		ПО МаксимальныеПериодыШР.ПодразделениеОрганизации = ШтатноеРасписание.ПодразделениеОрганизации
		                           |			И МаксимальныеПериодыШР.Должность = ШтатноеРасписание.Должность
		                           |			И МаксимальныеПериодыШР.ТарифныйРазряд = ШтатноеРасписание.ТарифныйРазряд
		                           |			И МаксимальныеПериодыШР.МаксПериод = ШтатноеРасписание.Период
		                           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Вакансии КАК Вакансии
		                           |		ПО МаксимальныеПериодыШР.НомерСтроки = Вакансии.НомерСтроки
		                           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РанееЗанятоСтавок КАК РанееЗанятоСтавок
		                           |		ПО МаксимальныеПериодыШР.НомерСтроки = РанееЗанятоСтавок.НомерСтроки
		                           |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсвобождаетсяСтавок КАК ОсвобождаетсяСтавок
		                           |		ПО МаксимальныеПериодыШР.НомерСтроки = ОсвобождаетсяСтавок.НомерСтроки
		                           |
		                           |ИНДЕКСИРОВАТЬ ПО
		                           |	НомерСтроки
		                           |;";
		
		ТекстЗапроса = ТекстВТШтатноеРасписание + ТекстЗапроса + "
					|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СвободноСтавок КАК СвободноСтавокНаДатуПриема
					|		ПО ТЧРаботникиОрганизации.НомерСтроки = СвободноСтавокНаДатуПриема.НомерСтроки";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + "
	               |
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	""КонфликтныйДокумент"",
	               |	ТЧРаботникиОрганизации.НомерСтроки,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
				   |	NULL,
	               |	NULL,
	               |	NULL,
				   |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
				   |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	Работники.Регистратор";
				   
	Если ПроверкаШтатногоРасписания Тогда
		ТекстЗапроса = ТекстЗапроса + ",
	               |	NULL";
	КонецЕсли;
			   
	ТекстЗапроса = ТекстЗапроса + "
	               |ИЗ
	               |	ВТСтрокиДокумента КАК ТЧРаботникиОрганизации
	               |
	               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	               |		ПО Работники.Сотрудник = ТЧРаботникиОрганизации.Сотрудник 
	               |			И (Работники.Организация = &ГоловнаяОрганизация) 
	               |			И (ТЧРаботникиОрганизации.ПроизошедшееСобытие 
	               |					И (Работники.Период МЕЖДУ ТЧРаботникиОрганизации.ДатаНачала И ДОБАВИТЬКДАТЕ(ТЧРаботникиОрганизации.ДатаОкончания, ДЕНЬ, 1)) 
	               |				ИЛИ Работники.Период = ТЧРаботникиОрганизации.ДатаНачала
	               |				ИЛИ Работники.ПричинаИзмененияСостояния = &Уволен 
	               |					И (Работники.Период = ТЧРаботникиОрганизации.ДатаНачала
	               |						ИЛИ ТЧРаботникиОрганизации.ПроизошедшееСобытие И Работники.Период = ТЧРаботникиОрганизации.ДатаОкончания))
	               |
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки";

	Запрос.Текст = ТекстЗапросаВТ + ТекстЗапроса;      
		                             
	Возврат Запрос.Выполнить();
                    
КонецФункции // СформироватьЗапросПоРаботникиОрганизации()

// Формирует запрос по таблице "ОсновныеНачисления" документа
//
// Параметры: 
//  нет
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоНачисления()

	Запрос = Новый Запрос;

	УчетнаяПолитикаПоПерсоналуОрганизации = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация];
	ПроверкаШтатногоРасписания = УчетнаяПолитикаПоПерсоналуОрганизации.ПроверкаШтатногоРасписания;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	ВЫБОР 
	|		КОГДА КадровоеПеремещениеОрганизацииОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени 
	|			ТОГДА НЕОПРЕДЕЛЕНО 
	|		ИНАЧЕ КадровоеПеремещениеОрганизацииОсновныеНачисления.ВидРасчета 
	|	КОНЕЦ КАК ВидРасчетаИзмерение,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Действие КАК Действие,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Показатель1 КАК Показатель1,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Показатель2 КАК Показатель2,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Показатель3 КАК Показатель3,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Показатель4 КАК Показатель4,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Показатель5 КАК Показатель5,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Показатель6 КАК Показатель6,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.ТарифныйРазряд1 КАК ТарифныйРазряд1,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.ТарифныйРазряд2 КАК ТарифныйРазряд2,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.ТарифныйРазряд3 КАК ТарифныйРазряд3,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.ТарифныйРазряд4 КАК ТарифныйРазряд4,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.ТарифныйРазряд5 КАК ТарифныйРазряд5,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.ТарифныйРазряд6 КАК ТарифныйРазряд6,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Валюта1 КАК Валюта1,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Валюта2 КАК Валюта2,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Валюта3 КАК Валюта3,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Валюта4 КАК Валюта4,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Валюта5 КАК Валюта5,
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Валюта6 КАК Валюта6,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ДатаНачала КАК ДатаНачала,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ДатаОкончания КАК ДатаОкончания,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ПроизошедшееСобытие КАК ПроизошедшееСобытие,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ПодразделениеОрганизации.Владелец КАК ОрганизацияПодразделения,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы";

	Если ПроверкаШтатногоРасписания Тогда
	ТекстЗапроса = ТекстЗапроса + ",
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.Должность КАК Должность,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ТарифныйРазряд КАК ТарифныйРазрядРаботника";
	КонецЕсли;
			   
	ТекстЗапроса = ТекстЗапроса + "
	|ПОМЕСТИТЬ ВТ_ТЧОсновныеНачисления
	|ИЗ
	|	Документ.КадровоеПеремещениеОрганизаций.ОсновныеНачисления КАК КадровоеПеремещениеОрганизацииОсновныеНачисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК КадровоеПеремещениеОрганизацииРаботникиОрганизации
	|		ПО КадровоеПеремещениеОрганизацииОсновныеНачисления.Сотрудник = КадровоеПеремещениеОрганизацииРаботникиОрганизации.Сотрудник
	|			И КадровоеПеремещениеОрганизацииОсновныеНачисления.Ссылка = КадровоеПеремещениеОрганизацииРаботникиОрганизации.Ссылка
	|			И КадровоеПеремещениеОрганизацииОсновныеНачисления.Сторно = КадровоеПеремещениеОрганизацииРаботникиОрганизации.Сторно
	|	
	|ГДЕ
	|	КадровоеПеремещениеОрганизацииОсновныеНачисления.Ссылка = &ДокументСсылка
	|	И НЕ КадровоеПеремещениеОрганизацииОсновныеНачисления.Сторно
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТЧОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ТЧОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	ТЧОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	ТЧОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ТЧОсновныеНачисления.ВидРасчетаИзмерение КАК ВидРасчетаИзмерение,
	|	ТЧОсновныеНачисления.Действие КАК Действие,
	|	ТЧОсновныеНачисления.Показатель1,
	|	ТЧОсновныеНачисления.Показатель2,
	|	ТЧОсновныеНачисления.Показатель3,
	|	ТЧОсновныеНачисления.Показатель4,
	|	ТЧОсновныеНачисления.Показатель5,
	|	ТЧОсновныеНачисления.Показатель6,
	|	ТЧОсновныеНачисления.ТарифныйРазряд1,
	|	ТЧОсновныеНачисления.ТарифныйРазряд2,
	|	ТЧОсновныеНачисления.ТарифныйРазряд3,
	|	ТЧОсновныеНачисления.ТарифныйРазряд4,
	|	ТЧОсновныеНачисления.ТарифныйРазряд5,
	|	ТЧОсновныеНачисления.ТарифныйРазряд6,
	|	ТЧОсновныеНачисления.Валюта1,
	|	ТЧОсновныеНачисления.Валюта2,
	|	ТЧОсновныеНачисления.Валюта3,
	|	ТЧОсновныеНачисления.Валюта4,
	|	ТЧОсновныеНачисления.Валюта5,
	|	ТЧОсновныеНачисления.Валюта6,
	|	ТЧОсновныеНачисления.ДатаНачала КАК ДатаНачала,
	|	ТЧОсновныеНачисления.ДатаОкончания КАК ДатаОкончания,
	|	ТЧОсновныеНачисления.ПроизошедшееСобытие КАК ПроизошедшееСобытие,
	|	ТЧОсновныеНачисления.ОрганизацияПодразделения КАК ОрганизацияПодразделения,
	|	МАКСИМУМ(ПлановыеНачисленияРаботниковОрганизаций.Период) КАК Период,
	|	ТЧОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы";

	Если ПроверкаШтатногоРасписания Тогда
	ТекстЗапроса = ТекстЗапроса + ",
	|	ТЧОсновныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ТЧОсновныеНачисления.Должность КАК Должность,
	|	ТЧОсновныеНачисления.ТарифныйРазрядРаботника КАК ТарифныйРазрядРаботника,
	|	МАКСИМУМ(ШтатноеРасписаниеОрганизаций.Период) КАК ПериодШТ";
	КонецЕсли;
			   
	ТекстЗапроса = ТекстЗапроса + "
	|ПОМЕСТИТЬ ВТ_ДатыНачислений
	|ИЗ
	|	ВТ_ТЧОсновныеНачисления КАК ТЧОсновныеНачисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	|		ПО ТЧОсновныеНачисления.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник 
	|			И (ПлановыеНачисленияРаботниковОрганизаций.Организация = &ГоловнаяОрганизация) 
	|			И ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение = ТЧОсновныеНачисления.ВидРасчетаИзмерение 
	|			И ТЧОсновныеНачисления.ДатаНачала >= ПлановыеНачисленияРаботниковОрганизаций.Период";
	
    Если ПроверкаШтатногоРасписания Тогда
	ТекстЗапроса = ТекстЗапроса + "
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтатноеРасписаниеОрганизаций КАК ШтатноеРасписаниеОрганизаций
	|		ПО ТЧОсновныеНачисления.ПодразделениеОрганизации = ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации 
	|			И ТЧОсновныеНачисления.Должность = ШтатноеРасписаниеОрганизаций.Должность 
	|			И ТЧОсновныеНачисления.ТарифныйРазрядРаботника = ШтатноеРасписаниеОрганизаций.ТарифныйРазряд 
	|			И ТЧОсновныеНачисления.ДатаНачала >= ШтатноеРасписаниеОрганизаций.Период";
	КонецЕсли;
			   
	ТекстЗапроса = ТекстЗапроса + "
	|		
	|СГРУППИРОВАТЬ ПО
	|	ТЧОсновныеНачисления.Сотрудник,
	|	ТЧОсновныеНачисления.ДатаНачала,
	|	ТЧОсновныеНачисления.НомерСтроки,
	|	ТЧОсновныеНачисления.ВидРасчета,
	|	ТЧОсновныеНачисления.Действие,
	|	ТЧОсновныеНачисления.ДатаОкончания,
	|	ТЧОсновныеНачисления.ПроизошедшееСобытие,
	|	ТЧОсновныеНачисления.ОрганизацияПодразделения,
	|	ТЧОсновныеНачисления.Показатель1,
	|	ТЧОсновныеНачисления.Показатель2,
	|	ТЧОсновныеНачисления.Показатель3,
	|	ТЧОсновныеНачисления.Показатель4,
	|	ТЧОсновныеНачисления.Показатель5,
	|	ТЧОсновныеНачисления.Показатель6,
	|	ТЧОсновныеНачисления.ТарифныйРазряд1,
	|	ТЧОсновныеНачисления.ТарифныйРазряд2,
	|	ТЧОсновныеНачисления.ТарифныйРазряд3,
	|	ТЧОсновныеНачисления.ТарифныйРазряд4,
	|	ТЧОсновныеНачисления.ТарифныйРазряд5,
	|	ТЧОсновныеНачисления.ТарифныйРазряд6,
	|	ТЧОсновныеНачисления.Валюта1,
	|	ТЧОсновныеНачисления.Валюта2,
	|	ТЧОсновныеНачисления.Валюта3,
	|	ТЧОсновныеНачисления.Валюта4,
	|	ТЧОсновныеНачисления.Валюта5,
	|	ТЧОсновныеНачисления.Валюта6,
	|	ТЧОсновныеНачисления.ГрафикРаботы";

	Если ПроверкаШтатногоРасписания Тогда
	ТекстЗапроса = ТекстЗапроса + ",
	|	ТЧОсновныеНачисления.ПодразделениеОрганизации,
	|	ТЧОсновныеНачисления.Должность,
	|	ТЧОсновныеНачисления.ТарифныйРазрядРаботника";
	КонецЕсли;
			   
	ТекстЗапроса = ТекстЗапроса + ",
	|	ТЧОсновныеНачисления.ВидРасчетаИзмерение
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДатыНачислений.НомерСтроки КАК НомерСтроки,
	|	ДатыНачислений.Сотрудник КАК Сотрудник,
	|	ДатыНачислений.ВидРасчета КАК ВидРасчета,
	|	ДатыНачислений.СпособРасчета КАК СпособРасчета,
	|	ДатыНачислений.Действие КАК Действие,
	|	ДатыНачислений.Показатель1,
	|	ДатыНачислений.Показатель2,
	|	ДатыНачислений.Показатель3,
	|	ДатыНачислений.Показатель4,
	|	ДатыНачислений.Показатель5,
	|	ДатыНачислений.Показатель6,
	|	ДатыНачислений.ТарифныйРазряд1,
	|	ДатыНачислений.ТарифныйРазряд2,
	|	ДатыНачислений.ТарифныйРазряд3,
	|	ДатыНачислений.ТарифныйРазряд4,
	|	ДатыНачислений.ТарифныйРазряд5,
	|	ДатыНачислений.ТарифныйРазряд6,
	|	ДатыНачислений.Валюта1,
	|	ДатыНачислений.Валюта2,
	|	ДатыНачислений.Валюта3,
	|	ДатыНачислений.Валюта4,
	|	ДатыНачислений.Валюта5,
	|	ДатыНачислений.Валюта6,
	|	ДатыНачислений.ДатаНачала КАК ДатаНачала,
	|	ДатыНачислений.ДатаОкончания КАК ДатаОкончания,
	|	ДатыНачислений.ПроизошедшееСобытие КАК ПроизошедшееСобытие,
	|	ДатыНачислений.ОрганизацияПодразделения КАК ОрганизацияПодразделения,
	|	ДатыНачислений.Период КАК ДатаДвижения,
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ЕСТЬNULL(ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаЗавершения, ДатыНачислений.ВидРасчета)
	|		ИНАЧЕ ЕСТЬNULL(ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета, ДатыНачислений.ВидРасчета)
	|	КОНЕЦ КАК ПрежнийВидРасчета,	
	|
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд1Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд1 
	|	КОНЕЦ КАК ПрежнийТарифныйРазряд1,
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель1Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель1
	|	КОНЕЦ КАК ПрежнийПоказатель1,
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Валюта1Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта1 
	|	КОНЕЦ КАК ПрежняяВалюта1,
	|
	|
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд2Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд2
	|	КОНЕЦ КАК ПрежнийТарифныйРазряд2,
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель2Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель2
	|	КОНЕЦ КАК ПрежнийПоказатель2,
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Валюта2Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта2
	|	КОНЕЦ КАК ПрежняяВалюта2,
	|
	|
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд3Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд3 
	|	КОНЕЦ КАК ПрежнийТарифныйРазряд3,
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель3Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель3
	|	КОНЕЦ КАК ПрежнийПоказатель3,
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Валюта3Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта3 
	|	КОНЕЦ КАК ПрежняяВалюта3,
	|
	|
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд4Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд4
	|	КОНЕЦ КАК ПрежнийТарифныйРазряд4,
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель4Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель4
	|	КОНЕЦ КАК ПрежнийПоказатель4,
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Валюта4Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта4
	|	КОНЕЦ КАК ПрежняяВалюта4,
	|
	|
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд5Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд5
	|	КОНЕЦ КАК ПрежнийТарифныйРазряд5,
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель5Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель5
	|	КОНЕЦ КАК ПрежнийПоказатель5,
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Валюта5Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта5
	|	КОНЕЦ КАК ПрежняяВалюта5,
	|
	|
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд6Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд6
	|	КОНЕЦ КАК ПрежнийТарифныйРазряд6,
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель6Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель6
	|	КОНЕЦ КАК ПрежнийПоказатель6,
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения 
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Валюта6Завершения 
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта6
	|	КОНЕЦ КАК ПрежняяВалюта6,
	|
	|	ПлановыеНачисленияРаботниковОрганизаций.Регистратор КАК Регистратор,
	|	ДатыНачислений.ГрафикРаботы КАК ГрафикРаботы";

	Если ПроверкаШтатногоРасписания Тогда
	ТекстЗапроса = ТекстЗапроса + ",
	|	ШтатноеРасписаниеОрганизаций.ВидТарифнойСтавки,
	|	ШтатноеРасписаниеОрганизаций.МинимальнаяТарифнаяСтавка,
	|	ШтатноеРасписаниеОрганизаций.МаксимальнаяТарифнаяСтавка,
	|	ДатыНачислений.ТарифныйРазрядРаботника,
	|	ДатыНачислений.ПериодШТ,
	|	ВЫБОР 
	|		КОГДА ДатыНачислений.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО 
	|				И (ДатыНачислений.Действие В (&ИзменитьРасчеты)) 
	|			ТОГДА ВЫБОР 
	|					КОГДА ДатыНачислений.СпособРасчета В (&МесячныеРасчеты) 
	|							И ШтатноеРасписаниеОрганизаций.ВидТарифнойСтавки = &МесячнаяСтавка 
	|						ТОГДА ВЫБОР 
	|								КОГДА ДатыНачислений.Показатель1 < ШтатноеРасписаниеОрганизаций.МинимальнаяТарифнаяСтавка 
	|										ИЛИ ДатыНачислений.Показатель1 > ШтатноеРасписаниеОрганизаций.МаксимальнаяТарифнаяСтавка 
	|									ТОГДА ЛОЖЬ 
	|								ИНАЧЕ ИСТИНА 
	|							КОНЕЦ 
	|
	|					КОГДА ДатыНачислений.СпособРасчета = &ДневнойРасчет 
	|							И ШтатноеРасписаниеОрганизаций.ВидТарифнойСтавки = &ДневнаяСтавка 
	|						ТОГДА ВЫБОР 
	|								КОГДА ДатыНачислений.Показатель1 < ШтатноеРасписаниеОрганизаций.МинимальнаяТарифнаяСтавка 
	|										ИЛИ ДатыНачислений.Показатель1 > ШтатноеРасписаниеОрганизаций.МаксимальнаяТарифнаяСтавка 
	|									ТОГДА ЛОЖЬ 
	|								ИНАЧЕ ИСТИНА 
	|							КОНЕЦ 
	|
	|					КОГДА ДатыНачислений.СпособРасчета в (&ЧасовыеРасчеты) 
	|							И ШтатноеРасписаниеОрганизаций.ВидТарифнойСтавки = &ЧасоваяСтавка 
	|						ТОГДА ВЫБОР 
	|								КОГДА ДатыНачислений.Показатель1 < ШтатноеРасписаниеОрганизаций.МинимальнаяТарифнаяСтавка 
	|										ИЛИ ДатыНачислений.Показатель1 > ШтатноеРасписаниеОрганизаций.МаксимальнаяТарифнаяСтавка 
	|									ТОГДА ЛОЖЬ 
	|								ИНАЧЕ ИСТИНА 
	|							КОНЕЦ 
	|
	|					ИНАЧЕ ИСТИНА 
	|				КОНЕЦ 
	|		ИНАЧЕ ИСТИНА 
	|	КОНЕЦ КАК РазмерСоответствуетШТР";
	КонецЕсли;
			   
	ТекстЗапроса = ТекстЗапроса + "
	|ПОМЕСТИТЬ ВТ_ТекущиеИПрежниеНачисления
	|ИЗ
	|	ВТ_ДатыНачислений КАК ДатыНачислений
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	|		ПО ДатыНачислений.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник 
	|			И (ПлановыеНачисленияРаботниковОрганизаций.Организация = &ГоловнаяОрганизация) 
	|			И ДатыНачислений.Период = ПлановыеНачисленияРаботниковОрганизаций.Период 
	|			И ДатыНачислений.ВидРасчетаИзмерение = ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение";
	
    Если ПроверкаШтатногоРасписания Тогда
	ТекстЗапроса = ТекстЗапроса + "
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтатноеРасписаниеОрганизаций КАК ШтатноеРасписаниеОрганизаций
	|		ПО ШтатноеРасписаниеОрганизаций.Период = ДатыНачислений.ПериодШТ 
	|			И ДатыНачислений.ПодразделениеОрганизации = ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации 
	|			И ДатыНачислений.Должность = ШтатноеРасписаниеОрганизаций.Должность 
	|			И ДатыНачислений.ТарифныйРазрядРаботника = ШтатноеРасписаниеОрганизаций.ТарифныйРазряд";
	КонецЕсли;
			   
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизаций.Ссылка КАК ВидРасчета,
	|	МАКСИМУМ(ПоказателиОсновныхНачислений.НомерСтроки) КАК КоличествоПоказателей,
	|	Показатели1.Показатель.Наименование КАК Показатель1Наименование,
	|	Показатели2.Показатель.Наименование КАК Показатель2Наименование,
	|	Показатели3.Показатель.Наименование КАК Показатель3Наименование,
	|	Показатели4.Показатель.Наименование КАК Показатель4Наименование,
	|	Показатели5.Показатель.Наименование КАК Показатель5Наименование,
	|	Показатели6.Показатель.Наименование КАК Показатель6Наименование,
	|	Показатели1.Показатель.ТипПоказателя КАК Показатель1ТипПоказателя,
	|	Показатели2.Показатель.ТипПоказателя КАК Показатель2ТипПоказателя,
	|	Показатели3.Показатель.ТипПоказателя КАК Показатель3ТипПоказателя,
	|	Показатели4.Показатель.ТипПоказателя КАК Показатель4ТипПоказателя,
	|	Показатели5.Показатель.ТипПоказателя КАК Показатель5ТипПоказателя,
	|	Показатели6.Показатель.ТипПоказателя КАК Показатель6ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения КАК Показатель1ВозможностьИзменения,
	|	Показатели2.Показатель.ВозможностьИзменения КАК Показатель2ВозможностьИзменения,
	|	Показатели3.Показатель.ВозможностьИзменения КАК Показатель3ВозможностьИзменения,
	|	Показатели4.Показатель.ВозможностьИзменения КАК Показатель4ВозможностьИзменения,
	|	Показатели5.Показатель.ВозможностьИзменения КАК Показатель5ВозможностьИзменения,
	|	Показатели6.Показатель.ВозможностьИзменения КАК Показатель6ВозможностьИзменения,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.Предопределенный КАК Показатель1Предопределенный,
	|	Показатели2.Показатель.Предопределенный КАК Показатель2Предопределенный,
	|	Показатели3.Показатель.Предопределенный КАК Показатель3Предопределенный,
	|	Показатели4.Показатель.Предопределенный КАК Показатель4Предопределенный,
	|	Показатели5.Показатель.Предопределенный КАК Показатель5Предопределенный,
	|	Показатели6.Показатель.Предопределенный КАК Показатель6Предопределенный
	|ПОМЕСТИТЬ ВТ_Показатели
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели1
	|		ПО (Показатели1.НомерСтроки = 1)
	|			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели1.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели2
	|		ПО (Показатели2.НомерСтроки = 2)
	|			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели2.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели3
	|		ПО (Показатели3.НомерСтроки = 3)
	|			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели3.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели4
	|		ПО (Показатели4.НомерСтроки = 4)
	|			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели4.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели5
	|		ПО (Показатели5.НомерСтроки = 5)
	|			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели5.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели6
	|		ПО (Показатели6.НомерСтроки = 6)
	|			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели6.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ПоказателиОсновныхНачислений
	|		ПО ОсновныеНачисленияОрганизаций.Ссылка = ПоказателиОсновныхНачислений.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Показатели1.Показатель.Наименование,
	|	Показатели2.Показатель.Наименование,
	|	Показатели3.Показатель.Наименование,
	|	Показатели4.Показатель.Наименование,
	|	Показатели5.Показатель.Наименование,
	|	Показатели6.Показатель.Наименование,
	|	Показатели1.Показатель.ТипПоказателя,
	|	Показатели2.Показатель.ТипПоказателя,
	|	Показатели3.Показатель.ТипПоказателя,
	|	Показатели4.Показатель.ТипПоказателя,
	|	Показатели5.Показатель.ТипПоказателя,
	|	Показатели6.Показатель.ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения,
	|	Показатели2.Показатель.ВозможностьИзменения,
	|	Показатели3.Показатель.ВозможностьИзменения,
	|	Показатели4.Показатель.ВозможностьИзменения,
	|	Показатели5.Показатель.ВозможностьИзменения,
	|	Показатели6.Показатель.ВозможностьИзменения,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.Предопределенный,
	|	Показатели2.Показатель.Предопределенный,
	|	Показатели3.Показатель.Предопределенный,
	|	Показатели4.Показатель.Предопределенный,
	|	Показатели5.Показатель.Предопределенный,
	|	Показатели6.Показатель.Предопределенный,
	|	ОсновныеНачисленияОрганизаций.Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ТЧРаботникиОрганизации.Сотрудник,
	|	ТЧРаботникиОрганизации.ДатаНачала,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА РегламентированныеРасчетныеПоказатели.Период < ТЧРаботникиОрганизации.ДатаНачала
	|			ТОГДА РегламентированныеРасчетныеПоказатели.Период
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ) КАК ПериодДоПеремещения,
	|	МАКСИМУМ(РегламентированныеРасчетныеПоказатели.Период) КАК ПериодПослеПеремещения
	|ПОМЕСТИТЬ ВТ_ПериодыРеглРасчетныхПоказателей
	|ИЗ
	|	Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК ТЧРаботникиОрганизации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РегламентированныеРасчетныеПоказатели
	|		ПО РегламентированныеРасчетныеПоказатели.Период <= ТЧРаботникиОрганизации.ДатаНачала
	|ГДЕ
	|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка
	|		И НЕ ТЧРаботникиОрганизации.Сторно
	|СГРУППИРОВАТЬ ПО
	|	ТЧРаботникиОрганизации.Сотрудник,
	|	ТЧРаботникиОрганизации.ДатаНачала
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	КоэффициентыИндексацииЗаработка.Период КАК Период,
	|	КоэффициентыИндексацииЗаработка.Сотрудник КАК Сотрудник,
	|	КоэффициентыИндексацииЗаработка.Организация КАК Организация
	|ПОМЕСТИТЬ ВТ_КоэффициентыИндексацииЗаработка 
	|ИЗ	РегистрСведений.КоэффициентыИндексацииЗаработка КАК КоэффициентыИндексацииЗаработка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + "
	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТЧРаботникиОрганизации.Сотрудник,
	|	ТЧРаботникиОрганизации.ДатаНачала,
	|	МАКСИМУМ(РаботникиОрганизации.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_ПоследниеДатыНазначений
	|ИЗ
	|	Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК ТЧРаботникиОрганизации
	|								
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		ПО ТЧРаботникиОрганизации.Сотрудник = РаботникиОрганизации.Сотрудник
	|			И РаботникиОрганизации.Период < ТЧРаботникиОрганизации.ДатаНачала
	|			И РаботникиОрганизации.Организация = &ГоловнаяОрганизация
	|
	|ГДЕ
	|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка
	|	И НЕ ТЧРаботникиОрганизации.Сторно
	|СГРУППИРОВАТЬ ПО
	|	ТЧРаботникиОрганизации.Сотрудник,
	|	ТЧРаботникиОрганизации.ДатаНачала
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТЧРаботникиОрганизации.ДатаНачала,
	|	ТЧРаботникиОрганизации.Сотрудник,
	|	РазмерТарифныхСтавок.Должность,
	|	РазмерТарифныхСтавок.ТарифныйРазряд,
	|	МАКСИМУМ(РазмерТарифныхСтавок.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_ПоследниеДатыТарифныхСтавок
	|ИЗ
	|	Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК ТЧРаботникиОрганизации
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|		ПО РазмерТарифныхСтавок.Период < ТЧРаботникиОрганизации.ДатаНачала
	|		И РазмерТарифныхСтавок.Должность = ТЧРаботникиОрганизации.Должность
	|ГДЕ
	|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка
	|	И НЕ ТЧРаботникиОрганизации.Сторно
	|СГРУППИРОВАТЬ ПО
	|	ТЧРаботникиОрганизации.ДатаНачала,
	|	ТЧРаботникиОрганизации.Сотрудник,
	|	РазмерТарифныхСтавок.Должность,
	|	РазмерТарифныхСтавок.ТарифныйРазряд
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоследниеДатыНазначений.ДатаНачала,
	|	ПоследниеДатыНазначений.Сотрудник,
	|    РаботникиОрганизации.Должность
	|ПОМЕСТИТЬ ВТ_ПредыдущиеНазначения
	|ИЗ
	|	ВТ_ПоследниеДатыНазначений КАК ПоследниеДатыНазначений
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		ПО ПоследниеДатыНазначений.Сотрудник = РаботникиОрганизации.Сотрудник
	|			И ПоследниеДатыНазначений.Период = РаботникиОрганизации.Период
	|			И РаботникиОрганизации.Организация = &ГоловнаяОрганизация
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ПредыдущиеНазначения.Сотрудник,
	|	ПредыдущиеНазначения.ДатаНачала,
	|	РазмерТарифныхСтавок.ТарифныйРазряд,
	|	РазмерТарифныхСтавок.Размер,
	|	РазмерТарифныхСтавок.Валюта
	|ПОМЕСТИТЬ ВТ_ПредыдущиеРазмерыТарифныхСтавок
	|ИЗ
	|	ВТ_ПредыдущиеНазначения КАК ПредыдущиеНазначения
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследниеДатыТарифныхСтавок КАК ПоследниеДатыТарифныхСтавок
	|		ПО ПредыдущиеНазначения.ДатаНачала = ПоследниеДатыТарифныхСтавок.ДатаНачала
	|			И ПредыдущиеНазначения.Должность = ПоследниеДатыТарифныхСтавок.Должность
	|			И ПредыдущиеНазначения.Сотрудник = ПоследниеДатыТарифныхСтавок.Сотрудник
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|		ПО ПоследниеДатыТарифныхСтавок.Должность = РазмерТарифныхСтавок.Должность
	|			И ПоследниеДатыТарифныхСтавок.ТарифныйРазряд = РазмерТарифныхСтавок.ТарифныйРазряд
	|			И ПоследниеДатыТарифныхСтавок.Период = РазмерТарифныхСтавок.Период
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ПоследниеДатыТарифныхСтавок.Сотрудник,
	|	ПоследниеДатыТарифныхСтавок.ДатаНачала,
	|	ПоследниеДатыТарифныхСтавок.ТарифныйРазряд,
	|	РазмерТарифныхСтавок.Размер,
	|	РазмерТарифныхСтавок.Валюта
	|ПОМЕСТИТЬ ВТ_ТекущиеРазмерыТарифныхСтавок
	|ИЗ
	|	ВТ_ПоследниеДатыТарифныхСтавок КАК ПоследниеДатыТарифныхСтавок
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
	|		ПО ПоследниеДатыТарифныхСтавок.Должность = РазмерТарифныхСтавок.Должность
	|		И ПоследниеДатыТарифныхСтавок.ТарифныйРазряд = РазмерТарифныхСтавок.ТарифныйРазряд
	|		И ПоследниеДатыТарифныхСтавок.Период = РазмерТарифныхСтавок.Период
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ТЧРаботникиОрганизации.Сотрудник,
	|	ВЫБОР
	|		КОГДА ТЧРаботникиОрганизации.ГрафикРаботы.ИспользуетсяСовместноСПланГрафиком
	|			ТОГДА МАКСИМУМ(БалансРабочегоВремени.НормаДней)
	|		ИНАЧЕ СУММА(ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма)
	|	КОНЕЦ КАК НормаДней,
	|	ВЫБОР
	|		КОГДА ТЧРаботникиОрганизации.ГрафикРаботы.ИспользуетсяСовместноСПланГрафиком
	|			ТОГДА МАКСИМУМ(БалансРабочегоВремени.НормаЧасов)
	|		ИНАЧЕ СУММА(ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма) 
	|	КОНЕЦ КАК НормаЧасов
	|ПОМЕСТИТЬ ВТ_НормаВремени
	|ИЗ
	|	Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК ТЧРаботникиОрганизации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО ГрафикиРаботыПоВидамВремени.ГрафикРаботы = ТЧРаботникиОрганизации.ГрафикРаботы
	|			И ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = &ПоДням
	|			И ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ТЧРаботникиОрганизации.ДатаНачала, МЕСЯЦ) И КОНЕЦПЕРИОДА(ТЧРаботникиОрганизации.ДатаНачала, МЕСЯЦ)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БалансРабочегоВремени КАК БалансРабочегоВремени
	|		ПО БалансРабочегоВремени.ГрафикРаботы = ТЧРаботникиОрганизации.ГрафикРаботы
	|			И БалансРабочегоВремени.ДатаМесяца = НАЧАЛОПЕРИОДА(ТЧРаботникиОрганизации.ДатаНачала, МЕСЯЦ)
	|
	|ГДЕ
	|	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка
	|	И НЕ ТЧРаботникиОрганизации.Сторно
	|
	|СГРУППИРОВАТЬ ПО
	|	ТЧРаботникиОрганизации.Сотрудник,
	|	ТЧРаботникиОрганизации.ГрафикРаботы.ИспользуетсяСовместноСПланГрафиком
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТекущиеИПрежниеНачисления.НомерСтроки,
	|	ТекущиеИПрежниеНачисления.Сотрудник КАК Сотрудник,
	|	ТекущиеИПрежниеНачисления.ВидРасчета КАК ВидРасчета,
	|	ТекущиеИПрежниеНачисления.ВидРасчета.ЗачетОтработанногоВремени КАК ОсновноеНачисление,
	|	ТекущиеИПрежниеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ВЫБОР
	|		КОГДА ТекущиеИПрежниеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПроизвольнаяФормулаРасчета,
	|	ЕСТЬNULL(ТекущиеПоказатели.КоличествоПоказателей, 0) КАК КоличествоПоказателей,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда, ЛОЖЬ) КАК ТребуетВводаТарифногоРазряда,
	|	ТекущиеПоказатели.Показатель1Наименование КАК Показатель1Наименование,
	|	ТекущиеПоказатели.Показатель2Наименование КАК Показатель2Наименование,
	|	ТекущиеПоказатели.Показатель3Наименование КАК Показатель3Наименование,
	|	ТекущиеПоказатели.Показатель4Наименование КАК Показатель4Наименование,
	|	ТекущиеПоказатели.Показатель5Наименование КАК Показатель5Наименование,
	|	ТекущиеПоказатели.Показатель6Наименование КАК Показатель6Наименование,
	|	ТекущиеПоказатели.Показатель1ТипПоказателя КАК Показатель1ТипПоказателя,
	|	ТекущиеПоказатели.Показатель2ТипПоказателя КАК Показатель2ТипПоказателя,
	|	ТекущиеПоказатели.Показатель3ТипПоказателя КАК Показатель3ТипПоказателя,
	|	ТекущиеПоказатели.Показатель4ТипПоказателя КАК Показатель4ТипПоказателя,
	|	ТекущиеПоказатели.Показатель5ТипПоказателя КАК Показатель5ТипПоказателя,
	|	ТекущиеПоказатели.Показатель6ТипПоказателя КАК Показатель6ТипПоказателя,
	|	ТекущиеПоказатели.Показатель1ВозможностьИзменения КАК Показатель1ВозможностьИзменения,
	|	ТекущиеПоказатели.Показатель2ВозможностьИзменения КАК Показатель2ВозможностьИзменения,
	|	ТекущиеПоказатели.Показатель3ВозможностьИзменения КАК Показатель3ВозможностьИзменения,
	|	ТекущиеПоказатели.Показатель4ВозможностьИзменения КАК Показатель4ВозможностьИзменения,	
	|	ТекущиеПоказатели.Показатель5ВозможностьИзменения КАК Показатель5ВозможностьИзменения,	
	|	ТекущиеПоказатели.Показатель6ВозможностьИзменения КАК Показатель6ВозможностьИзменения,	
	|	ТекущиеПоказатели.Показатель1ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	ТекущиеПоказатели.Показатель2ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	ТекущиеПоказатели.Показатель3ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	ТекущиеПоказатели.Показатель4ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	ТекущиеПоказатели.Показатель5ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	ТекущиеПоказатели.Показатель6ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	ТекущиеПоказатели.Показатель1Предопределенный КАК Показатель1Предопределенный,
	|	ТекущиеПоказатели.Показатель2Предопределенный КАК Показатель2Предопределенный,
	|	ТекущиеПоказатели.Показатель3Предопределенный КАК Показатель3Предопределенный,
	|	ТекущиеПоказатели.Показатель4Предопределенный КАК Показатель4Предопределенный,
	|	ТекущиеПоказатели.Показатель5Предопределенный КАК Показатель5Предопределенный,
	|	ТекущиеПоказатели.Показатель6Предопределенный КАК Показатель6Предопределенный,
	|	ТекущиеИПрежниеНачисления.Действие,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд1,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд2,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд3,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд4,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд5,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд6,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.Показатель1, 0) КАК Показатель1,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.Показатель2, 0) КАК Показатель2,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.Показатель3, 0) КАК Показатель3,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.Показатель4, 0) КАК Показатель4,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.Показатель5, 0) КАК Показатель5,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.Показатель6, 0) КАК Показатель6";
	Если НЕ УчетнаяПолитикаПоПерсоналуОрганизации.ИспользуютсяНачисленияВВалюте Тогда
		ТекстЗапроса = ТекстЗапроса + ",
	|	&ВалютаРегУчета КАК Валюта1,
	|	&ВалютаРегУчета КАК Валюта2,
	|	&ВалютаРегУчета КАК Валюта3,
	|	&ВалютаРегУчета КАК Валюта4,
	|	&ВалютаРегУчета КАК Валюта5,
	|	&ВалютаРегУчета КАК Валюта6";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ",
	|	ТекущиеИПрежниеНачисления.Валюта1,
	|	ТекущиеИПрежниеНачисления.Валюта2,
	|	ТекущиеИПрежниеНачисления.Валюта3,
	|	ТекущиеИПрежниеНачисления.Валюта4,
	|	ТекущиеИПрежниеНачисления.Валюта5,
	|	ТекущиеИПрежниеНачисления.Валюта6";
	КонецЕсли;	
	ТекстЗапроса = ТекстЗапроса + ",
	|	ТекущиеИПрежниеНачисления.ДатаНачала,
	|	ТекущиеИПрежниеНачисления.ДатаОкончания,
	|	ТекущиеИПрежниеНачисления.ПроизошедшееСобытие,
	|	ТекущиеИПрежниеНачисления.ОрганизацияПодразделения,
	|	ТекущиеИПрежниеНачисления.ДатаДвижения,
	|	ТекущиеИПрежниеНачисления.ПрежнийВидРасчета,
	|	ТекущиеИПрежниеНачисления.ПрежнийВидРасчета.СпособРасчета КАК ПрежнийСпособРасчета,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.ПрежнийВидРасчета.ТребуетВводаТарифногоРазряда, ЛОЖЬ) КАК ПрежнийТребуетВводаТарифногоРазряда,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд1,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд2,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд3,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд4,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд5,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд6,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.ПрежнийПоказатель1, 0) КАК ПрежнийПоказатель1,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.ПрежнийПоказатель2, 0) КАК ПрежнийПоказатель2,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.ПрежнийПоказатель3, 0) КАК ПрежнийПоказатель3,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.ПрежнийПоказатель4, 0) КАК ПрежнийПоказатель4,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.ПрежнийПоказатель5, 0) КАК ПрежнийПоказатель5,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.ПрежнийПоказатель6, 0) КАК ПрежнийПоказатель6,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта1,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта2,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта3,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта4,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта5,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта6,
	|	ПРЕДСТАВЛЕНИЕ(ТекущиеИПрежниеНачисления.Регистратор) КАК КонфликтныйДокумент,
	|	ДвойныеСтроки.КонфликтнаяСтрокаНомер КАК ДвойнаяСтрока,
	|	ТекущиеИПрежниеНачисления.ГрафикРаботы КАК ГрафикРаботы,
	|	ТекущиеИПрежниеНачисления.ГрафикРаботы.ВидГрафика КАК ВидГрафика,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.ГрафикРаботы.ДлительностьРабочейНедели, 0) КАК ДлительностьРабочейНедели";

	Если ПроверкаШтатногоРасписания Тогда
		ТекстЗапроса = ТекстЗапроса + ",
			|	ТекущиеИПрежниеНачисления.ВидТарифнойСтавки,
			|	ТекущиеИПрежниеНачисления.МинимальнаяТарифнаяСтавка,
			|	ТекущиеИПрежниеНачисления.МаксимальнаяТарифнаяСтавка,
			|	ТекущиеИПрежниеНачисления.ТарифныйРазрядРаботника,
			|	ТекущиеИПрежниеНачисления.ПериодШТ,
			|	ТекущиеИПрежниеНачисления.РазмерСоответствуетШТР";
	КонецЕсли;
			   
	ТекстЗапроса = ТекстЗапроса + ",
	|	ЕСТЬNULL(НормаВремени.НормаДней, 0) КАК НормаДней,
	|	ЕСТЬNULL(НормаВремени.НормаЧасов, 0) КАК НормаЧасов,
	|	ВЫБОР
	|		КОГДА ТекущиеИПрежниеНачисления.ПрежнийВидРасчета.ТребуетВводаТарифногоРазряда
	|				ИЛИ ПрежниеПоказатели.Показатель1ТипПоказателя = &ТипПоказателяТарифныйРазряд
	|			ТОГДА ЕСТЬNULL(ПредыдущиеРазмерыТарифныхСтавок.Размер, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТекущиеИПрежниеНачисления.ПрежнийПоказатель1, 0)
	|	КОНЕЦ * ВЫБОР
	|				КОГДА ЕСТЬNULL(ПредыдущиеКурсыВалют.Валюта, &ПустаяВалюта) В (&ВалютаРегУчета, &ПустаяВалюта)
	|					ТОГДА 1
	|				ИНАЧЕ ЕСТЬNULL(ПредыдущиеКурсыВалют.Курс / ПредыдущиеКурсыВалют.Кратность, 1)
	|			КОНЕЦ КАК ПрежнийПоказатель1ДляКоэффициентаИндексации,
	|	ВЫБОР
	|		КОГДА ТекущиеИПрежниеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|				ИЛИ ТекущиеПоказатели.Показатель1ТипПоказателя = &ТипПоказателяТарифныйРазряд
	|			ТОГДА ЕСТЬNULL(ТекущиеРазмерыТарифныхСтавок.Размер, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТекущиеИПрежниеНачисления.Показатель1, 0)
	|	КОНЕЦ * ВЫБОР
	|				КОГДА ЕСТЬNULL(ТекущиеКурсыВалют.Валюта, &ПустаяВалюта) В (&ВалютаРегУчета, &ПустаяВалюта)
	|					ТОГДА 1
	|				ИНАЧЕ ЕСТЬNULL(ТекущиеКурсыВалют.Курс / ТекущиеКурсыВалют.Кратность, 1)
	|			КОНЕЦ КАК Показатель1ДляКоэффициентаИндексации,
	|	ЕСТЬNULL(РеглПоказателиДоПеремещения.РазмерМЗП, 0) КАК ПрежнийРазмерМЗП,
	|	ЕСТЬNULL(РеглПоказателиПослеПеремещения.РазмерМЗП, 0) КАК ТекущийРазмерМЗП,
	|	ВЫБОР
	|		КОГДА НЕ КоэффициентыИндексацииЗаработкаНаДатуНачала.Сотрудник ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОшибкаВведеныКоэффициентыИндексацииНаДатуНачала,
	|	ВЫБОР
	|		КОГДА НЕ КоэффициентыИндексацииЗаработкаНаДатуОкончания.Сотрудник ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОшибкаВведеныКоэффициентыИндексацииНаДатуОкончания
	|ИЗ
	|	ВТ_ТекущиеИПрежниеНачисления КАК ТекущиеИПрежниеНачисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Показатели КАК ТекущиеПоказатели 
	|		ПО ТекущиеИПрежниеНачисления.ВидРасчета = ТекущиеПоказатели.ВидРасчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Показатели КАК ПрежниеПоказатели 
	|		ПО ТекущиеИПрежниеНачисления.ПрежнийВидРасчета = ПрежниеПоказатели.ВидРасчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТЧНачисления.НомерСтроки КАК НомерСтроки,
	|			МИНИМУМ(ТЧНачисления2.НомерСтроки) КАК КонфликтнаяСтрокаНомер
	|		ИЗ
	|			Документ.КадровоеПеремещениеОрганизаций.ОсновныеНачисления КАК ТЧНачисления
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещениеОрганизаций.ОсновныеНачисления КАК ТЧНачисления2
	|				ПО ТЧНачисления2.Ссылка = ТЧНачисления.Ссылка
	|					И ТЧНачисления.Сотрудник = ТЧНачисления2.Сотрудник
	|					И (ТЧНачисления.ВидРасчета = ТЧНачисления2.ВидРасчета
	|						ИЛИ ТЧНачисления.ВидРасчета.ЗачетОтработанногоВремени
	|							И ТЧНачисления2.ВидРасчета.ЗачетОтработанногоВремени)
	|					И ТЧНачисления.НомерСтроки < ТЧНачисления2.НомерСтроки
	|		ГДЕ
	|			ТЧНачисления.Ссылка = &ДокументСсылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТЧНачисления.НомерСтроки) КАК ДвойныеСтроки
	|		ПО ТекущиеИПрежниеНачисления.НомерСтроки = ДвойныеСтроки.НомерСтроки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НормаВремени КАК НормаВремени
	|		ПО ТекущиеИПрежниеНачисления.Сотрудник = НормаВремени.Сотрудник
	|
	|		// определелим размеры предыдущих тарифных разрядов (до перемещения) для расчета коэффициента индексации заработка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПредыдущиеРазмерыТарифныхСтавок КАК ПредыдущиеРазмерыТарифныхСтавок
	|		ПО ТекущиеИПрежниеНачисления.Сотрудник = ПредыдущиеРазмерыТарифныхСтавок.Сотрудник
	|			И ТекущиеИПрежниеНачисления.ДатаНачала = ПредыдущиеРазмерыТарифныхСтавок.ДатаНачала
	|			И ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд1 = ПредыдущиеРазмерыТарифныхСтавок.ТарифныйРазряд
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК ПредыдущиеКурсыВалют
	|			ПО НАЧАЛОПЕРИОДА(ТекущиеИПрежниеНачисления.ДатаНачала, МЕСЯЦ) = ПредыдущиеКурсыВалют.Период
	|				И ВЫБОР 
	|					КОГДА ТекущиеИПрежниеНачисления.ПрежнийВидРасчета.ТребуетВводаТарифногоРазряда
	|							ИЛИ ПрежниеПоказатели.Показатель1ТипПоказателя = &ТипПоказателяТарифныйРазряд
	|						ТОГДА ПредыдущиеРазмерыТарифныхСтавок.Валюта
	|					ИНАЧЕ ТекущиеИПрежниеНачисления.ПрежняяВалюта1
	|				КОНЕЦ = ПредыдущиеКурсыВалют.Валюта
	|
	|		// определим текущий размеры тарифных ставок (на момент перемещения)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТекущиеРазмерыТарифныхСтавок КАК ТекущиеРазмерыТарифныхСтавок
	|		ПО ТекущиеИПрежниеНачисления.Сотрудник = ТекущиеРазмерыТарифныхСтавок.Сотрудник
	|			И ТекущиеИПрежниеНачисления.ДатаНачала = ТекущиеРазмерыТарифныхСтавок.ДатаНачала
	|			И ТекущиеИПрежниеНачисления.ТарифныйРазряд1 = ТекущиеРазмерыТарифныхСтавок.ТарифныйРазряд
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК ТекущиеКурсыВалют
	|			ПО НАЧАЛОПЕРИОДА(ТекущиеИПрежниеНачисления.ДатаНачала, МЕСЯЦ) = ТекущиеКурсыВалют.Период
	|				И ВЫБОР
	|					КОГДА ТекущиеИПрежниеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|							ИЛИ ТекущиеПоказатели.Показатель1ТипПоказателя = &ТипПоказателяТарифныйРазряд
	|						ТОГДА ТекущиеРазмерыТарифныхСтавок.Валюта
	|					ИНАЧЕ ТекущиеИПрежниеНачисления.Валюта1
	|				КОНЕЦ = ТекущиеКурсыВалют.Валюта
	|
	|		// определим размеры МЗП до и после перемещения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыРеглРасчетныхПоказателей КАК ПериодыРеглРасчетныхПоказателей
	|			ПО ТекущиеИПрежниеНачисления.Сотрудник = ПериодыРеглРасчетныхПоказателей.Сотрудник
	|				И ТекущиеИПрежниеНачисления.ДатаНачала = ПериодыРеглРасчетныхПоказателей.ДатаНачала
	|					
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РеглПоказателиДоПеремещения
	|			ПО ПериодыРеглРасчетныхПоказателей.ПериодДоПеремещения = РеглПоказателиДоПеремещения.Период
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели КАК РеглПоказателиПослеПеремещения
	|			ПО ПериодыРеглРасчетныхПоказателей.ПериодПослеПеремещения = РеглПоказателиПослеПеремещения.Период
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоэффициентыИндексацииЗаработка КАК КоэффициентыИндексацииЗаработкаНаДатуНачала
	|			ПО ТекущиеИПрежниеНачисления.Сотрудник = КоэффициентыИндексацииЗаработкаНаДатуНачала.Сотрудник
	|				И ТекущиеИПрежниеНачисления.ДатаНачала = КоэффициентыИндексацииЗаработкаНаДатуНачала.Период
	|				И КоэффициентыИндексацииЗаработкаНаДатуНачала.Организация = &ГоловнаяОрганизация
	|				И ТекущиеИПрежниеНачисления.ВидРасчета.ЗачетОтработанногоВремени
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоэффициентыИндексацииЗаработка КАК КоэффициентыИндексацииЗаработкаНаДатуОкончания
	|			ПО ТекущиеИПрежниеНачисления.Сотрудник = КоэффициентыИндексацииЗаработкаНаДатуОкончания.Сотрудник
	|				И ТекущиеИПрежниеНачисления.ДатаОкончания = КоэффициентыИндексацииЗаработкаНаДатуОкончания.Период
	|				И КоэффициентыИндексацииЗаработкаНаДатуОкончания.Организация = &ГоловнаяОрганизация
	|				И ТекущиеИПрежниеНачисления.ДатаОкончания <> &НачальнаяДата
	|				И ТекущиеИПрежниеНачисления.ВидРасчета.ЗачетОтработанногоВремени
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", Организация);
	Запрос.УстановитьПараметр("ВалютаРегУчета", мВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ПустаяВалюта", Справочники.Валюты.ПустаяСсылка());
    Запрос.УстановитьПараметр("НачальнаяДата", '00010101');
    Запрос.УстановитьПараметр("Сменный", Перечисления.ВидыРабочихГрафиков.Сменный);
    Запрос.УстановитьПараметр("ПоДням", Перечисления.ВидыУчетаВремени.ПоДням);
    Запрос.УстановитьПараметр("ТипПоказателяТарифныйРазряд", Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд);
	
    Если ПроверкаШтатногоРасписания Тогда
		МассивСпособов = Новый Массив;
		МассивСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням);
		МассивСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам);
		
		МассивСпособовЧасовых = Новый Массив;
		МассивСпособовЧасовых.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке);
		
		МассивДействий = Новый Массив;
		МассивДействий.Добавить(Перечисления.ВидыДействияСНачислением.Начать);
		МассивДействий.Добавить(Перечисления.ВидыДействияСНачислением.Изменить);
		
		Запрос.УстановитьПараметр("ИзменитьРасчеты", МассивДействий);
		Запрос.УстановитьПараметр("МесячнаяСтавка", Перечисления.ВидыТарифныхСтавок.Месячная);
		Запрос.УстановитьПараметр("МесячныеРасчеты", МассивСпособов);
		Запрос.УстановитьПараметр("ДневнаяСтавка", Перечисления.ВидыТарифныхСтавок.Дневная);
		Запрос.УстановитьПараметр("ДневнойРасчет", Перечисления.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке);
		Запрос.УстановитьПараметр("ЧасоваяСтавка", Перечисления.ВидыТарифныхСтавок.Часовая);
		Запрос.УстановитьПараметр("ЧасовыеРасчеты", МассивСпособовЧасовых);
	КонецЕсли;                                         

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоНачисления()

// Формирует запрос по таблице "ДополнительныеНачисления" документа
//
// Параметры: 
//  нет
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоДопНачисления()

	Запрос = Новый Запрос;

	УчетнаяПолитикаПоПерсоналуОрганизации = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация];

	ТекстЗапроса =  
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Ссылка КАК Ссылка,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Сотрудник КАК Сотрудник,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Действие КАК Действие,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Показатель1 КАК Показатель1,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Показатель2 КАК Показатель2,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Показатель3 КАК Показатель3,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Показатель4 КАК Показатель4,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Показатель5 КАК Показатель5,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Показатель6 КАК Показатель6,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.ТарифныйРазряд1 КАК ТарифныйРазряд1,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.ТарифныйРазряд2 КАК ТарифныйРазряд2,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.ТарифныйРазряд3 КАК ТарифныйРазряд3,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.ТарифныйРазряд4 КАК ТарифныйРазряд4,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.ТарифныйРазряд5 КАК ТарифныйРазряд5,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.ТарифныйРазряд6 КАК ТарифныйРазряд6,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Валюта1 КАК Валюта1,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Валюта2 КАК Валюта2,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Валюта3 КАК Валюта3,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Валюта4 КАК Валюта4,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Валюта5 КАК Валюта5,
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Валюта6 КАК Валюта6,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ДатаНачала КАК ДатаНачала,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ДатаОкончания КАК ДатаОкончания,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ПроизошедшееСобытие КАК ПроизошедшееСобытие,
	|	КадровоеПеремещениеОрганизацииРаботникиОрганизации.ПодразделениеОрганизации.Владелец КАК ОрганизацияПодразделения
	|ПОМЕСТИТЬ ВТ_ТЧДополнительныеНачисления
	|ИЗ
	|	Документ.КадровоеПеремещениеОрганизаций.ДополнительныеНачисления КАК КадровоеПеремещениеОрганизацииДополнительныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК КадровоеПеремещениеОрганизацииРаботникиОрганизации
	|		ПО КадровоеПеремещениеОрганизацииДополнительныеНачисления.Сотрудник = КадровоеПеремещениеОрганизацииРаботникиОрганизации.Сотрудник
	|			И КадровоеПеремещениеОрганизацииДополнительныеНачисления.Ссылка = КадровоеПеремещениеОрганизацииРаботникиОрганизации.Ссылка
	|			И КадровоеПеремещениеОрганизацииДополнительныеНачисления.Сторно = КадровоеПеремещениеОрганизацииРаботникиОрганизации.Сторно
	|ГДЕ
	|	КадровоеПеремещениеОрганизацииДополнительныеНачисления.Ссылка = &ДокументСсылка
	|	И (НЕ КадровоеПеремещениеОрганизацииДополнительныеНачисления.Сторно)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТЧДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ТЧДополнительныеНачисления.Ссылка КАК Ссылка,
	|	ТЧДополнительныеНачисления.Сотрудник КАК Сотрудник,
	|	ТЧДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
	|	ТЧДополнительныеНачисления.Действие КАК Действие,
	|	ТЧДополнительныеНачисления.Показатель1 КАК Показатель1,
	|	ТЧДополнительныеНачисления.Показатель2 КАК Показатель2,
	|	ТЧДополнительныеНачисления.Показатель3 КАК Показатель3,
	|	ТЧДополнительныеНачисления.Показатель4 КАК Показатель4,
	|	ТЧДополнительныеНачисления.Показатель5 КАК Показатель5,
	|	ТЧДополнительныеНачисления.Показатель6 КАК Показатель6,
	|	ТЧДополнительныеНачисления.ТарифныйРазряд1 КАК ТарифныйРазряд1,
	|	ТЧДополнительныеНачисления.ТарифныйРазряд2 КАК ТарифныйРазряд2,
	|	ТЧДополнительныеНачисления.ТарифныйРазряд3 КАК ТарифныйРазряд3,
	|	ТЧДополнительныеНачисления.ТарифныйРазряд4 КАК ТарифныйРазряд4,
	|	ТЧДополнительныеНачисления.ТарифныйРазряд5 КАК ТарифныйРазряд5,
	|	ТЧДополнительныеНачисления.ТарифныйРазряд6 КАК ТарифныйРазряд6,
	|	ТЧДополнительныеНачисления.Валюта1 КАК Валюта1,
	|	ТЧДополнительныеНачисления.Валюта2 КАК Валюта2,
	|	ТЧДополнительныеНачисления.Валюта3 КАК Валюта3,
	|	ТЧДополнительныеНачисления.Валюта4 КАК Валюта4,
	|	ТЧДополнительныеНачисления.Валюта5 КАК Валюта5,
	|	ТЧДополнительныеНачисления.Валюта6 КАК Валюта6,
	|	ТЧДополнительныеНачисления.ДатаНачала КАК ДатаНачала,
	|	ТЧДополнительныеНачисления.ДатаОкончания КАК ДатаОкончания,
	|	ТЧДополнительныеНачисления.ПроизошедшееСобытие КАК ПроизошедшееСобытие,
	|	ТЧДополнительныеНачисления.ОрганизацияПодразделения КАК ОрганизацияПодразделения,
	|	МАКСИМУМ(ПлановыеНачисленияРаботниковОрганизаций.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_ДатыНачислений
	|ИЗ
	|	ВТ_ТЧДополнительныеНачисления КАК ТЧДополнительныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	|		ПО ТЧДополнительныеНачисления.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
	|			И (ПлановыеНачисленияРаботниковОрганизаций.Организация = &ГоловнаяОрганизация)
	|			И ТЧДополнительныеНачисления.ДатаНачала >= ПлановыеНачисленияРаботниковОрганизаций.Период
	|			И (ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение = ТЧДополнительныеНачисления.ВидРасчета)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТЧДополнительныеНачисления.Сотрудник,
	|	ТЧДополнительныеНачисления.ДатаНачала,
	|	ТЧДополнительныеНачисления.Ссылка,
	|	ТЧДополнительныеНачисления.НомерСтроки,
	|	ТЧДополнительныеНачисления.ДатаОкончания,
	|	ТЧДополнительныеНачисления.ПроизошедшееСобытие,
	|	ТЧДополнительныеНачисления.ОрганизацияПодразделения,
	|	ТЧДополнительныеНачисления.ВидРасчета,
	|	ТЧДополнительныеНачисления.Показатель1,
	|	ТЧДополнительныеНачисления.Показатель2,
	|	ТЧДополнительныеНачисления.Показатель3,
	|	ТЧДополнительныеНачисления.Показатель4,
	|	ТЧДополнительныеНачисления.Показатель5,
	|	ТЧДополнительныеНачисления.Показатель6,
	|	ТЧДополнительныеНачисления.ТарифныйРазряд1,
	|	ТЧДополнительныеНачисления.ТарифныйРазряд2,
	|	ТЧДополнительныеНачисления.ТарифныйРазряд3,
	|	ТЧДополнительныеНачисления.ТарифныйРазряд4,
	|	ТЧДополнительныеНачисления.ТарифныйРазряд5,
	|	ТЧДополнительныеНачисления.ТарифныйРазряд6,
	|	ТЧДополнительныеНачисления.Валюта1,
	|	ТЧДополнительныеНачисления.Валюта2,
	|	ТЧДополнительныеНачисления.Валюта3,
	|	ТЧДополнительныеНачисления.Валюта4,
	|	ТЧДополнительныеНачисления.Валюта5,
	|	ТЧДополнительныеНачисления.Валюта6,
	|	ТЧДополнительныеНачисления.Действие
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДатыНачислений.НомерСтроки КАК НомерСтроки,
	|	ДатыНачислений.Сотрудник КАК Сотрудник,
	|	ДатыНачислений.ВидРасчета КАК ВидРасчета,
	|	ДатыНачислений.Действие КАК Действие,
	|	ДатыНачислений.Показатель1 КАК Показатель1,
	|	ДатыНачислений.Показатель2 КАК Показатель2,
	|	ДатыНачислений.Показатель3 КАК Показатель3,
	|	ДатыНачислений.Показатель4 КАК Показатель4,
	|	ДатыНачислений.Показатель5 КАК Показатель5,
	|	ДатыНачислений.Показатель6 КАК Показатель6,
	|	ДатыНачислений.ТарифныйРазряд1 КАК ТарифныйРазряд1,
	|	ДатыНачислений.ТарифныйРазряд2 КАК ТарифныйРазряд2,
	|	ДатыНачислений.ТарифныйРазряд3 КАК ТарифныйРазряд3,
	|	ДатыНачислений.ТарифныйРазряд4 КАК ТарифныйРазряд4,
	|	ДатыНачислений.ТарифныйРазряд5 КАК ТарифныйРазряд5,
	|	ДатыНачислений.ТарифныйРазряд6 КАК ТарифныйРазряд6,
	|	ДатыНачислений.Валюта1 КАК Валюта1,
	|	ДатыНачислений.Валюта2 КАК Валюта2,
	|	ДатыНачислений.Валюта3 КАК Валюта3,
	|	ДатыНачислений.Валюта4 КАК Валюта4,
	|	ДатыНачислений.Валюта5 КАК Валюта5,
	|	ДатыНачислений.Валюта6 КАК Валюта6,
	|	ДатыНачислений.ДатаНачала КАК ДатаНачала,
	|	ДатыНачислений.ДатаОкончания КАК ДатаОкончания,
	|	ДатыНачислений.ПроизошедшееСобытие КАК ПроизошедшееСобытие,
	|	ДатыНачислений.ОрганизацияПодразделения КАК ОрганизацияПодразделения,
	|	ДатыНачислений.Период КАК ДатаДвижения,
	|	ПлановыеНачисленияРаботниковОрганизаций.Регистратор КАК Регистратор,
	|	ЕСТЬNULL(ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета, ДатыНачислений.ВидРасчета) КАК ПрежнийВидРасчета,
	|
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд1Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд1
	|	КОНЕЦ КАК ПрежнийТарифныйРазряд1,
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель1Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель1
	|	КОНЕЦ КАК ПрежнийПоказатель1,
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Валюта1Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта1
	|	КОНЕЦ КАК ПрежняяВалюта1,
	|
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд2Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд2
	|	КОНЕЦ КАК ПрежнийТарифныйРазряд2,
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель2Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель2
	|	КОНЕЦ КАК ПрежнийПоказатель2,
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Валюта2Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта2
	|	КОНЕЦ КАК ПрежняяВалюта2,
	|
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд3Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд3
	|	КОНЕЦ КАК ПрежнийТарифныйРазряд3,
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель3Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель3
	|	КОНЕЦ КАК ПрежнийПоказатель3,
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Валюта3Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта3
	|	КОНЕЦ КАК ПрежняяВалюта3,
	|
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд4Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд4
	|	КОНЕЦ КАК ПрежнийТарифныйРазряд4,
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель4Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель4
	|	КОНЕЦ КАК ПрежнийПоказатель4,
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Валюта4Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта4
	|	КОНЕЦ КАК ПрежняяВалюта4,
	|
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд5Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд5
	|	КОНЕЦ КАК ПрежнийТарифныйРазряд5,
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель5Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель5
	|	КОНЕЦ КАК ПрежнийПоказатель5,
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Валюта5Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта5
	|	КОНЕЦ КАК ПрежняяВалюта5,
	|
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд6Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд6
	|	КОНЕЦ КАК ПрежнийТарифныйРазряд6,
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель6Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель6
	|	КОНЕЦ КАК ПрежнийПоказатель6,
	|	ВЫБОР
	|		КОГДА ДатыНачислений.ДатаНачала > ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения
	|				И ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|			ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Валюта6Завершения
	|		ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта6
	|	КОНЕЦ КАК ПрежняяВалюта6,
	|
	|	ДатыНачислений.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ТекущиеИПрежниеНачисления
	|ИЗ
	|	ВТ_ДатыНачислений КАК ДатыНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	|		ПО ДатыНачислений.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
	|			И (ПлановыеНачисленияРаботниковОрганизаций.Организация = &ГоловнаяОрганизация)
	|			И ДатыНачислений.Период = ПлановыеНачисленияРаботниковОрганизаций.Период
	|			И ДатыНачислений.ВидРасчета = ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	ТекущиеИПрежниеНачисления.ВидРасчета,
	|	МАКСИМУМ(Показатели.НомерСтроки) КАК КоличествоПоказателей,
	|	Показатели1.Показатель.Наименование КАК Показатель1Наименование,
	|	Показатели2.Показатель.Наименование КАК Показатель2Наименование,
	|	Показатели3.Показатель.Наименование КАК Показатель3Наименование,
	|	Показатели4.Показатель.Наименование КАК Показатель4Наименование,
	|	Показатели5.Показатель.Наименование КАК Показатель5Наименование,
	|	Показатели6.Показатель.Наименование КАК Показатель6Наименование,
	|	Показатели1.Показатель.ТипПоказателя КАК Показатель1ТипПоказателя,
	|	Показатели2.Показатель.ТипПоказателя КАК Показатель2ТипПоказателя,
	|	Показатели3.Показатель.ТипПоказателя КАК Показатель3ТипПоказателя,
	|	Показатели4.Показатель.ТипПоказателя КАК Показатель4ТипПоказателя,
	|	Показатели5.Показатель.ТипПоказателя КАК Показатель5ТипПоказателя,
	|	Показатели6.Показатель.ТипПоказателя КАК Показатель6ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения КАК Показатель1ВозможностьИзменения,
	|	Показатели2.Показатель.ВозможностьИзменения КАК Показатель2ВозможностьИзменения,
	|	Показатели3.Показатель.ВозможностьИзменения КАК Показатель3ВозможностьИзменения,
	|	Показатели4.Показатель.ВозможностьИзменения КАК Показатель4ВозможностьИзменения,
	|	Показатели5.Показатель.ВозможностьИзменения КАК Показатель5ВозможностьИзменения,
	|	Показатели6.Показатель.ВозможностьИзменения КАК Показатель6ВозможностьИзменения,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.Предопределенный КАК Показатель1Предопределенный,
	|	Показатели2.Показатель.Предопределенный КАК Показатель2Предопределенный,
	|	Показатели3.Показатель.Предопределенный КАК Показатель3Предопределенный,
	|	Показатели4.Показатель.Предопределенный КАК Показатель4Предопределенный,
	|	Показатели5.Показатель.Предопределенный КАК Показатель5Предопределенный,
	|	Показатели6.Показатель.Предопределенный КАК Показатель6Предопределенный
	|ПОМЕСТИТЬ ВТ_Показатели
	|ИЗ
	|	ВТ_ТекущиеИПрежниеНачисления КАК ТекущиеИПрежниеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели
	|		ПО ТекущиеИПрежниеНачисления.ВидРасчета = Показатели.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели1
	|		ПО ТекущиеИПрежниеНачисления.ВидРасчета = Показатели1.Ссылка
	|			И (Показатели1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели2
	|		ПО ТекущиеИПрежниеНачисления.ВидРасчета = Показатели2.Ссылка
	|			И (Показатели2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели3
	|		ПО ТекущиеИПрежниеНачисления.ВидРасчета = Показатели3.Ссылка
	|			И (Показатели3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели4
	|		ПО ТекущиеИПрежниеНачисления.ВидРасчета = Показатели4.Ссылка
	|			И (Показатели4.НомерСтроки = 4)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели5
	|		ПО ТекущиеИПрежниеНачисления.ВидРасчета = Показатели5.Ссылка
	|			И (Показатели5.НомерСтроки = 5)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели6
	|		ПО ТекущиеИПрежниеНачисления.ВидРасчета = Показатели6.Ссылка
	|			И (Показатели6.НомерСтроки = 6)
	|
	|СГРУППИРОВАТЬ ПО
	|	Показатели1.Показатель.Наименование,
	|	Показатели2.Показатель.Наименование,
	|	Показатели3.Показатель.Наименование,
	|	Показатели4.Показатель.Наименование,
	|	Показатели5.Показатель.Наименование,
	|	Показатели6.Показатель.Наименование,
	|	Показатели1.Показатель.ТипПоказателя,
	|	Показатели2.Показатель.ТипПоказателя,
	|	Показатели3.Показатель.ТипПоказателя,
	|	Показатели4.Показатель.ТипПоказателя,
	|	Показатели5.Показатель.ТипПоказателя,
	|	Показатели6.Показатель.ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения,
	|	Показатели2.Показатель.ВозможностьИзменения,
	|	Показатели3.Показатель.ВозможностьИзменения,
	|	Показатели4.Показатель.ВозможностьИзменения,
	|	Показатели5.Показатель.ВозможностьИзменения,
	|	Показатели6.Показатель.ВозможностьИзменения,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.Предопределенный,
	|	Показатели2.Показатель.Предопределенный,
	|	Показатели3.Показатель.Предопределенный,
	|	Показатели4.Показатель.Предопределенный,
	|	Показатели5.Показатель.Предопределенный,
	|	Показатели6.Показатель.Предопределенный,
	|	ТекущиеИПрежниеНачисления.ВидРасчета
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТекущиеИПрежниеНачисления.НомерСтроки,
	|	ТекущиеИПрежниеНачисления.Сотрудник,
	|	ТекущиеИПрежниеНачисления.ВидРасчета,
	|	ТекущиеИПрежниеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ВЫБОР
	|		КОГДА ТекущиеИПрежниеНачисления.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПроизвольнаяФормулаРасчета,
	|	ЕСТЬNULL(Показатели.КоличествоПоказателей, 0) КАК КоличествоПоказателей,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда, ЛОЖЬ) КАК ТребуетВводаТарифногоРазряда,
	|	Показатели.Показатель1Наименование КАК Показатель1Наименование,
	|	Показатели.Показатель2Наименование КАК Показатель2Наименование,
	|	Показатели.Показатель3Наименование КАК Показатель3Наименование,
	|	Показатели.Показатель4Наименование КАК Показатель4Наименование,
	|	Показатели.Показатель5Наименование КАК Показатель5Наименование,
	|	Показатели.Показатель6Наименование КАК Показатель6Наименование,
	|	Показатели.Показатель1ТипПоказателя КАК Показатель1ТипПоказателя,
	|	Показатели.Показатель2ТипПоказателя КАК Показатель2ТипПоказателя,
	|	Показатели.Показатель3ТипПоказателя КАК Показатель3ТипПоказателя,
	|	Показатели.Показатель4ТипПоказателя КАК Показатель4ТипПоказателя,
	|	Показатели.Показатель5ТипПоказателя КАК Показатель5ТипПоказателя,
	|	Показатели.Показатель6ТипПоказателя КАК Показатель6ТипПоказателя,
	|	Показатели.Показатель1ВозможностьИзменения КАК Показатель1ВозможностьИзменения,
	|	Показатели.Показатель2ВозможностьИзменения КАК Показатель2ВозможностьИзменения,
	|	Показатели.Показатель3ВозможностьИзменения КАК Показатель3ВозможностьИзменения,
	|	Показатели.Показатель4ВозможностьИзменения КАК Показатель4ВозможностьИзменения,	
	|	Показатели.Показатель5ВозможностьИзменения КАК Показатель5ВозможностьИзменения,
	|	Показатели.Показатель6ВозможностьИзменения КАК Показатель6ВозможностьИзменения,	
	|	Показатели.Показатель1ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель2ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель3ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель4ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель5ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель6ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель1Предопределенный КАК Показатель1Предопределенный,
	|	Показатели.Показатель2Предопределенный КАК Показатель2Предопределенный,
	|	Показатели.Показатель3Предопределенный КАК Показатель3Предопределенный,
	|	Показатели.Показатель4Предопределенный КАК Показатель4Предопределенный,
	|	Показатели.Показатель5Предопределенный КАК Показатель5Предопределенный,
	|	Показатели.Показатель6Предопределенный КАК Показатель6Предопределенный,
	|	ТекущиеИПрежниеНачисления.Действие";
	Если НЕ УчетнаяПолитикаПоПерсоналуОрганизации.ИспользуютсяНачисленияВВалюте Тогда
		ТекстЗапроса = ТекстЗапроса + ",
	|	&ВалютаРегУчета КАК Валюта1,
	|	&ВалютаРегУчета КАК Валюта2,
	|	&ВалютаРегУчета КАК Валюта3,
	|	&ВалютаРегУчета КАК Валюта4,
	|	&ВалютаРегУчета КАК Валюта5,
	|	&ВалютаРегУчета КАК Валюта6";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ",
	|	ТекущиеИПрежниеНачисления.Валюта1,
	|	ТекущиеИПрежниеНачисления.Валюта2,
	|	ТекущиеИПрежниеНачисления.Валюта3,
	|	ТекущиеИПрежниеНачисления.Валюта4,
	|	ТекущиеИПрежниеНачисления.Валюта5,
	|	ТекущиеИПрежниеНачисления.Валюта6";
	КонецЕсли;	
	ТекстЗапроса = ТекстЗапроса + ",
	|	ТекущиеИПрежниеНачисления.Показатель1,
	|	ТекущиеИПрежниеНачисления.Показатель2,
	|	ТекущиеИПрежниеНачисления.Показатель3,
	|	ТекущиеИПрежниеНачисления.Показатель4,
	|	ТекущиеИПрежниеНачисления.Показатель5,
	|	ТекущиеИПрежниеНачисления.Показатель6,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд1,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд2,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд3,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд4,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд5,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд6,
	|	ТекущиеИПрежниеНачисления.ДатаНачала,
	|	ТекущиеИПрежниеНачисления.ДатаОкончания,
	|	ТекущиеИПрежниеНачисления.ПроизошедшееСобытие,
	|	ТекущиеИПрежниеНачисления.ОрганизацияПодразделения,
	|	ТекущиеИПрежниеНачисления.ДатаДвижения,
	|	ПРЕДСТАВЛЕНИЕ(ТекущиеИПрежниеНачисления.Регистратор) КАК КонфликтныйДокумент,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд1,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд2,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд3,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд4,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд5,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд6,
	|	ТекущиеИПрежниеНачисления.ПрежнийВидРасчета,
	|	ТекущиеИПрежниеНачисления.ПрежнийПоказатель1,
	|	ТекущиеИПрежниеНачисления.ПрежнийПоказатель2,
	|	ТекущиеИПрежниеНачисления.ПрежнийПоказатель3,
	|	ТекущиеИПрежниеНачисления.ПрежнийПоказатель4,
	|	ТекущиеИПрежниеНачисления.ПрежнийПоказатель5,
	|	ТекущиеИПрежниеНачисления.ПрежнийПоказатель6,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта1,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта2,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта3,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта4,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта5,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта6,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.ПрежнийВидРасчета.ТребуетВводаТарифногоРазряда, ЛОЖЬ) КАК ПрежнийТребуетВводаТарифногоРазряда,
	|	МИНИМУМ(ДвойныеСтроки.НомерСтроки) КАК ДвойнаяСтрока,
	|	ТекущиеИПрежниеНачисления.Ссылка
	|ИЗ
	|	ВТ_ТекущиеИПрежниеНачисления КАК ТекущиеИПрежниеНачисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Показатели КАК Показатели
	|   	ПО ТекущиеИПрежниеНачисления.ВидРасчета = Показатели.ВидРасчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.КадровоеПеремещениеОрганизаций.ДополнительныеНачисления КАК ДвойныеСтроки
	|		ПО ТекущиеИПрежниеНачисления.Ссылка = ДвойныеСтроки.Ссылка
	|			И ТекущиеИПрежниеНачисления.Сотрудник = ДвойныеСтроки.Сотрудник
	|			И ТекущиеИПрежниеНачисления.ВидРасчета = ДвойныеСтроки.ВидРасчета
	|			И ТекущиеИПрежниеНачисления.НомерСтроки < ДвойныеСтроки.НомерСтроки
	|			И НЕ ДвойныеСтроки.Сторно
	|
	|СГРУППИРОВАТЬ ПО
	|	ТекущиеИПрежниеНачисления.ДатаДвижения,
	|	ТекущиеИПрежниеНачисления.Регистратор,
	|	ТекущиеИПрежниеНачисления.ДатаОкончания,
	|	ТекущиеИПрежниеНачисления.ПроизошедшееСобытие,
	|	ТекущиеИПрежниеНачисления.ОрганизацияПодразделения,
	|	ТекущиеИПрежниеНачисления.ДатаНачала,
	|	ТекущиеИПрежниеНачисления.НомерСтроки,
	|	ТекущиеИПрежниеНачисления.Сотрудник,
	|	ТекущиеИПрежниеНачисления.ВидРасчета,
	|	ЕСТЬNULL(Показатели.КоличествоПоказателей, 0),
	|	Показатели.Показатель1Наименование,
	|	Показатели.Показатель2Наименование,
	|	Показатели.Показатель3Наименование,
	|	Показатели.Показатель4Наименование,
	|	Показатели.Показатель5Наименование,
	|	Показатели.Показатель6Наименование,
	|	Показатели.Показатель1ТипПоказателя,
	|	Показатели.Показатель2ТипПоказателя,
	|	Показатели.Показатель3ТипПоказателя,
	|	Показатели.Показатель4ТипПоказателя,
	|	Показатели.Показатель5ТипПоказателя,
	|	Показатели.Показатель6ТипПоказателя,
	|	Показатели.Показатель1ВозможностьИзменения,
	|	Показатели.Показатель2ВозможностьИзменения,
	|	Показатели.Показатель3ВозможностьИзменения,
	|	Показатели.Показатель4ВозможностьИзменения,	
	|	Показатели.Показатель5ВозможностьИзменения,
	|	Показатели.Показатель6ВозможностьИзменения,	
	|	Показатели.Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель1Предопределенный,
	|	Показатели.Показатель2Предопределенный,
	|	Показатели.Показатель3Предопределенный,
	|	Показатели.Показатель4Предопределенный,
	|	Показатели.Показатель5Предопределенный,
	|	Показатели.Показатель6Предопределенный,
	|	ТекущиеИПрежниеНачисления.Действие,
	|	ТекущиеИПрежниеНачисления.ВидРасчета.СпособРасчета,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда, ЛОЖЬ),
	|	ТекущиеИПрежниеНачисления.Показатель1,
	|	ТекущиеИПрежниеНачисления.Показатель2,
	|	ТекущиеИПрежниеНачисления.Показатель3,
	|	ТекущиеИПрежниеНачисления.Показатель4,
	|	ТекущиеИПрежниеНачисления.Показатель5,
	|	ТекущиеИПрежниеНачисления.Показатель6,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд1,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд2,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд3,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд4,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд5,
	|	ТекущиеИПрежниеНачисления.ТарифныйРазряд6,
	|	ТекущиеИПрежниеНачисления.Валюта1,
	|	ТекущиеИПрежниеНачисления.Валюта2,
	|	ТекущиеИПрежниеНачисления.Валюта3,
	|	ТекущиеИПрежниеНачисления.Валюта4,
	|	ТекущиеИПрежниеНачисления.Валюта5,
	|	ТекущиеИПрежниеНачисления.Валюта6,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд1,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд2,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд3,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд4,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд5,
	|	ТекущиеИПрежниеНачисления.ПрежнийТарифныйРазряд6,
	|	ТекущиеИПрежниеНачисления.ПрежнийВидРасчета,
	|	ТекущиеИПрежниеНачисления.ПрежнийПоказатель1,
	|	ТекущиеИПрежниеНачисления.ПрежнийПоказатель2,
	|	ТекущиеИПрежниеНачисления.ПрежнийПоказатель3,
	|	ТекущиеИПрежниеНачисления.ПрежнийПоказатель4,
	|	ТекущиеИПрежниеНачисления.ПрежнийПоказатель5,
	|	ТекущиеИПрежниеНачисления.ПрежнийПоказатель6,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта1,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта2,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта3,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта4,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта5,
	|	ТекущиеИПрежниеНачисления.ПрежняяВалюта6,
	|	ЕСТЬNULL(ТекущиеИПрежниеНачисления.ПрежнийВидРасчета.ТребуетВводаТарифногоРазряда, ЛОЖЬ),
	|	ТекущиеИПрежниеНачисления.Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", Организация);
	Запрос.УстановитьПараметр("НачальнаяДата", '00010101');
	Запрос.УстановитьПараметр("ВалютаРегУчета", мВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ТипПоказателяТарифныйРазряд", Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд);
                                     
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоДопНачисления()

// Формирует запрос по регистру сведений "Коэффициенты индексации заработка"
//
Функция СформироватьЗапросПоКоэффициентамИндексации()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", Организация);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				   |	КадровоеПеремещениеОрганизацийРаботникиОрганизации.Сотрудник КАК Сотрудник,
	               |	КоэффициентыИндексацииПодзапрос.Коэффициент КАК КоэффициентИндексации,
	               |	КоэффициентыИндексацииПодзапрос.Период КАК ДатаИндексации
	               |ИЗ
	               |	Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК КадровоеПеремещениеОрганизацийРаботникиОрганизации
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |			КоэффициентыИндексацииЗаработка.Период КАК Период,
				   |			КоэффициентыИндексацииЗаработка.Сотрудник КАК Сотрудник,
	               |			КоэффициентыИндексацииЗаработка.Коэффициент КАК Коэффициент
	               |		ИЗ
	               |			РегистрСведений.КоэффициентыИндексацииЗаработка КАК КоэффициентыИндексацииЗаработка
	               |		ГДЕ
	               |			КоэффициентыИндексацииЗаработка.Организация = &ГоловнаяОрганизация
	               |			И КоэффициентыИндексацииЗаработка.Регистратор <> &ДокументСсылка) КАК КоэффициентыИндексацииПодзапрос
	               |		ПО КадровоеПеремещениеОрганизацийРаботникиОрганизации.Сотрудник = КоэффициентыИндексацииПодзапрос.Сотрудник
	               |			И КадровоеПеремещениеОрганизацийРаботникиОрганизации.ДатаНачала > КоэффициентыИндексацииПодзапрос.Период
				   |			И (ГОД(КадровоеПеремещениеОрганизацийРаботникиОрганизации.ДатаНачала) * 12 + МЕСЯЦ(КадровоеПеремещениеОрганизацийРаботникиОрганизации.ДатаНачала) - ГОД(КоэффициентыИндексацииПодзапрос.Период) * 12 - МЕСЯЦ(КоэффициентыИндексацииПодзапрос.Период) + 1 <= 12)
	               |ГДЕ
	               |	КадровоеПеремещениеОрганизацийРаботникиОрганизации.Ссылка = &ДокументСсылка
				   |	И НЕ КадровоеПеремещениеОрганизацийРаботникиОрганизации.Сторно
	               |
	               |УПОРЯДОЧИТЬ ПО
				   |	Сотрудник,
	               |	ДатаИндексации УБЫВ
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не указана организация!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "РаботникиОрганизации" документа.
// Если какой-то из реквизтов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса по товарам документа, 
//  Отказ 						- флаг отказа в проведении.
//	Заголовок					- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоСтрокамДокумента, Отказ, Заголовок, УчетнаяПолитикаПоПерсоналуОрганизации)
	
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Сотрудники"": ";

	Если ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ДанныеДляДвиженийКадров" Тогда

		// Организация сотрудника должна совпадать с организацией документа
		Если ВыборкаПоСтрокамДокумента.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "организация документа не соответствует организации, указанной в карточке сотрудника!", Отказ, Заголовок);
		КонецЕсли;
	
		// Сотрудник
		НетСотрудника = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник);
		Если НетСотрудника Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
		КонецЕсли;
		
		// ДатаНачала
		НетДатыНачала = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаНачала);
		Если НетДатыНачала Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указазана дата перемещения!", Отказ, Заголовок);
		КонецЕсли;

		// Подразделение
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указано подразделение, куда переводится сотрудник!", Отказ, Заголовок);
		ИначеЕсли ВыборкаПоСтрокамДокумента.ОшибкаПодразделениеНеПринадлежитОрганизации Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "указано подразделение, принадлежащее другой организации!", Отказ, Заголовок);
		КонецЕсли;

		// Должность
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Должность) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указана должность, на которую переводится сотрудник!", Отказ, Заголовок);
		КонецЕсли;

		// Количество ставок
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ЗанимаемыхСтавок) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указано количество занимаемых сотрудником ставок!", Отказ, Заголовок);
		ИначеЕсли Не НетДатыНачала И УчетнаяПолитикаПоПерсоналуОрганизации.ПроверкаШтатногоРасписания Тогда
			Если ВыборкаПоСтрокамДокумента.ОстатокСтавок < ВыборкаПоСтрокамДокумента.ЗанимаемыхСтавок Тогда
				ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "в штатном расписании не предусмотрены ставки для перевода сотрудника!", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;
 
		// ГрафикРаботы
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ГрафикРаботы)  Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указан рабочий график!", Отказ, Заголовок);
		КонецЕсли;
		
		// ДатаОкончания
		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаОкончания) и ВыборкаПоСтрокамДокумента.ДатаНачала > ВыборкаПоСтрокамДокумента.ДатаОкончания Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "дата начала перемещения не может превышать дату окончания!", Отказ, Заголовок);
		КонецЕсли;

		// Проверка: ранее работник должен быть принят на работу
		Если ВыборкаПоСтрокамДокумента.ПрежняяСтавка = NULL Тогда
			СтрокаПродолжениеСообщенияОбОшибке = "на " + Формат(ВыборкаПоСтрокамДокумента.ДатаНачала, "ДЛФ=DD") + " сотрудник " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " еще не принят на работу!";
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + СтрокаПродолжениеСообщенияОбОшибке, Отказ, Заголовок);
		ИначеЕсли ВыборкаПоСтрокамДокумента.ПрежняяСтавка = 0 Тогда	
			СтрокаПродолжениеСообщенияОбОшибке = "на " + Формат(ВыборкаПоСтрокамДокумента.ДатаНачала, "ДЛФ=DD") + " сотрудник " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " уже уволен (с " + Формат(ВыборкаПоСтрокамДокумента.ДатаПоследнегоДвиженияПоРаботнику, "ДЛФ=DD") + ")!";
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + СтрокаПродолжениеСообщенияОбОшибке, Отказ, Заголовок);
		КонецЕсли; 

		// Проверка: противоречие другой строке документа
		Если ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер <> NULL Тогда
 			СтрокаСообщениеОбОшибке = "одним документом допускается регистрировать только одно перемещение работника - см. строку " + ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер + "!"; 
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщениеОбОшибке, Отказ, Заголовок);
		КонецЕсли;	
		
	ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "КонфликтныйДокумент" Тогда	

		// противоречие другим кадровым приказам
		СтрокаСообщениеОбОшибке = "период действия приказа противоречит кадровому приказу " + Символы.ПС + Символы.Таб + ВыборкаПоСтрокамДокумента.КонфликтныйДокумент + "!"; 
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщениеОбОшибке, Отказ, Заголовок);
	КонецЕсли; 

КонецПроцедуры
	
// Проверяет правильность заполнения реквизитов в строке ТЧ "ОсновныеНачисления" документа.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса, 
//  Отказ 						- флаг отказа в проведении.
//	Заголовок					- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок, УчетнаяПолитикаПоПерсоналуОрганизации)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Основные начисления"": ";

	// Сотрудник
	 НетСотрудника = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник);
	 Если НетСотрудника Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;
	
	// Вид расчета
 	НетВР = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета);
 	Если НетВР И ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указано начисление!", Отказ, Заголовок);
	КонецЕсли;

	// Действие
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Действие) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указано действие!", Отказ, Заголовок);
	КонецЕсли;
		
	Если ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить
	   И ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.НеИзменять Тогда

		ИспользуютсяНачисленияВВалюте			= УчетнаяПолитикаПоПерсоналуОрганизации.ИспользуютсяНачисленияВВалюте;
		ПроведениеРасчетов.ПроверкаПоказателейВПлановыхНачислениях(ВыборкаПоСтрокамДокумента, СтрокаНачалаСообщенияОбОшибке, Истина, Отказ, Заголовок, ИспользуютсяНачисленияВВалюте, СоответствиеВалютныеСпособыРасчета);
		
		// Соответствие размера "основного" начисления штатному расписанию
		Если УчетнаяПолитикаПоПерсоналуОрганизации.ПроверкаШтатногоРасписания И НЕ ВыборкаПоСтрокамДокумента.РазмерСоответствуетШТР 
				И НЕ ВыборкаПоСтрокамДокумента.ТребуетВводаТарифногоРазряда Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "размер основного начисления не соответствует штатному расписанию!", Отказ, Заголовок);
		КонецЕсли;

	КонецЕсли;
	
	// проверка на существование работника в табличной части "РаботникиОрганизации"
	Если ВыборкаПоСтрокамДокумента.ДатаНачала = NULL Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "данный сотрудник не введен в приказ - по нему не могут быть введены начисления!", Отказ, Заголовок);
	ИначеЕсли ВыборкаПоСтрокамДокумента.ДатаНачала = ВыборкаПоСтрокамДокумента.ДатаДвижения
				И ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "на дату "+ ВыборкаПоСтрокамДокумента.ДатаНачала + " изменение начисления уже зарегистрировано документом " + ВыборкаПоСтрокамДокумента.КонфликтныйДокумент + "!", Отказ, Заголовок);
	КонецЕсли;
	
	// Двойные строки
 	Если НЕ НетВР И НЕ НетСотрудника И ВыборкаПоСтрокамДокумента.ДвойнаяСтрока <> NULL Тогда
		Если ВыборкаПоСтрокамДокумента.ОсновноеНачисление Тогда
				СтрокаСообщениеОбОшибке = "основное начисление сотрудника следует редактировать в одной строке (см. строку " + ВыборкаПоСтрокамДокумента.ДвойнаяСтрока + ")!"; 
		Иначе
			СтрокаСообщениеОбОшибке = "сотруднику не может быть назначено одно и тоже начисление дважды (см. строку " + ВыборкаПоСтрокамДокумента.ДвойнаяСтрока + ")!"; 
		КонецЕсли;
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщениеОбОшибке, Отказ, Заголовок);
	КонецЕсли;	
	
	// Двойные строки коэффициентов индексации заработка
	Если ВыборкаПоШапкеДокумента.ИндексацияЗаработка 
			И ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.НеИзменять
			И ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
		// Коэффициент индексации заработка на дату начала
		Если ВыборкаПоСтрокамДокумента.ОшибкаВведеныКоэффициентыИндексацииНаДатуНачала Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "для сотрудника уже введен коэффициент индексации заработка на дату начала!", Отказ, Заголовок);
		КонецЕсли;
		// Коэффициент индексации заработка на дату окончания
		Если ВыборкаПоСтрокамДокумента.ОшибкаВведеныКоэффициентыИндексацииНаДатуОкончания Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "для сотрудника уже введен коэффициент индексации заработка на дату окончания!", Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры		

// Проверяет правильность заполнения реквизитов в строке ТЧ "ДополнительныеНачисления" документа.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса, 
//  Отказ 						- флаг отказа в проведении.
//	Заголовок					- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеСтрокиДопНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок, УчетнаяПолитикаПоПерсоналуОрганизации)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Дополнительные начисления"": ";

	// Сотрудник
	НетСотрудника = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник);
	Если НетСотрудника Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;
	
	// Вид расчета
	НетВР = НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета);
	Если НетВР Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указано начисление!", Отказ, Заголовок);
	КонецЕсли;

	// Действие
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Действие) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указано действие!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить
	   И ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
		
		ИспользуютсяНачисленияВВалюте			= УчетнаяПолитикаПоПерсоналуОрганизации.ИспользуютсяНачисленияВВалюте;
		ПроведениеРасчетов.ПроверкаПоказателейВПлановыхНачислениях(ВыборкаПоСтрокамДокумента, СтрокаНачалаСообщенияОбОшибке, Истина, Отказ, Заголовок, ИспользуютсяНачисленияВВалюте, СоответствиеВалютныеСпособыРасчета);
		
	КонецЕсли;
	
	
	// проверка на существование работника в табличной части "РаботникиОрганизации"
	Если ВыборкаПоСтрокамДокумента.ДатаНачала = NULL Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "данный сотрудник не введен в приказ - по нему не могут быть введены начисления!", Отказ, Заголовок);
	ИначеЕсли ВыборкаПоСтрокамДокумента.ДатаНачала = ВыборкаПоСтрокамДокумента.ДатаДвижения Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "на дату "+ ВыборкаПоСтрокамДокумента.ДатаНачала + " изменение начисления уже зарегистрировано документом " + ВыборкаПоСтрокамДокумента.КонфликтныйДокумент + "!", Отказ, Заголовок);
	КонецЕсли;
	
	// Проверка: противоречие другой строке документа
	Если НЕ НетВР И НЕ НетСотрудника И ВыборкаПоСтрокамДокумента.ДвойнаяСтрока <> NULL Тогда
		СтрокаСообщениеОбОшибке = "по сотруднику не может быть изменено одно и тоже начисление дважды (см. строку " + ВыборкаПоСтрокамДокумента.ДвойнаяСтрока + ")!"; 
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщениеОбОшибке, Отказ, Заголовок);
	КонецЕсли;	
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиДопНачисления()		

// Создает и заполняет структуру, содержащую имена регистров сведений 
//  по которым надо проводить документ
//
// Параметры: 
//  СтруктураПроведенияПоРегистрамСведений - структура, содержащая имена регистров сведений 
//                                           по которым надо проводить документ
//
// Возвращаемое значение:
//  Нет.
//
Процедура ЗаполнитьСтруктуруПроведенияПоРегистрамСведений(СтруктураПроведенияПоРегистрамСведений)

	СтруктураПроведенияПоРегистрамСведений = Новый Структура();
	
	СтруктураПроведенияПоРегистрамСведений.Вставить("РаботникиОрганизаций");
	СтруктураПроведенияПоРегистрамСведений.Вставить("НамеченныеСобытияПоПерсоналуОрганизаций");
	СтруктураПроведенияПоРегистрамСведений.Вставить("ПлановыеНачисленияРаботниковОрганизаций");

КонецПроцедуры // ЗаполнитьСтруктуруПроведенияПоРегистрамСведений

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                - выборка из результата запроса по шапке документа,
//  СтруктураПроведенияПоРегистрамСведений - структура, содержащая имена регистров 
//                                           сведений по которым надо проводить документ,
//  СтруктураПараметров                    - структура параметров проведения,
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента,    ВыборкаПоСтрокамДокумента,  
	СтруктураПроведенияПоРегистрамСведений, СтруктураПараметров = "", УчетнаяПолитикаПоПерсоналуОрганизации)

	Если ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ДанныеДляДвиженийКадров" Тогда
		
		// Если документ нужно проводить по регистру, то для него есть ключ в структуре
		ИмяРегистра = "РаботникиОрганизаций";
		Если СтруктураПроведенияПоРегистрамСведений.Свойство(ИмяРегистра) Тогда
			
			// отразим новое место работы
			Движение = Движения[ИмяРегистра].Добавить();
			
			// Свойства
			Движение.Период                     = ВыборкаПоСтрокамДокумента.ДатаНачала;
			
			// Измерения
			Движение.Сотрудник                    = ВыборкаПоСтрокамДокумента.Сотрудник;
			Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
			
			// Ресурсы
			Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
			Движение.Должность                  = ВыборкаПоСтрокамДокумента.Должность;
			Движение.ТарифныйРазряд             = ВыборкаПоСтрокамДокумента.ТарифныйРазряд;
			Движение.ЗанимаемыхСтавок           = ВыборкаПоСтрокамДокумента.ЗанимаемыхСтавок;
			Движение.ГрафикРаботы				= ВыборкаПоСтрокамДокумента.ГрафикРаботы;
			Если мОрганизацияЯвляетсяВкладчикомОППВ Тогда
				Движение.ИсчислятьОППВ				= ВыборкаПоСтрокамДокумента.ИсчислятьОППВ;
			КонецЕсли;
						
			// Реквизиты
			Движение.ПричинаИзмененияСостояния  = Перечисления.ПричиныИзмененияСостояния.Перемещение;
			Движение.ОбособленноеПодразделение  = ВыборкаПоСтрокамДокумента.ОрганизацияПодразделения;
			Движение.СтатьяЗаконаОТрудеРК		= ВыборкаПоСтрокамДокумента.СтатьяЗаконаОТрудеРК;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаОкончания) Тогда
			
			Если ВыборкаПоСтрокамДокумента.ПроизошедшееСобытие Тогда
				
				ИмяРегистра = "РаботникиОрганизаций";
				Если СтруктураПроведенияПоРегистрамСведений.Свойство(ИмяРегистра) Тогда
					
					// вернем прежние данные по прежнему месту работы
					Движение = Движения[ИмяРегистра].Добавить();
					
					// Свойства
					Движение.Период                     = ВыборкаПоСтрокамДокумента.ДатаОкончания + мДлинаСуток;
					
					// Измерения
					Движение.Сотрудник                  = ВыборкаПоСтрокамДокумента.Сотрудник;
					Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
					
					// Ресурсы
					Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПрежнееПодразделение;
					Движение.Должность                  = ВыборкаПоСтрокамДокумента.ПрежняяДолжность;
					Движение.ТарифныйРазряд             = ВыборкаПоСтрокамДокумента.ПрежнийТарифныйРазряд;
					Движение.ЗанимаемыхСтавок           = ВыборкаПоСтрокамДокумента.ПрежняяСтавка;
					Движение.ГрафикРаботы				= ВыборкаПоСтрокамДокумента.ПрежнийГрафикРаботы;
					Движение.ИсчислятьОППВ				= ВыборкаПоСтрокамДокумента.ПрежнееЗначениеИсчислятьОППВ;
					
					// Реквизиты
					Движение.ПричинаИзмененияСостояния  = Перечисления.ПричиныИзмененияСостояния.Перемещение;
					Движение.ОбособленноеПодразделение  = ВыборкаПоСтрокамДокумента.ПрежняяОрганизация;
					Движение.СтатьяЗаконаОТрудеРК		= ВыборкаПоСтрокамДокумента.СтатьяЗаконаОТрудеРК;
					
				КонецЕсли;
				
			Иначе
				
				ИмяРегистра = "НамеченныеСобытияПоПерсоналуОрганизаций";
				Если СтруктураПроведенияПоРегистрамСведений.Свойство(ИмяРегистра) Тогда
					
					Движение = Движения[ИмяРегистра].Добавить();
					
					// Свойства
					Движение.Период                     = ВыборкаПоСтрокамДокумента.ДатаОкончания + мДлинаСуток;
					
					// Измерения
					Движение.Сотрудник                    = ВыборкаПоСтрокамДокумента.Сотрудник;
					Движение.Организация                = ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
					Движение.ДатаИзменения              = ВыборкаПоСтрокамДокумента.ДатаОкончания + мДлинаСуток;
					Движение.ПланируемоеСобытие         = Перечисления.НамеченныеСобытияПоПерсоналуОрганизаций.Перемещение;
					
					// Ресурсы
					Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПрежнееПодразделение;
					Движение.Должность                  = ВыборкаПоСтрокамДокумента.ПрежняяДолжность;
					Движение.ТарифныйРазряд             = ВыборкаПоСтрокамДокумента.ПрежнийТарифныйРазряд;
					Движение.ГрафикРаботы				= ВыборкаПоСтрокамДокумента.ПрежнийГрафикРаботы;
					Движение.ЗанимаемыхСтавок           = ВыборкаПоСтрокамДокумента.ПрежняяСтавка;
					Движение.ЗаниматьСтавку             = Истина;
					
					// Реквизиты
					Движение.СтатьяЗаконаОТрудеРК		= ВыборкаПоСтрокамДокумента.СтатьяЗаконаОТрудеРК;
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамСведений()

// Добавляет строки движений по основным плановым начислениям
//
Процедура ДобавитьСтрокуВДвиженияПоНачислениям(ВыборкаПоШапкеДокумента, ВыборкаСтрокЗапроса, УчетнаяПолитикаПоПерсоналуОрганизации, ТаблицаКоэффициентовИндексации)
	
	Если ВыборкаСтрокЗапроса.Действие = Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
		Возврат;
	КонецЕсли;
	
	Движение = Движения.ПлановыеНачисленияРаботниковОрганизаций.Добавить();
	
	// Свойства
	Движение.Период                     = ВыборкаСтрокЗапроса.ДатаНачала;
	
	// Измерения
	Движение.Сотрудник                    = ВыборкаСтрокЗапроса.Сотрудник;
	Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Если НЕ ВыборкаСтрокЗапроса.ОсновноеНачисление Тогда
		Движение.ВидРасчетаИзмерение    = ВыборкаСтрокЗапроса.ВидРасчета;
	КонецЕсли;
	
	// Ресурсы
	Движение.Действие			= ВыборкаСтрокЗапроса.Действие;
	Движение.ВидРасчета			= ВыборкаСтрокЗапроса.ВидРасчета;
	Если ВыборкаСтрокЗапроса.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
		Движение.ТарифныйРазряд1 = ВыборкаСтрокЗапроса.ТарифныйРазряд1;
		Движение.ТарифныйРазряд2 = ВыборкаСтрокЗапроса.ТарифныйРазряд2;
		Движение.ТарифныйРазряд3 = ВыборкаСтрокЗапроса.ТарифныйРазряд3;
		Движение.ТарифныйРазряд4 = ВыборкаСтрокЗапроса.ТарифныйРазряд4;
		Движение.ТарифныйРазряд5 = ВыборкаСтрокЗапроса.ТарифныйРазряд5;
		Движение.ТарифныйРазряд6 = ВыборкаСтрокЗапроса.ТарифныйРазряд6;
		Движение.Показатель1 = ВыборкаСтрокЗапроса.Показатель1;
		Движение.Показатель2 = ВыборкаСтрокЗапроса.Показатель2;
		Движение.Показатель3 = ВыборкаСтрокЗапроса.Показатель3;
		Движение.Показатель4 = ВыборкаСтрокЗапроса.Показатель4;
		Движение.Показатель5 = ВыборкаСтрокЗапроса.Показатель5;
		Движение.Показатель6 = ВыборкаСтрокЗапроса.Показатель6;
		Движение.Валюта1     = ВыборкаСтрокЗапроса.Валюта1;
		Движение.Валюта2     = ВыборкаСтрокЗапроса.Валюта2;
		Движение.Валюта3     = ВыборкаСтрокЗапроса.Валюта3;
		Движение.Валюта4     = ВыборкаСтрокЗапроса.Валюта4;
		Движение.Валюта5     = ВыборкаСтрокЗапроса.Валюта6;
		Движение.Валюта6     = ВыборкаСтрокЗапроса.Валюта6;
	КонецЕсли;
	
	// Движения на дату завершения
	Если ЗначениеЗаполнено(ВыборкаСтрокЗапроса.ДатаОкончания) И ВыборкаСтрокЗапроса.ПроизошедшееСобытие Тогда
		// Ресурсы
		Движение.ПериодЗавершения		= ВыборкаСтрокЗапроса.ДатаОкончания;
		Если ВыборкаСтрокЗапроса.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда	
			Движение.ДействиеЗавершения	= Перечисления.ВидыДействияСНачислением.Начать
		ИначеЕсли ВыборкаСтрокЗапроса.Действие = Перечисления.ВидыДействияСНачислением.Начать Тогда	
			Движение.ДействиеЗавершения	= Перечисления.ВидыДействияСНачислением.Прекратить
		Иначе	
			Движение.ДействиеЗавершения	= ВыборкаСтрокЗапроса.Действие;
		КонецЕсли;
		Движение.ВидРасчетаЗавершения   = ВыборкаСтрокЗапроса.ПрежнийВидРасчета;
		Если Движение.ДействиеЗавершения <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
			Движение.ТарифныйРазряд1Завершения = ВыборкаСтрокЗапроса.ПрежнийТарифныйРазряд1;
			Движение.ТарифныйРазряд2Завершения = ВыборкаСтрокЗапроса.ПрежнийТарифныйРазряд2;
			Движение.ТарифныйРазряд3Завершения = ВыборкаСтрокЗапроса.ПрежнийТарифныйРазряд3;
			Движение.ТарифныйРазряд4Завершения = ВыборкаСтрокЗапроса.ПрежнийТарифныйРазряд4;
			Движение.ТарифныйРазряд5Завершения = ВыборкаСтрокЗапроса.ПрежнийТарифныйРазряд5;
			Движение.ТарифныйРазряд6Завершения = ВыборкаСтрокЗапроса.ПрежнийТарифныйРазряд6;
			Движение.Показатель1Завершения     = ВыборкаСтрокЗапроса.ПрежнийПоказатель1;
			Движение.Показатель2Завершения     = ВыборкаСтрокЗапроса.ПрежнийПоказатель2;
			Движение.Показатель3Завершения     = ВыборкаСтрокЗапроса.ПрежнийПоказатель3;
			Движение.Показатель4Завершения     = ВыборкаСтрокЗапроса.ПрежнийПоказатель4;
			Движение.Показатель5Завершения     = ВыборкаСтрокЗапроса.ПрежнийПоказатель5;
			Движение.Показатель6Завершения     = ВыборкаСтрокЗапроса.ПрежнийПоказатель6;
			Движение.Валюта1Завершения         = ВыборкаСтрокЗапроса.ПрежняяВалюта1;
			Движение.Валюта2Завершения         = ВыборкаСтрокЗапроса.ПрежняяВалюта2;
			Движение.Валюта3Завершения         = ВыборкаСтрокЗапроса.ПрежняяВалюта3;
			Движение.Валюта4Завершения         = ВыборкаСтрокЗапроса.ПрежняяВалюта4;
			Движение.Валюта5Завершения         = ВыборкаСтрокЗапроса.ПрежняяВалюта6;
			Движение.Валюта6Завершения         = ВыборкаСтрокЗапроса.ПрежняяВалюта5;
		КонецЕсли;
		
    КонецЕсли;

	// Движения по регистру "КоэффициентыИндексацииЗаработка" - отразим факт индексации заработка
	Если ВыборкаСтрокЗапроса.ОсновноеНачисление Тогда
		
		ПрежнийПоказатель1 = ПересчитатьРазмер(ВыборкаСтрокЗапроса, Истина);
		
		Показатель1ДляКоэффициентаИндексации = ВыборкаСтрокЗапроса.Показатель1ДляКоэффициентаИндексации;
		Если ПроведениеРасчетов.ЭтоРасчетПоМинимальнойЗаработнойПлате(ВыборкаСтрокЗапроса.СпособРасчета) Тогда
			Показатель1ДляКоэффициентаИндексации = Показатель1ДляКоэффициентаИндексации * ВыборкаСтрокЗапроса.ТекущийРазмерМЗП;
		КонецЕсли;
	
		Если ПрежнийПоказатель1 > 0 И Показатель1ДляКоэффициентаИндексации <> ПрежнийПоказатель1 Тогда
			КоэффициентНаДатуНачала = Показатель1ДляКоэффициентаИндексации / ПрежнийПоказатель1;
		Иначе 
			КоэффициентНаДатуНачала = 1;
		КонецЕсли;
		
		Если ВыборкаПоШапкеДокумента.ИндексацияЗаработка и КоэффициентНаДатуНачала <> 1 Тогда 
			Движение = Движения.КоэффициентыИндексацииЗаработка.Добавить();
			
			// Свойства
			Движение.Период                     = ВыборкаСтрокЗапроса.ДатаНачала;
						
			// Измерения
			Движение.Сотрудник                    = ВыборкаСтрокЗапроса.Сотрудник;
			Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
			Движение.ДатаИндексации				= ВыборкаСтрокЗапроса.ДатаНачала;
			
			// Ресурсы
			Движение.Коэффициент				= КоэффициентНаДатуНачала;
			Движение.КоэффициентИндексации		= КоэффициентНаДатуНачала;
			
			// Установим значения на прошедшие месяцы
			Если КоэффициентНаДатуНачала > 1 Тогда
				СтруктураОтбора = Новый Структура;
				СтруктураОтбора.Вставить("Сотрудник", ВыборкаСтрокЗапроса.Сотрудник);
				ТаблицаКоэффициентовПоФизЛицу = ТаблицаКоэффициентовИндексации.Скопировать(ТаблицаКоэффициентовИндексации.НайтиСтроки(СтруктураОтбора));
				ТаблицаКоэффициентовПоФизЛицу.Сортировать("ДатаИндексации Убыв");
				// Расчет размера коэффициента индексации нарастающим итогом
				КоэффициентИндексации = КоэффициентНаДатуНачала;
				Для Каждого СтрокаИндексации Из ТаблицаКоэффициентовПоФизЛицу Цикл
					КоэффициентИндексации 				= КоэффициентИндексации * СтрокаИндексации.КоэффициентИндексации;
					
					Движение 							= Движения.КоэффициентыИндексацииЗаработка.Добавить();
					
					// Свойства
					Движение.Период                     = ВыборкаСтрокЗапроса.ДатаНачала;
					
					// Измерения
					Движение.Сотрудник                  = ВыборкаСтрокЗапроса.Сотрудник;
					Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
					Движение.ДатаИндексации				= СтрокаИндексации.ДатаИндексации;
					
					// Ресурсы
					Движение.Коэффициент				= КоэффициентНаДатуНачала;
					Движение.КоэффициентИндексации		= КоэффициентИндексации;
					
				КонецЦикла;
			КонецЕсли;
			
		ИначеЕсли КоэффициентНаДатуНачала <> 1 Тогда
			
			Сообщить("В документе не установлен признак ""Индексация заработка"". Изменение размера основного начисления у сотрудника " + ВыборкаСтрокЗапроса.Сотрудник + " не будет учитываться при расчете среднего заработка.", СтатусСообщения.Важное);
			
		КонецЕсли;
	КонецЕсли;
	
	// Движения на дату завершения
	Если ЗначениеЗаполнено(ВыборкаСтрокЗапроса.ДатаОкончания) И ВыборкаСтрокЗапроса.ПроизошедшееСобытие Тогда
		// Движения по регистру "КоэффициентыИндексацииЗаработка" - отразим факт индексации заработка
		Если ВыборкаСтрокЗапроса.ОсновноеНачисление Тогда
			
			Показатель1 = ПересчитатьРазмер(ВыборкаСтрокЗапроса, Ложь);
		
			ПрежнийПоказатель1ДляКоэффициентаИндексации = ВыборкаСтрокЗапроса.ПрежнийПоказатель1ДляКоэффициентаИндексации;
			Если ПроведениеРасчетов.ЭтоРасчетПоМинимальнойЗаработнойПлате(ВыборкаСтрокЗапроса.ПрежнийСпособРасчета) Тогда
				ПрежнийПоказатель1ДляКоэффициентаИндексации = ПрежнийПоказатель1ДляКоэффициентаИндексации * ВыборкаСтрокЗапроса.ПрежнийРазмерМЗП;
			КонецЕсли;	
		
			Если Показатель1 > 0 И ПрежнийПоказатель1ДляКоэффициентаИндексации <> Показатель1 Тогда
				КоэффициентНаДатуОкончания = ПрежнийПоказатель1ДляКоэффициентаИндексации / Показатель1;
			Иначе
				КоэффициентНаДатуОкончания = 1;
			КонецЕсли;
							
			Если ВыборкаПоШапкеДокумента.ИндексацияЗаработка и КоэффициентНаДатуОкончания <> 1 Тогда	
				Движение = Движения.КоэффициентыИндексацииЗаработка.Добавить();
				
				// Свойства
				Движение.Период                     = ВыборкаСтрокЗапроса.ДатаОкончания + мДлинаСуток;
				
				// Измерения
				Движение.Сотрудник                    = ВыборкаСтрокЗапроса.Сотрудник;
				Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
				Движение.ДатаИндексации				= ВыборкаСтрокЗапроса.ДатаОкончания + мДлинаСуток;
				
				// Ресурсы
				Движение.Коэффициент				= КоэффициентНаДатуОкончания;
				Движение.КоэффициентИндексации		= КоэффициентНаДатуОкончания;
				
				// Расчет размера коэффициента индексации нарастающим итогом
				Если КоэффициентНаДатуОкончания > 1 Тогда
					
					КоэффициентИндексации 				= КоэффициентНаДатуОкончания * КоэффициентНаДатуНачала;
					
					// Движения на Дату начала перемещения
					Движение 							= Движения.КоэффициентыИндексацииЗаработка.Добавить();
					
					// Свойства
					Движение.Период                     = ВыборкаСтрокЗапроса.ДатаОкончания + мДлинаСуток;
					
					// Измерения
					Движение.Сотрудник                  = ВыборкаСтрокЗапроса.Сотрудник;
					Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
					Движение.ДатаИндексации				= ВыборкаСтрокЗапроса.ДатаНачала;
					
					// Ресурсы
					Движение.Коэффициент				= КоэффициентНаДатуОкончания;
					Движение.КоэффициентИндексации		= КоэффициентИндексации;
					
					// Значения на прошлые месяцы
					СтруктураОтбора = Новый Структура;
					СтруктураОтбора.Вставить("Сотрудник", ВыборкаСтрокЗапроса.Сотрудник);
					ТаблицаКоэффициентовПоФизЛицу = ТаблицаКоэффициентовИндексации.Скопировать(ТаблицаКоэффициентовИндексации.НайтиСтроки(СтруктураОтбора));
					ТаблицаКоэффициентовПоФизЛицу.Сортировать("ДатаИндексации Убыв");
					
					Для Каждого СтрокаИндексации Из ТаблицаКоэффициентовПоФизЛицу Цикл
						КоэффициентИндексации 				= КоэффициентИндексации * СтрокаИндексации.КоэффициентИндексации;
						
						Движение 							= Движения.КоэффициентыИндексацииЗаработка.Добавить();
						
						// Свойства
						Движение.Период                     = ВыборкаСтрокЗапроса.ДатаОкончания + мДлинаСуток;
						
						// Измерения
						Движение.Сотрудник                    = ВыборкаСтрокЗапроса.Сотрудник;
						Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
						Движение.ДатаИндексации				= СтрокаИндексации.ДатаИндексации;
						
						// Ресурсы
						Движение.Коэффициент				= КоэффициентНаДатуОкончания;
						Движение.КоэффициентИндексации		= КоэффициентИндексации;
						
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
			
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоНачислениям()

// Добавляет строки движений по основным плановым начислениям
//
Процедура ДобавитьСтрокуВДвиженияПоДопНачислениям(ВыборкаПоШапкеДокумента, ВыборкаСтрокЗапроса, УчетнаяПолитикаПоПерсоналуОрганизации)
	
	Если ВыборкаСтрокЗапроса.Действие = Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
		Возврат;
	КонецЕсли;
	
	Движение = Движения.ПлановыеНачисленияРаботниковОрганизаций.Добавить();
	
 	ПустойВидРасчета = ПланыВидовРасчета.ДополнительныеНачисленияОрганизаций.ПустаяСсылка();

	// Свойства
	Движение.Период                     = ВыборкаСтрокЗапроса.ДатаНачала;
	
	// Измерения
	Движение.Сотрудник                    = ВыборкаСтрокЗапроса.Сотрудник;
	Движение.Организация				  = ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Движение.ВидРасчетаИзмерение          = ВыборкаСтрокЗапроса.ВидРасчета;

	// Ресурсы
	Движение.Действие			= ВыборкаСтрокЗапроса.Действие;
	Если ВыборкаСтрокЗапроса.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
		Движение.ТарифныйРазряд1	= ВыборкаСтрокЗапроса.ТарифныйРазряд1;
		Движение.ТарифныйРазряд2	= ВыборкаСтрокЗапроса.ТарифныйРазряд2;
		Движение.ТарифныйРазряд3	= ВыборкаСтрокЗапроса.ТарифныйРазряд3;
		Движение.ТарифныйРазряд4	= ВыборкаСтрокЗапроса.ТарифныйРазряд4;
		Движение.ТарифныйРазряд5	= ВыборкаСтрокЗапроса.ТарифныйРазряд5;
		Движение.ТарифныйРазряд6	= ВыборкаСтрокЗапроса.ТарифныйРазряд6;
		Движение.Показатель1		= ВыборкаСтрокЗапроса.Показатель1;
		Движение.Показатель2		= ВыборкаСтрокЗапроса.Показатель2;
		Движение.Показатель3		= ВыборкаСтрокЗапроса.Показатель3;
		Движение.Показатель4		= ВыборкаСтрокЗапроса.Показатель4;
		Движение.Показатель5		= ВыборкаСтрокЗапроса.Показатель5;
		Движение.Показатель6		= ВыборкаСтрокЗапроса.Показатель6;
		Движение.Валюта1			= ВыборкаСтрокЗапроса.Валюта1;
		Движение.Валюта2			= ВыборкаСтрокЗапроса.Валюта2;
		Движение.Валюта3			= ВыборкаСтрокЗапроса.Валюта3;
		Движение.Валюта4			= ВыборкаСтрокЗапроса.Валюта4;
		Движение.Валюта5			= ВыборкаСтрокЗапроса.Валюта5;
		Движение.Валюта6			= ВыборкаСтрокЗапроса.Валюта6;
	КонецЕсли;
	Движение.ВидРасчета					= ВыборкаСтрокЗапроса.ВидРасчета;

    // Движения на дату завершения
    Если ЗначениеЗаполнено(ВыборкаСтрокЗапроса.ДатаОкончания) И ВыборкаСтрокЗапроса.ПроизошедшееСобытие Тогда
		// Ресурсы
		Движение.ПериодЗавершения			= ВыборкаСтрокЗапроса.ДатаОкончания;
		Если ВыборкаСтрокЗапроса.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда	
			Движение.ДействиеЗавершения	= Перечисления.ВидыДействияСНачислением.Начать
		ИначеЕсли ВыборкаСтрокЗапроса.Действие = Перечисления.ВидыДействияСНачислением.Начать Тогда	
			Движение.ДействиеЗавершения	= Перечисления.ВидыДействияСНачислением.Прекратить
		Иначе	
			Движение.ДействиеЗавершения	= ВыборкаСтрокЗапроса.Действие;
		КонецЕсли;
		Движение.ВидРасчетаЗавершения   = ВыборкаСтрокЗапроса.ПрежнийВидРасчета;
		Если Движение.ДействиеЗавершения <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
			Движение.ТарифныйРазряд1Завершения = ВыборкаСтрокЗапроса.ПрежнийТарифныйРазряд1;
			Движение.ТарифныйРазряд2Завершения = ВыборкаСтрокЗапроса.ПрежнийТарифныйРазряд2;
			Движение.ТарифныйРазряд3Завершения = ВыборкаСтрокЗапроса.ПрежнийТарифныйРазряд3;
			Движение.ТарифныйРазряд4Завершения = ВыборкаСтрокЗапроса.ПрежнийТарифныйРазряд4;
			Движение.ТарифныйРазряд5Завершения = ВыборкаСтрокЗапроса.ПрежнийТарифныйРазряд5;
			Движение.ТарифныйРазряд6Завершения = ВыборкаСтрокЗапроса.ПрежнийТарифныйРазряд6;			
			Движение.Показатель1Завершения	= ВыборкаСтрокЗапроса.ПрежнийПоказатель1;
			Движение.Показатель2Завершения	= ВыборкаСтрокЗапроса.ПрежнийПоказатель2;
			Движение.Показатель3Завершения	= ВыборкаСтрокЗапроса.ПрежнийПоказатель3;
			Движение.Показатель4Завершения	= ВыборкаСтрокЗапроса.ПрежнийПоказатель4;
			Движение.Показатель5Завершения	= ВыборкаСтрокЗапроса.ПрежнийПоказатель5;
			Движение.Показатель6Завершения	= ВыборкаСтрокЗапроса.ПрежнийПоказатель6;
			Движение.Валюта1Завершения		= ВыборкаСтрокЗапроса.ПрежняяВалюта1;
			Движение.Валюта2Завершения		= ВыборкаСтрокЗапроса.ПрежняяВалюта2;
			Движение.Валюта3Завершения		= ВыборкаСтрокЗапроса.ПрежняяВалюта3;
			Движение.Валюта4Завершения		= ВыборкаСтрокЗапроса.ПрежняяВалюта4;
			Движение.Валюта5Завершения		= ВыборкаСтрокЗапроса.ПрежняяВалюта5;
			Движение.Валюта6Завершения		= ВыборкаСтрокЗапроса.ПрежняяВалюта6;
		КонецЕсли;
		
    КонецЕсли;

КонецПроцедуры // ДобавитьСтрокуВДвиженияПоДопНачислениям()

// Создает и заполняет структуру, содержащую имена регистров накопления
// документа. В дальнейшем движения заносятся только по тем регистрам накопления, для которых в 
// данной процедуре заданы ключи
//
// Параметры: 
//  СтруктураПроведенияПоРегистрамНакопления - структура, содержащая имена регистров 
//                                             накопления по которым надо проводить документ
//
// Возвращаемое значение:
//  Нет.
//
Процедура ЗаполнитьСтруктуруПроведенияПоРегистрамНакопления(СтруктураПроведенияПоРегистрамНакопления)

	СтруктураПроведенияПоРегистрамНакопления = Новый Структура();
	СтруктураПроведенияПоРегистрамНакопления.Вставить("ЗанятыеШтатныеЕдиницыОрганизаций");

КонецПроцедуры // ЗаполнитьСтруктуруПроведенияПоРегистрамНакопления

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                  - выборка из результата запроса по шапке документа
//  СтруктураПроведенияПоРегистрамНакопления - структура, содержащая имена регистров 
//                                             накопления по которым надо проводить документ
//  СтруктураПараметров                      - структура параметров проведения.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента,ВыборкаПоСтрокамДокумента,  
	СтруктураПроведенияПоРегистрамНакопления, СтруктураПараметров = "")
	
	Если ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ДанныеДляДвиженийКадров" Тогда
		
		// Если документ нужно проводить по регистру, то для него есть ключ в структуре
		ИмяРегистра = "ЗанятыеШтатныеЕдиницыОрганизаций";
		Если СтруктураПроведенияПоРегистрамНакопления.Свойство(ИмяРегистра) Тогда
			
			ПрежняяСтавка         = ВыборкаПоСтрокамДокумента.ПрежняяСтавка;
			ПрежнееПодразделение  = ВыборкаПоСтрокамДокумента.ПрежнееПодразделение; 
			ПрежняяДолжность      = ВыборкаПоСтрокамДокумента.ПрежняяДолжность;
			ПрежнийТарифныйРазряд = ВыборкаПоСтрокамДокумента.ПрежнийТарифныйРазряд;
			
			// по прежнему месту работы освободим занимаемые ранее ставки
			Движение = Движения[ИмяРегистра].Добавить();
			
			// Свойства
			Движение.Период                 = ВыборкаПоСтрокамДокумента.ДатаНачала;
			Движение.ВидДвижения			= ВидДвиженияНакопления.Расход;
			
			// Измерения
			Движение.ПодразделениеОрганизации	= ПрежнееПодразделение;
			Движение.Должность                  = ПрежняяДолжность;
			Движение.ТарифныйРазряд     		= ПрежнийТарифныйРазряд;
			
			// Ресурсы
			Движение.КоличествоСтавок  	        = ПрежняяСтавка; 
			
			// Реквизиты
			Движение.Сотрудник					= ВыборкаПоСтрокамДокумента.Сотрудник; 
			
			// по новому месту работы займем указанные ставки
			Движение = Движения[ИмяРегистра].Добавить();
			
			// Свойства
			Движение.Период                = ВыборкаПоСтрокамДокумента.ДатаНачала;
			Движение.ВидДвижения		   = ВидДвиженияНакопления.Приход;
				
			// Измерения
			Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
			Движение.Должность                  = ВыборкаПоСтрокамДокумента.Должность;
			Движение.ТарифныйРазряд             = ВыборкаПоСтрокамДокумента.ТарифныйРазряд;
			
			// Ресурсы
			Движение.КоличествоСтавок     		= ВыборкаПоСтрокамДокумента.ЗанимаемыхСтавок;
			
			// Реквизиты
			Движение.Сотрудник					= ВыборкаПоСтрокамДокумента.Сотрудник; 
			
			Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаОкончания)
				И ВыборкаПоСтрокамДокумента.ПроизошедшееСобытие Тогда
				
				// по прежнему месту работы займем временно освобожденные ставки
				Движение = Движения[ИмяРегистра].Добавить();
				
				// Свойства
				Движение.Период                = ВыборкаПоСтрокамДокумента.ДатаОкончания + мДлинаСуток;
				Движение.ВидДвижения		   = ВидДвиженияНакопления.Приход;
				
				// Измерения
				Движение.ПодразделениеОрганизации	= ПрежнееПодразделение;
				Движение.Должность            	    = ПрежняяДолжность;
				Движение.ТарифныйРазряд             = ПрежнийТарифныйРазряд;
				
				// Ресурсы
				Движение.КоличествоСтавок      		= ПрежняяСтавка; 
				
				// Реквизиты
				Движение.Сотрудник					= ВыборкаПоСтрокамДокумента.Сотрудник; 

				
				// по новому месту работы освободим временно занимавшиеся ставки
				Движение = Движения[ИмяРегистра].Добавить();
				
				// Свойства
				Движение.Период                = ВыборкаПоСтрокамДокумента.ДатаОкончания + мДлинаСуток;
				Движение.ВидДвижения		   = ВидДвиженияНакопления.Расход;
				
				// Измерения
				Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
				Движение.Должность                  = ВыборкаПоСтрокамДокумента.Должность;
				Движение.ТарифныйРазряд             = ВыборкаПоСтрокамДокумента.ТарифныйРазряд;
				
				// Ресурсы
				Движение.КоличествоСтавок     		= ВыборкаПоСтрокамДокумента.ЗанимаемыхСтавок; 
				
				// Реквизиты
				Движение.Сотрудник					= ВыборкаПоСтрокамДокумента.Сотрудник; 
				
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли; 		  
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамНакопления()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ПриУстановкеНовогоНомера"
//
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)

	ОбщегоНазначения.ДобавитьПрефиксОрганизации(ЭтотОбъект, Префикс);
	ОбщегоНазначения.ДобавитьПрефиксУзла(Префикс);

	// получить новый номер документа по совокупности кадровых документов
	ПроцедурыУправленияПерсоналом.ПриУстановкеНовогоНомераКадровогоДокумента(СтандартнаяОбработка, глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, Номер, Префикс, Дата);

КонецПроцедуры // ПриУстановкеНовогоНомера()

// Процедура - обработчик события "ПередЗаписью"
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(РаботникиОрганизации);

	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ);
	
	// Механизм исправлений
	ПроведениеРасчетов.ИсправлениеКадровогоДокументаПередЗаписью(Отказ, РежимЗаписи, РежимПроведения, ЭтотОбъект, мВосстанавливатьДвижения, мИсправляемыйДокумент, мСоответствиеДвижений);
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ПриЗаписи"
//
Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Механизм исправлений
	ПроведениеРасчетов.ИсправлениеКадровогоДокументаПриЗаписи(Отказ, мВосстанавливатьДвижения, мИсправляемыйДокумент, мСоответствиеДвижений);

КонецПроцедуры // ПриЗаписи()

// Процедура - обработчик события "ОбработкаЗаполнения"
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СотрудникиОрганизаций.Ссылка КАК Сотрудник,
		|	СотрудникиОрганизаций.Физлицо,
		|	СотрудникиОрганизаций.Организация,
		|	СотрудникиОрганизаций.ТекущаяСтруктурнаяЕдиница КАК ОбособленноеПодразделениеОткуда,
		|	СотрудникиОрганизаций.ВидДоговора
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|ГДЕ
		|	СотрудникиОрганизаций.Ссылка = &Сотрудник";
		Запрос.УстановитьПараметр("Сотрудник",	ДанныеЗаполнения);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если НЕ Выборка.Следующий() Тогда
			Возврат;
		КонецЕсли;
		
		Если Выборка.ВидДоговора = Перечисления.ВидыДоговоровСФизЛицами.Подряда
			ИЛИ Выборка.ВидДоговора = Перечисления.ВидыДоговоровСФизЛицами.Авторский
				ИЛИ Выборка.ВидДоговора = Перечисления.ВидыДоговоровСФизЛицами.Лицензионный Тогда
			Возврат;
		КонецЕсли;
		
		Организация = Выборка.Организация;
		ОбособленноеПодразделениеОткуда = Выборка.ОбособленноеПодразделениеОткуда;		
		ОбособленноеПодразделениеКуда = Выборка.ОбособленноеПодразделениеОткуда;		

		Запрос.УстановитьПараметр("ДатаДокумента", ОбщегоНазначения.ПолучитьРабочуюДату());
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РаботникиОрганизации.Сотрудник,
		|	РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	РаботникиОрганизации.Должность КАК Должность,
		|	РаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,
		|	РаботникиОрганизации.ИсчислятьОППВ КАК ИсчислятьОППВ,
		|	РаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаДокумента, Сотрудник = &Сотрудник) КАК РаботникиОрганизации";
		
		НоваяСтрока = РаботникиОрганизации.Добавить();
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Иначе
			НоваяСтрока.Сотрудник = ДанныеЗаполнения;
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеЗаполнения);
		КонецЕсли;
		
		НоваяСтрока.ДатаНачала = ОбщегоНазначения.ПолучитьРабочуюДату();
		ДобавитьНачисленияПоСтроке(НоваяСтрока);
		
	КонецЕсли;
	
	ДокументОснование = ДанныеЗаполнения;
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, Режим)

	//структура, содержащая имена регистров накопления по которым надо проводить документ
	Перем СтруктураПроведенияПоРегистрамНакопления;

	//структура, содержащая имена регистров сведений по которым надо проводить документ
	Перем СтруктураПроведенияПоРегистрамСведений;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);

	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект) Тогда
		Возврат
	КонецЕсли;

	СоответствиеВалютныеСпособыРасчета = ПроведениеРасчетов.ПолучитьСоответствиеСпособовРасчетаТребующихВалюту();
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	УчетнаяПолитикаПоПерсоналуОрганизации = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация];

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		
		мОрганизацияЯвляетсяВкладчикомОППВ = ПроцедурыНалоговогоУчета.ПолучитьПризнакВкладчикаПрофПенсионныхВзносов(?(ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОбособленноеПодразделениеКуда), ВыборкаПоШапкеДокумента.ОбособленноеПодразделениеКуда, ВыборкаПоШапкеДокумента.Организация), ВыборкаПоШапкеДокумента.Дата);

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ = ложь)
		Если НЕ Отказ Тогда

			// Создадим и заполним структуры, содержащие имена регистров, по которым в зависимости от типа учета
			// проводится документ. В дальнейшем будем считать, что если для регистра не создан ключ в структуре,
			// то проводить по нему не надо.
			ЗаполнитьСтруктуруПроведенияПоРегистрамНакопления(СтруктураПроведенияПоРегистрамНакопления);
			ЗаполнитьСтруктуруПроведенияПоРегистрамСведений(СтруктураПроведенияПоРегистрамСведений);

			// получим реквизиты табличной части
			РезультатЗапросаПоРаботники	= 	СформироватьЗапросПоРаботникиОрганизации(Режим);
			ВыборкаПоСтрокамДокумента 	= 	РезультатЗапросаПоРаботники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоСтрокамДокумента, Отказ, Заголовок, УчетнаяПолитикаПоПерсоналуОрганизации);

				Если НЕ Отказ Тогда

					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента,ВыборкаПоСтрокамДокумента, СтруктураПроведенияПоРегистрамНакопления);
					ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, СтруктураПроведенияПоРегистрамСведений, , УчетнаяПолитикаПоПерсоналуОрганизации);

				КонецЕсли;

			КонецЦикла;

			// выполним выборку по табличной части основных начислений
			ВыборкаПоСтрокамДокумента = СформироватьЗапросПоНачисления().Выбрать();

			// Собрем инофрмацию об индексации заработка за последние 12 месяцев
			Если ВыборкаПоШапкеДокумента.ИндексацияЗаработка Тогда
				ТаблицаКоэффициентовИндексации = СформироватьЗапросПоКоэффициентамИндексации().Выгрузить();
			Иначе 
				ТаблицаКоэффициентовИндексации = "";
			КонецЕсли;
			
			// обходим строки документа
			Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл
				ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок, УчетнаяПолитикаПоПерсоналуОрганизации);
				Если НЕ Отказ Тогда
					ДобавитьСтрокуВДвиженияПоНачислениям(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, УчетнаяПолитикаПоПерсоналуОрганизации, ТаблицаКоэффициентовИндексации);
				КонецЕсли;
				
			КонецЦикла;
			
			// выполним выборку по табличной части дополнительных начислений
			ВыборкаПоСтрокамДокумента = СформироватьЗапросПоДопНачисления().Выбрать();

			// обходим строки документа
			Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл
				ПроверитьЗаполнениеСтрокиДопНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок, УчетнаяПолитикаПоПерсоналуОрганизации);
				Если НЕ Отказ Тогда
					ДобавитьСтрокуВДвиженияПоДопНачислениям(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, УчетнаяПолитикаПоПерсоналуОрганизации);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли; 

	КонецЕсли;

	КадровоеПеремещениеОрганизацийПереопределяемый.ДобавитьДополнительныеДвижения(ЭтотОбъект, Отказ, Заголовок);

КонецПроцедуры // ОбработкаПроведения()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

мДлинаСуток = 86400;
мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить(); 
мВосстанавливатьДвижения = Ложь;