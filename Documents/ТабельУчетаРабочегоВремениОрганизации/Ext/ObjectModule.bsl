////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Предопределенные значения справочника "КлассификаторИспользованияРабочегоВремени"
Перем КлассификаторНочныеЧасы;
Перем КлассификаторВыходныеДни;

// Значение  "ПоДням" перечисления ВидыУчетаВремени
Перем ВидУчетаВремениПоДням;

// Значение  "ПоЧасам" перечисления ВидыУчетаВремени
Перем ВидУчетаВремениПоЧасам;
Перем ВидУчетаВремениПоНочнымЧасам;

// Массив строк "Первый", "Второй", "Третий" - приставки элементов табличной части документа.
Перем МассивПриставок;

// Значения справочника Классификатор использования рабочего времени. 
Перем КлассификаторЯвка;
Перем КлассификаторПустаяСсылка;
// Индекс записи в наборе записей регистра сведений Графика
Перем ИндексЗаписиЯвка;

// Дата на которую происходит получение записи регистра.
Перем ДатаИндексаЗаписиЯвка;

// список информационных сообщений, для вывода
Перем МассивСообщений;

// Массив видов времени из классификатора, по индексам которого сортируется
// таблица ОтработанноеВремяВЦеломЗаПериод
Перем ПорядокСортировкиВидовВремени;

// Хранит количество секунд в сутках
Перем мДлинаСуток;

// Хранит валюту регламентированного учета
Перем мВалютаРегламентированногоУчета Экспорт;

// Хранит список типов показателей схем мотивации, которые не требуют валюту
Перем мСписокПоказателейНеТребующихВалюты Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Функция предназначена для автозаполнения документа
// если заполнен параметр сотрудники, то в табличную часть будут добавлены
// строки по данным сотрудникам.
Функция Автозаполнение(ПостроительЗапроса = Неопределено, Сотрудник = Неопределено, ТекущаяСтрокаТабличнойЧасти = Неопределено) Экспорт
	
	#Если Клиент Тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		СтрокаВерхнегоУровняСообщений = ОбработкаКомментариев.ДобавитьСообщение("Автозаполнение документа", Перечисления.ВидыСообщений.Раздел);
		СтрокаВерхнегоУровняСообщений = Неопределено;
	#КонецЕсли 
	
 	ПустоеПодразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
 	ПустойОтветственный = Справочники.Пользователи.ПустаяСсылка();
	
	Если ПодразделениеОрганизации = ПустоеПодразделение И Ответственный = ПустойОтветственный Тогда
		ПоВсемПодразделениямОрганизации = Истина;
		УсловиеНаПодразделение = "ПодразделениеОрганизации.Владелец = &ОбособленноеПодразделение";
	ИначеЕсли ПодразделениеОрганизации = ПустоеПодразделение Тогда
		Если глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация].РасчетЗарплатыОрганизацииПоОтветственным Тогда
			ПоВсемПодразделениямОрганизации = Ложь;
			УсловиеНаПодразделение = "ПодразделениеОрганизации В ИЕРАРХИИ (ВЫБРАТЬ РАЗЛИЧНЫЕ Расчетчики.ПодразделениеОрганизации ИЗ РегистрСведений.РасчетчикиЗарплатыОрганизаций.СрезПоследних(&НачалоМесяца) Расчетчики ГДЕ Расчетчики.Пользователь = &парамПользователь)";
		Иначе
			ПоВсемПодразделениямОрганизации = Истина;
			УсловиеНаПодразделение = "ПодразделениеОрганизации.Владелец = &ОбособленноеПодразделение";
		КонецЕсли;
	Иначе
		ПоВсемПодразделениямОрганизации = Ложь;
		УсловиеНаПодразделение = "ПодразделениеОрганизации В ИЕРАРХИИ (&Подразделение)";
	КонецЕсли;
 	
	Если ПостроительЗапроса = Неопределено Тогда 
		
		ЗапросАвтоЗаполнения = Новый Запрос;
		ЗапросАвтоЗаполнения.УстановитьПараметр("Месяц", ПериодРегистрации);
		ЗапросАвтоЗаполнения.УстановитьПараметр("парамПользователь", Ответственный);
		ЗапросАвтоЗаполнения.УстановитьПараметр("Подразделение", ПодразделениеОрганизации);
	
		// Проверим ответственного - является ли он расчетчиком вообще и для заданного 
	 	// подразделения (если оно задано)
		Если Ответственный <> ПустойОтветственный Тогда
			Если глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация].РасчетЗарплатыОрганизацииПоОтветственным Тогда
				Если ПодразделениеОрганизации = ПустоеПодразделение Тогда
					ЗапросАвтоЗаполнения.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
					|	Расчетчики.ПодразделениеОрганизации
					|ИЗ
					|	РегистрСведений.РасчетчикиЗарплатыОрганизаций.СрезПоследних(&Месяц) КАК Расчетчики
					|
					|ГДЕ
					|	Расчетчики.Пользователь = &парамПользователь";
					Если ЗапросАвтоЗаполнения.Выполнить().Пустой() Тогда
						Сообщить("Ответственный за этот документ не является расчетчиком ни одного из подразделений организации");
						Возврат  Ложь;
					КонецЕсли;
				Иначе
					ЗапросАвтоЗаполнения.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
					|	Подразделения.Ссылка
					|ИЗ
					|	Справочник.ПодразделенияОрганизаций КАК Подразделения
					|ГДЕ
					|	Подразделения.Ссылка В ИЕРАРХИИ(&Подразделение)
					|	И Подразделения.Ссылка В ИЕРАРХИИ
					|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
					|				Расчетчики.ПодразделениеОрганизации
					|			ИЗ
					|				РегистрСведений.РасчетчикиЗарплатыОрганизаций.СрезПоследних(&Месяц) КАК Расчетчики
					|			ГДЕ
					|				Расчетчики.Пользователь = &парамПользователь)";
					Если ЗапросАвтоЗаполнения.Выполнить().Пустой() Тогда
						Сообщить("Ответственный за этот документ не является расчетчиком для выбранного подразделения");
						Возврат  Ложь;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
	 	КонецЕсли;

		ЗапросАвтоЗаполнения.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РаботникиОрганизаций.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТСписокРаботников
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|				&НачалоМесяца, 
		|				Организация = &ГоловнаяОрганизация
		|				" + ?(Сотрудник <> Неопределено, "И Сотрудник В (&СписокСотрудников)", "") + ") КАК РаботникиОрганизаций
		|ГДЕ
		|	РаботникиОрганизаций.ОбособленноеПодразделение = &ОбособленноеПодразделение
		|	" + ?(НЕ ПоВсемПодразделениямОрганизации, " И " + УсловиеНаПодразделение, "") + "
		|	И РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	РаботникиОрганизаций.Сотрудник
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|ГДЕ
		|	РаботникиОрганизаций.Период > &НачалоМесяца
		|	И РаботникиОрганизаций.Период <= &КонецМесяца
		|	И РаботникиОрганизаций.Организация = &ГоловнаяОрганизация
		|	И РаботникиОрганизаций.ОбособленноеПодразделение = &ОбособленноеПодразделение
		|	" + ?(НЕ ПоВсемПодразделениямОрганизации, " И " + УсловиеНаПодразделение, "") + "
		|	" + ?(Сотрудник <> Неопределено, "И РаботникиОрганизаций.Сотрудник В (&СписокСотрудников)", "") + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|"; 
		
		Если Сотрудник = Неопределено Тогда
			ЗапросАвтоЗаполнения.УстановитьПараметр("ВключатьВРезультатПустыеЗаписи", Ложь);
		Иначе
			ЗапросАвтоЗаполнения.УстановитьПараметр("ВключатьВРезультатПустыеЗаписи", Истина);
		КонецЕсли;
		
	Иначе
		
		ЗапросАвтоЗаполнения = ПостроительЗапроса.ПолучитьЗапрос();

		ИсходныйТекстПостроителя = ЗапросАвтоЗаполнения.Текст;
		ТекстЗапросаПоСпискуРаботников = СтрЗаменить(ИсходныйТекстПостроителя,"РАЗРЕШЕННЫЕ","");
		ТекстЗапросаПоСпискуРаботников = Лев(ТекстЗапросаПоСпискуРаботников, Найти(ТекстЗапросаПоСпискуРаботников,"УПОРЯДОЧИТЬ") - 1);
		
		ЗапросАвтоЗаполнения.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	СписокРаботников.Сотрудник
		|
		|ПОМЕСТИТЬ ВТСписокРаботников
		|ИЗ
		|	(" + ТекстЗапросаПоСпискуРаботников + ") КАК СписокРаботников
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|";
		
		ЗапросАвтоЗаполнения.УстановитьПараметр("ВключатьВРезультатПустыеЗаписи", Ложь);
		
	КонецЕсли;

	ЗапросАвтоЗаполнения.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	ЗапросАвтоЗаполнения.УстановитьПараметр("ОбособленноеПодразделение", Организация);
	ЗапросАвтоЗаполнения.УстановитьПараметр("Подразделение", ПодразделениеОрганизации);
	ЗапросАвтоЗаполнения.УстановитьПараметр("НачалоМесяца", ДатаНачалаПериода);
	ЗапросАвтоЗаполнения.УстановитьПараметр("КонецМесяца", ДатаОкончанияПериода);
	ЗапросАвтоЗаполнения.УстановитьПараметр("Месяц", ПериодРегистрации);
	ЗапросАвтоЗаполнения.УстановитьПараметр("СписокСотрудников", Сотрудник);
	ЗапросАвтоЗаполнения.УстановитьПараметр("парамПользователь", Ответственный);
	
	ЗапросАвтоЗаполнения.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗапросАвтоЗаполнения.Выполнить();

	ЗапросАвтоЗаполнения.УстановитьПараметр("ВидУчетаВремениПоДням", ВидУчетаВремениПоДням);
	ЗапросАвтоЗаполнения.УстановитьПараметр("ВидУчетаВремениПоЧасам", ВидУчетаВремениПоЧасам);
	ЗапросАвтоЗаполнения.УстановитьПараметр("ВидУчетаВремениПоНочнымЧасам", Перечисления.ВидыУчетаВремени.ПоНочнымЧасам);
	
	ЗапросАвтоЗаполнения.УстановитьПараметр("КлассификаторЯ", Справочники.КлассификаторИспользованияРабочегоВремени.Работа);
	ЗапросАвтоЗаполнения.УстановитьПараметр("КлассификаторНЧ", КлассификаторНочныеЧасы);
	ЗапросАвтоЗаполнения.УстановитьПараметр("Выходной", Справочники.КлассификаторИспользованияРабочегоВремени.ВыходныеДни);
	
	ЗапросАвтоЗаполнения.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	ЗапросАвтоЗаполнения.УстановитьПараметр("СверхНормы", Перечисления.ВидыВремени.ОтработанноеСверхНормы);
	ЗапросАвтоЗаполнения.УстановитьПараметр("ПочасовыеОтклонения", Перечисления.ВидыВремени.ЧасовоеНеотработанное);
	ЗапросАвтоЗаполнения.УстановитьПараметр("ПустойКлассификатор", Справочники.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка());
	
	ЗапросАвтоЗаполнения.УстановитьПараметр("ПоДням", Перечисления.ВидыУчетаВремени.ПоДням);
	ЗапросАвтоЗаполнения.УстановитьПараметр("ПоЧасам", Перечисления.ВидыУчетаВремени.ПоЧасам);
	ЗапросАвтоЗаполнения.УстановитьПараметр("ПоНочным", Перечисления.ВидыУчетаВремени.ПоНочнымЧасам); 
	
	ВидыВремениУчитываемыеВВыходные = Новый Массив(2);
	ВидыВремениУчитываемыеВВыходные[0] = Перечисления.ВидыВремени.ОтработанноеСверхНормы;
	ВидыВремениУчитываемыеВВыходные[1] = Перечисления.ВидыВремени.ЦелодневноеНеотработанное;
	ЗапросАвтоЗаполнения.УстановитьПараметр("ВидыВремениУчитываемыеВВыходные", ВидыВремениУчитываемыеВВыходные);
	ЗапросАвтоЗаполнения.УстановитьПараметр("ПустойГрафик", Справочники.ГрафикиРаботы.ПустаяСсылка());
	
	ГодПериода = Формат(Год(ПериодРегистрации), "ЧГ=4");
	МесяцПериода = Месяц(ПериодРегистрации);
	ТекстЗапроса = "ВЫБРАТЬ
	|	ДатаТабеля
	|	
	|ПОМЕСТИТЬ ВТДатыТабеля 
	|	ИЗ (
	|	ВЫБРАТЬ
	|	ДАТАВРЕМЯ(" + ГодПериода + ", " + МесяцПериода + " , " + День(ДатаНачалаПериода) + ") КАК ДатаТабеля
	|	";           
	Для НомерДня = День(ДатаНачалаПериода) + 1 По День(ДатаОкончанияПериода) Цикл
		ТекстЗапроса = ТекстЗапроса + 
		"ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|  ДАТАВРЕМЯ(" + ГодПериода + ", " + МесяцПериода + " ," + НомерДня + ")
		|	";
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + ") КАК ДатыТабеля;";
	ЗапросАвтоЗаполнения.Текст = ТекстЗапроса;
	
	ЗапросАвтоЗаполнения.Текст = ЗапросАвтоЗаполнения.Текст + "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДатыПериода.ДатаТабеля КАК ДатаТабеля,
	|	СписокРаботников.Сотрудник КАК Сотрудник,
	|	МАКСИМУМ(РаботникиОрганизаций.Период) КАК ДатаИзменения
	|
	|ПОМЕСТИТЬ ВТ_ПоследниеДатыИзмененийРаботников
	|ИЗ
	|	ВТДатыТабеля КАК ДатыПериода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСписокРаботников КАК СписокРаботников
	|		ПО (ИСТИНА)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ПО (РаботникиОрганизаций.Период <= ДатыПериода.ДатаТабеля)
	|			И (СписокРаботников.Сотрудник = РаботникиОрганизаций.Сотрудник)
	|			И (РаботникиОрганизаций.Организация = &ГоловнаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокРаботников.Сотрудник,
	|	ДатыПериода.ДатаТабеля
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаИзменения
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДниСотрудников.ДатаТабеля КАК ДатаТабеля,
	|	ДниСотрудников.Сотрудник КАК Сотрудник,
	|	ДниСотрудников.ДатаИзменения,
	|	РаботникиОрганизации.ПодразделениеОрганизации,
	|	РаботникиОрганизации.Должность,
	|	РаботникиОрганизации.ТарифныйРазряд,
	|	РаботникиОрганизации.ГрафикРаботы,
	|	РаботникиОрганизации.ПричинаИзмененияСостояния
	|
	|ПОМЕСТИТЬ ВТ_КадровыеДанныеРаботников
	|ИЗ
	|   ВТ_ПоследниеДатыИзмененийРаботников КАК ДниСотрудников
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		ПО ДниСотрудников.Сотрудник = РаботникиОрганизации.Сотрудник
	|			И ДниСотрудников.ДатаИзменения = РаботникиОрганизации.Период
	|			И РаботникиОрганизации.Организация = &ГоловнаяОрганизация
	|";
	Если СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ПоДням И НЕ ПоВсемПодразделениямОрганизации Тогда
	ЗапросАвтоЗаполнения.Текст = ЗапросАвтоЗаполнения.Текст + "
	|ГДЕ " + УсловиеНаПодразделение;
	КонецЕсли;
	ЗапросАвтоЗаполнения.Текст = ЗапросАвтоЗаполнения.Текст + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаТабеля
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	|	ПлановыеНачисленияРаботниковОрганизаций.Период КАК Период,
	|	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение КАК ВидРасчетаИзмерение,
	|	ПлановыеНачисленияРаботниковОрганизаций.ПериодЗавершения,
	|	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета,
	|	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаЗавершения,
	|	ПлановыеНачисленияРаботниковОрганизаций.Действие,
	|	ПлановыеНачисленияРаботниковОрганизаций.ДействиеЗавершения
	|
	|ПОМЕСТИТЬ ВТПлановыеНачисленияРаботниковОрганизаций
	|ИЗ
	|	ВТСписокРаботников КАК ВТСписокРаботников
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
	|		ПО ПлановыеНачисленияРаботниковОрганизаций.Сотрудник = ВТСписокРаботников.Сотрудник
	|			И ПлановыеНачисленияРаботниковОрганизаций.Организация = &ГоловнаяОрганизация
	|			И ПлановыеНачисленияРаботниковОрганизаций.Период <= КОНЕЦПЕРИОДА(&Месяц, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Сотрудник,
	|	ВидРасчетаИзмерение
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДатыТабеля.ДатаТабеля КАК ДатаТабеля,
	|	МАКСИМУМ(ПлановыеНачисления.Период) КАК Период,
	|	ПлановыеНачисления.Сотрудник КАК Сотрудник,
	|	ПлановыеНачисления.ВидРасчетаИзмерение КАК ВидРасчетаИзмерение
	|
	|ПОМЕСТИТЬ ВТ_ДатыПолученияВР
	|ИЗ
	|	ВТДатыТабеля КАК ДатыТабеля
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	|		ПО (ПлановыеНачисления.Период <= ДатыТабеля.ДатаТабеля)
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДатыТабеля.ДатаТабеля,
	|	ПлановыеНачисления.Сотрудник,
	|	ПлановыеНачисления.ВидРасчетаИзмерение	
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период,
	|	ВидРасчетаИзмерение
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиОрганизации.ДатаТабеля,
	|	РаботникиОрганизации.Сотрудник,
	|	РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	РаботникиОрганизации.Должность КАК Должность,
	|	РаботникиОрганизации.ТарифныйРазряд КАК ТарифныйРазряд,
	|	НадбавкиШР.ВидНадбавки КАК ВидНадбавки,
	|	МАКСИМУМ(НадбавкиШР.Период) КАК ПериодНадбавки
	|
	|ПОМЕСТИТЬ ВТ_ПоследниеДатыШР
	|ИЗ
	|	ВТ_КадровыеДанныеРаботников КАК РаботникиОрганизации
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций КАК НадбавкиШР
	|		ПО РаботникиОрганизации.ПодразделениеОрганизации = НадбавкиШР.ПодразделениеОрганизации
	|			И РаботникиОрганизации.Должность = НадбавкиШР.Должность
	|			И РаботникиОрганизации.ТарифныйРазряд = НадбавкиШР.ТарифныйРазряд
	|			И НадбавкиШР.Период <= РаботникиОрганизации.ДатаТабеля
	|			И ЕСТЬNULL(НадбавкиШР.ВидНадбавки.ОбозначениеВТабелеУчетаРабочегоВремени, &ПустойКлассификатор) <> &ПустойКлассификатор
	|
	|ГДЕ
	|	РаботникиОрганизации.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|
	|СГРУППИРОВАТЬ ПО
	|	РаботникиОрганизации.ДатаТабеля,
	|	РаботникиОрганизации.Сотрудник,
	|	РаботникиОрганизации.ПодразделениеОрганизации,
	|	РаботникиОрганизации.Должность,
	|	РаботникиОрганизации.ТарифныйРазряд,
	|	НадбавкиШР.ВидНадбавки	
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПодразделениеОрганизации,
	|	Должность,
	|	ТарифныйРазряд,
	|	ВидНадбавки,
	|	ПериодНадбавки
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < ДатыПолученияВР.ДатаТабеля
	|			ТОГДА ЕСТЬNULL(ПлановыеНачисления.ВидРасчетаЗавершения.ОбозначениеВТабелеУчетаРабочегоВремени, &ПустойКлассификатор)
	|		ИНАЧЕ ЕСТЬNULL(ПлановыеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени, &ПустойКлассификатор)
	|	КОНЕЦ КАК КлассификаторВидаВремени,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < ДатыПолученияВР.ДатаТабеля
	|			ТОГДА ПлановыеНачисления.ВидРасчетаЗавершения
	|		ИНАЧЕ ПлановыеНачисления.ВидРасчета
	|	КОНЕЦ КАК ВидРасчета,
	|	ДатыПолученияВР.ДатаТабеля КАК ДатаТабеля,
	|	ДатыПолученияВР.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА ДатыПолученияВР.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОсновноеНачисление
	|
	|ПОМЕСТИТЬ ВТПлановыеНачисленияСотрудников
	|ИЗ
	|	ВТ_ДатыПолученияВР КАК ДатыПолученияВР
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	|		ПО (ПлановыеНачисления.Период = ДатыПолученияВР.Период)
	|			И (ПлановыеНачисления.Сотрудник = ДатыПолученияВР.Сотрудник)
	|			И (ПлановыеНачисления.ВидРасчетаИзмерение = ДатыПолученияВР.ВидРасчетаИзмерение)
	|
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < ДатыПолученияВР.ДатаТабеля
	|			ТОГДА ЕСТЬNULL(ПлановыеНачисления.ВидРасчетаЗавершения.ОбозначениеВТабелеУчетаРабочегоВремени, &ПустойКлассификатор)
	|		ИНАЧЕ ЕСТЬNULL(ПлановыеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени, &ПустойКлассификатор)
	|	КОНЕЦ НЕ В (&ПустойКлассификатор, &КлассификаторНЧ)
	|	И ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < ДатыПолученияВР.ДатаТабеля
	|			ТОГДА ПлановыеНачисления.ДействиеЗавершения
	|		ИНАЧЕ ПлановыеНачисления.Действие
	|	КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|
	|ОБЪЕДИНИТЬ // без повторяющихся записей
	|
	|ВЫБРАТЬ 
	|	ПоследниеДатыШР.ВидНадбавки.ОбозначениеВТабелеУчетаРабочегоВремени КАК КлассификаторВидаВремени,
	|	ПоследниеДатыШР.ВидНадбавки КАК ВидРасчета,
	|	ПоследниеДатыШР.ДатаТабеля КАК ДатаТабеля,
	|	ПоследниеДатыШР.Сотрудник КАК Сотрудник,
	|	ЛОЖЬ КАК ОсновноеНачисление
	|
	|ИЗ
	|	ВТ_ПоследниеДатыШР КАК ПоследниеДатыШР
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций КАК НадбавкиШР
	|		ПО ПоследниеДатыШР.ПодразделениеОрганизации = НадбавкиШР.ПодразделениеОрганизации
	|			И ПоследниеДатыШР.Должность = НадбавкиШР.Должность
	|			И ПоследниеДатыШР.ТарифныйРазряд = НадбавкиШР.ТарифныйРазряд
	|			И ПоследниеДатыШР.ПериодНадбавки = НадбавкиШР.Период
	|			И НадбавкиШР.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаТабеля
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	ФактическийПериодДействия.Сотрудник,
	|	ФактическийПериодДействия.ВидРасчета,
	|	ФактическийПериодДействия.НормаЧасов,
	|	ФактическийПериодДействия.ВидУчетаВремени,
	|	ЕСТЬNULL(ФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени, &ПустойКлассификатор) КАК ВидВремени,
	|	ЕСТЬNULL(ФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени, ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ПустаяСсылка)) КАК ПеречислениеВидВремени,
	|	ФактическийПериодДействия.ГрафикРаботы КАК ГрафикРаботы,
	|	ФактическийПериодДействия.ПериодДействияНачало,
	|	ФактическийПериодДействия.ПериодРегистрации,
	|	ФактическийПериодДействия.Сторно,
	|	ФактическийПериодДействия.ПериодДействияКонец,
	|	ФактическийПериодДействия.ОтработаноЧасов + ФактическийПериодДействия.УчитываемыеЧасы КАК ОтработаноЧасов,
	|	ФактическийПериодДействия.Регистратор
	|
	|ПОМЕСТИТЬ ВТНефильтрованныеОсновныеНачисления
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
	|			(Сотрудник) В
	|				(ВЫБРАТЬ
	|					ВТСписокРаботников.Сотрудник КАК Сотрудник
	|				ИЗ
	|					ВТСписокРаботников)
	|			И ПериодДействия = &Месяц
	|			И Организация = &ГоловнаяОрганизация
	|			И (ЕСТЬNULL(ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени, ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ПустаяСсылка)
	|					ИЛИ ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоНочнымЧасам) )) КАК ФактическийПериодДействия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ВидРасчета
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КадровыеДанныеРаботников.ДатаТабеля КАК ДатаТабеля,
	|	КадровыеДанныеРаботников.Сотрудник КАК Сотрудник,
	|	Начисления.ГрафикРаботы КАК ГрафикРаботы,
	|	Начисления.ВидРасчета КАК ВидРасчета,
	|	Начисления.ВидУчетаВремени КАК ВидУчетаВремени,
	|	Начисления.ПериодДействияНачало КАК ПериодДействияНачало,
	|	Начисления.ПериодДействияКонец КАК ПериодДействияКонец,
	|	Начисления.ПеречислениеВидВремени КАК ВидВремени,
	|	Начисления.ОтработаноЧасов КАК ОтработаноЧасов,
	|	Начисления.НормаЧасов КАК НормаЧасов,
	|	Начисления.Регистратор КАК Регистратор
	|
	|ПОМЕСТИТЬ ВТ_Начисления
	|ИЗ
	|	ВТ_КадровыеДанныеРаботников КАК КадровыеДанныеРаботников
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТНефильтрованныеОсновныеНачисления КАК Начисления
	|		ПО (КадровыеДанныеРаботников.ДатаТабеля МЕЖДУ Начисления.ПериодДействияНачало И Начисления.ПериодДействияКонец)
	|			И КадровыеДанныеРаботников.Сотрудник = Начисления.Сотрудник
	|			И ((НЕ Начисления.Сторно))
	|			И (Начисления.Регистратор <> &ДокументСсылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТНефильтрованныеОсновныеНачисления КАК СторноНачисления
	|		ПО (КадровыеДанныеРаботников.ДатаТабеля МЕЖДУ СторноНачисления.ПериодДействияНачало И СторноНачисления.ПериодДействияКонец)
	|			И (СторноНачисления.Сторно)
	|			И (СторноНачисления.Сотрудник = Начисления.Сотрудник)
	|			И (СторноНачисления.ВидРасчета = Начисления.ВидРасчета)
	|			И (СторноНачисления.ПериодРегистрации > Начисления.ПериодРегистрации)
	|ГДЕ
	|	СторноНачисления.Сотрудник ЕСТЬ NULL 	
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаТабеля,
	|	ВидВремени
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВнутрисменныеПрогулы.Сотрудник КАК Сотрудник,
	|	ВнутрисменныеПрогулы.Период КАК ДатаТабеля,
	|	ВнутрисменныеПрогулы.ЧасовОборот КАК Часов
	|
	|ПОМЕСТИТЬ ВТ_ВнутрисменныеПрогулы
	|ИЗ
	|	РегистрНакопления.РабочееВремяРаботниковОрганизаций.Обороты(
	|				&НачалоМесяца,
	|				&КонецМесяца,
	|				ДЕНЬ,
	|				Организация = &ГоловнаяОрганизация
	|				И (Сотрудник) В (ВЫБРАТЬ Сотрудник ИЗ ВТСписокРаботников) 
	|				И ВидИспользованияРабочегоВремени В (ВЫБРАТЬ 
	|								Ссылка 
	|							ИЗ
	|								Справочник.КлассификаторИспользованияРабочегоВремени КАК Классификатор
	|							ГДЕ
	|								НЕ Классификатор.РабочееВремя 
	|								И Классификатор.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЧасовоеНеотработанное))) КАК ВнутрисменныеПрогулы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаТабеля
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Начисления.ДатаТабеля КАК ДатаТабеля,
	|	ВЫБОР
	|		КОГДА Начисления.ВидРасчета ЕСТЬ NULL 
	|			ТОГДА ПлановыеНачисления.Сотрудник
	|		ИНАЧЕ Начисления.Сотрудник
	|	КОНЕЦ КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА Начисления.ВидРасчета ЕСТЬ NULL 
	|			ТОГДА NULL
	|		ИНАЧЕ Начисления.ГрафикРаботы
	|	КОНЕЦ КАК ГрафикРаботы,
	|	ВЫБОР
	|		КОГДА Начисления.ВидРасчета ЕСТЬ NULL 
	|			ТОГДА ПлановыеНачисления.ВидРасчета
	|		ИНАЧЕ Начисления.ВидРасчета
	|	КОНЕЦ КАК ВидРасчета,
	|	ВЫБОР
	|		КОГДА Начисления.ВидРасчета ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ПлановыеНачисления.ВидРасчета ЕСТЬ NULL 
	|						ТОГДА NULL
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|				КОНЕЦ
	|		ИНАЧЕ Начисления.ВидУчетаВремени
	|	КОНЕЦ КАК ВидУчетаВремени,
	|	ВЫБОР
	|		КОГДА Начисления.ВидРасчета ЕСТЬ NULL 
	|			ТОГДА ЕСТЬNULL(ПлановыеНачисления.КлассификаторВидаВремени, ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ПустаяСсылка))
	|		ИНАЧЕ Начисления.ВидВремени
	|	КОНЕЦ КАК ВидВремени,
	|	ВЫБОР
	|		КОГДА Начисления.ВидРасчета ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ПлановыеНачисления.ВидРасчета ЕСТЬ NULL 
	|						ТОГДА NULL
	|					ИНАЧЕ &НачалоМесяца
	|				КОНЕЦ
	|		ИНАЧЕ Начисления.ПериодДействияНачало
	|	КОНЕЦ КАК ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА Начисления.ВидРасчета ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ПлановыеНачисления.ВидРасчета ЕСТЬ NULL 
	|						ТОГДА NULL
	|					ИНАЧЕ &КонецМесяца
	|				КОНЕЦ
	|		ИНАЧЕ Начисления.ПериодДействияКонец
	|	КОНЕЦ КАК ПериодДействияКонец,
	|	ВЫБОР
	|		КОГДА Начисления.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ОтработанноеСверхНормы)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ДатаТабеля = Начисления.ПериодДействияНачало
	|						ТОГДА Начисления.ОтработаноЧасов
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОГДА Начисления.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЧасовоеНеотработанное)
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.ДатаТабеля = Начисления.ПериодДействияНачало
	|						ТОГДА Начисления.НормаЧасов
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПлановыеНачисления.ВидРасчета ЕСТЬ NULL 
	|					ТОГДА NULL
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК ВремяЗаДень,
	|	ВЫБОР
	|		КОГДА Начисления.ВидРасчета ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ПлановыеНачисления.ВидРасчета ЕСТЬ NULL 
	|						ТОГДА NULL
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ЕСТЬNULL(ВнутрисменныеПрогулы.Часов, 0)
	|	КОНЕЦ КАК ЧасовОтклонение
	|
	|ПОМЕСТИТЬ ВТОсновныеНачисления
	|ИЗ
	|	ВТ_Начисления КАК Начисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПлановыеНачисленияСотрудников КАК ПлановыеНачисления
	|		ПО (ПлановыеНачисления.Сотрудник = Начисления.Сотрудник)
	|			И Начисления.ДатаТабеля = ПлановыеНачисления.ДатаТабеля
	|			И (ПлановыеНачисления.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомДо3ЛетБезОплаты))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВнутрисменныеПрогулы КАК ВнутрисменныеПрогулы
	|		ПО (ВнутрисменныеПрогулы.Сотрудник = Начисления.Сотрудник)
	|			И (ВнутрисменныеПрогулы.ДатаТабеля = Начисления.ДатаТабеля)
	|			И Начисления.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ОтработанноеВПределахНормы)
	|ГДЕ
	|	(НЕ ВЫБОР
	|			КОГДА Начисления.ВидРасчета ЕСТЬ NULL 
	|				ТОГДА ПлановыеНачисления.Сотрудник
	|			ИНАЧЕ Начисления.Сотрудник
	|		КОНЕЦ ЕСТЬ NULL )
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДатаТабеля,
	|	ГрафикРаботы,
	|	ВидВремени
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостояниеРаботников.Сотрудник КАК Сотрудник,
	|	СостояниеРаботников.Период КАК Период,
	|	СостояниеРаботников.Состояние,
	|	СостояниеРаботников.ПериодЗавершения,
	|	СостояниеРаботников.СостояниеЗавершения
	|ПОМЕСТИТЬ ВТСостояниеРаботниковСрез
	|ИЗ
	|	РегистрСведений.СостояниеРаботниковОрганизаций.СрезПоследних(
	|			&НачалоМесяца,
	|			Организация = &ГоловнаяОрганизация
	|			И (Сотрудник) В
	|				(ВЫБРАТЬ
	|					ВТСписокРаботников.Сотрудник КАК Сотрудник
	|				ИЗ
	|					ВТСписокРаботников)) КАК СостояниеРаботников
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостояниеРаботников.Сотрудник КАК Сотрудник,
	|	&НачалоМесяца КАК Период,
	|	ВЫБОР	
	|		КОГДА СостояниеРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И СостояниеРаботников.ПериодЗавершения <= &НачалоМесяца
	|			ТОГДА СостояниеРаботников.СостояниеЗавершения
	|		ИНАЧЕ СостояниеРаботников.Состояние
	|	КОНЕЦ КАК Состояние
	|ПОМЕСТИТЬ ВТСостояниеРаботников
	|ИЗ
	|	ВТСостояниеРаботниковСрез КАК СостояниеРаботников
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СостояниеРаботников.Сотрудник,
	|	СостояниеРаботников.ПериодЗавершения,
	|	СостояниеРаботников.СостояниеЗавершения
	|ИЗ
	|	ВТСостояниеРаботниковСрез КАК СостояниеРаботников
	|ГДЕ
	|	СостояниеРаботников.ПериодЗавершения >= &НачалоМесяца
	|	И СостояниеРаботников.ПериодЗавершения <= &КонецМесяца
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СостояниеРаботников.Сотрудник,
	|	СостояниеРаботников.Период,
	|	СостояниеРаботников.Состояние
	|ИЗ
	|	РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокРаботников КАК ВТСотрудники
	|		ПО СостояниеРаботников.Сотрудник = ВТСотрудники.Сотрудник
	|ГДЕ
	|	СостояниеРаботников.Период > &НачалоМесяца
	|	И СостояниеРаботников.Период <= &КонецМесяца
	|	И СостояниеРаботников.Организация = &ГоловнаяОрганизация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СостояниеРаботников.Сотрудник,
	|	СостояниеРаботников.ПериодЗавершения,
	|	СостояниеРаботников.СостояниеЗавершения
	|ИЗ
	|	РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокРаботников КАК ВТСотрудники
	|		ПО СостояниеРаботников.Сотрудник = ВТСотрудники.Сотрудник
	|ГДЕ
	|	СостояниеРаботников.Период > &НачалоМесяца
	|	И СостояниеРаботников.Период <= &КонецМесяца
	|	И СостояниеРаботников.ПериодЗавершения <= &КонецМесяца
	|	И СостояниеРаботников.ПериодЗавершения > &НачалоМесяца
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Основной.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Заболевание)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Болезнь)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Командировка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Командировка)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускЕжегодный)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОсновнойОтпуск)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускУчебный)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучение)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускНаПостановкуНаМедицинскийУчетПоБеременностиДоДвенадцатиНедель)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ДополнительныйОтпуск)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускДляПрохожденияСкрининговыхИсследований)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ДополнительныйОтпуск)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучениеНеоплачиваемый)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускБезСохраненияЗарплаты)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпуск)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтсутствуетПоНевыясненнойПричине)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеявкиПоНевыясненнымПричинам)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ВынужденныйПрогул)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ВынужденныйПрогул)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ГосударственныеОбязанности)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ГосударственныеОбязанности)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Прогулы)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Прогулы)
	|		КОГДА Основной.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Простой)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Простой)
	|	КОНЕЦ КАК ВидВремени,
	|	Основной.Период КАК ПериодНачало,
	|	ВЫБОР
	|		КОГДА МИНИМУМ(Вспомогательный.Период) ЕСТЬ NULL 
	|			ТОГДА &КонецМесяца
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(МИНИМУМ(Вспомогательный.Период), СЕКУНДА, -1)
	|	КОНЕЦ КАК ПериодКонец
	|ПОМЕСТИТЬ ВТСостояниеСотрудников
	|ИЗ
	|	ВТСостояниеРаботников КАК Основной
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСостояниеРаботников КАК Вспомогательный
	|		ПО (Вспомогательный.Сотрудник = Основной.Сотрудник)
	|			И (Вспомогательный.Период > Основной.Период)
	|
	|ГДЕ   
	|	Основной.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Работает)	
	|
	|СГРУППИРОВАТЬ ПО
	|	Основной.Сотрудник,
	|	Основной.Состояние,
	|	Основной.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ПериодНачало
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы КАК ГрафикРаботы,
	|	ГрафикиРаботыПоВидамВремени.Месяц КАК Месяц,
	|	ГрафикиРаботыПоВидамВремени.Дата КАК Дата,
	|	ГрафикиРаботыПоВидамВремени.ВидУчетаВремени КАК ВидУчетаВремени,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначение,
	|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение,
	|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма,
	|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма
	|ПОМЕСТИТЬ ВТГрафикиРаботыПоВидамВремени
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		РаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы
	|	ИЗ
	|		ВТ_КадровыеДанныеРаботников КАК РаботникиОрганизации
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ГрафикиРаботыФизЛиц.Ссылка
	|	ИЗ
	|		Справочник.ГрафикиРаботыФизЛиц КАК ГрафикиРаботыФизЛиц
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокРаботников КАК ВТСписокРаботников
	|			ПО ГрафикиРаботыФизЛиц.Сотрудник = ВТСписокРаботников.Сотрудник
	|				И ГрафикиРаботыФизЛиц.Организация = &ГоловнаяОрганизация) КАК ГрафикиРаботы
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО (ГрафикиРаботыПоВидамВремени.ГрафикРаботы = ГрафикиРаботы.ГрафикРаботы)
	|			И (ГрафикиРаботыПоВидамВремени.Месяц = &Месяц)
	|			И (ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГрафикРаботы,
	|	Месяц,
	|	Дата,
	|	ВидУчетаВремени
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|	СУММА(ГрафикиРаботыПоВидамВремени.ОсновноеЗначение) КАК Часов,
	|	СУММА(ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение) КАК Дней,
	|	ВЫБОР
	|		КОГДА НЕ(МАКСИМУМ(БалансРабочегоВремени.НормаЧасов) ЕСТЬ NULL)
	|			ТОГДА МАКСИМУМ(БалансРабочегоВремени.НормаЧасов)
	|		ИНАЧЕ СУММА(ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма) 
	|	КОНЕЦ КАК ЧасовПоНорме,
	|	ВЫБОР
	|		КОГДА НЕ(МАКСИМУМ(БалансРабочегоВремени.НормаДней) ЕСТЬ NULL)
	|			ТОГДА МАКСИМУМ(БалансРабочегоВремени.НормаДней)
	|		ИНАЧЕ СУММА(ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма) 
	|	КОНЕЦ КАК ДнейПоНорме
	|
	|ПОМЕСТИТЬ ВТНормыРаботыПоОбщемуГрафику
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&КонецМесяца,
	|			Организация = &ГоловнаяОрганизация
	|			И (Сотрудник) В
	|				(ВЫБРАТЬ
	|					ВТСписокРаботников.Сотрудник
	|				ИЗ
	|					ВТСписокРаботников)) КАК РаботникиОрганизацийСрезПоследних
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО (ГрафикиРаботыПоВидамВремени.ГрафикРаботы = РаботникиОрганизацийСрезПоследних.ГрафикРаботы)
	|			И (ГрафикиРаботыПоВидамВремени.Месяц = &Месяц)
	|			И (ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца)
	|			И (ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоЧасам))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГрафикиРаботыФизЛиц КАК ГрафикиРаботыФизЛиц
	|		ПО РаботникиОрганизацийСрезПоследних.Сотрудник = ГрафикиРаботыФизЛиц.Сотрудник
	|			И РаботникиОрганизацийСрезПоследних.ГрафикРаботы = ГрафикиРаботыФизЛиц.ГрафикРаботы
	|			И ГрафикиРаботыФизЛиц.Организация = &ГоловнаяОрганизация
	|			И ЕСТЬNULL(РаботникиОрганизацийСрезПоследних.ГрафикРаботы.ИспользуетсяСовместноСПланГрафиком, ЛОЖЬ)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БалансРабочегоВремени КАК БалансРабочегоВремени
	|		ПО ГрафикиРаботыПоВидамВремени.ГрафикРаботы = БалансРабочегоВремени.ГрафикРаботы
	|			И БалансРабочегоВремени.ДатаМесяца = &Месяц
	|
	|СГРУППИРОВАТЬ ПО
	|	РаботникиОрганизацийСрезПоследних.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РаботникиОрганизацийСрезПоследних.Сотрудник
	|;
	|";
	
	Если СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ВЦеломЗаПериод Тогда
		
		ЗапросАвтоЗаполнения.Текст = ЗапросАвтоЗаполнения.Текст + "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТОсновныеНачисления.ДатаТабеля КАК ДатаТабеля,
		|	ВТОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ВТОсновныеНачисления.ГрафикРаботы,
		|	ВТОсновныеНачисления.ВидРасчета,
		|	ВТОсновныеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ОбозначениеВТабелеУчетаРабочегоВремени,
		|	ВТОсновныеНачисления.ВидВремени,
		|	ВТОсновныеНачисления.ПериодДействияНачало,
		|	ВТОсновныеНачисления.ПериодДействияКонец,
		|	ВТОсновныеНачисления.ВремяЗаДень,
		|	ВТОсновныеНачисления.ВидУчетаВремени,
		|	ВТОсновныеНачисления.ЧасовОтклонение
		|
		|ПОМЕСТИТЬ ВТОтредактированныеНачисления
		|ИЗ
		|	ВТОсновныеНачисления КАК ВТОсновныеНачисления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТОсновныеНачисления.ДатаТабеля,
		|	ВТОсновныеНачисления.Сотрудник,
		|	ВТОсновныеНачисления.ГрафикРаботы,
		|	""ПланируемаяЯвка"",
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Работа),
		|	ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ОтработанноеВПределахНормы),
		|	ВТОсновныеНачисления.ПериодДействияНачало,
		|	ВТОсновныеНачисления.ПериодДействияКонец,
		|	ВТОсновныеНачисления.ВремяЗаДень,
		|	ВТОсновныеНачисления.ВидУчетаВремени,
		|	ВЫБОР
		|		КОГДА ВТОсновныеНачисления.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЧасовоеНеотработанное)
		|			ТОГДА ВТОсновныеНачисления.ВремяЗаДень
		|		ИНАЧЕ 0
		|	КОНЕЦ
		|ИЗ
		|	ВТОсновныеНачисления КАК ВТОсновныеНачисления
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОсновныеНачисления КАК Явки
		|		ПО (Явки.ДатаТабеля = ВТОсновныеНачисления.ДатаТабеля)
		|			И (Явки.Сотрудник = ВТОсновныеНачисления.Сотрудник)
		|			И (Явки.ГрафикРаботы = ВТОсновныеНачисления.ГрафикРаботы)
		|			И (Явки.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ОтработанноеВПределахНормы))
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикиРаботыПоВидамВремени КАК ГрафикиРаботы
		|		ПО (ГрафикиРаботы.ГрафикРаботы = ВТОсновныеНачисления.ГрафикРаботы)
		|			И (ГрафикиРаботы.Дата = ВТОсновныеНачисления.ДатаТабеля)
		|			И (ГрафикиРаботы.ВидУчетаВремени = ВТОсновныеНачисления.ВидУчетаВремени)
		|ГДЕ
		|	Явки.Сотрудник ЕСТЬ NULL 
		|	И ГрафикиРаботы.ОсновноеЗначение > 0
		|	И ВТОсновныеНачисления.ВидВремени В (ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ОтработанноеСверхНормы), ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЧасовоеНеотработанное))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаТабеля
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ДниСотрудников.Сотрудник КАК Сотрудник,
		|	ДниСотрудников.ДатаТабеля КАК ДатаТабеля,
		|
		|	ВЫБОР
		|		КОГДА ОбщиеГрафики.ВидУчетаВремени = &ПоЧасам
		|			ТОГДА ЕСТЬNULL(ОбщиеГрафики.ДополнительноеЗначение, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОсновноеЗначениеПоДням,
		|
		|	ВЫБОР
		|		КОГДА (НЕ ДневныеНеявки.ВремяЗаДень ЕСТЬ NULL )
		|				И ДневныеНеявки.ВидРасчета <> ""ПланируемаяЯвка""
		|				И ОбщиеГрафики.ВидУчетаВремени = &ПоЧасам
		|				И ДневныеНеявки.ВремяЗаДень > 0
		|			ТОГДА ДневныеНеявки.ВремяЗаДень
		|		КОГДА ДневныеНеявки.ВидРасчета = ""ПланируемаяЯвка""
		|				И ОбщиеГрафики.ВидУчетаВремени = &ПоЧасам
		|			ТОГДА ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) - ЕСТЬNULL(ДневныеНеявки.ЧасовОтклонение, 0)
		|		КОГДА ОбщиеГрафики.ВидУчетаВремени = &ПоЧасам
		|			ТОГДА ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) - ЕСТЬNULL(ДневныеНеявки.ВремяЗаДень, 0) - ЕСТЬNULL(ДневныеНеявки.ЧасовОтклонение, 0)
		|	КОНЕЦ КАК ОсновноеЗначениеПоЧасам,
		|
		|	ВЫБОР
		|		КОГДА (НЕ ДневныеНеявки.Сотрудник ЕСТЬ NULL )
		|				И ДневныеНеявки.ВидРасчета <> ""ПланируемаяЯвка""
		|				И ДневныеНеявки.ВремяЗаДень > 0
		|			ТОГДА 0
		|		КОГДА ОбщиеГрафики.ВидУчетаВремени = &ПоНочным
		|				И ВТСостояниеСотрудников.ВидВремени ЕСТЬ NULL
		|				И ЕСТЬNULL(ПлановыеНачисленияСотрудников.ОсновноеНачисление, ЛОЖЬ)
		|			ТОГДА ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОсновноеЗначениеПоНочным,
		|
		|	ВЫБОР
		|		КОГДА ДневныеНеявки.ВидРасчета = ""ПланируемаяЯвка""
		|			ТОГДА  ДневныеНеявки.ОбозначениеВТабелеУчетаРабочегоВремени
		|		ИНАЧЕ ЕСТЬNULL(ДневныеНеявки.ОбозначениеВТабелеУчетаРабочегоВремени, ЕСТЬNULL(ВТСостояниеСотрудников.ВидВремени, ПлановыеНачисленияСотрудников.КлассификаторВидаВремени))
		|	КОНЕЦ КАК ОбозначениеВТабелеУчетаРабочегоВремени
		|
		|ПОМЕСТИТЬ ВТ_ДанныеПоДням
		|ИЗ
		|	ВТ_КадровыеДанныеРаботников КАК ДниСотрудников
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОтредактированныеНачисления КАК ДневныеНеявки
		|		ПО (ДневныеНеявки.Сотрудник = ДниСотрудников.Сотрудник)
		|			И ДниСотрудников.ДатаТабеля = ДневныеНеявки.ДатаТабеля
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСостояниеСотрудников
		|		ПО ВТСостояниеСотрудников.Сотрудник = ДниСотрудников.Сотрудник
		|			И ДниСотрудников.ДатаТабеля МЕЖДУ ВТСостояниеСотрудников.ПериодНачало И ВТСостояниеСотрудников.ПериодКонец
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикиРаботыПоВидамВремени КАК ОбщиеГрафики
		|		ПО ОбщиеГрафики.ГрафикРаботы = ДниСотрудников.ГрафикРаботы
		|			И (ОбщиеГрафики.Дата = ДниСотрудников.ДатаТабеля)
		|			И (ОбщиеГрафики.ВидУчетаВремени В (&ПоЧасам, &ПоНочным))
		|			И (ДневныеНеявки.ВидРасчета ЕСТЬ NULL 
		|				ИЛИ ДневныеНеявки.ВидРасчета = ""ПланируемаяЯвка""
		|				ИЛИ ОбщиеГрафики.ВидУчетаВремени = ДневныеНеявки.ВидУчетаВремени
		|				ИЛИ ОбщиеГрафики.ВидУчетаВремени = &ПоЧасам
		|						И ДневныеНеявки.ВидУчетаВремени = &ПоДням)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПлановыеНачисленияСотрудников КАК ПлановыеНачисленияСотрудников
		|		ПО (ПлановыеНачисленияСотрудников.Сотрудник = ДниСотрудников.Сотрудник)
		|			И (ПлановыеНачисленияСотрудников.ДатаТабеля = ДниСотрудников.ДатаТабеля)
		|
		|ГДЕ
		|	ДниСотрудников.ПричинаИзмененияСостояния В (ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу),
		|													ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Перемещение))
		|	И НЕ(ОбщиеГрафики.ВидУчетаВремени = &ПоНочным И ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) = 0)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ОбозначениеВТабелеУчетаРабочегоВремени
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СотрудникиОрганизаций.Сотрудник КАК Сотрудник,
		|	СотрудникиОрганизаций.Сотрудник.Наименование КАК СотрудникНаименование,
		|	ЕСТЬNULL(ПосчитанноеВремя.Дней, 0) КАК Дней,
		|	ЕСТЬNULL(ПосчитанноеВремя.Часов, 0) КАК Часов,
		|	ЕСТЬNULL(ПосчитанноеВремя.ЧасовНочных, 0) КАК ЧасовНочных,
		|	ПосчитанноеВремя.ВидВремени КАК ВидВремени,
		|	ЕСТЬNULL(НормыРаботыПоОбщемуГрафику.ЧасовПоНорме, 0) КАК ЧасовПоНорме,
		|	ЕСТЬNULL(НормыРаботыПоОбщемуГрафику.ДнейПоНорме, 0) КАК ДнейПоНорме
		|ИЗ
		|	ВТСписокРаботников КАК СотрудникиОрганизаций
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							ДанныеПоДням.Сотрудник,
		|							ДанныеПоДням.ОбозначениеВТабелеУчетаРабочегоВремени КАК ВидВремени,
		|							СУММА(ДанныеПоДням.ОсновноеЗначениеПоДням) КАК Дней,
		|							СУММА(ДанныеПоДням.ОсновноеЗначениеПоЧасам) КАК Часов,
		|							СУММА(ДанныеПоДням.ОсновноеЗначениеПоНочным) КАК ЧасовНочных
		|						ИЗ 
		|							ВТ_ДанныеПоДням КАК ДанныеПоДням
		|						ГДЕ
		|							ЕСТЬNULL(ДанныеПоДням.ОбозначениеВТабелеУчетаРабочегоВремени, &ПустойКлассификатор) <> &ПустойКлассификатор
		|							И ДанныеПоДням.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени <> &ПочасовыеОтклонения
		|						СГРУППИРОВАТЬ ПО
		|							ДанныеПоДням.Сотрудник,
		|							ДанныеПоДням.ОбозначениеВТабелеУчетаРабочегоВремени) КАК ПосчитанноеВремя
		|		ПО СотрудникиОрганизаций.Сотрудник = ПосчитанноеВремя.Сотрудник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТНормыРаботыПоОбщемуГрафику КАК НормыРаботыПоОбщемуГрафику
		|		ПО НормыРаботыПоОбщемуГрафику.Сотрудник = СотрудникиОрганизаций.Сотрудник
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК СводныеТабеля
		|		ПО (СводныеТабеля.Сотрудник = СотрудникиОрганизаций.Сотрудник)
		|			И СводныеТабеля.Организация = &ГоловнаяОрганизация
		|			И ПосчитанноеВремя.ВидВремени = СводныеТабеля.ВидИспользованияРабочегоВремени
		|			И (СводныеТабеля.Регистратор ССЫЛКА Документ.ТабельУчетаРабочегоВремениОрганизации)
		|			И (СводныеТабеля.Регистратор <> &ДокументСсылка)
		|			И (СводныеТабеля.Период МЕЖДУ &Месяц И КОНЕЦПЕРИОДА(&Месяц, МЕСЯЦ))
		|			И СводныеТабеля.ВидВремениОтсутствуетВДокументе = ЛОЖЬ
		|
		|ГДЕ
		|	ВЫБОР
		|		КОГДА (НЕ ПосчитанноеВремя.Часов ЕСТЬ NULL) И СводныеТабеля.Сотрудник ЕСТЬ NULL
		|			ТОГДА ИСТИНА
		|		КОГДА ПосчитанноеВремя.Часов ЕСТЬ NULL И СводныеТабеля.Сотрудник ЕСТЬ NULL
		|			ТОГДА &ВключатьВРезультатПустыеЗаписи
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникНаименование,
		|	Сотрудник,
		|	ВидВремени";

		
	Иначе
		// Заполнение с разбивкой по дням.
		
		ЗапросАвтоЗаполнения.Текст = ЗапросАвтоЗаполнения.Текст + "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТОсновныеНачисления.ДатаТабеля КАК ДатаТабеля,
		|	ВТОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ВТОсновныеНачисления.ГрафикРаботы,
		|	ВТОсновныеНачисления.ВидРасчета,
		|	ВТОсновныеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ОбозначениеВТабелеУчетаРабочегоВремени,
		|	ВТОсновныеНачисления.ВидВремени,
		|	ВТОсновныеНачисления.ПериодДействияНачало,
		|	ВТОсновныеНачисления.ПериодДействияКонец,
		|	ВТОсновныеНачисления.ВремяЗаДень,
		|	ВТОсновныеНачисления.ВидУчетаВремени,
		|	ВТОсновныеНачисления.ЧасовОтклонение
		|
		|ПОМЕСТИТЬ ВТОтредактированныеНачисления
		|ИЗ
		|	ВТОсновныеНачисления КАК ВТОсновныеНачисления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТОсновныеНачисления.ДатаТабеля,
		|	ВТОсновныеНачисления.Сотрудник,
		|	ЕСТЬNULL(ГрафикиРаботы.ГрафикРаботы, РаботникиОрганизаций.ГрафикРаботы),
		|	""ПланируемаяЯвка"",
		|	NULL,
		|	NULL,
		|	ВТОсновныеНачисления.ПериодДействияНачало,
		|	ВТОсновныеНачисления.ПериодДействияКонец,
		|	0,
		|	ВТОсновныеНачисления.ВидУчетаВремени,
		|	СУММА(ВЫБОР
		|			КОГДА ВТОсновныеНачисления.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЧасовоеНеотработанное)
		|				ТОГДА ВТОсновныеНачисления.ВремяЗаДень
		|			ИНАЧЕ 0
		|		КОНЕЦ)
		|ИЗ
		|	ВТОсновныеНачисления КАК ВТОсновныеНачисления
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОсновныеНачисления КАК Явки
		|		ПО (Явки.ДатаТабеля = ВТОсновныеНачисления.ДатаТабеля)
		|			И (Явки.Сотрудник = ВТОсновныеНачисления.Сотрудник)
		|			И (Явки.ГрафикРаботы = ВТОсновныеНачисления.ГрафикРаботы)
		|			И (Явки.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ОтработанноеВПределахНормы))
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КадровыеДанныеРаботников КАК РаботникиОрганизаций
		|		ПО ВТОсновныеНачисления.Сотрудник = РаботникиОрганизаций.Сотрудник
		|			И ВТОсновныеНачисления.ДатаТабеля = РаботникиОрганизаций.ДатаТабеля
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикиРаботыПоВидамВремени КАК ГрафикиРаботы
		|		ПО (ГрафикиРаботы.ГрафикРаботы = ВТОсновныеНачисления.ГрафикРаботы)
		|			И (ГрафикиРаботы.Дата = ВТОсновныеНачисления.ДатаТабеля)
		|			И (ГрафикиРаботы.ВидУчетаВремени = ВТОсновныеНачисления.ВидУчетаВремени)
		|ГДЕ
		|	Явки.Сотрудник ЕСТЬ NULL 
		|	И ВТОсновныеНачисления.ВидВремени В (ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ОтработанноеСверхНормы), ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЧасовоеНеотработанное))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТОсновныеНачисления.ДатаТабеля,
		|	ВТОсновныеНачисления.Сотрудник,
		|	ЕСТЬNULL(ГрафикиРаботы.ГрафикРаботы, РаботникиОрганизаций.ГрафикРаботы),
		|	ВТОсновныеНачисления.ПериодДействияНачало,
		|	ВТОсновныеНачисления.ПериодДействияКонец,
		|	ВТОсновныеНачисления.ВидУчетаВремени
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДатаТабеля
		|;
		|
		|ВЫБРАТЬ
		|	ДниСотрудников.Сотрудник КАК Сотрудник,
		|	ДниСотрудников.ДатаТабеля КАК Дата,
		|
		|	ВЫБОР
		|		КОГДА ДневныеНеявки.ВидРасчета ЕСТЬ НЕ NULL 
		|				И ДневныеНеявки.ВидРасчета <> ""ПланируемаяЯвка""
		|				И (ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) > 0
		|					ИЛИ ДневныеНеявки.ВидВремени В (&ВидыВремениУчитываемыеВВыходные)
		|						И (НЕ ДневныеНеявки.ОбозначениеВТабелеУчетаРабочеговремени = &КлассификаторНЧ))
		|			ТОГДА ДневныеНеявки.ОбозначениеВТабелеУчетаРабочеговремени
		|		КОГДА НЕ ВТСостояниеСотрудников.ВидВремени ЕСТЬ NULL ТОГДА
		|			ВЫБОР 
		|				КОГДА ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) = 0 
		|					ТОГДА &Выходной
		|				КОГДА ОбщиеГрафики.ВидУчетаВремени = &ПоНочным
		|					ТОГДА NULL
		|				ИНАЧЕ ВТСостояниеСотрудников.ВидВремени
		|			КОНЕЦ
		|		КОГДА ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ОбщиеГрафики.ВидУчетаВремени = &ПоЧасам
		|						ТОГДА ЕСТЬNULL(ПлановыеНачисленияСотрудников.КлассификаторВидаВремени, &КлассификаторЯ)
		|					КОГДА ОбщиеГрафики.ВидУчетаВремени = &ПоНочным
		|						ТОГДА &КлассификаторНЧ
		|			КОНЕЦ
		|	КОНЕЦ КАК ВидВремени,
		|
		|	ВЫБОР
		|		КОГДА ДневныеНеявки.ВидРасчета ЕСТЬ НЕ NULL 
		|				И ДневныеНеявки.ВидРасчета <> ""ПланируемаяЯвка""
		|				И (ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) > 0
		|					ИЛИ ДневныеНеявки.ВидВремени В (&ВидыВремениУчитываемыеВВыходные)
		|						И (НЕ ДневныеНеявки.ОбозначениеВТабелеУчетаРабочеговремени = &КлассификаторНЧ))
		|			ТОГДА ДневныеНеявки.ВидРасчета.ОбозначениеВТабелеУчетаРабочеговремени.РабочееВремя
		|
		|		КОГДА НЕ ВТСостояниеСотрудников.ВидВремени ЕСТЬ NULL ТОГДА
		|			ВЫБОР 
		|				КОГДА ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) = 0 
		|					ТОГДА ЛОЖЬ
		|				ИНАЧЕ ЕСТЬNULL(ВТСостояниеСотрудников.ВидВремени.РабочееВремя, ЛОЖЬ)
		|			КОНЕЦ
		|					
		|		КОГДА ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) > 0
		|			ТОГДА ВЫБОР
		|				КОГДА ОбщиеГрафики.ВидУчетаВремени = &ПоЧасам
		|					ТОГДА ЕСТЬNULL(ПлановыеНачисленияСотрудников.КлассификаторВидаВремени.РабочееВремя, ИСТИНА)
		|				КОГДА ОбщиеГрафики.ВидУчетаВремени = &ПоНочным
		|					ТОГДА ИСТИНА
		|				КОНЕЦ
		|	КОНЕЦ КАК РабочееВремя,
		|
		|	ВЫБОР
		|		КОГДА (НЕ ДневныеНеявки.ВремяЗаДень ЕСТЬ NULL )
		|				И ДневныеНеявки.ВидРасчета <> ""ПланируемаяЯвка""
		|				И (ДневныеНеявки.ВремяЗаДень > 0
		|					ИЛИ ДневныеНеявки.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомДо3ЛетБезОплаты))
		|			ТОГДА ДневныеНеявки.ВремяЗаДень
		|		КОГДА (НЕ ДневныеНеявки.ВидРасчета ЕСТЬ NULL )
		|				И ДневныеНеявки.ВидРасчета <> ""ПланируемаяЯвка""
		|				И (ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) > 0
		|					ИЛИ ДневныеНеявки.ВидВремени В (&ВидыВремениУчитываемыеВВыходные)
		|						И (НЕ ДневныеНеявки.ОбозначениеВТабелеУчетаРабочеговремени = &КлассификаторНЧ))
		|			ТОГДА ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) - ДневныеНеявки.ЧасовОтклонение
		|		КОГДА ДневныеНеявки.ВидРасчета = ""ПланируемаяЯвка""
		|			ТОГДА ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) - ДневныеНеявки.ЧасовОтклонение
		|		КОГДА ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) > 0
		|			ТОГДА ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0)
		|	КОНЕЦ КАК ОсновноеЗначение
		|	
		|	ПОМЕСТИТЬ ВТ_ДниСотрудников
		|		ИЗ
		|			ВТ_КадровыеДанныеРаботников КАК ДниСотрудников
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОтредактированныеНачисления КАК ДневныеНеявки
		|				ПО ДниСотрудников.Сотрудник = ДневныеНеявки.Сотрудник
		|					И ДниСотрудников.ДатаТабеля = ДневныеНеявки.ДатаТабеля
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСостояниеСотрудников
		|				ПО ВТСостояниеСотрудников.Сотрудник = ДниСотрудников.Сотрудник
		|					И ДниСотрудников.ДатаТабеля МЕЖДУ ВТСостояниеСотрудников.ПериодНачало И ВТСостояниеСотрудников.ПериодКонец
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикиРаботыПоВидамВремени КАК ОбщиеГрафики
		|				ПО (ОбщиеГрафики.ГрафикРаботы = ДниСотрудников.ГрафикРаботы)
		|					И ДниСотрудников.ДатаТабеля = ОбщиеГрафики.Дата
		|					И (ОбщиеГрафики.ВидУчетаВремени В (&ПоНочным, &ПоЧасам))
		|					И (ДневныеНеявки.ВидРасчета ЕСТЬ NULL 
		|						ИЛИ ДневныеНеявки.ВидРасчета = ""ПланируемаяЯвка""
		|						ИЛИ ОбщиеГрафики.ВидУчетаВремени = ДневныеНеявки.ВидУчетаВремени
		|						ИЛИ ОбщиеГрафики.ВидУчетаВремени = &ПоЧасам
		|							И ДневныеНеявки.ВидУчетаВремени = &ПоДням)
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПлановыеНачисленияСотрудников КАК ПлановыеНачисленияСотрудников
		|				ПО ДниСотрудников.Сотрудник = ПлановыеНачисленияСотрудников.Сотрудник
		|					И ДниСотрудников.ДатаТабеля = ПлановыеНачисленияСотрудников.ДатаТабеля
		|	ГДЕ
		|		ДниСотрудников.ПричинаИзмененияСостояния В (ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу),
		|															ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Перемещение))
		|		И НЕ(ОбщиеГрафики.ВидУчетаВремени В (&ПоНочным)
		|						И ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) = 0)
		|		И (ДневныеНеявки.ВидРасчета ЕСТЬ НЕ NULL 
		|				ИЛИ ДневныеНеявки.ВидРасчета ЕСТЬ NULL 
		|					И ЕСТЬNULL(ОбщиеГрафики.ОсновноеЗначение, 0) > 0)
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	Сотрудники.Сотрудник.Наименование КАК СотрудникНаименование,
		|	ДниСотрудников.Дата,
		|	ДЕНЬ(ДниСотрудников.Дата) КАК День,
		|	ДниСотрудников.ВидВремени КАК БукваВидаВремени,
		|	ДниСотрудников.ВидВремени.ЦифровойКод КАК ЦифровойКод,
		|	ДниСотрудников.ОсновноеЗначение,
		|	ЕСТЬNULL(НормыРаботыПоОбщемуГрафику.ЧасовПоНорме, 0) КАК ЧасовПоНорме,
		|	ЕСТЬNULL(НормыРаботыПоОбщемуГрафику.ДнейПоНорме, 0) КАК ДнейПоНорме,
		|	ВЫБОР
		|		КОГДА ДниСотрудников.ВидВремени = &КлассификаторЯ 
		|			ТОГДА 1
		|		КОГДА ДниСотрудников.РабочееВремя
		|			ТОГДА 2
		|		КОГДА ДниСотрудников.ВидВремени = &КлассификаторНЧ
		|			ТОГДА 3
		|		ИНАЧЕ 4
		|	КОНЕЦ КАК ПорядокСортировки
		|ИЗ
		|	ВТСписокРаботников КАК Сотрудники
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДниСотрудников КАК ДниСотрудников
		|		ПО (ДниСотрудников.ВидВремени ЕСТЬ НЕ NULL )
		|			И Сотрудники.Сотрудник = ДниСотрудников.Сотрудник
		|			И ДниСотрудников.ВидВремени.ВидВремени <> &ПочасовыеОтклонения
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК СводныеТабеля
		|		ПО ДниСотрудников.Сотрудник = СводныеТабеля.Сотрудник
		|			И ДниСотрудников.ВидВремени = СводныеТабеля.ВидИспользованияРабочегоВремени
		|			И СводныеТабеля.Организация = &ГоловнаяОрганизация
		|			И (СводныеТабеля.Регистратор <> &ДокументСсылка)
		|			И (СводныеТабеля.Период МЕЖДУ &Месяц И КОНЕЦПЕРИОДА(&Месяц, МЕСЯЦ))
		|			И (СводныеТабеля.ВЦеломЗаПериод ИЛИ СводныеТабеля.Период = ДниСотрудников.Дата)
		|			И СводныеТабеля.ВидВремениОтсутствуетВДокументе = ЛОЖЬ
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТНормыРаботыПоОбщемуГрафику КАК НормыРаботыПоОбщемуГрафику
		|		ПО ДниСотрудников.Сотрудник = НормыРаботыПоОбщемуГрафику.Сотрудник
		|
		|ГДЕ
		|	ВЫБОР
		|		КОГДА НЕ (ДниСотрудников.ВидВремени ЕСТЬ NULL) И СводныеТабеля.Сотрудник ЕСТЬ NULL
		|			ТОГДА ИСТИНА
		|		КОГДА ДниСотрудников.ВидВремени ЕСТЬ NULL И СводныеТабеля.Сотрудник ЕСТЬ NULL
		|			ТОГДА &ВключатьВРезультатПустыеЗаписи
		|		КОГДА ДниСотрудников.ВидВремени ЕСТЬ NULL И СводныеТабеля.Сотрудник ЕСТЬ NULL
		|			ТОГДА &ВключатьВРезультатПустыеЗаписи
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	СотрудникНаименование,
		|	Сотрудник,
		|	День,
		|	ПорядокСортировки,
		|	ЦифровойКод";
		
	КонецЕсли;
	      	 
	РезультатЗапроса = ЗапросАвтоЗаполнения.Выполнить();
	
	Если Сотрудник = Неопределено Тогда
		ОтработанноеВремя.Очистить();
		ОтработанноеВремяВЦеломЗаПериод.Очистить();
		Показатели.Очистить();
		РаспределениеНачислений.Очистить();
	КонецЕсли;

	Выборка = РезультатЗапроса.Выбрать();
	СтрокаТекущегоУровняСообщений = "";
	Если Выборка.Количество() > 0 Тогда
		
		Если СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ПоДням Тогда
			// по дням.
			
			ВведенныеТабеляПоДнямПоСотруднику = Новый Соответствие;
			Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
					
				ВведенныеТабеляПоДнямПоСотруднику.Очистить();
				Если ТекущаяСтрокаТабличнойЧасти = Неопределено Тогда
					СтрокаРасшифровкиПоДням = ОтработанноеВремя.Добавить();
				Иначе
					СтрокаРасшифровкиПоДням = ТекущаяСтрокаТабличнойЧасти;
					Для ИндексДня = 1 По 31 Цикл
						СтрокаРасшифровкиПоДням["ПервыйВидВремени" + Строка(ИндексДня)] = КлассификаторПустаяСсылка;
						СтрокаРасшифровкиПоДням["ВторойВидВремени" + Строка(ИндексДня)] = КлассификаторПустаяСсылка;
						СтрокаРасшифровкиПоДням["ТретийВидВремени" + Строка(ИндексДня)] = КлассификаторПустаяСсылка;
						СтрокаРасшифровкиПоДням["ЧетвертыйВидВремени" + Строка(ИндексДня)] = КлассификаторПустаяСсылка;
						СтрокаРасшифровкиПоДням["ПервыйЧасов" + Строка(ИндексДня)] = 0;
						СтрокаРасшифровкиПоДням["ВторойЧасов" + Строка(ИндексДня)] = 0;
						СтрокаРасшифровкиПоДням["ТретийЧасов" + Строка(ИндексДня)] = 0;
						СтрокаРасшифровкиПоДням["ЧетвертыйЧасов" + Строка(ИндексДня)] = 0;
					КонецЦикла;
				КонецЕсли;
				СтрокаРасшифровкиПоДням.Сотрудник = Выборка.Сотрудник;
				СтрокаРасшифровкиПоДням.ДнейПоНорме = Выборка.ДнейПоНорме;
				СтрокаРасшифровкиПоДням.ЧасовПоНорме = Выборка.ЧасовПоНорме;
				
				
				//Проверка Испытательный срок
					НаИспытСроке = Ложь;
						
						Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	ПриемНаРаботуВОрганизациюРаботникиОрганизации.ИспытательныйСрок,
						|	ПриемНаРаботуВОрганизациюРаботникиОрганизации.ДатаПриема
						|ИЗ
						|	Документ.ПриемНаРаботуВОрганизацию.РаботникиОрганизации КАК ПриемНаРаботуВОрганизациюРаботникиОрганизации
						|ГДЕ
						|	ПриемНаРаботуВОрганизациюРаботникиОрганизации.Сотрудник = &Сотрудник
						|	И ПриемНаРаботуВОрганизациюРаботникиОрганизации.ИспытательныйСрок > 0";

					//Запрос.УстановитьПараметр("Ссылка", Выборка.Приказ);
					Запрос.УстановитьПараметр("Сотрудник", Выборка.Сотрудник);

					Результат = Запрос.Выполнить();

					ВыборкаДетальныеЗаписи = Результат.Выбрать();

					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						
						ОкончаниеИспСрока = ДобавитьМесяц(ВыборкаДетальныеЗаписи.ДатаПриема, ВыборкаДетальныеЗаписи.ИспытательныйСрок);
						Если ОкончаниеИспСрока > ДатаНачалаПериода Тогда
							НаИспытСроке = Истина;
						Иначе
							НаИспытСроке = Ложь;
						КонецЕсли;	
						
						Если ОкончаниеИспСрока < ДатаОкончанияПериода Тогда
							ИспСрокЗаканчивается = Истина;
						Иначе
							ИспСрокЗаканчивается = Ложь;
						КонецЕсли;
						
					КонецЦикла;
                    //Проверка Испытательный срок
					
				Если Выборка.День <> NULL Тогда
					
					Пока Выборка.СледующийПоЗначениюПоля("День") Цикл
						
						ИндексЯчейкиВТаблице = Выборка.День;
						ИндексМассиваПриставок = 0;
						Пока Выборка.Следующий() Цикл 
							
							Если ИндексМассиваПриставок > 3 Тогда
								// На данный момент мы можем вводить только 4 вида времени в один день
								Прервать;
							КонецЕсли;
							НазваниеЯчейкиВБазе = МассивПриставок[ИндексМассиваПриставок]+"ВидВремени"+Строка(ИндексЯчейкиВТаблице);
							СтрокаРасшифровкиПоДням[НазваниеЯчейкиВБазе] = Выборка.БукваВидаВремени;
							НазваниеЯчейкиВБазе = МассивПриставок[ИндексМассиваПриставок]+"Часов"+Строка(ИндексЯчейкиВТаблице);
							СтрокаРасшифровкиПоДням[НазваниеЯчейкиВБазе] = Выборка.ОсновноеЗначение;
							
							//Испытательный срок
							Если НаИспытСроке = Истина И Выборка.БукваВидаВремени = Справочники.КлассификаторИспользованияРабочегоВремени.Работа Тогда
									Если ИспСрокЗаканчивается = Ложь Тогда
										НазваниеЯчейкиВБазе = МассивПриставок[ИндексМассиваПриставок]+"ВидВремени"+Строка(ИндексЯчейкиВТаблице);
										СтрокаРасшифровкиПоДням[НазваниеЯчейкиВБазе] = Справочники.КлассификаторИспользованияРабочегоВремени.НайтиПоРеквизиту("БуквенныйКод", "ЯИ");
										НазваниеЯчейкиВБазе = МассивПриставок[ИндексМассиваПриставок]+"Часов"+Строка(ИндексЯчейкиВТаблице);
										СтрокаРасшифровкиПоДням[НазваниеЯчейкиВБазе] = Выборка.ОсновноеЗначение;
									Иначе
										
										Если День(ОкончаниеИспСрока) > Выборка.День Тогда
											НазваниеЯчейкиВБазе = МассивПриставок[ИндексМассиваПриставок]+"ВидВремени"+Строка(ИндексЯчейкиВТаблице);
											СтрокаРасшифровкиПоДням[НазваниеЯчейкиВБазе] = Справочники.КлассификаторИспользованияРабочегоВремени.НайтиПоРеквизиту("БуквенныйКод", "ЯИ");
											НазваниеЯчейкиВБазе = МассивПриставок[ИндексМассиваПриставок]+"Часов"+Строка(ИндексЯчейкиВТаблице);
											СтрокаРасшифровкиПоДням[НазваниеЯчейкиВБазе] = Выборка.ОсновноеЗначение;
                                        КонецЕсли;
																			
									КонецЕсли;
									
							КонецЕсли;
							//Испытательный срок
							
							ИндексМассиваПриставок = ИндексМассиваПриставок + 1;
							
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
		Иначе
			// в целом за период
			СписокСотрудниковСНехваткойВидовВремени = Новый Соответствие;
			СписокДобавленныхКолонок = Новый Соответствие;
			Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
				КоличествоЗаписей = 1;
				Если ТекущаяСтрокаТабличнойЧасти = Неопределено Тогда
					СтрокаТабличнойЧасти = ОтработанноеВремяВЦеломЗаПериод.Добавить();
					
				Иначе
					СтрокаТабличнойЧасти = ТекущаяСтрокаТабличнойЧасти;
				КонецЕсли;
				// Очистка старых значений
				Для ИндексТекущейЗаписи = КоличествоЗаписей По 15 Цикл
					СтрокаТабличнойЧасти["ВидВремени"+Строка(ИндексТекущейЗаписи)] = КлассификаторПустаяСсылка;
					СтрокаТабличнойЧасти["Дней" + Строка(ИндексТекущейЗаписи)] = 0;
					СтрокаТабличнойЧасти["Часов" + Строка(ИндексТекущейЗаписи)] = 0;
				КонецЦикла;
				СтрокаТабличнойЧасти.Сотрудник = Выборка.Сотрудник;
				СтрокаТабличнойЧасти.ДнейПоНорме = Выборка.ДнейПоНорме;
				СтрокаТабличнойЧасти.ЧасовПоНорме = Выборка.ЧасовПоНорме;
				Пока Выборка.Следующий() Цикл
					Если Выборка.ВидВремени = NULL Тогда
						
						Если КоличествоЗаписей < 16 Тогда
							
							ЭлементСпискаКолонок = КолонкиСводногоТабеля.Найти(КлассификаторЯвка, "ВидВремени");
							Если ЭлементСпискаКолонок = Неопределено Тогда
								Если КолонкиСводногоТабеля.Количество() > 14 Тогда
									СписокСотрудниковСНехваткойВидовВремени.Вставить(Выборка.Сотрудник, 
									"" + СписокСотрудниковСНехваткойВидовВремени.Получить(Выборка.Сотрудник) + ", " + КлассификаторЯвка);
									ИндексКолонки = -1;
								Иначе
									КолонкиСводногоТабеля.Добавить().ВидВремени = КлассификаторЯвка;
									СписокДобавленныхКолонок.Вставить(КлассификаторЯвка, "");
									ИндексКолонки = КолонкиСводногоТабеля.Количество();
								КонецЕсли;
							Иначе
								ИндексКолонки = КолонкиСводногоТабеля.Индекс(ЭлементСпискаКолонок) + 1;
							КонецЕсли;
							
							Если ИндексКолонки > -1 Тогда
								СтрокаТабличнойЧасти["ВидВремени" + Строка(ИндексКолонки)] = КлассификаторЯвка;
								СтрокаТабличнойЧасти["Дней" + Строка(ИндексКолонки)] = Выборка.Дней;
								СтрокаТабличнойЧасти["Часов" + Строка(ИндексКолонки)] = Выборка.Часов;
								КоличествоЗаписей = КоличествоЗаписей + 1;
							КонецЕсли;
						КонецЕсли;
						
						Если КоличествоЗаписей < 16  И Выборка.ЧасовНочных > 0 Тогда
							
							ЭлементСпискаКолонок = КолонкиСводногоТабеля.Найти(КлассификаторНочныеЧасы, "ВидВремени");
							Если ЭлементСпискаКолонок = Неопределено Тогда
								Если КолонкиСводногоТабеля.Количество() > 14 Тогда
									СписокСотрудниковСНехваткойВидовВремени.Вставить(Выборка.Сотрудник, 
									"" + СписокСотрудниковСНехваткойВидовВремени.Получить(Выборка.Сотрудник) + ", " + КлассификаторНочныеЧасы);
									ИндексКолонки = -1;
								Иначе
									КолонкиСводногоТабеля.Добавить().ВидВремени = КлассификаторНочныеЧасы;
									СписокДобавленныхКолонок.Вставить(КлассификаторНочныеЧасы, "");
									ИндексКолонки = КолонкиСводногоТабеля.Количество();
								КонецЕсли;
							Иначе
								ИндексКолонки = КолонкиСводногоТабеля.Индекс(ЭлементСпискаКолонок) + 1;
							КонецЕсли;
							
							Если ИндексКолонки > -1 Тогда
								СтрокаТабличнойЧасти["ВидВремени"+Строка(ИндексКолонки)] = КлассификаторНочныеЧасы;
								СтрокаТабличнойЧасти["Часов" + Строка(ИндексКолонки)] = Выборка.ЧасовНочных;
								КоличествоЗаписей = КоличествоЗаписей + 1;
							КонецЕсли;
						КонецЕсли;
					Иначе
						Если КоличествоЗаписей < 16 Тогда
							
							ЭлементСпискаКолонок = КолонкиСводногоТабеля.Найти(Выборка.ВидВремени, "ВидВремени");
							Если ЭлементСпискаКолонок = Неопределено Тогда
								Если КолонкиСводногоТабеля.Количество() > 14 Тогда
									СписокСотрудниковСНехваткойВидовВремени.Вставить(Выборка.Сотрудник, 
									"" + СписокСотрудниковСНехваткойВидовВремени.Получить(Выборка.Сотрудник) + ", " + Выборка.ВидВремени);
									ИндексКолонки = -1;
								Иначе
									КолонкиСводногоТабеля.Добавить().ВидВремени = Выборка.ВидВремени;
									СписокДобавленныхКолонок.Вставить(Выборка.ВидВремени, "");
									ИндексКолонки = КолонкиСводногоТабеля.Количество();
								КонецЕсли;
							Иначе
								ИндексКолонки = КолонкиСводногоТабеля.Индекс(ЭлементСпискаКолонок) + 1;
							КонецЕсли;
							
							Если ИндексКолонки > -1 Тогда
								СтрокаТабличнойЧасти["ВидВремени"+Строка(ИндексКолонки)] = Выборка.ВидВремени;
								СтрокаТабличнойЧасти["Дней" + Строка(ИндексКолонки)] = Выборка.Дней;
								СтрокаТабличнойЧасти["Часов" + Строка(ИндексКолонки)] = Выборка.Часов;
								КоличествоЗаписей = КоличествоЗаписей + 1;
							КонецЕсли;
						КонецЕсли;
						
						Если КоличествоЗаписей < 16  И Выборка.ЧасовНочных > 0 Тогда
							
							ЭлементСпискаКолонок = КолонкиСводногоТабеля.Найти(КлассификаторНочныеЧасы, "ВидВремени");
							Если ЭлементСпискаКолонок = Неопределено Тогда
								Если КолонкиСводногоТабеля.Количество() > 14 Тогда
									СписокСотрудниковСНехваткойВидовВремени.Вставить(Выборка.Сотрудник, 
									"" + СписокСотрудниковСНехваткойВидовВремени.Получить(Выборка.Сотрудник) + ", " + КлассификаторНочныеЧасы);
									ИндексКолонки = -1;
								Иначе
									КолонкиСводногоТабеля.Добавить().ВидВремени = КлассификаторНочныеЧасы;
									СписокДобавленныхКолонок.Вставить(КлассификаторНочныеЧасы, "");
									ИндексКолонки = КолонкиСводногоТабеля.Количество();
								КонецЕсли;
							Иначе
								ИндексКолонки = КолонкиСводногоТабеля.Индекс(ЭлементСпискаКолонок) + 1;
							КонецЕсли;
							
							Если ИндексКолонки > -1 Тогда
								СтрокаТабличнойЧасти["ВидВремени"+Строка(ИндексКолонки)] = КлассификаторНочныеЧасы;
								СтрокаТабличнойЧасти["Часов" + Строка(ИндексКолонки)] = СтрокаТабличнойЧасти["Часов" + Строка(ИндексКолонки)] + Выборка.ЧасовНочных;
								КоличествоЗаписей = КоличествоЗаписей + 1;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			КоличествоСотрудниковВСпискеНехваткиВидовВремени = СписокСотрудниковСНехваткойВидовВремени.Количество();
			Если КоличествоСотрудниковВСпискеНехваткиВидовВремени > 0 Тогда
				
				#Если Клиент Тогда
					СтрокаТекущегоУровняСообщений = ОбработкаКомментариев.ДобавитьСообщение("Указанным сотрудникам выведены не все виды времени:", Перечисления.ВидыСообщений.ВажнаяИнформация,,СтрокаВерхнегоУровняСообщений );
				#Иначе
				#КонецЕсли
				
				КоличествоВыведенныхСотрудников = 0;
				Для Каждого ЭлементСписка Из СписокСотрудниковСНехваткойВидовВремени Цикл
					СтрокаСотрудника = "" + ЭлементСписка.Ключ + " (" + Сред(ЭлементСписка.Значение, 3) + ")";
					#Если Клиент Тогда
						ОбработкаКомментариев.ДобавитьСообщение(СтрокаСотрудника, Перечисления.ВидыСообщений.ПустаяСсылка(),, СтрокаТекущегоУровняСообщений);
					#Иначе
					#КонецЕсли
					КоличествоВыведенныхСотрудников = КоличествоВыведенныхСотрудников + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;	
		
	// Запрос для вывода сообщения о незаполненных сотрудниках
	ЗапросАвтоЗаполнения.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	РегистрТабеля.Сотрудник.Наименование КАК ПредставлениеСотрудника,
	|	РегистрТабеля.Регистратор КАК ДокументОснование,
	|	ПРЕДСТАВЛЕНИЕ(РегистрТабеля.Регистратор) КАК ПредставлениеДокумента,
	|	РегистрТабеля.Сотрудник,
	|	РегистрТабеля.Регистратор КАК ВведенныйДокумент
	|ИЗ
	|	РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК РегистрТабеля
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокРаботников КАК СписокРаботников
	|		ПО РегистрТабеля.Сотрудник = СписокРаботников.Сотрудник
	|ГДЕ
	|	РегистрТабеля.Организация = &ГоловнаяОрганизация
	|	И РегистрТабеля.Регистратор <> &ДокументСсылка
	|	И РегистрТабеля.Период МЕЖДУ &Месяц И КОНЕЦПЕРИОДА(&Месяц, МЕСЯЦ)
	|	И ВЫБОР
	|		КОГДА РегистрТабеля.ВЦеломЗаПериод
	|			ТОГДА ИСТИНА
	|		КОГДА НЕ РегистрТабеля.ВЦеломЗаПериод И РегистрТабеля.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|	И РегистрТабеля.ВидВремениОтсутствуетВДокументе = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПредставлениеСотрудника
	|";
	Выборка = ЗапросАвтоЗаполнения.Выполнить().Выбрать();
	Если Выборка.Количество() > 0 Тогда
		
		КоличествоВыведенныхДокументов = 0;
		#Если Клиент Тогда
			СтрокаТекущегоУровняСообщений = ОбработкаКомментариев.ДобавитьСообщение("На следующих сотрудников уже введены документы учета отработанного времени в этом периоде:", Перечисления.ВидыСообщений.ВажнаяИнформация, ,СтрокаВерхнегоУровняСообщений );
		#Иначе
		#КонецЕсли
		Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
			
			#Если Клиент Тогда
				СтрокаУровняСотрудника = ОбработкаКомментариев.ДобавитьСообщение(Выборка.ПредставлениеСотрудника, Перечисления.ВидыСообщений.Информация,, СтрокаТекущегоУровняСообщений);
			#Иначе
			#КонецЕсли
			
			Пока Выборка.Следующий() Цикл
				#Если Клиент Тогда
					РасшифровкаКомментария = Новый Массив;
					
					РасшифровкаКомментария.Добавить(Новый Структура("Представление, Расшифровка", Выборка.ПредставлениеДокумента, Выборка.ДокументОснование));
					ОбработкаКомментариев.ДобавитьСообщение("", Перечисления.ВидыСообщений.ПустаяСсылка(), РасшифровкаКомментария, СтрокаУровняСотрудника);
				#Иначе
				#КонецЕсли
				КоличествоВыведенныхДокументов = КоличествоВыведенныхДокументов + 1;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;

	#Если Клиент Тогда
		Если СтрокаТекущегоУровняСообщений <> "" Тогда
			ОбработкаКомментариев.ПоказатьСообщения();
		КонецЕсли;
	#Иначе
	#КонецЕсли

	Если ИспользоватьПоказатели Тогда
	
		Если Сотрудник <> Неопределено Тогда
			
			СтруктураПоиска = Новый Структура("Сотрудник", Сотрудник);
			
			Если СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ВЦеломЗаПериод Тогда
				НайденныеСтроки = ОтработанноеВремяВЦеломЗаПериод.НайтиСтроки(СтруктураПоиска);
			Иначе
				НайденныеСтроки = ОтработанноеВремя.НайтиСтроки(СтруктураПоиска);
			КонецЕсли;
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				АвтозаполнениеПоказателей(Сотрудник);
			КонецЦикла;
		Иначе
			АвтозаполнениеПоказателей(Неопределено);
		КонецЕсли;
	
	КонецЕсли;

	Возврат Истина;

КонецФункции // Автозаполнение()

// Процедура выполняет автозаполнение табличной части Показатели 
//
Процедура АвтозаполнениеПоказателей(Сотрудник = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	
	МассивВозможностейИзменения = Новый Массив;
	МассивВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.ИзменяетсяПриРасчете);
	МассивВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.ВводитсяПриРасчете);
	МассивВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете);
	
	Запрос.УстановитьПараметр("МассивВозможностейИзменения", МассивВозможностейИзменения);
	
	// определим список работников, для которых необходимо получить показатели расчета
	Если Сотрудник <> Неопределено Тогда

		Запрос.УстановитьПараметр("Сотрудник", Сотрудник);

		Запрос.Текст = "
		|ВЫБРАТЬ
		|	&Сотрудник КАК Сотрудник
		|
		|ПОМЕСТИТЬ ВТ_СписокСотрудников
		|";
		
	Иначе

		Если СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ВЦеломЗаПериод Тогда
			ТаблицаРаботников = ОтработанноеВремяВЦеломЗаПериод.Выгрузить(, "Сотрудник");
		Иначе
			ТаблицаРаботников = ОтработанноеВремя.Выгрузить(, "Сотрудник");
		КонецЕсли;

		Запрос.УстановитьПараметр("ТаблицаРаботников", ТаблицаРаботников);
	
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Работники.Сотрудник КАК Сотрудник
		|
		|ПОМЕСТИТЬ ВТ_СписокСотрудников
		|ИЗ
		|	&ТаблицаРаботников КАК Работники
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|";
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	РаботникиОрганизации.Должность КАК Должность,
	|	РаботникиОрганизации.ТарифныйРазряд КАК ТарифныйРазряд,
	|   РаботникиОрганизации.Период КАК Период
	|
	|ПОМЕСТИТЬ ВТ_РаботникиОрганизацииВсе
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ПериодРегистрации,
	|				Организация = &ГоловнаяОрганизация
	|				И (Сотрудник) В (ВЫБРАТЬ Сотрудник ИЗ ВТ_СписокСотрудников)) КАК РаботникиОрганизации
	|ГДЕ
	|	РаботникиОрганизации.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|
	|ОБЪЕДИНИТЬ // без повторяющихся записей
	|
	|ВЫБРАТЬ
	|	РаботникиОрганизации.Сотрудник,
	|	РаботникиОрганизации.ПодразделениеОрганизации,
	|	РаботникиОрганизации.Должность,
	|	РаботникиОрганизации.ТарифныйРазряд,
	|   РаботникиОрганизации.Период
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокСотрудников КАК СписокСотрудников
	|		ПО РаботникиОрганизации.Сотрудник = СписокСотрудников.Сотрудник
	|
	|ГДЕ
	|	РаботникиОрганизации.Организация = &ГоловнаяОрганизация
	|	И РаботникиОрганизации.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|ВЫБРАТЬ
	|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	РаботникиОрганизации.Должность КАК Должность,
	|	РаботникиОрганизации.ТарифныйРазряд КАК ТарифныйРазряд,
	|	РаботникиОрганизации.Период
	|
	|ПОМЕСТИТЬ ВТ_РаботникиОрганизации
	|ИЗ
	|	ВТ_РаботникиОрганизацииВсе КАК РаботникиОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РаботникиОрганизацииВсе КАК РаботникиОрганизацииСлед
	|			ПО РаботникиОрганизации.Сотрудник = РаботникиОрганизацииСлед.Сотрудник
	|ГДЕ
	|	РаботникиОрганизации.Период > РаботникиОрганизацииСлед.Период
	|;
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|   ПлановыеНачисления.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.ВидРасчетаЗавершения
	|		ИНАЧЕ ПлановыеНачисления.ВидРасчета
	|	КОНЕЦ КАК ВидРасчета,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.Показатель1Завершения
	|		ИНАЧЕ ПлановыеНачисления.Показатель1
	|	КОНЕЦ КАК Показатель1,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.Валюта1Завершения
	|		ИНАЧЕ ПлановыеНачисления.Валюта1
	|	КОНЕЦ КАК Валюта1,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.Показатель2Завершения
	|		ИНАЧЕ ПлановыеНачисления.Показатель2
	|	КОНЕЦ КАК Показатель2,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.Валюта2Завершения
	|		ИНАЧЕ ПлановыеНачисления.Валюта2
	|	КОНЕЦ КАК Валюта2,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.Показатель3Завершения
	|		ИНАЧЕ ПлановыеНачисления.Показатель3
	|	КОНЕЦ КАК Показатель3,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.Валюта3Завершения
	|		ИНАЧЕ ПлановыеНачисления.Валюта3
	|	КОНЕЦ КАК Валюта3,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.Показатель4Завершения
	|		ИНАЧЕ ПлановыеНачисления.Показатель4
	|	КОНЕЦ КАК Показатель4,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.Валюта4Завершения
	|		ИНАЧЕ ПлановыеНачисления.Валюта4
	|	КОНЕЦ КАК Валюта4,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.Показатель5Завершения
	|		ИНАЧЕ ПлановыеНачисления.Показатель5
	|	КОНЕЦ КАК Показатель5,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.Валюта5Завершения
	|		ИНАЧЕ ПлановыеНачисления.Валюта5
	|	КОНЕЦ КАК Валюта5,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.Показатель6Завершения
	|		ИНАЧЕ ПлановыеНачисления.Показатель6
	|	КОНЕЦ КАК Показатель6,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.Валюта6Завершения
	|		ИНАЧЕ ПлановыеНачисления.Валюта6
	|	КОНЕЦ КАК Валюта6
	|
	|ПОМЕСТИТЬ ВТ_ПлановыеРасчеты
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|				&ПериодРегистрации,
	|				Организация = &ГоловнаяОрганизация
	|				И (Сотрудник) В (ВЫБРАТЬ Сотрудник ИЗ ВТ_СписокСотрудников)) КАК ПлановыеНачисления
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.ДействиеЗавершения
	|		ИНАЧЕ ПлановыеНачисления.Действие
	|	КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеНачисления.Сотрудник КАК Сотрудник,
	|	ПлановыеНачисления.ВидРасчета КАК ВидРасчета,
	|	
	|	ПлановыеНачисления.Показатель1,
	|	ПлановыеНачисления.Валюта1,
	|	
	|	ПлановыеНачисления.Показатель2,
	|	ПлановыеНачисления.Валюта2,
	|	
	|	ПлановыеНачисления.Показатель3,
	|	ПлановыеНачисления.Валюта3,
	|	
	|	ПлановыеНачисления.Показатель4,
	|	ПлановыеНачисления.Валюта4,
	|	
	|	ПлановыеНачисления.Показатель5,
	|	ПлановыеНачисления.Валюта5,
	|	
	|	ПлановыеНачисления.Показатель6,
	|	ПлановыеНачисления.Валюта6
	|
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокСотрудников КАК СписокСотрудников
	|		ПО ПлановыеНачисления.Сотрудник = СписокСотрудников.Сотрудник
	|
	|ГДЕ
	|	ПлановыеНачисления.Организация = &ГоловнаяОрганизация
	|	И ПлановыеНачисления.Период > &ПериодРегистрации И ПлановыеНачисления.Период <= &КонецПериодаРегистрации
	|	И ПлановыеНачисления.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеНачисления.Сотрудник КАК Сотрудник,
	|	ПлановыеНачисления.ВидРасчетаЗавершения КАК ВидРасчета,
	|
	|	ПлановыеНачисления.Показатель1Завершения КАК Показатель1,
	|	ПлановыеНачисления.Валюта1Завершения КАК Валюта1,
	|
	|	ПлановыеНачисления.Показатель2Завершения КАК Показатель2,
	|	ПлановыеНачисления.Валюта2Завершения КАК Валюта2,
	|
	|	ПлановыеНачисления.Показатель3Завершения КАК Показатель3,
	|	ПлановыеНачисления.Валюта3Завершения КАК Валюта3,
	|
	|	ПлановыеНачисления.Показатель4Завершения КАК Показатель4,
	|	ПлановыеНачисления.Валюта4Завершения КАК Валюта4,
	|
	|	ПлановыеНачисления.Показатель5Завершения КАК Показатель5,
	|	ПлановыеНачисления.Валюта5Завершения КАК Валюта5,
	|
	|	ПлановыеНачисления.Показатель6Завершения КАК Показатель6,
	|	ПлановыеНачисления.Валюта6Завершения КАК Валюта6
	|
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокСотрудников КАК СписокСотрудников
	|		ПО ПлановыеНачисления.Сотрудник = СписокСотрудников.Сотрудник
	|ГДЕ
	|	ПлановыеНачисления.Организация = &ГоловнаяОрганизация
	|	И ПлановыеНачисления.ПериодЗавершения МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|	И ПлановыеНачисления.ДействиеЗавершения <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
	|	НадбавкиШР.ВидНадбавки КАК ВидРасчета,
	|
	|	НадбавкиШР.Показатель1 КАК Показатель1,
	|	НадбавкиШР.Валюта1 КАК Валюта1,
	|
	|	НадбавкиШР.Показатель2 КАК Показатель2,
	|	НадбавкиШР.Валюта2 КАК Валюта2,
	|
	|	НадбавкиШР.Показатель3 КАК Показатель3,
	|	НадбавкиШР.Валюта3 КАК Валюта3,
	|
	|	НадбавкиШР.Показатель4 КАК Показатель4,
	|	НадбавкиШР.Валюта4 КАК Валюта4,
	|
	|	НадбавкиШР.Показатель5 КАК Показатель5,
	|	НадбавкиШР.Валюта5 КАК Валюта5,
	|
	|	НадбавкиШР.Показатель6 КАК Показатель6,
	|	НадбавкиШР.Валюта6 КАК Валюта6
	|	
	|ИЗ
	|	ВТ_РаботникиОрганизации КАК РаботникиОрганизации
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций.СрезПоследних(
	|				&ПериодРегистрации,
	|				(ПодразделениеОрганизации, Должность, ТарифныйРазряд) В (ВЫБРАТЬ
	|																			ПодразделениеОрганизации,
	|																			Должность,
	|																			ТарифныйРазряд
	|																		ИЗ
	|																			ВТ_РаботникиОрганизации)) КАК НадбавкиШР
	|		ПО РаботникиОрганизации.ПодразделениеОрганизации = НадбавкиШР.ПодразделениеОрганизации
	|			И РаботникиОрганизации.Должность = НадбавкиШР.Должность
	|			И РаботникиОрганизации.ТарифныйРазряд = НадбавкиШР.ТарифныйРазряд
	|ГДЕ
	|	НадбавкиШР.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РаботникиОрганизации.Сотрудник,
	|	НадбавкиШР.ВидНадбавки КАК ВидРасчета,
	|
	|	НадбавкиШР.Показатель1 КАК Показатель1,
	|	НадбавкиШР.Валюта1 КАК Валюта1,
	|
	|	НадбавкиШР.Показатель2 КАК Показатель2,
	|	НадбавкиШР.Валюта2 КАК Валюта2,
	|
	|	НадбавкиШР.Показатель3 КАК Показатель3,
	|	НадбавкиШР.Валюта3 КАК Валюта3,
	|
	|	НадбавкиШР.Показатель4 КАК Показатель4,
	|	НадбавкиШР.Валюта4 КАК Валюта4,
	|
	|	НадбавкиШР.Показатель5 КАК Показатель5,
	|	НадбавкиШР.Валюта5 КАК Валюта5,
	|
	|	НадбавкиШР.Показатель6 КАК Показатель6,
	|	НадбавкиШР.Валюта6 КАК Валюта6
	|
	|ИЗ
	|	ВТ_РаботникиОрганизации КАК РаботникиОрганизации
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций КАК НадбавкиШР
	|		ПО РаботникиОрганизации.ПодразделениеОрганизации = НадбавкиШР.ПодразделениеОрганизации
	|			И РаботникиОрганизации.Должность = НадбавкиШР.Должность
	|			И РаботникиОрганизации.ТарифныйРазряд = НадбавкиШР.ТарифныйРазряд
	|
	|ГДЕ
	|	НадбавкиШР.Период > &ПериодРегистрации И НадбавкиШР.Период <= &КонецПериодаРегистрации
	|	И НадбавкиШР.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокСотрудников.Сотрудник,
	|	ПлановыеУдержания.ВидРасчета,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеУдержания.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеУдержания.Показатель1Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель1
	|	КОНЕЦ КАК Показатель1,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеУдержания.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеУдержания.Валюта1Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта1
	|	КОНЕЦ КАК Валюта1,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеУдержания.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеУдержания.Показатель2Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель2
	|	КОНЕЦ КАК Показатель2,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеУдержания.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеУдержания.Валюта2Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта2
	|	КОНЕЦ КАК Валюта2,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеУдержания.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеУдержания.Показатель3Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель3
	|	КОНЕЦ КАК Показатель3,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеУдержания.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеУдержания.Валюта3Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта3
	|	КОНЕЦ КАК Валюта3,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеУдержания.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеУдержания.Показатель4Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель4
	|	КОНЕЦ КАК Показатель4,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеУдержания.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеУдержания.Валюта4Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта4
	|	КОНЕЦ КАК Валюта4,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеУдержания.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеУдержания.Показатель5Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель5
	|	КОНЕЦ КАК Показатель5,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеУдержания.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеУдержания.Валюта5Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта5
	|	КОНЕЦ КАК Валюта5,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеУдержания.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеУдержания.Показатель6Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель6
	|	КОНЕЦ КАК Показатель6,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеУдержания.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеУдержания.Валюта6Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта6
	|	КОНЕЦ КАК Валюта6
	|
	|ИЗ
	|	ВТ_СписокСотрудников КАК СписокСотрудников
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
	|				&ПериодРегистрации,
	|				Организация = &ГоловнаяОрганизация
	|				И ФизЛицо В (ВЫБРАТЬ 
	|									СписокСотрудников.Сотрудник.ФизЛицо
	|								ИЗ
	|									ВТ_СписокСотрудников КАК СписокСотрудников
	|								ГДЕ
	|									СписокСотрудников.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))) КАК ПлановыеУдержания
	|		ПО СписокСотрудников.Сотрудник.ФизЛицо = ПлановыеУдержания.ФизЛицо
	|ГДЕ
	|	СписокСотрудников.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|	И ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|				И ПлановыеУдержания.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеУдержания.ДействиеЗавершения
	|		ИНАЧЕ ПлановыеУдержания.Действие
	|	КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокСотрудников.Сотрудник,
	|	ПлановыеУдержания.ВидРасчета,
	|
	|	ПлановыеУдержания.Показатель1,
	|	ПлановыеУдержания.Валюта1,
	|
	|	ПлановыеУдержания.Показатель2,
	|	ПлановыеУдержания.Валюта2,
	|
	|	ПлановыеУдержания.Показатель3,
	|	ПлановыеУдержания.Валюта3,
	|
	|	ПлановыеУдержания.Показатель4,
	|	ПлановыеУдержания.Валюта4,
	|
	|	ПлановыеУдержания.Показатель5,
	|	ПлановыеУдержания.Валюта5,
	|
	|	ПлановыеУдержания.Показатель6,
	|	ПлановыеУдержания.Валюта6
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокСотрудников КАК СписокСотрудников
	|		ПО ПлановыеУдержания.ФизЛицо = СписокСотрудников.Сотрудник.ФизЛицо
	|			И СписокСотрудников.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|
	|ГДЕ
	|	ПлановыеУдержания.Организация = &ГоловнаяОрганизация
	|	И ПлановыеУдержания.Период > &ПериодРегистрации И ПлановыеУдержания.Период <= &КонецПериодаРегистрации
	|	И ПлановыеУдержания.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокСотрудников.Сотрудник,
	|	ПлановыеУдержания.ВидРасчета,
	|
	|	ПлановыеУдержания.Показатель1Завершения КАК Показатель1,
	|	ПлановыеУдержания.Валюта1Завершения КАК Валюта1,
	|
	|	ПлановыеУдержания.Показатель2Завершения КАК Показатель2,
	|	ПлановыеУдержания.Валюта2Завершения КАК Валюта2,
	|
	|	ПлановыеУдержания.Показатель3Завершения КАК Показатель3,
	|	ПлановыеУдержания.Валюта3Завершения КАК Валюта3,
	|
	|	ПлановыеУдержания.Показатель4Завершения КАК Показатель4,
	|	ПлановыеУдержания.Валюта4Завершения КАК Валюта4,
	|
	|	ПлановыеУдержания.Показатель5Завершения КАК Показатель5,
	|	ПлановыеУдержания.Валюта5Завершения КАК Валюта5,
	|
	|	ПлановыеУдержания.Показатель6Завершения КАК Показатель6,
	|	ПлановыеУдержания.Валюта6Завершения КАК Валюта6
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокСотрудников КАК СписокСотрудников
	|		ПО ПлановыеУдержания.ФизЛицо = СписокСотрудников.Сотрудник.ФизЛицо
	|			И СписокСотрудников.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|
	|ГДЕ
	|	ПлановыеУдержания.Организация = &ГоловнаяОрганизация
	|	И ПлановыеУдержания.ПериодЗавершения МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|	И ПлановыеУдержания.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|;
	| 
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоказателиПлановыхНачислений.ВидРасчета,
	|	ПоказателиПлановыхНачислений.Показатель1,
	|	ПоказателиПлановыхНачислений.Показатель2,
	|	ПоказателиПлановыхНачислений.Показатель3,
	|	ПоказателиПлановыхНачислений.Показатель4,
	|	ПоказателиПлановыхНачислений.Показатель5,
	|	ПоказателиПлановыхНачислений.Показатель6,
	|	ПоказателиПлановыхНачислений.Показатель1Предопределенный,
	|	ПоказателиПлановыхНачислений.Показатель2Предопределенный,
	|	ПоказателиПлановыхНачислений.Показатель3Предопределенный,
	|	ПоказателиПлановыхНачислений.Показатель4Предопределенный,
	|	ПоказателиПлановыхНачислений.Показатель5Предопределенный,
	|	ПоказателиПлановыхНачислений.Показатель6Предопределенный,
	|	ПоказателиПлановыхНачислений.Показатель1ВозможностьИзменения,
	|	ПоказателиПлановыхНачислений.Показатель2ВозможностьИзменения,
	|	ПоказателиПлановыхНачислений.Показатель3ВозможностьИзменения,
	|	ПоказателиПлановыхНачислений.Показатель4ВозможностьИзменения,
	|	ПоказателиПлановыхНачислений.Показатель5ВозможностьИзменения,
	|	ПоказателиПлановыхНачислений.Показатель6ВозможностьИзменения,
	|	ПоказателиПлановыхНачислений.Показатель1ВидПоказателя,
	|	ПоказателиПлановыхНачислений.Показатель2ВидПоказателя,
	|	ПоказателиПлановыхНачислений.Показатель3ВидПоказателя,
	|	ПоказателиПлановыхНачислений.Показатель4ВидПоказателя,
	|	ПоказателиПлановыхНачислений.Показатель5ВидПоказателя,
	|	ПоказателиПлановыхНачислений.Показатель6ВидПоказателя
	|ПОМЕСТИТЬ ВТ_ПоказателиПлановыхНачислений
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПлановыеРасчеты.ВидРасчета КАК ВидРасчета,
	|		Показатели1.Показатель КАК Показатель1,
	|		Показатели2.Показатель КАК Показатель2,
	|		Показатели3.Показатель КАК Показатель3,
	|		Показатели4.Показатель КАК Показатель4,
	|		Показатели5.Показатель КАК Показатель5,
	|		Показатели6.Показатель КАК Показатель6,
	|		Показатели1.Показатель.Предопределенный КАК Показатель1Предопределенный,
	|		Показатели2.Показатель.Предопределенный КАК Показатель2Предопределенный,
	|		Показатели3.Показатель.Предопределенный КАК Показатель3Предопределенный,
	|		Показатели4.Показатель.Предопределенный КАК Показатель4Предопределенный,
	|		Показатели5.Показатель.Предопределенный КАК Показатель5Предопределенный,
	|		Показатели6.Показатель.Предопределенный КАК Показатель6Предопределенный,
	|		Показатели1.Показатель.ВозможностьИзменения КАК Показатель1ВозможностьИзменения,
	|		Показатели2.Показатель.ВозможностьИзменения КАК Показатель2ВозможностьИзменения,
	|		Показатели3.Показатель.ВозможностьИзменения КАК Показатель3ВозможностьИзменения,
	|		Показатели4.Показатель.ВозможностьИзменения КАК Показатель4ВозможностьИзменения,
	|		Показатели5.Показатель.ВозможностьИзменения КАК Показатель5ВозможностьИзменения,
	|		Показатели6.Показатель.ВозможностьИзменения КАК Показатель6ВозможностьИзменения,
	|		Показатели1.Показатель.ВидПоказателя КАК Показатель1ВидПоказателя,
	|		Показатели2.Показатель.ВидПоказателя КАК Показатель2ВидПоказателя,
	|		Показатели3.Показатель.ВидПоказателя КАК Показатель3ВидПоказателя,
	|		Показатели4.Показатель.ВидПоказателя КАК Показатель4ВидПоказателя,
	|		Показатели5.Показатель.ВидПоказателя КАК Показатель5ВидПоказателя,
	|		Показатели6.Показатель.ВидПоказателя КАК Показатель6ВидПоказателя
	|	ИЗ
	|		ВТ_ПлановыеРасчеты КАК ПлановыеРасчеты
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели1
	|			ПО ПлановыеРасчеты.ВидРасчета = Показатели1.Ссылка
	|				И (Показатели1.НомерСтроки = 1)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели2
	|			ПО ПлановыеРасчеты.ВидРасчета = Показатели2.Ссылка
	|				И (Показатели2.НомерСтроки = 2)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели3
	|			ПО ПлановыеРасчеты.ВидРасчета = Показатели3.Ссылка
	|				И (Показатели3.НомерСтроки = 3)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели4
	|			ПО ПлановыеРасчеты.ВидРасчета = Показатели4.Ссылка
	|				И (Показатели4.НомерСтроки = 4)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели5
	|			ПО ПлановыеРасчеты.ВидРасчета = Показатели5.Ссылка
	|				И (Показатели5.НомерСтроки = 5)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели6
	|			ПО ПлановыеРасчеты.ВидРасчета = Показатели6.Ссылка
	|				И (Показатели6.НомерСтроки = 6)
	|	ГДЕ
	|		ПлановыеРасчеты.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПлановыеРасчеты.ВидРасчета,
	|		Показатели1.Показатель,
	|		Показатели2.Показатель,
	|		Показатели3.Показатель,
	|		Показатели4.Показатель,
	|		Показатели5.Показатель,
	|		Показатели6.Показатель,
	|		Показатели1.Показатель.Предопределенный,
	|		Показатели2.Показатель.Предопределенный,
	|		Показатели3.Показатель.Предопределенный,
	|		Показатели4.Показатель.Предопределенный,
	|		Показатели5.Показатель.Предопределенный,
	|		Показатели6.Показатель.Предопределенный,
	|		Показатели1.Показатель.ВозможностьИзменения,
	|		Показатели2.Показатель.ВозможностьИзменения,
	|		Показатели3.Показатель.ВозможностьИзменения,
	|		Показатели4.Показатель.ВозможностьИзменения,
	|		Показатели5.Показатель.ВозможностьИзменения,
	|		Показатели6.Показатель.ВозможностьИзменения,
	|		Показатели1.Показатель.ВидПоказателя,
	|		Показатели2.Показатель.ВидПоказателя,
	|		Показатели3.Показатель.ВидПоказателя,
	|		Показатели4.Показатель.ВидПоказателя,
	|		Показатели5.Показатель.ВидПоказателя,
	|		Показатели6.Показатель.ВидПоказателя
	|	ИЗ
	|		ВТ_ПлановыеРасчеты КАК ПлановыеРасчеты
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели1
	|			ПО ПлановыеРасчеты.ВидРасчета = Показатели1.Ссылка
	|				И (Показатели1.НомерСтроки = 1)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели2
	|			ПО ПлановыеРасчеты.ВидРасчета = Показатели2.Ссылка
	|				И (Показатели2.НомерСтроки = 2)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели3
	|			ПО ПлановыеРасчеты.ВидРасчета = Показатели3.Ссылка
	|				И (Показатели3.НомерСтроки = 3)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели4
	|			ПО ПлановыеРасчеты.ВидРасчета = Показатели4.Ссылка
	|				И (Показатели4.НомерСтроки = 4)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели5
	|			ПО ПлановыеРасчеты.ВидРасчета = Показатели5.Ссылка
	|				И (Показатели5.НомерСтроки = 5)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели6
	|			ПО ПлановыеРасчеты.ВидРасчета = Показатели6.Ссылка
	|				И (Показатели6.НомерСтроки = 6)
	|	ГДЕ
	|		ПлановыеРасчеты.ВидРасчета ССЫЛКА ПланВидовРасчета.ДополнительныеНачисленияОрганизаций) КАК ПоказателиПлановыхНачислений
	|;
	|	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлановыеРасчеты.Сотрудник КАК Сотрудник,
	|	ПоказателиПлановыхНачислений.Показатель1 КАК Показатель,
	|	ПлановыеРасчеты.Показатель1 КАК Значение,
	|	ПлановыеРасчеты.Валюта1 КАК Валюта
	|
	|ПОМЕСТИТЬ ВТ_НесгруппированныеДанные
	|ИЗ
	|	ВТ_ПлановыеРасчеты КАК ПлановыеРасчеты
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоказателиПлановыхНачислений КАК ПоказателиПлановыхНачислений
	|		ПО ПлановыеРасчеты.ВидРасчета = ПоказателиПлановыхНачислений.ВидРасчета
	|ГДЕ
	|	ПоказателиПлановыхНачислений.Показатель1ВозможностьИзменения В (&МассивВозможностейИзменения)
	|	И ПоказателиПлановыхНачислений.Показатель1ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	|	И НЕ ПоказателиПлановыхНачислений.Показатель1Предопределенный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеРасчеты.Сотрудник КАК Сотрудник,
	|	ПоказателиПлановыхНачислений.Показатель2 КАК Показатель,
	|	ПлановыеРасчеты.Показатель2 КАК Значение,
	|	ПлановыеРасчеты.Валюта2 КАК Валюта
	|
	|ИЗ
	|	ВТ_ПлановыеРасчеты КАК ПлановыеРасчеты
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоказателиПлановыхНачислений КАК ПоказателиПлановыхНачислений
	|		ПО ПлановыеРасчеты.ВидРасчета = ПоказателиПлановыхНачислений.ВидРасчета
	|ГДЕ
	|	ПоказателиПлановыхНачислений.Показатель2ВозможностьИзменения В (&МассивВозможностейИзменения)
	|	И ПоказателиПлановыхНачислений.Показатель2ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	|	И НЕ ПоказателиПлановыхНачислений.Показатель2Предопределенный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеРасчеты.Сотрудник КАК Сотрудник,
	|	ПоказателиПлановыхНачислений.Показатель3 КАК Показатель,
	|	ПлановыеРасчеты.Показатель3 КАК Значение,
	|	ПлановыеРасчеты.Валюта3 КАК Валюта
	|
	|ИЗ
	|	ВТ_ПлановыеРасчеты КАК ПлановыеРасчеты
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоказателиПлановыхНачислений КАК ПоказателиПлановыхНачислений
	|		ПО ПлановыеРасчеты.ВидРасчета = ПоказателиПлановыхНачислений.ВидРасчета
	|ГДЕ
	|	ПоказателиПлановыхНачислений.Показатель3ВозможностьИзменения В (&МассивВозможностейИзменения)
	|	И ПоказателиПлановыхНачислений.Показатель3ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	|	И НЕ ПоказателиПлановыхНачислений.Показатель3Предопределенный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеРасчеты.Сотрудник КАК Сотрудник,
	|	ПоказателиПлановыхНачислений.Показатель4 КАК Показатель,
	|	ПлановыеРасчеты.Показатель4 КАК Значение,
	|	ПлановыеРасчеты.Валюта4 КАК Валюта
	|
	|ИЗ
	|	ВТ_ПлановыеРасчеты КАК ПлановыеРасчеты
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоказателиПлановыхНачислений КАК ПоказателиПлановыхНачислений
	|		ПО ПлановыеРасчеты.ВидРасчета = ПоказателиПлановыхНачислений.ВидРасчета
	|ГДЕ
	|	ПоказателиПлановыхНачислений.Показатель4ВозможностьИзменения В (&МассивВозможностейИзменения)
	|	И ПоказателиПлановыхНачислений.Показатель4ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	|	И НЕ ПоказателиПлановыхНачислений.Показатель4Предопределенный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеРасчеты.Сотрудник КАК Сотрудник,
	|	ПоказателиПлановыхНачислений.Показатель5 КАК Показатель,
	|	ПлановыеРасчеты.Показатель5 КАК Значение,
	|	ПлановыеРасчеты.Валюта5 КАК Валюта
	|
	|ИЗ
	|	ВТ_ПлановыеРасчеты КАК ПлановыеРасчеты
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоказателиПлановыхНачислений КАК ПоказателиПлановыхНачислений
	|		ПО ПлановыеРасчеты.ВидРасчета = ПоказателиПлановыхНачислений.ВидРасчета
	|ГДЕ
	|	ПоказателиПлановыхНачислений.Показатель5ВозможностьИзменения В (&МассивВозможностейИзменения)
	|	И ПоказателиПлановыхНачислений.Показатель5ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	|	И НЕ ПоказателиПлановыхНачислений.Показатель5Предопределенный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеРасчеты.Сотрудник КАК Сотрудник,
	|	ПоказателиПлановыхНачислений.Показатель6 КАК Показатель,
	|	ПлановыеРасчеты.Показатель6 КАК Значение,
	|	ПлановыеРасчеты.Валюта6 КАК Валюта
	|
	|ИЗ
	|	ВТ_ПлановыеРасчеты КАК ПлановыеРасчеты
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоказателиПлановыхНачислений КАК ПоказателиПлановыхНачислений
	|		ПО ПлановыеРасчеты.ВидРасчета = ПоказателиПлановыхНачислений.ВидРасчета
	|ГДЕ
	|	ПоказателиПлановыхНачислений.Показатель6ВозможностьИзменения В (&МассивВозможностейИзменения)
	|	И ПоказателиПлановыхНачислений.Показатель6ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	|	И НЕ ПоказателиПлановыхНачислений.Показатель6Предопределенный
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НесгруппированныеДанные.Сотрудник,
	|	НесгруппированныеДанные.Показатель,
	|	МАКСИМУМ(НесгруппированныеДанные.Значение) КАК Значение,
	|	МАКСИМУМ(НесгруппированныеДанные.Валюта) КАК Валюта
	|
	|ПОМЕСТИТЬ ВТ_Показатели
	|ИЗ
	|	ВТ_НесгруппированныеДанные КАК НесгруппированныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	НесгруппированныеДанные.Сотрудник,
	|	НесгруппированныеДанные.Показатель
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НесгруппированныеДанные.Сотрудник,
	|	НесгруппированныеДанные.Показатель
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НовыеПоказатели.Сотрудник КАК Сотрудник,
	|	НовыеПоказатели.Показатель,
	|	НовыеПоказатели.Показатель.Наименование КАК НаименованиеПоказателя,
	|	НовыеПоказатели.Валюта,
	|	НовыеПоказатели.Значение
	|ИЗ
	|	ВТ_Показатели КАК НовыеПоказатели
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияПоказателейСхемМотивации КАК ПроверкаДублей
	|		ПО НовыеПоказатели.Показатель = ПроверкаДублей.Показатель
	|			И НовыеПоказатели.Сотрудник = ПроверкаДублей.Сотрудник
	|			И ПроверкаДублей.Организация = &Организация
	|			И ПроверкаДублей.Период = &ПериодРегистрации
	|			И ПроверкаДублей.Документ <> &ДокументСсылка
	|
	|ГДЕ
	|	ПроверкаДублей.Показатель ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	НаименованиеПоказателя
	|";
	
	РезультатЗапроса = Запрос.Выполнить();

	Если Сотрудник <> Неопределено Тогда
		
		СтруктураПоиска = Новый Структура("Сотрудник", Сотрудник);
		
		НайденнныеСтроки = Показатели.НайтиСтроки(СтруктураПоиска);
		Для Каждого НайденнаяСтрока Из НайденнныеСтроки Цикл
			Показатели.Удалить(НайденнаяСтрока);
		КонецЦикла;
	
		// добавляем результат выборки
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Показатели.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
		
	Иначе
	
		// просто загружаем результат запроса в табличную часть
		Показатели.Загрузить(РезультатЗапроса.Выгрузить());
	
	КонецЕсли;

КонецПроцедуры // АвтозаполнениеПоказателей()
     
// Формирует запрос по документу и связанным регистрам сведений
//
// Параметры: 
//  Режим - строка, может принимать значения:
//			"ПоРеквизитамДокумента"
//			"ПоТабличнойЧастиДокумента"
//
// Возвращаемое значение:
//  Результат запроса с данными об организации или о работниках из табличной части
//
Функция СформироватьЗапросДляПечати(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);			

	Если Режим = "ПоРеквизитамДокумента" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТабельУчетаРабочегоВремениОрганизации.Номер КАК НомерДок,
		|	ТабельУчетаРабочегоВремениОрганизации.Дата КАК ДатаДок,
		|	ТабельУчетаРабочегоВремениОрганизации.Организация.НаименованиеПолное КАК ИмяОрганизации,
		|	ТабельУчетаРабочегоВремениОрганизации.ПодразделениеОрганизации.Наименование КАК ИмяПодразделения,
		|	ТабельУчетаРабочегоВремениОрганизации.ДатаНачалаПериода КАК ДатаНач,
		|	ТабельУчетаРабочегоВремениОрганизации.ДатаОкончанияПериода КАК ДатаКон
		|ИЗ
		|	Документ.ТабельУчетаРабочегоВремениОрганизации КАК ТабельУчетаРабочегоВремениОрганизации
		|ГДЕ
		|	ТабельУчетаРабочегоВремениОрганизации.Ссылка = &ДокументСсылка";
		
	ИначеЕсли Режим = "ПоТабличнойЧастиДокументаПоДням" Тогда
		
		УчетнаяПолитикаПоПерсоналу = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации");
		
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
		Запрос.УстановитьПараметр("ДатаДокумента",	 Дата);
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		               |	ТабельУчетаОтработанноеВремя.Сотрудник КАК Сотрудник,
					   |	ТабельУчетаОтработанноеВремя.Сотрудник.ФизЛицо КАК ФизЛицо
		               |ПОМЕСТИТЬ ВТ_Работники
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаОтработанноеВремя
		               |ГДЕ
		               |	ТабельУчетаОтработанноеВремя.Ссылка = &ДокументСсылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ТабельУчетаОтработанноеВремя.Сотрудник КАК Сотрудник,
		               |	ЕСТЬNULL(ФИОФизЛиц.Фамилия + "" "" + ВЫБОР
		               |			КОГДА ФИОФизЛиц.Имя = """"
		               |				ТОГДА """"
		               |			ИНАЧЕ ПОДСТРОКА(ФИОФизЛиц.Имя, 1, 1) + "". ""
		               |		КОНЕЦ + ВЫБОР
		               |			КОГДА ФИОФизЛиц.Отчество = """"
		               |				ТОГДА """"
		               |			ИНАЧЕ ПОДСТРОКА(ФИОФизЛиц.Отчество, 1, 1) + "".""
		               |		КОНЕЦ, ТабельУчетаОтработанноеВремя.Сотрудник.ФизЛицо.Наименование) КАК ФИО,
		               |	РаботникиОрганизацииСрезПоследних.Сотрудник.Код КАК ТабельныйНомер,
		               |	РаботникиОрганизацииСрезПоследних.ПодразделениеОрганизации.Представление КАК ПодразделениеРаботника,
		               |	РаботникиОрганизацииСрезПоследних.Должность.Представление КАК Должность,
		               |	РаботникиОрганизацииСрезПоследних.ТарифныйРазряд.Представление КАК ТарифныйРазряд,
		               |	ТабельУчетаОтработанноеВремя.ДнейПоНорме,
		               |	ТабельУчетаОтработанноеВремя.ЧасовПоНорме,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени1,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени2,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени3,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени4,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени5,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени6,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени7,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени8,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени9,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени10,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени11,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени12,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени13,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени14,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени15,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени16,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени17,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени18,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени19,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени20,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени21,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени22,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени23,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени24,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени25,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени26,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени27,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени28,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени29,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени30,
		               |	ТабельУчетаОтработанноеВремя.ПервыйВидВремени31,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени1,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени2,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени3,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени4,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени5,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени6,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени7,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени8,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени9,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени10,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени11,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени12,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени13,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени14,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени15,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени16,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени17,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени18,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени19,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени20,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени21,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени22,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени23,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени24,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени25,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени26,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени27,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени28,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени29,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени30,
		               |	ТабельУчетаОтработанноеВремя.ВторойВидВремени31,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени1,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени2,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени3,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени4,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени5,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени6,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени7,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени8,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени9,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени10,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени11,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени12,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени13,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени14,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени15,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени16,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени17,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени18,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени19,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени20,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени21,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени22,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени23,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени24,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени25,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени26,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени27,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени28,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени29,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени30,
		               |	ТабельУчетаОтработанноеВремя.ТретийВидВремени31,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени1,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени2,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени3,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени4,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени5,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени6,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени7,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени8,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени9,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени10,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени11,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени12,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени13,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени14,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени15,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени16,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени17,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени18,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени19,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени20,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени21,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени22,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени23,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени24,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени25,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени26,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени27,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени28,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени29,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени30,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйВидВремени31,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов1,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов2,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов3,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов4,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов5,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов6,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов7,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов8,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов9,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов10,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов11,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов12,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов13,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов14,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов15,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов16,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов17,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов18,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов19,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов20,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов21,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов22,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов23,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов24,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов25,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов26,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов27,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов28,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов29,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов30,
		               |	ТабельУчетаОтработанноеВремя.ПервыйЧасов31,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов1,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов2,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов3,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов4,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов5,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов6,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов7,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов8,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов9,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов10,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов11,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов12,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов13,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов14,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов15,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов16,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов17,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов18,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов19,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов20,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов21,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов22,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов23,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов24,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов25,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов26,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов27,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов28,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов29,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов30,
		               |	ТабельУчетаОтработанноеВремя.ВторойЧасов31,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов1,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов2,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов3,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов4,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов5,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов6,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов7,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов8,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов9,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов10,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов11,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов12,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов13,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов14,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов15,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов16,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов17,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов18,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов19,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов20,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов21,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов22,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов23,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов24,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов25,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов26,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов27,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов28,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов29,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов30,
		               |	ТабельУчетаОтработанноеВремя.ТретийЧасов31,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов1,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов2,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов3,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов4,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов5,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов6,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов7,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов8,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов9,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов10,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов11,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов12,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов13,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов14,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов15,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов16,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов17,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов18,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов19,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов20,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов21,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов22,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов23,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов24,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов25,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов26,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов27,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов28,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов29,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов30,
		               |	ТабельУчетаОтработанноеВремя.ЧетвертыйЧасов31
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаОтработанноеВремя
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
		               |				&ДатаДокумента,
		               |				Физлицо В
		               |					(ВЫБРАТЬ
		               |						ТабРаботники.ФизЛицо
		               |					ИЗ
		               |						ВТ_Работники КАК ТабРаботники)) КАК ФИОФизЛиц
		               |		ПО ТабельУчетаОтработанноеВремя.Сотрудник.ФизЛицо = ФИОФизЛиц.ФизЛицо
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		               |				&ДатаДокумента,
		               |				Организация = &ГоловнаяОрганизация
		               |					И Сотрудник В
		               |						(ВЫБРАТЬ
		               |							ТабРаботники.Сотрудник
		               |						ИЗ
		               |							ВТ_Работники КАК ТабРаботники)) КАК РаботникиОрганизацииСрезПоследних
		               |		ПО ТабельУчетаОтработанноеВремя.Сотрудник = РаботникиОрганизацииСрезПоследних.Сотрудник
		               |ГДЕ
		               |	ТабельУчетаОтработанноеВремя.Ссылка = &ДокументСсылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ТабельУчетаОтработанноеВремя.НомерСтроки";
		
	ИначеЕсли Режим = "ПоТабличнойЧастиПоказатели" Тогда
		Запрос.УстановитьПараметр("СписокПоказателейНеТребующихВалюты", мСписокПоказателейНеТребующихВалюты);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТабельУчетаРабочегоВремениОрганизацииПоказатели.Ссылка,
		|	ТабельУчетаРабочегоВремениОрганизацииПоказатели.НомерСтроки,
		|	ТабельУчетаРабочегоВремениОрганизацииПоказатели.Сотрудник,
		|	ТабельУчетаРабочегоВремениОрганизацииПоказатели.Показатель,
		|	ТабельУчетаРабочегоВремениОрганизацииПоказатели.Значение,
		|	ТабельУчетаРабочегоВремениОрганизацииПоказатели.Валюта,
		|	ВЫБОР
		|		КОГДА (НЕ ТабельУчетаРабочегоВремениОрганизацииПоказатели.Показатель.ТипПоказателя В (&СписокПоказателейНеТребующихВалюты))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ТребуетВалюту
		|ИЗ
		|	Документ.ТабельУчетаРабочегоВремениОрганизации.Показатели КАК ТабельУчетаРабочегоВремениОрганизацииПоказатели
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
		|		ПО ТабельУчетаРабочегоВремениОрганизацииПоказатели.Ссылка = ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка
		|			И ТабельУчетаРабочегоВремениОрганизацииПоказатели.Сотрудник = ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник
		|ГДЕ
		|	ТабельУчетаРабочегоВремениОрганизацииПоказатели.Ссылка = &ДокументСсылка
		|	И ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка";
		
	ИначеЕсли Режим = "ПоТабличнойРаспределениеНачислений" Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТабельУчетаРабочегоВремениОрганизацииРаспределениеНачислений.Ссылка,
		|	ТабельУчетаРабочегоВремениОрганизацииРаспределениеНачислений.НомерСтроки,
		|	ТабельУчетаРабочегоВремениОрганизацииРаспределениеНачислений.Сотрудник,
		|	ТабельУчетаРабочегоВремениОрганизацииРаспределениеНачислений.СпособОтраженияВБухучете,
		|	ТабельУчетаРабочегоВремениОрганизацииРаспределениеНачислений.ДоляСпособаОтражения
		|ИЗ
		|	Документ.ТабельУчетаРабочегоВремениОрганизации.РаспределениеНачислений КАК ТабельУчетаРабочегоВремениОрганизацииРаспределениеНачислений
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
		|		ПО ТабельУчетаРабочегоВремениОрганизацииРаспределениеНачислений.Ссылка = ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка
		|			И ТабельУчетаРабочегоВремениОрганизацииРаспределениеНачислений.Сотрудник = ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник
		|ГДЕ
		|	ТабельУчетаРабочегоВремениОрганизацииРаспределениеНачислений.Ссылка = &ДокументСсылка
		|	И ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка";
				
	Иначе
		Возврат Неопределено
	КонецЕсли;
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросДляПечати()

#Если Клиент Тогда
	
Функция ПечатьТабеля()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТабельУчетаРабочегоВремени_Печать";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	
	// получаем данные для печати
	ВыборкаДляШапкиИПодвала = СформироватьЗапросДляПечати("ПоРеквизитамДокумента").Выбрать();	
	
	// получаем макет
	Макет = ПолучитьМакет("Табель");
	
	// запоминаем области макета	
	ОбластьМакетаШапка 					= Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
	ОбластьМакетаШапкаОтработанноеВремя = Макет.ПолучитьОбласть("ШапкаОтработаноВремяОбщее"); // Шапка по общему отработанному времени.
	ОбластьМакетаОтработанноеВремя 		= Макет.ПолучитьОбласть("СтрокаОтработаноВремяОбщее"); // Строка по общему отработанному времени.
	Если ИспользоватьПоказатели И ИспользоватьРаспределениеНачислений Тогда 
		ОбластьМакетаКолонтитул = Макет.ПолучитьОбласть("Колонтитул");         			// повторяющаяся шапка страницы
		ОбластьМакета 	    	= Макет.ПолучитьОбласть("Строка"); 	   					// строка работника
		ОбластьМакета1 	    	= Макет.ПолучитьОбласть("Строка1");
		ОбластьПодвалТаблицы 	= Макет.ПолучитьОбласть("ПодвалТаблицыСТабЧастями");   	// Подвал таблицы
	ИначеЕсли ИспользоватьПоказатели И НЕ ИспользоватьРаспределениеНачислений Тогда 
		ОбластьМакетаКолонтитул = Макет.ПолучитьОбласть("КолонтитулБезРаспределения"); 	// повторяющаяся шапка страницы
		ОбластьМакета 	    	= Макет.ПолучитьОбласть("СтрокаБезРаспределения"); 	   	// строка работника
		ОбластьМакета1 	    	= Макет.ПолучитьОбласть("СтрокаБезТабЧастиРаспределения");
		ОбластьПодвалТаблицы 	= Макет.ПолучитьОбласть("ПодвалТаблицыСТабЧастями");   	// Подвал таблицы
	ИначеЕсли ИспользоватьРаспределениеНачислений И НЕ ИспользоватьПоказатели Тогда 
		ОбластьМакетаКолонтитул = Макет.ПолучитьОбласть("КолонтитулБезПоказателя"); 	// повторяющаяся шапка страницы
		ОбластьМакета 	    	= Макет.ПолучитьОбласть("СтрокаБезПоказателя"); 	   	// строка работника
		ОбластьМакета1 	    	= Макет.ПолучитьОбласть("СтрокаБезТабЧастиПоказатели");
		ОбластьПодвалТаблицы 	= Макет.ПолучитьОбласть("ПодвалТаблицыСТабЧастями");   	// Подвал таблицы
	Иначе
		ОбластьМакетаКолонтитул = Макет.ПолучитьОбласть("КолонтитулБезДопИнф"); 		// повторяющаяся шапка страницы
		ОбластьМакета 	    	= Макет.ПолучитьОбласть("СтрокаБезДопИнф"); 	   		// строка работника
		ОбластьМакета1 	    	= Макет.ПолучитьОбласть("СтрокаБезДопИнф1");
		ОбластьПодвалТаблицы 	= Макет.ПолучитьОбласть("ПодвалТаблицы");	   			// Подвал таблицы	
	КонецЕсли;	
	ОбластьМакетаПодвал 	= Макет.ПолучитьОбласть("Подвал"); // Подвал документа
		
	// массив с двумя строками - для разбиения на страницы
    ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьМакета);
		
	// выводим данные о руководителях организации
	Если ВыборкаДляШапкиИПодвала.Следующий() Тогда 
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапкиИПодвала); 	  // Шапка документа.
		ОбластьМакетаКолонтитул.Параметры.Заполнить(ВыборкаДляШапкиИПодвала); // "Колонтитул" страницы
		ОтветЛица = ОбщегоНазначения.ОтветственныеЛицаОрганизаций(Организация, КонецДня(ДатаОкончанияПериода), Ответственный.ФизЛицо);
		ОбластьМакетаПодвал.Параметры.Заполнить(ОтветЛица);  // Для подвала
		ОбластьМакетаШапка.Параметры.НомерДок = ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект, глСписокПрефиксовУзлов);
	КонецЕсли;

	// Начинаем формировать выходной документ
	ТабДокумент.Вывести(ОбластьМакетаШапка); 	  // Шапка документа.
	ТабДокумент.Вывести(ОбластьМакетаКолонтитул); // Колонтитул документа.
	
	Если СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ВЦеломЗаПериод  Тогда
				
	Иначе
		
		ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиДокументаПоДням").Выбрать();
		Если ИспользоватьПоказатели Тогда
			//Запрос по табличной части "Показатели";
			ВыборкаПоказателей = СформироватьЗапросДляПечати("ПоТабличнойЧастиПоказатели").Выгрузить();
		КонецЕсли;
		
		Если ИспользоватьРаспределениеНачислений Тогда 
			//Запрос по табличной части "РаспределениеНачислений"; 
			ВыборкаРаспределений = СформироватьЗапросДляПечати("ПоТабличнойРаспределениеНачислений").Выгрузить();
		КонецЕсли;

		
		//	подсчитываем количество страниц документа - для корректного разбиения на страницы
		ВсегоСтрокДокумента = ВыборкаРаботники.Количество();
		ВыведеноСтрок = 0;
		
		КолвоВыводаШапки = 1;
		КолСтраниц = 1;
		НомерПервойСтроки = 16;
		НомерПоследнейСтроки = 16;
		
		Линия = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
		ДвойнаяЛиния = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Двойная,1);
		
		Таблица = Новый ТаблицаЗначений;
		Таблица.Колонки.Добавить("Сотрудник");		
		Таблица.Колонки.Добавить("Код");
		Таблица.Колонки.Добавить("Часы");
		Таблица.Колонки.Добавить("Показатель");
		Таблица.Колонки.Добавить("Значение");
		Таблица.Колонки.Добавить("СпособОтраженияВБухучете");
		Таблица.Колонки.Добавить("ДоляСпособаОтражения");		                     
		
		ТаблицаОтработанногоВремени = Новый ТаблицаЗначений;
		ТаблицаОтработанногоВремени.Колонки.Добавить("ВидВремени");		
		ТаблицаОтработанногоВремени.Колонки.Добавить("ОтработаноДней");
		ТаблицаОтработанногоВремени.Колонки.Добавить("ОтработаноЧасов");
				
		// выводим строки по работникам
		Пока ВыборкаРаботники.Следующий() Цикл
			
			КолвоСоответствий  = 0;
			КолвоПоказателей   = 0;
			КолвоРаспределений = 0;
			Таблица.Очистить();
			 
			// Данные по работнику.			
			ОбластьМакета.Параметры.Работник = ВыборкаРаботники.ФИО + ", " + ВыборкаРаботники.Должность
			+ ?(НЕ ЗначениеЗаполнено(ВыборкаРаботники.ТарифныйРазряд), "", ", " + ВыборкаРаботники.ТарифныйРазряд);
			ОбластьМакета.Параметры.Сотрудник = ВыборкаРаботники.Сотрудник;
			ОбластьМакета.Параметры.ТабельныйНомер = ВыборкаРаботники.ТабельныйНомер;
			ОбластьМакета.Параметры.ДнейПоНорме    = ВыборкаРаботники.ДнейПоНорме;
			ОбластьМакета.Параметры.ЧасовПоНорме   = ВыборкаРаботники.ЧасовПоНорме;
			
			СоответствиеРасчетаИтоговЧасов = Новый Соответствие;
			СоответствиеРасчетаИтоговДней = Новый Соответствие;
			Для НомерДня = 1 По 31 Цикл
				
				ИнформацияЗаДень = "";
				
				// цикл по значениям внутри дня
				Для ИндексМассиваПриставок = 0 По 3 Цикл
					НазваниеЯчейкиВидВремени = МассивПриставок[ИндексМассиваПриставок] + "ВидВремени"+НомерДня;
					ВидВремени = ВыборкаРаботники[НазваниеЯчейкиВидВремени];
					Если ЗначениеЗаполнено(ВидВремени) Тогда
						СимволДня = ВидВремени.БуквенныйКод;
					Иначе
				    	СимволДня = "";
					КонецЕсли;
				
					НазваниеЯчейкиДней = МассивПриставок[ИндексМассиваПриставок] + "Часов"+НомерДня;
					КоличествоЧасов = ВыборкаРаботники[НазваниеЯчейкиДней];
				
					Если ИндексМассиваПриставок = 0 Тогда
						ИнформацияЗаДень = ИнформацияЗаДень + ?(ЗначениеЗаполнено(СимволДня),СимволДня + " " + КоличествоЧасов,"");
					Иначе
						ИнформацияЗаДень = ИнформацияЗаДень + ?(ЗначениеЗаполнено(СимволДня),Символы.ПС + СимволДня + " " + КоличествоЧасов,"");
					КонецЕсли;
				
					Если КоличествоЧасов <> 0 тогда
						// Подсчет для итоговой колонки
						НакопленоДней = СоответствиеРасчетаИтоговДней[ВидВремени];
						НакопленоЧасов = СоответствиеРасчетаИтоговЧасов[ВидВремени];
						Если НакопленоДней = Неопределено ИЛИ НакопленоЧасов = Неопределено Тогда
							НакопленоДней = 0;
							НакопленоЧасов = 0;
						КонецЕсли;
						СоответствиеРасчетаИтоговДней.Вставить(ВидВремени, НакопленоДней + 1);
						СоответствиеРасчетаИтоговЧасов.Вставить(ВидВремени, НакопленоЧасов + КоличествоЧасов);
						
					КонецЕсли;
				КонецЦикла;
			
				ОбластьМакета.Параметры["Символ"+НомерДня] = ИнформацияЗаДень;
				 						
			КонецЦикла;
			
			
			Для Н = 1 По 4 Цикл
				// очищаем значения параметров "Отработано за период"
				ОбластьМакета.Параметры["ОтработаноКод" + Н]  = "";
				ОбластьМакета.Параметры["ОтработаноДниЧасы" + Н] = ""; 
				Если ИспользоватьПоказатели Тогда
					// очищаем значения параметров "Показатели для расчета начисления"
					ОбластьМакета.Параметры["Показатель" + Н]  = "";
					ОбластьМакета.Параметры["Значение" + Н] = "";
				КонецЕсли;
				Если ИспользоватьРаспределениеНачислений Тогда
					// очищаем значения параметров "Распределение начислений"
					ОбластьМакета.Параметры["СпособОтраженияВБухучете" + Н]  = "";
					ОбластьМакета.Параметры["ДоляСпособаОтражения" + Н] = ""; 
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПоиска = Новый Структура("Сотрудник", ВыборкаРаботники.Сотрудник);
			
			Если ИспользоватьПоказатели Тогда 
				СписокПоказателей = ВыборкаПоказателей.НайтиСтроки(СтруктураПоиска);
				КолвоПоказателей = СписокПоказателей.Количество();
			КонецЕсли;
			
			Если ИспользоватьРаспределениеНачислений Тогда 
				СписокРаспределений = ВыборкаРаспределений.НайтиСтроки(СтруктураПоиска);
				КолвоРаспределений = СписокРаспределений.Количество();				
			КонецЕсли;
			
			КолвоСоответствий = СоответствиеРасчетаИтоговДней.Количество();
			
			МаксКолво = Макс(КолвоСоответствий, КолвоПоказателей, КолвоРаспределений);
					
			Для Н = 1 По МаксКолво Цикл
				// добавляем пустые строки в таблицу
				Таблица.Добавить();
			КонецЦикла;
			Таблица.ЗаполнитьЗначения(ВыборкаРаботники.Сотрудник, "Сотрудник");
			
			Инд = 0;
			НайденныеСтроки = Таблица.НайтиСтроки(СтруктураПоиска);
			Для Каждого ЭлементСоответствия Из СоответствиеРасчетаИтоговДней Цикл
				КлючЭлементаСоответствия = ЭлементСоответствия.Ключ;
				НайденныеСтроки[Инд].Код = КлючЭлементаСоответствия.БуквенныйКод;
				НайденныеСтроки[Инд].Часы = Строка(ЭлементСоответствия.Значение) + " (" + Строка(СоответствиеРасчетаИтоговЧасов[КлючЭлементаСоответствия]) + ")";
				
				СтрокаОтрВремени = ТаблицаОтработанногоВремени.Добавить();
				СтрокаОтрВремени.ВидВремени = КлючЭлементаСоответствия;
				СтрокаОтрВремени.ОтработаноДней = ЭлементСоответствия.Значение; // кол-во дней из СоответствиеРасчетаИтоговДней
				СтрокаОтрВремени.ОтработаноЧасов = СоответствиеРасчетаИтоговЧасов[КлючЭлементаСоответствия];
				
				Инд = Инд + 1;
			КонецЦикла;
			
			Если ИспользоватьПоказатели Или ИспользоватьРаспределениеНачислений Тогда 
				Инд = 0;
				ТекстЗначение = "";
				Для Каждого Строка Из НайденныеСтроки Цикл
					Если ИспользоватьПоказатели И КолвоПоказателей > 0 Тогда 
						ТекстЗначение = "" + СписокПоказателей[Инд].Значение + " " + ?(СписокПоказателей[Инд].ТребуетВалюту,СписокПоказателей[Инд].Валюта.Наименование,"");
						Строка.Показатель = СписокПоказателей[Инд].Показатель;
						Строка.Значение = ТекстЗначение;
						КолвоПоказателей = КолвоПоказателей -1;
					КонецЕсли;
					Если ИспользоватьРаспределениеНачислений И КолвоРаспределений > 0 Тогда 
						Строка.СпособОтраженияВБухучете = СписокРаспределений[Инд].СпособОтраженияВБухучете;
						Строка.ДоляСпособаОтражения = СписокРаспределений[Инд].ДоляСпособаОтражения;
						КолвоРаспределений = КолвоРаспределений - 1;
					КонецЕсли;
					Инд = Инд + 1;
				КонецЦикла;
			КонецЕсли;
			
			
			// разбиение на страницы
			ВыведеноСтрок = ВыведеноСтрок + 1;
			ОбластьМакета.Параметры.НомерПП = ВыведеноСтрок;
			
			Сч = 0;
			Ном = 1;
			ЗаполнениеПоказателямиВЦикле = Ложь;
			КолвоЭлементов = 0;
			Если МаксКолво < 5 Тогда 
				НомерПоследнейСтроки = НомерПервойСтроки + 4;
			Иначе
				НомерПоследнейСтроки = НомерПервойСтроки + МаксКолво;
			КонецЕсли;
			
			Для Каждого ЭлементСоответствия Из Таблица Цикл
				КолвоЭлементов = КолвоЭлементов + 1;
				КолвоСтрок = КолвоЭлементов/2;
				Остаток = КолвоСтрок - Цел(КолвоСтрок);
				Если Ном < 5 Тогда 
					ОбластьМакета.Параметры["ОтработаноКод" + Ном]  = ЭлементСоответствия.Код;
					ОбластьМакета.Параметры["ОтработаноДниЧасы" + Ном]  = ЭлементСоответствия.Часы;
					Если ИспользоватьПоказатели Тогда 
						ОбластьМакета.Параметры["Показатель" + Ном]  = ЭлементСоответствия.Показатель;
						ОбластьМакета.Параметры["Значение" + Ном]  = ЭлементСоответствия.Значение;
					КонецЕсли;
					Если ИспользоватьРаспределениеНачислений Тогда
						ОбластьМакета.Параметры["СпособОтраженияВБухучете"+ Ном]  = ЭлементСоответствия.СпособОтраженияВБухучете;
						ОбластьМакета.Параметры["ДоляСпособаОтражения"+ Ном]  = ЭлементСоответствия.ДоляСпособаОтражения;
					КонецЕсли;
					Если Ном = 4 Или (Ном = МаксКолво И МаксКолво < 5) Тогда 
						ТабДокумент.Вывести(ОбластьМакета);	
						ЗаполнениеПоказателямиВЦикле = Истина;
					КонецЕсли;					
				Иначе
					// если количество параметров больше 4 добавляем новую строку
					Сч = Сч +1;
					ОбластьМакета1.Параметры["Код4"]  = ЭлементСоответствия.Код;
					ОбластьМакета1.Параметры["Часы4"]  = ЭлементСоответствия.Часы;
					Если ИспользоватьПоказатели Тогда 
						ОбластьМакета1.Параметры["Показатель"]  = ЭлементСоответствия.Показатель;
						ОбластьМакета1.Параметры["Значение"]  = ЭлементСоответствия.Значение;
					КонецЕсли;
					Если ИспользоватьРаспределениеНачислений Тогда
						ОбластьМакета1.Параметры["СпособОтраженияВБухучете"]  = ЭлементСоответствия.СпособОтраженияВБухучете;
						ОбластьМакета1.Параметры["ДоляСпособаОтражения"]  = ЭлементСоответствия.ДоляСпособаОтражения;
					КонецЕсли;
					ТабДокумент.Вывести(ОбластьМакета1);	
					ЗаполнениеПоказателямиВЦикле = Истина;
					Область = ТабДокумент.Область(НомерПервойСтроки,2,НомерПервойСтроки+3+Сч,2);
					Область.Объединить();
					Область = ТабДокумент.Область(НомерПервойСтроки,3,НомерПервойСтроки+3+Сч,4);
					Область.Объединить();
					Область = ТабДокумент.Область(НомерПервойСтроки,5,НомерПервойСтроки+3+Сч,5);
					Область.Объединить();
					
					Для КолвоОтметок =1 По 17 Цикл
						КолСтрокДляОбъединения = 0;
						НомерСимвола = КолвоОтметок+15;
						НомерКолонки = КолвоОтметок+5;
						Если КолвоОтметок > 16 Тогда 
							Символ1 = ОбластьМакета.Параметры["ЧасовПоНорме"];	
						Иначе
							Символ2 = ОбластьМакета.Параметры["Символ" + НомерСимвола];
						КонецЕсли;
						
						Область = ТабДокумент.Область(НомерПервойСтроки,НомерКолонки,НомерПервойСтроки+3,НомерКолонки);
						Область.Разъединить();
						
						Если Остаток = 0 Тогда 
							НомерСтр = НомерПервойСтроки + КолвоСтрок;
							НомерПоследнейСтр = НомерСтр + КолвоСтрок - 1;
							Область = ТабДокумент.Область(НомерПервойСтроки,НомерКолонки,НомерСтр-1,НомерКолонки);
							Область.Объединить();
							Область = ТабДокумент.Область(НомерСтр, НомерКолонки, НомерПоследнейСтр,НомерКолонки);
							Область.Объединить();
							Область.Текст = ?(КолвоОтметок > 16,Символ1,Символ2);
						Иначе
							КолСтрокДляОбъединения = КолСтрокДляОбъединения + Цел(КолвоСтрок);
							НомерСтр = НомерПервойСтроки + КолСтрокДляОбъединения;
							Область = ТабДокумент.Область(НомерПервойСтроки,НомерКолонки,НомерСтр,НомерКолонки);
							Область.Объединить();
							Если КолвоОтметок = 1 Тогда 
								Область.Обвести(ДвойнаяЛиния, , Линия, Линия);
							ИначеЕсли КолвоОтметок = 16 Тогда 
								Область.Обвести(Линия, , ДвойнаяЛиния, Линия);
							ИначеЕсли КолвоОтметок = 17 Тогда 
								Область.Обвести(, ,ДвойнаяЛиния , Линия)
							Иначе
								Область.Обвести(Линия, , , Линия)
							КонецЕсли;							
							НомерПослСтр = Цел(КолвоСтрок);
							НомерПервойСтр = НомерСтр+1;
							Область = ТабДокумент.Область(НомерПервойСтр,НомерКолонки,НомерСтр+НомерПослСтр, НомерКолонки);
							Область.Объединить();
							Область.Текст = ?(КолвоОтметок > 16,Символ1,Символ2);
						КонецЕсли;						
					КонецЦикла;					
					
				КонецЕсли;
				Ном = Ном + 1;
			КонецЦикла;
			
			НомерПервойСтроки = НомерПоследнейСтроки;
			
			Если КолвоСоответствий = 0 И ЗаполнениеПоказателямиВЦикле = Ложь Тогда
				ТабДокумент.Вывести(ОбластьМакета);
			КонецЕсли;
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не УниверсальныеМеханизмы.ПроверитьВыводДляТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста И ВыведеноСтрок = ВсегоСтрокДокумента Тогда
				ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
				ВывестиПодвалЛиста = Не УниверсальныеМеханизмы.ПроверитьВыводДляТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
			КонецЕсли;
			
			Если ВывестиПодвалЛиста Тогда
				ТабДокумент.Вывести(ОбластьПодвалТаблицы);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КолСтраниц = КолСтраниц + 1;
				Если ВыведеноСтрок < ВсегоСтрокДокумента Тогда 
					ТабДокумент.Вывести(ОбластьМакетаКолонтитул);
					КолвоВыводаШапки = КолвоВыводаШапки + 1;
					// запоминаем номер первой строки таблицы
					НомерПервойСтроки = НомерПоследнейСтроки + 7;					
				КонецЕсли;
			КонецЕсли;
						
		КонецЦикла;
		Если КолСтраниц = КолвоВыводаШапки Тогда 
			ТабДокумент.Вывести(ОбластьПодвалТаблицы);
		КонецЕсли;
		
		ТаблицаОтработанногоВремени.Свернуть("ВидВремени", "ОтработаноДней, ОтработаноЧасов");
		Если ТаблицаОтработанногоВремени.Количество() > 0 Тогда
			 ТабДокумент.Вывести(ОбластьМакетаШапкаОтработанноеВремя);
			 Для Каждого ЭлементТаблицы Из ТаблицаОтработанногоВремени Цикл
				 Если ЗначениеЗаполнено(ЭлементТаблицы.ВидВремени) Тогда
					 НаименованиеВремени = ЭлементТаблицы.ВидВремени.ПолноеНаименование;
				     ОбластьМакетаОтработанноеВремя.Параметры["НаименованиеВремени"] = НаименованиеВремени;
					 ОбластьМакетаОтработанноеВремя.Параметры["ВидВремени"] = ЭлементТаблицы.ВидВремени;
					 ОбластьМакетаОтработанноеВремя.Параметры["КодОтработанноеВремя"] = ЭлементТаблицы.ВидВремени.БуквенныйКод;
					 ОбластьМакетаОтработанноеВремя.Параметры["ОбщееОтработаноДниЧасы"] = Строка(ЭлементТаблицы.ОтработаноДней) + " (" + Строка(ЭлементТаблицы.ОтработаноЧасов) + ")";
					 ТабДокумент.Вывести(ОбластьМакетаОтработанноеВремя);
				 КонецЕсли;
			 КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
		
		// если не было ни одного работника - выводим пустой бланк
	Если ТабДокумент.ВысотаТаблицы = ОбластьМакетаШапка.ВысотаТаблицы Тогда
		ТабДокумент.Вывести(ОбластьМакета);
    КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакетаПодвал);
	 
	Возврат ТабДокумент;
	
КонецФункции
	
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
// Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//	НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеПользователями.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "Табель" Тогда
		Если СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ВЦеломЗаПериод  Тогда
			ТекстПредупреждения = "Формирование печатной формы для способа ввода времени ""Сводно, в целом за период"" не предусмотрено!";
			Предупреждение(ТекстПредупреждения);
			Возврат;
		Иначе
			ТабДокумент = ПечатьТабеля();
		КонецЕсли;		      		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект,Метаданные().Синоним));
	
КонецПроцедуры // Печать()

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//	Структура, каждая строка которой соответствует одному из вариантов печати
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	
	СтруктураМакетов.Вставить("Табель",	"Табель");
	
	Возврат СтруктураМакетов;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Создает структуру, с параметрами выводимого сообщения 
// для помещения в массив сообщений-структур
Функция СоздатьСообщениеСтруктуру(ТекстСообщения, ВидСообщения, РасшифровкаСообщения = Неопределено)
	СтруктураСообщения = Новый Структура;
	СтруктураСообщения.Вставить("ТекстСообщения", ТекстСообщения);
	СтруктураСообщения.Вставить("ВидСообщения", ВидСообщения);
	СтруктураСообщения.Вставить("РасшифровкаСообщения", РасшифровкаСообщения);
	Возврат СтруктураСообщения
КонецФункции // СоздатьСообщениеСтруктуру()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// процедура проверяет, нет ли уже аналогичных записей в регистре РабочееВремяРаботниковОрганизаций
// Возвращает Истина если проведение возможно, иначе Ложь.
Процедура ПроверитьУникальностьОтработанногоВремени(Отказ)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Месяц", ПериодРегистрации);
	Запрос.УстановитьПараметр("НачалоМесяца", ДатаНачалаПериода);
	Запрос.УстановитьПараметр("КонецМесяца", ДатаОкончанияПериода);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Явка", КлассификаторЯвка);
	Если СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ВЦеломЗаПериод Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник КАК Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени КАК ВидВремени
		               |ПОМЕСТИТЬ ВТ_СотрудникиТабеля
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 1
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней1 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов1 > 0)
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 2
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней2 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов2 > 0)
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 3
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней3 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов3 > 0)
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 4
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней4 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов4 > 0)
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 5
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней5 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов5 > 0)
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 6
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней6 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов6 > 0)
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 7
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней7 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов7 > 0)
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 8
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней8 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов8 > 0)
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 9
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней9 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов9 > 0)
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 10
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней10 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов10 > 0)
					   |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 11
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней11 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов11 > 0)
					   |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 12
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней12 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов12 > 0)
					   |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 13
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней13 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов13 > 0)
					   |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 14
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней14 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов14 > 0)
					   |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	ТаблицаВЦеломЗаПериод.Сотрудник,
		               |	ТаблицаВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
		               |	ТаблицаВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме,
		               |	КолонкиСводногоТабеля.ВидВремени
		               |ИЗ
		               |	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТаблицаВЦеломЗаПериод
		               |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
		               |		ПО КолонкиСводногоТабеля.НомерСтроки = 15
		               |			И КолонкиСводногоТабеля.Ссылка = &ДокументСсылка
		               |ГДЕ
		               |	ТаблицаВЦеломЗаПериод.Ссылка = &ДокументСсылка
		               |	И (ТаблицаВЦеломЗаПериод.Дней15 > 0
		               |			ИЛИ ТаблицаВЦеломЗаПериод.Часов15 > 0)
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Сотрудник,
		               |	ВидВремени
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		               |	ПРЕДСТАВЛЕНИЕ(РабочееВремяРаботниковОрганизаций.Регистратор) КАК ДокументПредставление,
		               |	РабочееВремяРаботниковОрганизаций.Регистратор КАК КонфликтныйДокумент,
		               |	СотрудникиТабеля.Сотрудник.Наименование КАК СотрудникНаименование,
		               |	СотрудникиТабеля.Сотрудник КАК Сотрудник,
		               |	0 КАК ДублированиеНормыВремени
		               |ИЗ
		               |	ВТ_СотрудникиТабеля КАК СотрудникиТабеля
		               |		
		               |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботниковОрганизаций
		               |		ПО СотрудникиТабеля.Сотрудник = РабочееВремяРаботниковОрганизаций.Сотрудник
		               |			И (РабочееВремяРаботниковОрганизаций.Организация = &ГоловнаяОрганизация)
		               |			И (РабочееВремяРаботниковОрганизаций.Регистратор <> &ДокументСсылка)
		               |			И (РабочееВремяРаботниковОрганизаций.Период МЕЖДУ &Месяц И КОНЕЦПЕРИОДА(&Месяц, МЕСЯЦ))
		               |			И (РабочееВремяРаботниковОрганизаций.ВидИспользованияРабочегоВремени = СотрудникиТабеля.ВидВремени)
		               |			И (РабочееВремяРаботниковОрганизаций.ВидВремениОтсутствуетВДокументе = ЛОЖЬ)
		               |ГДЕ
		               |	(НЕ РабочееВремяРаботниковОрганизаций.Регистратор ЕСТЬ NULL )
		               |";
		               
		               Если ИспользоватьНормуВремени Тогда

			               // проверим отсутствие дублей ввода нормы времени
			               Запрос.Текст = Запрос.Текст + "
			               |ОБЪЕДИНИТЬ ВСЕ
			               |
			               |ВЫБРАТЬ
			               |	ПРЕДСТАВЛЕНИЕ(РабочееВремяРаботниковОрганизаций.Регистратор) КАК ДокументПредставление,
			               |	РабочееВремяРаботниковОрганизаций.Регистратор КАК КонфликтныйДокумент,
			               |	СотрудникиТабеля.Сотрудник.Наименование КАК СотрудникНаименование,
			               |	СотрудникиТабеля.Сотрудник КАК Сотрудник,
			               |	1 КАК ДублированиеНормыВремени
			               |ИЗ
			               |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			               |			Сотрудник
			               |		ИЗ
			               |			ВТ_СотрудникиТабеля
			               |		ГДЕ
			               |			ЧасовПоНорме <> 0) КАК СотрудникиТабеля
			               |
			               |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботниковОрганизаций
			               |		ПО СотрудникиТабеля.Сотрудник = РабочееВремяРаботниковОрганизаций.Сотрудник
			               |			И РабочееВремяРаботниковОрганизаций.Организация = &ГоловнаяОрганизация
			               |			И РабочееВремяРаботниковОрганизаций.Период МЕЖДУ &Месяц И КОНЕЦПЕРИОДА(&Месяц, МЕСЯЦ)
			               |			И РабочееВремяРаботниковОрганизаций.ВидИспользованияРабочегоВремени = &Явка
			               |			И РабочееВремяРаботниковОрганизаций.Регистратор <> &ДокументСсылка
			               |			И РабочееВремяРаботниковОрганизаций.ЧасовПоНорме <> 0
			               |			И РабочееВремяРаботниковОрганизаций.ВидВремениОтсутствуетВДокументе = ИСТИНА
			               |ГДЕ
			               |	НЕ (РабочееВремяРаботниковОрганизаций.Регистратор ЕСТЬ NULL)
			               |";
			               
						КонецЕсли;

	Иначе
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		ИндексНачальногоДня = День(ДатаНачалаПериода);
		ИндексКонечногоДня = День(ДатаОкончанияПериода);
		ТекДата = ДатаНачалаПериода;
		
		Для ИндексДня = ИндексНачальногоДня По ИндексКонечногоДня Цикл
			СтрИндексДня = Строка(ИндексДня);
			Запрос.Текст = 
			"ВЫБРАТЬ 
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник КАК Сотрудник,
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ДнейПоНорме КАК ДнейПоНорме,
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ЧасовПоНорме КАК ЧасовПоНорме,
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ПервыйВидВремени"+СтрИндексДня+" КАК ВидВремени,
			|		&ДатаТабеля КАК ДатаТабеля
			|ПОМЕСТИТЬ ВТДанныеТабеляПоДням" + СтрИндексДня + "
			|	ИЗ
			|		Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
			|	ГДЕ
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
			|		И ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ПервыйВидВремени"+СтрИндексДня+" <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка) 
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ 
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник,
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ДнейПоНорме,
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ЧасовПоНорме,
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ВторойВидВремени"+СтрИндексДня+" КАК ВидВремени,
			|		&ДатаТабеля КАК ДатаТабеля
			|	ИЗ
			|		Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
			|	ГДЕ
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
			|		И ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ВторойВидВремени"+СтрИндексДня+" <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка) 
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ 
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник,
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ДнейПоНорме,
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ЧасовПоНорме,
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ТретийВидВремени"+СтрИндексДня+" КАК ВидВремени,
			|		&ДатаТабеля КАК ДатаТабеля
			|	ИЗ
			|		Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
			|	ГДЕ
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
			|		И ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ТретийВидВремени"+СтрИндексДня+" <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ 
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник,
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ДнейПоНорме,
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ЧасовПоНорме,
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ЧетвертыйВидВремени"+СтрИндексДня+" КАК ВидВремени,
			|		&ДатаТабеля КАК ДатаТабеля
			|	ИЗ
			|		Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
			|	ГДЕ
			|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
			|		И ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ЧетвертыйВидВремени"+СтрИндексДня+" <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
			|";
			Запрос.УстановитьПараметр("ДатаТабеля", ТекДата);
			Запрос.Выполнить();
			
			Если ИндексДня = ИндексНачальногоДня Тогда
				ТекстЗапроса = 
				"ВЫБРАТЬ 
				|		ДанныеТабеляПоДням.ДатаТабеля,		
				|		ДанныеТабеляПоДням.Сотрудник,
				|		ДанныеТабеляПоДням.ДнейПоНорме,
				|		ДанныеТабеляПоДням.ЧасовПоНорме,
				|		ДанныеТабеляПоДням.ВидВремени
				|ПОМЕСТИТЬ ВТДанныеТабеляПоДням
				|	ИЗ
				|		ВТДанныеТабеляПоДням"+СтрИндексДня+" КАК ДанныеТабеляПоДням
				|";
			Иначе 	
				ТекстЗапроса = ТекстЗапроса + 
				"	ОБЪЕДИНИТЬ ВСЕ
				|
				|	ВЫБРАТЬ 
				|		ДанныеТабеляПоДням.ДатаТабеля,
				|		ДанныеТабеляПоДням.Сотрудник,
				|		ДанныеТабеляПоДням.ДнейПоНорме,
				|		ДанныеТабеляПоДням.ЧасовПоНорме,
				|		ДанныеТабеляПоДням.ВидВремени
				|	ИЗ
				|		ВТДанныеТабеляПоДням"+СтрИндексДня+" КАК ДанныеТабеляПоДням
				|";
			КонецЕсли;

			ТекДата = ТекДата + мДлинаСуток;
		КонецЦикла;
		
		Запрос.Текст = ТекстЗапроса + 
		"ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник";
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(РабочееВремяРаботниковОрганизаций.Регистратор) КАК ДокументПредставление,
		|	РабочееВремяРаботниковОрганизаций.Регистратор КАК КонфликтныйДокумент,
		|	СотрудникиТабеля.Сотрудник.Наименование КАК СотрудникНаименование,
		|	СотрудникиТабеля.Сотрудник КАК Сотрудник,
		|	0 КАК ДублированиеНормыВремени
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		СотрудникиТабеля.ДатаТабеля КАК ДатаТабеля,
		|		СотрудникиТабеля.Сотрудник КАК Сотрудник,
		|		СотрудникиТабеля.ДнейПоНорме КАК ДнейПоНорме,
		|		СотрудникиТабеля.ЧасовПоНорме КАК ЧасовПоНорме,
		|		СотрудникиТабеля.ВидВремени КАК ВидВремени
		|	ИЗ
		|		ВТДанныеТабеляПоДням КАК СотрудникиТабеля) КАК СотрудникиТабеля
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботниковОрганизаций
		|		ПО СотрудникиТабеля.Сотрудник = РабочееВремяРаботниковОрганизаций.Сотрудник
		|			И РабочееВремяРаботниковОрганизаций.Организация = &ГоловнаяОрганизация
		|			И (РабочееВремяРаботниковОрганизаций.Регистратор <> &ДокументСсылка)
		|			И (СотрудникиТабеля.ВидВремени = РабочееВремяРаботниковОрганизаций.ВидИспользованияРабочегоВремени)
		|			И РабочееВремяРаботниковОрганизаций.Период МЕЖДУ &Месяц И КОНЕЦПЕРИОДА(&Месяц, МЕСЯЦ)
		|			И (РабочееВремяРаботниковОрганизаций.ВЦеломЗаПериод 
		|					ИЛИ СотрудникиТабеля.ДатаТабеля = РабочееВремяРаботниковОрганизаций.Период)
		|			И РабочееВремяРаботниковОрганизаций.ВидВремениОтсутствуетВДокументе = ЛОЖЬ
		|ГДЕ
		|	НЕ (РабочееВремяРаботниковОрганизаций.Регистратор ЕСТЬ NULL)
		|";

		Если ИспользоватьНормуВремени Тогда

			// проверим отсутствие дублей ввода нормы времени
			Запрос.Текст = Запрос.Текст + "
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПРЕДСТАВЛЕНИЕ(РабочееВремяРаботниковОрганизаций.Регистратор) КАК ДокументПредставление,
			|	РабочееВремяРаботниковОрганизаций.Регистратор КАК КонфликтныйДокумент,
			|	СотрудникиТабеля.Сотрудник.Наименование КАК СотрудникНаименование,
			|	СотрудникиТабеля.Сотрудник КАК Сотрудник,
			|	1 КАК ДублированиеНормыВремени
			|ИЗ
			|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|			Сотрудник
			|		ИЗ
			|			ВТДанныеТабеляПоДням
			|		ГДЕ
			|			ЧасовПоНорме <> 0) КАК СотрудникиТабеля
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботниковОрганизаций
			|		ПО СотрудникиТабеля.Сотрудник = РабочееВремяРаботниковОрганизаций.Сотрудник
			|			И РабочееВремяРаботниковОрганизаций.Организация = &ГоловнаяОрганизация
			|			И РабочееВремяРаботниковОрганизаций.Период МЕЖДУ &Месяц И КОНЕЦПЕРИОДА(&Месяц, МЕСЯЦ)
			|			И (РабочееВремяРаботниковОрганизаций.ВЦеломЗаПериод
			|					ИЛИ РабочееВремяРаботниковОрганизаций.Период МЕЖДУ &НачалоМесяца И &КонецМесяца)
			|			И РабочееВремяРаботниковОрганизаций.ВидИспользованияРабочегоВремени = &Явка
			|			И РабочееВремяРаботниковОрганизаций.Регистратор <> &ДокументСсылка
			|			И РабочееВремяРаботниковОрганизаций.ЧасовПоНорме <> 0
			|			И РабочееВремяРаботниковОрганизаций.ВидВремениОтсутствуетВДокументе
			|ГДЕ
			|	НЕ (РабочееВремяРаботниковОрганизаций.Регистратор ЕСТЬ NULL)
			|";
		   
		КонецЕсли;
		
		
	КонецЕсли;

	Запрос.Текст = Запрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	СотрудникНаименование,
	|	Сотрудник,
	|	КонфликтныйДокумент,
	|	ДублированиеНормыВремени УБЫВ
	|";
	
	ВыборкаРезультата = Запрос.Выполнить().Выбрать();
	
	#Если Клиент Тогда
		СимволыРазделителя = "<BR>";
	#Иначе
		СимволыРазделителя = Символы.ПС;
	#КонецЕсли
	
	Если ВыборкаРезультата.Количество() > 0 Тогда
		СтрокаСотрудников = "";
		
		РасшифровкаКомментария = Новый Массив;
		ПредыдущийСотрудник = Неопределено;
		ПредыдущийКонфликтныйДокумент = Неопределено;
		
		Пока ВыборкаРезультата.Следующий() Цикл
			
			// чтобы дважды не показывать одно и тоже сообщение, если по документу несколько видов сообщений
			Если ВыборкаРезультата.Сотрудник = ПредыдущийСотрудник
					И ВыборкаРезультата.КонфликтныйДокумент = ПредыдущийКонфликтныйДокумент Тогда
				Продолжить;
			КонецЕсли;
		
			ПредыдущийСотрудник = ВыборкаРезультата.Сотрудник;
			ПредыдущийКонфликтныйДокумент = ВыборкаРезультата.КонфликтныйДокумент;
			
			СтрокаСотрудников = СтрокаСотрудников + СимволыРазделителя + ВыборкаРезультата.СотрудникНаименование + " (%%" + ?(ВыборкаРезультата.ДублированиеНормыВремени <> 0, " - уже указана норма времени за месяц", "") + ")";
			РасшифровкаКомментария.Добавить(Новый Структура("Представление, Расшифровка", ВыборкаРезультата.ДокументПредставление, ВыборкаРезультата.КонфликтныйДокумент));
			
		КонецЦикла;
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("На следующих сотрудников уже введены документы учета отработанного времени в этом периоде:" + СимволыРазделителя + СтрокаСотрудников, Перечисления.ВидыСообщений.Ошибка, РасшифровкаКомментария));
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьУникальностьОтработанногоВремени()	

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//	ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//	Отказ					- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ)
	
	//  Организация
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ГоловнаяОрганизация) Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("Не указана организация, по которой вводится табель!", Перечисления.ВидыСообщений.Ошибка));
		Отказ = Истина;
	КонецЕсли;
	
	// ПериодРегистрации
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодРегистрации) Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("Не указан период регистрации!", Перечисления.ВидыСообщений.Ошибка));
		Отказ = Истина
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	Результат запроса
//
Функция СформироватьЗапросПоШапке()
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",			Ссылка);
	Запрос.УстановитьПараметр("парамПустаяОрганизация",	Справочники.Организации.ПустаяСсылка());
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабельУчетаРабочегоВремениОрганизации.Дата,
	|	ТабельУчетаРабочегоВремениОрганизации.ПериодРегистрации,
	|	ТабельУчетаРабочегоВремениОрганизации.СпособВводаДанных,
	|	ТабельУчетаРабочегоВремениОрганизации.СпособУказанияПериода,
	|	ТабельУчетаРабочегоВремениОрганизации.ДатаНачалаПериода,
	|	ТабельУчетаРабочегоВремениОрганизации.ДатаОкончанияПериода,
	|	ТабельУчетаРабочегоВремениОрганизации.ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА ТабельУчетаРабочегоВремениОрганизации.Организация.ГоловнаяОрганизация = &парамПустаяОрганизация
	|			ТОГДА ТабельУчетаРабочегоВремениОрганизации.Организация
	|		ИНАЧЕ ТабельУчетаРабочегоВремениОрганизации.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ТабельУчетаРабочегоВремениОрганизации.Организация Как Организация,
	|	ТабельУчетаРабочегоВремениОрганизации.Ссылка КАК Документ,
	|	ТабельУчетаРабочегоВремениОрганизации.ИспользоватьНормуВремени КАК ИспользоватьНормуВремени,
	|	ТабельУчетаРабочегоВремениОрганизации.ИспользоватьПоказатели КАК ИспользоватьПоказатели,
	|	ТабельУчетаРабочегоВремениОрганизации.ИспользоватьРаспределениеНачислений КАК ИспользоватьРаспределениеНачислений
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации КАК ТабельУчетаРабочегоВремениОрганизации
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизации.Ссылка = &ДокументСсылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "ОтработанноеВремя" документа
//
// Параметры:
//	ВыборкаПоШапкеДокумента
//
// Возвращаемое значение:
//	Результат запроса.
//
Функция СформироватьЗапросПоОтработанноеВремя(ВыборкаПоШапкеДокумента)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДокументСсылка",			 Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	 ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Месяц", 					 ВыборкаПоШапкеДокумента.ПериодРегистрации);
	
	Для ИндексДня = 1 По День(КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации)) Цикл
		ТекДата = ВыборкаПоШапкеДокумента.ПериодРегистрации + (ИндексДня - 1) * мДлинаСуток;
		Если ИндексДня = 1 Тогда
			ТекстЗапроса = 
			"ВЫБРАТЬ 
			|		" + Строка(ИндексДня) + " КАК ИндексДня,
			|		ДАТАВРЕМЯ(" + Формат(ТекДата, "ДФ='гггг,ММ,дд'") + ") КАК ДатаТабеля
			|ПОМЕСТИТЬ ВТКалендарныеДни
			|";
		Иначе 	
			ТекстЗапроса = ТекстЗапроса + 
			"	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ 
			|		" + Строка(ИндексДня) + " КАК ИндексДня,
			|		ДАТАВРЕМЯ(" + Формат(ТекДата, "ДФ='гггг,ММ,дд'") + ") КАК ДатаТабеля
			|";
		КонецЕсли;
	КонецЦикла;
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ИндексНачальногоДня = День(ВыборкаПоШапкеДокумента.ДатаНачалаПериода);
	ИндексКонечногоДня = День(ВыборкаПоШапкеДокумента.ДатаОкончанияПериода);
	Для ИндексДня = ИндексНачальногоДня По ИндексКонечногоДня Цикл
		ТекДата = ВыборкаПоШапкеДокумента.ПериодРегистрации + (ИндексДня - 1) * мДлинаСуток;
		СтрИндексДня = Строка(ИндексДня);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.НомерСтроки КАК НомерСтроки,		
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник КАК Сотрудник,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ПервыйВидВремени"+СтрИндексДня+" КАК ВидВремени,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ПервыйЧасов"+СтрИндексДня+" КАК Часов,
		|		"+СтрИндексДня+" КАК ИндексДня
		|ПОМЕСТИТЬ ВТДанныеТабеляПоДням" + СтрИндексДня + "
		|	ИЗ
		|		Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
		|	ГДЕ
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
		|		И ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ПервыйВидВремени"+СтрИндексДня+" <>
		|			ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ 
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.НомерСтроки,		
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ВторойВидВремени"+СтрИндексДня+",
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ВторойЧасов"+СтрИндексДня+",
		|		"+СтрИндексДня+"
		|	ИЗ
		|		Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
		|	ГДЕ
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
		|		И ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ВторойВидВремени"+СтрИндексДня+" <>
		|			ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ 
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.НомерСтроки,		
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ТретийВидВремени"+СтрИндексДня+",
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ТретийЧасов"+СтрИндексДня+",
		|		"+СтрИндексДня+"
		|	ИЗ
		|		Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
		|	ГДЕ
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
		|		И ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ТретийВидВремени"+СтрИндексДня+" <>
		|			ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ 
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.НомерСтроки,		
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник,
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ЧетвертыйВидВремени"+СтрИндексДня+",
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ЧетвертыйЧасов"+СтрИндексДня+",
		|		"+СтрИндексДня+"
		|	ИЗ
		|		Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
		|	ГДЕ
		|		ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
		|		И ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ЧетвертыйВидВремени"+СтрИндексДня+" <>
		|			ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
		|";
		Запрос.Выполнить();
		
		Если ИндексДня = ИндексНачальногоДня Тогда
			ТекстЗапроса = 
			"ВЫБРАТЬ 
			|		ДанныеТабеляПоДням.НомерСтроки,		
			|		ДанныеТабеляПоДням.ИндексДня,		
			|		ДанныеТабеляПоДням.ВидВремени,		
			|		ДанныеТабеляПоДням.Часов,		
			|		ДанныеТабеляПоДням.Сотрудник,
			|		ДАТАВРЕМЯ(" + Формат(ТекДата, "ДФ='гггг,ММ,дд'") + ") КАК ДатаТабеля
			|ПОМЕСТИТЬ ВТДанныеТабеляПоДням
			|	ИЗ
			|		ВТДанныеТабеляПоДням"+СтрИндексДня+" КАК ДанныеТабеляПоДням
			|";
		Иначе 	
			ТекстЗапроса = ТекстЗапроса + 
			"	ОБЪЕДИНИТЬ ВСЕ
			|
			|	ВЫБРАТЬ 
			|		ДанныеТабеляПоДням.НомерСтроки,		
			|		ДанныеТабеляПоДням.ИндексДня,		
			|		ДанныеТабеляПоДням.ВидВремени,		
			|		ДанныеТабеляПоДням.Часов,		
			|		ДанныеТабеляПоДням.Сотрудник,
			|		ДАТАВРЕМЯ(" + Формат(ТекДата, "ДФ='гггг,ММ,дд'") + ") КАК ДатаТабеля
			|	ИЗ
			|		ВТДанныеТабеляПоДням"+СтрИндексДня+" КАК ДанныеТабеляПоДням
			|";
		КонецЕсли;
	КонецЦикла;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	СтрокиТабеля.Сотрудник КАК Сотрудник
	               |ПОМЕСТИТЬ ВТ_РазличныеСтрокиТабеля
	               |ИЗ
	               |	ВТДанныеТабеляПоДням КАК СтрокиТабеля
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СтрокиТабеля.Сотрудник КАК Сотрудник,
	               |	КалендарныеДни.ИндексДня КАК ИндексДня,
	               |	КалендарныеДни.ДатаТабеля КАК ДатаТабеля,
	               |	МАКСИМУМ(РаботникиОрганизации.Период) КАК Период
	               |ПОМЕСТИТЬ ВТ_ПоследниеДатыРаботников
	               |ИЗ
	               |	ВТКалендарныеДни КАК КалендарныеДни
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазличныеСтрокиТабеля КАК СтрокиТабеля
	               |		ПО (ИСТИНА)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	               |		ПО (РаботникиОрганизации.Период <= КалендарныеДни.ДатаТабеля)
	               |			И (РаботникиОрганизации.Организация = &ГоловнаяОрганизация)
	               |			И (РаботникиОрганизации.Сотрудник = СтрокиТабеля.Сотрудник)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СтрокиТабеля.Сотрудник,
	               |	КалендарныеДни.ИндексДня,
	               |	КалендарныеДни.ДатаТабеля
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Сотрудник,
	               |	Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПоследниеДатыРаботников.Сотрудник КАК Сотрудник,
	               |	ПоследниеДатыРаботников.ИндексДня,
	               |	ПоследниеДатыРаботников.ДатаТабеля КАК ДатаТабеля,
	               |	ПоследниеДатыРаботников.Период КАК ДатаПоследнегоДвиженияПоРаботнику,
	               |	РаботникиОрганизации.ПричинаИзмененияСостояния,
	               |	РаботникиОрганизации.ГрафикРаботы,
	               |	РаботникиОрганизации.ПодразделениеОрганизации,
	               |	РаботникиОрганизации.Должность,
	               |	РаботникиОрганизации.ТарифныйРазряд
	               |ПОМЕСТИТЬ ВТ_РаботникиОрганизации
	               |ИЗ
	               |	ВТ_ПоследниеДатыРаботников КАК ПоследниеДатыРаботников
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	               |		ПО ПоследниеДатыРаботников.Сотрудник = РаботникиОрганизации.Сотрудник
	               |			И ПоследниеДатыРаботников.Период = РаботникиОрганизации.Период
	               |			И (РаботникиОрганизации.Организация = &ГоловнаяОрганизация)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Сотрудник,
	               |	ДатаТабеля
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПоследниеДатыНачислений.Сотрудник КАК Сотрудник,
	               |	ПоследниеДатыНачислений.ДатаТабеля КАК ДатаТабеля,
	               |	ВЫБОР
	               |		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	               |				И ПлановыеНачисления.ПериодЗавершения < ПоследниеДатыНачислений.ДатаТабеля
	               |			ТОГДА ПлановыеНачисления.ВидРасчетаЗавершения.ОбозначениеВТабелеУчетаРабочегоВремени
	               |		ИНАЧЕ ПлановыеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени
	               |	КОНЕЦ КАК ВидВремени
	               |ПОМЕСТИТЬ ВТ_ПлановыеНачисления
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		РаботникиОрганизации.ДатаТабеля КАК ДатаТабеля,
	               |		РаботникиОрганизации.Сотрудник КАК Сотрудник,
	               |		ПлановыеНачисления.ВидРасчетаИзмерение КАК ВидРасчетаИзмерение,
	               |		МАКСИМУМ(ПлановыеНачисления.Период) КАК Период
	               |	ИЗ
	               |		ВТ_РаботникиОрганизации КАК РаботникиОрганизации
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	               |			ПО РаботникиОрганизации.Сотрудник = ПлановыеНачисления.Сотрудник
	               |				И (ПлановыеНачисления.Организация = &ГоловнаяОрганизация)
	               |				И (ПлановыеНачисления.Период <= РаботникиОрганизации.ДатаТабеля)
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		РаботникиОрганизации.ДатаТабеля,
	               |		РаботникиОрганизации.Сотрудник,
	               |		ПлановыеНачисления.ВидРасчетаИзмерение) КАК ПоследниеДатыНачислений
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	               |		ПО ПоследниеДатыНачислений.Сотрудник = ПлановыеНачисления.Сотрудник
	               |			И ПоследниеДатыНачислений.Период = ПлановыеНачисления.Период
	               |			И ПоследниеДатыНачислений.ВидРасчетаИзмерение = ПлановыеНачисления.ВидРасчетаИзмерение
	               |			И (ПлановыеНачисления.Организация = &ГоловнаяОрганизация)
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	               |					И ПлановыеНачисления.ПериодЗавершения < ПоследниеДатыНачислений.ДатаТабеля
	               |				ТОГДА ЕСТЬNULL(ПлановыеНачисления.ВидРасчетаЗавершения.ОбозначениеВТабелеУчетаРабочегоВремени, ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка))
	               |			ИНАЧЕ ЕСТЬNULL(ПлановыеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени, ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка))
	               |		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	               |	И ВЫБОР
	               |			КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	               |					И ПлановыеНачисления.ПериодЗавершения < ПоследниеДатыНачислений.ДатаТабеля
	               |				ТОГДА ПлановыеНачисления.ДействиеЗавершения
	               |			ИНАЧЕ ПлановыеНачисления.Действие
	               |		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПоследниеДатыШР.Сотрудник,
	               |	ПоследниеДатыШР.ДатаТабеля,
	               |	ПоследниеДатыШР.ВидНадбавки.ОбозначениеВТабелеУчетаРабочегоВремени
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		РаботникиОрганизации.ДатаТабеля КАК ДатаТабеля,
	               |		РаботникиОрганизации.Сотрудник КАК Сотрудник,
	               |		РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	               |		РаботникиОрганизации.Должность КАК Должность,
	               |		РаботникиОрганизации.ТарифныйРазряд КАК ТарифныйРазряд,
	               |		НадбавкиШР.ВидНадбавки КАК ВидНадбавки,
	               |		МАКСИМУМ(НадбавкиШР.Период) КАК Период
	               |	ИЗ
	               |		ВТ_РаботникиОрганизации КАК РаботникиОрганизации
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций КАК НадбавкиШР
	               |			ПО РаботникиОрганизации.ПодразделениеОрганизации = НадбавкиШР.ПодразделениеОрганизации
	               |				И РаботникиОрганизации.Должность = НадбавкиШР.Должность
	               |				И РаботникиОрганизации.ТарифныйРазряд = НадбавкиШР.ТарифныйРазряд
	               |				И (НадбавкиШР.Период <= РаботникиОрганизации.ДатаТабеля)
	               |	ГДЕ
	               |		РаботникиОрганизации.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		РаботникиОрганизации.ДатаТабеля,
	               |		РаботникиОрганизации.Сотрудник,
	               |		РаботникиОрганизации.ПодразделениеОрганизации,
	               |		РаботникиОрганизации.Должность,
	               |		РаботникиОрганизации.ТарифныйРазряд,
	               |		НадбавкиШР.ВидНадбавки) КАК ПоследниеДатыШР
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций КАК НадбавкиШР
	               |		ПО ПоследниеДатыШР.ПодразделениеОрганизации = НадбавкиШР.ПодразделениеОрганизации
	               |			И ПоследниеДатыШР.Должность = НадбавкиШР.Должность
	               |			И ПоследниеДатыШР.ТарифныйРазряд = НадбавкиШР.ТарифныйРазряд
	               |			И ПоследниеДатыШР.ВидНадбавки = НадбавкиШР.ВидНадбавки
	               |			И ПоследниеДатыШР.Период = НадбавкиШР.Период
	               |ГДЕ
	               |	НадбавкиШР.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	               |	И ЕСТЬNULL(ПоследниеДатыШР.ВидНадбавки.ОбозначениеВТабелеУчетаРабочегоВремени, ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(ТабельИПлановыеНачисления.НомерСтроки) КАК НомерСтроки,
	               |	ТабельИПлановыеНачисления.ИндексДня,
	               |	ТабельИПлановыеНачисления.ВидВремени,
				   |	ЕСТЬNULL(ИспользованияРабочегоВремениДляРасчета.ВидИспользованияРабочегоВремениРасчетный, ТабельИПлановыеНачисления.ВидВремени) КАК ВидВремениРасчетный,
	               |	СУММА(ТабельИПлановыеНачисления.Часов) КАК Часов,
	               |	ТабельИПлановыеНачисления.Сотрудник КАК Сотрудник,
	               |	ТабельИПлановыеНачисления.ДатаТабеля КАК ДатаТабеля,
	               |	ВЫБОР
	               |		КОГДА СУММА(ТабельИПлановыеНачисления.ЭтоДанныеТабеля) > 0
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ВидВремениОтсутствуетВДокументе
	               |ПОМЕСТИТЬ ВТ_ТабельИПлановыеНачисления
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ДанныеТабеляПоДням.НомерСтроки КАК НомерСтроки,
	               |		ДанныеТабеляПоДням.ИндексДня КАК ИндексДня,
	               |		ДанныеТабеляПоДням.ВидВремени КАК ВидВремени,
	               |		ДанныеТабеляПоДням.Часов КАК Часов,
	               |		ДанныеТабеляПоДням.Сотрудник КАК Сотрудник,
	               |		ДанныеТабеляПоДням.ДатаТабеля КАК ДатаТабеля,
	               |		1 КАК ЭтоДанныеТабеля
	               |	ИЗ
	               |		ВТДанныеТабеляПоДням КАК ДанныеТабеляПоДням
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		0,
	               |		ДЕНЬ(ПлановыеНачисления.ДатаТабеля),
	               |		ПлановыеНачисления.ВидВремени,
	               |		0,
	               |		ПлановыеНачисления.Сотрудник,
	               |		ПлановыеНачисления.ДатаТабеля,
	               |		0
	               |	ИЗ
	               |		ВТ_ПлановыеНачисления КАК ПлановыеНачисления) КАК ТабельИПлановыеНачисления
				   |
				   |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаИспользованияРабочегоВремениДляРасчетаЗПСотрудниковОрганизаций.СрезПоследних(&Месяц,) КАК ИспользованияРабочегоВремениДляРасчета
				   |		ПО ТабельИПлановыеНачисления.ВидВремени = ИспользованияРабочегоВремениДляРасчета.ВидИспользованияРабочегоВремениКадровый
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТабельИПлановыеНачисления.ИндексДня,
	               |	ТабельИПлановыеНачисления.ВидВремени,
				   |	ЕСТЬNULL(ИспользованияРабочегоВремениДляРасчета.ВидИспользованияРабочегоВремениРасчетный, ТабельИПлановыеНачисления.ВидВремени),
	               |	ТабельИПлановыеНачисления.Сотрудник,
	               |	ТабельИПлановыеНачисления.ДатаТабеля
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Сотрудник,
	               |	ДатаТабеля
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СотрудникиДокумента.НомерСтроки КАК НомерСтроки,
	               |	СотрудникиДокумента.Сотрудник КАК Сотрудник,
	               |	СотрудникиДокумента.Сотрудник.Наименование КАК СотрудникНаименование,
	               |	ЕСТЬNULL(СотрудникиДокумента.КоличествоДублей, 0) КАК КоличествоДублей,
	               |	СотрудникиДокумента.ДнейПоНорме КАК ДнейПоНорме,
	               |	СотрудникиДокумента.ЧасовПоНорме КАК ЧасовПоНорме,
	               |	РаботникиОрганизации.ИндексДня КАК ДеньМесяца,
	               |	РаботникиОрганизации.ДатаТабеля КАК ДатаТабеля,
	               |	РаботникиОрганизации.ДатаПоследнегоДвиженияПоРаботнику,
	               |	РаботникиОрганизации.ПричинаИзмененияСостояния,
	               |	ЕСТЬNULL(ДанныеТабеляПоДням.ВидВремени, ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Работа)) КАК ВидВремени,
	               |	ЕСТЬNULL(ДанныеТабеляПоДням.ВидВремениРасчетный, ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Работа)) КАК ВидВремениРасчетный,
	               |	ЕСТЬNULL(ДанныеТабеляПоДням.Часов, 0) КАК Часов,
	               |	ЕСТЬNULL(ДанныеТабеляПоДням.ВидВремениОтсутствуетВДокументе, ИСТИНА) КАК ВидВремениОтсутствуетВДокументе
	               |ИЗ
	               |	ВТ_РаботникиОрганизации КАК РаботникиОрганизации
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник КАК Сотрудник,
	               |			МАКСИМУМ(ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ДнейПоНорме) КАК ДнейПоНорме,
	               |			МАКСИМУМ(ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.ЧасовПоНорме) КАК ЧасовПоНорме,
	               |			МИНИМУМ(ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.НомерСтроки) КАК НомерСтроки,
	               |			КОЛИЧЕСТВО(*) КАК КоличествоДублей
	               |		ИЗ
	               |			Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремя КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя
	               |		ГДЕ
	               |			ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Ссылка = &ДокументСсылка
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремя.Сотрудник) КАК СотрудникиДокумента
	               |		ПО РаботникиОрганизации.Сотрудник = СотрудникиДокумента.Сотрудник
				   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабельИПлановыеНачисления КАК ДанныеТабеляПоДням
	               |		ПО РаботникиОрганизации.Сотрудник = ДанныеТабеляПоДням.Сотрудник
	               |			И РаботникиОрганизации.ДатаТабеля = ДанныеТабеляПоДням.ДатаТабеля
	               |ГДЕ
	               |	(НЕ РаботникиОрганизации.Сотрудник ЕСТЬ NULL )
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Сотрудник,
	               |	ДеньМесяца";
	
	РезультатЗапроса = Запрос.Выполнить();
		
	Возврат РезультатЗапроса;
	
КонецФункции // СформироватьЗапросПоОтработанноеВремя()

// Формирует запрос по таблице "ОтработанноеВремяВЦеломЗаПериод" документа
//
// Параметры:
//	ВыборкаПоШапкеДокумента
//
// Возвращаемое значение:
//	Результат запроса.
//
Функция СформироватьЗапросПоОтработанноеВремяВЦеломЗаПериод(ВыборкаПоШапкеДокумента)
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",			Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("ПериодРегистрации",		ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("КонецПериодаРегистрации",КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации));
	Запрос.УстановитьПараметр("ПустойКлассификатор",	Справочники.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка());
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник КАК Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени КАК ВидИспользованияРабочегоВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней1 КАК Дней,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов1 КАК Часов,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|
	|ПОМЕСТИТЬ ВТОтработанноеВремяВЦеломЗаПериод
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 1)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней1 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов1 > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней2,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов2,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 2)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней2 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов2 > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней3,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов3,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 3)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней3 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов3 > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней4,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов4,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 4)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней4 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов4 > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней5,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов5,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 5)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней5 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов5 > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней6,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов6,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 6)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней6 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов6 > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней7,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов7,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 7)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней7 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов7 > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней8,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов8,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 8)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней8 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов8 > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней9,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов9,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 9)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней9 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов9 > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней10,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов10,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 10)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней10 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов10 > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней11,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов11,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 11)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней11 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов11 > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней12,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов12,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 12)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней12 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов12 > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней13,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов13,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 13)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней13 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов13 > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней14,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов14,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 14)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней14 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов14 > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Сотрудник,
	|	КолонкиСводногоТабеля.ВидВремени,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней15,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов15,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме КАК ДнейПоНорме,
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме КАК ЧасовПоНорме
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.ОтработанноеВремяВЦеломЗаПериод КАК ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации.КолонкиСводногоТабеля КАК КолонкиСводногоТабеля
	|		ПО (КолонкиСводногоТабеля.НомерСтроки = 15)
	|			И (КолонкиСводногоТабеля.Ссылка = &ДокументСсылка)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Ссылка = &ДокументСсылка
	|	И КолонкиСводногоТабеля.ВидВремени <> ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка)
	|	И (ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Дней15 > 0
	|			ИЛИ ТабельУчетаРабочегоВремениОрганизацииОтработанноеВремяВЦеломЗаПериод.Часов15 > 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ВидИспользованияРабочегоВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сотрудник
	|
	|ПОМЕСТИТЬ ВТ_СписокРаботников
	|ИЗ
	|	ВТОтработанноеВремяВЦеломЗаПериод
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,
	|	РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	РаботникиОрганизации.Должность КАК Должность,
	|	РаботникиОрганизации.ТарифныйРазряд КАК ТарифныйРазряд
	|
	|ПОМЕСТИТЬ ВТ_РаботникиОрганизации
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&ПериодРегистрации,
	|			Организация = &ГоловнаяОрганизация
	|				И (Сотрудник) В
	|					(ВЫБРАТЬ
	|						ВТ_СписокРаботников.Сотрудник
	|					ИЗ
	|						ВТ_СписокРаботников)) КАК РаботникиОрганизации
	|ГДЕ
	|	РаботникиОрганизации.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|
	|ОБЪЕДИНИТЬ // без повторяющихся
	|
	|ВЫБРАТЬ
	|	РаботникиОрганизации.Сотрудник,
	|	РаботникиОрганизации.ГрафикРаботы,
	|	РаботникиОрганизации.ПодразделениеОрганизации,
	|	РаботникиОрганизации.Должность,
	|	РаботникиОрганизации.ТарифныйРазряд
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокРаботников КАК СписокРаботников
	|		ПО РаботникиОрганизации.Сотрудник = СписокРаботников.Сотрудник
	|
	|ГДЕ
	|	РаботникиОрганизации.Организация = &ГоловнаяОрганизация
	|	И РаботникиОрганизации.Период > &ПериодРегистрации
	|	И РаботникиОрганизации.Период <= &КонецПериодаРегистрации
	|	И РаботникиОрганизации.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлановыеНачисления.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1) 
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.ВидРасчетаЗавершения.ОбозначениеВТабелеУчетаРабочегоВремени
	|		ИНАЧЕ ПлановыеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени
	|	КОНЕЦ ВидВремени
	|	
	|ПОМЕСТИТЬ ВТ_ПлановыеНачисления
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|				&ПериодРегистрации,
	|				Организация = &ГоловнаяОрганизация
	|				И (Сотрудник) В (ВЫБРАТЬ Сотрудник ИЗ ВТ_СписокРаботников)) КАК ПлановыеНачисления
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1) 
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ПлановыеНачисления.ДействиеЗавершения
	|		ИНАЧЕ ПлановыеНачисления.Действие
	|	КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|	И ВЫБОР
	|		КОГДА ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1) 
	|				И ПлановыеНачисления.ПериодЗавершения < &ПериодРегистрации
	|			ТОГДА ЕСТЬNULL(ПлановыеНачисления.ВидРасчетаЗавершения.ОбозначениеВТабелеУчетаРабочегоВремени, &ПустойКлассификатор)
	|		ИНАЧЕ ЕСТЬNULL(ПлановыеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени, &ПустойКлассификатор)
	|	КОНЕЦ <> &ПустойКлассификатор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеНачисления.Сотрудник,
	|	ПлановыеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ВидВремени
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокРаботников КАК СписокРаботников
	|		ПО ПлановыеНачисления.Сотрудник = СписокРаботников.Сотрудник
	|
	|ГДЕ
	|	ПлановыеНачисления.Организация = &ГоловнаяОрганизация
	|	И ПлановыеНачисления.Период > &ПериодРегистрации И ПлановыеНачисления.Период <= &КонецПериодаРегистрации
	|	И ПлановыеНачисления.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|	И ЕСТЬNULL(ПлановыеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени, &ПустойКлассификатор) <> &ПустойКлассификатор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеНачисления.Сотрудник,
	|	ПлановыеНачисления.ВидРасчетаЗавершения.ОбозначениеВТабелеУчетаРабочегоВремени КАК ВидВремени
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокРаботников КАК СписокРаботников
	|		ПО ПлановыеНачисления.Сотрудник = СписокРаботников.Сотрудник
	|
	|ГДЕ
	|	ПлановыеНачисления.Организация = &ГоловнаяОрганизация
	|	И ПлановыеНачисления.ПериодЗавершения МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|	И ПлановыеНачисления.ДействиеЗавершения <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|	И ЕСТЬNULL(ПлановыеНачисления.ВидРасчетаЗавершения.ОбозначениеВТабелеУчетаРабочегоВремени, &ПустойКлассификатор) <> &ПустойКлассификатор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|  	РаботникиОрганизации.Сотрудник,
	|	НадбавкиШР.ВидНадбавки.ОбозначениеВТабелеУчетаРабочегоВремени КАК ВидВремени
	|ИЗ
	|	РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций.СрезПоследних(
	|			&ПериодРегистрации,
	|			(ПодразделениеОрганизации, Должность, ТарифныйРазряд) В (ВЫБРАТЬ
	|																		ПодразделениеОрганизации,
	|																		Должность,
	|																		ТарифныйРазряд
	|																	ИЗ
	|																		ВТ_РаботникиОрганизации)) КАК НадбавкиШР
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_РаботникиОрганизации КАК РаботникиОрганизации
	|		ПО НадбавкиШР.ПодразделениеОрганизации = РаботникиОрганизации.ПодразделениеОрганизации
	|			И НадбавкиШР.Должность = РаботникиОрганизации.Должность
	|			И НадбавкиШР.ТарифныйРазряд = РаботникиОрганизации.ТарифныйРазряд
	|
	|ГДЕ
	|	НадбавкиШР.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|	И ЕСТЬNULL(НадбавкиШР.ВидНадбавки.ОбозначениеВТабелеУчетаРабочегоВремени, &ПустойКлассификатор) <> &ПустойКлассификатор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РаботникиОрганизации.Сотрудник,
	|	НадбавкиШР.ВидНадбавки.ОбозначениеВТабелеУчетаРабочегоВремени КАК ВидВремени
	|ИЗ
	|	ВТ_РаботникиОрганизации КАК РаботникиОрганизации
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций КАК НадбавкиШР
	|		ПО РаботникиОрганизации.ПодразделениеОрганизации = НадбавкиШР.ПодразделениеОрганизации
	|			И РаботникиОрганизации.Должность = НадбавкиШР.Должность
	|			И РаботникиОрганизации.ТарифныйРазряд = НадбавкиШР.ТарифныйРазряд
	|			И НадбавкиШР.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|
	|ГДЕ
	|	НадбавкиШР.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|	И ЕСТЬNULL(НадбавкиШР.ВидНадбавки.ОбозначениеВТабелеУчетаРабочегоВремени, &ПустойКлассификатор) <> &ПустойКлассификатор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ТабельИПлановыеНачисления.НомерСтроки) КАК НомерСтроки,
	|	ТабельИПлановыеНачисления.Сотрудник,
	|	ТабельИПлановыеНачисления.ВидИспользованияРабочегоВремени,
	|	ЕСТЬNULL(ИспользованияРабочегоВремениДляРасчета.ВидИспользованияРабочегоВремениРасчетный, ТабельИПлановыеНачисления.ВидИспользованияРабочегоВремени) КАК ВидИспользованияРабочегоВремениРасчетный,
	|	СУММА(ТабельИПлановыеНачисления.Дней) КАК Дней,
	|	СУММА(ТабельИПлановыеНачисления.Часов) КАК Часов,
	|	МАКСИМУМ(ТабельИПлановыеНачисления.ДнейПоНорме) КАК ДнейПоНорме,
	|	МАКСИМУМ(ТабельИПлановыеНачисления.ЧасовПоНорме) КАК ЧасовПоНорме,
	|	ВЫБОР
	|		КОГДА СУММА(ТабельИПлановыеНачисления.ЭтоДанныеТабеля) > 0 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВидВремениОтсутствуетВДокументе
	|
	|ПОМЕСТИТЬ ВТ_ТабельИПлановыеНачисления
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеТабеля.НомерСтроки,
	|		ДанныеТабеля.Сотрудник КАК Сотрудник,
	|		ДанныеТабеля.ВидИспользованияРабочегоВремени КАК ВидИспользованияРабочегоВремени,
	|		ДанныеТабеля.Дней КАК Дней,
	|		ДанныеТабеля.Часов КАК Часов,
	|		ДанныеТабеля.ДнейПоНорме КАК ДнейПоНорме,
	|		ДанныеТабеля.ЧасовПоНорме КАК ЧасовПоНорме,
	|		1 КАК ЭтоДанныеТабеля
	|	ИЗ
	|		ВТОтработанноеВремяВЦеломЗаПериод КАК ДанныеТабеля
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		0 КАК НомерСтроки,
	|		ПлановыеНачисления.Сотрудник,
	|		ПлановыеНачисления.ВидВремени КАК ВидИспользованияРабочегоВремени,
	|		0 КАК Дней,
	|		0 КАК Часов,
	|		0 КАК ДнейПоНорме,
	|		0 КАК ЧасовПоНорме,
	|		0 КАК ЭтоДанныеТабеля
	|	ИЗ
	|		ВТ_ПлановыеНачисления КАК ПлановыеНачисления) КАК ТабельИПлановыеНачисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаИспользованияРабочегоВремениДляРасчетаЗПСотрудниковОрганизаций.СрезПоследних(&ПериодРегистрации,) КАК ИспользованияРабочегоВремениДляРасчета
	|		ПО ТабельИПлановыеНачисления.ВидИспользованияРабочегоВремени = ИспользованияРабочегоВремениДляРасчета.ВидИспользованияРабочегоВремениКадровый
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабельИПлановыеНачисления.Сотрудник,
	|	ТабельИПлановыеНачисления.ВидИспользованияРабочегоВремени,
	|	ЕСТЬNULL(ИспользованияРабочегоВремениДляРасчета.ВидИспользованияРабочегоВремениРасчетный, ТабельИПлановыеНачисления.ВидИспользованияРабочегоВремени)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТабельИПлановыеНачисления.Сотрудник,
	|	ТабельИПлановыеНачисления.ВидИспользованияРабочегоВремени,
	|	ЕСТЬNULL(ИспользованияРабочегоВремениДляРасчета.ВидИспользованияРабочегоВремениРасчетный, ТабельИПлановыеНачисления.ВидИспользованияРабочегоВремени)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Сотрудник КАК Сотрудник,
	|	ТаблицаДокумента.Сотрудник.Наименование КАК СотрудникНаименование,
	|	ТаблицаДокумента.ВидИспользованияРабочегоВремени,
	|	ТаблицаДокумента.ВидИспользованияРабочегоВремениРасчетный,
	|	ТаблицаДокумента.Дней,
	|	ТаблицаДокумента.Часов,
	|	ТаблицаДокумента.ДнейПоНорме,
	|	ТаблицаДокумента.ЧасовПоНорме,
	|	ТаблицаДокумента.ВидВремениОтсутствуетВДокументе,
	|	ЕСТЬNULL(Дубли.КоличествоДублей, 0) КАК КоличествоДублей,
	|	РаботникиОрганизации.ПричинаИзмененияСостояния,
	|	РаботникиОрганизации.Период КАК ДатаПоследнегоДвиженияПоРаботнику
	|ИЗ
	|	ВТ_ТабельИПлановыеНачисления КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Дубли.Сотрудник КАК Сотрудник,
	|			Дубли.ВидИспользованияРабочегоВремени КАК ВидИспользованияРабочегоВремени,
	|			КОЛИЧЕСТВО(*) КАК КоличествоДублей
	|		ИЗ
	|			ВТОтработанноеВремяВЦеломЗаПериод КАК Дубли
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Дубли.Сотрудник,
	|			Дубли.ВидИспользованияРабочегоВремени) КАК Дубли
	|		ПО (Дубли.Сотрудник = ТаблицаДокумента.Сотрудник)
	|			И (Дубли.ВидИспользованияРабочегоВремени = ТаблицаДокумента.ВидИспользованияРабочегоВремени)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&КонецПериодаРегистрации,
	|				Организация = &ГоловнаяОрганизация
	|					И (Сотрудник) В
	|						(ВЫБРАТЬ
	|							ВТОтработанноеВремяВЦеломЗаПериод.Сотрудник
	|						ИЗ
	|							ВТОтработанноеВремяВЦеломЗаПериод)) КАК РаботникиОрганизации
	|		ПО ТаблицаДокумента.Сотрудник = РаботникиОрганизации.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоОтработанноеВремяВЦеломЗаПериод()

// Формирует запрос по таблице "Показатели" документа
//
// Параметры:
//	ВыборкаПоШапкеДокумента
//
// Возвращаемое значение:
//	Результат запроса.
//
Функция СформироватьЗапросПоПоказателям(ВыборкаПоШапкеДокумента)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Месяц", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("Организация", ВыборкаПоШапкеДокумента.Организация);
	Запрос.УстановитьПараметр("СписокПоказателейНеТребующихВалюты", мСписокПоказателейНеТребующихВалюты);

	Если ВыборкаПоШапкеДокумента.СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ВЦеломЗаПериод Тогда
		ИмяТаблЧастиОтработанноеВремя = "ОтработанноеВремяВЦеломЗаПериод";
	Иначе
		ИмяТаблЧастиОтработанноеВремя = "ОтработанноеВремя";
	КонецЕсли;

	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтрокиРаботники.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииПоказатели.Сотрудник,
	|	ТабельУчетаРабочегоВремениОрганизацииПоказатели.Показатель,
	|	ТабельУчетаРабочегоВремениОрганизацииПоказатели.Значение,
	|	ТабельУчетаРабочегоВремениОрганизацииПоказатели.Валюта,
	|	ВЫБОР
	|		КОГДА ТабельУчетаРабочегоВремениОрганизацииПоказатели.Показатель.ТипПоказателя НЕ В (&СписокПоказателейНеТребующихВалюты)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТребуетВалюту,
	|	ЗначенияПоказателейСхемМотивации.Документ КАК КонфликтныйДокумент,
	|	ПроверкаДублей.КоличествоСтрок,
	|	ТабельУчетаРабочегоВремениОрганизацииПоказатели.Показатель.Наименование КАК ПоказательНаименование,
	|	ПРЕДСТАВЛЕНИЕ(ЗначенияПоказателейСхемМотивации.Документ) КАК ПредставлениеКонфликтногоДокумента
	|ИЗ
	|	Документ.ТабельУчетаРабочегоВремениОрганизации.Показатели КАК ТабельУчетаРабочегоВремениОрганизацииПоказатели
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации." + ИмяТаблЧастиОтработанноеВремя + " КАК СтрокиРаботники
	|		ПО ТабельУчетаРабочегоВремениОрганизацииПоказатели.Сотрудник = СтрокиРаботники.Сотрудник
	|			И СтрокиРаботники.Ссылка = &ДокументСсылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТабельУчетаРабочегоВремениОрганизацииПоказатели.Сотрудник КАК Сотрудник,
	|			ТабельУчетаРабочегоВремениОрганизацииПоказатели.Показатель КАК Показатель,
	|			КОЛИЧЕСТВО(ТабельУчетаРабочегоВремениОрганизацииПоказатели.НомерСтроки) КАК КоличествоСтрок
	|		ИЗ
	|			Документ.ТабельУчетаРабочегоВремениОрганизации.Показатели КАК ТабельУчетаРабочегоВремениОрганизацииПоказатели
	|		ГДЕ
	|			ТабельУчетаРабочегоВремениОрганизацииПоказатели.Ссылка = &ДокументСсылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТабельУчетаРабочегоВремениОрганизацииПоказатели.Сотрудник,
	|			ТабельУчетаРабочегоВремениОрганизацииПоказатели.Показатель) КАК ПроверкаДублей
	|		ПО ТабельУчетаРабочегоВремениОрганизацииПоказатели.Сотрудник = ПроверкаДублей.Сотрудник
	|			И ТабельУчетаРабочегоВремениОрганизацииПоказатели.Показатель = ПроверкаДублей.Показатель
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации
	|		ПО ТабельУчетаРабочегоВремениОрганизацииПоказатели.Сотрудник = ЗначенияПоказателейСхемМотивации.Сотрудник
	|			И ТабельУчетаРабочегоВремениОрганизацииПоказатели.Показатель = ЗначенияПоказателейСхемМотивации.Показатель
	|			И (ЗначенияПоказателейСхемМотивации.Организация = &Организация)
	|			И (ЗначенияПоказателейСхемМотивации.Период = &Месяц)
	|ГДЕ
	|	ТабельУчетаРабочегоВремениОрганизацииПоказатели.Ссылка = &ДокументСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтрокиРаботники.НомерСтроки,
	|	ТабельУчетаРабочегоВремениОрганизацииПоказатели.Показатель.Наименование";

	Возврат Запрос.Выполнить().Выбрать();

КонецФункции // СформироватьЗапросПоПоказателям()

// Формирует запрос по таблице "РаспределениеНачислений" документа
//
// Параметры:
//	ВыборкаПоШапкеДокумента
//
// Возвращаемое значение:
//	Результат запроса.
//
Функция СформироватьЗапросПоРаспределениюНачислений(ВыборкаПоШапкеДокумента) 

    Запрос = Новый Запрос;
    
    Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
    Запрос.УстановитьПараметр("ГоловнаяОрганизация", ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
    Запрос.УстановитьПараметр("ПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	
	Если ВыборкаПоШапкеДокумента.СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ВЦеломЗаПериод Тогда
		ИмяТаблЧастиОтработанноеВремя = "ОтработанноеВремяВЦеломЗаПериод";
	Иначе
		ИмяТаблЧастиОтработанноеВремя = "ОтработанноеВремя";
	КонецЕсли;
    
    Запрос.Текст = "
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	СтрокиРаботники.НомерСтроки,
    |	СтрокиТЧ.Сотрудник,
    |	СтрокиТЧ.СпособОтраженияВБухучете,
    |	СтрокиТЧ.СпособОтраженияВБухучете.Наименование КАК СпособОтраженияБУНаименование,
    |	СтрокиТЧ.ДоляСпособаОтражения,
    |	ПроверкаДублей.КоличествоСтрок,
    |	РаспределениеОсновногоЗаработкаРаботниковОрганизаций.Регистратор КАК КонфликтныйДокумент,
    |	ПРЕДСТАВЛЕНИЕ(РаспределениеОсновногоЗаработкаРаботниковОрганизаций.Регистратор) КАК ПредставлениеКонфликтногоДокумента
    |
    |ИЗ
    |	Документ.ТабельУчетаРабочегоВремениОрганизации.РаспределениеНачислений КАК СтрокиТЧ
    |
    |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремениОрганизации." + ИмяТаблЧастиОтработанноеВремя + " КАК СтрокиРаботники
    |		ПО СтрокиТЧ.Сотрудник = СтрокиРаботники.Сотрудник
    |			И СтрокиРаботники.Ссылка = &ДокументСсылка
    |
    |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеОсновногоЗаработкаРаботниковОрганизаций КАК РаспределениеОсновногоЗаработкаРаботниковОрганизаций
    |		ПО СтрокиТЧ.Сотрудник = РаспределениеОсновногоЗаработкаРаботниковОрганизаций.Сотрудник
    |			И СтрокиТЧ.СпособОтраженияВБухучете = РаспределениеОсновногоЗаработкаРаботниковОрганизаций.СпособОтраженияВБухучете
    |			И РаспределениеОсновногоЗаработкаРаботниковОрганизаций.Организация = &ГоловнаяОрганизация
    |			И РаспределениеОсновногоЗаработкаРаботниковОрганизаций.ПериодРегистрации = &ПериодРегистрации
    |
    |	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
    |							СтрокиТЧ.Сотрудник,
    |							СтрокиТЧ.СпособОтраженияВБухучете,
    |							КОЛИЧЕСТВО(*) КАК КоличествоСтрок
    |						ИЗ
    |							Документ.ТабельУчетаРабочегоВремениОрганизации.РаспределениеНачислений КАК СтрокиТЧ
    |						ГДЕ
    |							СтрокиТЧ.Ссылка = &ДокументСсылка
    |						СГРУППИРОВАТЬ ПО
    |							СтрокиТЧ.Сотрудник,
    |							СтрокиТЧ.СпособОтраженияВБухучете) КАК ПроверкаДублей
    |		ПО СтрокиТЧ.Сотрудник = ПроверкаДублей.Сотрудник
    |			И СтрокиТЧ.СпособОтраженияВБухучете = ПроверкаДублей.СпособОтраженияВБухучете
    |
    |ГДЕ
    |	СтрокиТЧ.Ссылка = &ДокументСсылка
    |
    |УПОРЯДОЧИТЬ ПО
    |	СтрокиРаботники.НомерСтроки
    |";

	Возврат Запрос.Выполнить().Выбрать();

КонецФункции // СформироватьЗапросПоРаспределениюНачислений()

// Проверяет правильность заполнения реквизитов в строке ТЧ "ОтработанноеВремя" документа.
// Если какой-то из реквизтов, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса к ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//	ВыборкаПоСтрокамДокумента	- спозиционированная на определенной строке выборка 
//								  из результата запроса к ТЧ документа,
//	Отказ						- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеСтрокиОтработанноеВремя(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ)
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Отработанное время"": ";
	
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Перечисления.ВидыСообщений.Ошибка));
		Отказ = Истина;
	КонецЕсли;
	
	// Проверка дублирования сотрудников
	Если ВыборкаПоСтрокамДокумента.КоличествоДублей > 1 Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + "обнаружен сотрудник, " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + ", который введен второй раз!", Перечисления.ВидыСообщений.Ошибка));
		Отказ = Истина;
	КонецЕсли;
	
	// Работник должен быть принят и еще не уволен
	Если ВыборкаПоСтрокамДокумента.Часов <> 0 Тогда
		Если ВыборкаПоСтрокамДокумента.ПричинаИзмененияСостояния = NULL Тогда
			МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + " на " + Формат(ВыборкаПоСтрокамДокумента.ДатаТабеля, "ДЛФ=DD") + " сотрудник " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " еще не принят на работу!", Перечисления.ВидыСообщений.Ошибка));
			Отказ = Истина;
		ИначеЕсли ВыборкаПоСтрокамДокумента.ПричинаИзмененияСостояния = Перечисления.ПричиныИзмененияСостояния.Увольнение Тогда
			СтрокаПродолжениеСообщенияОбОшибке = " на " + Формат(ВыборкаПоСтрокамДокумента.ДатаТабеля, "ДЛФ=DD") + " сотрудник " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " уже уволен (с " + Формат(ВыборкаПоСтрокамДокумента.ДатаПоследнегоДвиженияПоРаботнику, "ДЛФ=DD") + ")!";
			МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + СтрокаПродолжениеСообщенияОбОшибке, Перечисления.ВидыСообщений.Ошибка));
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиОтработанноеВремя()

// Проверяет правильность заполнения реквизитов в строке ТЧ "ОтработанноеВремяВЦеломЗаПериод" документа.
// Если какой-то из реквизтов, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса к ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//	ВыборкаПоСтрокамДокумента	- спозиционированная на определенной строке выборка 
//								  из результата запроса к ТЧ документа,
//	Отказ						- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеСтрокиОтработанноеВремяВЦеломЗаПериод(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ)
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Отработанное время"": ";
	
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Перечисления.ВидыСообщений.Ошибка));
		Отказ = Истина;
	КонецЕсли;

	// Проверка дублирования сотрудников
	Если ВыборкаПоСтрокамДокумента.КоличествоДублей > 1 Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + "обнаружен сотрудник, " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + ", который введен второй раз!", Перечисления.ВидыСообщений.Ошибка));
		Отказ = Истина;
	КонецЕсли;

	// Работник должен быть принят и еще не уволен
	Если ВыборкаПоСтрокамДокумента.ПричинаИзмененияСостояния = NULL Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + " сотрудник " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " еще не принят на работу!", Перечисления.ВидыСообщений.Ошибка));
		Отказ = Истина;
	ИначеЕсли ВыборкаПоСтрокамДокумента.ПричинаИзмененияСостояния = Перечисления.ПричиныИзмененияСостояния.Увольнение Тогда
		Если ВыборкаПоСтрокамДокумента.ДатаПоследнегоДвиженияПоРаботнику <= ВыборкаПоШапкеДокумента.ПериодРегистрации Тогда
			СтрокаПродолжениеСообщенияОбОшибке = " на " + Формат(ВыборкаПоШапкеДокумента.ПериодРегистрации, "ДЛФ=DD") + " сотрудник " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " уже уволен (с " + Формат(ВыборкаПоСтрокамДокумента.ДатаПоследнегоДвиженияПоРаботнику, "ДЛФ=DD") + ")!";
			МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + СтрокаПродолжениеСообщенияОбОшибке, Перечисления.ВидыСообщений.Ошибка));
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	// ВидИспользованияРабочегоВремени
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидИспользованияРабочегоВремени) Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + "не указано использование рабочего времени!", Перечисления.ВидыСообщений.Ошибка));
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиОтработанноеВремяВЦеломЗаПериод()

// процедура проверяет, нет ли уже аналогичных записей в регистре ЗначенияПоказателейСхемМотивации
// Возвращает Истина если проведение возможно, иначе Ложь.
Процедура ПроверитьЗаполнениеСтрокиПоказателей(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, УчетнаяПолитикаПоПерсоналуОрганизации)
	
	СтрокаНачалаСообщенияОбОшибке = "Для строки номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Отработанное время""";

	// Показатели
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Показатель) Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + ": в списке показателей расчета есть строки с пустым показателем!", Перечисления.ВидыСообщений.Ошибка));
		Отказ = Истина;
		Возврат;
	Иначе
		СтрокаНачалаСообщенияОбОшибке = СтрокаНачалаСообщенияОбОшибке + " показатель """ + ВыборкаПоСтрокамДокумента.ПоказательНаименование + """: ";
	КонецЕсли;
	
	// Дубли в документе
	Если ВыборкаПоСтрокамДокумента.КоличествоСтрок > 1 Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + "введен несколько раз!", Перечисления.ВидыСообщений.Ошибка));
		Отказ = Истина;
	КонецЕсли;
	
	// Дубли в регистре сведений
	Если ВыборкаПоСтрокамДокумента.КонфликтныйДокумент <> NULL Тогда
		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.КонфликтныйДокумент) Тогда
			МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + "уже введен ранее документом " + ВыборкаПоСтрокамДокумента.ПредставлениеКонфликтногоДокумента + "!", Перечисления.ВидыСообщений.Ошибка));
			Отказ = Истина;
		Иначе
			МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + "уже введен ранее вручную в регистр сведений ""Значения показателей схем мотивации""!", Перечисления.ВидыСообщений.Ошибка));
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
			
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Валюта
	Если ВыборкаПоСтрокамДокумента.ТребуетВалюту И УчетнаяПолитикаПоПерсоналуОрганизации.ИспользуютсяНачисленияВВалюте Тогда
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Валюта) Тогда
			МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + "не указана валюта!", Перечисления.ВидыСообщений.Ошибка));
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиПоказателей()	

// процедура проверяет, нет ли уже аналогичных записей в регистре РаспределениеОсновногоЗаработкаРаботниковОрганизаций
// Возвращает Истина если проведение возможно, иначе Ложь.
Процедура ПроверитьЗаполнениеСтрокиРаспределенияНачислений(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ)
	
	СтрокаНачалаСообщенияОбОшибке = "Для строки номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	""" табл. части ""Отработанное время""";

	// Показатели
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.СпособОтраженияВБухучете) Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + ": в распределении основного заработка есть строки с пустым способом!", Перечисления.ВидыСообщений.Ошибка));
		Отказ = Истина;
		Возврат;
	Иначе
		СтрокаНачалаСообщенияОбОшибке = СтрокаНачалаСообщенияОбОшибке + " способ отражения """ + ВыборкаПоСтрокамДокумента.СпособОтраженияБУНаименование + """: ";
	КонецЕсли;
	
	// Дубли в документе
	Если ВыборкаПоСтрокамДокумента.КоличествоСтрок > 1 Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + "введен несколько раз!", Перечисления.ВидыСообщений.Ошибка));
		Отказ = Истина;
	КонецЕсли;
	
	// Дубли в регистре сведений
	Если ВыборкаПоСтрокамДокумента.КонфликтныйДокумент <> NULL Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + "уже введен ранее документом " + ВыборкаПоСтрокамДокумента.ПредставлениеКонфликтногоДокумента + "!", Перечисления.ВидыСообщений.Ошибка));
		Отказ = Истина;
	КонецЕсли;
			
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Доля распределения
	Если ВыборкаПоСтрокамДокумента.ДоляСпособаОтражения = 0 Тогда
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру(СтрокаНачалаСообщенияОбОшибке + "не указана доля распределения!", Перечисления.ВидыСообщений.Ошибка));
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаспределенияНачислений()	

// По строке выборок из результатов запроса по документу формируем движения по регистрам
//
// Параметры:
//	ВыборкаПоСтрокамДокумента				- спозиционированная на определенной строке выборка 
//											  из результата запроса к ТЧ документа, 
//	НаборЗаписей							- набор записей для РабочееВремяРаботниковОрганизаций 
//
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуРабочееВремяРаботниковОрганизацийВЦеломЗаПериод(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента, НаборЗаписей)
	
	Движение = НаборЗаписей.Добавить();
	
	// Свойства
	Движение.Период								= ВыборкаПоШапкеДокумента.ДатаОкончанияПериода;
	
	// Измерения
	Движение.Сотрудник							= ВыборкаПоСтрокамДокумента.Сотрудник;
	Движение.Организация						= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Движение.ВидИспользованияРабочеговремени	= ВыборкаПоСтрокамДокумента.ВидИспользованияРабочегоВремениРасчетный;
	
	// Ресурсы
	Движение.Дней								= ВыборкаПоСтрокамДокумента.Дней;
	Движение.Часов								= ВыборкаПоСтрокамДокумента.Часов;
	
	// Реквизиты
	Движение.СводнаяЗапись						= Истина;
	Движение.ВЦеломЗаПериод						= Истина;
	Движение.ВидИспользованияРабочеговремениКадровый	= ВыборкаПоСтрокамДокумента.ВидИспользованияРабочегоВремени;
	// признак того, что запись введена по данным из документа (явно указана пользователем)
	Движение.ВидВремениОтсутствуетВДокументе	= ВыборкаПоСтрокамДокумента.ВидВремениОтсутствуетВДокументе; 
	
КонецПроцедуры // ДобавитьСтрокуРабочееВремяРаботниковОрганизацийВЦеломЗаПериод()

// По строке выборок из результатов запроса по документу формируем движения по регистрам
//
// Параметры:
//	ВыборкаПоСтрокамДокумента				- спозиционированная на определенной строке выборка 
//											  из результата запроса к ТЧ документа, 
//	НаборЗаписей							- набор записей для РабочееВремяРаботниковОрганизаций 
//
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуНормыВремени(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента, НаборЗаписей)
	
	Если ВыборкаПоСтрокамДокумента.ДнейПоНорме = 0 
			И ВыборкаПоСтрокамДокумента.ЧасовПоНорме = 0 Тогда
		Возврат;
	КонецЕсли;

	Движение = НаборЗаписей.Добавить();
	
	// Свойства
	Движение.Период								= ВыборкаПоШапкеДокумента.ДатаОкончанияПериода;
	
	// Измерения
	Движение.Сотрудник							= ВыборкаПоСтрокамДокумента.Сотрудник;
	Движение.Организация						= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Движение.ВидИспользованияРабочеговремени	= КлассификаторЯвка;
	
	// Ресурсы
	Движение.Дней								= 0;
	Движение.Часов								= 0;
	Движение.ДнейПоНорме						= ВыборкаПоСтрокамДокумента.ДнейПоНорме;
	Движение.ЧасовПоНорме						= ВыборкаПоСтрокамДокумента.ЧасовПоНорме;
	
	// Реквизиты
	Движение.СводнаяЗапись						= Истина; // регистрируем норму в целом за месяц
	Если ВыборкаПоШапкеДокумента.СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ВЦеломЗаПериод
			Или ВыборкаПоШапкеДокумента.СпособУказанияПериода = Перечисления.ПериодНачисленияЗарплаты.ТекущийМесяц Тогда
		Движение.ВЦеломЗаПериод					= Истина;
	Иначе
		Движение.ВЦеломЗаПериод					= Ложь;
	КонецЕсли;
	// признак того, что запись введена по данным из документа (явно указана пользователем)
	Движение.ВидВремениОтсутствуетВДокументе	= Истина; 
	
КонецПроцедуры // ДобавитьСтрокуРабочееВремяРаботниковОрганизацийВЦеломЗаПериод()

// По строке выборок из результатов запроса по документу формируем движения по регистрам
//
// Параметры:
//	ВыборкаПоСтрокамДокумента				- спозиционированная на определенной строке выборка 
//											  из результата запроса к ТЧ документа, 
//	НаборЗаписей							- набор записей для РабочееВремяРаботниковОрганизаций 
//
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуРабочееВремяРаботниковОрганизацийПоДням(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента, НаборЗаписей)
	
	// записываем только данные за дни, когда работник числился в штате
	Если ВыборкаПоСтрокамДокумента.ПричинаИзмененияСостояния <> Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу
			И ВыборкаПоСтрокамДокумента.ПричинаИзмененияСостояния <> Перечисления.ПричиныИзмененияСостояния.Перемещение Тогда
		Возврат;
	КонецЕсли;
	
	Движение = НаборЗаписей.Добавить();
	
	// Свойства
	Движение.Период							= ВыборкаПоСтрокамДокумента.ДатаТабеля;
	
	// Измерения
	Движение.Сотрудник						= ВыборкаПоСтрокамДокумента.Сотрудник;
	Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	
	Движение.ВидИспользованияРабочегоВремени	= ВыборкаПоСтрокамДокумента.ВидВремениРасчетный;
	
	// Ресурсы
	Движение.Дней							= ?(ВыборкаПоСтрокамДокумента.Часов = 0, 0, 1);
	Движение.Часов							= ВыборкаПоСтрокамДокумента.Часов;
	
	// Реквизиты
	Движение.СводнаяЗапись					= Ложь;
	Движение.ВЦеломЗаПериод					= Ложь;
	Движение.ВидИспользованияРабочегоВремениКадровый = ВыборкаПоСтрокамДокумента.ВидВремени;
	
	// признак того, что запись введена по данным из документа (явно указана пользователем)
	Движение.ВидВремениОтсутствуетВДокументе= ВыборкаПоСтрокамДокумента.ВидВремениОтсутствуетВДокументе; 
	
КонецПроцедуры // ДобавитьСтрокуРабочееВремяРаботниковОрганизацийПоДням()

// По строке выборок из результатов запроса по документу формируем движения по регистрам
//
// Параметры:
//	ВыборкаПоСтрокамДокумента				- спозиционированная на определенной строке выборка 
//											  из результата запроса к ТЧ документа, 
//	НаборЗаписей							- набор записей для ЗначенияПоказателейСхемМотивации 
//
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуПоказателей(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента, НаборЗаписей)

	Движение = НаборЗаписей.Добавить();
	
	// Свойства
	Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
	
	// Измерения
	Движение.Показатель 	= ВыборкаПоСтрокамДокумента.Показатель;
	Движение.Организация 	= ВыборкаПоШапкеДокумента.Организация;
	Движение.Подразделение	= Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	Движение.Сотрудник 		= ВыборкаПоСтрокамДокумента.Сотрудник;
	
	// Ресурсы
	Движение.Значение		= ВыборкаПоСтрокамДокумента.Значение;
	Движение.Валюта			= ВыборкаПоСтрокамДокумента.Валюта;
	
	// Реквизиты 
	Движение.Документ		= Ссылка;

КонецПроцедуры // ДобавитьВРегистрПоказателей()

// По строке выборок из результатов запроса по документу формируем движения по регистрам
//
// Параметры:
//	ВыборкаПоСтрокамДокумента				- спозиционированная на определенной строке выборка 
//											  из результата запроса к ТЧ документа, 
//	НаборЗаписей							- набор записей для РаспределениеОсновногоЗаработкаРаботниковОрганизаций 
//
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуРаспределенияНачислений(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента, НаборЗаписей)

	Движение = НаборЗаписей.Добавить();
	
	// Измерения
	Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
	Движение.Сотрудник 			= ВыборкаПоСтрокамДокумента.Сотрудник;
	Движение.Организация 		= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Движение.СпособОтраженияВБухучете 	= ВыборкаПоСтрокамДокумента.СпособОтраженияВБухучете;
	
	// Ресурсы
	Движение.ДоляСпособаОтражения		= ВыборкаПоСтрокамДокумента.ДоляСпособаОтражения;

КонецПроцедуры // ДобавитьСтрокуРаспределенияНачислений()

// Процедура выполняет отмену проведения документа по регистру ЗначенияПоказателейСхемМотивации
//
Процедура ВыполнитьОтменуПроведенияПоказателей()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗначенияПоказателей.Показатель
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателей
	|ГДЕ
	|	ЗначенияПоказателей.Период = &ПериодРегистрации
	|	И ЗначенияПоказателей.Организация = &Организация
	|	И ЗначенияПоказателей.Документ = &ДокументСсылка
	|";
	
	НаборЗаписей = РегистрыСведений.ЗначенияПоказателейСхемМотивации.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Период.Установить(ПериодРегистрации, Истина);
	НаборЗаписей.Отбор.Организация.Установить(Организация, Истина);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей.Очистить();
		НаборЗаписей.Отбор.Показатель.Установить(Выборка.Показатель, Истина);
		НаборЗаписей.Прочитать();
		
		Н = НаборЗаписей.Количество() - 1;
		Пока Н >= 0 Цикл
			Если НаборЗаписей[Н].Документ = Ссылка Тогда
				// удаляем запись, относящуюся к текущему документу
				НаборЗаписей.Удалить(Н);
			КонецЕсли;
			Н = Н - 1;
		КонецЦикла;
		
		Если НаборЗаписей.Модифицированность() Тогда
			// записываем остальное набор без данных текущего документа
			НаборЗаписей.Записать();
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры // ВыполнитьОтменуПроведенияПоказателей()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ПередЗаписью" документа.
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоНовый() И Проведен И РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		ВыполнитьОтменуПроведенияПоказателей();
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	
	Если СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ВЦеломЗаПериод Тогда
		ОтработанноеВремя.Очистить();
		МассивТЧ.Добавить(ОтработанноеВремяВЦеломЗаПериод);		
	Иначе
		ОтработанноеВремяВЦеломЗаПериод.Очистить();
		МассивТЧ.Добавить(ОтработанноеВремя);		
	КонецЕсли;
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ);		
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаПроведения" документа.
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
    
	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект) Тогда
		Возврат
	КонецЕсли;

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	
	НаборЗаписей = Движения.РабочееВремяРаботниковОрганизаций;
	
	МассивСообщений = Новый Массив;
	
	УчетнаяПолитикаПоПерсоналуОрганизации = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация];
	
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		
		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ);
		ПроверитьУникальностьОтработанногоВремени(Отказ);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда
			
			Если ВыборкаПоШапкеДокумента.СпособВводаДанных = Перечисления.СпособыВводаДанныхОВремени.ВЦеломЗаПериод Тогда
				// Данные введены в целом за период.
				
				////////////////////////////////////////////////////////////////////////
				// Отработанное время в целом за период
				
				ТекущийСотрудник = Неопределено;
				
				// получим реквизиты табличной части
				ВыборкаПоОтработанноеВремяВЦеломЗаПериод = СформироватьЗапросПоОтработанноеВремяВЦеломЗаПериод(ВыборкаПоШапкеДокумента).Выбрать();

				Пока ВыборкаПоОтработанноеВремяВЦеломЗаПериод.Следующий() Цикл
							
					// Проверим очередную строку табличной части
					ПроверитьЗаполнениеСтрокиОтработанноеВремяВЦеломЗаПериод(ВыборкаПоШапкеДокумента, ВыборкаПоОтработанноеВремяВЦеломЗаПериод, Отказ);
					Если Не Отказ Тогда
						
						Если ТекущийСотрудник <>  ВыборкаПоОтработанноеВремяВЦеломЗаПериод.Сотрудник Тогда
								
							Если НЕ (ВыборкаПоОтработанноеВремяВЦеломЗаПериод.ДнейПоНорме = 0 
								И ВыборкаПоОтработанноеВремяВЦеломЗаПериод.ЧасовПоНорме = 0) Тогда
								
								Если ВыборкаПоШапкеДокумента.ИспользоватьНормуВремени Тогда
									ДобавитьСтрокуНормыВремени(ВыборкаПоОтработанноеВремяВЦеломЗаПериод, ВыборкаПоШапкеДокумента, НаборЗаписей);
								КонецЕсли;
							
								ТекущийСотрудник = ВыборкаПоОтработанноеВремяВЦеломЗаПериод.Сотрудник;
							КонецЕсли;
								
						КонецЕсли;
					
						// Заполним записи в наборах записей регистров
						ДобавитьСтрокуРабочееВремяРаботниковОрганизацийВЦеломЗаПериод(ВыборкаПоОтработанноеВремяВЦеломЗаПериод, ВыборкаПоШапкеДокумента, НаборЗаписей);
					КонецЕсли;

				КонецЦикла;
				
			Иначе
				// Данные введены с разбивкой по дням.
				
				////////////////////////////////////////////////////////////////////////
				// Отработанное время
				
				// получим реквизиты табличной части
				ВыборкаПоОтработанноеВремя = СформироватьЗапросПоОтработанноеВремя(ВыборкаПоШапкеДокумента).Выбрать();
				
				ДеньНачалаПериода = День(ДатаНачалаПериода);
				ДеньОкончанияПериода = День(ДатаОкончанияПериода);
				
				ТекущийСотрудник = Неопределено;
				
				Пока ВыборкаПоОтработанноеВремя.Следующий() Цикл
						
					// Проверим очередную строка табличной части
					ПроверитьЗаполнениеСтрокиОтработанноеВремя(ВыборкаПоШапкеДокумента, ВыборкаПоОтработанноеВремя, Отказ);

					Если НЕ Отказ Тогда
					
						Если (ВыборкаПоОтработанноеВремя.ДеньМесяца <= ДеньОкончанияПериода)
							И (ВыборкаПоОтработанноеВремя.ДеньМесяца >= ДеньНачалаПериода)Тогда

							Если ТекущийСотрудник <> ВыборкаПоОтработанноеВремя.Сотрудник Тогда
							
								Если ВыборкаПоШапкеДокумента.ИспользоватьНормуВремени Тогда
									ДобавитьСтрокуНормыВремени(ВыборкаПоОтработанноеВремя, ВыборкаПоШапкеДокумента, НаборЗаписей);
								КонецЕсли;
									
								ТекущийСотрудник = ВыборкаПоОтработанноеВремя.Сотрудник;
								
							КонецЕсли;

							// Заполним записи в наборах записей регистров
							ДобавитьСтрокуРабочееВремяРаботниковОрганизацийПоДням(ВыборкаПоОтработанноеВремя, ВыборкаПоШапкеДокумента, НаборЗаписей);

						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;	
			
		КонецЕсли;
		
		Если НЕ Отказ Тогда
			
			// если в документе используются показатели схем мотивации
			Если ВыборкаПоШапкеДокумента.ИспользоватьПоказатели Тогда
				
				ВыборкаПоПоказателям = СформироватьЗапросПоПоказателям(ВыборкаПоШапкеДокумента);
				НаборЗаписей = РегистрыСведений.ЗначенияПоказателейСхемМотивации.СоздатьНаборЗаписей();
				
				Пока ВыборкаПоПоказателям.Следующий() Цикл
					
					ПроверитьЗаполнениеСтрокиПоказателей(ВыборкаПоШапкеДокумента, ВыборкаПоПоказателям, Отказ, УчетнаяПолитикаПоПерсоналуОрганизации);
					Если Не Отказ Тогда
						ДобавитьСтрокуПоказателей(ВыборкаПоПоказателям, ВыборкаПоШапкеДокумента, НаборЗаписей);
					КонецЕсли;
				
				КонецЦикла;
				
				НаборЗаписей.Записать(Ложь); // записываем без замещения
				
			КонецЕсли;	
		
		КонецЕсли;

		Если НЕ Отказ Тогда
			
			// если в документе используются распределение начислений
			Если ВыборкаПоШапкеДокумента.ИспользоватьРаспределениеНачислений Тогда
				
				ВыборкаПоРаспределениюНачислений = СформироватьЗапросПоРаспределениюНачислений(ВыборкаПоШапкеДокумента);

				Пока ВыборкаПоРаспределениюНачислений.Следующий() Цикл
					
					ПроверитьЗаполнениеСтрокиРаспределенияНачислений(ВыборкаПоШапкеДокумента, ВыборкаПоРаспределениюНачислений, Отказ);
					Если Не Отказ Тогда
						ДобавитьСтрокуРаспределенияНачислений(ВыборкаПоРаспределениюНачислений, ВыборкаПоШапкеДокумента, Движения.РаспределениеОсновногоЗаработкаРаботниковОрганизаций);
					КонецЕсли;
				
				КонецЦикла;
				
			КонецЕсли;	
		
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивСообщений.Количество() > 0 Тогда
		#Если Клиент Тогда
			ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
			ОбработкаКомментариев.УдалитьСообщения();
			ОбработкаКомментариев.ДобавитьСообщение(Заголовок, Перечисления.ВидыСообщений.Раздел);
			Для каждого ЭлементМассива Из МассивСообщений Цикл
				ОбработкаКомментариев.ДобавитьСообщение(ЭлементМассива.ТекстСообщения, ЭлементМассива.ВидСообщения, ЭлементМассива.РасшифровкаСообщения);
			КонецЦикла;
			ОбработкаКомментариев.ПоказатьСообщения();
		#Иначе
			Для каждого ЭлементМассива Из МассивСообщений Цикл
				ОбщегоНазначения.СообщитьОбОшибке(ЭлементМассива.ТекстСообщения, Отказ, Заголовок);
			КонецЦикла; 
		#КонецЕсли 
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения()

// Предопределенная процедура обработки события удаления проведения документа
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если НЕ Отказ Тогда
		ВыполнитьОтменуПроведенияПоказателей();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мДлинаСуток = 86400;

ВидУчетаВремениПоДням  			= Перечисления.ВидыУчетаВремени.ПоДням;
ВидУчетаВремениПоЧасам 			= Перечисления.ВидыУчетаВремени.ПоЧасам;
ВидУчетаВремениПоНочнымЧасам 	= Перечисления.ВидыУчетаВремени.ПоНочнымЧасам;


МассивПриставок = Новый Массив(4);
МассивПриставок[0] = "Первый";
МассивПриставок[1] = "Второй";
МассивПриставок[2] = "Третий";
МассивПриставок[3] = "Четвертый";

КлассификаторЯвка = Справочники.КлассификаторИспользованияРабочегоВремени.Работа;
КлассификаторНочныеЧасы = Справочники.КлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы;
КлассификаторВыходныеДни = Справочники.КлассификаторИспользованияРабочегоВремени.ВыходныеДни;
КлассификаторПустаяСсылка = Справочники.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка();

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

мСписокПоказателейНеТребующихВалюты = ПроведениеРасчетов.ПолучитьСписокТиповПоказателейСхемМотивацииНеТребующихУказанияВалюты();
