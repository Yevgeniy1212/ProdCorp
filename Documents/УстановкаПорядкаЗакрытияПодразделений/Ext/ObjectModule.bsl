// Строки, хранят реквизиты имеющие смысл только для бух. учета и упр. соответственно
// в случае если документ не отражается в каком-то виде учета, делаются невидимыми
Перем мСтрокаРеквизитыБухУчета Экспорт;
Перем мСтрокаРеквизитыУпрУчета Экспорт;
Перем мСтрокаРеквизитыНалУчета Экспорт;

Перем мОтображатьСтруктурныеПодразделения Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для определенного вида учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета() Экспорт

	мСтрокаРеквизитыБухУчета = "Организация, НадписьОрганизация";
	мСтрокаРеквизитыНалУчета = "";
	мСтрокаРеквизитыУпрУчета = "";

КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета()

#Если Клиент Тогда

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеПользователями.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;
	
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	//так как нет печатных форм у документа, по умолчанию
	//ТабДокумент = Неопределено
	ТабДокумент = Неопределено;
	
	Если ТабДокумент = Неопределено Тогда
		Возврат;
	КонецЕсли;  

	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект));

КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура();

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, Режим)

	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,"",ЭтотОбъект) Тогда
		Возврат
	КонецЕсли;
	
	ПорядокЗакрытияПодразделений = Движения.ПорядокЗакрытияПодразделенийОрганизаций;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",      Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Подразделения.Ссылка КАК Подразделение,
	|	ВЫБОР 
	|		КОГДА ПорядокЗакрытия.НомерПередела ЕСТЬ NULL 
	|		ТОГДА 0
	|	ИНАЧЕ
	|		ПорядокЗакрытия.НомерПередела
	|	КОНЕЦ КАК НомерПередела
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК Подразделения
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			УстановкаПорядкаЗакрытие.Подразделение КАК Подразделение,
	|			УстановкаПорядкаЗакрытие.НомерСтроки КАК НомерПередела
	|		ИЗ
	|			Документ.УстановкаПорядкаЗакрытияПодразделений.ПорядокЗакрытия КАК УстановкаПорядкаЗакрытие
	|		ГДЕ
	|			УстановкаПорядкаЗакрытие.Ссылка = &Ссылка
	|		) КАК ПорядокЗакрытия
	|	ПО
	|		Подразделения.Ссылка = ПорядокЗакрытия.Подразделение
	|ГДЕ
	|	Не Подразделения.ПометкаУдаления
	|	И Подразделения.Владелец = &Организация
	|";
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();

	Для Каждого Строка Из РезультатЗапроса Цикл

		НоваяСтрока = ПорядокЗакрытияПодразделений.Добавить();

		НоваяСтрока.Период        = НачалоМесяца(Дата);
		НоваяСтрока.Подразделение = Строка.Подразделение;
		НоваяСтрока.НомерПередела = Строка.НомерПередела;
		НоваяСтрока.Организация   = Организация;
		НоваяСтрока.СтруктурноеПодразделение   = СтруктурноеПодразделение;

	КонецЦикла;

КонецПроцедуры // ОбработкаПроведения()

// Предопределенная процедура обработки удаления проведения документа
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, РучнаяКорректировка);
КонецПроцедуры


мОтображатьСтруктурныеПодразделения = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений();