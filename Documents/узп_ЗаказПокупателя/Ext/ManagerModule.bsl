#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Заполнение

Процедура ЗаполнитьПоДокументуОснованию(Объект, ДокументОснование) Экспорт
	
	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(Объект, ДокументОснование);
	
	Если ТипЗнч(ДокументОснование) 			= Тип("ДокументСсылка.дог_РегистрацияДоговоров") Тогда
		Если ДокументОснование.ВидОперацииПоДоговору<>Перечисления.дог_ВидыОперацийПоДоговору.ТоварныеОперации Тогда
			СтандартнаяОбработка 			= Ложь;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Заказ покупателя не может быть создан на основании нетоварного договора!");
			Возврат;
		КонецЕсли;
		Если ДокументОснование.ВидДоговораПоТоварнымОперациям<>Перечисления.дог_ВидыДоговоровПоТоварнымОперациям.ДоговорРеализации Тогда
			СтандартнаяОбработка 			= Ложь;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Заказ покупателя не может быть создан на основании договора приобретения!");
			Возврат;
		КонецЕсли;
		// Заполнение шапки
		Объект.ВалютаДокумента 				= ДокументОснование.ВалютаДокумента;
		Объект.ДоговорКонтрагента 			= ДокументОснование.ДоговорКонтрагента;
		Объект.ЕдиныйСрокПоставкиПоЗаказу 	= ДокументОснование.ЕдиныйСрокПоставкиПоЗаказу;
		Объект.Комментарий 					= ДокументОснование.Комментарий;
		Объект.Контрагент 					= ДокументОснование.Контрагент;
		Объект.СуммаДокумента 				= ДокументОснование.ОбщаяСуммаДоговора;
		Объект.Организация 					= ДокументОснование.Организация;
		Объект.Подразделение 				= ДокументОснование.Подразделение;
		Объект.СрокПоставки 				= ДокументОснование.СрокПоставки;
		Объект.ДокументОснование 			= ДокументОснование.Ссылка;
		Объект.СтруктурноеПодразделение		= ДокументОснование.СтруктурноеПодразделение;
		Объект.СуммаВключаетНДС 			= ДокументОснование.СуммаВключаетНДС;
		Объект.ТипЦен 						= ДокументОснование.ТипЦен;
		Объект.УчитыватьНДС 				= ДокументОснование.УчитыватьНДС;
		Для Каждого ТекСтрокаОС Из ДокументОснование.ОС Цикл
			НоваяСтрока						= Объект.ОС.Добавить();
			НоваяСтрока.СрокПоставки		= ТекСтрокаОС.ДатаПоставки;
			НоваяСтрока.Номенклатура		= ТекСтрокаОС.Номенклатура;
			НоваяСтрока.СтавкаНДС 			= ТекСтрокаОС.СтавкаНДС;
			НоваяСтрока.Сумма 				= ТекСтрокаОС.Сумма;
			НоваяСтрока.СуммаНДС 			= ТекСтрокаОС.СуммаНДС;
		КонецЦикла;
		Для Каждого ТекСтрокаТовары Из ДокументОснование.Товары Цикл
			НоваяСтрока 					= Объект.Товары.Добавить();
			НоваяСтрока.СрокПоставки 		= ТекСтрокаТовары.ДатаПоставки;
			НоваяСтрока.ЕдиницаИзмерения	= ТекСтрокаТовары.ЕдиницаИзмерения;
			НоваяСтрока.Количество 			= ТекСтрокаТовары.Количество;
			НоваяСтрока.Коэффициент 		= ТекСтрокаТовары.Коэффициент;
			НоваяСтрока.Номенклатура 		= ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.СтавкаНДС 			= ТекСтрокаТовары.СтавкаНДС;
			НоваяСтрока.Сумма 				= ТекСтрокаТовары.Сумма;
			НоваяСтрока.СуммаНДС 			= ТекСтрокаТовары.СуммаНДС;
			НоваяСтрока.Цена 				= ТекСтрокаТовары.Цена;
		КонецЦикла;
		Для Каждого ТекСтрокаУслуги Из ДокументОснование.Услуги Цикл
			НоваяСтрока 					= Объект.Услуги.Добавить();
			НоваяСтрока.СрокПоставки 		= ТекСтрокаУслуги.ДатаПоставки;
			НоваяСтрока.Количество 			= ТекСтрокаУслуги.Количество;
			НоваяСтрока.Номенклатура 		= ТекСтрокаУслуги.Номенклатура;
			НоваяСтрока.СтавкаНДС 			= ТекСтрокаУслуги.СтавкаНДС;
			НоваяСтрока.Сумма 				= ТекСтрокаУслуги.Сумма;
			НоваяСтрока.СуммаНДС 			= ТекСтрокаУслуги.СуммаНДС;
			НоваяСтрока.Цена 				= ТекСтрокаУслуги.Цена;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры   

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// анализ промежуточного исполнения
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗаказПокупателя";
	КомандаПечати.Представление = НСтр("ru = 'Заказ покупателя'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
	Возврат;	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаказПокупателя") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЗаказПокупателя",
			НСтр("ru = 'Заказ покупателя'"),
			ПечатьЗаказПокупателя(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.узп_ЗаказПокупателя.ПФ_MXL_ЗаказПокупателя");
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка табличных печатных документов.

//Процедура ПечатьЗаказПокупателя(ТабДок, Ссылка) Экспорт
Функция ПечатьЗаказПокупателя(МассивОбъектов, ОбъектыПечати) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Макет = Документы.узп_ЗаказПокупателя.ПолучитьМакет("ПФ_MXL_ЗаказПокупателя");
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "узп_ЗаказПокупателя_ЗаказПокупателя";
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказПокупателя.Автор,
	|	ЗаказПокупателя.Дата,
	|	ЗаказПокупателя.ДоговорКонтрагента,
	|	ЗаказПокупателя.Номер,
	|	ЗаказПокупателя.Организация,
	|	ЗаказПокупателя.Ответственный,
	|	ЗаказПокупателя.СрокПоставки,
	|	ЗаказПокупателя.Подразделение,
	|	ЗаказПокупателя.СтруктурноеПодразделение,
	|	ЗаказПокупателя.Контрагент,
	|	ЗаказПокупателя.Товары.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Характеристика,
	|		ЕдиницаИзмерения,
	|		Коэффициент,
	|		СрокПоставки,
	|		Количество,
	|		Цена,
	|		Сумма,
	|		СтавкаНДС,
	|		СуммаНДС
	|	),
	|	ЗаказПокупателя.Услуги.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Характеристика,
	|		СрокПоставки,
	|		Количество,
	|		Цена,
	|		Сумма,
	|		СтавкаНДС,
	|		СуммаНДС
	|	),
	|	ЗаказПокупателя.ОС.(
	|		НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		СрокПоставки,
	|		Сумма,
	|		СтавкаНДС,
	|		СуммаНДС
	|	),
	|	ЗаказПокупателя.УчитыватьНДС,
	|	ЗаказПокупателя.Ссылка
	|ИЗ
	|	Документ.узп_ЗаказПокупателя КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
	Выборка = Запрос.Выполнить().Выбрать();

	Шапка = Макет.ПолучитьОбласть("Шапка");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабличныйДокумент.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка");
		ОбластьТовары = Макет.ПолучитьОбласть("Товары");
		ОбластьУслугиШапка = Макет.ПолучитьОбласть("УслугиШапка");
		ОбластьУслуги = Макет.ПолучитьОбласть("Услуги");
		ОбластьОСШапка = Макет.ПолучитьОбласть("ОСШапка");
		ОбластьОС = Макет.ПолучитьОбласть("ОС");
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ВставлятьРазделительСтраниц = Ложь;
		
		Если НЕ Выборка.УчитыватьНДС Тогда
			ОбластьТоварыШапка.УдалитьОбласть(ОбластьТоварыШапка.Область("R2C10:R2C11"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьУслугиШапка.УдалитьОбласть(ОбластьУслугиШапка.Область("R2C8:R2C9"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьТовары.УдалитьОбласть(ОбластьТовары.Область("R1C10:R1C11"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьУслуги.УдалитьОбласть(ОбластьУслуги.Область("R1C8:R1C9"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьОСШапка.УдалитьОбласть(ОбластьТовары.Область("R1C6:R1C7"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьОС.УдалитьОбласть(ОбластьУслуги.Область("R1C6:R1C7"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		КонецЕсли;
		Шапка.Параметры.Заполнить(Выборка);
		Шапка.Параметры.ОрганизацияНаименование = Выборка.Организация.Наименование+?(ЗначениеЗаполнено(Выборка.СтруктурноеПодразделение),"/"+Выборка.СтруктурноеПодразделение.Наименование,"");
		Шапка.Параметры.Поставщик = Выборка.Контрагент.Наименование+?(ЗначениеЗаполнено(Выборка.ДоговорКонтрагента),"/ договор: "+Выборка.ДоговорКонтрагента.Наименование,"");
		ТабличныйДокумент.Вывести(Шапка, Выборка.Уровень());

		ВыборкаТовары = Выборка.Товары.Выбрать();
		Если ВыборкаТовары.Количество()>0 Тогда
			ТабличныйДокумент.Вывести(ОбластьТоварыШапка);
		КонецЕсли;
		Пока ВыборкаТовары.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			Если ЗначениеЗаполнено(ВыборкаТовары.Характеристика) Тогда
				ОбластьТовары.Параметры.Номенклатура = ВыборкаТовары.Номенклатура.Наименование + " / "+ВыборкаТовары.Характеристика.Наименование;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
		КонецЦикла;

		ВыборкаУслуги = Выборка.Услуги.Выбрать();
		Если ВыборкаУслуги.Количество()>0 Тогда
			ТабличныйДокумент.Вывести(ОбластьУслугиШапка);
		КонецЕсли;
		Пока ВыборкаУслуги.Следующий() Цикл
			ОбластьУслуги.Параметры.Заполнить(ВыборкаУслуги);
			Если ЗначениеЗаполнено(ВыборкаУслуги.Характеристика) Тогда
				ОбластьУслуги.Параметры.Номенклатура = ВыборкаУслуги.Номенклатура.Наименование + " / "+ВыборкаУслуги.Характеристика.Наименование;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьУслуги, ВыборкаУслуги.Уровень());
		КонецЦикла;
  
		ВыборкаОС = Выборка.ОС.Выбрать();
		Если ВыборкаОС.Количество()>0 Тогда
			ТабличныйДокумент.Вывести(ОбластьОСШапка);
		КонецЕсли;
		Пока ВыборкаОС.Следующий() Цикл
			ОбластьОС.Параметры.Заполнить(ВыборкаОС);
			ТабличныйДокумент.Вывести(ОбластьОС, ВыборкаОС.Уровень());
		КонецЦикла;
		Подвал.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(Подвал);
		ВставлятьРазделительСтраниц = Истина;
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	КонецЦикла;
	Возврат ТабличныйДокумент;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ДополнительныеПараметрыЗапросов = Новый Структура();
		
	ДополнительныеЗапросы = Новый Массив;
		
	ПараметрыПроведения = фин_УправлениеПроведениемДокументовСервер.ПодготовитьПараметрыПроведения(ДокументСсылка,Отказ,Истина,Истина,,,,,ДополнительныеПараметрыЗапросов,ДополнительныеЗапросы);
	
	Возврат ПараметрыПроведения;

КонецФункции 

#КонецЕсли