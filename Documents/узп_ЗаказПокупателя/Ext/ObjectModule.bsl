#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаПроведения".
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	фин_ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.узп_ЗаказПокупателя.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ Тогда
		фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаТовары, Движения, Отказ,"Товары","узп_УправлениеЗакупками","ЗарегистрироватьДвиженияЗаказыПокупателей",,);
		фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаУслуги, Движения, Отказ,"Услуги","узп_УправлениеЗакупками","ЗарегистрироватьДвиженияЗаказыПокупателей",,);
		фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаОС, Движения, Отказ,"ОС","узп_УправлениеЗакупками","ЗарегистрироватьДвиженияЗаказыПокупателей",,);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Заголовок = "";
	
	Если НЕ ЕдиныйСрокПоставкиПоЗаказу Тогда
		дог_УправлениеДоговорами.ИсключитьПроверку(ПроверяемыеРеквизиты,"СрокПоставки");
	КонецЕсли;

	Если ЗначениеЗаполнено(ДоговорКонтрагента) И ДоговорКонтрагента.ВалютаВзаиморасчетов <> ВалютаДокумента Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Заголовок+"
		|	валюта документа отличается от валюты договора!");
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из Товары Цикл
		СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(СтрокаТаблицы.НомерСтроки) +
		                               """ табличной части """ + "Товары" + """: ";
		Если ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура)
		   И  СтрокаТаблицы.Номенклатура.Услуга Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаНачалаСообщенияОбОшибке + "содержится услуга. " +
				                   "Услуг здесь быть не должно!",,,,Отказ);
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаТаблицы Из Услуги Цикл
		СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(СтрокаТаблицы.НомерСтроки) +
        	                       """ табличной части """ + "Услуги" + """: ";
		Если ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура)
		   И  Не СтрокаТаблицы.Номенклатура.Услуга Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаНачалаСообщенияОбОшибке + "содержится номенклатура, не являющаяся услугой. " +
				                   "Здесь могут быть только услуги!",,,,Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЕдиныйСрокПоставкиПоЗаказу Тогда
		Для Каждого СтрокаТовар Из Товары Цикл
			СтрокаТовар.СрокПоставки = СрокПоставки;
		КонецЦикла;
		Для Каждого СтрокаУслуги Из Услуги Цикл
			СтрокаУслуги.СрокПоставки = СрокПоставки;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
		
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"));
	
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура") 
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		Документы.узп_ЗаказПокупателя.ЗаполнитьПоДокументуОснованию(ЭтотОбъект, ДанныеЗаполнения);
		Возврат;
	КонецЕсли;
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#КонецЕсли