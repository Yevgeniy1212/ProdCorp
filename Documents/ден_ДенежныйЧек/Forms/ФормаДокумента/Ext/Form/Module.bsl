
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ДокументПриСозданииНаСервере(ЭтотОбъект);
	
	ПодготовитьФормуНаСервере();
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ДокументПриЧтенииНаСервере(ЭтотОбъект,ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	общ_ОбщегоНазначенияКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;

	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ТекущаяОрганизация = Объект.Организация Тогда
		Возврат
	КонецЕсли;

	ОрганизацияПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияОтправительПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(СтруктурноеПодразделениеОрганизацияОтправитель) Тогда 
		Объект.СтруктурноеПодразделениеОтправитель     = Неопределено;
        СтруктурноеПодразделениеОрганизацияОтправитель = Объект.Организация
	Иначе 
		Результат = общ_РаботаСоСтруктурнымиПодразделениями.ПроверитьИзменениеЗначенийОрганизацииСтруктурногоПодразделения(СтруктурноеПодразделениеОрганизацияОтправитель, Объект.Организация, Объект.СтруктурноеПодразделениеОтправитель);
		Если Результат.ИзмененоСтруктурноеПодразделение Тогда
			Объект.СтруктурноеПодразделениеОтправитель = СтруктурноеПодразделениеОрганизацияОтправитель;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияОтправительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	общ_РаботаСоСтруктурнымиПодразделениями.СтруктурноеПодразделениеНачалоВыбора(ЭтаФорма, СтандартнаяОбработка, Объект.Организация, Объект.СтруктурноеПодразделениеОтправитель, Ложь,"ПослеВыбораСтруктурногоПодразделенияОтправителя");

КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияПолучательПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(СтруктурноеПодразделениеОрганизацияПолучатель) Тогда 
		Объект.СтруктурноеПодразделениеПолучатель     = Неопределено;
		СтруктурноеПодразделениеОрганизацияПолучатель = Объект.Организация;
	Иначе 
		Результат = общ_РаботаСоСтруктурнымиПодразделениями.ПроверитьИзменениеЗначенийОрганизацииСтруктурногоПодразделения(СтруктурноеПодразделениеОрганизацияПолучатель, Объект.Организация, Объект.СтруктурноеПодразделениеПолучатель);
		Если Результат.ИзмененоСтруктурноеПодразделение Тогда
			Объект.СтруктурноеПодразделениеПолучатель = СтруктурноеПодразделениеОрганизацияПолучатель;	
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	общ_РаботаСоСтруктурнымиПодразделениями.СтруктурноеПодразделениеНачалоВыбора(ЭтаФорма, СтандартнаяОбработка, Объект.Организация, Объект.СтруктурноеПодразделениеПолучатель, Ложь, "ПослеВыбораСтруктурногоПодразделенияПолучателя");

КонецПроцедуры

&НаКлиенте
Процедура НажатиеПоЭлементуНавигации(Элемент)
	
	общ_ОбщегоНазначенияКлиент.НажатиеНаПанельЗакладок(Элементы, Элемент, Элементы.ГруппаПереключателейСтраницФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетОрганизацииПриИзменении(Элемент)
	
	Если Объект.СчетОрганизации.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	СчетОрганизацииПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура КассаПриИзменении(Элемент)
	
	ВалютаДС = ПолучитьВалютуДС(Объект.Касса);
	
	Если ЗначениеЗаполнено(Объект.СчетОрганизации)
	   И ЗначениеЗаполнено(Объект.Касса)
	   И ПолучитьВалютуДС(Объект.СчетОрганизации) <> ВалютаДС Тогда
	   ТекстСообщения = НСтр("ru = 'Не совпадают валюты расчетного счета и кассы! Поле расчетного счета - очищено.'");
	   ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "СчетОрганизации", "Объект");
	   Объект.СчетОрганизации = "";
	КонецЕсли;
	
	Элементы.НадписьВалюта.Заголовок = ВалютаДС;
	Объект.ВалютаДокумента = ВалютаДС;
	
КонецПроцедуры 

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ВыплатаЗаработнойПлаты

&НаКлиенте
Процедура ВыплатаЗаработнойПлатыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СуммаЗП = Объект.ВыплатаЗаработнойПлаты.Итог("СуммаКВыплате");
	
	Если СуммаЗП > Объект.СуммаДокумента Тогда
		Объект.СуммаДокумента = СуммаЗП;
	КонецЕсли; 
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыплатаЗаработнойПлатыПередУдалением(Элемент, Отказ)
	
	Если Объект.ВыплатаЗаработнойПлаты.Итог("СуммаКВыплате") = Объект.СуммаДокумента Тогда
		СуммаКВыплате = Элементы.ВыплатаЗаработнойПлаты.ТекущиеДанные.СуммаКВыплате;
		Если СуммаКВыплате <> 0 Тогда
			Объект.СуммаДокумента = Объект.СуммаДокумента - СуммаКВыплате;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыплатаЗаработнойПлатыПослеУдаления(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыплатаЗаработнойПлатыВедомостьПриИзменении(Элемент)
	
	ТекДанные = Элементы.ВыплатаЗаработнойПлаты.ТекущиеДанные;
	ТекДанные.СуммаКВыплате = ПолучитьСуммуКВыплате(ТекДанные.Ведомость);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда) Экспорт
	
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда) Экспорт
	
	Если НЕ фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// Управление формой

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	ПоддержкаРаботыСоСтруктурнымиПодразделениями = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПризнакОтображенияСтруктурныхПодразделений();
	
	ТекущаяОрганизация = Объект.Организация;
	ТекущаяДатаДокумента = Объект.Дата;
	
	ОткрыватьНастройкуДвижений = фин_ОбщегоНазначенияСервер.ПолучитьЗначениеПоУмолчанию(, "ПоказыватьДвиженияПриПроведении");
	
	УправлениеФормой(ЭтаФорма);
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПризнакОтображенияСтруктурныхПодразделений();
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ПоддержкаРаботыСоСтруктурнымиПодразделениями ИЛИ
		 (ПоддержкаРаботыСоСтруктурнымиПодразделениями = Ложь И (ЗначениеЗаполнено(Объект.СтруктурноеПодразделениеОтправитель) 
		 ИЛИ ЗначениеЗаполнено(Объект.СтруктурноеПодразделениеПолучатель)));
	общ_РаботаСоСтруктурнымиПодразделениями.УстановитьВидимостьСтруктурногоПодразделения(Объект.Организация, Объект.СтруктурноеПодразделениеОтправитель, СтруктурноеПодразделениеОрганизацияОтправитель);
	общ_РаботаСоСтруктурнымиПодразделениями.УстановитьСвойстваЭлементаСтруктурноеПодразделениеОрганизация(Элементы.СтруктурноеПодразделениеОрганизацияОтправитель, Объект.СтруктурноеПодразделениеОтправитель, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	
	общ_РаботаСоСтруктурнымиПодразделениями.УстановитьВидимостьСтруктурногоПодразделения(Объект.Организация, Объект.СтруктурноеПодразделениеПолучатель, СтруктурноеПодразделениеОрганизацияПолучатель);
	общ_РаботаСоСтруктурнымиПодразделениями.УстановитьСвойстваЭлементаСтруктурноеПодразделениеОрганизация(Элементы.СтруктурноеПодразделениеОрганизацияПолучатель, Объект.СтруктурноеПодразделениеПолучатель, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	усд_УправлениеСогласованиемДокументов.ДоступностьРедактированияДокумента(ЭтотОбъект,Объект);

	Если ПоддержкаРаботыСоСтруктурнымиПодразделениями = Ложь 
		 И НЕ(ЗначениеЗаполнено(Объект.СтруктурноеПодразделениеОтправитель) 
		 ИЛИ ЗначениеЗаполнено(Объект.СтруктурноеПодразделениеПолучатель)) Тогда
		
		Элементы.СтруктурноеПодразделениеОрганизацияОтправитель.Видимость = Ложь;
		Элементы.СтруктурноеПодразделениеОрганизацияПолучатель.Видимость = Ложь;
	Иначе
		Элементы.СтруктурноеПодразделениеОрганизацияОтправитель.Видимость = Истина;
		Элементы.СтруктурноеПодразделениеОрганизацияПолучатель.Видимость = Истина;
	КонецЕсли;
	
	ПравоДоступаКТЧ();
	
	оф_СнятиеСоСчетаЗаголовок 		= "Снятие со счета";
	оф_ПолучениеВКассеЗаголовок 	= "Получение в кассе";
	оф_ВедомостиКОплатеЗаголовок 	= "Ведомости к оплате";	
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	СуммаЗП = Объект.ВыплатаЗаработнойПлаты.Итог("СуммаКВыплате");
	ТекстЗаголовка = "Итого на выплату заработной платы: " + СуммаЗП + " " + ПолучитьВалютуДС(Объект.Касса);
	Элементы.НадписьИтогоЗП.Заголовок = ТекстЗаголовка;
	
	КоличествоВедомостей = Объект.ВыплатаЗаработнойПлаты.Количество();
	ТекстЗаголовка = "Под выплату заработной платы" + ?(КоличествоВедомостей>0," ("+Строка(КоличествоВедомостей)+")","");	
	Элементы.СтраницаВыплатаЗаработнойПлаты.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

// При изменении реквизитов (на сервере)

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	СтруктурноеПодразделениеОрганизацияОтправитель = Объект.Организация;
	Объект.СтруктурноеПодразделениеОтправитель 	   = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	СтруктурноеПодразделениеОрганизацияПолучатель  = Объект.Организация;
	Объект.СтруктурноеПодразделениеПолучатель      = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	
	СтруктураРезультатаВыполнения = Неопределено;
	общ_РаботаСоСтруктурнымиПодразделениями.ПриИзмененииЗначенияОрганизации(Объект,,СтруктураРезультатаВыполнения);
	
	Объект.Номер = "";
	
	УправлениеФормой(ЭтаФорма);
	
	ТекущаяОрганизация = Объект.Организация;
	
КонецПроцедуры

&НаСервере
Процедура СчетОрганизацииПриИзмененииНаСервере()
    
    Если Объект.Организация.Пустая() Тогда
        Объект.Организация = Объект.СчетОрганизации.Владелец;
	КонецЕсли;
	
    Если ЗначениеЗаполнено(Объект.СчетОрганизации)
        И ЗначениеЗаполнено(Объект.Касса)
        И Объект.СчетОрганизации.ВалютаДенежныхСредств <> Объект.Касса.ВалютаДенежныхСредств Тогда
		ТекстСообщения = НСтр("ru = 'Не совпадают валюты расчетного счета и кассы! Поле кассы - очищено.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Касса", "Объект");
        Объект.Касса = "";
	КонецЕсли;
	
    Объект.ВалютаДокумента = Объект.СчетОрганизации.ВалютаДенежныхСредств;
    Элементы.НадписьВалюта.Заголовок = Объект.СчетОрганизации.ВалютаДенежныхСредств.Наименование;
	
КонецПроцедуры

// Обработчики, вызываемые после окончания интерактивных действий пользователя

&НаКлиенте
Процедура ПослеВыбораСтруктурногоПодразделенияОтправителя(Результат, Параметры) Экспорт
	
	общ_РаботаСоСтруктурнымиПодразделениями.ПослеВыбораСтруктурногоПодразделения(Результат, Объект.Организация, Объект.СтруктурноеПодразделениеОтправитель, СтруктурноеПодразделениеОрганизацияОтправитель);
	Если Результат.ИзмененоСтруктурноеПодразделение Тогда
		Объект.СтруктурноеПодразделениеОтправитель = СтруктурноеПодразделениеОрганизацияОтправитель;	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораСтруктурногоПодразделенияПолучателя(Результат, Параметры) Экспорт
	
	общ_РаботаСоСтруктурнымиПодразделениями.ПослеВыбораСтруктурногоПодразделения(Результат, Объект.Организация, Объект.СтруктурноеПодразделениеПолучатель, СтруктурноеПодразделениеОрганизацияПолучатель);
	Если Результат.ИзмененоСтруктурноеПодразделение Тогда
		Объект.СтруктурноеПодразделениеПолучатель = СтруктурноеПодразделениеОрганизацияПолучатель;	
	КонецЕсли;
	
КонецПроцедуры

// Служебные процедуры и функции

&НаСервере
Процедура ПравоДоступаКТЧ()
	
	ПравоРедактирования = ПравоДоступа("Редактирование", Метаданные.Документы.ОПВПеречислениеВФонды);
	Элементы.ВыплатаЗаработнойПлаты.Видимость = ПравоРедактирования;
	Элементы.ВыплатаЗаработнойПлатыПросмотр.Видимость = Не ПравоРедактирования;
	
	Если Не ПравоРедактирования Тогда
		Для каждого СтрокаТЧ Из Объект.ВыплатаЗаработнойПлаты Цикл
			НоваяСтрока = ВыплатаЗаработнойПлатыПросмотр.Добавить();
			НоваяСтрока.Ведомость = СтрокаТЧ.Ведомость;
			НоваяСтрока.СуммаКВыплате = СтрокаТЧ.СуммаКВыплате;
			НоваяСтрока.СтатьяДвиженияДенежныхСредств = СтрокаТЧ.СтатьяДвиженияДенежныхСредств;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВалютуДС(Значение)
	
	Возврат фин_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Значение, "ВалютаДенежныхСредств");
	
КонецФункции  

&НаСервереБезКонтекста
Функция ПолучитьСуммуКВыплате(Ссылка)
	
	Сумма = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ЗарплатаКВыплатеЗарплата.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеЗарплата
	|
	|ГДЕ
	|	ЗарплатаКВыплатеЗарплата.Ссылка = &Ссылка И
	|	(НЕ(ЗарплатаКВыплатеЗарплата.ВыплаченностьЗарплаты = &ВыплаченностьЗарплаты))";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВыплаченностьЗарплаты", Перечисления.ВыплаченностьЗарплаты.Задепонировано);

	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Следующий() Тогда
		Сумма = РезультатЗапроса.Сумма;
	КонецЕсли;
	
	Возврат Сумма;
	
КонецФункции