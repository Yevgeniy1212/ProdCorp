////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем мОтображатьСтруктурныеПодразделения Экспорт;

// Стандартная для данной конфигурации функция форматирования прописи количества
//
// Параметры: 
//  Количество - число, которое мы хотим форматировать
//
// Возвращаемое значение:
//  Отформатированная должным образом строковое представление количества.
//
Функция КоличествоПрописью(Количество) Экспорт

	//ЦелаяЧасть   = Цел(Количество);
	//ДробнаяЧасть = Окр(Количество - ЦелаяЧасть, 3);

	//Если ДробнаяЧасть = Окр(ДробнаяЧасть,0) Тогда
	//	ПредставлениеДробнойЧасти = "";
	//Иначе
	//	ПредставлениеДробнойЧасти = СтрЗаменить(ДробнаяЧасть,"0,","");
	//КонецЕсли;
	//
	//ПредставлениеКоличества = СтрЗаменить(ЧислоПрописью(ЦелаяЧасть,"Л=ru_RU" ,",,,,,,,,3"),"00","")+ ПредставлениеДробнойЧасти;

	//Возврат ПредставлениеКоличества;

	ЦелаяЧасть   = Цел(Количество);
	ДробнаяЧасть = Окр(Количество - ЦелаяЧасть, 3);

	Если ДробнаяЧасть = Окр(ДробнаяЧасть,0) Тогда
		ПараметрыПрописи = ", , , , , , , , 0";
	ИначеЕсли ДробнаяЧасть = Окр(ДробнаяЧасть, 1) Тогда
		ПараметрыПрописи = "целая, целых, целых, ж, десятая, десятых, десятых, м, 1";
	ИначеЕсли ДробнаяЧасть = Окр(ДробнаяЧасть, 2) Тогда
		ПараметрыПрописи = "целая, целых, целых, ж, сотая, сотых, сотых, м, 2";
	Иначе
		ПараметрыПрописи = "целая, целых, целых, ж, тысячная, тысячных, тысячных, м, 3";
	КонецЕсли;

	Возврат ЧислоПрописью(Количество, ,ПараметрыПрописи);

КонецФункции // КоличествоПрописью()

#Если Клиент Тогда

Функция ПечатьДоверенности(НазваниеМакета)

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доверенность.Номер КАК НомерДокумента,
	|	Доверенность.Дата КАК ДатаДокумента,
	|	Доверенность.СтруктурнаяЕдиница КАК БанковскийСчет,
	|	Доверенность.Организация,
	|   Доверенность.СтруктурноеПодразделение,
	|	Доверенность.Потребитель,
	|	Доверенность.БанковскийСчетПотребителя,
	|	Доверенность.ФизЛицо,
	|	Доверенность.ФизЛицо.Наименование КАК ФамилияИмяОчествоДоверенного,
	|	Доверенность.Контрагент КАК Поставщик,
	|	ВЫРАЗИТЬ(Доверенность.НаПолучениеОт КАК СТРОКА(1000)) КАК ПоставщикПредставление,
	|	Доверенность.ДатаДействия КАК СрокДействия,
	|	ВЫРАЗИТЬ(Доверенность.ПоДокументу КАК СТРОКА(1000)) КАК РеквизитыДокументаНаПолучение
	|ИЗ
	|	Документ.Доверенность КАК Доверенность
	|ГДЕ
	|	Доверенность.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	//запрос по товарам
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Доверенность.НомерСтроки КАК Номер,
	               |	Доверенность.НаименованиеТовара КАК Ценнности,
	               |	Доверенность.НаименованиеТовара КАК ЦеннностиПредставление,
	               |	Доверенность.ЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	               |	Доверенность.ЕдиницаПоКлассификатору.Представление КАК ЕдиницаИзмеренияПредставление,
	               |	Доверенность.Количество
	               |ИЗ
	               |	Документ.Доверенность.Товары КАК Доверенность
	               |ГДЕ
	               |	Доверенность.Ссылка = &ТекущийДокумент
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Номер";
    
	ВыборкаСтрокТовары = Запрос.Выполнить().Выбрать();

	СтруктурнаяЕдиницаОрганизация = ОбщегоНазначения.ПолучитьСтруктурнуюЕдиницу(Шапка.Организация, Шапка.СтруктурноеПодразделение);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Доверенность_ТМЗ1";

	Макет = ПолучитьМакет("З1");

	ДанныеОФизЛице = ПроцедурыУправленияПерсоналом.ДанныеФизЛица(Организация, ФизЛицо, Дата);
	
	ФамилияИмяОчествоДоверенного = ""+ДанныеОФизЛице.Фамилия +" "+ ДанныеОФизЛице.Имя +" "+ ДанныеОФизЛице.Отчество;
	Должность                    = СокрЛП(ДанныеОФизЛице.Должность);
    СтруктураФИО = Новый Структура();
	СтруктураФИО.Вставить("Фамилия", ДанныеОФизЛице.Фамилия);
	СтруктураФИО.Вставить("Имя", ДанныеОФизЛице.Имя);
	СтруктураФИО.Вставить("Отчество", ДанныеОФизЛице.Отчество);
	
	Руководители = ОбщегоНазначения.ОтветственныеЛицаОрганизаций(СтруктурнаяЕдиницаОрганизация, Дата);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	
	СведенияОбОрганизации = ОбщегоНазначения.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, Шапка.ДатаДокумента, , Шапка.БанковскийСчет);
	ПредставлениеОрганизации = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
	
	СведенияОПотребителе = ОбщегоНазначения.СведенияОЮрФизЛице(Шапка.Потребитель, Шапка.ДатаДокумента, , Шапка.БанковскийСчетПотребителя);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
	ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект, глСписокПрефиксовУзлов);
	ОбластьМакета.Параметры.СрокДействия             = Формат(Шапка.СрокДействия,"ДЛФ=DD");
	ОбластьМакета.Параметры.ДатаВыдачи               = Формат(Шапка.ДатаДокумента,"ДЛФ=DD");
	Если ЗначениеЗаполнено(Шапка.Потребитель) Тогда
		РеквизитыСчета									 = ОбщегоНазначения.ОписаниеОрганизации(СведенияОПотребителе, "НомерСчета,Банк,БИК,");
		Позиция 										 = Найти(РеквизитыСчета, " в банке ");
		ОбластьМакета.Параметры.НомерСчета          	 = Сред(РеквизитыСчета, 1, Позиция - 1);
		ОбластьМакета.Параметры.НаименованиеБанка        = Сред(РеквизитыСчета, Позиция + 9, СтрДлина(РеквизитыСчета));
	Иначе
		РеквизитыСчета									 = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "НомерСчета,Банк,БИК,");
		Позиция 										 = Найти(РеквизитыСчета, " в банке ");
		ОбластьМакета.Параметры.НомерСчета          	 = Сред(РеквизитыСчета, 1, Позиция - 1);
		ОбластьМакета.Параметры.НаименованиеБанка        = Сред(РеквизитыСчета, Позиция + 9, СтрДлина(РеквизитыСчета));
	КонецЕсли;

	Если ЗначениеЗаполнено(Шапка.Потребитель) Тогда
		ОбластьМакета.Параметры.РеквизитыПотребителя     = ОбщегоНазначения.ОписаниеОрганизации(СведенияОПотребителе, "ПолноеНаименование,РНН,ЮридическийАдрес,");
		ОбластьМакета.Параметры.РеквизитыПлательщика     = ОбщегоНазначения.ОписаниеОрганизации(СведенияОПотребителе, "ПолноеНаименование,РНН,ЮридическийАдрес,");
	Иначе
		ОбластьМакета.Параметры.РеквизитыПотребителя     = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,РНН,ЮридическийАдрес,");
		ОбластьМакета.Параметры.РеквизитыПлательщика     = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,РНН,ЮридическийАдрес,");
	КонецЕсли;

	ОбластьМакета.Параметры.ОрганизацияПоОКПО     	 = СведенияОбОрганизации.КодПоОКПО;
	ОбластьМакета.Параметры.ОрганизацияРНН     	     = СведенияОбОрганизации.РНН;
	ОбластьМакета.Параметры.ПаспортСерия             = ДанныеОФизЛице.ДокументСерия;
	ОбластьМакета.Параметры.ПаспортНомер             = ДанныеОФизЛице.ДокументНомер;
	ОбластьМакета.Параметры.ПаспортВыдан             = ДанныеОФизЛице.ДокументКемВыдан;
	ОбластьМакета.Параметры.ПаспортДатаВыдачи        = Формат(ДанныеОФизЛице.ДокументДатаВыдачи,"ДФ=dd.MM.yyyy") ;
	
	Если  НЕ ФИзЛицо.Пустая() Тогда
		ОбластьМакета.Параметры.ФамилияИмяОчествоДоверенного = ОбщегоНазначения.ПреобразоватьФИОВДательныйПадеж(СтруктураФИО, ДанныеОФизЛице.НеСклонятьФамилию, ФИзЛицо.Пол);
		ОбластьМакета.Параметры.ДолжностьДоверенного     = Должность;
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Строка");

	Пока ВыборкаСтрокТовары.Следующий() Цикл

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		Если ТипЗнч(ВыборкаСтрокТовары.ЦеннностиПредставление) = Тип("Строка") Тогда
			ЦеннностиПредставление = ВыборкаСтрокТовары.ЦеннностиПредставление;
		Иначе
			ЦеннностиПредставление = ВыборкаСтрокТовары.ЦеннностиПредставление.НаименованиеПолное;
		КонецЕсли;
		
		ОбластьМакета.Параметры.ЦеннностиПредставление = ЦеннностиПредставление;
		
		ОбластьМакета.Параметры.КоличествоПрописью = "";
		
		Если ВыборкаСтрокТовары.Количество <> 0 Тогда
			ОбластьМакета.Параметры.КоличествоПрописью = Строка(ВыборкаСтрокТовары.Количество) + " (" + 
		                                             ОбщегоНазначения.КоличествоПрописью(ВыборкаСтрокТовары.Количество) + ")";
		КонецЕсли;											 
		
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла;
	
	Руководители = ОбщегоНазначения.ОтветственныеЛицаОрганизаций(СтруктурнаяЕдиницаОрганизация,Дата);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;

	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	
	Если ЗначениеЗаполнено(Руководитель) Или Руководитель <> Неопределено Тогда
		ОбластьМакета.Параметры.Руководитель     = СокрЛП(Руководитель);
	КонецЕсли;
	Если ЗначениеЗаполнено(Бухгалтер) Или Бухгалтер <> Неопределено Тогда
		ОбластьМакета.Параметры.ГлавныйБухгалтер = СокрЛП(Бухгалтер);
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

КонецФункции // ПечатьДоверенности()

// Функция формирует табличный документ с печатной формой 
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьДоверенностиД1() Экспорт
	
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Доверенность.Номер КАК НомерДокумента,
	|	Доверенность.Дата КАК ДатаДокумента,
	|	Доверенность.СтруктурнаяЕдиница КАК БанковскийСчет,
	|	Доверенность.Организация,
	|   Доверенность.СтруктурноеПодразделение,
	|	Доверенность.ФизЛицо,
	|	Доверенность.ФизЛицо.Наименование КАК ФамилияИмяОчествоДоверенного,
	|	Доверенность.Контрагент КАК Поставщик,
	|	ВЫРАЗИТЬ(Доверенность.НаПолучениеОт КАК СТРОКА(1000)) КАК ПоставщикПредставление,
	|	Доверенность.ДатаДействия КАК СрокДействия,
	|	ВЫРАЗИТЬ(Доверенность.ПоДокументу КАК СТРОКА(1000)) КАК РеквизитыДокументаНаПолучение
	|ИЗ
	|	Документ.Доверенность КАК Доверенность
	|ГДЕ
	|	Доверенность.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
		
	//запрос по товарам
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Доверенность.НомерСтроки КАК Номер,
	               |	Доверенность.НаименованиеТовара КАК Ценнности,
	               |	Доверенность.НаименованиеТовара КАК ЦеннностиПредставление,
	               |	Доверенность.ЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	               |	Доверенность.ЕдиницаПоКлассификатору.Представление КАК ЕдиницаИзмеренияПредставление,
	               |	Доверенность.Количество
	               |ИЗ
	               |	Документ.Доверенность.Товары КАК Доверенность
	               |ГДЕ
	               |	Доверенность.Ссылка = &ТекущийДокумент
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Номер";
    
	ВыборкаСтрокТовары = Запрос.Выполнить().Выбрать();

	СтруктурнаяЕдиницаОрганизация = ОбщегоНазначения.ПолучитьСтруктурнуюЕдиницу(Шапка.Организация, Шапка.СтруктурноеПодразделение);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Доверенность_Д1";

	Макет = ПолучитьМакет("Д1");

	ДанныеОФизЛице = ПроцедурыУправленияПерсоналом.ДанныеФизЛица(ЭтотОбъект.Организация, ЭтотОбъект.ФизЛицо, ЭтотОбъект.Дата);
	
	ФамилияИмяОчествоДоверенного = ""+ДанныеОФизЛице.Фамилия +" "+ ДанныеОФизЛице.Имя +" "+ ДанныеОФизЛице.Отчество;
	Должность                    = СокрЛП(ДанныеОФизЛице.Должность);
    СтруктураФИО = Новый Структура();
	СтруктураФИО.Вставить("Фамилия", ДанныеОФизЛице.Фамилия);
	СтруктураФИО.Вставить("Имя", ДанныеОФизЛице.Имя);
	СтруктураФИО.Вставить("Отчество", ДанныеОФизЛице.Отчество);
	
	Руководители = ОбщегоНазначения.ОтветственныеЛицаОрганизаций(СтруктурнаяЕдиницаОрганизация, ЭтотОбъект.Дата);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	
	СведенияОбОрганизации 	 = ОбщегоНазначения.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, Шапка.ДатаДокумента, , Шапка.БанковскийСчет);
	ПредставлениеОрганизации = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
    	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
	ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект, глСписокПрефиксовУзлов);
	ОбластьМакета.Параметры.СрокДействия             = Формат(Шапка.СрокДействия,"Л=ru_RU; ДЛФ=DD");
	ОбластьМакета.Параметры.ДатаВыдачи               = Формат(Шапка.ДатаДокумента,"Л=ru_RU; ДЛФ=DD");
	РеквизитыСчета									 = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "НомерСчета,Банк,БИК,");
	Позиция 										 = Найти(РеквизитыСчета, " в банке ");
	НаименованиеБанка_                               = Сред(РеквизитыСчета, Позиция + 9, СтрДлина(РеквизитыСчета));
	ОбластьМакета.Параметры.НаименованиеБанка        = НаименованиеБанка_;
	НомерСчета_                                      = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "НомерСчета,");
	ОбластьМакета.Параметры.НомерСчета               = НомерСчета_;
	
	ОбластьМакета.Параметры.ОрганизацияРНН_БИН		 	  = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "БИН_ИИН,",ложь);
	ОбластьМакета.Параметры.РеквизитыПотребителя     	  = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,БИН_ИИН,ЮридическийАдрес,", );
	ОбластьМакета.Параметры.РеквизитыПлательщика     	  = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,БИН_ИИН,ЮридическийАдрес,", );
	ОбластьМакета.Параметры.ПаспортСерия             	  = ДанныеОФизЛице.ДокументСерия;
	ОбластьМакета.Параметры.ПаспортНомер             	  = ДанныеОФизЛице.ДокументНомер;
	ОбластьМакета.Параметры.ПаспортВыдан             	  = ДанныеОФизЛице.ДокументКемВыдан;
	ОбластьМакета.Параметры.ПаспортДатаВыдачи        	  = Формат(ДанныеОФизЛице.ДокументДатаВыдачи,"ДФ=dd.MM.yyyy") ;
	ОбластьМакета.Параметры.РеквизитыДокументаНаПолучение = СокрЛП(Шапка.РеквизитыДокументаНаПолучение);
	ОбластьМакета.Параметры.ПоставщикПредставление   	  = СокрЛП(Шапка.ПоставщикПредставление);
	
	Если  Не ЭтотОбъект.ФИзЛицо.Пустая() Тогда
		ОбластьМакета.Параметры.ФамилияИмяОчествоДоверенного = ОбщегоНазначения.ПреобразоватьФИОВДательныйПадеж(СтруктураФИО, ДанныеОФизЛице.НеСклонятьФамилию);
		ОбластьМакета.Параметры.ДолжностьДоверенного     	 = Должность;
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	
	ИтогоКоличество=0;

	Пока ВыборкаСтрокТовары.Следующий() Цикл
        Количество = ВыборкаСтрокТовары.Количество; 		

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		Если ТипЗнч(ВыборкаСтрокТовары.ЦеннностиПредставление) = Тип("Строка") Тогда
			ЦеннностиПредставление = ВыборкаСтрокТовары.ЦеннностиПредставление;
		Иначе
			ЦеннностиПредставление = ВыборкаСтрокТовары.ЦеннностиПредставление.НаименованиеПолное;
		КонецЕсли;
		
		ОбластьМакета.Параметры.ЦеннностиПредставление = ЦеннностиПредставление;
		
		ОбластьМакета.Параметры.КоличествоПрописью = "";
		
		Если ВыборкаСтрокТовары.Количество <> 0 Тогда
			ОбластьМакета.Параметры.КоличествоПрописью = Строка(ВыборкаСтрокТовары.Количество) + " (" + 
													 СокрЛП(КоличествоПрописью(ВыборкаСтрокТовары.Количество)) + ")";
		                                            
		КонецЕсли;											 
		
		ТабДокумент.Вывести(ОбластьМакета);

    ИтогоКоличество = ИтогоКоличество + Количество;
	КонецЦикла;
	
	ОбластьМакета = Макет.ПолучитьОбласть("ИтогоТаблицы");
	
	ОбластьМакета.Параметры.ИтогоКоличество = "";
	
	Если ВыборкаСтрокТовары.Количество <> 0 Тогда
		   ОбластьМакета.Параметры.ИтогоКоличество = Строка(ИтогоКоличество) +  " (" + 
													СокрЛП(ОбщегоНазначения.КоличествоПрописью(ИтогоКоличество)) + ")";
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	Руководители = ОбщегоНазначения.ОтветственныеЛицаОрганизаций(СтруктурнаяЕдиницаОрганизация, ЭтотОбъект.Дата);
	Руководитель = Руководители.Руководитель;
	ГлавныйБухгалтер = Руководители.ГлавныйБухгалтер;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	
	Если ЗначениеЗаполнено(Руководитель) Или Руководитель <> Неопределено Тогда
		ОбластьМакета.Параметры.Руководитель     = СокрЛП(Руководитель);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ГлавныйБухгалтер) Или ГлавныйБухгалтер <> Неопределено Тогда
		ОбластьМакета.Параметры.ГлавныйБухгалтер = СокрЛП(ГлавныйБухгалтер);
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

	
КонецФункции	

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	КонецЕсли;
	
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;	
	
	Если ИмяМакета = "З1" Тогда
		
		ТабДокумент = ПечатьДоверенности(ИмяМакета);
		
	ИначеЕсли ИмяМакета = "Д1" Тогда
		
		ТабДокумент = ПечатьДоверенностиД1();
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()));

КонецПроцедуры // Печать()

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("З1,Д1","Доверенность (З-1)","Доверенность (Д-1) (Приказ №562)");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

мОтображатьСтруктурныеПодразделения = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений();