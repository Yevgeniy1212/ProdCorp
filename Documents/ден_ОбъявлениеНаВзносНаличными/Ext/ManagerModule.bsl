#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// Заполнение

Процедура ЗаполнитьПоДокументуОснованию(Объект, ДокументОснование) Экспорт
	
	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(Объект, ДокументОснование);
	
	Объект.ДокументОснование = ДокументОснование;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
		Объект.СуммаДокумента = ДокументОснование.СуммаДокумента;
		Объект.СтруктурноеПодразделениеОтправитель = ДокументОснование.СтруктурноеПодразделениеПолучатель;
		Объект.СтруктурноеПодразделениеПолучатель = ДокументОснование.СтруктурноеПодразделениеОтправитель;
		Если ДокументОснование.ВидОперации <> Перечисления.ВидыОперацийПКО.ВозвратДенежныхСредствПодотчетником Тогда
			Если ДокументОснование.РасшифровкаПлатежа.Количество() = 0 Тогда
				Возврат;
			КонецЕсли;
			//Запрос = Новый Запрос;
			//Запрос.Текст = "ВЫБРАТЬ
			//               |	ден_СвязьСПодсистемойКазначейство.Документ,
			//               |	ден_СвязьСПодсистемойКазначейство.Проект,
			//               |	ден_СвязьСПодсистемойКазначейство.ДокументПланирования,
			//               |	ден_СвязьСПодсистемойКазначейство.КурсВзаиморасчетовПлан,
			//               |	ден_СвязьСПодсистемойКазначейство.СуммаПлан,
			//               |	ден_СвязьСПодсистемойКазначейство.Подразделение,
			//               |	ден_СвязьСПодсистемойКазначейство.ДенежныйЧек,
			//               |	ден_СвязьСПодсистемойКазначейство.ОбъявлениеНаВзносНаличными,
			//               |	ден_СвязьСПодсистемойКазначейство.Оплачено
			//               |ИЗ
			//               |	РегистрСведений.ден_СвязьСПодсистемойКазначейство КАК ден_СвязьСПодсистемойКазначейство
			//               |ГДЕ
			//               |	ден_СвязьСПодсистемойКазначейство.Документ = &Документ";
			//Запрос.УстановитьПараметр("Документ",ДокументОснование);
			//Выборка = Запрос.Выполнить().Выбрать();
			//Если Выборка.Следующий() Тогда
			//	Подразделение = Выборка.Подразделение;
			//	Проект = Выборка.Проект;
			//КонецЕсли;
			
			Объект.ЦФО = ДокументОснование.РасшифровкаПлатежа[0].Подразделение;
			//Объект.ЦФО = Подразделение;
		Иначе
			Если ДокументОснование.ВыдачаВПодотчет.Количество() = 0 Тогда
				Возврат;
			КонецЕсли;
			Объект.ЦФО = ДокументОснование.ВыдачаВПодотчет[0].Подразделение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры   

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты[0]);
	
	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка,
	|	Реквизиты.ВерсияДанных,
	|	Реквизиты.ПометкаУдаления,
	|	Реквизиты.Номер,
	|	Реквизиты.Дата,
	|	Реквизиты.Проведен,
	|	Реквизиты.Автор,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.ДатаОплаты,
	|	Реквизиты.ДокументОснование,
	|	Реквизиты.Касса,
	|	Реквизиты.Комментарий,
	|	Реквизиты.Оплачено,
	|	Реквизиты.Организация,
	|	Реквизиты.Ответственный,
	|	Реквизиты.РучнаяКорректировка,
	|	Реквизиты.СтатьяДвиженияДенежныхСредствОтправитель,
	|	Реквизиты.СтатьяДвиженияДенежныхСредствПолучатель,
	|	Реквизиты.СтруктурноеПодразделениеОтправитель,
	|	Реквизиты.СтруктурноеПодразделениеПолучатель,
	|	Реквизиты.СуммаДокумента,
	|	Реквизиты.СчетОрганизации,
	|	Реквизиты.ЦФО
	|ИЗ
	|	Документ.ден_ОбъявлениеНаВзносНаличными КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Объявление на взнос наличных денег
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПечатьОбъявление";
	КомандаПечати.Представление = НСтр("ru = 'Объявление на взнос наличных денег'");
	//КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ фин_ОбщегоНазначенияВызовСервераПовтИсп.ЕстьДополнительноеПравоПользователя("ПечатьНепроведенныхДокументов");
	КомандаПечати.Порядок = 50;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Печать объявления на взнос наличных денег
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьОбъявление");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьОбъявление",
			НСтр("ru = 'Объявление на взнос наличных денег'"),
			ПечатьОбъявления(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.ден_ОбъявлениеНаВзносНаличными.Объявление");
	КонецЕсли;

	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

Функция ПечатьОбъявления(МассивОбъектов, ОбъектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбъявлениеНаВзносНаличными.Ссылка,
	|	ОбъявлениеНаВзносНаличными.Номер,
	|	ОбъявлениеНаВзносНаличными.Дата,
	|	ОбъявлениеНаВзносНаличными.Организация,
	|	ОбъявлениеНаВзносНаличными.СчетОрганизации,
	|	ОбъявлениеНаВзносНаличными.СуммаДокумента КАК Сумма,
	|	ОбъявлениеНаВзносНаличными.Касса,
	|	ОбъявлениеНаВзносНаличными.ВалютаДокумента КАК Валюта,
	|	ОбъявлениеНаВзносНаличными.ДокументОснование КАК Содержание,
	|	ОтветственныеЛица.ФизическоеЛицо КАК Кассир,
	|	ФИОФизЛиц.Фамилия КАК ФамилияКассира,
	|	ФИОФизЛиц.Имя КАК ИмяКассира,
	|	ФИОФизЛиц.Отчество КАК ОтчествоКассира
	
	|ИЗ
	|	Документ.ден_ОбъявлениеНаВзносНаличными КАК ОбъявлениеНаВзносНаличными
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.фин_ОтветственныеЛица.СрезПоследних(&Дата, ) КАК ОтветственныеЛица
	|		ПО ОтветственныеЛица.СтруктурнаяЕдиница = ОбъявлениеНаВзносНаличными.Касса
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛиц
	|		По ФИОФизЛиц.ФизЛицо = ОтветственныеЛица.ФизическоеЛицо
	|ГДЕ
	|	ОбъявлениеНаВзносНаличными.Ссылка В (&МассивОбъектов)";		

	ДанныеДокументов = Запрос.Выполнить().Выбрать();
	
	Макет       					= УправлениеПечатью.МакетПечатнойФормы("Документ.ден_ОбъявлениеНаВзносНаличными.Объявление");
	ТабДокумент 					= Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОбъявлениеНаВзносНаличными_Объявление";
	
	ОбластьШапки = Макет.ПолучитьОбласть("Шапка");
	
	ТекстРНН_БИН = "";
	глСписокПрефиксовУзлов = Неопределено;
	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		РасчетныйСчет		  = ДанныеДокументов.СчетОрганизации;
		СведенияОбОрганизации = фин_ОбщегоНазначенияСервер.СведенияОЮрФизЛице(ДанныеДокументов.Организация, ДанныеДокументов.Дата, ,);
		
		ОбластьШапки.Параметры.Заполнить(ДанныеДокументов);	         
		ОбластьШапки.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеДокументов.Номер);
		ОбластьШапки.Параметры.Дата  = Формат(ДанныеДокументов.Дата,"ДФ=dd.MM.yyyy");
		ОбластьШапки.Параметры.Сумма = Формат(ДанныеДокументов.Сумма, "ЧДЦ=2; ЧРД=-");
		ОбластьШапки.Параметры.СуммаПрописью  = ЧислоПрописью(ДанныеДокументов.Сумма)+ ДанныеДокументов.Валюта;
		ОбластьШапки.Параметры.ФИОКассира	  = ПолучитьФамилиюИмяОтчество(ДанныеДокументов.ФамилияКассира, ДанныеДокументов.ИмяКассира, ДанныеДокументов.ОтчествоКассира);
		
		ОбластьШапки.Параметры.НазваниеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		ОбластьШапки.Параметры.НазваниеПолучателя  = СведенияОбОрганизации.ПолноеНаименование;
		//ОбластьШапки.Параметры.РНН_БИНОрганизации  = ОбщегоНазначенияБК.ПолучитьРегистрационныйНомерОрганизацииКонтрагентаВПечатнуюФорму(СведенияОбОрганизации, ДанныеДокументов.Дата, Ложь, ТекстРНН_БИН);
		//ОбластьШапки.Параметры.РНН_БИНПолучателя   = ОбластьШапки.Параметры.РНН_БИНОрганизации;
		//ОбластьШапки.Параметры.ТекстРНН_БИН		   = ТекстРНН_БИН;
		ОбластьШапки.Параметры.КОдОрганизации 	   = СведенияОбОрганизации.Кбе;
		ОбластьШапки.Параметры.КБеПолучателя  	   = СведенияОбОрганизации.Кбе;
		
		Если ЗначениеЗаполнено(ДанныеДокументов.СчетОрганизации) Тогда
			Если ТипЗнч(ДанныеДокументов.СчетОрганизации)= Тип("СправочникСсылка.БанковскиеСчета") Тогда
				СчетОрганизацииЗначРекв = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ДанныеДокументов.СчетОрганизации, "Банк, НомерСчета");
				ОбластьШапки.Параметры.БанкПолучателя = СчетОрганизацииЗначРекв.Банк;
				ОбластьШапки.Параметры.СчетЗачисления = СчетОрганизацииЗначРекв.НомерСчета;
			КонецЕсли;
		КонецЕсли;	

		ТабДокумент.Вывести(ОбластьШапки);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции

// Функция формирует фамилию и инициалы
//
// Параметры
//  Фамилия  - фамилия физ. лица.
//  Имя      - имя физ. лица.
//  Отчество - отчество физ. лица.
//
// Возвращаемое значение 
//  Фамилия, имя, отчество одной строкой.
//
Функция ПолучитьФамилиюИмяОтчество(Фамилия = " ", Имя = " ", Отчество = " ") Экспорт

	Возврат ?(НЕ ПустаяСтрока(Фамилия), Фамилия + ?(НЕ ПустаяСтрока(Имя)," " + Лев(Имя,1) + "." + 
			?(НЕ ПустаяСтрока(Отчество) , 
			Лев(Отчество,1)+".", ""), ""), "");

КонецФункции // ПолучитьФамилиюИмяОтчество()


#КонецЕсли
