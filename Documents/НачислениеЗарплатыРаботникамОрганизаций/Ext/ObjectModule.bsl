////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем мПоддержкаРаботыСоСтруктурнымиПодразделениями;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Процедура устанавливает даты периода начисления зарплаты
//
Процедура ОпределитьДатыПериодаНачисления() Экспорт

	Если ПериодНачисления = Перечисления.ПериодНачисленияЗарплаты.ТекущийМесяц Тогда
		ПериодНачисленияДатаНачала = НачалоМесяца(ПериодРегистрации);
		ПериодНачисленияДатаОкончания = КонецМесяца(ПериодРегистрации);
	ИначеЕсли ПериодНачисления = Перечисления.ПериодНачисленияЗарплаты.ПерваяПоловинаТекущегоМесяца Тогда
		ПериодНачисленияДатаНачала = НачалоМесяца(ПериодРегистрации);
		ПериодНачисленияДатаОкончания = КонецДня(ПериодНачисленияДатаНачала + (Цел(День(КонецМесяца(ПериодРегистрации)) / 2) - 1) * 86400);   
	КонецЕсли;
	
КонецПроцедуры // ОпределитьДатыПериодаНачисления()

// Закрытие строк - ввод значения ДатаОкончания для тех строк у которых не нулевое 
// значение Размер и удаление тех, у кого ВидРасчета - неопределено или ДатаНачала > даты закрытия
// Параметры:
//  ТЗ - таблица значений
//  НезакрытыеСтроки - массив незакрытых строк таблицы значений ТЗ
//  ДатаОкончания - дата, которую нужно проставить в качестве "закрывающей"
//
// Возвращаемое зеначение:
//  нет
//
Процедура ЗакрытьСтроки(ТЗ, НезакрытыеСтроки, ДатаОкончания)
	Для Каждого Строка Из НезакрытыеСтроки Цикл
		Если Строка.ВидРасчета = Неопределено ИЛИ Строка.ДатаНачала > ДатаОкончания Тогда
			ТЗ.Удалить(Строка);
		ИначеЕсли Строка.ДатаОкончания = Дата('00010101') или Строка.ДатаОкончания > ДатаОкончания Тогда
			Строка.ДатаОкончания = ДатаОкончания;
		КонецЕсли;
	КонецЦикла;
	НезакрытыеСтроки.Очистить();
КонецПроцедуры // ЗакрытьСтроки

// Найти строку в массиве строк по переданному виду расчета или по признаку "Основное"
// Найденная строка и ее индекс возвращаются через переданные параметры Строка и ИндексСтроки
// Параметры:
//  НезакрытыеСтроки - массив строк таблицы значений
//	ПоискОсновного - признак поиска основного начисления
//  ВидРасчета - вид расчета ссылка
//  Строка - в этот параметр будет возвращена строка, начальное значение - НеОпределено
//  ИндексСтроки - в этот параметр будет возвращен индекс строки, начальное значение - НеОпределено
//
// Возвращаемое зеначение:
//  нет
//
Процедура НайтиСредиНезакрытых(НезакрытыеСтроки, ПоискОсновного, ВидРасчета, Строка, ИндексСтроки)
	Для Индекс  = 0 По НезакрытыеСтроки.ВГраница() Цикл
		Если (ПоискОсновного И НезакрытыеСтроки[Индекс].Основное) 
			ИЛИ (НЕ ПоискОсновного И НезакрытыеСтроки[Индекс].ВидРасчета = ВидРасчета) Тогда
			ИндексСтроки = Индекс;
			Строка = НезакрытыеСтроки[Индекс];
		    Прервать;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры  // НайтиСредиНезакрытых

// Переформировывает строки расчетов "от обратного", чтобы по одному работнику была только одна строка расчета
// "от обратного" в документе.
// 
Процедура СвернутьСтрокиРасчетаОтОбратного(ТЗНачисления,
										   СписокСтрокРасчетаОтОбратного, 
										   КоличествоДополнительныхНачислений,
										   КоличествоОсновныхРасчетовОтОбратного)

	Если КоличествоОсновныхРасчетовОтОбратного <> 0 И КоличествоДополнительныхНачислений <> 0 Тогда
		Строка = СписокСтрокРасчетаОтОбратного[0].Значение;
		Сообщить("" + Строка.Сотрудник + ": недопустимо при наличии основного начисления со способом расчета ""от обратного"" указывать для сотрудника плановые расчеты из дополнительных начислений.", СтатусСообщения.Важное);
	КонецЕсли;
			
	Если СписокСтрокРасчетаОтОбратного.Количество() <= 1 Тогда
		Возврат;
	КонецЕсли;

	// Удалим из списка строки начислений доплат (не за отработанное время), чтобы их случайно не затронуть,
	// проконтролировав, чтобы не было двух расчетов с одинаковыми категориями расчета
	СписокКатегорийРасчета = Новый СписокЗначений;
	
	Н = СписокСтрокРасчетаОтОбратного.Количество()-1;
	Пока Н >= 0 Цикл
		Строка = СписокСтрокРасчетаОтОбратного[Н].Значение;
		
		Если Не Строка.Основное Тогда
			ЭлементСпискаКатегорий = СписокКатегорийРасчета.НайтиПоЗначению(Строка.КатегорияРасчета);
			Если ЭлементСпискаКатегорий = Неопределено Тогда
				// запоминаем категорию
				СписокКатегорийРасчета.Добавить(Строка.КатегорияРасчета, Строка.ВидРасчетаНаименование);
			Иначе
				// повторяется категория расчета - предупредим
				Сообщить("" + Строка.Сотрудник + ": вид расчета """ + Строка.ВидРасчетаНаименование + """ имеет ту же категорию расчета, что и """ + ЭлементСпискаКатегорий.Представление + """, необходимо назначить разные категории!", СтатусСообщения.Важное);
			КонецЕсли;
		
			СписокСтрокРасчетаОтОбратного.Удалить(Н);
		КонецЕсли;
		Н = Н - 1;
	КонецЦикла;

	// Для начисления за отработанное время свернем несколько строк, в одну объединив даты
	Если СписокСтрокРасчетаОтОбратного.Количество() > 1 Тогда
	    ДатаНачалаРасчетаОтОбратного 			= '99991231';
	    ДатаОкончанияРасчетаОтОбратного 		= '00010101';
	    ТекущийРазмер							= 0;
		
	    Для Н = 0 По СписокСтрокРасчетаОтОбратного.Количество() -1 Цикл
	    	Строка = СписокСтрокРасчетаОтОбратного[Н].Значение;
			ДатаНачалаРасчетаОтОбратного	= Мин(ДатаНачалаРасчетаОтОбратного, Строка.ДатаНачала);
			ДатаОкончанияРасчетаОтОбратного = Макс(ДатаОкончанияРасчетаОтОбратного, Строка.ДатаОкончания);
		    	
			Если ТекущийРазмер <> 0 И Строка.Показатель1 <> ТекущийРазмер Тогда
				// т.к. список содержит записи строк таблиц в обратном хронологическом порядке, то
				// ТекущийРазмер представляет собой более поздний, а Строка.Показатель1 - более ранний
				Сообщить("" + Строка.Сотрудник + ": недопустимо изменять размер на руки для расчета ""от обратного"" в течение месяца (с " + Строка(Строка.Показатель1) + " на " + Строка(ТекущийРазмер) + ")", СтатусСообщения.Важное);
			КонецЕсли;
			ТекущийРазмер = Строка.Показатель1;
	    КонецЦикла;
	    
		Строка 					= СписокСтрокРасчетаОтОбратного[0].Значение;
		Строка.ДатаНачала 		= НачалоДня(ДатаНачалаРасчетаОтОбратного);
		Строка.ДатаОкончания 	= КонецДня(ДатаОкончанияРасчетаОтОбратного);
		
		Для Н = 1 По СписокСтрокРасчетаОтОбратного.Количество() - 1 Цикл
			// остальные строки начислений "от обратного" удалим
			Строка = СписокСтрокРасчетаОтОбратного[Н].Значение;
			ТЗНачисления.Удалить(Строка);
		КонецЦикла;
	КонецЕсли;
												  
КонецПроцедуры // СвернутьСтрокиРасчетаОтОбратного()

// Возвращает Истина, если расчет размера для указанного способа расчета 
// зависят от размера основного начисления, в противном случае - ЛОЖЬ
//
Функция НачислениеЗависитОтРазмераОсновногоНачисления(СтрокаНачисления)

	Результат = Ложь;
	
	Если СтрокаНачисления.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ДоплатаЗаНочныеЧасы 
		ИЛИ СтрокаНачисления.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПроцентомПоЧасовойТарифнойСтавке Тогда
		Результат = Истина;
	ИначеЕсли ЗначениеЗаполнено(СтрокаНачисления.ВидВремениПоТабелю) Тогда
		Результат = Истина;
	КонецЕсли;

	Возврат Результат;
	
КонецФункции // НачислениеЗависитОтРазмераОсновногоНачисления()

// Функция предназначена для получения нормы дней по результату запроса при расчете:
//
// Параметры:
//	
//
// Возвращаемое значение:
//	Число - размер нормы времени в днях
//
Функция НормаВремениЗаМесяцВнутр(НормаВремениПоГрафику, НормаВремениПоТабелю, ВремяПочасовыхОтклонений)

	Если НормаВремениПоТабелю = NULL Тогда
		Возврат НормаВремениПоГрафику;    	
	Иначе
		Если НормаВремениПоТабелю = ВремяПочасовыхОтклонений Тогда
			Возврат НормаВремениПоГрафику;
		Иначе
			Возврат НормаВремениПоТабелю;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции // НормаВремениЗаМесяцВнутр()

// Рассчитывает размер зависимого начисления 
//
Процедура ЗаполнитьСтрокуЗависимогоНачисления(СтрокаЗависимогоНачисления, СпособРасчетаОсновногоНачисления, РазмерОсновногоНачисления)

	Если СпособРасчетаОсновногоНачисления = Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням
		ИЛИ СпособРасчетаОсновногоНачисления = Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам Тогда
			
		НормаВремени = НормаВремениЗаМесяцВнутр(СтрокаЗависимогоНачисления.НормаЧасовЗаМесяц, 
												СтрокаЗависимогоНачисления.НормаЧасовПоТабелюЗаМесяц, 
												СтрокаЗависимогоНачисления.ЧасовПоТабелюЗаМесяцОтклонение);
		
		Если НормаВремени = NULL Тогда
			ЧасовойТариф = 0;
		Иначе
			ЧасовойТариф = ?(НормаВремени > 0, РазмерОсновногоНачисления / НормаВремени, 0);
		КонецЕсли;
			
	ИначеЕсли СпособРасчетаОсновногоНачисления = Перечисления.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке тогда
			
		ЧасовойТариф = ПроцедурыУправленияПерсоналом.ПолучитьЧасовуюТарифнуюСтавкуНаОсновеДневнойСтавки(РазмерОсновногоНачисления, 
																						СтрокаЗависимогоНачисления.ДлительностьРабочейНедели, 
																						СтрокаЗависимогоНачисления.ВидГрафика);
			
	Иначе// ЧасовойТариф	
			
		ЧасовойТариф = РазмерОсновногоНачисления;
			
	КонецЕсли; 

	// Ночные, введенные в табеле
	Если СтрокаЗависимогоНачисления.ВидВремениПоТабелю = Справочники.КлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы Тогда
        		
		КоэффициентОплаты = СтрокаЗависимогоНачисления.Показатель3 - 1;
		СтрокаЗависимогоНачисления.Показатель1 = КоэффициентОплаты * ЧасовойТариф;
		СтрокаЗависимогоНачисления.Показатель3 = 0;

	// Сверхурочные, введенные в табеле
	ИначеЕсли СтрокаЗависимогоНачисления.ВидВремениПоТабелю = Справочники.КлассификаторИспользованияРабочегоВремени.Сверхурочные Тогда
		
		КоэффициентОплаты = СтрокаЗависимогоНачисления.Показатель3;
		Если НЕ СтрокаЗависимогоНачисления.ВидРасчета.ЗачетОтработанногоВремени Тогда
			КоэффициентОплаты = КоэффициентОплаты - 1;
		КонецЕсли;
		СтрокаЗависимогоНачисления.Показатель1 = ЧасовойТариф * КоэффициентОплаты;
		СтрокаЗависимогоНачисления.Показатель3 = 0;

	// Праздничные и выходные, введенные в табеле
	ИначеЕсли СтрокаЗависимогоНачисления.ВидВремениПоТабелю = Справочники.КлассификаторИспользованияРабочегоВремени.Праздники
		  ИЛИ СтрокаЗависимогоНачисления.ВидВремениПоТабелю = Справочники.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни Тогда
		
		КоэффициентОплаты = СтрокаЗависимогоНачисления.Показатель3;
		Если НЕ СтрокаЗависимогоНачисления.ВидРасчета.ЗачетОтработанногоВремени Тогда
			КоэффициентОплаты = КоэффициентОплаты - 1;
		КонецЕсли;
		СтрокаЗависимогоНачисления.Показатель1 = ЧасовойТариф * КоэффициентОплаты;
		СтрокаЗависимогоНачисления.Показатель3 = 0;
	
	// ДоплатаЗаНочныеЧасы, ПроцентомПоЧасовойТарифнойСтавке
	ИначеЕсли СтрокаЗависимогоНачисления.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ДоплатаЗаНочныеЧасы 
		ИЛИ СтрокаЗависимогоНачисления.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПроцентомПоЧасовойТарифнойСтавке Тогда
		
		СтрокаЗависимогоНачисления.Показатель1 = СтрокаЗависимогоНачисления.Показатель1 / 100 * ЧасовойТариф ;
			
	КонецЕсли; 

КонецПроцедуры // ЗаполнитьСтрокуЗависимогоНачисления()

// Для строк начислеий, зависимых от размера основного начисления (напр, доплата за ночные)
// проверяет соответствие дат и размеров зависимых и основного начисления
// Таблица периодов и массив должны быть упорядочены в хронологическом порядке.
//
Процедура РассчитатьРазмерЗависимыхНачислений(ТЗНачисления, ТаблицаПериодов, МассивСтрокЗависимыхНачислений)

	Н = 0;
	Пока Н <= МассивСтрокЗависимыхНачислений.Количество() - 1 Цикл
		
		СтрокаЗависимогоНачисления = МассивСтрокЗависимыхНачислений[Н];
		Н = Н + 1;
		
		// определим действующие в периоде основные начисления
		Для Каждого ПериодОсновногоНачисления Из ТаблицаПериодов Цикл

			Если ПериодОсновногоНачисления.ДатаНачала <= СтрокаЗависимогоНачисления.ДатаНачала
					И СтрокаЗависимогоНачисления.ДатаОкончания <= ПериодОсновногоНачисления.ДатаОкончания Тогда

				// полностью лежит внутри периода действия основного начисления
				ЗаполнитьСтрокуЗависимогоНачисления(СтрокаЗависимогоНачисления,
													ПериодОсновногоНачисления.СпособРасчетаОсновногоНачисления,
													ПериодОсновногоНачисления.РазмерОсновногоНачисления);
				Прервать; // больше эту строку обрабатывать незачем
				
			ИначеЕсли ПериодОсновногоНачисления.ДатаНачала <= СтрокаЗависимогоНачисления.ДатаНачала
						И СтрокаЗависимогоНачисления.ДатаНачала <= ПериодОсновногоНачисления.ДатаОкончания
						И СтрокаЗависимогоНачисления.ДатаОкончания > ПериодОсновногоНачисления.ДатаОкончания Тогда
				
				// начинается в период действия основного начисления, заканчивается позже
				// создадим новую строку для невошедшего кусочка
				НоваяСтрока = ТЗНачисления.Вставить(ТЗНачисления.Индекс(СтрокаЗависимогоНачисления) + 1);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗависимогоНачисления);
				
				// у "старой" строки поставим дату окончания основного начисления
				СтрокаЗависимогоНачисления.ДатаОкончания = ПериодОсновногоНачисления.ДатаОкончания;
				ЗаполнитьСтрокуЗависимогоНачисления(СтрокаЗависимогоНачисления,
													ПериодОсновногоНачисления.СпособРасчетаОсновногоНачисления,
													ПериодОсновногоНачисления.РазмерОсновногоНачисления);
				
				// у "новой" строки поставим дату начала днем, следующим за датой окончания текущего осн. начисления
				НоваяСтрока.ДатаНачала = ПериодОсновногоНачисления.ДатаОкончания + 86400;
				
				// на дальнейших шагах цикла будем работать теперь с новой строкой
				СтрокаЗависимогоНачисления = НоваяСтрока;
			
			ИначеЕсли СтрокаЗависимогоНачисления.ДатаНачала < ПериодОсновногоНачисления.ДатаНачала
						И СтрокаЗависимогоНачисления.ДатаОкончания >= ПериодОсновногоНачисления.ДатаНачала
						И СтрокаЗависимогоНачисления.ДатаОкончания <= ПериодОсновногоНачисления.ДатаОкончания Тогда
				
				// начинает раньше текущего основного начисления, заканчивается в период текущего основного начисления
				// установим период начала доплаты по дате начала текущего основного начисления,
				// поскольку за предшествующий начала период не можем определим размер (не отчего)
				СтрокаЗависимогоНачисления.ДатаНачала = ПериодОсновногоНачисления.ДатаНачала;
				ЗаполнитьСтрокуЗависимогоНачисления(СтрокаЗависимогоНачисления,
													ПериодОсновногоНачисления.СпособРасчетаОсновногоНачисления,
													ПериодОсновногоНачисления.РазмерОсновногоНачисления);
				Прервать; // больше эту строку обрабатывать незачем
			
			КонецЕсли;

		КонецЦикла;
	
	КонецЦикла; 	

КонецПроцедуры // РассчитатьРазмерЗависимыхНачислений()

// Выполняет формирование таблицы значений для загрузки ее в табличную часть Начисления
// Параметры:
// 	выборка результатат запроса
// Возвращаемое значение:
//  таблица значений
//
Функция СформироватьТаблицуНачислений(Начисления, ОкончаниеПериодаЗаполнения)
	
	ТЗНачисления = Новый ТаблицаЗначений();
	ТЗНачисления.Колонки.Добавить("Сотрудник");
	ТЗНачисления.Колонки.Добавить("ФизЛицо");
	ТЗНачисления.Колонки.Добавить("ДокументОснование");
	ТЗНачисления.Колонки.Добавить("ВидРасчета");
	ТЗНачисления.Колонки.Добавить("ВидРасчетаНаименование");
	ТЗНачисления.Колонки.Добавить("КатегорияРасчета");
	ТЗНачисления.Колонки.Добавить("Основное");// Признак основного начисления
	ТЗНачисления.Колонки.Добавить("Показатель1");
	ТЗНачисления.Колонки.Добавить("Показатель2");
	ТЗНачисления.Колонки.Добавить("Показатель3");
	ТЗНачисления.Колонки.Добавить("Показатель4");
	ТЗНачисления.Колонки.Добавить("Показатель5");
	ТЗНачисления.Колонки.Добавить("Показатель6");
	ТЗНачисления.Колонки.Добавить("ДатаНачала", ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	ТЗНачисления.Колонки.Добавить("ДатаОкончания", ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	ТЗНачисления.Колонки.Добавить("ПодразделениеОрганизации");
	
	// для заполнения графика и вида учета времени
	ТЗНачисления.Колонки.Добавить("ГрафикРаботы");
	ТЗНачисления.Колонки.Добавить("СуммированныйУчетРабочегоВремени");
	ТЗНачисления.Колонки.Добавить("СпособРасчета");

	// для расчета зависимых начислений
	ТЗНачисления.Колонки.Добавить("НормаЧасовЗаМесяц");
	ТЗНачисления.Колонки.Добавить("НормаЧасовПоТабелюЗаМесяц");
	ТЗНачисления.Колонки.Добавить("ЧасовПоТабелюЗаМесяцОтклонение");
	ТЗНачисления.Колонки.Добавить("ДлительностьРабочейНедели");
	ТЗНачисления.Колонки.Добавить("ВидГрафика");
	ТЗНачисления.Колонки.Добавить("СтрокаПослеСменыСтажа"); // ссылка на строку из ТЗНачисления, созданную в результате смены стажа
	ТЗНачисления.Колонки.Добавить("ВидВремениПоТабелю"); // признак того, что строка начислений сгенерирована по данным из табеля

    КонецМесяца = КонецДня(ОкончаниеПериодаЗаполнения);
	
	// Массив незакрытых строк таблицы значений, т.е. тех, которым не проставлена дата окончания
	НезакрытыеСтроки = Новый Массив;
	// Текущие значения полей выборки для отслеживания изменения работника и даты назначения и графика 
    ТекущийСотрудник = Справочники.СотрудникиОрганизаций.ПустаяСсылка();
    ТекущийДокументОснование = Документы.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка();
	ТекущаяДатаНазначения = Дата('00010101');
	СтрокиНачисленийТекущегоНазначения = Новый Массив;
	
	Пока Начисления.Следующий() Цикл
		
		Если Начисления.Сотрудник <> ТекущийСотрудник 
		 ИЛИ Начисления.ДокументОснование <> ТекущийДокументОснование Тогда
			
			// закрываем незакрытые строки начислений предыдущего работника концом месяца
			ЗакрытьСтроки(ТЗНачисления, НезакрытыеСтроки, КонецМесяца);
			
			// меняется текущий работник и дата его движения
			ТекущийСотрудник = Начисления.Сотрудник;
			ТекущийДокументОснование = Начисления.ДокументОснование;
			ТекущаяДатаНазначения = Начисления.ПериодРаботники;
			СтрокиНачисленийТекущегоНазначения.Очистить();
			
		ИначеЕсли Начисления.Подходит И Начисления.ПериодРаботники <> ТекущаяДатаНазначения Тогда
		
			// закрываем все строки предыдущего назначения датой предшествующей новому назначению
			ЗакрытьСтроки(ТЗНачисления, СтрокиНачисленийТекущегоНазначения, Начисления.ПериодРаботники - 1);
			НезакрытыеСтроки.Очистить();

			// меняется текущая дата движения работника
			ТекущаяДатаНазначения = Начисления.ПериодРаботники;
		
		КонецЕсли;	
			
		Если НЕ Начисления.Подходит ИЛИ Начисления.УжеПроведен Тогда
			// пропускаем такие записи: они уже введены другими документами или соответствуют окончанию назначения работника
			// поэтому закрываем все строки предыдущего периода предшествующей датой движению
			Если Начисления.ПериодРаботники <> ТекущаяДатаНазначения Тогда
				ЗакрытьСтроки(ТЗНачисления, СтрокиНачисленийТекущегоНазначения, Начисления.ПериодРаботники - 1);
				НезакрытыеСтроки.Очистить();			
			КонецЕсли;
			
			// меняется текущая дата движения работника
			ТекущаяДатаНазначения = Начисления.ПериодРаботники;
			
			Продолжить;
		КонецЕсли;
		
		Если Начисления.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
			ЕстьОшибки = Ложь;
			Для Сч = 1 По 6 Цикл
				Если Начисления["НеУказанРазмерТарифныхСтавок" + Сч] И Начисления.ПериодНачисления >= ТекущаяДатаНазначения Тогда
					Сообщить("Не указан размер тарифной ставки для "+Начисления.Должность + ", " + Начисления["ТарифныйРазряд" + Сч] + " (" + Начисления.СотрудникНаименование + ")", СтатусСообщения.Важное);
					ЕстьОшибки = Истина;
				ИначеЕсли (Начисления["КурсВалюты" + Сч] = NULL ИЛИ Начисления["КурсВалюты" + Сч] = 0) Тогда
					Сообщить("Для расчетного периода не задан курс валюты " + Начисления["Валюта" + Сч] + "!", СтатусСообщения.Важное);
					ЕстьОшибки = Истина;
				КонецЕсли;
			КонецЦикла;
			
			Если ЕстьОшибки Тогда
				ТЗНачисления.Очистить();
				Возврат ТЗНачисления;
			КонецЕсли;
		КонецЕсли; 
			
		РазмерНачисления = Начисления.Показатель1;	
		
		// Найдем такой же вид расчета среди незакрытых строк с целью завершения его действия
		Строка = НеОпределено;
		ИндексСтроки = НеОпределено;
		НайтиСредиНезакрытых(НезакрытыеСтроки, Начисления.ОсновноеНачисление, Начисления.ВидРасчета, Строка, ИндексСтроки);
		Если Строка <> НеОпределено Тогда
			// нашли
			Если Строка.ДатаНачала = Начисления.Период Тогда
				Если Начисления.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда
					НезакрытыеСтроки.Удалить(ИндексСтроки);
					ИндексСтроки = 0;
					Для каждого СтрокаМассива Из СтрокиНачисленийТекущегоНазначения Цикл
					    Если СтрокаМассива = Строка Тогда
							СтрокиНачисленийТекущегоНазначения.Удалить(ИндексСтроки);
							Прервать;
						Иначе
							ИндексСтроки = ИндексСтроки + 1;
						КонецЕсли;
					КонецЦикла;
					Если Строка.СтрокаПослеСменыСтажа <> Неопределено Тогда // удалим также строку следующего стажа, если такая есть
						ИндексСтроки = ОбщегоНазначения.ВернутьИндексВМассиве(НезакрытыеСтроки, Строка.СтрокаПослеСменыСтажа);
						Если ИндексСтроки <> -1 Тогда
							НезакрытыеСтроки.Удалить(ИндексСтроки);
						КонецЕсли;
						ИндексСтроки = ОбщегоНазначения.ВернутьИндексВМассиве(СтрокиНачисленийТекущегоНазначения, Строка.СтрокаПослеСменыСтажа);
						Если ИндексСтроки <> -1 Тогда
							СтрокиНачисленийТекущегоНазначения.Удалить(ИндексСтроки);
							ТЗНачисления.Удалить(Строка.СтрокаПослеСменыСтажа);
						КонецЕсли;
					КонецЕсли;
					ТЗНачисления.Удалить(Строка);
				Иначе
					// если дата та же - новую строку в формируемую таблицу значений не вводит,
					// а меняем данные и оставляем строку "незакрытой"
					Строка.ВидРасчета = Начисления.ВидРасчета;// вид расчета необходимо переопределять для основного начисления
					Строка.ВидРасчетаНаименование = Начисления.ВидРасчетаНаименование;
					Строка.КатегорияРасчета = Начисления.КатегорияРасчета;
					Если ПроведениеРасчетов.ЭтоРасчетОтСтажа(Начисления.СпособРасчета) Тогда
						Если Начисления.ДеньСменыКоэффициентаСтажа <> Null 
								И День(Начисления.Период) >= Начисления.ДеньСменыКоэффициентаСтажа Тогда
							// уже надо применять новый коэффициент стажа
							КоэффициентСтажа = Начисления.СледКоэффициентСтажа;
						Иначе
							КоэффициентСтажа = Начисления.КоэффициентСтажа;
						КонецЕсли;
						Если ПроведениеРасчетов.ЭтоРасчетОтСтажаПоТарифу(Начисления.СпособРасчета) Тогда
							// корректируем тарифную ставку по проценту от стажа
				            Если КоэффициентСтажа = Null Тогда
				                КоэффициентСтажа = 0;
							    Сообщить("Для " + Начисления.СотрудникНаименование + ", вид расчета """ + Начисления.ВидРасчетаНаименование+ """ с " + Формат(Начисления.Период, "ДФ='дд.ММ.гггг'") + " не подобран процент начисления в зависимости от стажа. Процент принят равным нулю.", СтатусСообщения.Важное);
				            КонецЕсли;
							Строка.Показатель1 = РазмерНачисления * КоэффициентСтажа / 100;
						ИначеЕсли ПроведениеРасчетов.ЭтоРасчетОтСтажа(Начисления.СпособРасчета) Тогда
				            Если КоэффициентСтажа = Null Тогда
				                КоэффициентСтажа = 0;
							    Сообщить("Для " + Начисления.СотрудникНаименование + ", вид расчета """ + Начисления.ВидРасчетаНаименование+ """ с " + Формат(Начисления.Период, "ДФ='дд.ММ.гггг'") + " не подобран процент начисления в зависимости от стажа. Процент принят равным нулю.", СтатусСообщения.Важное);
				            КонецЕсли;
							Строка.Показатель1 = КоэффициентСтажа;
						КонецЕсли;
						// скорректируем также строку после смены стажа, если в текущем месяца такая была
						Если Строка.СтрокаПослеСменыСтажа <> Неопределено И ТЗНачисления.Индекс(Строка.СтрокаПослеСменыСтажа) <> -1 Тогда
							Если Начисления.СледКоэффициентСтажа = NULL Тогда
				                КоэффициентСтажа = 0;
							    Сообщить("Для " + Начисления.СотрудникНаименование + ", вид расчета """ + Начисления.ВидРасчетаНаименование+ """ с " + Формат(Строка.СтрокаПослеСменыСтажа.ДатаНачала, "ДФ='дд.ММ.гггг'") + " не подобран процент начисления в зависимости от стажа. Процент принят равным нулю.", СтатусСообщения.Важное);
							Иначе
								КоэффициентСтажа = Начисления.СледКоэффициентСтажа;
							КонецЕсли;  								
							Если ПроведениеРасчетов.ЭтоРасчетОтСтажаПоТарифу(Начисления.СпособРасчета) Тогда
								Строка.СтрокаПослеСменыСтажа.Показатель1 = РазмерНачисления * КоэффициентСтажа / 100;
							Иначе
								Строка.СтрокаПослеСменыСтажа.Показатель1 = КоэффициентСтажа;
							КонецЕсли;
							// прочие реквизиты 
							Строка.СтрокаПослеСменыСтажа.Показатель2 				= Начисления.Показатель2;
							Строка.СтрокаПослеСменыСтажа.Показатель3 				= Начисления.Показатель3;
							Строка.СтрокаПослеСменыСтажа.Показатель4 				= Начисления.Показатель4;
							Строка.СтрокаПослеСменыСтажа.Показатель5 				= Начисления.Показатель5;
							Строка.СтрокаПослеСменыСтажа.Показатель6 				= Начисления.Показатель6;
							Строка.СтрокаПослеСменыСтажа.ПодразделениеОрганизации 	= Начисления.ПодразделениеОрганизации;
							Строка.СтрокаПослеСменыСтажа.СпособРасчета 				= Начисления.СпособРасчета;
							Строка.СтрокаПослеСменыСтажа.ГрафикРаботы 				= Начисления.ГрафикРаботы;
							Строка.СтрокаПослеСменыСтажа.СуммированныйУчетРабочегоВремени = Начисления.СуммированныйУчетРабочегоВремени;
							Строка.СтрокаПослеСменыСтажа.НормаЧасовЗаМесяц 			= Начисления.НормаЧасовЗаМесяц;
							Строка.СтрокаПослеСменыСтажа.НормаЧасовПоТабелюЗаМесяц 	= Начисления.НормаЧасовПоТабелюЗаМесяц;
							Строка.СтрокаПослеСменыСтажа.ЧасовПоТабелюЗаМесяцОтклонение = Начисления.ЧасовПоТабелюЗаМесяцОтклонение;
							Строка.СтрокаПослеСменыСтажа.ДлительностьРабочейНедели 	= Начисления.ДлительностьРабочейНедели;
							Строка.СтрокаПослеСменыСтажа.ВидГрафика 				= Начисления.ВидГрафика;
						КонецЕсли;
					Иначе
						Строка.Показатель1 = РазмерНачисления;	
					КонецЕсли;
					Строка.Показатель2 						= Начисления.Показатель2;
					Строка.Показатель3 						= Начисления.Показатель3;
					Строка.Показатель4 						= Начисления.Показатель4;
					Строка.Показатель5 						= Начисления.Показатель5;
					Строка.Показатель6 						= Начисления.Показатель6;
					Строка.ПодразделениеОрганизации 		= Начисления.ПодразделениеОрганизации;
					Строка.СпособРасчета 					= Начисления.СпособРасчета;
					Строка.ГрафикРаботы 					= Начисления.ГрафикРаботы;
					Строка.СуммированныйУчетРабочегоВремени = Начисления.СуммированныйУчетРабочегоВремени;
					Строка.НормаЧасовЗаМесяц 				= Начисления.НормаЧасовЗаМесяц;
					Строка.НормаЧасовПоТабелюЗаМесяц 		= Начисления.НормаЧасовПоТабелюЗаМесяц;
					Строка.ЧасовПоТабелюЗаМесяцОтклонение 	= Начисления.ЧасовПоТабелюЗаМесяцОтклонение;
					Строка.ДлительностьРабочейНедели 		= Начисления.ДлительностьРабочейНедели;
					Строка.ВидГрафика 						= Начисления.ВидГрафика;
					Строка.ВидВремениПоТабелю				= Начисления.ВидВремениПоТабелю;
				КонецЕсли;
				Продолжить;
			Иначе
				// иначе - "закрываем" строку и удаляем из массива незакрытых
				Если Строка.СтрокаПослеСменыСтажа <> Неопределено Тогда // удалим также строку после смены стажа, если будет нужно
				                                                        // она будет создана далее в цикле с новыми параметрами
				    
				    Если НачалоДня(Строка.ДатаОкончания) >= НачалоДня(Начисления.Период - 1) Тогда
				    	// "закрывать" действительно надо саму строку Строка, а связанную с ней строку следующего стажа вообще удалить
						Строка.ДатаОкончания = Начисления.Период-1;
						НезакрытыеСтроки.Удалить(ИндексСтроки);
				    	
						ИндексСтроки = ОбщегоНазначения.ВернутьИндексВМассиве(НезакрытыеСтроки, Строка.СтрокаПослеСменыСтажа);
						Если ИндексСтроки <> -1 Тогда
							НезакрытыеСтроки.Удалить(ИндексСтроки);
						КонецЕсли;
						ИндексСтроки = ОбщегоНазначения.ВернутьИндексВМассиве(СтрокиНачисленийТекущегоНазначения, Строка.СтрокаПослеСменыСтажа);
						Если ИндексСтроки <> -1 Тогда
							СтрокиНачисленийТекущегоНазначения.Удалить(ИндексСтроки);
							ТЗНачисления.Удалить(Строка.СтрокаПослеСменыСтажа);
						КонецЕсли;
					Иначе
						// "закрывать" надо не саму строку Строка, а связанную с ней строку будущего стажа
						НезакрытыеСтроки.Удалить(ИндексСтроки); // саму Строка убираем из незакрытых
						
						Строка.СтрокаПослеСменыСтажа.ДатаОкончания = Начисления.Период - 1; // "закрываем строку следующего стажа"
						ИндексСтроки = ОбщегоНазначения.ВернутьИндексВМассиве(НезакрытыеСтроки, Строка.СтрокаПослеСменыСтажа);
						Если ИндексСтроки <> -1 Тогда
							НезакрытыеСтроки.Удалить(ИндексСтроки);
						КонецЕсли;
					КонецЕсли;
				Иначе
					Строка.ДатаОкончания = Начисления.Период-1;
					НезакрытыеСтроки.Удалить(ИндексСтроки);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
        Если Начисления.Действие = Перечисления.ВидыДействияСНачислением.Прекратить
            ИЛИ (ЗначениеЗаполнено(ВидРасчета) 
                 И Начисления.ПериодРаботники > Начисления.ПериодНачисления) Тогда
            Продолжить;
		КонецЕсли;
		
		// Добавим новую строку начислений
		Если Начисления.ВидРасчета <> Неопределено Тогда
			НоваяСтрока 						= ТЗНачисления.Добавить();
			НоваяСтрока.Сотрудник 				= Начисления.Сотрудник;
			НоваяСтрока.ФизЛицо					= Начисления.ФизЛицо;
			НоваяСтрока.ДокументОснование		= Начисления.ДокументОснование;
			НоваяСтрока.ВидРасчета 				= Начисления.ВидРасчета;
			НоваяСтрока.ВидРасчетаНаименование 	= Начисления.ВидРасчетаНаименование;
			НоваяСтрока.КатегорияРасчета 		= Начисления.КатегорияРасчета;
			Если ПроведениеРасчетов.ЭтоРасчетОтСтажа(Начисления.СпособРасчета) Тогда
				Если Начисления.ДеньСменыКоэффициентаСтажа <> Null 
						И День(Начисления.Период) >= Начисления.ДеньСменыКоэффициентаСтажа Тогда
					// уже надо применять новый коэффициент стажа
					КоэффициентСтажа = Начисления.СледКоэффициентСтажа;
				Иначе
					КоэффициентСтажа = Начисления.КоэффициентСтажа;
				КонецЕсли;
				Если ПроведениеРасчетов.ЭтоРасчетОтСтажаПоТарифу(Начисления.СпособРасчета) Тогда
					// корректируем тарифную ставку по проценту от стажа
		            Если КоэффициентСтажа = Null Тогда
		                КоэффициентСтажа = 0;
					    Сообщить("Для " + Начисления.СотрудникНаименование + ", вид расчета """ + Начисления.ВидРасчетаНаименование+ """ с " + Формат(Начисления.Период, "ДФ='дд.ММ.гггг'") + " не подобран процент начисления в зависимости от стажа. Процент принят равным нулю.", СтатусСообщения.Важное);
		            КонецЕсли;
					НоваяСтрока.Показатель1 = РазмерНачисления * КоэффициентСтажа / 100;
				ИначеЕсли ПроведениеРасчетов.ЭтоРасчетОтСтажа(Начисления.СпособРасчета) Тогда
		            Если КоэффициентСтажа = Null Тогда
		                КоэффициентСтажа = 0;
					    Сообщить("Для " + Начисления.СотрудникНаименование + ", вид расчета """ + Начисления.ВидРасчетаНаименование+ """ с " + Формат(Начисления.Период, "ДФ='дд.ММ.гггг'") + " не подобран процент начисления в зависимости от стажа. Процент принят равным нулю.", СтатусСообщения.Важное);
		            КонецЕсли;
					НоваяСтрока.Показатель1 = КоэффициентСтажа;
				КонецЕсли;
			Иначе
				НоваяСтрока.Показатель1 = РазмерНачисления;	
			КонецЕсли;
			НоваяСтрока.Показатель2 						= Начисления.Показатель2;
			НоваяСтрока.Показатель3 						= Начисления.Показатель3;
			НоваяСтрока.Показатель4 						= Начисления.Показатель4;
			НоваяСтрока.Показатель5 						= Начисления.Показатель5;
			НоваяСтрока.Показатель6 						= Начисления.Показатель6;
			НоваяСтрока.Основное 							= Начисления.ОсновноеНачисление;
			НоваяСтрока.ДатаНачала 							= Начисления.Период;
			НоваяСтрока.ПодразделениеОрганизации 			= Начисления.ПодразделениеОрганизации;
			НоваяСтрока.СпособРасчета 						= Начисления.СпособРасчета;
			НоваяСтрока.ГрафикРаботы 						= Начисления.ГрафикРаботы;
			НоваяСтрока.СуммированныйУчетРабочегоВремени 	= Начисления.СуммированныйУчетРабочегоВремени;
			НоваяСтрока.НормаЧасовЗаМесяц 					= Начисления.НормаЧасовЗаМесяц;
			НоваяСтрока.НормаЧасовПоТабелюЗаМесяц 			= Начисления.НормаЧасовПоТабелюЗаМесяц;
			НоваяСтрока.ЧасовПоТабелюЗаМесяцОтклонение 		= Начисления.ЧасовПоТабелюЗаМесяцОтклонение;
			НоваяСтрока.ДлительностьРабочейНедели 			= Начисления.ДлительностьРабочейНедели;
			НоваяСтрока.ВидГрафика 							= Начисления.ВидГрафика;
			НоваяСтрока.ВидВремениПоТабелю					= Начисления.ВидВремениПоТабелю;
			НезакрытыеСтроки.Добавить(НоваяСтрока);
			СтрокиНачисленийТекущегоНазначения.Добавить(НоваяСтрока);

			Если ПроведениеРасчетов.ЭтоРасчетОтСтажа(Начисления.СпособРасчета) 
				 И Начисления.ДеньСменыКоэффициентаСтажа <> Null
				 И Начисления.СледКоэффициентСтажа <> Начисления.КоэффициентСтажа
				 И Начисления.ДеньСменыКоэффициентаСтажа > День(Начисления.Период)
				 И Начисления.ДеньСменыКоэффициентаСтажа <= День(КонецМесяца) Тогда
					// установим дату окончания предыдущего расчета от стажа
					НоваяСтрока.ДатаОкончания = КонецДня(Дата(Год(Начисления.Период), Месяц(Начисления.Период), Начисления.ДеньСменыКоэффициентаСтажа - 1));
					// ... и введем еще один
					ДопНоваяСтрока 							= ТЗНачисления.Добавить();
					НоваяСтрока.СтрокаПослеСменыСтажа 		= ДопНоваяСтрока; // сохраним ссылку на следущую строку (после смены стажа)
					ДопНоваяСтрока.Сотрудник				= Начисления.Сотрудник;
					ДопНоваяСтрока.ФизЛицо 					= Начисления.ФизЛицо;
					ДопНоваяСтрока.ДокументОснование		= Начисления.ДокументОснование;
					ДопНоваяСтрока.ВидРасчета 				= Начисления.ВидРасчета;
					ДопНоваяСтрока.ВидРасчетаНаименование 	= Начисления.ВидРасчетаНаименование;
					ДопНоваяСтрока.КатегорияРасчета 		= Начисления.КатегорияРасчета;
					Если ПроведениеРасчетов.ЭтоРасчетОтСтажаПоТарифу(Начисления.СпособРасчета) Тогда
						// корректируем тарифную ставку по проценту от стажа
						ДопНоваяСтрока.Показатель1 = РазмерНачисления * ?(ЗначениеЗаполнено(Начисления.СледКоэффициентСтажа), Начисления.СледКоэффициентСтажа, 0) / 100;
					Иначе
						ДопНоваяСтрока.Показатель1 = ?(ЗначениеЗаполнено(Начисления.СледКоэффициентСтажа), Начисления.СледКоэффициентСтажа, 0);
					КонецЕсли;
					ДопНоваяСтрока.Показатель2 						= Начисления.Показатель2;
					ДопНоваяСтрока.Показатель3 						= Начисления.Показатель3;
					ДопНоваяСтрока.Показатель4 						= Начисления.Показатель4;
					ДопНоваяСтрока.Показатель5 						= Начисления.Показатель5;
					ДопНоваяСтрока.Показатель6 						= Начисления.Показатель6;
					ДопНоваяСтрока.Основное 						= Начисления.ОсновноеНачисление;
					ДопНоваяСтрока.ДатаНачала 						= Дата(Год(Начисления.Период), Месяц(Начисления.Период), Начисления.ДеньСменыКоэффициентаСтажа);
					ДопНоваяСтрока.ПодразделениеОрганизации 		= Начисления.ПодразделениеОрганизации;
					ДопНоваяСтрока.СпособРасчета 					= Начисления.СпособРасчета;
					ДопНоваяСтрока.ГрафикРаботы 					= Начисления.ГрафикРаботы;
					ДопНоваяСтрока.СуммированныйУчетРабочегоВремени = Начисления.СуммированныйУчетРабочегоВремени;
					ДопНоваяСтрока.НормаЧасовЗаМесяц 				= Начисления.НормаЧасовЗаМесяц;
					ДопНоваяСтрока.НормаЧасовПоТабелюЗаМесяц 		= Начисления.НормаЧасовПоТабелюЗаМесяц;
					ДопНоваяСтрока.ЧасовПоТабелюЗаМесяцОтклонение 	= Начисления.ЧасовПоТабелюЗаМесяцОтклонение;
					ДопНоваяСтрока.ДлительностьРабочейНедели 		= Начисления.ДлительностьРабочейНедели;
					ДопНоваяСтрока.ВидГрафика 						= Начисления.ВидГрафика;
					ДопНоваяСтрока.ВидВремениПоТабелю				= Начисления.ВидВремениПоТабелю;
					
					НезакрытыеСтроки.Добавить(ДопНоваяСтрока);
					СтрокиНачисленийТекущегоНазначения.Добавить(ДопНоваяСтрока);
	        КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// закрываем незакрытые строки по последнему работнику концом месяца
	ЗакрытьСтроки(ТЗНачисления, НезакрытыеСтроки, КонецМесяца);
	
    СписокНачисленныеВидыРасчетаФиксСуммой 	= Новый СписокЗначений;
    СписокСтрокРасчетаОтОбратного			= Новый СписокЗначений;
	ТекущийСотрудник = Неопределено;
    ТекущийДокументОснование = Неопределено;
    
    МассивСтрокЗависимыхНачислений			= Новый Массив;
    
    // вспомогательная таблица для расчета зависимых начислений
    ТаблицаПериодов	= Новый ТаблицаЗначений;
    ТаблицаПериодов.Колонки.Добавить("ДатаНачала");
    ТаблицаПериодов.Колонки.Добавить("ДатаОкончания");
    ТаблицаПериодов.Колонки.Добавить("СпособРасчетаОсновногоНачисления");
    ТаблицаПериодов.Колонки.Добавить("РазмерОсновногоНачисления");

    ТипОсновныеНачисления 		= Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций");
    ТипДополнительныеНачисления = Тип("ПланВидовРасчетаСсылка.ДополнительныеНачисленияОрганизаций");
    КоличествоДополнительныхНачислений 		= 0;
    КоличествоОсновныхРасчетовОтОбратного 	= 0;
    
	// Дополнительно обработаем таблицу начислений:
	// 1. Удалим строки, в которых поле Размер нулевое. Такие могут образоваться при прекращении начислений в течение месяца.
	// 2. Удалим двойные строки расчета фиксированной суммой, которые могут появиться при кадровых перемещениях в течение месяца.
	//	  А также двойные строки с расчетом "от обратного" для начислений, не являющихся основным (ЗачетОтработанногоВремени = ЛОЖЬ)
	// 3. Разделившиеся строки расчета "от обратного"  свернем в одну, т.к. расчет идет в целом по физлицу за месяц.
	// 4. Проконтролируем, чтобы если есть основной расчет "от обратного" не было доп. начислений, т.к. они рассчитываются после 
	// 		основных и в момент расчета "от обратного" их еще не будет в регистрах.
	// 5. Учтем возможность смены размера основного начисления в середине месяца и разделим начисления с видами, зависимыми от 
	//		размера основного начисления на соответствующее число строк
	//
	КоличествоСтрок = ТЗНачисления.Количество();
	Для Н = 0 По КоличествоСтрок - 1 Цикл	
		Строка = ТЗНачисления[КоличествоСтрок - 1 - Н];
		РазмерНачисления = ?(Строка.Показатель1 = NULL, 0, Окр(Строка.Показатель1, 3));
		
		Если (ТекущийСотрудник <> Строка.Сотрудник) 
		 Или (ТекущийДокументОснование <> Строка.ДокументОснование) Тогда
		 
			 Если ПериодРегистрации < '20100101' Тогда
			 
				Если СписокСтрокРасчетаОтОбратного.Количество() > 0 Тогда
					СвернутьСтрокиРасчетаОтОбратного(ТЗНачисления,
													 СписокСтрокРасчетаОтОбратного, 
													 КоличествоДополнительныхНачислений,
													 КоличествоОсновныхРасчетовОтОбратного);
													 
				КонецЕсли;
			КонецЕсли;
			
			
			Если МассивСтрокЗависимыхНачислений.Количество() > 0 Тогда
				РассчитатьРазмерЗависимыхНачислений(ТЗНачисления, ТаблицаПериодов, МассивСтрокЗависимыхНачислений);
			КонецЕсли;
			
			// Сменился работник, очищаем переменные состояния
			СписокНачисленныеВидыРасчетаФиксСуммой.Очистить();
			СписокСтрокРасчетаОтОбратного.Очистить();
			
			ТаблицаПериодов.Очистить();
			МассивСтрокЗависимыхНачислений.Очистить();

		    КоличествоДополнительныхНачислений = 0;
		    КоличествоОсновныхРасчетовОтОбратного = 0;

			ТекущийСотрудник			= Строка.Сотрудник;
			ТекущийДокументОснование	= Строка.ДокументОснование;
			
		КонецЕсли;
		
		Если РазмерНачисления = 0 
		   И Строка.СпособРасчета <> Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок
		   И Строка.СпособРасчета <> Перечисления.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула 		// среди управленческих способов расчета могут быть те, у которых Показатель1 = 0, т.к. определяется в процессе расчета
		   И НЕ ЗначениеЗаполнено(Строка.ВидВремениПоТабелю) Тогда 	// сгенерированные по табелю строки первоначально имеют Показатель1 = 0
		
			ТЗНачисления.Удалить(Строка);
			
		ИначеЕсли (ПроведениеРасчетов.ЭтоРасчетФиксированнойСуммой(Строка.СпособРасчета)
							И НЕ ЗначениеЗаполнено(Строка.ВидВремениПоТабелю))
			  		ИЛИ (ПериодРегистрации < '20100101' И Строка.ВидРасчета.ОтОбратного 
			  				И НЕ Строка.Основное) 
					ИЛИ (Строка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула 
						И ПроведениеРасчетов.ПроизвольноеНачислениеНеЗависитОтВремениИБазы(Строка.ВидРасчета)) Тогда
			
			Если СписокНачисленныеВидыРасчетаФиксСуммой.НайтиПоЗначению(Строка.ВидРасчета) <> Неопределено Тогда
				// такой вид уже начисляли предыдущими строками документа, поэтому сейчас его уже не берем
				ТЗНачисления.Удалить(Строка);
			Иначе
				СписокНачисленныеВидыРасчетаФиксСуммой.Добавить(Строка.ВидРасчета);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТЗНачисления.Индекс(Строка) <> -1 Тогда // строка существует в таблице (не удалили на предыдущих шагах)
			
			Если Строка.ВидРасчета.ОтОбратного Тогда
				СписокСтрокРасчетаОтОбратного.Добавить(Строка);
				
				Если ТипЗнч(Строка.ВидРасчета) = ТипОсновныеНачисления Тогда
					КоличествоОсновныхРасчетовОтОбратного = КоличествоОсновныхРасчетовОтОбратного + 1;
				КонецЕсли;
			КонецЕсли;
			
			Если ТипЗнч(Строка.ВидРасчета) = ТипДополнительныеНачисления Тогда
				КоличествоДополнительныхНачислений = КоличествоДополнительныхНачислений + 1;
			КонецЕсли;

			// списки строк основных и зависимых начислений
			Если Строка.Основное Тогда
				// т.к. цикл идет с конца к началу, то вставляем с начала, чтобы получить отсортированный в хронологическом порядке
				СтрокаПериода = ТаблицаПериодов.Вставить(0);
				СтрокаПериода.ДатаНачала 						= Строка.ДатаНачала;
				СтрокаПериода.ДатаОкончания 					= Строка.ДатаОкончания;
				СтрокаПериода.СпособРасчетаОсновногоНачисления 	= Строка.СпособРасчета;
				СтрокаПериода.РазмерОсновногоНачисления			= Строка.Показатель1;
			КонецЕсли;
			
			Если НачислениеЗависитОтРазмераОсновногоНачисления(Строка) Тогда
				МассивСтрокЗависимыхНачислений.Вставить(0, Строка);
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;

	Если ПериодРегистрации < '20100101' Тогда
		// Свернем строки расчета "от обратного" для последнего человека из цикла
		Если СписокСтрокРасчетаОтОбратного.Количество() > 0 Тогда
			СвернутьСтрокиРасчетаОтОбратного(ТЗНачисления,
			СписокСтрокРасчетаОтОбратного, 
			КоличествоДополнительныхНачислений,
			КоличествоОсновныхРасчетовОтОбратного);
		КонецЕсли;
	КонецЕсли;

	// рассчитываем размеры основных начислений
	Если МассивСтрокЗависимыхНачислений.Количество() > 0 Тогда
		РассчитатьРазмерЗависимыхНачислений(ТЗНачисления, ТаблицаПериодов, МассивСтрокЗависимыхНачислений);
	КонецЕсли;
	
	Возврат ТЗНачисления;
	
КонецФункции

// Добавляет строку сторно начислений в движения и табличную часть документа
//
Процедура ДобавитьСтрокуСторно(Движения, ТабличнаяЧасть, Строка, МассивИндексыСтрокНачисления = Неопределено)

	// новая запись движений
	Движение = Движения.Добавить();

	// Свойства
	Движение.ПериодРегистрации          	= Строка.ПериодРегистрацииСторно;
	Движение.ПериодДействияНачало       	= Строка.ПериодДействияНачалоСторно;
	Движение.ПериодДействияКонец  		  	= Строка.ПериодДействияКонецСторно;
	Движение.БазовыйПериодНачало        	= Строка.БазовыйПериодНачало;
	Движение.БазовыйПериодКонец    		 	= Строка.БазовыйПериодКонец;
	Движение.ВидРасчета				    	= Строка.ВидРасчета;
	Движение.Сторно							= Истина;

	// Измерения
	Движение.Сотрудник                    	= Строка.Сотрудник;
	Движение.ФизЛицо						= Строка.ФизЛицо;
	Движение.Организация					= Строка.Организация;

	// Ресурсы

	// Реквизиты
	Движение.ГрафикРаботы					= Строка.ГрафикРаботы;
	Движение.Показатель1                	= Строка.Показатель1;
	Движение.Показатель2                	= Строка.Показатель2;
	Движение.Показатель3                	= Строка.Показатель3;
	Движение.Показатель4                	= Строка.Показатель4;
	Движение.Показатель5                	= Строка.Показатель5;
	Движение.Показатель6                	= Строка.Показатель6;
	Движение.ВидУчетаВремени  	        	= Строка.ВидУчетаВремени;
	Движение.ПодразделениеОрганизации		= Строка.ПодразделениеОрганизации;
	Движение.ПериодРасчетаСреднегоЗаработкаНачало		= Строка.ПериодРасчетаСреднегоЗаработкаНачало;
	Движение.ПериодРасчетаСреднегоЗаработкаОкончание	= Строка.ПериодРасчетаСреднегоЗаработкаОкончание;
	Движение.ДатаНачалаСобытия				= Строка.ДатаНачалаСобытия;
	Движение.ДатаНачалаСобытия				= Строка.ДатаНачалаСобытия;
	Движение.ОбособленноеПодразделение		= Строка.ОбособленноеПодразделение;
	Движение.ДополнительныеДанные			= Строка.ДополнительныеДанные;
	Движение.СторнируемыйДокумент			= Строка.Регистратор;
	Движение.Авторасчет						= Истина;

	// новая строка табличной части
	СтрокаТабличнойЧасти = ТабличнаяЧасть.Добавить();
	СтрокаТабличнойЧасти.Сотрудник                    	= Строка.Сотрудник;
	СтрокаТабличнойЧасти.ФизЛицо						= Строка.ФизЛицо;
	СтрокаТабличнойЧасти.ВидРасчета				    	= Строка.ВидРасчета;
	СтрокаТабличнойЧасти.ДатаНачала       				= Строка.ПериодДействияНачалоСторно;
	СтрокаТабличнойЧасти.ДатаОкончания    				= Строка.ПериодДействияКонецСторно;
	СтрокаТабличнойЧасти.Показатель1                	= Строка.Показатель1;
	СтрокаТабличнойЧасти.Показатель2                	= Строка.Показатель2;
	СтрокаТабличнойЧасти.Показатель3                	= Строка.Показатель3;
	СтрокаТабличнойЧасти.Показатель4                	= Строка.Показатель4;
	СтрокаТабличнойЧасти.Показатель5                	= Строка.Показатель5;
	СтрокаТабличнойЧасти.Показатель6                	= Строка.Показатель6;
	СтрокаТабличнойЧасти.ПодразделениеОрганизации		= Строка.ПодразделениеОрганизации;
	СтрокаТабличнойЧасти.Сторно							= Истина;
	СтрокаТабличнойЧасти.ПериодРасчетаСреднегоЗаработкаНачало		= Строка.ПериодРасчетаСреднегоЗаработкаНачало;
	СтрокаТабличнойЧасти.ПериодРасчетаСреднегоЗаработкаОкончание	= Строка.ПериодРасчетаСреднегоЗаработкаОкончание;
	СтрокаТабличнойЧасти.ДатаНачалаСобытия				= Строка.ДатаНачалаСобытия;
	СтрокаТабличнойЧасти.СпособОтраженияВБухучете		= Строка.СпособОтраженияВБухучете;
	СтрокаТабличнойЧасти.ДополнительныеДанные			= Строка.ДополнительныеДанные;
	СтрокаТабличнойЧасти.Авторасчет						= Истина;
	СтрокаТабличнойЧасти.СторнируемыйДокумент			= Строка.Регистратор;
	
	Если МассивИндексыСтрокНачисления <> Неопределено Тогда
		МассивИндексыСтрокНачисления.Добавить(СтрокаТабличнойЧасти.НомерСтроки - 1);
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуСторно()

Функция ТекстЗапросаНаличияСтавокОСМС(ВыборкаПоШапкеДокумента, Сотрудники, ТабличнаяЧасть = "Начисления")
	
		Возврат "/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Данные.Сотрудник,
		|	" + ?(ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, "&ПериодРегистрации", "Данные.ДатаНачала") + " КАК Период,
		|	ВЫБОР
		|		КОГДА Данные.Сотрудник.Физлицо = &ИндивидуальныйПредприниматель
		|			ТОГДА ВЫБОР КОГДА " + ?(ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, "&ПериодРегистрации", "Данные.ДатаНачала") + " < ДАТАВРЕМЯ(2020,1,1) ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента) ИНАЧЕ ""ИП"" КОНЕЦ 
		|		ИНАЧЕ ЕСТЬNULL(Данные.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя))
		|	КОНЕЦ КАК ВидДохода
		|ПОМЕСТИТЬ ВТ_ПериодыПоДокументу
		|ИЗ
		|	Документ.НачислениеЗарплатыРаботникамОрганизаций." + ТабличнаяЧасть + " КАК Данные
		|ГДЕ
		|	Данные.Ссылка = &ДокументСсылка
		|	" + ?(Сотрудники <> Неопределено, " И Сотрудник В (&парамСотрудники)", "") +"
		|ИНДЕКСИРОВАТЬ ПО
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 КАК Приоритет,
		|	НАЧАЛОПЕРИОДА(СведенияОСтавкахОСМС.Период, МЕСЯЦ) КАК Период,
		|	СведенияОСтавкахОСМС.ВидДохода КАК ВидДохода,
		|	СведенияОСтавкахОСМС.СтавкаВзносы КАК СтавкаВзносы,
		|	СведенияОСтавкахОСМС.СтавкаОтчисления КАК СтавкаОтчисления
		|ПОМЕСТИТЬ ВТ_СведенияОСтавкахОСМСУчетомПриоритетов
		|ИЗ
		|	РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
		|
		|ГДЕ
		|	СведенияОСтавкахОСМС.Налогоплательщик = &Организация
		|	И СведенияОСтавкахОСМС.Период <= КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2 КАК Приоритет,
		|	НАЧАЛОПЕРИОДА(СведенияОСтавкахОСМС.Период, МЕСЯЦ) КАК Период,
		|	СведенияОСтавкахОСМС.ВидДохода КАК ВидДохода,
		|	СведенияОСтавкахОСМС.СтавкаВзносы КАК СтавкаВзносы,
		|	СведенияОСтавкахОСМС.СтавкаОтчисления КАК СтавкаОтчисления
		|ИЗ
		|	РегистрСведений.СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
		|
		|ГДЕ
		|	СведенияОСтавкахОСМС.Налогоплательщик = &парамПустаяОрганизация
		|	И СведенияОСтавкахОСМС.Период <= КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОСтавкахОСМССрезПоследних.Период КАК Период,
		|	СведенияОСтавкахОСМССрезПоследних.ВидДохода КАК ВидДохода,
		|	СведенияОСтавкахОСМС.СтавкаВзносы КАК СтавкаВзносы,
		|	СведенияОСтавкахОСМС.СтавкаОтчисления КАК СтавкаОтчисления
		|ПОМЕСТИТЬ ВТ_СведенияОСтавкахОСМС
		|ИЗ
		|	(ВЫБРАТЬ
		|			СведенияОСтавкахОСМС.Период,
		|			СведенияОСтавкахОСМС.ВидДохода,
		|			МИНИМУМ(СведенияОСтавкахОСМС.Приоритет) КАК Приоритет
		|		ИЗ
		|			ВТ_СведенияОСтавкахОСМСУчетомПриоритетов КАК СведенияОСтавкахОСМС
		|
		|		СГРУППИРОВАТЬ ПО
		|			СведенияОСтавкахОСМС.Период,
		|			СведенияОСтавкахОСМС.ВидДохода) КАК СведенияОСтавкахОСМССрезПоследних
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОСтавкахОСМСУчетомПриоритетов КАК СведенияОСтавкахОСМС
		|		ПО СведенияОСтавкахОСМССрезПоследних.Период = СведенияОСтавкахОСМС.Период
		|			И СведенияОСтавкахОСМССрезПоследних.ВидДохода = СведенияОСтавкахОСМС.ВидДохода
		|			И СведенияОСтавкахОСМССрезПоследних.Приоритет = СведенияОСтавкахОСМС.Приоритет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_Периоды.Сотрудник,
		|	ВТ_Периоды.ВидДохода КАК ВидДохода,
		|	ВТ_Периоды.Период КАК Период,
		|	МАКСИМУМ(СведенияОСтавкахОСМС.Период) КАК ПериодМаксимум
		|ПОМЕСТИТЬ ВТ_МаксимумПериодыСтавокОСМС
		|ИЗ
		|	ВТ_ПериодыПоДокументу КАК ВТ_Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
		|		ПО ВТ_Периоды.Период >= СведенияОСтавкахОСМС.Период
		|			И ВТ_Периоды.ВидДохода = СведенияОСтавкахОСМС.ВидДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.Сотрудник,
		|	ВТ_Периоды.ВидДохода,
		|	ВТ_Периоды.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Периоды.Сотрудник,
		|	ВТ_Периоды.ВидДохода,
		|	ВТ_Периоды.Период,
		|	МАКСИМУМ(УчетнаяПолитикаПоНалоговомуУчету.Период)
		|ИЗ
		|	ВТ_ПериодыПоДокументу КАК ВТ_Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаПоНалоговомуУчету
		|		ПО ВТ_Периоды.Период >= УчетнаяПолитикаПоНалоговомуУчету.Период
		|			И ВТ_Периоды.ВидДохода = ""ИП""
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.Сотрудник,
		|	ВТ_Периоды.ВидДохода,
		|	ВТ_Периоды.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПериодМаксимум
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВТ_Максимум.Сотрудник КАК Сотрудник,
		|	ВТ_Максимум.ВидДохода КАК ВидДохода,
		|	ВТ_Максимум.Период КАК Период,
		|	МАКСИМУМ(ВЫБОР
		|		КОГДА НЕ СведенияОСтавкахОСМС.СтавкаВзносы ЕСТЬ NULL
		|			ТОГДА СведенияОСтавкахОСМС.СтавкаВзносы
		|		КОГДА НЕ УчетнаяПолитикаПоНалоговомуУчету.СтавкаВОСМСДляИП ЕСТЬ NULL
		|			ТОГДА УчетнаяПолитикаПоНалоговомуУчету.СтавкаВОСМСДляИП
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК СтавкаВзносы,
		|	МАКСИМУМ(ЕСТЬNULL(СведенияОСтавкахОСМС.СтавкаОтчисления, 0)) КАК СтавкаОтчисления
		|ПОМЕСТИТЬ ВТ_СтавкиОСМС
		|ИЗ
		|	ВТ_МаксимумПериодыСтавокОСМС КАК ВТ_Максимум
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОСтавкахОСМС КАК СведенияОСтавкахОСМС
		|		ПО ВТ_Максимум.ВидДохода = СведенияОСтавкахОСМС.ВидДохода
		|			И ВТ_Максимум.ПериодМаксимум = СведенияОСтавкахОСМС.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаПоНалоговомуУчету
		|		ПО ВТ_Максимум.Период = УчетнаяПолитикаПоНалоговомуУчету.Период
		|			И ВТ_Максимум.ВидДохода = ""ИП""
		|ГДЕ
		|	ВЫБОР 
		|      КОГДА &ПериодРегистрации >= ДАТАВРЕМЯ(2020, 1, 1) 
		|            ТОГДА 
		|				((ВЫБОР
		|					КОГДА НЕ СведенияОСтавкахОСМС.СтавкаВзносы ЕСТЬ NULL
		|						ТОГДА СведенияОСтавкахОСМС.СтавкаВзносы
		|					КОГДА НЕ УчетнаяПолитикаПоНалоговомуУчету.СтавкаВОСМСДляИП ЕСТЬ NULL
		|						ТОГДА УчетнаяПолитикаПоНалоговомуУчету.СтавкаВОСМСДляИП
		|					ИНАЧЕ 0
		|				КОНЕЦ) <> 0)
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		|	ИЛИ ВЫБОР 
		|      КОГДА &ПериодРегистрации >= ДАТАВРЕМЯ(2020, 1, 1) 
		|	 		ТОГДА ЕСТЬNULL(СведенияОСтавкахОСМС.СтавкаОтчисления, 0) <> 0
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Максимум.Сотрудник,
		|	ВТ_Максимум.ВидДохода,
		|	ВТ_Максимум.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет автоматическое заполнение документа по данным документа и переданным параметрам
// 
// Параметры: 
//  ПостроительЗапроса - построитель запроса, который используется для ограничения состава физлиц
//                       по которым выполняется заполнение документа
//
// Возвращаемое значение:
//  Логическое - удалось ли выполнить автоматическое заполнение документа
//
Функция Автозаполнение(ПостроительЗапроса = Неопределено) Экспорт

	Начисления.Очистить();
	ДополнительныеНачисления.Очистить();
		
	Возврат ВыполнитьАвтозаполнение(ПериодНачисленияДатаНачала, ПериодНачисленияДатаОкончания, ПостроительЗапроса);
	
КонецФункции // Автозаполнение()

// Заполняет документ на основании перерассчитываемого документа
//
Процедура ЗаполнитьПоПерерассчитываемомуДокументу(ИсходныйДокумент, Знач Сотрудники = Неопределено) Экспорт
	
	ПерерассчитываемыйДокумент = ИсходныйДокумент.Ссылка;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект,ИсходныйДокумент,,
	"Проведен, Номер, Дата, ПометкаУдаления, ПерерассчитываемыйДокумент, ПериодРегистрации, Комментарий, Ответственный, Автор"); // кроме указанных
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ПерерассчитываемыйДокумент", ПерерассчитываемыйДокумент);
	Запрос.УстановитьПараметр("Сотрудники", 				Сотрудники);
	Запрос.УстановитьПараметр("ПоВсемСотрудникам", 			Сотрудники = Неопределено);

	Если Сотрудники = "ПоДаннымПерерасчета" Тогда
		
		Исправления = ПроведениеРасчетов.ПолучитьДокументИсправление(ПерерассчитываемыйДокумент, "КритерийОтбора"); 
		Запрос.УстановитьПараметр("Исправления", Исправления);
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НачислениеЗарплатыРаботникамОрганизацийНачисления.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТСотрудникиИсправлений
		|ИЗ
		|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК НачислениеЗарплатыРаботникамОрганизацийНачисления
		|ГДЕ
		|	НачислениеЗарплатыРаботникамОрганизацийНачисления.Ссылка В(&Исправления)
		|	И НачислениеЗарплатыРаботникамОрганизацийНачисления.Сторно
		|	И НачислениеЗарплатыРаботникамОрганизацийНачисления.СторнируемыйДокумент = &ПерерассчитываемыйДокумент
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НачислениеЗарплатыРаботникамОрганизацийДополнительныеНачисления.Сотрудник
		|ИЗ
		|	Документ.НачислениеЗарплатыРаботникамОрганизаций.ДополнительныеНачисления КАК НачислениеЗарплатыРаботникамОрганизацийДополнительныеНачисления
		|ГДЕ
		|	НачислениеЗарплатыРаботникамОрганизацийДополнительныеНачисления.Ссылка В(&Исправления)
		|	И НачислениеЗарплатыРаботникамОрганизацийДополнительныеНачисления.Сторно
		|	И НачислениеЗарплатыРаботникамОрганизацийДополнительныеНачисления.СторнируемыйДокумент = &ПерерассчитываемыйДокумент
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник";
		Запрос.Выполнить();
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СотрудникиОрганизаций.Сотрудник
		|ПОМЕСТИТЬ ВТСотрудникиПерерасчета
		|ИЗ
		|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК СотрудникиОрганизаций
		|ГДЕ
		|	СотрудникиОрганизаций.Ссылка = &ПерерассчитываемыйДокумент
		|	И СотрудникиОрганизаций.Сотрудник В
		|			(ВЫБРАТЬ
		|				Перерасчет.Сотрудник
		|			ИЗ
		|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ПерерасчетОсновныхНачислений КАК Перерасчет
		|			ГДЕ
		|				Перерасчет.ОбъектПерерасчета = &ПерерассчитываемыйДокумент
		|		
		|			ОБЪЕДИНИТЬ ВСЕ
		|		
		|			ВЫБРАТЬ
		|				ЗаполнениеПлановыхНачислений.Сотрудник
		|			ИЗ
		|				РегистрСведений.ЗаполнениеПлановыхНачислений КАК ЗаполнениеПлановыхНачислений
		|			ГДЕ
		|				ЗаполнениеПлановыхНачислений.ОбъектЗаполнения = &ПерерассчитываемыйДокумент)
		|	И (НЕ СотрудникиОрганизаций.Сотрудник В
		|				(ВЫБРАТЬ
		|					Начисления.Сотрудник
		|				ИЗ
		|					ВТСотрудникиИсправлений КАК Начисления))
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СотрудникиОрганизаций.Сотрудник
		|ИЗ
		|	Документ.НачислениеЗарплатыРаботникамОрганизаций.ДополнительныеНачисления КАК СотрудникиОрганизаций
		|ГДЕ
		|	СотрудникиОрганизаций.Ссылка = &ПерерассчитываемыйДокумент
		|	И СотрудникиОрганизаций.Сотрудник В
		|			(ВЫБРАТЬ
		|				Перерасчет.Сотрудник
		|			ИЗ
		|				РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.ПерерасчетДополнительныхНачислений КАК Перерасчет
		|			ГДЕ
		|				Перерасчет.ОбъектПерерасчета = &ПерерассчитываемыйДокумент
		|		
		|			ОБЪЕДИНИТЬ ВСЕ
		|		
		|			ВЫБРАТЬ
		|				ЗаполнениеПлановыхНачислений.Сотрудник
		|			ИЗ
		|				РегистрСведений.ЗаполнениеПлановыхНачислений КАК ЗаполнениеПлановыхНачислений
		|			ГДЕ
		|				ЗаполнениеПлановыхНачислений.ОбъектЗаполнения = &ПерерассчитываемыйДокумент)
		|	И (НЕ СотрудникиОрганизаций.Сотрудник В
		|				(ВЫБРАТЬ
		|					Начисления.Сотрудник
		|				ИЗ
		|					ВТСотрудникиИсправлений КАК Начисления))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник";
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиОрганизаций.Сотрудник
		|ИЗ
		|	ВТСотрудникиПерерасчета КАК СотрудникиОрганизаций";
		Сотрудники = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
		Запрос.МенеджерВременныхТаблиц.Закрыть();
		Запрос.УстановитьПараметр("СотрудникиПерерасчета", Сотрудники);
		
	Иначе
		
		Запрос.УстановитьПараметр("СотрудникиПерерасчета", Сотрудники);
		
	КонецЕсли;
	
	// выполним запрос к Начисления
	Запрос.УстановитьПараметр("СотрудникиПерерасчета", Сотрудники);
	Запрос.УстановитьПараметр("ПериодРегистрации", 	   ПериодРегистрации);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Начисления.Сотрудник,
	|	Начисления.ФизЛицо,
	|	Начисления.ВидРасчета,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.Показатель1,
	|	Начисления.Показатель2,
	|	Начисления.Показатель3,
	|	Начисления.Показатель4,
	|	Начисления.Показатель5,
	|	Начисления.Показатель6,
	|	Начисления.ПодразделениеОрганизации,
	|	-Начисления.Результат - ЕСТЬNULL(СУММА(СторноНачисления.Результат), 0) КАК Результат,
	|	-Начисления.ОтработаноДней - ЕСТЬNULL(СУММА(СторноНачисления.ОтработаноДней), 0) КАК ОтработаноДней,
	|	-Начисления.ОтработаноЧасов - ЕСТЬNULL(СУММА(СторноНачисления.ОтработаноЧасов), 0) КАК ОтработаноЧасов,
	|	-Начисления.ОтработаноДнейПоПятидневке - ЕСТЬNULL(СУММА(СторноНачисления.ОтработаноДнейПоПятидневке), 0) КАК ОтработаноДнейПоПятидневке,
	|	-Начисления.НормаДней - ЕСТЬNULL(СУММА(СторноНачисления.НормаДней), 0) КАК НормаДней,
	|	-Начисления.НормаЧасов - ЕСТЬNULL(СУММА(СторноНачисления.НормаЧасов), 0) КАК НормаЧасов,
	|	-Начисления.НормаДнейПоПятидневке - ЕСТЬNULL(СУММА(СторноНачисления.НормаДнейПоПятидневке), 0) КАК НормаДнейПоПятидневке,
	|	Начисления.ПериодРасчетаСреднегоЗаработкаНачало,
	|	Начисления.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	Начисления.ДатаНачалаСобытия,
	|	Начисления.ДополнительныеДанные,
	|	ИСТИНА КАК Сторно,
	|	&ПерерассчитываемыйДокумент КАК СторнируемыйДокумент
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК СторноНачисления
	|		ПО Начисления.Сотрудник = СторноНачисления.Сотрудник
	|			И Начисления.ВидРасчета = СторноНачисления.ВидРасчета
	|			И (СторноНачисления.ПериодДействияНачало МЕЖДУ Начисления.ДатаНачала И Начисления.ДатаОкончания)
	|			И (СторноНачисления.ПериодДействияКонец МЕЖДУ Начисления.ДатаНачала И Начисления.ДатаОкончания)
	|			И (СторноНачисления.ПериодРегистрации > Начисления.Ссылка.ПериодРегистрации)
	|			И (СторноНачисления.ПериодРегистрации <= &ПериодРегистрации)
	|			И (СторноНачисления.СторнируемыйДокумент = Начисления.Ссылка)
	|ГДЕ
	|	Начисления.Ссылка = &ПерерассчитываемыйДокумент
	|	И (НЕ Начисления.Сторно)
	|	И (Начисления.Сотрудник В (&СотрудникиПерерасчета) ИЛИ &ПоВсемСотрудникам)
	|	И Начисления.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.Сотрудник,
	|	Начисления.ФизЛицо,
	|	Начисления.ВидРасчета,
	|	Начисления.Показатель1,
	|	Начисления.Показатель2,
	|	Начисления.Показатель3,
	|	Начисления.Показатель4,
	|	Начисления.Показатель5,
	|	Начисления.Показатель6,
	|	Начисления.ПодразделениеОрганизации,
	|	Начисления.ПериодРасчетаСреднегоЗаработкаНачало,
	|	Начисления.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	Начисления.ДополнительныеДанные,
	|	Начисления.ДатаНачалаСобытия,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.Результат,
	|	Начисления.НормаДней,
	|	Начисления.НормаЧасов,
	|	Начисления.НормаДнейПоПятидневке,
	|	Начисления.ОтработаноДней,
	|	Начисления.ОтработаноЧасов,
	|	Начисления.ОтработаноДнейПоПятидневке,
	|	Начисления.ВидРасчета.ЗачетОтработанногоВремени,
	|	Начисления.ВидРасчета.ЗачетНормыВремени,
	|	Начисления.ДополнительныеДанные
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		// сторно-строка
		ЗаполнитьЗначенияСвойств(Начисления.Добавить(), Выборка);
	КонецЦикла;
	
	// выполним запрос к ДополнительныеНачисления
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Начисления.НомерСтроки,
	|	Начисления.Сотрудник,
	|	Начисления.Физлицо,
	|	Начисления.ВидРасчета,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.Показатель1,
	|	Начисления.Показатель2,
	|	Начисления.Показатель3,
	|	Начисления.Показатель4,
	|	Начисления.Показатель5,
	|	Начисления.Показатель6,
	|	-Начисления.Результат КАК Результат,
	|	Начисления.ПодразделениеОрганизации,
	|	ИСТИНА КАК Сторно,
	|	Начисления.СпособОтраженияВБухучете,
	|	&ПерерассчитываемыйДокумент КАК СторнируемыйДокумент,
	|	Начисления.ДокументОснование,
	|	Начисления.ДополнительныеДанные
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций.ДополнительныеНачисления КАК Начисления
	|ГДЕ
	|	Начисления.Ссылка = &ПерерассчитываемыйДокумент
	|	И (НЕ Начисления.Сторно)
	|	И (Начисления.Сотрудник В (&СотрудникиПерерасчета)
	|			ИЛИ &ПоВсемСотрудникам)
	|	И Начисления.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сторно УБЫВ,
	|	Начисления.НомерСтроки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		// сторно-строка
		ЗаполнитьЗначенияСвойств(ДополнительныеНачисления.Добавить(), Выборка);
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеЗарплатыРаботникамОрганизаций.ПериодРегистрации,
	|	НачислениеЗарплатыРаботникамОрганизаций.ПериодНачисленияДатаНачала,
	|	НачислениеЗарплатыРаботникамОрганизаций.ПериодНачисленияДатаОкончания
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций КАК НачислениеЗарплатыРаботникамОрганизаций
	|ГДЕ
	|	НачислениеЗарплатыРаботникамОрганизаций.Ссылка = &ПерерассчитываемыйДокумент";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ПериодНачисления = Перечисления.ПериодНачисленияЗарплаты.ПрошлыйПериод;
	
	ВыполнитьАвтозаполнение(Выборка.ПериодНачисленияДатаНачала, Выборка.ПериодНачисленияДатаОкончания, Неопределено, ПерерассчитываемыйДокумент, Сотрудники);
	
КонецПроцедуры // ЗаполнитьПоПерерассчитываемомуДокументу()

// Процедура выполняет автозаполнение табличных частей только по переданным сотрудникам,
// остальные строки табличных частей документа остаются нетронутыми.
//
// Параметры: СписокСотрудников -  Список сотрудников организации по которым нужно сделать перезаполнение документа.
Процедура ВыполнитьПерезаполнениеПоВыбраннымСотрудникам(СписокСотрудников) Экспорт
	
	// сохраним табличные данные в таблицы значений
	ТаблицаНачисления = Начисления.Выгрузить();
	ТаблицаДополнительныеНачисления = ДополнительныеНачисления.Выгрузить();

	// Удалим из таблиц сотрудников которых нужно перезаполнить.
	
	// Удаляем из таблицы начисления
	ИндексСтроки = ТаблицаНачисления.Количество()-1;
	Пока ИндексСтроки >= 0 Цикл
		Если СписокСотрудников.НайтиПоЗначению(ТаблицаНачисления[ИндексСтроки].Сотрудник) <> Неопределено Тогда
			ТаблицаНачисления.Удалить(ИндексСтроки);
		КонецЕсли;
		ИндексСтроки = ИндексСтроки - 1;
	КонецЦикла;
	
	// Удаляем из таблицы дополнительные начисления
	ИндексСтроки = ТаблицаДополнительныеНачисления.Количество() - 1;
	Пока ИндексСтроки >=0 Цикл
		Если СписокСотрудников.НайтиПоЗначению(ТаблицаДополнительныеНачисления[ИндексСтроки].Сотрудник) <> Неопределено Тогда
			ТаблицаДополнительныеНачисления.Удалить(ИндексСтроки);
		КонецЕсли;
		ИндексСтроки = ИндексСтроки - 1;
	КонецЦикла;
	
	//Очищаем таблицы документа
	Начисления.Очистить();
	ДополнительныеНачисления.Очистить();
	
	// Выполняем автозаполенение и расчет
	ВыполнитьАвтоЗаполнение(ПериодНачисленияДатаНачала,ПериодНачисленияДатаОкончания,,,СписокСотрудников);
	Записать();
	Рассчитать();
	
	//Добавляем в документ сотрудников из временных таблиц значений
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаНачисления, Начисления);
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаДополнительныеНачисления, ДополнительныеНачисления);
	Проведен = Ложь;
	
	// удаляем запись о перезаполнении из регистра
	НаборЗаписей = РегистрыСведений.ЗаполнениеПлановыхНачислений.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ОбъектЗаполнения.Установить(Ссылка);
	НаборЗаписей.Записать();
	
КонецПроцедуры // ВыполнитьПерезаполнениеПоВыбраннымСотрудникам()

// Выполняет автоматическое заполнение документа по данным документа и переданным параметрам
// 
// Параметры: 
//  ПостроительЗапроса - построитель запроса, который используется для ограничения состава физлиц
//                       по которым выполняется заполнение документа
//
// Возвращаемое значение:
//  Логическое - удалось ли выполнить автоматическое заполнение документа
//
Функция ВыполнитьАвтозаполнение(НачалоПериодаЗаполнения, ОкончаниеПериодаЗаполнения, ПостроительЗапроса = Неопределено, ПерерассчитываемыйДокумент = Неопределено, СписокСотрудников = Неопределено) Экспорт

	// АВТОЗАПОЛНЕНИЕ ТЧ "Начисления" и "ДополнительныеНачисления"
	// 
	ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
	Запрос = Новый Запрос;
	
	ОсновнойТекстЗапроса = "";
	
 	ПустоеПодразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
 	ПустойОтветственный = Справочники.Пользователи.ПустаяСсылка();
	
 	//ТаблицаДвиженийРаботниковТекст
	//Описание:
	//	Выбирает список работников, отвечающих условиям отбора, числящихся на начало месяца и их движения за месяц.
	
	Если ПерерассчитываемыйДокумент = Неопределено Тогда
		Если ПодразделениеОрганизации = ПустоеПодразделение И Ответственный = ПустойОтветственный Тогда
			ПоВсемПодразделениямОрганизации = Истина;
			УсловиеНаПодразделение = "ПодразделениеОрганизации.Владелец = &парамОрганизация";
		ИначеЕсли ПодразделениеОрганизации = ПустоеПодразделение Тогда
			Если глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация].РасчетЗарплатыОрганизацииПоОтветственным Тогда
				ПоВсемПодразделениямОрганизации = Ложь;
				УсловиеНаПодразделение = "ПодразделениеОрганизации В ИЕРАРХИИ (ВЫБРАТЬ РАЗЛИЧНЫЕ Расчетчики.ПодразделениеОрганизации ИЗ РегистрСведений.РасчетчикиЗарплатыОрганизаций.СрезПоследних(&парамНачало) Расчетчики ГДЕ Расчетчики.Пользователь = &парамПользователь)";
			Иначе
				ПоВсемПодразделениямОрганизации = Истина;
				УсловиеНаПодразделение = "ПодразделениеОрганизации.Владелец = &парамОрганизация";
			КонецЕсли;
		Иначе
			ПоВсемПодразделениямОрганизации = Ложь;
			УсловиеНаПодразделение = "ПодразделениеОрганизации В ИЕРАРХИИ (&парамПодразделение)";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВидРасчета) Тогда
			УсловиеНаВидРасчета = "СписокНачислений.ВидРасчета = &парамВидРасчета";
		Иначе
			УсловиеНаВидРасчета = "";
		КонецЕсли;
	Иначе
		// если есть перерассчитываемый документ, то фильтрация идет по нему
		ПоВсемПодразделениямОрганизации = Истина;
		УсловиеНаПодразделение = "ПодразделениеОрганизации.Владелец = &парамОрганизация";
		УсловиеНаВидРасчета = "";
	КонецЕсли;
	
	СпособыРасчетаОтСтажа = Новый Массив;
	СпособыРасчетаОтСтажа.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоМесячнойТарифнойСтавкеПоЧасам);
	СпособыРасчетаОтСтажа.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоМесячнойТарифнойСтавкеПоДням);
	СпособыРасчетаОтСтажа.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоДневнойТарифнойСтавке);
	СпособыРасчетаОтСтажа.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПоЧасовойТарифнойСтавке);
	СпособыРасчетаОтСтажа.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ОтСтажаПроцентом);
	Запрос.УстановитьПараметр("СпособыРасчетаОтСтажа", СпособыРасчетаОтСтажа);
	
	Если ПостроительЗапроса = Неопределено Тогда
		
		// Установим параметры запроса
		Запрос.УстановитьПараметр("парамНачало" , НачалоПериодаЗаполнения);
		Запрос.УстановитьПараметр("парамКонец" , КонецДня(ОкончаниеПериодаЗаполнения));
		Запрос.УстановитьПараметр("парамПериодРегистрации" , ПериодРегистрации);
		Запрос.УстановитьПараметр("парамОрганизация" , Организация);
		Запрос.УстановитьПараметр("парамГоловнаяОрганизация" , ГоловнаяОрганизация);
		Запрос.УстановитьПараметр("парамПользователь" , Ответственный);
		Запрос.УстановитьПараметр("парамПодразделение" , ПодразделениеОрганизации);
		Запрос.УстановитьПараметр("парамРегистратор" , Ссылка);
		Запрос.УстановитьПараметр("парамДатаВалютногоУчета" , НачалоМесяца(НачалоПериодаЗаполнения));
		Запрос.УстановитьПараметр("парамПустаяВалюта" , Справочники.Валюты.ПустаяСсылка());
		Запрос.УстановитьПараметр("парамВалютаРегламентУчета" , Константы.ВалютаРегламентированногоУчета.Получить());
		Запрос.УстановитьПараметр("парамМассивСпособовРасчетовБезВалюты" , ПроведениеРасчетов.ПолучитьСписокСпособовРасчетаНеТребующихУказанияВалюты());
		Запрос.УстановитьПараметр("парамПоЧасам", Перечисления.ВидыУчетаВремени.ПоЧасам);
		Запрос.УстановитьПараметр("парамСменный", Перечисления.ВидыРабочихГрафиков.Сменный);
		Запрос.УстановитьПараметр("ВидыДнейРабочийДень", Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий);
		Запрос.УстановитьПараметр("Ежемесячно", Перечисления.ХарактерВыплатыПоДоговору.Ежемесячно);
		Запрос.УстановитьПараметр("Уволен", Перечисления.ПричиныИзмененияСостояния.Увольнение);
		Запрос.УстановитьПараметр("Прекратить", Перечисления.ВидыДействияСНачислением.Прекратить);
		Запрос.УстановитьПараметр("Действует", Перечисления.ВидыДействияСНачислением.Изменить);
		Запрос.УстановитьПараметр("парамСписокСпособовРасчетовФиксированнойСуммой", ПроведениеРасчетов.ПолучитьСписокСпособовРасчетовФиксированнойСуммой());
		Запрос.УстановитьПараметр("СпособыРасчетаОтСтажа", СпособыРасчетаОтСтажа);
		Запрос.УстановитьПараметр("НачальнаяДата", '00010101');
		Запрос.УстановитьПараметр("парамВидРасчета", ВидРасчета);
		Запрос.УстановитьПараметр("парамПустойТарифныйРазряд", Справочники.ТарифныеРазряды.ПустаяСсылка());
		Запрос.УстановитьПараметр("парамПоСреднемуЗаработку", Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку);
		Запрос.УстановитьПараметр("ОтработанноеВПределахНормы", Перечисления.ВидыВремени.ОтработанноеВПределахНормы);
		Запрос.УстановитьПараметр("ЦелодневноеНеотработанное", Перечисления.ВидыВремени.ЦелодневноеНеотработанное);
		Запрос.УстановитьПараметр("ЧасовоеНеотработанное", Перечисления.ВидыВремени.ЧасовоеНеотработанное);
		Запрос.УстановитьПараметр("ТипПоказателяТарифныйРазряд", Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд);
		Запрос.УстановитьПараметр("ТипыПоказателейБезВалюты", ПроведениеРасчетов.ПолучитьСписокТиповПоказателейСхемМотивацииНеТребующихУказанияВалюты());
		Запрос.УстановитьПараметр("ВидПоказателяИндивидуальный", Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный);
		Запрос.УстановитьПараметр("ВидПоказателяПоПодразделению", Перечисления.ВидыПоказателейСхемМотивации.ПоПодразделению);
		Запрос.УстановитьПараметр("ПустойПоказатель", Справочники.ПоказателиСхемМотивации.ПустаяСсылка());
		Запрос.УстановитьПараметр("парамСписокУпрСпособовРасчета", ПроведениеРасчетов.ПолучитьСписокВариантовУпрНачислений());
		Запрос.УстановитьПараметр("ПустойДоговор", Документы.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПерерассчитываемыйДокумент", ПерерассчитываемыйДокумент);
		Запрос.УстановитьПараметр("СписокСотрудников", СписокСотрудников);
		Запрос.УстановитьПараметр("КлассификаторНЧ", Справочники.КлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы);
		Запрос.УстановитьПараметр("КлассификаторПразд", Справочники.КлассификаторИспользованияРабочегоВремени.Праздники);
		Запрос.УстановитьПараметр("КлассификаторВых", Справочники.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни);
		Запрос.УстановитьПараметр("КлассификаторСверх", Справочники.КлассификаторИспользованияРабочегоВремени.Сверхурочные);

		// Проверим ответственного - является ли он расчетчиком вообще и для заданного 
	 	// подразделения (если оно задано)
		Если Ответственный <> ПустойОтветственный Тогда
			Если глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация].РасчетЗарплатыОрганизацииПоОтветственным Тогда
				Если ПодразделениеОрганизации = ПустоеПодразделение Тогда
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
					|	Расчетчики.ПодразделениеОрганизации
					|ИЗ
					|	РегистрСведений.РасчетчикиЗарплатыОрганизаций.СрезПоследних(&парамНачало) КАК Расчетчики
					|
					|ГДЕ
					|	Расчетчики.Пользователь = &парамПользователь";
					Если Запрос.Выполнить().Пустой() Тогда
						Сообщить("Ответственный за этот документ не является расчетчиком ни одного из подразделений организации");
						Возврат  Ложь;
					КонецЕсли;
				Иначе
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
					|	Подразделения.Ссылка
					|ИЗ
					|	Справочник.ПодразделенияОрганизаций КАК Подразделения
					|
					|ГДЕ
					|	Подразделения.Ссылка В ИЕРАРХИИ(&парамПодразделение) И
					|	(Подразделения.Ссылка В ИЕРАРХИИ (ВЫБРАТЬ РАЗЛИЧНЫЕ 	Расчетчики.ПодразделениеОрганизации ИЗ РегистрСведений.РасчетчикиЗарплатыОрганизаций.СрезПоследних(&парамНачало) КАК Расчетчики ГДЕ 	Расчетчики.Пользователь = &парамПользователь ))";
					Если Запрос.Выполнить().Пустой() Тогда
						Сообщить("Ответственный за этот документ не является расчетчиком для выбранного подразделения");
						Возврат  Ложь;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
	 	КонецЕсли;

		ТаблицаДвиженийРаботниковТекст = "
		|		// срез работников на начало месяца
		|		ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|			&парамНачало КАК Период,
		|			РаботникиОрганизации.Сотрудник КАК Сотрудник,
		|			РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
		|			&ПустойДоговор КАК ДокументОснование,
		|			ИСТИНА КАК Подходит,
		|			РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|			РаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,
		|			РаботникиОрганизации.Должность КАК Должность,
		|			РаботникиОрганизации.ТарифныйРазряд КАК ТарифныйРазряд
		|		ПОМЕСТИТЬ ВТДвиженияРаботников
		|		ИЗ
		|			РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|					&парамНачало, 
		|					Организация = &парамГоловнаяОрганизация
		|					" + ?(СписокСотрудников = Неопределено, "", " И Сотрудник В (&СписокСотрудников)") + ") КАК РаботникиОрганизации
		|		
		|		ГДЕ 
		|			РаботникиОрганизации.ПричинаИзмененияСостояния <> &Уволен
		|			И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
		|			"+?(ПоВсемПодразделениямОрганизации, "", "И "+УсловиеНаПодразделение)+"
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		// движения работников за месяц
		|		ВЫБРАТЬ
		|			РаботникиОрганизации.Период,
		|			РаботникиОрганизации.Сотрудник,
		|			РаботникиОрганизации.Сотрудник.ФизЛицо,
		|			&ПустойДоговор КАК ДокументОснование,
		|			ВЫБОР 
		|				КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния <> &Уволен 
		|						И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация 
		|						И " + УсловиеНаПодразделение +" 
		|					ТОГДА ИСТИНА 
		|				ИНАЧЕ ЛОЖЬ 
		|			КОНЕЦ,
		|			РаботникиОрганизации.ПодразделениеОрганизации,
		|			РаботникиОрганизации.ГрафикРаботы,
		|			РаботникиОрганизации.Должность,
		|			РаботникиОрганизации.ТарифныйРазряд КАК ТарифныйРазряд
		|		ИЗ
		|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		
		|		ГДЕ
		|			РаботникиОрганизации.Период > &парамНачало
		|			И РаботникиОрганизации.Период <= &парамКонец
		|			И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
		|			" + ?(СписокСотрудников = Неопределено, "", " И РаботникиОрганизации.Сотрудник В (&СписокСотрудников)") + " 
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		ВЫБРАТЬ
		|			ВЫБОР 
		|				КОГДА ДоговорникиОрганизаций.ДатаНачала МЕЖДУ &парамНачало И &парамКонец 
		|					ТОГДА ДоговорникиОрганизаций.ДатаНачала 
		|				ИНАЧЕ &парамНачало 
		|			КОНЕЦ,
		|			ДоговорникиОрганизаций.Сотрудник,
		|			ДоговорникиОрганизаций.Сотрудник.ФизЛицо,
		|			ДоговорникиОрганизаций.Договор КАК ДокументОснование,
		|			ВЫБОР КОГДА ДоговорникиОрганизаций.ОбособленноеПодразделение = &парамОрганизация "+?(ПоВсемПодразделениямОрганизации, ""," И " + УсловиеНаПодразделение) +" ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ,
		|			ДоговорникиОрганизаций.ПодразделениеОрганизации,
		|			NULL,
		|			NULL,
		|			NULL
		|		ИЗ
		|			РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизаций
		|
		|		ГДЕ
		|			ДоговорникиОрганизаций.Организация = &парамГоловнаяОрганизация 
		|			И ((ДоговорникиОрганизаций.ХарактерОплаты = &Ежемесячно
		|					И ДоговорникиОрганизаций.ДатаОкончания >= &парамНачало
		|					И ДоговорникиОрганизаций.ДатаНачала <= &парамКонец) 
		|				ИЛИ
		|				(ДоговорникиОрганизаций.ХарактерОплаты <> &Ежемесячно
		|					И ДоговорникиОрганизаций.ДатаОкончания >= &парамНачало
		|					И ДоговорникиОрганизаций.ДатаОкончания <= &парамКонец))
		|			" + ?(СписокСотрудников = Неопределено, "", " И ДоговорникиОрганизаций.Сотрудник В (&СписокСотрудников)") + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	ДокументОснование
		|";
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = ТаблицаДвиженийРаботниковТекст;
		Запрос.Выполнить();
		
	Иначе
		
		// Установим параметры запроса
		ПостроительЗапроса.Параметры.Вставить("парамНачало" , НачалоПериодаЗаполнения);
		ПостроительЗапроса.Параметры.Вставить("парамКонец" , КонецДня(ОкончаниеПериодаЗаполнения));
		ПостроительЗапроса.Параметры.Вставить("парамПериодРегистрации" , ПериодРегистрации);
		ПостроительЗапроса.Параметры.Вставить("парамОрганизация" , Организация);
		ПостроительЗапроса.Параметры.Вставить("парамГоловнаяОрганизация" , ГоловнаяОрганизация);
		ПостроительЗапроса.Параметры.Вставить("парамПользователь" , Ответственный);
		ПостроительЗапроса.Параметры.Вставить("парамПодразделение" , ПодразделениеОрганизации);
		ПостроительЗапроса.Параметры.Вставить("парамРегистратор" , Ссылка);
		ПостроительЗапроса.Параметры.Вставить("парамДатаВалютногоУчета" , НачалоМесяца(НачалоПериодаЗаполнения));
		ПостроительЗапроса.Параметры.Вставить("парамПустаяВалюта" , Справочники.Валюты.ПустаяСсылка());
		ПостроительЗапроса.Параметры.Вставить("парамВалютаРегламентУчета" , Константы.ВалютаРегламентированногоУчета.Получить());
		ПостроительЗапроса.Параметры.Вставить("парамМассивСпособовРасчетовБезВалюты" , ПроведениеРасчетов.ПолучитьСписокСпособовРасчетаНеТребующихУказанияВалюты());
		ПостроительЗапроса.Параметры.Вставить("парамПоЧасам", Перечисления.ВидыУчетаВремени.ПоЧасам);
		ПостроительЗапроса.Параметры.Вставить("парамСменный", Перечисления.ВидыРабочихГрафиков.Сменный);
		ПостроительЗапроса.Параметры.Вставить("ВидыДнейРабочийДень", Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий);
		ПостроительЗапроса.Параметры.Вставить("Ежемесячно", Перечисления.ХарактерВыплатыПоДоговору.Ежемесячно);
		ПостроительЗапроса.Параметры.Вставить("Уволен", Перечисления.ПричиныИзмененияСостояния.Увольнение);
		ПостроительЗапроса.Параметры.Вставить("Прекратить", Перечисления.ВидыДействияСНачислением.Прекратить);
		ПостроительЗапроса.Параметры.Вставить("Действует", Перечисления.ВидыДействияСНачислением.Изменить);
		ПостроительЗапроса.Параметры.Вставить("парамСписокСпособовРасчетовФиксированнойСуммой", ПроведениеРасчетов.ПолучитьСписокСпособовРасчетовФиксированнойСуммой());
		ПостроительЗапроса.Параметры.Вставить("СпособыРасчетаОтСтажа", СпособыРасчетаОтСтажа);
		ПостроительЗапроса.Параметры.Вставить("НачальнаяДата", '00010101');
		ПостроительЗапроса.Параметры.Вставить("парамВидРасчета", ВидРасчета);
		ПостроительЗапроса.Параметры.Вставить("парамПустойТарифныйРазряд", Справочники.ТарифныеРазряды.ПустаяСсылка());
		ПостроительЗапроса.Параметры.Вставить("парамПоСреднемуЗаработку", Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку);
		ПостроительЗапроса.Параметры.Вставить("ОтработанноеВПределахНормы", Перечисления.ВидыВремени.ОтработанноеВПределахНормы);
		ПостроительЗапроса.Параметры.Вставить("ЦелодневноеНеотработанное", Перечисления.ВидыВремени.ЦелодневноеНеотработанное);
		ПостроительЗапроса.Параметры.Вставить("ЧасовоеНеотработанное", Перечисления.ВидыВремени.ЧасовоеНеотработанное);
		ПостроительЗапроса.Параметры.Вставить("ТипПоказателяТарифныйРазряд", Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд);
		ПостроительЗапроса.Параметры.Вставить("ТипыПоказателейБезВалюты", ПроведениеРасчетов.ПолучитьСписокТиповПоказателейСхемМотивацииНеТребующихУказанияВалюты());
		ПостроительЗапроса.Параметры.Вставить("ВидПоказателяИндивидуальный", Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный);
		ПостроительЗапроса.Параметры.Вставить("ВидПоказателяПоПодразделению", Перечисления.ВидыПоказателейСхемМотивации.ПоПодразделению);
		ПостроительЗапроса.Параметры.Вставить("ПустойПоказатель", Справочники.ПоказателиСхемМотивации.ПустаяСсылка());
		ПостроительЗапроса.Параметры.Вставить("парамСписокУпрСпособовРасчета", ПроведениеРасчетов.ПолучитьСписокВариантовУпрНачислений());
		ПостроительЗапроса.Параметры.Вставить("ПустойДоговор", Документы.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка());
		ПостроительЗапроса.Параметры.Вставить("ПерерассчитываемыйДокумент", ПерерассчитываемыйДокумент);
		ПостроительЗапроса.Параметры.Вставить("СписокСотрудников", СписокСотрудников);
		ПостроительЗапроса.Параметры.Вставить("КлассификаторНЧ", Справочники.КлассификаторИспользованияРабочегоВремени.РаботаНочныеЧасы);
		ПостроительЗапроса.Параметры.Вставить("КлассификаторПразд", Справочники.КлассификаторИспользованияРабочегоВремени.Праздники);
		ПостроительЗапроса.Параметры.Вставить("КлассификаторВых", Справочники.КлассификаторИспользованияРабочегоВремени.ВыходныеРабочиеДни);
		ПостроительЗапроса.Параметры.Вставить("КлассификаторСверх", Справочники.КлассификаторИспользованияРабочегоВремени.Сверхурочные);
		
		Запрос = ПостроительЗапроса.ПолучитьЗапрос();
		ИсходныйТекстПостроителя = Запрос.Текст;
		ТекстЗапросаПоСпискуРаботников = СтрЗаменить(ИсходныйТекстПостроителя,"РАЗРЕШЕННЫЕ","");
		ТекстЗапросаПоСпискуРаботников = Лев(ТекстЗапросаПоСпискуРаботников, Найти(ТекстЗапросаПоСпискуРаботников,"УПОРЯДОЧИТЬ") - 1);
		
		ТаблицаДвиженийРаботниковТекст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СписокРаботников.Сотрудник КАК Сотрудник,
		|	СписокРаботников.ФизЛицо КАК ФизЛицо,
		|	ЕСТЬNULL(СписокРаботников.ДокументОснование, &ПустойДоговор) КАК ДокументОснование,
		|	ДвижениеРаботников.Период КАК Период,
		|	ДвижениеРаботников.Подходит КАК Подходит,
		|	ДвижениеРаботников.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ДвижениеРаботников.ГрафикРаботы КАК ГрафикРаботы,
		|	ДвижениеРаботников.Должность КАК Должность,
		|	ДвижениеРаботников.ТарифныйРазряд КАК ТарифныйРазряд
		|ПОМЕСТИТЬ ВТДвиженияРаботников
		|ИЗ
		|	(" + ТекстЗапросаПоСпискуРаботников + ") КАК СписокРаботников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			&парамНачало КАК Период,
		|			РаботникиОрганизации.Сотрудник КАК Сотрудник,
		|			РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
		|			&ПустойДоговор КАК ДокументОснование,
		|			ИСТИНА КАК Подходит,
		|			РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|			РаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,
		|			РаботникиОрганизации.Должность КАК Должность,
		|			РаботникиОрганизации.ТарифныйРазряд КАК ТарифныйРазряд
		|		ИЗ
		|			РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|					&парамНачало, 
		|					Организация = &парамГоловнаяОрганизация
		|					" + ?(СписокСотрудников = Неопределено, "", " И Сотрудник В (&СписокСотрудников)") + ") КАК РаботникиОрганизации
		|		
		|		ГДЕ 
		|			РаботникиОрганизации.ПричинаИзмененияСостояния <> &Уволен 
		|			И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		// движения работников за месяц
		|		ВЫБРАТЬ
		|			РаботникиОрганизации.Период,
		|			РаботникиОрганизации.Сотрудник,
		|			РаботникиОрганизации.Сотрудник.ФизЛицо,
		|			&ПустойДоговор КАК ДокументОснование,
		|			ВЫБОР 
		|				КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния <> &Уволен 
		|						И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация 
		|					ТОГДА ИСТИНА 
		|				ИНАЧЕ ЛОЖЬ 
		|			КОНЕЦ,
		|			РаботникиОрганизации.ПодразделениеОрганизации,
		|			РаботникиОрганизации.ГрафикРаботы,
		|			РаботникиОрганизации.Должность,
		|			РаботникиОрганизации.ТарифныйРазряд КАК ТарифныйРазряд
		|		ИЗ
		|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|		
		|		ГДЕ
		|			РаботникиОрганизации.Период > &парамНачало
		|			И РаботникиОрганизации.Период <= &парамКонец
		|			И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
		|			" + ?(СписокСотрудников = Неопределено, "", " И РаботникиОрганизации.Сотрудник В (&СписокСотрудников)") + "
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		ВЫБРАТЬ
		|			ВЫБОР 
		|				КОГДА ДоговорникиОрганизаций.ДатаНачала МЕЖДУ &парамНачало И &парамКонец 
		|					ТОГДА ДоговорникиОрганизаций.ДатаНачала 
		|				ИНАЧЕ &парамНачало 
		|			КОНЕЦ,
		|			ДоговорникиОрганизаций.Сотрудник,
		|			ДоговорникиОрганизаций.Сотрудник.ФизЛицо КАК ФизЛицо,
		|			ДоговорникиОрганизаций.Договор КАК ДокументОснование,
		|			ВЫБОР КОГДА ДоговорникиОрганизаций.ОбособленноеПодразделение = &парамОрганизация ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ,
		|			ДоговорникиОрганизаций.ПодразделениеОрганизации,
		|			NULL,
		|			NULL,
		|			NULL
		|		ИЗ
		|			РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизаций
		|
		|		ГДЕ
		|			ДоговорникиОрганизаций.Организация = &парамГоловнаяОрганизация 
		|			И ((ДоговорникиОрганизаций.ХарактерОплаты = &Ежемесячно
		|					И ДоговорникиОрганизаций.ДатаОкончания >= &парамНачало
		|					И ДоговорникиОрганизаций.ДатаНачала <= &парамКонец) 
		|				ИЛИ
		|				(ДоговорникиОрганизаций.ХарактерОплаты <> &Ежемесячно
		|					И ДоговорникиОрганизаций.ДатаОкончания >= &парамНачало
		|					И ДоговорникиОрганизаций.ДатаОкончания <= &парамКонец))
		|			" + ?(СписокСотрудников = Неопределено, "", " И ДоговорникиОрганизаций.Сотрудник В (&СписокСотрудников)") + ") КАК ДвижениеРаботников
		|		ПО СписокРаботников.Сотрудник = ДвижениеРаботников.Сотрудник
		|			И ЕСТЬNULL(СписокРаботников.ДокументОснование, &ПустойДоговор) = ДвижениеРаботников.ДокументОснование
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СписокРаботников.Сотрудник,
		|	ЕСТЬNULL(СписокРаботников.ДокументОснование, &ПустойДоговор)
		|";
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = ТаблицаДвиженийРаботниковТекст;
		Запрос.Выполнить();
		
		Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТДвиженияРаботников";
		
	КонецЕсли;
	
	ТаблицаДвиженийРаботниковТекст = "ВТДвиженияРаботников";
	
	// если задан перерассчитываемый документ, то ограничим записи перерасчета только теми
	// сотрудниками, которые содержатся в перерассчитываемом документе
	Если ПерерассчитываемыйДокумент <> Неопределено Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	Работники.Сотрудник,
		|	Работники.ФизЛицо,
		|	Работники.ДокументОснование,
		|	Работники.Период,
		|	Работники.Подходит,
		|	Работники.ПодразделениеОрганизации,
		|	Работники.ГрафикРаботы,
		|	Работники.Должность,
		|	Работники.ТарифныйРазряд
		|ПОМЕСТИТЬ ВТДвиженияПерерассчитываемыхРаботников
		|ИЗ
		|	" + ТаблицаДвиженийРаботниковТекст + " КАК Работники
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|								Начисления.Сотрудник,
		|								Начисления.ФизЛицо,
		|								&ПустойДоговор КАК ДокументОснование
		|							ИЗ
		|								Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК Начисления
		|							ГДЕ
		|								Начисления.Ссылка = &ПерерассчитываемыйДокумент
		|
		|							ОБЪЕДИНИТЬ // берем только различные
		|
		|							ВЫБРАТЬ
		|								ДополнительныеНачисления.Сотрудник,
		|								ДополнительныеНачисления.ФизЛицо,
		|								ДополнительныеНачисления.ДокументОснование
		|							ИЗ
		|								Документ.НачислениеЗарплатыРаботникамОрганизаций.ДополнительныеНачисления КАК ДополнительныеНачисления
		|							ГДЕ
		|								ДополнительныеНачисления.Ссылка = &ПерерассчитываемыйДокумент) КАК НачислениеЗарплатыРаботникамОрганизаций
		|		ПО Работники.Сотрудник = НачислениеЗарплатыРаботникамОрганизаций.Сотрудник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Работники.Сотрудник,
		|	Работники.ДокументОснование
		|";
	
		Запрос.Выполнить();
		ТаблицаДвиженийРаботниковТекст = "ВТДвиженияПерерассчитываемыхРаботников";
		
	КонецЕсли;
	
	ПоказателиНачисленийТекст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияОрганизаций.Ссылка КАК ВидРасчета,
		|	МАКСИМУМ(ПоказателиОсновныхНачислений.НомерСтроки) КАК КоличествоПоказателей,
		|	Показатели1.Показатель.Наименование КАК Показатель1Наименование,
		|	Показатели2.Показатель.Наименование КАК Показатель2Наименование,
		|	Показатели3.Показатель.Наименование КАК Показатель3Наименование,
		|	Показатели4.Показатель.Наименование КАК Показатель4Наименование,
		|	Показатели5.Показатель.Наименование КАК Показатель5Наименование,
		|	Показатели6.Показатель.Наименование КАК Показатель6Наименование,
		|	Показатели1.Показатель.ТипПоказателя КАК Показатель1ТипПоказателя,
		|	Показатели2.Показатель.ТипПоказателя КАК Показатель2ТипПоказателя,
		|	Показатели3.Показатель.ТипПоказателя КАК Показатель3ТипПоказателя,
		|	Показатели4.Показатель.ТипПоказателя КАК Показатель4ТипПоказателя,
		|	Показатели5.Показатель.ТипПоказателя КАК Показатель5ТипПоказателя,
		|	Показатели6.Показатель.ТипПоказателя КАК Показатель6ТипПоказателя,
		|	Показатели1.Показатель.ВидПоказателя КАК Показатель1ВидПоказателя,
		|	Показатели2.Показатель.ВидПоказателя КАК Показатель2ВидПоказателя,
		|	Показатели3.Показатель.ВидПоказателя КАК Показатель3ВидПоказателя,
		|	Показатели4.Показатель.ВидПоказателя КАК Показатель4ВидПоказателя,
		|	Показатели5.Показатель.ВидПоказателя КАК Показатель5ВидПоказателя,
		|	Показатели6.Показатель.ВидПоказателя КАК Показатель6ВидПоказателя,
		|	Показатели1.Показатель КАК Показатель1,
		|	Показатели2.Показатель КАК Показатель2,
		|	Показатели3.Показатель КАК Показатель3,
		|	Показатели4.Показатель КАК Показатель4,
		|	Показатели5.Показатель КАК Показатель5,
		|	Показатели6.Показатель КАК Показатель6
		|ПОМЕСТИТЬ ВТ_Показатели
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели1
		|		ПО (Показатели1.НомерСтроки = 1)
		|			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели1.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели2
		|		ПО (Показатели2.НомерСтроки = 2)
		|			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели2.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели3
		|		ПО (Показатели3.НомерСтроки = 3)
		|			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели3.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели4
		|		ПО (Показатели4.НомерСтроки = 4)
		|			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели4.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели5
		|		ПО (Показатели5.НомерСтроки = 5)
		|			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели5.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели6
		|		ПО (Показатели6.НомерСтроки = 6)
		|			И ОсновныеНачисленияОрганизаций.Ссылка = Показатели6.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ПоказателиОсновныхНачислений
		|		ПО ОсновныеНачисленияОрганизаций.Ссылка = ПоказателиОсновныхНачислений.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Показатели1.Показатель.Наименование,
		|	Показатели2.Показатель.Наименование,
		|	Показатели3.Показатель.Наименование,
		|	Показатели4.Показатель.Наименование,
		|	Показатели5.Показатель.Наименование,
		|	Показатели6.Показатель.Наименование,
		|	Показатели1.Показатель.ТипПоказателя,
		|	Показатели2.Показатель.ТипПоказателя,
		|	Показатели3.Показатель.ТипПоказателя,
		|	Показатели4.Показатель.ТипПоказателя,
		|	Показатели5.Показатель.ТипПоказателя,
		|	Показатели6.Показатель.ТипПоказателя,
		|	Показатели1.Показатель.ВидПоказателя,
		|	Показатели2.Показатель.ВидПоказателя,
		|	Показатели3.Показатель.ВидПоказателя,
		|	Показатели4.Показатель.ВидПоказателя,
		|	Показатели5.Показатель.ВидПоказателя,
		|	Показатели6.Показатель.ВидПоказателя,
		|	Показатели1.Показатель,
		|	Показатели2.Показатель,
		|	Показатели3.Показатель,
		|	Показатели4.Показатель,
		|	Показатели5.Показатель,
		|	Показатели6.Показатель,
		|	ОсновныеНачисленияОрганизаций.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДополнительныеНачисленияОрганизаций.Ссылка,
		|	МАКСИМУМ(ПоказателиДополнительныхНачислений.НомерСтроки),
		|	Показатели1.Показатель.Наименование,
		|	Показатели2.Показатель.Наименование,
		|	Показатели3.Показатель.Наименование,
		|	Показатели4.Показатель.Наименование,
		|	Показатели5.Показатель.Наименование,
		|	Показатели6.Показатель.Наименование,
		|	Показатели1.Показатель.ТипПоказателя,
		|	Показатели2.Показатель.ТипПоказателя,
		|	Показатели3.Показатель.ТипПоказателя,
		|	Показатели4.Показатель.ТипПоказателя,
		|	Показатели5.Показатель.ТипПоказателя,
		|	Показатели6.Показатель.ТипПоказателя,
		|	Показатели1.Показатель.ВидПоказателя,
		|	Показатели2.Показатель.ВидПоказателя,
		|	Показатели3.Показатель.ВидПоказателя,
		|	Показатели4.Показатель.ВидПоказателя,
		|	Показатели5.Показатель.ВидПоказателя,
		|	Показатели6.Показатель.ВидПоказателя,
		|	Показатели1.Показатель,
		|	Показатели2.Показатель,
		|	Показатели3.Показатель,
		|	Показатели4.Показатель,
		|	Показатели5.Показатель,
		|	Показатели6.Показатель
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели1
		|		ПО (Показатели1.НомерСтроки = 1)
		|			И ДополнительныеНачисленияОрганизаций.Ссылка = Показатели1.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели2
		|		ПО (Показатели2.НомерСтроки = 2)
		|			И ДополнительныеНачисленияОрганизаций.Ссылка = Показатели2.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели3
		|		ПО (Показатели3.НомерСтроки = 3)
		|			И ДополнительныеНачисленияОрганизаций.Ссылка = Показатели3.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели4
		|		ПО (Показатели4.НомерСтроки = 4)
		|			И ДополнительныеНачисленияОрганизаций.Ссылка = Показатели4.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели5
		|		ПО (Показатели5.НомерСтроки = 5)
		|			И ДополнительныеНачисленияОрганизаций.Ссылка = Показатели5.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК Показатели6
		|		ПО (Показатели6.НомерСтроки = 6)
		|			И ДополнительныеНачисленияОрганизаций.Ссылка = Показатели6.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК ПоказателиДополнительныхНачислений
		|		ПО ДополнительныеНачисленияОрганизаций.Ссылка = ПоказателиДополнительныхНачислений.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Показатели1.Показатель.Наименование,
		|	Показатели2.Показатель.Наименование,
		|	Показатели3.Показатель.Наименование,
		|	Показатели4.Показатель.Наименование,
		|	Показатели5.Показатель.Наименование,
		|	Показатели6.Показатель.Наименование,
		|	Показатели1.Показатель.ТипПоказателя,
		|	Показатели2.Показатель.ТипПоказателя,
		|	Показатели3.Показатель.ТипПоказателя,
		|	Показатели4.Показатель.ТипПоказателя,
		|	Показатели5.Показатель.ТипПоказателя,
		|	Показатели6.Показатель.ТипПоказателя,
		|	Показатели1.Показатель.ВидПоказателя,
		|	Показатели2.Показатель.ВидПоказателя,
		|	Показатели3.Показатель.ВидПоказателя,
		|	Показатели4.Показатель.ВидПоказателя,
		|	Показатели5.Показатель.ВидПоказателя,
		|	Показатели6.Показатель.ВидПоказателя,
		|	Показатели1.Показатель,
		|	Показатели2.Показатель,
		|	Показатели3.Показатель,
		|	Показатели4.Показатель,
		|	Показатели5.Показатель,
		|	Показатели6.Показатель,
		|	ДополнительныеНачисленияОрганизаций.Ссылка";
		
	Запрос.Текст = ПоказателиНачисленийТекст;
	Запрос.Выполнить();
	
	ПоказателиНачисленийТекст = "ВТ_Показатели";
	
	//Основной текст запроса
	ОсновнойТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписокСотрудников.Сотрудник,
	|	СписокСотрудников.ФизЛицо,
	|	МИНИМУМ(СписокСотрудников.Период) КАК Период
	|
	|ПОМЕСТИТЬ ВТ_СписокРазличныхСотрудников
	|ИЗ
	|	" + ТаблицаДвиженийРаботниковТекст + " КАК СписокСотрудников
	|ГДЕ
	|	СписокСотрудников.ДокументОснование = &ПустойДоговор
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокСотрудников.Сотрудник,
	|	СписокСотрудников.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	СписокСотрудников.Сотрудник,
	|	СписокСотрудников.ФизЛицо,
	|	СписокСотрудников.ДокументОснование
	|
	|ПОМЕСТИТЬ ВТ_СписокРазличныхДоговорников
	|ИЗ
	|	" + ТаблицаДвиженийРаботниковТекст + " КАК СписокСотрудников
	|ГДЕ
	|	СписокСотрудников.ДокументОснование <> &ПустойДоговор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДокументОснование
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&парамНачало КАК Период,
	|	ВЫБОР 
	|		КОГДА (НачисленияРаботниковОрганизации.ВидРасчетаИзмерение.Код ЕСТЬ NULL) 
	|			ТОГДА ИСТИНА 
	|		ИНАЧЕ ЛОЖЬ 
	|	КОНЕЦ КАК ОсновноеНачисление,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.ВидРасчетаЗавершения 
	|		ИНАЧЕ НачисленияРаботниковОрганизации.ВидРасчета 
	|	КОНЕЦ КАК ВидРасчета,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.ДействиеЗавершения 
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Действие 
	|	КОНЕЦ КАК Действие,
    |
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.Показатель1Завершения 
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель1 
	|	КОНЕЦ КАК Показатель1,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.Валюта1Завершения
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта1 
	|	КОНЕЦ КАК Валюта1,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд1Завершения
	|		ИНАЧЕ НачисленияРаботниковОрганизации.ТарифныйРазряд1 
	|	КОНЕЦ КАК ТарифныйРазряд1,
    |
    |
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.Показатель2Завершения 
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель2 
	|	КОНЕЦ КАК Показатель2,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.Валюта2Завершения
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта2
	|	КОНЕЦ КАК Валюта2,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд2Завершения
	|		ИНАЧЕ НачисленияРаботниковОрганизации.ТарифныйРазряд2 
	|	КОНЕЦ КАК ТарифныйРазряд2,
    |
    |
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.Показатель3Завершения 
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель3 
	|	КОНЕЦ КАК Показатель3,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.Валюта3Завершения
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта3
	|	КОНЕЦ КАК Валюта3,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд3Завершения
	|		ИНАЧЕ НачисленияРаботниковОрганизации.ТарифныйРазряд3 
	|	КОНЕЦ КАК ТарифныйРазряд3,
    | 
    |
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.Показатель4Завершения 
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель4
	|	КОНЕЦ КАК Показатель4,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.Валюта4Завершения
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта4
	|	КОНЕЦ КАК Валюта4,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд4Завершения
	|		ИНАЧЕ НачисленияРаботниковОрганизации.ТарифныйРазряд4 
	|	КОНЕЦ КАК ТарифныйРазряд4,
    |
    |
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.Показатель5Завершения 
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель5
	|	КОНЕЦ КАК Показатель5,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.Валюта5Завершения
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта5
	|	КОНЕЦ КАК Валюта5,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд5Завершения
	|		ИНАЧЕ НачисленияРаботниковОрганизации.ТарифныйРазряд5 
	|	КОНЕЦ КАК ТарифныйРазряд5,
	|
	|
  	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.Показатель6Завершения 
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель6
	|	КОНЕЦ КАК Показатель6,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.Валюта6Завершения
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта6
	|	КОНЕЦ КАК Валюта6,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд6Завершения
	|		ИНАЧЕ НачисленияРаботниковОрганизации.ТарифныйРазряд6 
	|	КОНЕЦ КАК ТарифныйРазряд6,
	|
	|
	|	НачисленияРаботниковОрганизации.Сотрудник КАК Сотрудник,
	|	&ПустойДоговор КАК ДокументОснование,
	|	Работники.Должность // опреляем должность именно на дату плановых начислений
	|						// не можем брать из ТаблицаДвиженийРаботниковТекст, т.к. с ней соединяем без учета дат
	|
	|ПОМЕСТИТЬ ВТ_ПлановыеНачисленияСрезПоследних
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|					&парамНачало, 
	|					Организация = &парамГоловнаяОрганизация
	|					И (Сотрудник) В (ВЫБРАТЬ Сотрудник ИЗ " + ТаблицаДвиженийРаботниковТекст + ")) КАК НачисленияРаботниковОрганизации
    | 
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|					&парамНачало, 
	|					Организация = &парамГоловнаяОрганизация
	|					И (Сотрудник) В (ВЫБРАТЬ Сотрудник ИЗ " + ТаблицаДвиженийРаботниковТекст + ")) КАК Работники
	|		ПО НачисленияРаботниковОрганизации.Сотрудник = Работники.Сотрудник
    | 
	|ГДЕ
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ПериодЗавершения < &парамНачало 
	|				И НачисленияРаботниковОрганизации.ПериодЗавершения <> &НачальнаяДата 
	|			ТОГДА НачисленияРаботниковОрганизации.ДействиеЗавершения 
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Действие 
	|	КОНЕЦ  <> &Прекратить
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлановыеНачисления.Период,
	|	ПлановыеНачисления.Сотрудник КАК Сотрудник,
	|	ПлановыеНачисления.ВидРасчетаИзмерение,
	|	ПлановыеНачисления.ВидРасчета,
	|	ПлановыеНачисления.Действие,
	|
	|	ПлановыеНачисления.Показатель1,
	|	ПлановыеНачисления.Валюта1,
	|	ПлановыеНачисления.ТарифныйРазряд1,
	|
	|	ПлановыеНачисления.Показатель2,
	|	ПлановыеНачисления.Валюта2,
	|	ПлановыеНачисления.ТарифныйРазряд2,
	|
	|	ПлановыеНачисления.Показатель3,
	|	ПлановыеНачисления.Валюта3,
	|	ПлановыеНачисления.ТарифныйРазряд3,
	|
	|	ПлановыеНачисления.Показатель4,
	|	ПлановыеНачисления.Валюта4,
	|	ПлановыеНачисления.ТарифныйРазряд4,
	|
	|	ПлановыеНачисления.Показатель5,
	|	ПлановыеНачисления.Валюта5,
	|	ПлановыеНачисления.ТарифныйРазряд5,
	|
	|	ПлановыеНачисления.Показатель6,
	|	ПлановыеНачисления.Валюта6,
	|	ПлановыеНачисления.ТарифныйРазряд6,
	|
	|	МАКСИМУМ(Работники.Период) КАК ПериодНазначения
	|
	|ПОМЕСТИТЬ ВТ_ПоследниеДатыНазначенийДляПлановыхНачисленияЗаПериод
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокРазличныхСотрудников КАК СписокРазличныхСотрудников
	|		ПО ПлановыеНачисления.Сотрудник = СписокРазличныхСотрудников.Сотрудник
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	|		ПО ПлановыеНачисления.Сотрудник = Работники.Сотрудник
	|			И Работники.Организация = &парамГоловнаяОрганизация
	|			И Работники.Период <= ПлановыеНачисления.Период
	|
	|ГДЕ
	|	ПлановыеНачисления.Период > &парамНачало
	|	И ПлановыеНачисления.Период <= &парамКонец
	|	И ПлановыеНачисления.Организация = &парамГоловнаяОрганизация
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлановыеНачисления.Период,
	|	ПлановыеНачисления.Сотрудник,
	|	ПлановыеНачисления.ВидРасчетаИзмерение,
	|	ПлановыеНачисления.ВидРасчета,
	|	ПлановыеНачисления.Действие,
	|
	|	ПлановыеНачисления.Показатель1,
	|	ПлановыеНачисления.Валюта1,
	|	ПлановыеНачисления.ТарифныйРазряд1,
	|
	|	ПлановыеНачисления.Показатель2,
	|	ПлановыеНачисления.Валюта2,
	|	ПлановыеНачисления.ТарифныйРазряд2,
	|
	|	ПлановыеНачисления.Показатель3,
	|	ПлановыеНачисления.Валюта3,
	|	ПлановыеНачисления.ТарифныйРазряд3,
	|
	|	ПлановыеНачисления.Показатель4,
	|	ПлановыеНачисления.Валюта4,
	|	ПлановыеНачисления.ТарифныйРазряд4,
	|
	|	ПлановыеНачисления.Показатель5,
	|	ПлановыеНачисления.Валюта5,
	|	ПлановыеНачисления.ТарифныйРазряд5,
	|
	|	ПлановыеНачисления.Показатель6,
	|	ПлановыеНачисления.Валюта6,
	|	ПлановыеНачисления.ТарифныйРазряд6
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ПериодНазначения
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НачисленияРаботниковОрганизации.Период,
	|	ВЫБОР 
	|		КОГДА НачисленияРаботниковОрганизации.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
	|			ТОГДА ИСТИНА 
	|		ИНАЧЕ ЛОЖЬ 
	|	КОНЕЦ КАК ОсновноеНачисление,
	|	НачисленияРаботниковОрганизации.ВидРасчета,
	|	НачисленияРаботниковОрганизации.Действие,
	|
	|
	|	НачисленияРаботниковОрганизации.Показатель1,
	|	НачисленияРаботниковОрганизации.Валюта1,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд1,	
	|
	|
	|	НачисленияРаботниковОрганизации.Показатель2,
	|	НачисленияРаботниковОрганизации.Валюта2,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд2,	
	|
	|
	|	НачисленияРаботниковОрганизации.Показатель3,
	|	НачисленияРаботниковОрганизации.Валюта3,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд3,	
	|
	|
	|	НачисленияРаботниковОрганизации.Показатель4,
	|	НачисленияРаботниковОрганизации.Валюта4,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд4,	
	|
	|
	|	НачисленияРаботниковОрганизации.Показатель5,
	|	НачисленияРаботниковОрганизации.Валюта5,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд5,	
	|
	|
	|	НачисленияРаботниковОрганизации.Показатель6,
	|	НачисленияРаботниковОрганизации.Валюта6,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд6,	
	|
	|
	|	НачисленияРаботниковОрганизации.Сотрудник,	
	|	&ПустойДоговор КАК ДокументОснование,
	|	Работники.Должность
	|
	|ПОМЕСТИТЬ ВТ_ПлановыеНачисленияЗаПериод
	|ИЗ
	|	ВТ_ПоследниеДатыНазначенийДляПлановыхНачисленияЗаПериод КАК НачисленияРаботниковОрганизации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	|		ПО НачисленияРаботниковОрганизации.Сотрудник = Работники.Сотрудник
	|			И НачисленияРаботниковОрганизации.ПериодНазначения = Работники.Период
	|			И Работники.Организация = &парамГоловнаяОрганизация
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлановыеНачисления.Период,
	|	ПлановыеНачисления.ПериодЗавершения,
	|	ПлановыеНачисления.Сотрудник КАК Сотрудник,
	|	ПлановыеНачисления.ВидРасчетаИзмерение,
	|	ПлановыеНачисления.ВидРасчетаЗавершения,
	|	ПлановыеНачисления.ДействиеЗавершения,
	|
	|	ПлановыеНачисления.Показатель1Завершения,
	|	ПлановыеНачисления.Валюта1Завершения,
	|	ПлановыеНачисления.ТарифныйРазряд1Завершения,
	|
	|	ПлановыеНачисления.Показатель2Завершения,
	|	ПлановыеНачисления.Валюта2Завершения,
	|	ПлановыеНачисления.ТарифныйРазряд2Завершения,
	|
	|	ПлановыеНачисления.Показатель3Завершения,
	|	ПлановыеНачисления.Валюта3Завершения,
	|	ПлановыеНачисления.ТарифныйРазряд3Завершения,
	|
	|	ПлановыеНачисления.Показатель4Завершения,
	|	ПлановыеНачисления.Валюта4Завершения,
	|	ПлановыеНачисления.ТарифныйРазряд4Завершения,
	|
	|	ПлановыеНачисления.Показатель5Завершения,
	|	ПлановыеНачисления.Валюта5Завершения,
	|	ПлановыеНачисления.ТарифныйРазряд5Завершения,
	|
	|	ПлановыеНачисления.Показатель6Завершения,
	|	ПлановыеНачисления.Валюта6Завершения,
	|	ПлановыеНачисления.ТарифныйРазряд6Завершения,
	|
	|	МАКСИМУМ(Работники.Период) КАК ПериодНазначения
	|
	|ПОМЕСТИТЬ ВТ_ПоследниеДатыНазначенийДляЗавершенияПлановыхНачислений
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокРазличныхСотрудников КАК СписокРазличныхСотрудников
	|		ПО ПлановыеНачисления.Сотрудник = СписокРазличныхСотрудников.Сотрудник
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	|		ПО ПлановыеНачисления.Сотрудник = Работники.Сотрудник
	|			И Работники.Организация = &парамГоловнаяОрганизация
	|			И Работники.Период <= ДОБАВИТЬКДАТЕ(ПлановыеНачисления.ПериодЗавершения, ДЕНЬ, 1)
	|
	|ГДЕ
	|	ПлановыеНачисления.ПериодЗавершения МЕЖДУ &парамНачало И &парамКонец
	|	И ПлановыеНачисления.Организация = &парамГоловнаяОрганизация
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлановыеНачисления.Период,
	|	ПлановыеНачисления.ПериодЗавершения,
	|	ПлановыеНачисления.Сотрудник,
	|	ПлановыеНачисления.ВидРасчетаИзмерение,
	|	ПлановыеНачисления.ВидРасчетаЗавершения,
	|	ПлановыеНачисления.ДействиеЗавершения,
	|
	|	ПлановыеНачисления.Показатель1Завершения,
	|	ПлановыеНачисления.Валюта1Завершения,
	|	ПлановыеНачисления.ТарифныйРазряд1Завершения,
	|
	|	ПлановыеНачисления.Показатель2Завершения,
	|	ПлановыеНачисления.Валюта2Завершения,
	|	ПлановыеНачисления.ТарифныйРазряд2Завершения,
	|
	|	ПлановыеНачисления.Показатель3Завершения,
	|	ПлановыеНачисления.Валюта3Завершения,
	|	ПлановыеНачисления.ТарифныйРазряд3Завершения,
	|
	|	ПлановыеНачисления.Показатель4Завершения,
	|	ПлановыеНачисления.Валюта4Завершения,
	|	ПлановыеНачисления.ТарифныйРазряд4Завершения,
	|
	|	ПлановыеНачисления.Показатель5Завершения,
	|	ПлановыеНачисления.Валюта5Завершения,
	|	ПлановыеНачисления.ТарифныйРазряд5Завершения,
	|
	|	ПлановыеНачисления.Показатель6Завершения,
	|	ПлановыеНачисления.Валюта6Завершения,
	|	ПлановыеНачисления.ТарифныйРазряд6Завершения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ПериодНазначения
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДОБАВИТЬКДАТЕ(НачисленияРаботниковОрганизации.ПериодЗавершения, ДЕНЬ, 1) КАК Период,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОсновноеНачисление,
	|	НачисленияРаботниковОрганизации.ВидРасчетаЗавершения КАК ВидРасчета,
	|	НачисленияРаботниковОрганизации.ДействиеЗавершения КАК Действие,
	|
	|
	|	НачисленияРаботниковОрганизации.Показатель1Завершения КАК Показатель1,
	|	НачисленияРаботниковОрганизации.Валюта1Завершения КАК Валюта1,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд1Завершения КАК ТарифныйРазряд1,
	|
	|
	|	НачисленияРаботниковОрганизации.Показатель2Завершения КАК Показатель2,
	|	НачисленияРаботниковОрганизации.Валюта2Завершения КАК Валюта2,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд2Завершения КАК ТарифныйРазряд2,
	|
	|
	|	НачисленияРаботниковОрганизации.Показатель3Завершения КАК Показатель3,
	|	НачисленияРаботниковОрганизации.Валюта3Завершения КАК Валюта3,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд3Завершения КАК ТарифныйРазряд3,
	|
	|
	|	НачисленияРаботниковОрганизации.Показатель4Завершения КАК Показатель4,
	|	НачисленияРаботниковОрганизации.Валюта4Завершения КАК Валюта4,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд4Завершения КАК ТарифныйРазряд4,
	|
	|
	|	НачисленияРаботниковОрганизации.Показатель5Завершения КАК Показатель5,
	|	НачисленияРаботниковОрганизации.Валюта5Завершения КАК Валюта5,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд5Завершения КАК ТарифныйРазряд5,
	|
	|
	|	НачисленияРаботниковОрганизации.Показатель6Завершения КАК Показатель6,
	|	НачисленияРаботниковОрганизации.Валюта6Завершения КАК Валюта6,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд6Завершения КАК ТарифныйРазряд6,
	|
	|
	|	НачисленияРаботниковОрганизации.Сотрудник,	
	|	&ПустойДоговор КАК ДокументОснование,
	|	Работники.Должность // опреляем должность именно на дату плановых начислений
	|						// не можем брать из ТаблицаДвиженийРаботниковТекст, т.к. с ней соединяем без учета дат
	|
	|ПОМЕСТИТЬ ВТ_ЗавершениеПлановыхНачислений
	|ИЗ
	|	ВТ_ПоследниеДатыНазначенийДляЗавершенияПлановыхНачислений КАК НачисленияРаботниковОрганизации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК НачисленияРаботниковПроверка
	|		ПО НачисленияРаботниковОрганизации.Сотрудник = НачисленияРаботниковПроверка.Сотрудник
	|			И НачисленияРаботниковПроверка.Организация = &парамГоловнаяОрганизация
	|			И НачисленияРаботниковОрганизации.ВидРасчетаИзмерение = НачисленияРаботниковПроверка.ВидРасчетаИзмерение
	|			И НачисленияРаботниковПроверка.Период > НачисленияРаботниковОрганизации.Период
	|			И НачисленияРаботниковПроверка.Период <= ДОБАВИТЬКДАТЕ(НачисленияРаботниковОрганизации.ПериодЗавершения, ДЕНЬ, 1)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	|		ПО НачисленияРаботниковОрганизации.Сотрудник = Работники.Сотрудник
	|			И НачисленияРаботниковОрганизации.ПериодНазначения = Работники.Период
	|			И Работники.Организация = &парамГоловнаяОрганизация
	|
	|ГДЕ
	|	НачисленияРаботниковПроверка.Сотрудник ЕСТЬ NULL 
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ОтработанноеВремя.ВЦеломЗаПериод
	|			ТОГДА Работники.Период // не ранее даты приема
	|		ИНАЧЕ МИНИМУМ(НАЧАЛОПЕРИОДА(ОтработанноеВремя.Период, ДЕНЬ))
	|	КОНЕЦ КАК МинПериод,
	|	ВЫБОР
	|		КОГДА ОтработанноеВремя.ВЦеломЗаПериод
	|			ТОГДА КОНЕЦПЕРИОДА(&парамКонец, МЕСЯЦ)
	|		ИНАЧЕ МАКСИМУМ(НАЧАЛОПЕРИОДА(ОтработанноеВремя.Период, ДЕНЬ))
	|	КОНЕЦ КАК МаксПериод,
	|	ЛОЖЬ КАК ОсновноеНачисление,
	|	ВЫБОР
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторНЧ
	|			ТОГДА КоэффициентыОплаты.ВидРасчетаНочные
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторПразд
	|			ИЛИ ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторВых
	|			ТОГДА КоэффициентыОплаты.ВидРасчетаПраздничныеИВыходные
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторСверх
	|			ТОГДА КоэффициентыОплаты.ВидРасчетаСверхурочные
	|	КОНЕЦ КАК ВидРасчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать) КАК Действие,
	|	
	|	0 КАК Показатель1,
	|	&парамВалютаРегламентУчета КАК Валюта1,
	|	&парамПустойТарифныйРазряд КАК ТарифныйРазряд1,
	|
	|	0 КАК Показатель2,
	|	&парамВалютаРегламентУчета КАК Валюта2,
	|	&парамПустойТарифныйРазряд КАК ТарифныйРазряд2,
	|
	|	ВЫБОР
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторНЧ
	|			ТОГДА КоэффициентыОплаты.КоэффициентНочные 
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторПразд
	|			ИЛИ ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторВых
	|			ТОГДА КоэффициентыОплаты.КоэффициентПраздничныеИВыходные
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторСверх
	|			ТОГДА КоэффициентыОплаты.КоэффициентСверхурочные
	|	КОНЕЦ КАК Показатель3,
	|	&парамВалютаРегламентУчета КАК Валюта3,
	|	&парамПустойТарифныйРазряд КАК ТарифныйРазряд3,
	|
	|	0 КАК Показатель4,
	|	&парамВалютаРегламентУчета КАК Валюта4,
	|	&парамПустойТарифныйРазряд КАК ТарифныйРазряд4,
	|
	|	0 КАК Показатель5,
	|	&парамВалютаРегламентУчета КАК Валюта5,
	|	&парамПустойТарифныйРазряд КАК ТарифныйРазряд5,
	|
	|	0 КАК Показатель6,
	|	&парамВалютаРегламентУчета КАК Валюта6,
	|	&парамПустойТарифныйРазряд КАК ТарифныйРазряд6,
	|
	|	ОтработанноеВремя.Сотрудник КАК Сотрудник,
	|	&ПустойДоговор КАК ДокументОснование,
	|	NULL КАК Должность,
	|	ОтработанноеВремя.ВидИспользованияРабочегоВремени,
	|	ВЫБОР
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторНЧ
	|			ТОГДА Неопределено // ночные в целом за период
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторПразд
	|			ИЛИ ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторВых
	|			ТОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.Период, ДЕНЬ) // сверухрочные и праздничные - по каждому дню
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторСверх
	|			ТОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.Период, ДЕНЬ) 
	|	КОНЕЦ КАК ПолеГруппировки
	|
	|ПОМЕСТИТЬ ВТ_СверхурочноеВремяПоТабелю
	|ИЗ
	|	ВТ_СписокРазличныхСотрудников КАК Работники
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК ОтработанноеВремя
	|		ПО Работники.Сотрудник = ОтработанноеВремя.Сотрудник
	|			И ОтработанноеВремя.Организация = &парамГоловнаяОрганизация
	|			И ОтработанноеВремя.Период МЕЖДУ &парамНачало И &парамКонец
	|			И ОтработанноеВремя.ВидИспользованияРабочегоВремени В (&КлассификаторНЧ, &КлассификаторПразд, &КлассификаторВых, &КлассификаторСверх)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КоэффициентыОплатыСверхнормативныхРабот.СрезПоследних(
	|						&парамНачало,
	|						Организация = &парамОрганизация) КАК КоэффициентыОплаты
	|		ПО ИСТИНА
	|
	|ГДЕ
	|	// если в регистре сведений КоэффициентыОплатыСверхнормативныхРабот не указаны виды расчета,
	|	// то автоматически ничего не подставляем на основании табеля - считаем, что в этом случае хотят создавать отдельные документы
	|	// по оплате сверхурочных, праздничных, а ночные задавать через плановые начисления
	|	ВЫБОР
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторНЧ
	|			ТОГДА ЕСТЬNULL(КоэффициентыОплаты.ВидРасчетаНочные, ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)) 
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторПразд
	|		  ИЛИ ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторВых
	|			ТОГДА ЕСТЬNULL(КоэффициентыОплаты.ВидРасчетаПраздничныеИВыходные, ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)) 
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторСверх
	|			ТОГДА ЕСТЬNULL(КоэффициентыОплаты.ВидРасчетаСверхурочные, ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)) 
	|	КОНЕЦ <> ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Работники.Период,
	|	ОтработанноеВремя.Сотрудник,
	|	ОтработанноеВремя.ВидИспользованияРабочегоВремени,
	|	ОтработанноеВремя.ВЦеломЗаПериод,
	|	ВЫБОР
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторНЧ
	|			ТОГДА КоэффициентыОплаты.ВидРасчетаНочные
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторПразд
	|		  ИЛИ ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторВых
	|			ТОГДА КоэффициентыОплаты.ВидРасчетаПраздничныеИВыходные
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторСверх
	|			ТОГДА КоэффициентыОплаты.ВидРасчетаСверхурочные
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторНЧ
	|			ТОГДА КоэффициентыОплаты.КоэффициентНочные 
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторПразд
	|		  ИЛИ ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторВых
	|			ТОГДА КоэффициентыОплаты.КоэффициентПраздничныеИВыходные
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторСверх
	|			ТОГДА КоэффициентыОплаты.КоэффициентСверхурочные
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторНЧ
	|			ТОГДА Неопределено // ночные в целом за период
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторПразд
	|		  ИЛИ ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторВых
	|			ТОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.Период, ДЕНЬ) // сверухрочные и праздничные - по каждому дню
	|		КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени = &КлассификаторСверх
	|			ТОГДА НАЧАЛОПЕРИОДА(ОтработанноеВремя.Период, ДЕНЬ) 
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ВидРасчета,
	|	МаксПериод
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияДоговорниковОрганизаций.ПериодЗавершения МЕЖДУ &парамНачало И &парамКонец
	|			ТОГДА ПлановыеНачисленияДоговорниковОрганизаций.ПериодЗавершения
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&парамКонец, ДЕНЬ), ДЕНЬ, 1)
	|	КОНЕЦ КАК Период,
	|	ЛОЖЬ КАК ОсновноеНачисление,
	|	ПлановыеНачисленияДоговорниковОрганизаций.ВидРасчета КАК ВидРасчета,
	|	&Прекратить КАК Действие,
	|	ПлановыеНачисленияДоговорниковОрганизаций.Показатель1 КАК Показатель1,
	|	ПлановыеНачисленияДоговорниковОрганизаций.Валюта1 КАК Валюта1,
	|	NULL КАК ТарифныйРазряд1,
	|	0 КАК Показатель2,
	|	&парамПустаяВалюта КАК Валюта2,
	|	NULL КАК ТарифныйРазряд2,
	|	0 КАК Показатель3,
	|	&парамПустаяВалюта КАК Валюта3,
	|	NULL КАК ТарифныйРазряд3,
	|	0 КАК Показатель4,
	|	&парамПустаяВалюта КАК Валюта4,
	|	NULL КАК ТарифныйРазряд4,
	|	0 КАК Показатель5,
	|	&парамПустаяВалюта КАК Валюта5,
	|	NULL КАК ТарифныйРазряд5,
	|	0 КАК Показатель6,
	|	&парамПустаяВалюта КАК Валюта6,
	|	NULL КАК ТарифныйРазряд6,
	|	ПлановыеНачисленияДоговорниковОрганизаций.Сотрудник,
	|	ПлановыеНачисленияДоговорниковОрганизаций.ДокументОснование КАК ДокументОснование,
	|	NULL КАК Должность
	|
	|ПОМЕСТИТЬ ВТ_Договорники
	|
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияДоговорниковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокРазличныхДоговорников КАК СписокРазличныхДоговорников
	|		ПО ПлановыеНачисленияДоговорниковОрганизаций.Сотрудник = СписокРазличныхДоговорников.Сотрудник
	|			И ПлановыеНачисленияДоговорниковОрганизаций.ДокументОснование = СписокРазличныхДоговорников.ДокументОснование
	|ГДЕ
	|	ДОБАВИТЬКДАТЕ(ПлановыеНачисленияДоговорниковОрганизаций.ПериодЗавершения, ДЕНЬ, -1) >= &парамНачало
	|	И ПлановыеНачисленияДоговорниковОрганизаций.Период <= &парамКонец
	|	И ПлановыеНачисленияДоговорниковОрганизаций.Организация = &парамГоловнаяОрганизация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ПлановыеНачисленияДоговорниковОрганизаций.Период МЕЖДУ &парамНачало И &парамКонец
	|			ТОГДА ПлановыеНачисленияДоговорниковОрганизаций.Период
	|		ИНАЧЕ &парамНачало
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	ПлановыеНачисленияДоговорниковОрганизаций.ВидРасчета,
	|	&Действует,
	|	ПлановыеНачисленияДоговорниковОрганизаций.Показатель1,
	|	ПлановыеНачисленияДоговорниковОрганизаций.Валюта1,
	|	NULL,
	|	0,
	|	&парамПустаяВалюта,
	|	NULL,
	|	0,
	|	&парамПустаяВалюта,
	|	NULL,
	|	0,
	|	&парамПустаяВалюта,
	|	NULL,
	|	0,
	|	&парамПустаяВалюта,
	|	NULL,
	|	0,
	|	&парамПустаяВалюта,
	|	NULL,
	|	ПлановыеНачисленияДоговорниковОрганизаций.Сотрудник,
	|	ПлановыеНачисленияДоговорниковОрганизаций.ДокументОснование,
	|	NULL
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияДоговорниковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокРазличныхДоговорников КАК СписокРазличныхДоговорников
	|		ПО ПлановыеНачисленияДоговорниковОрганизаций.Сотрудник = СписокРазличныхДоговорников.Сотрудник
	|			И ПлановыеНачисленияДоговорниковОрганизаций.ДокументОснование = СписокРазличныхДоговорников.ДокументОснование
	|ГДЕ
	|	ДОБАВИТЬКДАТЕ(ПлановыеНачисленияДоговорниковОрганизаций.ПериодЗавершения, ДЕНЬ, -1) >= &парамНачало
	|	И ПлановыеНачисленияДоговорниковОрганизаций.Период <= &парамКонец
	|	И ПлановыеНачисленияДоговорниковОрганизаций.Организация = &парамГоловнаяОрганизация 	
	|;
	|
	|ВЫБРАТЬ
	|	Период,
	|	ОсновноеНачисление,
	|	ВидРасчета,
	|	Действие,
	|	
	|	Показатель1,
	|	Валюта1,
	|	ТарифныйРазряд1,
	|	
	|	Показатель2,
	|	Валюта2,
	|	ТарифныйРазряд2,
	|	
	|	Показатель3,
	|	Валюта3,
	|	ТарифныйРазряд3,
	|	
	|	Показатель4,
	|	Валюта4,
	|	ТарифныйРазряд4,
	|	
	|	Показатель5,
	|	Валюта5,
	|	ТарифныйРазряд5,
	|	
	|	Показатель6,
	|	Валюта6,
	|	ТарифныйРазряд6,
	|
	|	Сотрудник КАК Сотрудник,
	|	ДокументОснование КАК ДокументОснование,
	|	Должность,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка) КАК ВидВремениПоТабелю
	|
	|ПОМЕСТИТЬ ВТ_ВсеПлановыеНачисления
	|ИЗ
	|	ВТ_ПлановыеНачисленияСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Период,
	|	ОсновноеНачисление,
	|	ВидРасчета,
	|	Действие,
	|	
	|	Показатель1,
	|	Валюта1,
	|	ТарифныйРазряд1,
	|	
	|	Показатель2,
	|	Валюта2,
	|	ТарифныйРазряд2,
	|	
	|	Показатель3,
	|	Валюта3,
	|	ТарифныйРазряд3,
	|	
	|	Показатель4,
	|	Валюта4,
	|	ТарифныйРазряд4,
	|	
	|	Показатель5,
	|	Валюта5,
	|	ТарифныйРазряд5,
	|	
	|	Показатель6,
	|	Валюта6,
	|	ТарифныйРазряд6,
	|
	|	Сотрудник,
	|	ДокументОснование,
	|	Должность,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка) КАК ВидВремениПоТабелю
	|
	|ИЗ
	|	ВТ_ПлановыеНачисленияЗаПериод
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Период,
	|	ОсновноеНачисление,
	|	ВидРасчета,
	|	Действие,
	|	
	|	Показатель1,
	|	Валюта1,
	|	ТарифныйРазряд1,
	|	
	|	Показатель2,
	|	Валюта2,
	|	ТарифныйРазряд2,
	|	
	|	Показатель3,
	|	Валюта3,
	|	ТарифныйРазряд3,
	|	
	|	Показатель4,
	|	Валюта4,
	|	ТарифныйРазряд4,
	|	
	|	Показатель5,
	|	Валюта5,
	|	ТарифныйРазряд5,
	|	
	|	Показатель6,
	|	Валюта6,
	|	ТарифныйРазряд6,
	|
	|	Сотрудник,
	|	ДокументОснование,
	|	Должность,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка) КАК ВидВремениПоТабелю
	|
	|ИЗ
	|	ВТ_ЗавершениеПлановыхНачислений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МинПериод КАК Период,
	|	ОсновноеНачисление,
	|	ВидРасчета,
	|	Действие,
	|	
	|	Показатель1,
	|	Валюта1,
	|	ТарифныйРазряд1,
	|	
	|	Показатель2,
	|	Валюта2,
	|	ТарифныйРазряд2,
	|	
	|	Показатель3,
	|	Валюта3,
	|	ТарифныйРазряд3,
	|	
	|	Показатель4,
	|	Валюта4,
	|	ТарифныйРазряд4,
	|	
	|	Показатель5,
	|	Валюта5,
	|	ТарифныйРазряд5,
	|	
	|	Показатель6,
	|	Валюта6,
	|	ТарифныйРазряд6,
	|
	|	Сотрудник,
	|	ДокументОснование,
	|	Должность,
	|	ВидИспользованияРабочегоВремени КАК ВидВремениПоТабелю
	|
	|ИЗ
	|	ВТ_СверхурочноеВремяПоТабелю
	|
	|// поставим закрытие тех начислений сверхурочной работы, которые не продолжаются на следующий день
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(НачалоСверхурочногоВремени.МаксПериод, ДЕНЬ, 1) КАК Период,
	|	НачалоСверхурочногоВремени.ОсновноеНачисление,
	|	НачалоСверхурочногоВремени.ВидРасчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить) КАК Действие,
	|	
	|	0 КАК Показатель1,
	|	&парамВалютаРегламентУчета КАК Валюта1,
	|	&парамПустойТарифныйРазряд КАК ТяарифныйРазряд1,
	|	
	|	0 КАК Показатель2,
	|	&парамВалютаРегламентУчета КАК Валюта2,
	|	&парамПустойТарифныйРазряд КАК ТарифныйРазряд2,
	|	
	|	0 КАК Показатель3,
	|	&парамВалютаРегламентУчета КАК Валюта3,
	|	&парамПустойТарифныйРазряд КАК ТарифныйРазряд3,
	|	
	|	0 КАК Показатель4,
	|	&парамВалютаРегламентУчета КАК Валюта4,
	|	&парамПустойТарифныйРазряд КАК ТарифныйРазряд4,
	|	
	|	0 КАК Показатель5,
	|	&парамВалютаРегламентУчета КАК Валюта5,
	|	&парамПустойТарифныйРазряд КАК ТарифныйРазряд5,
	|	
	|	0 КАК Показатель6,
	|	&парамВалютаРегламентУчета КАК Валюта6,
	|	&парамПустойТарифныйРазряд КАК ТарифныйРазряд6,
	|
	|	НачалоСверхурочногоВремени.Сотрудник,
	|	НачалоСверхурочногоВремени.ДокументОснование,
	|	НачалоСверхурочногоВремени.Должность,
	|	НачалоСверхурочногоВремени.ВидИспользованияРабочегоВремени КАК ВидВремениПоТабелю
	|
	|ИЗ
	|	ВТ_СверхурочноеВремяПоТабелю КАК НачалоСверхурочногоВремени
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СверхурочноеВремяПоТабелю КАК СледующееСверхурочноеВремя
	|		ПО НачалоСверхурочногоВремени.Сотрудник = СледующееСверхурочноеВремя.Сотрудник
	|			И НачалоСверхурочногоВремени.ВидРасчета = СледующееСверхурочноеВремя.ВидРасчета
	|			И ДОБАВИТЬКДАТЕ(НачалоСверхурочногоВремени.МаксПериод, ДЕНЬ, 1) = СледующееСверхурочноеВремя.МинПериод
	|ГДЕ
	|	НачалоСверхурочногоВремени.МаксПериод < &парамКонец
	|	И СледующееСверхурочноеВремя.Сотрудник ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Период,
	|	ОсновноеНачисление,
	|	ВидРасчета,
	|	Действие,
	|	
	|	Показатель1,
	|	Валюта1,
	|	ТарифныйРазряд1,
	|	
	|	Показатель2,
	|	Валюта2,
	|	ТарифныйРазряд2,
	|	
	|	Показатель3,
	|	Валюта3,
	|	ТарифныйРазряд3,
	|	
	|	Показатель4,
	|	Валюта4,
	|	ТарифныйРазряд4,
	|	
	|	Показатель5,
	|	Валюта5,
	|	ТарифныйРазряд5,
	|	
	|	Показатель6,
	|	Валюта6,
	|	ТарифныйРазряд6,
	|
	|	Сотрудник,
	|	ДокументОснование,
	|	Должность,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка) КАК ВидВремениПоТабелю
	|
	|ИЗ
	|	ВТ_Договорники
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДокументОснование
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&парамНачало КАК Период,
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.ВидНадбавки КАК ВидНадбавки,
	|
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Показатель1,
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Валюта1,
	|
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Показатель2,
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Валюта2,
	|
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Показатель3,
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Валюта3,
	|
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Показатель4,
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Валюта4,
	|
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Показатель5,
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Валюта5,
	|
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Показатель6,
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Валюта6,
	|
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Должность КАК Должность,
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.ТарифныйРазряд КАК ТарифныйРазряд,
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Действие КАК Действие
	|
	|ПОМЕСТИТЬ ВТ_ШтатноеРасписание
	|ИЗ
	|	РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций.СрезПоследних(
	|			&парамНачало, 
	|			" + УсловиеНаПодразделение + ") КАК НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних
	|ГДЕ
	|	НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.Действие <> &Прекратить
	|			
	|ОБЪЕДИНИТЬ ВСЕ
	|			
	|ВЫБРАТЬ
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Период,
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.ВидНадбавки,
	|
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Показатель1,
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Валюта1,
	|
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Показатель2,
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Валюта2,
	|
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Показатель3,
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Валюта3,
	|
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Показатель4,
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Валюта4,
	|
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Показатель5,
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Валюта5,
	|
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Показатель6,
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Валюта6,
	|
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Должность,
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.ПодразделениеОрганизации,
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.ТарифныйРазряд,
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Действие
	|ИЗ
	|	РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций КАК НадбавкиПоШтатномуРасписаниюОрганизаций
	|ГДЕ
	|	НадбавкиПоШтатномуРасписаниюОрганизаций.Период > &парамНачало
	|	И НадбавкиПоШтатномуРасписаниюОрганизаций.Период <= &парамКонец
	|	И " + УсловиеНаПодразделение + "	
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПодразделениеОрганизации,
	|	Должность,
	|	ТарифныйРазряд
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Работники.Сотрудник КАК Сотрудник,
	|	Работники.Сотрудник.ФизЛицо КАК ФизЛицо,
	|	Работники.ДокументОснование КАК ДокументОснование,
	|	ВЫБОР 
	|		КОГДА Работники.Период >= НачисленияРаботниковОрганизации.Период 
	|				ИЛИ НачисленияРаботниковОрганизации.Период ЕСТЬ NULL 
	|			ТОГДА Работники.Период 
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Период 
	|	КОНЕЦ КАК Период,
	|	Работники.Подходит КАК Подходит,
	|	Работники.Период КАК ПериодРаботники,
	|	НачисленияРаботниковОрганизации.Период КАК ПериодНачисления,
	|	НачисленияРаботниковОрганизации.ОсновноеНачисление КАК ОсновноеНачисление,
	|	НачисленияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|	НачисленияРаботниковОрганизации.ВидРасчета.Наименование КАК ВидРасчетаНаименование,
	|	НачисленияРаботниковОрганизации.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	НачисленияРаботниковОрганизации.ВидРасчета.КатегорияРасчета КАК КатегорияРасчета,	
	|	НачисленияРаботниковОрганизации.ВидРасчета.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
	|	НачисленияРаботниковОрганизации.ВидРасчета.ВидСтажа КАК ВидСтажа,
	|	НачисленияРаботниковОрганизации.ВидРасчета.КоэффициентСтажа КАК КоэффициентСтажа,
	|	НачисленияРаботниковОрганизации.Действие КАК Действие,
	|
	|	ПоказателиНачислений.Показатель1 КАК ПоказательМотивации1,
	|	ПоказателиНачислений.Показатель1ТипПоказателя КАК ТипПоказателя1,
	|	ПоказателиНачислений.Показатель1ВидПоказателя КАК ВидПоказателя1,
	|	НачисленияРаботниковОрганизации.Показатель1,
	|	НачисленияРаботниковОрганизации.Валюта1,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд1,
	|
	|	ПоказателиНачислений.Показатель2 КАК ПоказательМотивации2,
	|	ПоказателиНачислений.Показатель2ТипПоказателя КАК ТипПоказателя2,
	|	ПоказателиНачислений.Показатель2ВидПоказателя КАК ВидПоказателя2,
	|	НачисленияРаботниковОрганизации.Показатель2,
	|	НачисленияРаботниковОрганизации.Валюта2,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд2,
	|
	|	ПоказателиНачислений.Показатель3 КАК ПоказательМотивации3,
	|	ПоказателиНачислений.Показатель3ТипПоказателя КАК ТипПоказателя3,
	|	ПоказателиНачислений.Показатель3ВидПоказателя КАК ВидПоказателя3,
	|	НачисленияРаботниковОрганизации.Показатель3,
	|	НачисленияРаботниковОрганизации.Валюта3,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд3,
	|
	|	ПоказателиНачислений.Показатель4 КАК ПоказательМотивации4,
	|	ПоказателиНачислений.Показатель4ТипПоказателя КАК ТипПоказателя4,
	|	ПоказателиНачислений.Показатель4ВидПоказателя КАК ВидПоказателя4,
	|	НачисленияРаботниковОрганизации.Показатель4,
	|	НачисленияРаботниковОрганизации.Валюта4,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд4,
	|
	|	ПоказателиНачислений.Показатель5 КАК ПоказательМотивации5,
	|	ПоказателиНачислений.Показатель5ТипПоказателя КАК ТипПоказателя5,
	|	ПоказателиНачислений.Показатель5ВидПоказателя КАК ВидПоказателя5,
	|	НачисленияРаботниковОрганизации.Показатель5,
	|	НачисленияРаботниковОрганизации.Валюта5,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд5,
	|
	|	ПоказателиНачислений.Показатель6 КАК ПоказательМотивации6,
	|	ПоказателиНачислений.Показатель6ТипПоказателя КАК ТипПоказателя6,
	|	ПоказателиНачислений.Показатель6ВидПоказателя КАК ВидПоказателя6,
	|	НачисленияРаботниковОрганизации.Показатель6,
	|	НачисленияРаботниковОрганизации.Валюта6,
	|	НачисленияРаботниковОрганизации.ТарифныйРазряд6,
	|
	|	Работники.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Работники.ГрафикРаботы КАК ГрафикРаботы,
	|	НачисленияРаботниковОрганизации.Должность КАК Должность,
	|	НачисленияРаботниковОрганизации.ВидВремениПоТабелю КАК ВидВремениПоТабелю
	|
	|ПОМЕСТИТЬ ВТ_ПлановыеНачисленияИНадбавкиШР
	|ИЗ
	|	" + ТаблицаДвиженийРаботниковТекст + " КАК Работники  
	|
	|	// Присоединим действующие плановые начисления к строкам движений работников с признаком ПОДХОДИТ.
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВсеПлановыеНачисления КАК НачисленияРаботниковОрганизации
	|		ПО Работники.Подходит = ИСТИНА 
	|			И НачисленияРаботниковОрганизации.Сотрудник = Работники.Сотрудник 
	|			И НачисленияРаботниковОрганизации.ДокументОснование = Работники.ДокументОснование
	|
	| ЛЕВОЕ СОЕДИНЕНИЕ " + ПоказателиНачисленийТекст + " КАК ПоказателиНачислений
	|		ПО НачисленияРаботниковОрганизации.ВидРасчета = ПоказателиНачислений.ВидРасчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Работники.Сотрудник,
	|	Работники.Сотрудник.ФизЛицо КАК ФизЛицо,
	|	Работники.ДокументОснование,
	|	ВЫБОР 
	|		КОГДА Работники.Период >= ШтатноеРасписание.Период 
	|				ИЛИ ШтатноеРасписание.Период ЕСТЬ NULL 
	|			ТОГДА Работники.Период 
	|		ИНАЧЕ ШтатноеРасписание.Период 
	|	КОНЕЦ КАК Период,
	|	Работники.Подходит,
	|	Работники.Период КАК ПериодРаботники,
	|	ШтатноеРасписание.Период КАК ПериодНачисления,
	|	ЛОЖЬ КАК ОсновноеНачисление,
	|	ШтатноеРасписание.ВидНадбавки КАК ВидРасчета,
	|	ШтатноеРасписание.ВидНадбавки.Наименование КАК ВидРасчетаНаименование,
	|	ШтатноеРасписание.ВидНадбавки.СпособРасчета КАК СпособРасчета,
	|	ШтатноеРасписание.ВидНадбавки.КатегорияРасчета КАК КатегорияРасчета,
	|	ШтатноеРасписание.ВидНадбавки.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
	|	ШтатноеРасписание.ВидНадбавки.ВидСтажа КАК ВидСтажа,
	|	ШтатноеРасписание.ВидНадбавки.КоэффициентСтажа КАК КоэффициентСтажа,
	|	ШтатноеРасписание.Действие,
	|
	|	ПоказателиНачислений.Показатель1 КАК ПоказательМотивации1,
	|	ПоказателиНачислений.Показатель1ТипПоказателя КАК ТипПоказателя1,
	|	ПоказателиНачислений.Показатель1ВидПоказателя КАК ВидПоказателя1,
	|	ШтатноеРасписание.Показатель1,
	|	ШтатноеРасписание.Валюта1,
	|	ШтатноеРасписание.ТарифныйРазряд КАК ТарифныйРазряд1,
	|
	|	ПоказателиНачислений.Показатель2 КАК ПоказательМотивации2,
	|	ПоказателиНачислений.Показатель2ТипПоказателя КАК ТипПоказателя2,
	|	ПоказателиНачислений.Показатель2ВидПоказателя КАК ВидПоказателя2,
	|	ШтатноеРасписание.Показатель2,
	|	ШтатноеРасписание.Валюта2,
	|	ШтатноеРасписание.ТарифныйРазряд КАК ТарифныйРазряд2,
	|
	|	ПоказателиНачислений.Показатель3 КАК ПоказательМотивации3,
	|	ПоказателиНачислений.Показатель3ТипПоказателя КАК ТипПоказателя3,
	|	ПоказателиНачислений.Показатель3ВидПоказателя КАК ВидПоказателя3,
	|	ШтатноеРасписание.Показатель3,
	|	ШтатноеРасписание.Валюта3,
	|	ШтатноеРасписание.ТарифныйРазряд КАК ТарифныйРазряд3,
	|
	|	ПоказателиНачислений.Показатель4 КАК ПоказательМотивации4,
	|	ПоказателиНачислений.Показатель4ТипПоказателя КАК ТипПоказателя4,
	|	ПоказателиНачислений.Показатель4ВидПоказателя КАК ВидПоказателя4,
	|	ШтатноеРасписание.Показатель4,
	|	ШтатноеРасписание.Валюта4,
	|	ШтатноеРасписание.ТарифныйРазряд КАК ТарифныйРазряд4,
	|
	|	ПоказателиНачислений.Показатель5 КАК ПоказательМотивации5,
	|	ПоказателиНачислений.Показатель5ТипПоказателя КАК ТипПоказателя5,
	|	ПоказателиНачислений.Показатель5ВидПоказателя КАК ВидПоказателя5,
	|	ШтатноеРасписание.Показатель5,
	|	ШтатноеРасписание.Валюта5,
	|	ШтатноеРасписание.ТарифныйРазряд КАК ТарифныйРазряд5,
	|
	|	ПоказателиНачислений.Показатель6 КАК ПоказательМотивации6,
	|	ПоказателиНачислений.Показатель6ТипПоказателя КАК ТипПоказателя6,
	|	ПоказателиНачислений.Показатель6ВидПоказателя КАК ВидПоказателя6,
	|	ШтатноеРасписание.Показатель6,
	|	ШтатноеРасписание.Валюта6,
	|	ШтатноеРасписание.ТарифныйРазряд КАК ТарифныйРазряд6,
	|
	|	Работники.ПодразделениеОрганизации,
	|	Работники.ГрафикРаботы,
	|	Работники.Должность,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка) КАК ВидВремениПоТабелю
	|ИЗ
	|	" + ТаблицаДвиженийРаботниковТекст + " КАК Работники
	|
	|	// Присоединим действующие надбавки согласно штатному расписанию к строкам движений работников с признаком ПОДХОДИТ
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ШтатноеРасписание КАК ШтатноеРасписание
	|		ПО Работники.Подходит = ИСТИНА 
	|			И ШтатноеРасписание.ПодразделениеОрганизации = Работники.ПодразделениеОрганизации 
	|			И ШтатноеРасписание.Должность = Работники.Должность
	|			И ШтатноеРасписание.ТарифныйРазряд = Работники.ТарифныйРазряд
	| ЛЕВОЕ СОЕДИНЕНИЕ " + ПоказателиНачисленийТекст + " КАК ПоказателиНачислений
	|		ПО ШтатноеРасписание.ВидНадбавки = ПоказателиНачислений.ВидРасчета
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РазмерТарифныхСтавок.Должность,
	|	РазмерТарифныхСтавок.ТарифныйРазряд,
	|	РазмерТарифныхСтавок.Размер,
	|	РазмерТарифныхСтавок.Валюта
	|
	|ПОМЕСТИТЬ ВТ_РазмерТарифныхСтавок
	|ИЗ
	|	РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамКонец) КАК РазмерТарифныхСтавок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Должность,
	|	ТарифныйРазряд
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НачисленияРаботниковОрганизации.Сотрудник КАК Сотрудник,
	|	НачисленияРаботниковОрганизации.ДокументОснование КАК ДокументОснование,
	|	НачисленияРаботниковОрганизации.Подходит,
	|	НачисленияРаботниковОрганизации.Период,
	|	НачисленияРаботниковОрганизации.ПериодРаботники,
	|	НачисленияРаботниковОрганизации.ПериодНачисления,
	|	НачисленияРаботниковОрганизации.ОсновноеНачисление КАК ОсновноеНачисление,
	|	НачисленияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|	НачисленияРаботниковОрганизации.ВидРасчетаНаименование КАК ВидРасчетаНаименование,
	|	НачисленияРаботниковОрганизации.СпособРасчета КАК СпособРасчета,
	|	НачисленияРаботниковОрганизации.КатегорияРасчета КАК КатегорияРасчета,
	|	НачисленияРаботниковОрганизации.ПоказательМотивации1 КАК ПоказательМотивации1,
	|	НачисленияРаботниковОрганизации.ПоказательМотивации2 КАК ПоказательМотивации2,
	|	НачисленияРаботниковОрганизации.ПоказательМотивации3 КАК ПоказательМотивации3,
	|	НачисленияРаботниковОрганизации.ПоказательМотивации4 КАК ПоказательМотивации4,
	|	НачисленияРаботниковОрганизации.ПоказательМотивации5 КАК ПоказательМотивации5,
	|	НачисленияРаботниковОрганизации.ПоказательМотивации6 КАК ПоказательМотивации6,
	|	НачисленияРаботниковОрганизации.ТипПоказателя1 КАК ТипПоказателя1,
	|	НачисленияРаботниковОрганизации.ТипПоказателя2 КАК ТипПоказателя2,
	|	НачисленияРаботниковОрганизации.ТипПоказателя3 КАК ТипПоказателя3,
	|	НачисленияРаботниковОрганизации.ТипПоказателя4 КАК ТипПоказателя4,
	|	НачисленияРаботниковОрганизации.ТипПоказателя5 КАК ТипПоказателя5,
	|	НачисленияРаботниковОрганизации.ТипПоказателя6 КАК ТипПоказателя6,
	|	НачисленияРаботниковОрганизации.ВидПоказателя1 КАК ВидПоказателя1,
	|	НачисленияРаботниковОрганизации.ВидПоказателя2 КАК ВидПоказателя2,
	|	НачисленияРаботниковОрганизации.ВидПоказателя3 КАК ВидПоказателя3,
	|	НачисленияРаботниковОрганизации.ВидПоказателя4 КАК ВидПоказателя4,
	|	НачисленияРаботниковОрганизации.ВидПоказателя5 КАК ВидПоказателя5,
	|	НачисленияРаботниковОрганизации.ВидПоказателя6 КАК ВидПоказателя6,
	|	НачисленияРаботниковОрганизации.ВидСтажа КАК ВидСтажа,
	|	НачисленияРаботниковОрганизации.КоэффициентСтажа КАК КоэффициентСтажа,
	|	НачисленияРаботниковОрганизации.Действие КАК Действие,
	|	НачисленияРаботниковОрганизации.ГрафикРаботы,
	|	НачисленияРаботниковОрганизации.ПодразделениеОрганизации,
	|	НачисленияРаботниковОрганизации.Должность,
	|	НачисленияРаботниковОрганизации.ВидВремениПоТабелю,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НачисленияРаботниковОрганизации.ТребуетВводаТарифногоРазряда, ЛОЖЬ)
	|					ИЛИ НачисленияРаботниковОрганизации.ТипПоказателя1 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд1
	|		ИНАЧЕ &парамПустойТарифныйРазряд
	|	КОНЕЦ КАК ТарифныйРазряд1,
	|	ВЫБОР
	|		КОГДА (ЕСТЬNULL(НачисленияРаботниковОрганизации.ТребуетВводаТарифногоРазряда, ЛОЖЬ)
	|					ИЛИ НачисленияРаботниковОрганизации.ТипПоказателя1 = &ТипПоказателяТарифныйРазряд)
	|				И ТарифныеСтавки1.Размер ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеУказанРазмерТарифныхСтавок1,
	|	ВЫБОР
	|		КОГДА (ЕСТЬNULL(НачисленияРаботниковОрганизации.ТребуетВводаТарифногоРазряда, ЛОЖЬ)
	|					ИЛИ НачисленияРаботниковОрганизации.ТипПоказателя1 = &ТипПоказателяТарифныйРазряд)
	|			ТОГДА ТарифныеСтавки1.Размер
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель1
	|	КОНЕЦ КАК Показатель1,
	|	ВЫБОР
	|		КОГДА (ЕСТЬNULL(НачисленияРаботниковОрганизации.ТребуетВводаТарифногоРазряда, ЛОЖЬ)
	|					ИЛИ НачисленияРаботниковОрганизации.ТипПоказателя1 = &ТипПоказателяТарифныйРазряд)
	|			ТОГДА ТарифныеСтавки1.Валюта
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта1 
	|	КОНЕЦ КАК Валюта1,
	|
	|
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя2 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд2
	|		ИНАЧЕ &парамПустойТарифныйРазряд
	|	КОНЕЦ КАК ТарифныйРазряд2,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя2 = &ТипПоказателяТарифныйРазряд
	|				И ТарифныеСтавки2.Размер ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеУказанРазмерТарифныхСтавок2,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя2 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА ТарифныеСтавки2.Размер
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель2
	|	КОНЕЦ КАК Показатель2,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя2 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА ТарифныеСтавки2.Валюта
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта2
	|	КОНЕЦ КАК Валюта2,
	|
	|
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя3 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд3
	|		ИНАЧЕ &парамПустойТарифныйРазряд
	|	КОНЕЦ КАК ТарифныйРазряд3,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя3 = &ТипПоказателяТарифныйРазряд
	|				И ТарифныеСтавки3.Размер ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеУказанРазмерТарифныхСтавок3,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя3 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА ТарифныеСтавки3.Размер
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель3
	|	КОНЕЦ КАК Показатель3,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя3 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА ТарифныеСтавки3.Валюта
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта3
	|	КОНЕЦ КАК Валюта3,
	|
	|
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя4 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд4
	|		ИНАЧЕ &парамПустойТарифныйРазряд
	|	КОНЕЦ КАК ТарифныйРазряд4,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя4 = &ТипПоказателяТарифныйРазряд
	|				И ТарифныеСтавки4.Размер ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеУказанРазмерТарифныхСтавок4,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя4 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА ТарифныеСтавки4.Размер
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель4
	|	КОНЕЦ КАК Показатель4,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя4 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА ТарифныеСтавки4.Валюта
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта4
	|	КОНЕЦ КАК Валюта4,
	|
	|
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя5 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд5
	|		ИНАЧЕ &парамПустойТарифныйРазряд
	|	КОНЕЦ КАК ТарифныйРазряд5,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя5 = &ТипПоказателяТарифныйРазряд
	|				И ТарифныеСтавки5.Размер ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеУказанРазмерТарифныхСтавок5,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя5 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА ТарифныеСтавки5.Размер
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель5
	|	КОНЕЦ КАК Показатель5,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя5 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА ТарифныеСтавки5.Валюта
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта5
	|	КОНЕЦ КАК Валюта5,
	|
	|
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя6 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА НачисленияРаботниковОрганизации.ТарифныйРазряд6
	|		ИНАЧЕ &парамПустойТарифныйРазряд
	|	КОНЕЦ КАК ТарифныйРазряд6,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя6 = &ТипПоказателяТарифныйРазряд
	|				И ТарифныеСтавки6.Размер ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеУказанРазмерТарифныхСтавок6,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя6 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА ТарифныеСтавки6.Размер
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Показатель6
	|	КОНЕЦ КАК Показатель6,
	|	ВЫБОР
	|		КОГДА НачисленияРаботниковОрганизации.ТипПоказателя6 = &ТипПоказателяТарифныйРазряд
	|			ТОГДА ТарифныеСтавки6.Валюта
	|		ИНАЧЕ НачисленияРаботниковОрганизации.Валюта6
	|	КОНЕЦ КАК Валюта6
	|
	|ПОМЕСТИТЬ ВТ_СписокНачислений
	|ИЗ 
	|	ВТ_ПлановыеНачисленияИНадбавкиШР КАК НачисленияРаботниковОрганизации
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазмерТарифныхСтавок КАК ТарифныеСтавки1
	|		ПО НачисленияРаботниковОрганизации.Должность = ТарифныеСтавки1.Должность
	|			И НачисленияРаботниковОрганизации.ТарифныйРазряд1 = ТарифныеСтавки1.ТарифныйРазряд
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазмерТарифныхСтавок КАК ТарифныеСтавки2
	|		ПО НачисленияРаботниковОрганизации.Должность = ТарифныеСтавки2.Должность
	|			И НачисленияРаботниковОрганизации.ТарифныйРазряд2 = ТарифныеСтавки2.ТарифныйРазряд
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазмерТарифныхСтавок КАК ТарифныеСтавки3
	|		ПО НачисленияРаботниковОрганизации.Должность = ТарифныеСтавки3.Должность
	|			И НачисленияРаботниковОрганизации.ТарифныйРазряд3 = ТарифныеСтавки3.ТарифныйРазряд
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазмерТарифныхСтавок КАК ТарифныеСтавки4
	|		ПО НачисленияРаботниковОрганизации.Должность = ТарифныеСтавки4.Должность
	|			И НачисленияРаботниковОрганизации.ТарифныйРазряд4 = ТарифныеСтавки4.ТарифныйРазряд
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазмерТарифныхСтавок КАК ТарифныеСтавки5
	|		ПО НачисленияРаботниковОрганизации.Должность = ТарифныеСтавки5.Должность
	|			И НачисленияРаботниковОрганизации.ТарифныйРазряд5 = ТарифныеСтавки5.ТарифныйРазряд
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РазмерТарифныхСтавок КАК ТарифныеСтавки6
	|		ПО НачисленияРаботниковОрганизации.Должность = ТарифныеСтавки6.Должность
	|			И НачисленияРаботниковОрганизации.ТарифныйРазряд6 = ТарифныеСтавки6.ТарифныйРазряд
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ДокументОснование,
	|	ВидРасчета
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗначенияПоказателейСхемМотивации.Показатель КАК Показатель,
	|	ЗначенияПоказателейСхемМотивации.Подразделение,
	|	ЗначенияПоказателейСхемМотивации.Сотрудник КАК Сотрудник,
	|	ЗначенияПоказателейСхемМотивации.Валюта,
	|	ВЫБОР
	|		КОГДА ЗначенияПоказателейСхемМотивации.Валюта = &парамВалютаРегламентУчета
	|				ИЛИ ЗначенияПоказателейСхемМотивации.Валюта = &парамПустаяВалюта
	|				ИЛИ ЗначенияПоказателейСхемМотивации.Показатель.ТипПоказателя В (&ТипыПоказателейБезВалюты)
	|			ТОГДА 1
	|		ИНАЧЕ ЗначенияПоказателейСхемМотивацииВалюта.Курс
	|	КОНЕЦ КАК Курс,
	|	ВЫБОР
	|		КОГДА ЗначенияПоказателейСхемМотивации.Валюта = &парамВалютаРегламентУчета
	|				ИЛИ ЗначенияПоказателейСхемМотивации.Валюта = &парамПустаяВалюта
	|				ИЛИ ЗначенияПоказателейСхемМотивации.Показатель.ТипПоказателя В (&ТипыПоказателейБезВалюты)
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ЗначенияПоказателейСхемМотивацииВалюта.Курс / ЗначенияПоказателейСхемМотивацииВалюта.Кратность, 0)
	|	КОНЕЦ * ЗначенияПоказателейСхемМотивации.Значение КАК Значение
	|
	|ПОМЕСТИТЬ ВТ_ЗначенияПоказателейСхемМотивации
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейСхемМотивации.СрезПоследних(
	|						&парамНачало,
	|						Организация = &парамОрганизация) КАК ЗначенияПоказателейСхемМотивации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК ЗначенияПоказателейСхемМотивацииВалюта
	|		ПО ЗначенияПоказателейСхемМотивацииВалюта.Период = &парамДатаВалютногоУчета 
	|			И ЗначенияПоказателейСхемМотивации.Валюта = ЗначенияПоказателейСхемМотивацииВалюта.Валюта
	|
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ЗначенияПоказателейСхемМотивации.Показатель.ВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.Ежемесячно)
	|			ТОГДА ВЫБОР
	|					КОГДА НАЧАЛОПЕРИОДА(ЗначенияПоказателейСхемМотивации.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(&парамНачало, МЕСЯЦ)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Показатель
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГрафикиРаботы.ГрафикРаботы КАК ГрафикРаботы,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ГрафикиРаботы.ГрафикРаботы.ИспользуетсяСовместноСПланГрафиком, ЛОЖЬ)
	|			ТОГДА МАКСИМУМ(ЕСТЬNULL(БалансРабочегоВремени.НормаЧасов, 0)) 
	|		ИНАЧЕ СУММА(ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма) 
	|	КОНЕЦ КАК НормаЧасовЗаМесяц
	|
	|ПОМЕСТИТЬ ВТ_НормаВремениПоГрафику
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВЫРАЗИТЬ(Работники.ГрафикРаботы КАК Справочник.ГрафикиРаботы) КАК ГрафикРаботы
	|	ИЗ
	|		" + ТаблицаДвиженийРаботниковТекст + " КАК Работники
	|	ГДЕ
	|		Работники.ДокументОснование = &ПустойДоговор) КАК ГрафикиРаботы
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|		ПО ГрафикиРаботы.ГрафикРаботы = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|			И ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = &парамПоЧасам
	|			И ГрафикиРаботыПоВидамВремени.Месяц = НАЧАЛОПЕРИОДА(&парамНачало, МЕСЯЦ)
	|			И ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&парамНачало, МЕСЯЦ) И КОНЕЦПЕРИОДА(&парамНачало, МЕСЯЦ)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БалансРабочегоВремени КАК БалансРабочегоВремени
	|		ПО ГрафикиРаботы.ГрафикРаботы = БалансРабочегоВремени.ГрафикРаботы 
	|		   И БалансРабочегоВремени.ДатаМесяца = НАЧАЛОПЕРИОДА(&парамНачало, МЕСЯЦ)
	|
	|СГРУППИРОВАТЬ ПО 
	|	ГрафикиРаботы.ГрафикРаботы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГрафикРаботы
	|;	
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтработанноеВремя.Сотрудник,
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени.ВидВремени В (&ОтработанноеВПределахНормы, &ЦелодневноеНеотработанное, &ЧасовоеНеотработанное)
	|				ТОГДА ОтработанноеВремя.ЧасовПоНормеОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НормаЧасовПоТабелюЗаМесяц,
	|	СУММА(ВЫБОР
	|			КОГДА ОтработанноеВремя.ВидИспользованияРабочегоВремени.ВидВремени = &ЧасовоеНеотработанное
	|				ТОГДА ОтработанноеВремя.ЧасовПоНормеОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЧасовПоТабелюЗаМесяцОтклонение
	|
	|ПОМЕСТИТЬ ВТ_ВремяПоТабелю
	|ИЗ
	|	РегистрНакопления.РабочееВремяРаботниковОрганизаций.Обороты(
	|			НАЧАЛОПЕРИОДА(&парамНачало, МЕСЯЦ),
	|			КОНЕЦПЕРИОДА(&парамКонец, МЕСЯЦ),
	|			,
	|			Организация = &парамГоловнаяОрганизация
	|			И (Сотрудник) В (ВЫБРАТЬ Сотрудник ИЗ " + ТаблицаДвиженийРаботниковТекст + ")) КАК ОтработанноеВремя
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтработанноеВремя.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Стажи.Ссылка КАК ФизЛицо,
	|	Стажи.ВидСтажа КАК ВидСтажа,
	|	ДОБАВИТЬКДАТЕ(ДОБАВИТЬКДАТЕ(Стажи.ДатаОтсчета, МЕСЯЦ, - Стажи.РазмерМесяцев), ДЕНЬ, - Стажи.РазмерДней) КАК ДатаОтсчета,
	|	" + ПроведениеРасчетов.СформироватьТекстЗапросаОСтаже("Стажи", "&парамНачало", "ДатаОтсчета", "РазмерМесяцев", "РазмерДней", "НаНачало") + ", 
	|	" + ПроведениеРасчетов.СформироватьТекстЗапросаОСтаже("Стажи", "&парамКонец", "ДатаОтсчета", "РазмерМесяцев", "РазмерДней", "НаКонец") + " 
	|
	|ПОМЕСТИТЬ ВТ_СтажиФизЛиц
	|ИЗ
	|	Справочник.ФизическиеЛица.Стажи КАК Стажи
	|ГДЕ
	|	Стажи.Ссылка В (ВЫБРАТЬ ФизЛицо ИЗ ВТ_СписокРазличныхСотрудников)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидСтажа
	|;
	|
	|ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизацийПоказатели.Показатель КАК Показатель,
	|	ОсновныеНачисленияОрганизацийПоказатели.Показатель.ВозможностьИзменения,
	|	ОсновныеНачисленияОрганизацийПоказатели.НомерСтроки КАК НомерСтроки,
	|	ОсновныеНачисленияОрганизацийПоказатели.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ОсновныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
	|			ТОГДА ИСТИНА
	|		КОГДА ОсновныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
	|			ТОГДА ИСТИНА
	|		КОГДА ОсновныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
	|			ТОГДА ИСТИНА
	|		КОГДА ОсновныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТарифнаяСтавка
	|ПОМЕСТИТЬ ВТ_НеЗапрашиваемыеПриКадровыхПеремещениях
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияОрганизацийПоказатели
	|ГДЕ
	|	(НЕ ОсновныеНачисленияОрганизацийПоказатели.ЗапрашиватьПриКадровыхПеремещениях
	|			ИЛИ ОсновныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
	|			ИЛИ ОсновныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
	|			ИЛИ ОсновныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
	|			ИЛИ ОсновныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка)
	|	И ОсновныеНачисленияОрганизацийПоказатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.Ежемесячно)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДополнительныеНачисленияОрганизацийПоказатели.Показатель,
	|	ДополнительныеНачисленияОрганизацийПоказатели.Показатель.ВозможностьИзменения,
	|	ДополнительныеНачисленияОрганизацийПоказатели.НомерСтроки,
	|	ДополнительныеНачисленияОрганизацийПоказатели.Ссылка,
	|	ВЫБОР
	|		КОГДА ДополнительныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
	|			ТОГДА ИСТИНА
	|		КОГДА ДополнительныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
	|			ТОГДА ИСТИНА
	|		КОГДА ДополнительныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
	|			ТОГДА ИСТИНА
	|		КОГДА ДополнительныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК ДополнительныеНачисленияОрганизацийПоказатели
	|ГДЕ
	|	(НЕ ДополнительныеНачисленияОрганизацийПоказатели.ЗапрашиватьПриКадровыхПеремещениях
	|			ИЛИ ДополнительныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
	|			ИЛИ ДополнительныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
	|			ИЛИ ДополнительныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
	|			ИЛИ ДополнительныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка)
	|	И ДополнительныеНачисленияОрганизацийПоказатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.Ежемесячно)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Показатель
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияОрганизаций.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ОсновныеНачисленияОрганизаций.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
	|		КОГДА ОсновныеНачисленияОрганизаций.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
	|	КОНЕЦ КАК Показатель,
	|	1 КАК НомерСтроки,
	|	ИСТИНА КАК ЭтоТарифнаяСтавка
	|ПОМЕСТИТЬ ВТ_ВводимыеВПлановыхНачисленияхПоказатели
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияОрганизаций.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке))
	|	И ОсновныеНачисленияОрганизаций.ЗачетОтработанногоВремени
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияОрганизацийПоказатели.Ссылка,
	|	ОсновныеНачисленияОрганизацийПоказатели.Показатель,
	|	ОсновныеНачисленияОрганизацийПоказатели.НомерСтроки,
	|	ИСТИНА
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияОрганизацийПоказатели
	|ГДЕ
	|	ОсновныеНачисленияОрганизацийПоказатели.Ссылка.ЗачетОтработанногоВремени
	|	И ОсновныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияОрганизацийПоказатели.Ссылка,
	|	ОсновныеНачисленияОрганизацийПоказатели.Показатель,
	|	ОсновныеНачисленияОрганизацийПоказатели.НомерСтроки,
	|	ЛОЖЬ
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияОрганизацийПоказатели
	|ГДЕ
	|	ОсновныеНачисленияОрганизацийПоказатели.Показатель В
	|			(ВЫБРАТЬ
	|				ВТ_НеЗапрашиваемыеПриКадровыхПеремещениях.Показатель
	|			ИЗ
	|				ВТ_НеЗапрашиваемыеПриКадровыхПеремещениях)
	|	И НЕ ОсновныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисленияОрганизацийПоказатели.Ссылка,
	|	ДополнительныеНачисленияОрганизацийПоказатели.Показатель,
	|	ДополнительныеНачисленияОрганизацийПоказатели.НомерСтроки,
	|	ИСТИНА
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК ДополнительныеНачисленияОрганизацийПоказатели
	|ГДЕ
	|	ДополнительныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка
	|     
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисленияОрганизацийПоказатели.Ссылка,
	|	ДополнительныеНачисленияОрганизацийПоказатели.Показатель,
	|	ДополнительныеНачисленияОрганизацийПоказатели.НомерСтроки,
	|	ЛОЖЬ
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.Показатели КАК ДополнительныеНачисленияОрганизацийПоказатели
	|ГДЕ
	|	ДополнительныеНачисленияОрганизацийПоказатели.Показатель В
	|			(ВЫБРАТЬ
	|				ВТ_НеЗапрашиваемыеПриКадровыхПеремещениях.Показатель
	|			ИЗ
	|				ВТ_НеЗапрашиваемыеПриКадровыхПеремещениях)
	|	И НЕ ДополнительныеНачисленияОрганизацийПоказатели.Показатель.ТарифнаяСтавка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыНачислений.Сотрудник КАК Сотрудник,
	|	ПериодыНачислений.Период,
	|	ПериодыНачислений.ПериодРаботники КАК ПериодРаботники,
	|	ПериодыНачислений.ПериодНачисления КАК ПериодНачисления,
	|	ВводимыеПоказатели.Показатель КАК Показатель,
	|	ВЫБОР
	|		КОГДА ВводимыеПоказатели.НомерСтроки = 1
	|			ТОГДА СписокНачислений.Показатель1
	|		КОГДА ВводимыеПоказатели.НомерСтроки = 2
	|			ТОГДА СписокНачислений.Показатель2
	|		КОГДА ВводимыеПоказатели.НомерСтроки = 3
	|			ТОГДА СписокНачислений.Показатель3
	|		КОГДА ВводимыеПоказатели.НомерСтроки = 4
	|			ТОГДА СписокНачислений.Показатель4
	|		КОГДА ВводимыеПоказатели.НомерСтроки = 5
	|			ТОГДА СписокНачислений.Показатель5
	|		КОГДА ВводимыеПоказатели.НомерСтроки = 6
	|			ТОГДА СписокНачислений.Показатель6
	|	КОНЕЦ КАК ЗначениеПоказателя
	|	
	|ПОМЕСТИТЬ ВТ_ЗначенияВводимыхКадровыхПоказателей
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписокНачислений.Сотрудник КАК Сотрудник,
	|		СписокНачислений.Период КАК Период,
	|		МАКСИМУМ(СписокНачислений.ПериодРаботники) КАК ПериодРаботники,
	|		МАКСИМУМ(СписокНачислений.ПериодНачисления) КАК ПериодНачисления,
	|		СписокНачислений.ВидРасчета КАК ВидРасчета
	|	ИЗ
	|		ВТ_СписокНачислений КАК СписокНачислений
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписокНачислений.Сотрудник,
	|		СписокНачислений.Период,
	|		СписокНачислений.ВидРасчета) КАК ПериодыНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СписокНачислений КАК СписокНачислений
	|		ПО ПериодыНачислений.Сотрудник = СписокНачислений.Сотрудник
	|			И ПериодыНачислений.ВидРасчета = СписокНачислений.ВидРасчета
	|			И ПериодыНачислений.Период = СписокНачислений.Период
	|			И ПериодыНачислений.ПериодРаботники = СписокНачислений.ПериодРаботники
	|			И ПериодыНачислений.ПериодНачисления = СписокНачислений.ПериодНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВводимыеВПлановыхНачисленияхПоказатели КАК ВводимыеПоказатели
	|		ПО (СписокНачислений.ВидРасчета = ВводимыеПоказатели.Ссылка)
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НеВводимыеПоказатели.Ссылка КАК Ссылка,
	|	НеВводимыеПоказатели.НомерСтроки КАК НомерСтроки,
	|	НеВводимыеПоказатели.Показатель КАК Показатель,
	|	НеВводимыеПоказатели.ПоказательВозможностьИзменения КАК ПоказательВозможностьИзменения,
	|	НеВводимыеПоказатели.ЭтоТарифнаяСтавка КАК ЭтоТарифнаяСтавка,
	|	СУММА(ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя) КАК ЗначениеПоказателя,
	|	ЗначенияВводимыхКадровыхПоказателей.Сотрудник КАК Сотрудник,
	|	ЗначенияВводимыхКадровыхПоказателей.Период,
	|	ЗначенияВводимыхКадровыхПоказателей.ПериодРаботники,
	|	ЗначенияВводимыхКадровыхПоказателей.ПериодНачисления
	|ПОМЕСТИТЬ ВТ_ЗначенияВведенныхКадровыхПоказателей
	|ИЗ
	|	ВТ_НеЗапрашиваемыеПриКадровыхПеремещениях КАК НеВводимыеПоказатели
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗначенияВводимыхКадровыхПоказателей КАК ЗначенияВводимыхКадровыхПоказателей
	|		ПО НеВводимыеПоказатели.Показатель = ЗначенияВводимыхКадровыхПоказателей.Показатель
	|ГДЕ
	|	ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	НеВводимыеПоказатели.Ссылка,
	|	НеВводимыеПоказатели.НомерСтроки,
	|	НеВводимыеПоказатели.Показатель,
	|	НеВводимыеПоказатели.ПоказательВозможностьИзменения,
	|	НеВводимыеПоказатели.ЭтоТарифнаяСтавка,
	|	ЗначенияВводимыхКадровыхПоказателей.Сотрудник,
	|	ЗначенияВводимыхКадровыхПоказателей.Период,
	|	ЗначенияВводимыхКадровыхПоказателей.ПериодРаботники,
	|	ЗначенияВводимыхКадровыхПоказателей.ПериодНачисления
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЗначенияПоказателейСУчетомПериодов.ВидРасчета,
	|	ЗначенияПоказателейСУчетомПериодов.НомерСтроки,
	|	ЗначенияПоказателейСУчетомПериодов.Показатель,
	|	ЗначенияПоказателейСУчетомПериодов.ПоказательВозможностьИзменения,
	|	ЗначенияПоказателейСУчетомПериодов.ЭтоТарифнаяСтавка,
	|	ЗначенияПоказателейСУчетомПериодов.ЗначениеПоказателя,
	|	ЗначенияПоказателейСУчетомПериодов.Сотрудник,
	|	ЗначенияПоказателейСУчетомПериодов.Период,
	|	ЗначенияПоказателейСУчетомПериодов.ПериодРаботники,
	|	ЗначенияПоказателейСУчетомПериодов.ПериодНачисления КАК ПериодНачисления,
	|	ЗначенияПоказателейСУчетомПериодов.ПериодНачисленияБезПоказателя
	|ПОМЕСТИТЬ ВТ_ЗначенияПоказателейСУчетомПериодов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПериодыНачислений.Период КАК Период,
	|		ЗначенияВведенныхКадровыхПоказателей.ПериодРаботники КАК ПериодРаботники,
	|		МАКСИМУМ(ЗначенияВведенныхКадровыхПоказателей.ПериодНачисления) КАК ПериодНачисления,
	|		МАКСИМУМ(СписокНачислений.ПериодНачисления) КАК ПериодНачисленияБезПоказателя,
	|		ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя КАК ЗначениеПоказателя,
	|		ПериодыНачислений.ВидРасчета КАК ВидРасчета,
	|		ПериодыНачислений.НомерСтроки КАК НомерСтроки,
	|		ПериодыНачислений.Показатель КАК Показатель,
	|		ПериодыНачислений.ПоказательВозможностьИзменения КАК ПоказательВозможностьИзменения,
	|		ПериодыНачислений.ЭтоТарифнаяСтавка КАК ЭтоТарифнаяСтавка,
	|		ПериодыНачислений.Сотрудник КАК Сотрудник
	|	ИЗ
	|		(ВЫБРАТЬ
	|			СписокНачислений.Период КАК Период,
	|			МАКСИМУМ(ЗначенияВведенныхКадровыхПоказателей.Период) КАК ПериодЗначенияПоказателя,
	|			ЗначенияВведенныхКадровыхПоказателей.Ссылка КАК ВидРасчета,
	|			ЗначенияВведенныхКадровыхПоказателей.НомерСтроки КАК НомерСтроки,
	|			ЗначенияВведенныхКадровыхПоказателей.Показатель КАК Показатель,
	|			ЗначенияВведенныхКадровыхПоказателей.ПоказательВозможностьИзменения КАК ПоказательВозможностьИзменения,
	|			ЗначенияВведенныхКадровыхПоказателей.ЭтоТарифнаяСтавка КАК ЭтоТарифнаяСтавка,
	|			ЗначенияВведенныхКадровыхПоказателей.Сотрудник КАК Сотрудник
	|		ИЗ
	|			ВТ_СписокНачислений КАК СписокНачислений
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияВведенныхКадровыхПоказателей КАК ЗначенияВведенныхКадровыхПоказателей
	|				ПО СписокНачислений.Сотрудник = ЗначенияВведенныхКадровыхПоказателей.Сотрудник
	|					И СписокНачислений.Период >= ЗначенияВведенныхКадровыхПоказателей.Период
	|					И СписокНачислений.ПериодРаботники = ЗначенияВведенныхКадровыхПоказателей.ПериодРаботники
	|					И СписокНачислений.ВидРасчета = ЗначенияВведенныхКадровыхПоказателей.Ссылка
	|		ГДЕ
	|			НЕ ЗначенияВведенныхКадровыхПоказателей.Сотрудник ЕСТЬ NULL 
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СписокНачислений.Период,
	|			ЗначенияВведенныхКадровыхПоказателей.Ссылка,
	|			ЗначенияВведенныхКадровыхПоказателей.НомерСтроки,
	|			ЗначенияВведенныхКадровыхПоказателей.Показатель,
	|			ЗначенияВведенныхКадровыхПоказателей.ПоказательВозможностьИзменения,
	|			ЗначенияВведенныхКадровыхПоказателей.ЭтоТарифнаяСтавка,
	|			ЗначенияВведенныхКадровыхПоказателей.Сотрудник) КАК ПериодыНачислений
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияВведенныхКадровыхПоказателей КАК ЗначенияВведенныхКадровыхПоказателей
	|			ПО ПериодыНачислений.Сотрудник = ЗначенияВведенныхКадровыхПоказателей.Сотрудник
	|				И ПериодыНачислений.ПериодЗначенияПоказателя = ЗначенияВведенныхКадровыхПоказателей.Период
	|				И ПериодыНачислений.ВидРасчета = ЗначенияВведенныхКадровыхПоказателей.Ссылка
	|				И ПериодыНачислений.Показатель = ЗначенияВведенныхКадровыхПоказателей.Показатель
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СписокНачислений КАК СписокНачислений
	|			ПО ПериодыНачислений.Сотрудник = СписокНачислений.Сотрудник
	|				И ПериодыНачислений.ВидРасчета = СписокНачислений.ВидРасчета
	|				И ПериодыНачислений.Период = СписокНачислений.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПериодыНачислений.Период,
	|		ЗначенияВведенныхКадровыхПоказателей.ПериодРаботники,
	|		ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя,
	|		ПериодыНачислений.ВидРасчета,
	|		ПериодыНачислений.НомерСтроки,
	|		ПериодыНачислений.Показатель,
	|		ПериодыНачислений.ПоказательВозможностьИзменения,
	|		ПериодыНачислений.ЭтоТарифнаяСтавка,
	|		ПериодыНачислений.Сотрудник
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПериодыЗначений.ПериодЗначенияПоказателя,
	|		СписокНачислений.ПериодРаботники,
	|		ПериодыЗначений.ПериодЗначенияПоказателя,
	|		МАКСИМУМ(СписокНачислений.ПериодНачисления),
	|		ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя,
	|		ПериодыЗначений.ВидРасчета,
	|		ПериодыЗначений.НомерСтроки,
	|		ПериодыЗначений.Показатель,
	|		ПериодыЗначений.ПоказательВозможностьИзменения,
	|		ПериодыЗначений.ЭтоТарифнаяСтавка,
	|		ПериодыЗначений.Сотрудник
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МАКСИМУМ(СписокНачислений.Период) КАК Период,
	|			ЗначенияВведенныхКадровыхПоказателей.Период КАК ПериодЗначенияПоказателя,
	|			ЗначенияВведенныхКадровыхПоказателей.Ссылка КАК ВидРасчета,
	|			ЗначенияВведенныхКадровыхПоказателей.НомерСтроки КАК НомерСтроки,
	|			ЗначенияВведенныхКадровыхПоказателей.Показатель КАК Показатель,
	|			ЗначенияВведенныхКадровыхПоказателей.ПоказательВозможностьИзменения КАК ПоказательВозможностьИзменения,
	|			ЗначенияВведенныхКадровыхПоказателей.ЭтоТарифнаяСтавка КАК ЭтоТарифнаяСтавка,
	|			ЗначенияВведенныхКадровыхПоказателей.Сотрудник КАК Сотрудник
	|		ИЗ
	|			ВТ_ЗначенияВведенныхКадровыхПоказателей КАК ЗначенияВведенныхКадровыхПоказателей
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СписокНачислений КАК СписокНачислений
	|				ПО ЗначенияВведенныхКадровыхПоказателей.Сотрудник = СписокНачислений.Сотрудник
	|					И ЗначенияВведенныхКадровыхПоказателей.ПериодРаботники = СписокНачислений.ПериодРаботники
	|					И ЗначенияВведенныхКадровыхПоказателей.Ссылка = СписокНачислений.ВидРасчета
	|					И ЗначенияВведенныхКадровыхПоказателей.Период > СписокНачислений.Период
	|		ГДЕ
	|			НЕ СписокНачислений.Сотрудник ЕСТЬ NULL 
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗначенияВведенныхКадровыхПоказателей.Ссылка,
	|			ЗначенияВведенныхКадровыхПоказателей.НомерСтроки,
	|			ЗначенияВведенныхКадровыхПоказателей.Показатель,
	|			ЗначенияВведенныхКадровыхПоказателей.ПоказательВозможностьИзменения,
	|			ЗначенияВведенныхКадровыхПоказателей.ЭтоТарифнаяСтавка,
	|			ЗначенияВведенныхКадровыхПоказателей.Сотрудник,
	|			ЗначенияВведенныхКадровыхПоказателей.Период) КАК ПериодыЗначений
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияВведенныхКадровыхПоказателей КАК ЗначенияВведенныхКадровыхПоказателей
	|			ПО ПериодыЗначений.Сотрудник = ЗначенияВведенныхКадровыхПоказателей.Сотрудник
	|				И ПериодыЗначений.ВидРасчета = ЗначенияВведенныхКадровыхПоказателей.Ссылка
	|				И ПериодыЗначений.ПериодЗначенияПоказателя = ЗначенияВведенныхКадровыхПоказателей.Период
	|				И ПериодыЗначений.Показатель = ЗначенияВведенныхКадровыхПоказателей.Показатель
	|				И ПериодыЗначений.НомерСтроки = ЗначенияВведенныхКадровыхПоказателей.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СписокНачислений КАК СписокНачислений
	|			ПО ПериодыЗначений.Сотрудник = СписокНачислений.Сотрудник
	|				И ПериодыЗначений.ВидРасчета = СписокНачислений.ВидРасчета
	|				И ПериодыЗначений.Период = СписокНачислений.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПериодыЗначений.ПериодЗначенияПоказателя,
	|		СписокНачислений.ПериодРаботники,
	|		ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя,
	|		ПериодыЗначений.ВидРасчета,
	|		ПериодыЗначений.НомерСтроки,
	|		ПериодыЗначений.Показатель,
	|		ПериодыЗначений.ПоказательВозможностьИзменения,
	|		ПериодыЗначений.ЭтоТарифнаяСтавка,
	|		ПериодыЗначений.Сотрудник,
	|		ПериодыЗначений.ПериодЗначенияПоказателя) КАК ЗначенияПоказателейСУчетомПериодов
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписокНачислений.Сотрудник.Наименование КАК СотрудникНаименование,
	|	СписокНачислений.Сотрудник КАК Сотрудник,
	|	СписокНачислений.Сотрудник.ФизЛицо КАК ФизЛицо,
	|	СписокНачислений.ДокументОснование,
	|	СписокНачислений.Подходит,
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И НЕ ЗначенияВведенныхКадровыхПоказателей.Показатель ЕСТЬ NULL 
	|				И ЗначенияВведенныхКадровыхПоказателей.Показатель <> &ПустойПоказатель
	|			ТОГДА ЗначенияВведенныхКадровыхПоказателей.Период
	|		ИНАЧЕ СписокНачислений.Период
	|	КОНЕЦ КАК Период,
	|	СписокНачислений.ПериодРаботники,
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И НЕ ЗначенияВведенныхКадровыхПоказателей.Показатель ЕСТЬ NULL 
	|				И ЗначенияВведенныхКадровыхПоказателей.Показатель <> &ПустойПоказатель
	|			ТОГДА ЗначенияВведенныхКадровыхПоказателей.ПериодНачисления
	|		ИНАЧЕ СписокНачислений.ПериодНачисления
	|	КОНЕЦ КАК ПериодНачисления,
	|	СписокНачислений.ОсновноеНачисление КАК ОсновноеНачисление,
	|	СписокНачислений.ВидРасчета,
	|	СписокНачислений.ВидРасчетаНаименование КАК ВидРасчетаНаименование,	
	|	СписокНачислений.Действие КАК Действие,
	|	СписокНачислений.СпособРасчета КАК СпособРасчета,	
	|	СписокНачислений.КатегорияРасчета КАК КатегорияРасчета,	
	|
	|	ШкалаКоэффициентовСтажа.Величина КАК КоэффициентСтажа,
	|	ШкалаСледКоэффициентовСтажа.Величина КАК СледКоэффициентСтажа,
	|	ДЕНЬ(Стажи.ДатаОтсчета) КАК ДеньСменыКоэффициентаСтажа,	
	|
	|
	|	// Показатель1
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации1 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации1.Значение ЕСТЬ NULL
	|			ТОГДА ЗначенияПоказателейСхемМотивации1.Курс
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНачислений.Валюта1 = &парамВалютаРегламентУчета 
	|						ИЛИ СписокНачислений.Валюта1 = &парамПустаяВалюта
	|						ИЛИ СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|					ТОГДА 1
	|				ИНАЧЕ Валюты1.Курс 
	|			  КОНЕЦ
	|	КОНЕЦ КАК КурсВалюты1,
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации1 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации1.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации1.Валюта
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНачислений.Валюта1 = &парамПустаяВалюта
	|						ИЛИ СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|					ТОГДА &парамВалютаРегламентУчета
	|				ИНАЧЕ СписокНачислений.Валюта1
	|			  КОНЕЦ
	|	КОНЕЦ КАК Валюта1,
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации1 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации1.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации1.Значение
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета) 
	|				И СписокНачислений.ПоказательМотивации1 <> &ПустойПоказатель
	|				И НЕ (ЗначенияВведенныхКадровыхПоказателей.Показатель ЕСТЬ NULL)
	|				И ЗначенияВведенныхКадровыхПоказателей.Показатель <> &ПустойПоказатель
	|				И ЗначенияВведенныхКадровыхПоказателей.НомерСтроки = 1
	|			ТОГДА ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя
	|		ИНАЧЕ ЕСТЬNULL(СписокНачислений.Показатель1, 0) * ВЫБОР
	|																КОГДА СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|																		ИЛИ СписокНачислений.Валюта1 = &парамВалютаРегламентУчета
	|																		ИЛИ СписокНачислений.Валюта1 = &парамПустаяВалюта
	|																		ИЛИ СписокНачислений.ТипПоказателя1 В (&ТипыПоказателейБезВалюты)
	|																	ТОГДА 1
	|																ИНАЧЕ ЕСТЬNULL(Валюты1.Курс / Валюты1.Кратность, 0)
	|														  КОНЕЦ
	|	КОНЕЦ КАК Показатель1,
	|	СписокНачислений.ТарифныйРазряд1,
	|	СписокНачислений.НеУказанРазмерТарифныхСтавок1,
	|
	|
	|	// Показатель2
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации2 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации2.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации2.Курс
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНачислений.Валюта2 = &парамВалютаРегламентУчета 
	|						ИЛИ СписокНачислений.Валюта2 = &парамПустаяВалюта
	|						ИЛИ СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|					ТОГДА 1
	|				ИНАЧЕ Валюты2.Курс 
	|			  КОНЕЦ
	|	КОНЕЦ КАК КурсВалюты2,
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации2 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации2.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации2.Валюта
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНачислений.Валюта2 = &парамПустаяВалюта
	|						ИЛИ СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|					ТОГДА &парамВалютаРегламентУчета
	|				ИНАЧЕ СписокНачислений.Валюта2
	|			  КОНЕЦ
	|	КОНЕЦ КАК Валюта2,
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации2 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации2.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации2.Значение
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета) 
	|				И СписокНачислений.ПоказательМотивации2 <> &ПустойПоказатель
	|				И НЕ (ЗначенияВведенныхКадровыхПоказателей.Показатель ЕСТЬ NULL)
	|				И ЗначенияВведенныхКадровыхПоказателей.Показатель <> &ПустойПоказатель
	|				И ЗначенияВведенныхКадровыхПоказателей.НомерСтроки = 2
	|			ТОГДА ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя
	|		ИНАЧЕ ЕСТЬNULL(СписокНачислений.Показатель2, 0) * ВЫБОР
	|																КОГДА СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|																		ИЛИ СписокНачислений.Валюта2 = &парамВалютаРегламентУчета
	|																		ИЛИ СписокНачислений.Валюта2 = &парамПустаяВалюта
	|																		ИЛИ СписокНачислений.ТипПоказателя2 В (&ТипыПоказателейБезВалюты)
	|																	ТОГДА 1
	|																ИНАЧЕ ЕСТЬNULL(Валюты2.Курс / Валюты2.Кратность, 0)
	|														  КОНЕЦ
	|	КОНЕЦ КАК Показатель2,
	|	СписокНачислений.ТарифныйРазряд2,
	|	СписокНачислений.НеУказанРазмерТарифныхСтавок2,
	|
	|
	|	// Показатель3
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации3 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации3.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации3.Курс
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНачислений.Валюта3 = &парамВалютаРегламентУчета 
	|						ИЛИ СписокНачислений.Валюта3 = &парамПустаяВалюта
	|						ИЛИ СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|					ТОГДА 1
	|				ИНАЧЕ Валюты3.Курс 
	|			  КОНЕЦ
	|	КОНЕЦ КАК КурсВалюты3,
	|	ВЫБОР
	|		КОГДА СписокНачислений.ВидРасчета.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации3 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации3.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации3.Валюта
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНачислений.Валюта3 = &парамПустаяВалюта
	|						ИЛИ СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|					ТОГДА &парамВалютаРегламентУчета
	|				ИНАЧЕ СписокНачислений.Валюта3
	|			  КОНЕЦ
	|	КОНЕЦ КАК Валюта3,
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации3 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации3.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации3.Значение
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета) 
	|				И СписокНачислений.ПоказательМотивации3 <> &ПустойПоказатель
	|				И НЕ (ЗначенияВведенныхКадровыхПоказателей.Показатель ЕСТЬ NULL)
	|				И ЗначенияВведенныхКадровыхПоказателей.Показатель <> &ПустойПоказатель
	|				И ЗначенияВведенныхКадровыхПоказателей.НомерСтроки = 3
	|			ТОГДА ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя
	|		ИНАЧЕ ЕСТЬNULL(СписокНачислений.Показатель3, 0) * ВЫБОР
	|																КОГДА СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|																		ИЛИ СписокНачислений.Валюта3 = &парамВалютаРегламентУчета
	|																		ИЛИ СписокНачислений.Валюта3 = &парамПустаяВалюта
	|																		ИЛИ СписокНачислений.ТипПоказателя3 В (&ТипыПоказателейБезВалюты)
	|																	ТОГДА 1
	|																ИНАЧЕ ЕСТЬNULL(Валюты3.Курс / Валюты3.Кратность, 0)
	|														  КОНЕЦ
	|	КОНЕЦ КАК Показатель3,
	|	СписокНачислений.ТарифныйРазряд3,
	|	СписокНачислений.НеУказанРазмерТарифныхСтавок3,
	|
	|
	|	// Показатель4
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации4 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации4.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации4.Курс
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНачислений.Валюта4 = &парамВалютаРегламентУчета 
	|						ИЛИ СписокНачислений.Валюта4 = &парамПустаяВалюта
	|						ИЛИ СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|					ТОГДА 1
	|				ИНАЧЕ Валюты4.Курс 
	|			  КОНЕЦ
	|	КОНЕЦ КАК КурсВалюты4,
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации4 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации4.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации4.Валюта
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНачислений.Валюта4 = &парамПустаяВалюта
	|						ИЛИ СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|					ТОГДА &парамВалютаРегламентУчета
	|				ИНАЧЕ СписокНачислений.Валюта4
	|			  КОНЕЦ
	|	КОНЕЦ КАК Валюта4,
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации4 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации4.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации4.Значение
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета) 
	|				И СписокНачислений.ПоказательМотивации4 <> &ПустойПоказатель
	|				И НЕ (ЗначенияВведенныхКадровыхПоказателей.Показатель ЕСТЬ NULL)
	|				И ЗначенияВведенныхКадровыхПоказателей.Показатель <> &ПустойПоказатель
	|				И ЗначенияВведенныхКадровыхПоказателей.НомерСтроки = 4
	|			ТОГДА ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя
	|		ИНАЧЕ ЕСТЬNULL(СписокНачислений.Показатель4, 0) * ВЫБОР
	|																КОГДА СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|																		ИЛИ СписокНачислений.Валюта4 = &парамВалютаРегламентУчета
	|																		ИЛИ СписокНачислений.Валюта4 = &парамПустаяВалюта
	|																		ИЛИ СписокНачислений.ТипПоказателя4 В (&ТипыПоказателейБезВалюты)
	|																	ТОГДА 1
	|																ИНАЧЕ ЕСТЬNULL(Валюты4.Курс / Валюты4.Кратность, 0)
	|														  КОНЕЦ
	|	КОНЕЦ КАК Показатель4,
	|	СписокНачислений.ТарифныйРазряд4,
	|	СписокНачислений.НеУказанРазмерТарифныхСтавок4,
	|
	|
	|	// Показатель5
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации5 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации5.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации5.Курс
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНачислений.Валюта5 = &парамВалютаРегламентУчета 
	|						ИЛИ СписокНачислений.Валюта5 = &парамПустаяВалюта
	|						ИЛИ СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|					ТОГДА 1
	|				ИНАЧЕ Валюты5.Курс 
	|			  КОНЕЦ
	|	КОНЕЦ КАК КурсВалюты5,
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации5 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации5.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации5.Валюта
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНачислений.Валюта5 = &парамПустаяВалюта
	|						ИЛИ СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|					ТОГДА &парамВалютаРегламентУчета
	|				ИНАЧЕ СписокНачислений.Валюта5
	|			  КОНЕЦ
	|	КОНЕЦ КАК Валюта5,
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации5 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации5.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации5.Значение
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета) 
	|				И СписокНачислений.ПоказательМотивации5 <> &ПустойПоказатель
	|				И НЕ (ЗначенияВведенныхКадровыхПоказателей.Показатель ЕСТЬ NULL)
	|				И ЗначенияВведенныхКадровыхПоказателей.Показатель <> &ПустойПоказатель
	|				И ЗначенияВведенныхКадровыхПоказателей.НомерСтроки = 5
	|			ТОГДА ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя
	|		ИНАЧЕ ЕСТЬNULL(СписокНачислений.Показатель5, 0) * ВЫБОР
	|																КОГДА СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|																		ИЛИ СписокНачислений.Валюта5 = &парамВалютаРегламентУчета
	|																		ИЛИ СписокНачислений.Валюта5 = &парамПустаяВалюта
	|																		ИЛИ СписокНачислений.ТипПоказателя5 В (&ТипыПоказателейБезВалюты)
	|																	ТОГДА 1
	|																ИНАЧЕ ЕСТЬNULL(Валюты5.Курс / Валюты5.Кратность, 0)
	|														  КОНЕЦ
	|	КОНЕЦ КАК Показатель5,
	|	СписокНачислений.ТарифныйРазряд5,
	|	СписокНачислений.НеУказанРазмерТарифныхСтавок5,
	|
	|
	|	// Показатель6
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации6 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации6.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации6.Курс
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНачислений.Валюта6 = &парамВалютаРегламентУчета 
	|						ИЛИ СписокНачислений.Валюта6 = &парамПустаяВалюта
	|						ИЛИ СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|					ТОГДА 1
	|				ИНАЧЕ Валюты6.Курс 
	|			  КОНЕЦ
	|	КОНЕЦ КАК КурсВалюты6,
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации6 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации6.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации6.Валюта
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписокНачислений.Валюта6 = &парамПустаяВалюта
	|						ИЛИ СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|					ТОГДА &парамВалютаРегламентУчета
	|				ИНАЧЕ СписокНачислений.Валюта6
	|			  КОНЕЦ
	|	КОНЕЦ КАК Валюта6,
	|	ВЫБОР
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И СписокНачислений.ПоказательМотивации6 <> &ПустойПоказатель
	|				И НЕ ЗначенияПоказателейСхемМотивации6.Значение ЕСТЬ NULL 
	|			ТОГДА ЗначенияПоказателейСхемМотивации6.Значение
	|		КОГДА СписокНачислений.СпособРасчета В (&парамСписокУпрСпособовРасчета) 
	|				И СписокНачислений.ПоказательМотивации6 <> &ПустойПоказатель
	|				И НЕ (ЗначенияВведенныхКадровыхПоказателей.Показатель ЕСТЬ NULL)
	|				И ЗначенияВведенныхКадровыхПоказателей.Показатель <> &ПустойПоказатель
	|				И ЗначенияВведенныхКадровыхПоказателей.НомерСтроки = 6
	|			ТОГДА ЗначенияВведенныхКадровыхПоказателей.ЗначениеПоказателя
	|		ИНАЧЕ ЕСТЬNULL(СписокНачислений.Показатель6, 0) * ВЫБОР
	|																КОГДА СписокНачислений.СпособРасчета в (&парамМассивСпособовРасчетовБезВалюты)
	|																		ИЛИ СписокНачислений.Валюта6 = &парамВалютаРегламентУчета
	|																		ИЛИ СписокНачислений.Валюта6 = &парамПустаяВалюта
	|																		ИЛИ СписокНачислений.ТипПоказателя6 В (&ТипыПоказателейБезВалюты)
	|																	ТОГДА 1
	|																ИНАЧЕ ЕСТЬNULL(Валюты6.Курс / Валюты6.Кратность, 0)
	|														  КОНЕЦ
	|	КОНЕЦ КАК Показатель6,
	|	СписокНачислений.ТарифныйРазряд6,
	|	СписокНачислений.НеУказанРазмерТарифныхСтавок6,
	|
	|	
	|	СписокНачислений.ГрафикРаботы,
	|	ЕСТЬNULL(СписокНачислений.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ) КАК СуммированныйУчетРабочегоВремени,
    |	ЕСТЬNULL(СписокНачислений.ГрафикРаботы.ДлительностьРабочейНедели, 0) КАК ДлительностьРабочейНедели,
	|	СписокНачислений.ГрафикРаботы.ВидГрафика КАК ВидГрафика,
	|	ЕСТЬNULL(ДанныеБалансаРабочегоВремени.НормаЧасовЗаМесяц, 0) КАК НормаЧасовЗаМесяц,
	|	ВремяПоТабелю.НормаЧасовПоТабелюЗаМесяц КАК НормаЧасовПоТабелюЗаМесяц,
	|	ВремяПоТабелю.ЧасовПоТабелюЗаМесяцОтклонение КАК ЧасовПоТабелюЗаМесяцОтклонение,
	|	СписокНачислений.ПодразделениеОрганизации,
	|	СписокНачислений.Должность,
	|	СписокНачислений.ВидВремениПоТабелю";
	
	// если не перерасчет - проверяем проведенность в расчетном периоде
	Если ПерерассчитываемыйДокумент = Неопределено Тогда
		ОсновнойТекстЗапроса = ОсновнойТекстЗапроса + ",
		|	ВЫБОР 
		|		КОГДА ОсновныеИДополнительныеНачисления.Сотрудник ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ 
		|		ИНАЧЕ ИСТИНА 
		|	КОНЕЦ КАК УжеПроведен";
	Иначе
		ОсновнойТекстЗапроса = ОсновнойТекстЗапроса + ",
		|	ЛОЖЬ КАК УжеПроведен";
	КонецЕсли;
	
	ОсновнойТекстЗапроса = ОсновнойТекстЗапроса + "
	|ИЗ
	|	ВТ_СписокНачислений КАК СписокНачислений
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтажиФизЛиц КАК Стажи
	|		ПО СписокНачислений.ВидСтажа = Стажи.ВидСтажа
	|			И СписокНачислений.Сотрудник.Физлицо = Стажи.ФизЛицо
	|			И (СписокНачислений.СпособРасчета В (&СпособыРасчетаОтСтажа))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШкалаКоэффициентовСтажа КАК ШкалаКоэффициентовСтажа
	|		ПО СписокНачислений.КоэффициентСтажа = ШкалаКоэффициентовСтажа.КоэффициентСтажа
	|			И (СписокНачислений.СпособРасчета В (&СпособыРасчетаОтСтажа))
	|			И (Стажи.НаНачалоРазмерЛет * 12 + Стажи.НаНачалоРазмерМесяцев) >= ШкалаКоэффициентовСтажа.СтажС 
	|			И (Стажи.НаНачалоРазмерЛет * 12 + Стажи.НаНачалоРазмерМесяцев) <  ВЫБОР
	|																				КОГДА ШкалаКоэффициентовСтажа.СтажПо = 0 ТОГДА 999999
	|																				ИНАЧЕ ШкалаКоэффициентовСтажа.СтажПо
	|																			  КОНЕЦ
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШкалаКоэффициентовСтажа КАК ШкалаСледКоэффициентовСтажа
	|		ПО СписокНачислений.КоэффициентСтажа = ШкалаСледКоэффициентовСтажа.КоэффициентСтажа
	|			И (СписокНачислений.СпособРасчета В (&СпособыРасчетаОтСтажа))
	|			И (Стажи.НаКонецРазмерЛет * 12 + Стажи.НаКонецРазмерМесяцев) >= ШкалаСледКоэффициентовСтажа.СтажС
	|			И (Стажи.НаКонецРазмерЛет * 12 + Стажи.НаКонецРазмерМесяцев) < ВЫБОР
	|																				КОГДА ШкалаСледКоэффициентовСтажа.СтажПо = 0 ТОГДА 999999
	|																				ИНАЧЕ ШкалаСледКоэффициентовСтажа.СтажПо
	|																		   КОНЕЦ
	|
	|	// курсы валюты для плановых начислений
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты1
	|		ПО Валюты1.Период = &парамДатаВалютногоУчета И Валюты1.Валюта = СписокНачислений.Валюта1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты2
	|		ПО Валюты2.Период = &парамДатаВалютногоУчета И Валюты2.Валюта = СписокНачислений.Валюта2
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты3
	|		ПО Валюты3.Период = &парамДатаВалютногоУчета И Валюты3.Валюта = СписокНачислений.Валюта3
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты4
	|		ПО Валюты4.Период = &парамДатаВалютногоУчета И Валюты4.Валюта = СписокНачислений.Валюта4
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты5
	|		ПО Валюты5.Период = &парамДатаВалютногоУчета И Валюты5.Валюта = СписокНачислений.Валюта5
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты6
	|		ПО Валюты6.Период = &парамДатаВалютногоУчета И Валюты6.Валюта = СписокНачислений.Валюта6
	|
	|	// показатели мотивации
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации1
	|		ПО СписокНачислений.ПоказательМотивации1 = ЗначенияПоказателейСхемМотивации1.Показатель
	|			И ВЫБОР
	|				КОГДА СписокНачислений.ВидПоказателя1 = &ВидПоказателяИндивидуальный
	|					ТОГДА СписокНачислений.Сотрудник = ЗначенияПоказателейСхемМотивации1.Сотрудник
	|				КОГДА СписокНачислений.ВидПоказателя1 = &ВидПоказателяПоПодразделению
	|					ТОГДА СписокНачислений.ПодразделениеОрганизации = ЗначенияПоказателейСхемМотивации1.Подразделение
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации2
	|		ПО СписокНачислений.ПоказательМотивации2 = ЗначенияПоказателейСхемМотивации2.Показатель
	|			И ВЫБОР
	|				КОГДА СписокНачислений.ВидПоказателя2 = &ВидПоказателяИндивидуальный
	|					ТОГДА СписокНачислений.Сотрудник = ЗначенияПоказателейСхемМотивации2.Сотрудник
	|				КОГДА СписокНачислений.ВидПоказателя2 = &ВидПоказателяПоПодразделению
	|					ТОГДА СписокНачислений.ПодразделениеОрганизации = ЗначенияПоказателейСхемМотивации2.Подразделение
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации3
	|		ПО СписокНачислений.ПоказательМотивации3 = ЗначенияПоказателейСхемМотивации3.Показатель
	|			И ВЫБОР
	|				КОГДА СписокНачислений.ВидПоказателя3 = &ВидПоказателяИндивидуальный
	|					ТОГДА СписокНачислений.Сотрудник = ЗначенияПоказателейСхемМотивации3.Сотрудник
	|				КОГДА СписокНачислений.ВидПоказателя3 = &ВидПоказателяПоПодразделению
	|					ТОГДА СписокНачислений.ПодразделениеОрганизации = ЗначенияПоказателейСхемМотивации3.Подразделение
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации4
	|		ПО СписокНачислений.ПоказательМотивации4 = ЗначенияПоказателейСхемМотивации4.Показатель
	|			И ВЫБОР
	|				КОГДА СписокНачислений.ВидПоказателя4 = &ВидПоказателяИндивидуальный
	|					ТОГДА СписокНачислений.Сотрудник = ЗначенияПоказателейСхемМотивации4.Сотрудник
	|				КОГДА СписокНачислений.ВидПоказателя4 = &ВидПоказателяПоПодразделению
	|					ТОГДА СписокНачислений.ПодразделениеОрганизации = ЗначенияПоказателейСхемМотивации4.Подразделение
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|	
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации5
	|		ПО СписокНачислений.ПоказательМотивации5 = ЗначенияПоказателейСхемМотивации5.Показатель
	|			И ВЫБОР
	|				КОГДА СписокНачислений.ВидПоказателя5 = &ВидПоказателяИндивидуальный
	|					ТОГДА СписокНачислений.Сотрудник = ЗначенияПоказателейСхемМотивации5.Сотрудник
	|				КОГДА СписокНачислений.ВидПоказателя5 = &ВидПоказателяПоПодразделению
	|					ТОГДА СписокНачислений.ПодразделениеОрганизации = ЗначенияПоказателейСхемМотивации5.Подразделение
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|	
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации6
	|		ПО СписокНачислений.ПоказательМотивации6 = ЗначенияПоказателейСхемМотивации6.Показатель
	|			И ВЫБОР
	|				КОГДА СписокНачислений.ВидПоказателя6 = &ВидПоказателяИндивидуальный
	|					ТОГДА СписокНачислений.Сотрудник = ЗначенияПоказателейСхемМотивации6.Сотрудник
	|				КОГДА СписокНачислений.ВидПоказателя6 = &ВидПоказателяПоПодразделению
	|					ТОГДА СписокНачислений.ПодразделениеОрганизации = ЗначенияПоказателейСхемМотивации6.Подразделение
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|
	|	// данные баланса рабочего времени
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НормаВремениПоГрафику КАК ДанныеБалансаРабочегоВремени
	|		ПО СписокНачислений.ГрафикРаботы = ДанныеБалансаРабочегоВремени.ГрафикРаботы
	|
	|	// данные нормы времени из табеля
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВремяПоТабелю КАК ВремяПоТабелю
	|		ПО СписокНачислений.Сотрудник = ВремяПоТабелю.Сотрудник
	|
	|	// размеры показателей, введенные в других начислениях
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСУчетомПериодов КАК ЗначенияВведенныхКадровыхПоказателей
	|		ПО СписокНачислений.Сотрудник = ЗначенияВведенныхКадровыхПоказателей.Сотрудник
	|			И СписокНачислений.ВидРасчета = ЗначенияВведенныхКадровыхПоказателей.ВидРасчета
	|			И СписокНачислений.ПериодРаботники = ЗначенияВведенныхКадровыхПоказателей.ПериодРаботники
	|			И СписокНачислений.ПериодНачисления = ЗначенияВведенныхКадровыхПоказателей.ПериодНачисленияБезПоказателя
	|";
	
	Если ПериодНачисления = Перечисления.ПериодНачисленияЗарплаты.ПерваяПоловинаТекущегоМесяца Тогда
	
		ОсновнойТекстЗапроса = ОсновнойТекстЗапроса + "
		|
		|	// выборка сведений о уже выполненных начислениях за первую половину месяца
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			РасчетПервойПоловиныМесяца.ФизЛицо,
		|			РасчетПервойПоловиныМесяца.Сотрудник,
		|			РасчетПервойПоловиныМесяца.ВидРасчета,
		|			ТаблицаДвиженийРаботников.ДокументОснование
		|		ИЗ
		|			РегистрНакопления.РасчетПервойПоловиныМесяца КАК РасчетПервойПоловиныМесяца
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ТаблицаДвиженийРаботниковТекст + " КАК ТаблицаДвиженийРаботников
		|				ПО РасчетПервойПоловиныМесяца.ФизЛицо = ТаблицаДвиженийРаботников.ФизЛицо
		|					И РасчетПервойПоловиныМесяца.Сотрудник = ТаблицаДвиженийРаботников.Сотрудник
		|					И ВЫБОР
		|						КОГДА РасчетПервойПоловиныМесяца.ДокументОснование ССЫЛКА Документ.ДоговорНаВыполнениеРаботСФизЛицом
		|							ТОГДА РасчетПервойПоловиныМесяца.ДокументОснование
		|						ИНАЧЕ &ПустойДоговор
		|					КОНЕЦ = ТаблицаДвиженийРаботников.ДокументОснование
		|		ГДЕ
		|			РасчетПервойПоловиныМесяца.Организация = &парамОрганизация
		|			И РасчетПервойПоловиныМесяца.Регистратор <> &парамРегистратор
		|			И РасчетПервойПоловиныМесяца.Период МЕЖДУ НАЧАЛОПЕРИОДА(&парамНачало, МЕСЯЦ) И КОНЕЦПЕРИОДА(&парамНачало, МЕСЯЦ)
		|			И (РасчетПервойПоловиныМесяца.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
		|				ИЛИ РасчетПервойПоловиныМесяца.ВидРасчета ССЫЛКА ПланВидовРасчета.ДополнительныеНачисленияОрганизаций)) КАК ОсновныеИДополнительныеНачисления
		|		ПО СписокНачислений.Сотрудник = ОсновныеИДополнительныеНачисления.Сотрудник
		|			И СписокНачислений.ДокументОснование = ОсновныеИДополнительныеНачисления.ДокументОснование
		|			И СписокНачислений.ВидРасчета = ОсновныеИДополнительныеНачисления.ВидРасчета";
		
	ИначеЕсли ПерерассчитываемыйДокумент = Неопределено Тогда // если не перерасчет - проверяем проведенность в расчетном периоде
	
		ОсновнойТекстЗапроса = ОсновнойТекстЗапроса + "
		|
		|	// Выборка сведений о уже выполненных начислениях за отработанное время и фиксированной суммой
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|			&ПустойДоговор КАК ДокументОснование,
		|			ОсновныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|			ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|			ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|			ОсновныеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ОбозначениеВТабелеУчетаРабочегоВремени
		|		ИЗ
		|			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
		|		
		|		ГДЕ
		|			ОсновныеНачисления.ПериодРегистрации = &парамПериодРегистрации
		|			И ОсновныеНачисления.ПериодДействияНачало >= &парамНачало
		|			И ОсновныеНачисления.ПериодДействияКонец <= &парамКонец
		|			И ОсновныеНачисления.Организация = &парамГоловнаяОрганизация 
		|			И НЕ ОсновныеНачисления.Сторно
		|			И ОсновныеНачисления.Регистратор <> &парамРегистратор
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|			ДополнительныеНачисления.ДокументОснование КАК ДокументОснование,
		|			ДополнительныеНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|			ДополнительныеНачисления.ВидРасчета КАК ВидРасчета,
		|			ДополнительныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|			ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПустаяСсылка) КАК ОбозначениеВТабелеУчетаРабочегоВремени
		|		ИЗ
		|			РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
		|		
		|		ГДЕ
		|			ДополнительныеНачисления.ПериодРегистрации МЕЖДУ &парамПериодРегистрации И КОНЕЦПЕРИОДА(&парамПериодРегистрации, МЕСЯЦ)
		|			И ДополнительныеНачисления.БазовыйПериодНачало >= &парамНачало
		|			И ДополнительныеНачисления.БазовыйПериодКонец <= &парамКонец
		|			И ДополнительныеНачисления.Организация = &парамГоловнаяОрганизация
		|			И НЕ ДополнительныеНачисления.Сторно
		|			И ДополнительныеНачисления.Регистратор <> &парамРегистратор
		|
		|) Как ОсновныеИДополнительныеНачисления
		|	ПО ОсновныеИДополнительныеНачисления.Сотрудник = СписокНачислений.Сотрудник 
		|		И ОсновныеИДополнительныеНачисления.ДокументОснование = СписокНачислений.ДокументОснование 
		|		И ОсновныеИДополнительныеНачисления.ВидРасчета = СписокНачислений.ВидРасчета
		|		И ВЫБОР
		|			КОГДА ОсновныеИДополнительныеНачисления.СпособРасчета В (&парамСписокСпособовРасчетовФиксированнойСуммой)
		|					И ОсновныеИДополнительныеНачисления.ОбозначениеВТабелеУчетаРабочегоВремени НЕ В (&КлассификаторПразд, &КлассификаторВых, &КлассификаторСверх)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ОсновныеИДополнительныеНачисления.ПодразделениеОрганизации = СписокНачислений.ПодразделениеОрганизации
		|		КОНЕЦ";
		
	КонецЕсли;
	
	ОсновнойТекстЗапроса = ОсновнойТекстЗапроса + "
	|
	|ГДЕ
	|	// исключим из выборки строки начислений соответствующие началу назначений (подходит = истина) и не имеющие видов начислений
	|	(ВЫБОР КОГДА СписокНачислений.Подходит ТОГДА НЕ((СписокНачислений.ВидРасчета) ЕСТЬ NULL ) ИНАЧЕ ИСТИНА КОНЕЦ)
	|	" + ?(УсловиеНаВидРасчета <> "", " И " + УсловиеНаВидРасчета, "") + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	СотрудникНаименование,
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.ДокументОснование,
	|	СписокНачислений.ПериодРаботники,
	|	СписокНачислений.ПериодНачисления,
	|	СписокНачислений.ОсновноеНачисление Убыв, // основное начисление должно встретиться в выборке первым
	|	СписокНачислений.ВидРасчета";

	Запрос.Текст = ОсновнойТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	НачисленияВыборка = РезультатЗапроса.Выбрать();
		
    ТЗНачисления = СформироватьТаблицуНачислений(НачисленияВыборка, ОкончаниеПериодаЗаполнения);
	
	ТипОсновныхНачислений = Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций");
	
	НаборЗаписейДляПроверки = РегистрыРасчета.ОсновныеНачисленияРаботниковОрганизаций.СоздатьНаборЗаписей();
	НаборЗаписейДляПроверки.мВыполнятьВспомогательныеРасчеты = Ложь;
	Если Ссылка.Пустая() Тогда
		СcылкаОбъекта = Документы.НачислениеЗарплатыРаботникамОрганизаций.ПолучитьСсылку();
		УстановитьСсылкуНового(СcылкаОбъекта);
	Иначе
		СcылкаОбъекта = Ссылка;
	КонецЕсли;
	НаборЗаписейДляПроверки.Отбор.Регистратор.Значение = СcылкаОбъекта;
	
	Для	Каждого	НачислениеИзТаблицыЗначений	Из ТЗНачисления Цикл
		
		Если ТипЗнч(НачислениеИзТаблицыЗначений.ВидРасчета)	= ТипОсновныхНачислений Тогда

			НоваяСтрока	=	Начисления.Добавить();

			ЗаполнитьЗначенияСвойств(НоваяСтрока, НачислениеИзТаблицыЗначений);
			// прочие реквизиты
			НоваяСтрока.Авторасчет				=	Истина;
			

			Движение = НаборЗаписейДляПроверки.Добавить();
			
			// свойства
			Движение.ПериодРегистрации	  = ПериодРегистрации;
			Движение.ВидРасчета			  = НачислениеИзТаблицыЗначений.ВидРасчета;
			Движение.ПериодДействияНачало = НачислениеИзТаблицыЗначений.ДатаНачала;
			Движение.ПериодДействияКонец  = НачислениеИзТаблицыЗначений.ДатаОкончания;
			
			// измерения
			Движение.Сотрудник            = НачислениеИзТаблицыЗначений.Сотрудник;
			Движение.ФизЛицо              = НачислениеИзТаблицыЗначений.ФизЛицо;
			Движение.Организация          = ГоловнаяОрганизация;
			
			// реквизиты поддержки графика
			Движение.ГрафикРаботы 		  = НачислениеИзТаблицыЗначений.ГрафикРаботы;
			Движение.ВидУчетаВремени	  = ПроведениеРасчетов.ПолучитьВидУчетаВремени(НачислениеИзТаблицыЗначений.СпособРасчета, НачислениеИзТаблицыЗначений.СуммированныйУчетРабочегоВремени);
			
		Иначе
			НоваяСтрока	=	ДополнительныеНачисления.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, НачислениеИзТаблицыЗначений);
			// прочие реквизиты
			НоваяСтрока.Авторасчет		=	Истина;
			
		КонецЕсли;
	КонецЦикла;
	
	// выполним удаление строк табличной части, которые соответствуют полностью вытесняемым видам расчета
	// проверку выполним через фактический период действия
	НаборЗаписейДляПроверки.Записать(Истина, Ложь, Истина, Ложь);
	ЗапросПроверки = Новый Запрос(
	"ВЫБРАТЬ 
	|	Начисления.Сотрудник,
	|	Начисления.ФизЛицо,
	|	Начисления.ВидРасчета,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.НомерСтроки
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ &парамНачисления КАК Начисления
	|ИНДЕКСИРОВАТЬ ПО Сотрудник, ФизЛицо, ВидРасчета;
	|/////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(Регистратор = &парамСсылка) КАК ОсновныеНачисленияРаботниковОрганизацииФактическийПериодДействия
	|		ПО ОсновныеНачисленияРаботниковОрганизации.НомерСтроки = ОсновныеНачисленияРаботниковОрганизацииФактическийПериодДействия.НомерСтроки 
	|			И ОсновныеНачисленияРаботниковОрганизации.Регистратор = ОсновныеНачисленияРаботниковОрганизацииФактическийПериодДействия.Регистратор 
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО 	(Начисления.Сотрудник = ОсновныеНачисленияРаботниковОрганизации.Сотрудник)
	|			И (Начисления.ФизЛицо = ОсновныеНачисленияРаботниковОрганизации.ФизЛицо)
	|			И (Начисления.ВидРасчета = ОсновныеНачисленияРаботниковОрганизации.ВидРасчета)
	|			И (Начисления.ДатаНачала = ОсновныеНачисленияРаботниковОрганизации.ПериодДействияНачало)
	|			И (КОНЕЦПЕРИОДА(Начисления.ДатаОкончания, День) = КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизации.ПериодДействияКонец, День))
	|
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизации.Регистратор = &парамСсылка И
	|	((ОсновныеНачисленияРаботниковОрганизацииФактическийПериодДействия.Регистратор) ЕСТЬ NULL )
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки УБЫВ");
	
	ЗапросПроверки.УстановитьПараметр("парамСсылка", Ссылка);	
	ЗапросПроверки.УстановитьПараметр("парамНачисления", Начисления.Выгрузить());

	СтрокиКУдалению = ЗапросПроверки.Выполнить().Выгрузить();
	// удалим проверочный набор записей
	НаборЗаписейДляПроверки.Очистить();
	НаборЗаписейДляПроверки.Записать(Истина, Ложь, Истина, Ложь);
	
	Для Каждого СтрокаТЗ Из СтрокиКУдалению Цикл
		Начисления.Удалить(СтрокаТЗ.НомерСтроки - 1);
	КонецЦикла;
	// конец удаления строк табличной части, которые соответствуют полностью вытесняемым видам расчета
	
КонецФункции // Автозаполнение()

// Процедура рассчитывает ресурсы для начислений
// и заполняет реквизит Результат соответствующих табличных частей документа
Процедура Рассчитать(Физлицо = Неопределено, КомментироватьРасчет = Ложь) Экспорт
	
	НачатьТранзакцию();
	Отказ = Ложь;
	
	УчетнаяПолитикаПоПерсоналуОрганизации = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация];
	Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Организация,
																	Организация,
																	глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц"),
																	Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	
	//массивы для хранения индексов строк табличных частей,
	//используются для расчета по одному сотруднику
	Если Физлицо = Неопределено Тогда
		МассивИндексыСтрокНачисления = Неопределено;
		МассивИндексыСтрокДополнительныеНачисления = Неопределено;
	Иначе
		МассивИндексыСтрокНачисления = Новый Массив();
		МассивИндексыСтрокДополнительныеНачисления = Новый Массив();
	КонецЕсли;
																	
	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	// позиционируем выборку
	ВыборкаПоШапкеДокумента.Следующий();
	
	// Создадим рабочие наборы записей
	НаборОсновныеНачисления = РегистрыРасчета.ОсновныеНачисленияРаботниковОрганизаций.СоздатьНаборЗаписей();
	НаборОсновныеНачисления.Отбор.Регистратор.Значение = Ссылка;
	НаборОсновныеНачисления.мВыполнятьВспомогательныеРасчеты = Ложь;
	
	НаборДопНачисления = РегистрыРасчета.ДополнительныеНачисленияРаботниковОрганизаций.СоздатьНаборЗаписей();
	НаборДопНачисления.Отбор.Регистратор.Значение = Ссылка;
	
	НаборРасчетСреднего = РегистрыРасчета.РасчетСреднегоЗаработка.СоздатьНаборЗаписей();
	НаборРасчетСреднего.Отбор.Регистратор.Значение = Ссылка;
	
	// Если встретим почасовое отклонение, то записываем движения в регистр РабочееВремяРаботниковОрганизаций
	НаборЗаписейРабочееВремя = РегистрыНакопления.РабочееВремяРаботниковОрганизаций.СоздатьНаборЗаписей();	
    НаборЗаписейРабочееВремя.Отбор.Регистратор.Значение = Ссылка;
    
	// получим реквизиты табличной части
	ВыборкаПоНачислениям = СформироватьЗапросПоНачисления(ВыборкаПоШапкеДокумента, , ФизЛицо, "Расчет").Выбрать();
	Пока ВыборкаПоНачислениям.Следующий() Цикл
		ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоНачислениям, Отказ, "", "Расчет");
		Если НЕ Отказ Тогда
			// Заполним записи в наборах записей регистров
			ДобавитьСтрокуОсновныхНачислений(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям, НаборОсновныеНачисления);
			ДобавитьСтрокуРабочегоВремени(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям, НаборЗаписейРабочееВремя);

			Если НЕ (Физлицо = Неопределено)  Тогда
				МассивИндексыСтрокНачисления.Добавить(ВыборкаПоНачислениям.НомерСтроки-1);
			КонецЕсли;
			
		КонецЕсли;	
	КонецЦикла;
	
	ВыборкаПоДопНачислениям = СформироватьЗапросПоДопНачисления(ВыборкаПоШапкеДокумента, , ФизЛицо, "Расчет").Выбрать();
	Пока ВыборкаПоДопНачислениям.Следующий() Цикл
		ПроверитьЗаполнениеСтрокиДопНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоДопНачислениям, Отказ, "", "Расчет");
		Если НЕ Отказ Тогда
			// Заполним записи в наборах записей регистров
			ДобавитьСтрокуДопНачислений(ВыборкаПоШапкеДокумента, ВыборкаПоДопНачислениям, НаборДопНачисления);

			Если НЕ Физлицо = Неопределено Тогда
				МассивИндексыСтрокДополнительныеНачисления.Добавить(ВыборкаПоДопНачислениям.НомерСтроки-1);
			КонецЕсли;
			
		КонецЕсли;	
	КонецЦикла;

	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат;
	КонецЕсли; 
	
	НаборЗаписейРабочееВремя.Записать();	
	
	// Получим дополнительные записи, имеющие признак сторно, которые необходимо добавить 
	// в текущий набор для того, чтобы в результате сохранения получился максимальный 
	// фактический период действия
	ТаблицаСторноЗаписей = НаборОсновныеНачисления.ПолучитьДополнение();
	Для Каждого СтрокаСторно Из ТаблицаСторноЗаписей Цикл
		// Заполним записи в наборе записей регистра
		// и в табличной части
		ДобавитьСтрокуСторно(НаборОсновныеНачисления, Начисления, СтрокаСторно, МассивИндексыСтрокНачисления);
	КонецЦикла;
	
	// перед тем как начать расчет, сформированные движения надо записать - 
	// по ним чуть позже будем получать дополнительные данные для расчетов

	// рассчитываем записи
	// при этом передаем не только набор записей регистра расчета, но и набор записей регисра 
	// накопления со сведениями об отработанном времени
	ПроведениеРасчетов.РассчитатьЗаписиРегистраРасчета("ОсновныеНачисленияРаботниковОрганизаций", НаборОсновныеНачисления, НаборРасчетСреднего, ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ВыборкаПоШапкеДокумента.Организация, Начисления, , Налогоплательщик, МассивИндексыСтрокНачисления, КомментироватьРасчет);
	// запишем результат расчета для расчета доп. начислений
	НаборОсновныеНачисления.Записать(Истина, Истина);
	
	ПроведениеРасчетов.РассчитатьЗаписиРегистраРасчета("ДополнительныеНачисленияРаботниковОрганизаций", НаборДопНачисления, НаборРасчетСреднего, ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ВыборкаПоШапкеДокумента.Организация, ДополнительныеНачисления, , Налогоплательщик, МассивИндексыСтрокДополнительныеНачисления, КомментироватьРасчет);

	// Удаляем движения
	НаборОсновныеНачисления.Очистить();
	НаборОсновныеНачисления.Записать();
	
	НаборДопНачисления.Очистить();
	НаборДопНачисления.Записать();
	
	НаборРасчетСреднего.Очистить();
	НаборРасчетСреднего.Записать();

	НаборЗаписейРабочееВремя.Очистить();
	НаборЗаписейРабочееВремя.Записать();
	
	// Завершаем транзакцию
	ЗафиксироватьТранзакцию();	
	
КонецПроцедуры  // Рассчитать()

// Выполняет перерасчет по заданному списку сотрудников
// Если передан пустой список физлиц - перерасчет не проводится
// Если в качестве списка физлиц передан не массив, а НеОпределено - перерасчет по всем физлицам 
// регистратора по которым требуется перерасчет
//
// Параметры
// 	Сотрудники - список значений - ссылки на сотрудников
// Возвращаемое значение
//  Нет
//
Процедура Перерассчитать(Сотрудники = Неопределено) Экспорт
	
	// проверим можно ли что-то делать с документом
	ОписаниеПричиныОтказа = "";
	Если ПроведениеРасчетов.ДокументНельзяИзменятьЗаднимЧислом(Ссылка, ОписаниеПричиныОтказа) Тогда
		ВызватьИсключение(ОписаниеПричиныОтказа);
	КонецЕсли;

	НачатьТранзакцию();

	// получим список перерассчитываемых сотрудников
	Если Сотрудники = Неопределено Тогда
		
		// таблица СотрудникиДляПерерасчета
		// Список сотрудников по которым необходимо выполнить перерасчет
		// Поля:
		//		Сотрудник
		// Описание:
		// Получает список неповторяющихся сотрудников по которым есть записи
		// перерасчета в одной из таблиц перерасчета - по основным или дополнительным начислениям
		//
		СотрудникиДляПерерасчета = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Перерасчет.Сотрудник
		|ИЗ
		|	(ВЫБРАТЬ
		|		Перерасчет.Сотрудник КАК Сотрудник
		|	ИЗ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ПерерасчетОсновныхНачислений КАК Перерасчет
		|	ГДЕ
		|		Перерасчет.ОбъектПерерасчета = &парамРегистратор
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Перерасчет.Сотрудник
		|	ИЗ
		|		РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций.ПерерасчетДополнительныхНачислений КАК Перерасчет
		|	ГДЕ
		|		Перерасчет.ОбъектПерерасчета = &парамРегистратор
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗаполнениеПлановыхНачислений.Сотрудник
		|	ИЗ
		|		РегистрСведений.ЗаполнениеПлановыхНачислений КАК ЗаполнениеПлановыхНачислений
		|	ГДЕ
		|		ЗаполнениеПлановыхНачислений.ОбъектЗаполнения = &парамРегистратор) КАК Перерасчет";
		
		Запрос = Новый Запрос(СотрудникиДляПерерасчета);
		Запрос.УстановитьПараметр("парамРегистратор", Ссылка);
		СотрудникиСписок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
		
	Иначе
		
		СотрудникиСписок = Сотрудники;
		
	КонецЕсли;

    // если не перерассчитываем никого - возврат
	Если СотрудникиСписок.Количество() = 0 Тогда
		ОтменитьТранзакцию();
		Возврат;
	КонецЕсли;
	
	ИсчислениеНалоговСтруктурныхЕдиниц = глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц");
	Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Организация,
																	Организация,
																	ИсчислениеНалоговСтруктурныхЕдиниц,
																	Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	
	// читаем все данные
	Прочитать();
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	Движения.ОсновныеНачисленияРаботниковОрганизаций.Прочитать();
	Движения.ДополнительныеНачисленияРаботниковОрганизаций.Прочитать();
	Движения.ВзаиморасчетыСРаботникамиОрганизаций.Прочитать();
	Движения.ВыплаченныеДоходыРаботникамОрганизацийНУ.Прочитать();
	Движения.ИПНСведенияОДоходах.Прочитать();
	Движения.ОПВСведенияОДоходах.Прочитать();
	Движения.СНСведенияОДоходах.Прочитать();
	Движения.СОСведенияОДоходах.Прочитать();
	Движения.ВОСМССведенияОДоходах.Прочитать();
	Движения.ООСМССведенияОДоходах.Прочитать();
	
	// позиционируем выборку
	ВыборкаПоШапкеДокумента.Следующий();
	
	////////////////////////////////////////////////////////////////////////
	// Основные и дополнительные начисления
	
	// перерассчитываем записи начислений
	// при этом передаем не только набор записей регистра расчета, но и набор записей регистра 
	// накопления со сведениями об отработанном времени
	ПроведениеРасчетов.ПереРассчитатьЗаписиРегистраРасчета("ОсновныеНачисленияРаботниковОрганизаций", Движения.ОсновныеНачисленияРаботниковОрганизаций, СотрудникиСписок, Движения.РасчетСреднегоЗаработка, ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ВыборкаПоШапкеДокумента.Организация, Начисления, , Налогоплательщик);
    // запишем без выполнения пересчета фактического периода действия
	Движения.ОсновныеНачисленияРаботниковОрганизаций.Записать(Истина, Истина);
	
	ПроведениеРасчетов.ПереРассчитатьЗаписиРегистраРасчета("ДополнительныеНачисленияРаботниковОрганизаций", Движения.ДополнительныеНачисленияРаботниковОрганизаций, СотрудникиСписок, Движения.РасчетСреднегоЗаработка, ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ВыборкаПоШапкеДокумента.Организация, ДополнительныеНачисления, , Налогоплательщик);
    // запишем набор
	Движения.ДополнительныеНачисленияРаботниковОрганизаций.Записать(Истина, Истина);
	
	// записываем документ перед вызовом СформироватьВзаиморасчетыСРаботниками
	Записать();
	
	////////////////////////////////////////////////////////////////////////
	// регистры накопления
	
	// сначала удалим сведения о взаиморасчетах с перерассчитанными работниками
	МассивНаборыЗаписей = Новый Массив();
	МассивНаборыЗаписей.Добавить(Движения.ВзаиморасчетыСРаботникамиОрганизаций);
	МассивНаборыЗаписей.Добавить(Движения.ВыплаченныеДоходыРаботникамОрганизацийНУ);
	МассивНаборыЗаписей.Добавить(Движения.ИПНСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ОПВСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.СНСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ОППВСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.СОСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ВОСМССведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ООСМССведенияОДоходах);

	СтруктураПоиска = Новый Структура("ФизЛицо");
	
	Для Каждого НаборЗаписей Из МассивНаборыЗаписей Цикл
	
		НаборЗаписей.мТаблицаДвижений = НаборЗаписей.Выгрузить();
		НаборЗаписей.мТаблицаДвижений.Индексы.Добавить("ФизЛицо");
		
		Для Каждого ЭлементСписка Из СотрудникиСписок Цикл
		    СтруктураПоиска.ФизЛицо = ЭлементСписка.ФизЛицо;
			
		    НайденныеСтроки = НаборЗаписей.мТаблицаДвижений.НайтиСтроки(СтруктураПоиска);
		    
		    Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		    	НаборЗаписей.мТаблицаДвижений.Удалить(НайденнаяСтрока);
		    КонецЦикла;
		    
		КонецЦикла;
	
	КонецЦикла;
	
	// теперь сформируем новые движения по регистрам накопления для перерассчитанных работников
	ВыборкаПоСтрокамДокумента = СформироватьЗапросПоНачисления(ВыборкаПоШапкеДокумента, Истина, СотрудникиСписок, "Перерасчет").Выбрать();
	Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл
		ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, ИсчислениеНалоговСтруктурныхЕдиниц);
	КонецЦикла;

	ВыборкаПоСтрокамДокумента = СформироватьЗапросПоДопНачисления(ВыборкаПоШапкеДокумента, Истина, СотрудникиСписок, "Перерасчет").Выбрать();
	Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл
		ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, ИсчислениеНалоговСтруктурныхЕдиниц);
	КонецЦикла;
	
	// запишем движения регистров накопления в базу
	Для Каждого НаборЗаписей Из МассивНаборыЗаписей Цикл
	    ОбщегоНазначения.СвернутьТаблицуДвиженийРегистраНакопления(НаборЗаписей);
	    НаборЗаписей.мТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
	    НаборЗаписей.Загрузить(НаборЗаписей.мТаблицаДвижений);
	    НаборЗаписей.Записать();
	КонецЦикла;

	////////////////////////////////////////////////////////////////////////
	// Удалим записи перерасчета по которым выполнен перерасчет
	Для Н = 1 По 2 Цикл
		
		Если Н = 1 Тогда
			НаборЗаписей = РегистрыРасчета.ОсновныеНачисленияРаботниковОрганизаций.Перерасчеты.ПерерасчетОсновныхНачислений.СоздатьНаборЗаписей();
		Иначе	
		    НаборЗаписей = РегистрыРасчета.ДополнительныеНачисленияРаботниковОрганизаций.Перерасчеты.ПерерасчетДополнительныхНачислений.СоздатьНаборЗаписей();
		КонецЕсли; 
		
		НаборЗаписей.Отбор.ОбъектПерерасчета.Значение = Ссылка;
		Если Сотрудники <> Неопределено Тогда
			НаборЗаписей.Прочитать();
			СтрокиКУдалению = Новый Массив;
			Для Каждого СтрокаПерерасчета Из НаборЗаписей Цикл
				Если Сотрудники.НайтиПоЗначению(СтрокаПерерасчета.Сотрудник) <> Неопределено Тогда
					СтрокиКУдалению.Добавить(СтрокаПерерасчета);
				КонецЕсли;
			КонецЦикла;
			Для Каждого Строка Из СтрокиКУдалению Цикл
				НаборЗаписей.Удалить(Строка);
			КонецЦикла;
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
	КонецЦикла; 
	
	НаборПерезаполнения = РегистрыСведений.ЗаполнениеПлановыхНачислений.СоздатьНаборЗаписей();
	НаборПерезаполнения.Отбор.ОбъектЗаполнения.Использование = Истина;
	НаборПерезаполнения.Отбор.ОбъектЗаполнения.ВидСравнения  = ВидСравнения.Равно;
	НаборПерезаполнения.Отбор.ОбъектЗаполнения.Значение 	 = Ссылка;
	НаборПерезаполнения.Записать();

	ЗафиксироватьТранзакцию();
	
КонецПроцедуры  // Перерассчитать()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  нет
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);

	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДанныеДокумента.Дата,
	               |	ДанныеДокумента.ПериодРегистрации,
	               |	ВЫБОР
	               |		КОГДА ДанныеДокумента.Организация.ГоловнаяОрганизация = &парамПустаяОрганизация
	               |			ТОГДА ДанныеДокумента.Организация
	               |		ИНАЧЕ ДанныеДокумента.Организация.ГоловнаяОрганизация
	               |	КОНЕЦ КАК ГоловнаяОрганизация,
	               |	ДанныеДокумента.Организация,
	               |	ДанныеДокумента.ПерерассчитываемыйДокумент КАК ПерерассчитываемыйДокумент,
	               |	ДанныеДокумента.ПерерассчитываемыйДокумент.ПериодРегистрации КАК ПериодПерерасчета,
	               |	ДанныеДокумента.ПерерассчитываемыйДокумент.Организация КАК ОрганизацияПерерасчета,
	               |	ДанныеДокумента.Ссылка,
	               |	ДанныеДокумента.ПериодНачисления,
	               |	ДанныеДокумента.ПериодНачисленияДатаНачала,
	               |	ДанныеДокумента.ПериодНачисленияДатаОкончания,
	               |	ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
	               |	ЕСТЬNULL(УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам, ЛОЖЬ) КАК РаспределятьНалогиПоСтруктурнымЕдиницам,
	               |	ЕСТЬNULL(УчетнаяПолитикаНУ.РаспределятьНалогиПоПодразделениямОрганизаций, ЛОЖЬ) КАК РаспределятьНалогиПоПодразделениямОрганизаций,
	               |	ЕСТЬNULL(УчетнаяПолитикаНУ.ОрганизацияЯвляетсяВкладчикомОППВ, ЛОЖЬ) КАК ОрганизацияЯвляетсяВкладчикомОППВ,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(УчетнаяПолитикаНУ.ОрганизацияЯвляетсяПлательщикомСН, ЛОЖЬ)
	               |				И ДанныеДокумента.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	               |			ТОГДА ДанныеДокумента.Организация.ИндивидуальныйПредприниматель
	               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	               |	КОНЕЦ КАК ИндивидуальныйПредприниматель
	               |ИЗ
	               |	Документ.НачислениеЗарплатыРаботникамОрганизаций КАК ДанныеДокумента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамПериодРегистрации, Организация = &парамОрганизация) КАК УчетнаяПолитикаНУ
	               |		ПО (ИСТИНА)
	               |ГДЕ
	               |	ДанныеДокумента.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "Начисления" документа
//
// Параметры: 
//	нет
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоНачисления(ВыборкаПоШапкеДокумента, Перерасчет = Ложь, Сотрудники = НеОпределено, Режим)

	Запрос = Новый Запрос;
	МестоРаботыТекст="";
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", 			Ссылка);
	Запрос.УстановитьПараметр("Организация", 				ВыборкаПоШапкеДокумента.Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", 		ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("СписокПочасовыхОтклонений", 	ПроведениеРасчетов.ПолучитьСписокНачисленийПочасовыхОтклонений());
	Запрос.УстановитьПараметр("ПериодРегистрации", 			ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("парамСотрудники", 			Сотрудники);
	Запрос.УстановитьПараметр("ИндивидуальныйПредприниматель", ВыборкаПоШапкеДокумента.ИндивидуальныйПредприниматель);

	СписокСтруктурныхПодразделений = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("СписокСтруктурныхПодразделений", СписокСтруктурныхПодразделений);
	
	Запрос.УстановитьПараметр("парамПустаяОрганизация", 				Справочники.Организации.ПустаяСсылка());

	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями И Не ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда
	
		ПериодыСотрудникаТекст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ 
		|	Сотрудник,
		|	" + ?(ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, "&ПериодРегистрации", "ДатаНачала") + " КАК Период
		|ИЗ 
		|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления 
		|ГДЕ 
		|	Ссылка = &ДокументСсылка
		|	" + ?(Сотрудники <> Неопределено, " И Сотрудник В (&парамСотрудники)", "");
		
		
		МестоРаботыТекст = ПроведениеРасчетов.СформироватьТекстЗапросаСтруктурныеЕдиницы(ПериодыСотрудникаТекст, 
																		ВыборкаПоШапкеДокумента.Организация,
																		Запрос);
		МестоРаботыТекст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ *  
							|	ПОМЕСТИТЬ МестоРаботыВТ
							|	ИЗ ("+МестоРаботыТекст+") КАК МестаРабот;";
		МестоРаботыВТ="МестоРаботыВТ";
	
	КонецЕсли;
	
	Если Режим <> "Расчет" И ВыборкаПоШапкеДокумента.ОрганизацияЯвляетсяВкладчикомОППВ Тогда
		
		Если Запрос.МенеджерВременныхТаблиц = Неопределено Тогда
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		КонецЕсли;
	
		ПериодыНачисленийТекст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	Начисления.Сотрудник,
			|	Начисления.ДатаОкончания КАК ПериодНачисления
			|ПОМЕСТИТЬ ВТ_ПериодыНачислений
			|ИЗ
			|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК Начисления
			|ГДЕ
			|	Начисления.Ссылка = &ДокументСсылка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Начисления.Сотрудник,
			|	ПериодНачисления";
			
		Запрос.Текст = ПериодыНачисленийТекст;
		Запрос.Выполнить();
		
		ПериодыНачисленийТекст = "ВТ_ПериодыНачислений";
		
		ПериодыИсчисленияОППВТекст = ПроведениеРасчетов.СформироватьТекстЗапросаПериодыИсчисленияОППВ(ПериодыНачисленийТекст, ВыборкаПоШапкеДокумента.Организация, Запрос);
		
	КонецЕсли;
	
	Если Режим <> "Расчет" Тогда
		СтавкиОСМСТекст = ТекстЗапросаНаличияСтавокОСМС(ВыборкаПоШапкеДокумента, Сотрудники);
	Иначе
		СтавкиОСМСТекст = "";
	КонецЕсли;
	

	Запрос.Текст = МестоРаботыТекст + СтавкиОСМСТекст +
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтрокиНачисления.Сотрудник КАК Сотрудник,
	|	СтрокиНачисления.Сотрудник.Наименование КАК СотрудникНаименование,
	|	СтрокиНачисления.Сотрудник.ФизЛицо КАК ФизЛицо,
	|	СтрокиНачисления.ВидРасчета КАК ВидРасчета,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ЗачетОтработанногоВремени, ЛОЖЬ) КАК ЗачетОтработанногоВремени,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ЗачетНормыВремени, ЛОЖЬ) КАК ЗачетНормыВремени,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.УчетОтработанногоВремени, ЛОЖЬ) КАК УчетОтработанногоВремени,	
	|	СтрокиНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	СтрокиНачисления.ДатаНачала КАК ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.Сотрудник.Организация = &ГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации,
	|	ВЫБОР 
	|		КОГДА СтрокиНачисления.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) 
	|			ТОГДА КОНЕЦПЕРИОДА(СтрокиНачисления.ДатаОкончания, ДЕНЬ) 
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ПериодДействияКонец,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.ВидРасчета.ПериодДействияБазовый
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		КОГДА СтрокиНачисления.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(СтрокиНачисления.ДатаНачала, МЕСЯЦ, -1), МЕСЯЦ)
	|	КОНЕЦ КАК БазовыйПериодНачало,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.ВидРасчета.ПериодДействияБазовый
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		КОГДА СтрокиНачисления.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(СтрокиНачисления.ДатаОкончания, МЕСЯЦ, -1), МЕСЯЦ)
	|	КОНЕЦ КАК БазовыйПериодКонец,
	|	СтрокиНачисления.НомерСтроки КАК НомерСтроки,
	|	СтрокиНачисления.Показатель1 КАК Показатель1,
	|	СтрокиНачисления.Показатель2 КАК Показатель2,
	|	СтрокиНачисления.Показатель3 КАК Показатель3,
	|	СтрокиНачисления.Показатель4 КАК Показатель4,
	|	СтрокиНачисления.Показатель5 КАК Показатель5,
	|	СтрокиНачисления.Показатель6 КАК Показатель6,
	|	СтрокиНачисления.Результат КАК Результат,
	|	СтрокиНачисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	СтрокиНачисления.Сторно КАК Сторно,
	|	СтрокиНачисления.СуммаВычетовДоходовОтОбратного КАК СуммаВычетовДоходовОтОбратного,
	|	СтрокиНачисления.ОтработаноДней КАК ОтработаноДней,
	|	СтрокиНачисления.ОтработаноЧасов КАК ОтработаноЧасов,
	|	СтрокиНачисления.ОтработаноДнейПоПятидневке КАК ОтработаноДнейПоПятидневке,
	|	СтрокиНачисления.НормаДней КАК НормаДней,
	|	СтрокиНачисления.НормаЧасов КАК НормаЧасов,
	|	СтрокиНачисления.НормаДнейПоПятидневке КАК НормаДнейПоПятидневке,
	|	СтрокиНачисления.ПериодРасчетаСреднегоЗаработкаНачало КАК ПериодРасчетаСреднегоЗаработкаНачало,
	|	СтрокиНачисления.ПериодРасчетаСреднегоЗаработкаОкончание КАК ПериодРасчетаСреднегоЗаработкаОкончание,
	|	СтрокиНачисления.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
	|	РаботникиОрганизации.Период КАК ДатаПоследнегоДвиженияПоРаботнику,
	|	РаботникиОрганизации.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(РаботникиОрганизации.ГрафикРаботы.ИспользуетсяСовместноСПланГрафиком, ЛОЖЬ)
	|			ТОГДА ВЫБОР 
	|					КОГДА НЕ(ГрафикиРаботыФизЛиц.Ссылка ЕСТЬ NULL) 
	|							И ДанныеПланГрафика.ПланГрафикЗаполнен
	|						ТОГДА ГрафикиРаботыФизЛиц.Ссылка 
	|					ИНАЧЕ РаботникиОрганизации.ГрафикРаботы 
	|				КОНЕЦ 
	|		ИНАЧЕ РаботникиОрганизации.ГрафикРаботы 
	|	КОНЕЦ КАК ГрафикРаботы,
	|	ВЫБОР 
	|		КОГДА (РаботникиОрганизации.ГрафикРаботы) ЕСТЬ NULL  
	|			ТОГДА ЛОЖЬ 
	|		ИНАЧЕ ЕСТЬNULL(РаботникиОрганизации.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ)
	|	КОНЕЦ КАК СуммированныйУчетРабочегоВремени,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
	|			ТОГДА СтрокиНачисления.Ссылка.СпособОтраженияВБухучете
	|		ИНАЧЕ СтрокиНачисления.СпособОтраженияВБухучете
	|	КОНЕЦ КАК СпособОтраженияВБухучете,
	|	СтрокиНачисления.ОплачиватьЧасов,
	|	СтрокиНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ВидИспользованияРабочегоВремени,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.ВидРасчета.СпособРасчета В (&СписокПочасовыхОтклонений)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЯвляетсяПочасовымОтклонением,
	|	СтрокиНачисления.ДополнительныеДанные,
	|	СтрокиНачисления.Авторасчет,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.Сторно
	|			ТОГДА СтрокиНачисления.СторнируемыйДокумент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СторнируемыйДокумент,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) КАК ВидДохода,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяИПН, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяИПН,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяОПВ, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяОПВ,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяСН, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяСН,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяСО, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяСО,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяОППВ, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяОППВ,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяВОСМС, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяВОСМС,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяООСМС, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяООСМС,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяОПВР, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяОПВР,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ЯвляетсяПрочимДоходом, ЛОЖЬ) КАК ЯвляетсяПрочимДоходом";
	
	Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам И мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
	Запрос.Текст = Запрос.Текст + ",
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.ПодразделениеОрганизации.ЯвляетсяСтруктурнымПодразделением
	|			ТОГДА СтрокиНачисления.ПодразделениеОрганизации
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК СтруктурнаяЕдиница";
	ИначеЕсли мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
	Запрос.Текст = Запрос.Текст + ",
	|	ВЫБОР
	|		КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
	|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК СтруктурнаяЕдиница";
	Иначе
	Запрос.Текст = Запрос.Текст + ",
     |	&Организация КАК СтруктурнаяЕдиница";
	КонецЕсли;
	
	Если Режим = "Расчет" Тогда
	Запрос.Текст = Запрос.Текст + ",
	|	ДвойныеСтрокиОтОбратного.ПерваяСтрокаОтОбратного
	|";
	Иначе
	Запрос.Текст = Запрос.Текст + ",
	|	ЕСТЬNULL(УчетНалогообложенияПоВидамДоходов.УчитыватьИПН, ИСТИНА) КАК УчитыватьИПН,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьОПВ ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьОПВ
	|		КОГДА ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьОПВ,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьСН ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьСН
	|		КОГДА ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьСН,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьСО ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьСО
	|		КОГДА ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьСО,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьОППВ ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьОППВ
	|		КОГДА ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьОППВ,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.Сотрудник.Физлицо = &ИндивидуальныйПредприниматель
	|				И ЕСТЬNULL(СтавкиОСМС.СтавкаВзносы,0) > 0
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(СтавкиОСМС.СтавкаВзносы,0) <= 0 И &ПериодРегистрации < ДАТАВРЕМЯ(2020, 1, 1) 
	|			ТОГДА ЛОЖЬ
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьВОСМС ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьВОСМС
	|		КОГДА ЕСТЬNULL(СтавкиОСМС.СтавкаВзносы,0) > 0 И ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		КОГДА &ПериодРегистрации >= ДАТАВРЕМЯ(2020, 1, 1) И ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьВОСМС,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.Сотрудник.Физлицо = &ИндивидуальныйПредприниматель
	|			ТОГДА ЛОЖЬ
	|		КОГДА ЕСТЬNULL(СтавкиОСМС.СтавкаОтчисления,0) <= 0  И &ПериодРегистрации < ДАТАВРЕМЯ(2020, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьООСМС ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьООСМС
	|		КОГДА ЕСТЬNULL(СтавкиОСМС.СтавкаОтчисления,0) > 0 И ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		КОГДА &ПериодРегистрации >= ДАТАВРЕМЯ(2020, 1, 1) И ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьООСМС,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьОПВР ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьОПВР
	|		КОГДА &ПериодРегистрации >= ДАТАВРЕМЯ(2024, 1, 1) И ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьОПВР
	|";
	
		Если ВыборкаПоШапкеДокумента.ОрганизацияЯвляетсяВкладчикомОППВ Тогда
			Запрос.Текст = Запрос.Текст + ",
			|	ПериодыИсчисленияОППВ.ИсчислятьОППВ КАК ИсчислятьОППВ
			|";
		Иначе
			Запрос.Текст = Запрос.Текст + ",
			|	ЛОЖЬ КАК ИсчислятьОППВ
			|";
		КонецЕсли;
	
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК СтрокиНачисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(РаботникиОрганизации.Период) КАК МаксПериод,
	|			СтрокиНачисления.НомерСтроки КАК НомерСтроки
	|		ИЗ
	|			Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК СтрокиНачисления
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|				ПО РаботникиОрганизации.Период <= СтрокиНачисления.ДатаНачала 
	|					И СтрокиНачисления.Сотрудник = РаботникиОрганизации.Сотрудник 
	|					И (РаботникиОрганизации.Организация = &ГоловнаяОрганизация) 
	|		
	|		ГДЕ
	|			СтрокиНачисления.Ссылка = &ДокументСсылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СтрокиНачисления.НомерСтроки) КАК ПоследниеДаты
	|		ПО СтрокиНачисления.НомерСтроки = ПоследниеДаты.НомерСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		ПО РаботникиОрганизации.Период = ПоследниеДаты.МаксПериод 
	|			И СтрокиНачисления.Сотрудник = РаботникиОрганизации.Сотрудник 
	|			И (РаботникиОрганизации.Организация = &ГоловнаяОрганизация) 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГрафикиРаботыФизЛиц КАК ГрафикиРаботыФизЛиц
	|		ПО РаботникиОрганизации.Сотрудник = ГрафикиРаботыФизЛиц.Сотрудник 
	|			И РаботникиОрганизации.Организация = ГрафикиРаботыФизЛиц.Организация 
	|			И РаботникиОрганизации.ГрафикРаботы = ГрафикиРаботыФизЛиц.ГрафикРаботы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							СтрокиНачисления.НомерСтроки,
	|							ГрафикиРаботыФизЛиц.Ссылка КАК ГрафикРаботыФизЛица,
	|							ВЫБОР
	|								КОГДА КОЛИЧЕСТВО(ГрафикиРаботыПоВидамВремени.ОсновноеЗначение) = РАЗНОСТЬДАТ(СтрокиНачисления.ДатаНачала, СтрокиНачисления.ДатаОкончания, ДЕНЬ) + 1 
	|									ТОГДА ИСТИНА
	|								ИНАЧЕ ЛОЖЬ
	|							КОНЕЦ КАК ПланГрафикЗаполнен
	|						ИЗ
	|							Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК СтрокиНачисления
	|   						
	|							ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГрафикиРаботыФизЛиц КАК ГрафикиРаботыФизЛиц
	|								ПО СтрокиНачисления.Сотрудник = ГрафикиРаботыФизЛиц.Сотрудник
	|									И ГрафикиРаботыФизЛиц.Организация = &ГоловнаяОрганизация
	|
	|							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|								ПО ГрафикиРаботыФизЛиц.Ссылка = ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|									И ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|									И ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ СтрокиНачисления.ДатаНачала И СтрокиНачисления.ДатаОкончания
	|	
	|						ГДЕ
	|							СтрокиНачисления.Ссылка = &ДокументСсылка
	|							" + ?(Сотрудники <> Неопределено, " И СтрокиНачисления.Сотрудник В (&парамСотрудники)", "") + "
	|						СГРУППИРОВАТЬ ПО
	|							СтрокиНачисления.НомерСтроки,
	|							СтрокиНачисления.ДатаНачала,
	|							СтрокиНачисления.ДатаОкончания,
	|							ГрафикиРаботыФизЛиц.Ссылка) КАК ДанныеПланГрафика
	|		ПО СтрокиНачисления.НомерСтроки = ДанныеПланГрафика.НомерСтроки
	|			И ГрафикиРаботыФизЛиц.Ссылка = ДанныеПланГрафика.ГрафикРаботыФизЛица";
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями И Не ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда
	Запрос.Текст = Запрос.Текст + "
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + МестоРаботыВТ + " КАК МестоРаботы
	|		ПО СтрокиНачисления.Сотрудник = МестоРаботы.Сотрудник
	|			И " + ?(ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, "&ПериодРегистрации", "СтрокиНачисления.ДатаНачала") + " = МестоРаботы.Период";
	КонецЕсли;
	
	Если Режим = "Расчет" Тогда
		// если вызывается для проверки перед расчетом, то предупредим, что нельзя считать два вида "от обратого" по одному человеку одним документом.
		Запрос.Текст = Запрос.Текст + "
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							СтрокиТЧ.НомерСтроки,
		|							МИНИМУМ(СтрокиТЧ2.НомерСтроки) КАК ПерваяСтрокаОтОбратного
		|						ИЗ
		|							Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК СтрокиТЧ
		|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК СтрокиТЧ2
		|								ПО СтрокиТЧ2.Ссылка = &ДокументСсылка
		|									И СтрокиТЧ.Сотрудник = СтрокиТЧ2.Сотрудник
		|									И СтрокиТЧ2.ВидРасчета.ОтОбратного
		|									И СтрокиТЧ.ВидРасчета.КатегорияРасчета = СтрокиТЧ2.ВидРасчета.КатегорияРасчета
		|									И СтрокиТЧ2.НомерСтроки < СтрокиТЧ.НомерСтроки
		|						ГДЕ
		|							СтрокиТЧ.Ссылка = &ДокументСсылка
		|							И СтрокиТЧ.ВидРасчета.ОтОбратного
		|
		|						СГРУППИРОВАТЬ ПО
		|							СтрокиТЧ.НомерСтроки) КАК ДвойныеСтрокиОтОбратного
		|		ПО СтрокиНачисления.НомерСтроки = ДвойныеСтрокиОтОбратного.НомерСтроки
		|";
	Иначе
		Запрос.Текст = Запрос.Текст + "
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетНалогообложенияПоВидамДоходов.СрезПоследних(&ПериодРегистрации, ) КАК УчетНалогообложенияПоВидамДоходов
		|		ПО СтрокиНачисления.ВидРасчета.ВидДохода = УчетНалогообложенияПоВидамДоходов.ВидДохода 
		|";
		
		Если ВыборкаПоШапкеДокумента.ОрганизацияЯвляетсяВкладчикомОППВ Тогда
			Запрос.Текст = Запрос.Текст + "
			|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПериодыИсчисленияОППВТекст + " КАК ПериодыИсчисленияОППВ
			|		ПО СтрокиНачисления.Сотрудник = ПериодыИсчисленияОППВ.Сотрудник
			|			И СтрокиНачисления.ДатаОкончания = ПериодыИсчисленияОППВ.ПериодНачисления
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиОСМС КАК СтавкиОСМС
		|		ПО СтрокиНачисления.Сотрудник = СтавкиОСМС.Сотрудник
		|			И ВЫБОР
		|				КОГДА СтрокиНачисления.Сотрудник.Физлицо = &ИндивидуальныйПредприниматель
		|					ТОГДА ВЫБОР КОГДА "+ ?(ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, "&ПериодРегистрации", "СтрокиНачисления.ДатаНачала") + " < ДАТАВРЕМЯ(2020,1,1) ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента) ИНАЧЕ ""ИП"" КОНЕЦ
		|				ИНАЧЕ ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя))
		|			КОНЕЦ = СтавкиОСМС.ВидДохода
		|			И " + ?(ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, "&ПериодРегистрации", "СтрокиНачисления.ДатаНачала") + " = СтавкиОСМС.Период";
		
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|
	|ГДЕ
	|	СтрокиНачисления.Ссылка = &ДокументСсылка
	|	" + ?(Сотрудники <> Неопределено, " И СтрокиНачисления.Сотрудник В (&парамСотрудники)", "") + "
	|
	|УПОРЯДОЧИТЬ ПО 
	|	СтрокиНачисления.НомерСтроки";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоНачисления()

// Формирует запрос по таблице "ДополнительныеНачисления" документа
//
// Параметры: 
//	нет
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоДопНачисления(ВыборкаПоШапкеДокумента, Перерасчет = Ложь, Сотрудники = НеОпределено, Режим)

	Запрос = Новый Запрос;
	МестоРаботыТекст ="";
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", 		  Ссылка);
	Запрос.УстановитьПараметр("Организация", 			  ВыборкаПоШапкеДокумента.Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	  ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("СпособыРасчетаПоДоговору", ПроведениеРасчетов.ПолучитьСписокСпособовРасчетовПоДоговору());
	Запрос.УстановитьПараметр("ПериодРегистрации",		  ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("парамСотрудники",		  Сотрудники);
	Запрос.УстановитьПараметр("ИндивидуальныйПредприниматель", ВыборкаПоШапкеДокумента.ИндивидуальныйПредприниматель);

	СписокСтруктурныхПодразделений = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("СписокСтруктурныхПодразделений", СписокСтруктурныхПодразделений);
	
	Запрос.УстановитьПараметр("парамПустаяОрганизация", 		Справочники.Организации.ПустаяСсылка());
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями И Не ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда
	
		ПериодыСотрудникаТекст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ 
		|	Сотрудник,
		|	" + ?(ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, "&ПериодРегистрации", "
		|	ВЫБОР
		|		КОГДА ДатаНачала МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
		|			ТОГДА ДатаНачала
		|		ИНАЧЕ &ПериодРегистрации
		|	КОНЕЦ") + " КАК Период
		|ИЗ 
		|	Документ.НачислениеЗарплатыРаботникамОрганизаций.ДополнительныеНачисления 
		|ГДЕ 
		|	Ссылка = &ДокументСсылка
		|	" + ?(Сотрудники <> Неопределено, " И Сотрудник В (&парамСотрудники)", "");
		
		МестоРаботыТекст = ПроведениеРасчетов.СформироватьТекстЗапросаСтруктурныеЕдиницы(ПериодыСотрудникаТекст, 
																		ВыборкаПоШапкеДокумента.Организация,
																		Запрос);
		МестоРаботыТекст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ *  
							|	ПОМЕСТИТЬ МестоРаботыВТ
							|	ИЗ ("+МестоРаботыТекст+") КАК МестаРабот;";
		МестоРаботыВТ="МестоРаботыВТ";
	
	КонецЕсли;
	
	Если Режим <> "Расчет" И ВыборкаПоШапкеДокумента.ОрганизацияЯвляетсяВкладчикомОППВ Тогда
		
		Если Запрос.МенеджерВременныхТаблиц = Неопределено Тогда
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		КонецЕсли;
	
		ПериодыНачисленийТекст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ДополнительныеНачисления.Сотрудник,
			|	ДополнительныеНачисления.ДатаОкончания КАК ПериодНачисления
			|ПОМЕСТИТЬ ВТ_ПериодыНачислений
			|ИЗ
			|	Документ.НачислениеЗарплатыРаботникамОрганизаций.ДополнительныеНачисления КАК ДополнительныеНачисления
			|ГДЕ
			|	ДополнительныеНачисления.Ссылка = &ДокументСсылка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ДополнительныеНачисления.Сотрудник,
			|	ПериодНачисления";
			
		Запрос.Текст = ПериодыНачисленийТекст;
		Запрос.Выполнить();
		
		ПериодыНачисленийТекст = "ВТ_ПериодыНачислений";
		
		ПериодыИсчисленияОППВТекст = ПроведениеРасчетов.СформироватьТекстЗапросаПериодыИсчисленияОППВ(ПериодыНачисленийТекст, ВыборкаПоШапкеДокумента.Организация, Запрос);
		
	КонецЕсли;
	
	Если Режим <> "Расчет" Тогда
		СтавкиОСМСТекст = ТекстЗапросаНаличияСтавокОСМС(ВыборкаПоШапкеДокумента, Сотрудники, "ДополнительныеНачисления");
	Иначе
		СтавкиОСМСТекст = "";
	КонецЕсли;
	
	ПолеДатаНачала = "
	|ВЫБОР
	|	КОГДА СтрокиТЧ.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|		ТОГДА &ПериодРегистрации
	|	ИНАЧЕ СтрокиТЧ.ДатаНачала
	|КОНЕЦ";
	
	Запрос.Текст = МестоРаботыТекст + СтавкиОСМСТекст + "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтрокиТЧ.НомерСтроки,
	|	ВЫБОР
	|		КОГДА СтрокиТЧ.ВидРасчета.СпособРасчета В (&СпособыРасчетаПоДоговору)
	|			ТОГДА ВЫБОР
	|					КОГДА СтрокиТЧ.ДокументОснование.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
	|							И СтрокиТЧ.ДокументОснование.ДатаОкончания < " + ПолеДатаНачала + "
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|				КОНЕЦ
	|		ИНАЧЕ РаботникиОрганизации.ПричинаИзмененияСостояния
	|	КОНЕЦ КАК ПричинаИзмененияСостояния,
	|	ВЫБОР
	|		КОГДА СтрокиТЧ.ВидРасчета.СпособРасчета В (&СпособыРасчетаПоДоговору)
	|			ТОГДА ДОБАВИТЬКДАТЕ(СтрокиТЧ.ДокументОснование.ДатаОкончания, ДЕНЬ, 1)
	|		ИНАЧЕ РаботникиОрганизации.Период
	|	КОНЕЦ КАК ДатаПоследнегоДвиженияПоРаботнику
	|	
	|
	|ПОМЕСТИТЬ ВТ_РаботникиОрганизации
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтрокиТЧ.НомерСтроки,
	|		СтрокиТЧ.ДатаНачала,	
	|		СтрокиТЧ.ВидРасчета,	
	|		СтрокиТЧ.ДокументОснование,	
	|		СтрокиТЧ.Сотрудник,
	|		МАКСИМУМ(РаботникиОрганизации.Период) КАК Период
	|	ИЗ
	|		Документ.НачислениеЗарплатыРаботникамОрганизаций.ДополнительныеНачисления КАК СтрокиТЧ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|			ПО СтрокиТЧ.Сотрудник = РаботникиОрганизации.Сотрудник
	|				И РаботникиОрганизации.Организация = &ГоловнаяОрганизация
	|				И РаботникиОрганизации.Период <= ВЫБОР
	|													КОГДА СтрокиТЧ.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|														ТОГДА &ПериодРегистрации
	|													ИНАЧЕ СтрокиТЧ.ДатаНачала
	|												КОНЕЦ
	|
	|	ГДЕ
	|		СтрокиТЧ.Ссылка = &ДокументСсылка
	|
	|	СГРУППИРОВАТЬ ПО
	|		СтрокиТЧ.НомерСтроки,
	|		СтрокиТЧ.ДатаНачала,
	|		СтрокиТЧ.ВидРасчета,	
	|		СтрокиТЧ.ДокументОснование,	
	|		СтрокиТЧ.Сотрудник) КАК СтрокиТЧ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|		ПО СтрокиТЧ.Сотрудник = РаботникиОрганизации.Сотрудник
	|			И СтрокиТЧ.Период = РаботникиОрганизации.Период
	|			И РаботникиОрганизации.Организация = &ГоловнаяОрганизация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтрокиТЧ.НомерСтроки
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтрокиНачисления.ВидРасчета,
	|	СтрокиНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ВЫБОР 
	|		КОГДА СтрокиНачисления.ВидРасчета.СпособРасчета В (&СпособыРасчетаПоДоговору) 
	|			ТОГДА ИСТИНА 
	|		ИНАЧЕ ЛОЖЬ 
	|	КОНЕЦ КАК РасчетПоДоговору,
	|	СтрокиНачисления.ДокументОснование,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.ДокументОснование.Организация <> &Организация
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОшибкаНеСоответствиеОрганизацииДоговора,
	|	СтрокиНачисления.НомерСтроки,
	|	СтрокиНачисления.Показатель1,
	|	СтрокиНачисления.Показатель2,
	|	СтрокиНачисления.Показатель3,
	|	СтрокиНачисления.Показатель4,
	|	СтрокиНачисления.Показатель5,
	|	СтрокиНачисления.Показатель6,
	|	СтрокиНачисления.Результат,
	|	СтрокиНачисления.ПодразделениеОрганизации,
	|	СтрокиНачисления.Сторно,
	|	СтрокиНачисления.СуммаВычетовДоходовОтОбратного,
	|	СтрокиНачисления.Сотрудник,
	|	СтрокиНачисления.Сотрудник.Наименование КАК СотрудникНаименование,
	|	СтрокиНачисления.Сотрудник.ФизЛицо КАК ФизЛицо,
	|	СтрокиНачисления.ДатаНачала КАК ПериодДействияНачало,
	|	ВЫБОР 
	|		КОГДА СтрокиНачисления.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) 
	|			ТОГДА КОНЕЦПЕРИОДА(СтрокиНачисления.ДатаОкончания, ДЕНЬ) 
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) 
	|	КОНЕЦ КАК ПериодДействияКонец,
	|	СтрокиНачисления.ДатаНачала КАК БазовыйПериодНачало,
	|	ВЫБОР 
	|		КОГДА СтрокиНачисления.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) 
	|			ТОГДА КОНЕЦПЕРИОДА(СтрокиНачисления.ДатаОкончания, ДЕНЬ) 
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) 
	|	КОНЕЦ КАК БазовыйПериодКонец,
	|	СтрокиНачисления.ВидРасчета.ЧислоМесяцев КАК ЧислоМесяцев,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка) 
	|			ТОГДА СтрокиНачисления.Ссылка.СпособОтраженияВБухучете
	|		ИНАЧЕ СтрокиНачисления.СпособОтраженияВБухучете
	|	КОНЕЦ КАК СпособОтраженияВБухучете,
	|	СтрокиНачисления.ДополнительныеДанные,
	|	СтрокиНачисления.Авторасчет,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.Сторно
	|			ТОГДА СтрокиНачисления.СторнируемыйДокумент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СторнируемыйДокумент,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) КАК ВидДохода,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяИПН, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяИПН,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяОПВ, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяОПВ,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяСН, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяСН,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяСО, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяСО,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяОППВ, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяОППВ,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяВОСМС, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяВОСМС,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяООСМС, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяООСМС,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ОблагаетсяОПВР, ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ПустаяСсылка)) КАК ОблагаетсяОПВР,
	|	ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ЯвляетсяПрочимДоходом, ЛОЖЬ) КАК ЯвляетсяПрочимДоходом,
	|	РаботникиОрганизации.ПричинаИзмененияСостояния,
	|	РаботникиОрганизации.ДатаПоследнегоДвиженияПоРаботнику,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.Сотрудник.Организация = &ГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации";
	
	Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам И мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
	Запрос.Текст = Запрос.Текст + ",
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.ПодразделениеОрганизации.ЯвляетсяСтруктурнымПодразделением 
	|			ТОГДА СтрокиНачисления.ПодразделениеОрганизации
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК СтруктурнаяЕдиница";
	ИначеЕсли мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
	Запрос.Текст = Запрос.Текст + ",
	|	ВЫБОР
	|		КОГДА НЕ(МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
	|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК СтруктурнаяЕдиница";
	Иначе
	Запрос.Текст = Запрос.Текст + ",
	|	&Организация КАК СтруктурнаяЕдиница";
	КонецЕсли;
	
	Если Режим = "Расчет" Тогда
	Запрос.Текст = Запрос.Текст + ",
	|	ДвойныеСтрокиОтОбратного.ПерваяСтрокаОтОбратного
	|";
	Иначе
	Запрос.Текст = Запрос.Текст + ",
	|	ЕСТЬNULL(УчетНалогообложенияПоВидамДоходов.УчитыватьИПН, ИСТИНА) КАК УчитыватьИПН,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьОПВ ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьОПВ
	|		КОГДА ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьОПВ,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьСН ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьСН
	|		КОГДА ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьСН,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьСО ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьСО
	|		КОГДА ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьСО,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьОППВ ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьОППВ
	|		КОГДА ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьОППВ,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.Сотрудник.Физлицо = &ИндивидуальныйПредприниматель
	|				И ЕСТЬNULL(СтавкиОСМС.СтавкаВзносы,0) > 0
	|			ТОГДА ИСТИНА
	|		КОГДА ЕСТЬNULL(СтавкиОСМС.СтавкаВзносы,0) <= 0 И &ПериодРегистрации < ДАТАВРЕМЯ(2020, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьВОСМС ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьВОСМС
	|		КОГДА ЕСТЬNULL(СтавкиОСМС.СтавкаВзносы,0) > 0 И ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		КОГДА &ПериодРегистрации >= ДАТАВРЕМЯ(2020, 1, 1) И ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьВОСМС,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.Сотрудник.Физлицо = &ИндивидуальныйПредприниматель
	|			ТОГДА ЛОЖЬ
	|		КОГДА ЕСТЬNULL(СтавкиОСМС.СтавкаОтчисления,0) <= 0 И &ПериодРегистрации < ДАТАВРЕМЯ(2020, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьООСМС ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьООСМС
	|		КОГДА ЕСТЬNULL(СтавкиОСМС.СтавкаОтчисления,0) > 0 И ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		КОГДА &ПериодРегистрации >= ДАТАВРЕМЯ(2020, 1, 1) И ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьООСМС,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьОПВР ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьОПВР
	|		КОГДА &ПериодРегистрации >= ДАТАВРЕМЯ(2024, 1, 1) И ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьОПВР
	|";
	
		Если ВыборкаПоШапкеДокумента.ОрганизацияЯвляетсяВкладчикомОППВ Тогда
			Запрос.Текст = Запрос.Текст + ",
			|	ЕСТЬNULL(ПериодыИсчисленияОППВ.ИсчислятьОППВ, ЛОЖЬ) КАК ИсчислятьОППВ
			|";
		Иначе
			Запрос.Текст = Запрос.Текст + ",
			|	ЛОЖЬ КАК ИсчислятьОППВ
			|";
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций.ДополнительныеНачисления КАК СтрокиНачисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РаботникиОрганизации КАК РаботникиОрганизации
	|		ПО СтрокиНачисления.НомерСтроки = РаботникиОрганизации.НомерСтроки
	|";
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями И Не ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда
	Запрос.Текст = Запрос.Текст + "
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + МестоРаботыВТ + " КАК МестоРаботы
	|		ПО СтрокиНачисления.Сотрудник = МестоРаботы.Сотрудник
	|			И " + ?(ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, "&ПериодРегистрации", "
	|				ВЫБОР
	|					КОГДА СтрокиНачисления.ДатаНачала МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
	|						ТОГДА СтрокиНачисления.ДатаНачала
	|					ИНАЧЕ &ПериодРегистрации
	|				КОНЕЦ") + " = МестоРаботы.Период";
	КонецЕсли;
	
	Если Режим = "Расчет" Тогда
		// если вызывается для проверки перед расчетом, то предупредим, что нельзя считать два вида "от обратого" по одному человеку одним документом.
		Запрос.Текст = Запрос.Текст + "
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							СтрокиТЧ.НомерСтроки,
		|							МИНИМУМ(СтрокиТЧ2.НомерСтроки) КАК ПерваяСтрокаОтОбратного
		|						ИЗ
		|							Документ.НачислениеЗарплатыРаботникамОрганизаций.ДополнительныеНачисления КАК СтрокиТЧ
		|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачислениеЗарплатыРаботникамОрганизаций.ДополнительныеНачисления КАК СтрокиТЧ2
		|								ПО СтрокиТЧ2.Ссылка = &ДокументСсылка
		|									И СтрокиТЧ.Сотрудник = СтрокиТЧ2.Сотрудник
		|									И СтрокиТЧ2.ВидРасчета.ОтОбратного
		|									И СтрокиТЧ.ВидРасчета.КатегорияРасчета = СтрокиТЧ2.ВидРасчета.КатегорияРасчета
		|									И СтрокиТЧ2.НомерСтроки < СтрокиТЧ.НомерСтроки
		|						ГДЕ
		|							СтрокиТЧ.Ссылка = &ДокументСсылка
		|							И СтрокиТЧ.ВидРасчета.ОтОбратного
		|
		|						СГРУППИРОВАТЬ ПО
		|							СтрокиТЧ.НомерСтроки) КАК ДвойныеСтрокиОтОбратного
		|		ПО СтрокиНачисления.НомерСтроки = ДвойныеСтрокиОтОбратного.НомерСтроки
		|";
	Иначе
		Запрос.Текст = Запрос.Текст + "
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетНалогообложенияПоВидамДоходов.СрезПоследних(&ПериодРегистрации, ) КАК УчетНалогообложенияПоВидамДоходов
		|		ПО СтрокиНачисления.ВидРасчета.ВидДохода = УчетНалогообложенияПоВидамДоходов.ВидДохода 
		|";
		
		Если ВыборкаПоШапкеДокумента.ОрганизацияЯвляетсяВкладчикомОППВ Тогда
			Запрос.Текст = Запрос.Текст + "
			|	ЛЕВОЕ СОЕДИНЕНИЕ " + ПериодыИсчисленияОППВТекст + " КАК ПериодыИсчисленияОППВ
			|		ПО СтрокиНачисления.Сотрудник = ПериодыИсчисленияОППВ.Сотрудник
			|			И СтрокиНачисления.ДатаОкончания = ПериодыИсчисленияОППВ.ПериодНачисления
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиОСМС КАК СтавкиОСМС
		|		ПО СтрокиНачисления.Сотрудник = СтавкиОСМС.Сотрудник
		|	И ВЫБОР
		|			КОГДА СтрокиНачисления.Сотрудник.Физлицо = &ИндивидуальныйПредприниматель
		|				ТОГДА ВЫБОР КОГДА "+ ?(ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, "&ПериодРегистрации", "СтрокиНачисления.ДатаНачала") + " < ДАТАВРЕМЯ(2020,1,1) ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтНалоговогоАгента) ИНАЧЕ ""ИП"" КОНЕЦ
		|			ИНАЧЕ ЕСТЬNULL(СтрокиНачисления.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя))
		|		КОНЕЦ = СтавкиОСМС.ВидДохода
		|		И " + ?(ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, "&ПериодРегистрации", "СтрокиНачисления.ДатаНачала") + " = СтавкиОСМС.Период";
		
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|
	|ГДЕ
	|	СтрокиНачисления.Ссылка = &ДокументСсылка
	|	" + ?(Сотрудники <> Неопределено, " И СтрокиНачисления.Сотрудник В (&парамСотрудники)", "") + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтрокиНачисления.НомерСтроки";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоДопНачисления()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	//  Организация
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ГоловнаяОрганизация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация, по которой начисляется зарплата!", Отказ, Заголовок);
	КонецЕсли;
	// соответствие периодов документа и перерассчитываемого документа
	Если ВыборкаПоШапкеДокумента.ПериодПерерасчета <> NULL 
		И ВыборкаПоШапкеДокумента.ПериодРегистрации <= ВыборкаПоШапкеДокумента.ПериодПерерасчета Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Период документа должен быть больше периода перерассчитываемого документа!", Отказ, Заголовок);
	КонецЕсли;
	// соответствие организаций документа и перерассчитываемого документа
	Если ВыборкаПоШапкеДокумента.ОрганизацияПерерасчета <> NULL 
		И ВыборкаПоШапкеДокумента.Организация <> ВыборкаПоШапкеДокумента.ОрганизацияПерерасчета Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Организация, заданная для документа, должна совпадать с организацией перерассчитываемого документа!", Отказ, Заголовок);
	КонецЕсли;

	// проверим соответствие период начисления и дат
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодНачисления) Тогда
	    ОбщегоНазначения.СообщитьОбОшибке("Не указан режим расчета!", Отказ, Заголовок);
	Иначе
		Если ВыборкаПоШапкеДокумента.ПериодНачисления = Перечисления.ПериодНачисленияЗарплаты.ТекущийМесяц Тогда
			Если ВыборкаПоШапкеДокумента.ПериодНачисленияДатаНачала <> НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации)
			 ИЛИ ВыборкаПоШапкеДокумента.ПериодНачисленияДатаОкончания <> НачалоДня(КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации)) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Не даты периода расчета должны совпадать быть первым и последнем днем месяца!", Отказ, Заголовок);
			КонецЕсли;
		ИначеЕсли ВыборкаПоШапкеДокумента.ПериодНачисления = Перечисления.ПериодНачисленияЗарплаты.ПерваяПоловинаТекущегоМесяца Тогда
			Если ВыборкаПоШапкеДокумента.ПериодНачисленияДатаНачала < НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации)
			 Или ВыборкаПоШапкеДокумента.ПериодНачисленияДатаНачала > КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации)
			 Или ВыборкаПоШапкеДокумента.ПериодНачисленияДатаОкончания < НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации)
			 Или ВыборкаПоШапкеДокумента.ПериодНачисленияДатаОкончания > КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Даты периода расчета должны лежать в пределах месяца начисления!", Отказ, Заголовок);
			ИначеЕсли ВыборкаПоШапкеДокумента.ПериодНачисленияДатаНачала > ВыборкаПоШапкеДокумента.ПериодНачисленияДатаОкончания Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Дата начала периода расчета должна быть раньше даты окончания!", Отказ, Заголовок);
			КонецЕсли;
		Иначе // ПрошлыйПериод
			Если ВыборкаПоШапкеДокумента.ПериодНачисленияДатаОкончания >= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Для режима начисления ""Прошлый месяц"" даты периода расчета должны быть раньше начала месяца начисления!", Отказ, Заголовок);
			ИначеЕсли НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодНачисленияДатаНачала) <> НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодНачисленияДатаОкончания) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Даты периода расчета должны лежат в пределах одного месяца!", Отказ, Заголовок);
			ИначеЕсли ВыборкаПоШапкеДокумента.ПериодНачисленияДатаНачала > ВыборкаПоШапкеДокумента.ПериодНачисленияДатаОкончания Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Дата начала периода расчета должна быть раньше даты окончания!", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "Начисления" документа.
// Если какой-то из реквизтов, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса к ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса к ТЧ документа, 
//  Отказ 						- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоСтрокамДокумента, Отказ, Заголовок, Режим)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Начисления"": ";
									
	// Организация сотрудника должна совпадать с0 организацией документа
	Если ВыборкаПоСтрокамДокумента.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "организация документа не соответствует организации, указанной в карточке сотрудника!", Отказ, Заголовок);
	КонецЕсли;
	
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;

	// ВидРасчета
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указан вид расчета!", Отказ, Заголовок);
	КонецЕсли;

	// Дата начала
	ЕстьДатаНачала = Истина;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ПериодДействияНачало) Тогда
		ЕстьДатаНачала = Ложь;
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала начисления!", Отказ, Заголовок);
	КонецЕсли;

	// Дата окончания
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ПериодДействияКонец) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указана дата окончания начисления!", Отказ, Заголовок);
	КонецЕсли;

	// Предупредим пользователя, если начисления делаются уже уволенном работнику
	Если ЕстьДатаНачала И ВыборкаПоСтрокамДокумента.ПричинаИзмененияСостояния = Перечисления.ПричиныИзмененияСостояния.Увольнение Тогда
		СтрокаПродолжениеСообщенияОбОшибке = "на " + Формат(ВыборкаПоСтрокамДокумента.ПериодДействияНачало, "ДЛФ=DD") + " сотрудник " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " уже уволен (с " + Формат(ВыборкаПоСтрокамДокумента.ДатаПоследнегоДвиженияПоРаботнику, "ДЛФ=DD") + ")!";
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + СтрокаПродолжениеСообщенияОбОшибке, Ложь, Заголовок);
	КонецЕсли;

	Если ВыборкаПоСтрокамДокумента.ЯвляетсяПочасовымОтклонением Тогда
		// ВидИспользованияРабочегоВремени
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидИспользованияРабочегоВремени) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указан учет времени для вида расчета!", Отказ, Заголовок);
		КонецЕсли;
		
		// ОплачиватьЧасов
		Если ВыборкаПоСтрокамДокумента.ОплачиватьЧасов <= 0 
			 Или ВыборкаПоСтрокамДокумента.ОплачиватьЧасов > 24 Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "число оплачиваемых часов должно быть от 1 до 24!", Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;
	
	Если ПериодРегистрации < '20100101' Тогда
		Если Режим = "Расчет" Тогда
			// в процессе расчета проверим, чтобы не было двух строк "От обратного"
			Если ВыборкаПоСтрокамДокумента.ПерваяСтрокаОтОбратного <> NULL Тогда
				ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "для сотрудника уже введен вид расчета ""от обратного"" в строке № " + ВыборкаПоСтрокамДокумента.ПерваяСтрокаОтОбратного + ", "
														+ "
														|несколько видов ""от обратного"" с одинаковой очередностью для одного и того же сотрудника надо считать разными документами!", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиНачисления()

// Проверяет правильность заполнения реквизитов в строке ТЧ "ДополнительныеНачисления" документа.
// Если какой-то из реквизтов, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса к ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса к ТЧ документа, 
//  Отказ 						- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеСтрокиДопНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок, Режим)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Доп. начисления"": ";
									
	// Организация сотрудника должна совпадать с организацией документа
	Если ВыборкаПоСтрокамДокумента.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "организация документа не соответствует организации, указанной в карточке сотрудника!", Отказ, Заголовок);
	КонецЕсли;
								
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;

	// ВидРасчета
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указан вид расчета!", Отказ);
	ИначеЕсли ПроведениеРасчетов.СпособРасчетаТребуетБазовыйПериод(ВыборкаПоСтрокамДокумента.СпособРасчета, ВыборкаПоСтрокамДокумента.ВидРасчета.Показатели) Тогда
		// Дата начала
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.БазовыйПериодНачало) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала базового периода начисления!", Отказ, Заголовок);
		КонецЕсли;
		// Дата окончания
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.БазовыйПериодКонец) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указана дата окончания базового периода начисления!", Отказ, Заголовок);
		КонецЕсли;
		
	КонецЕсли;

	// ДокументОснование
	Если ВыборкаПоСтрокамДокумента.РасчетПоДоговору Тогда
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументОснование) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указан договор на выполнение работ, по которому производится начисление!", Отказ, Заголовок);
		ИначеЕсли ВыборкаПоСтрокамДокумента.ОшибкаНеСоответствиеОрганизацииДоговора Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + " указанный договор ГПХ оформлен на другую организацию!", Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;

	// Предупредим пользователя, если начисления делаются уже уволенном работнику
	Если ВыборкаПоСтрокамДокумента.ПричинаИзмененияСостояния = Перечисления.ПричиныИзмененияСостояния.Увольнение Тогда
		ДатаНачала = ?(ВыборкаПоСтрокамДокумента.БазовыйПериодНачало <> '00010101', ВыборкаПоСтрокамДокумента.БазовыйПериодНачало, ВыборкаПоШапкеДокумента.ПериодРегистрации);

		Если ВыборкаПоСтрокамДокумента.РасчетПоДоговору Тогда
			СтрокаПродолжениеСообщенияОбОшибке = "на " + Формат(ДатаНачала, "ДЛФ=DD") + " договор с " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " уже прекратил действие (с " + Формат(ВыборкаПоСтрокамДокумента.ДатаПоследнегоДвиженияПоРаботнику, "ДЛФ=DD") + ")!";
		Иначе
			СтрокаПродолжениеСообщенияОбОшибке = "на " + Формат(ДатаНачала, "ДЛФ=DD") + " сотрудник " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " уже уволен (с " + Формат(ВыборкаПоСтрокамДокумента.ДатаПоследнегоДвиженияПоРаботнику, "ДЛФ=DD") + ")!";
		КонецЕсли;
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + СтрокаПродолжениеСообщенияОбОшибке, Ложь, Заголовок);
	КонецЕсли;

	Если ПериодРегистрации < '20100101' Тогда
		Если Режим = "Расчет" Тогда
			// в процессе расчета проверим, чтобы не было двух строк "От обратного"
			Если ВыборкаПоСтрокамДокумента.ПерваяСтрокаОтОбратного <> NULL Тогда
				ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "для сотрудника уже введен вид расчета ""от обратного"" в строке № " + ВыборкаПоСтрокамДокумента.ПерваяСтрокаОтОбратного + ", "
														+ "
														|несколько видов ""от обратного"" с одинаковой очередностью для одного и того же сотрудника надо считать разными документами!", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиНачисления()

// По строке выборок из результатов запроса по документу формируем движения по регистру
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента				- спозиционированная на определеной строке выборка 
//				  							  из результата запроса к ТЧ документа, 
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуОсновныхНачислений(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, НаборЗаписей)
	
	Движение = НаборЗаписей.Добавить();

	// Свойства
	Движение.ПериодРегистрации          = ПериодРегистрации;
	Движение.ПериодДействияНачало       = ВыборкаПоСтрокамДокумента.ПериодДействияНачало;
	Движение.ПериодДействияКонец 	    = ВыборкаПоСтрокамДокумента.ПериодДействияКонец;
	Движение.БазовыйПериодНачало	    = ВыборкаПоСтрокамДокумента.БазовыйПериодНачало;
	Движение.БазовыйПериодКонец 	    = ВыборкаПоСтрокамДокумента.БазовыйПериодКонец;
	Движение.ВидРасчета				    = ВыборкаПоСтрокамДокумента.ВидРасчета;
	Движение.Сторно						= ВыборкаПоСтрокамДокумента.Сторно;

	// Измерения
	Движение.Сотрудник                  = ВыборкаПоСтрокамДокумента.Сотрудник;
	Движение.ФизЛицо                    = ВыборкаПоСтрокамДокумента.ФизЛицо;
	Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;

	// Ресурсы
	Движение.Результат					= ВыборкаПоСтрокамДокумента.Результат;
	// ресурсы по отработанному времени
	Если ВыборкаПоСтрокамДокумента.ЗачетОтработанногоВремени Тогда
		Движение.ОтработаноДней 			= ВыборкаПоСтрокамДокумента.ОтработаноДней;
		Движение.ОтработаноЧасов 			= ВыборкаПоСтрокамДокумента.ОтработаноЧасов;
		Движение.ОтработаноДнейПоПятидневке = ВыборкаПоСтрокамДокумента.ОтработаноДнейПоПятидневке;
	ИначеЕсли ВыборкаПоСтрокамДокумента.УчетОтработанногоВремени Тогда
		Движение.УчитываемыеДни 	= ВыборкаПоСтрокамДокумента.ОтработаноДней;
		Движение.УчитываемыеЧасы 	= ВыборкаПоСтрокамДокумента.ОтработаноЧасов;
	КонецЕсли;
	
	// ресурсы по норме времени
	Если ВыборкаПоСтрокамДокумента.ЗачетНормыВремени Тогда
		Движение.НормаДней 					= ВыборкаПоСтрокамДокумента.НормаДней;
		Движение.НормаЧасов 				= ВыборкаПоСтрокамДокумента.НормаЧасов;
		Движение.НормаДнейПоПятидневке 		= ВыборкаПоСтрокамДокумента.НормаДнейПоПятидневке;
	КонецЕсли;

	// Реквизиты
	Движение.ГрафикРаботы				= ВыборкаПоСтрокамДокумента.ГрафикРаботы;
	Движение.Показатель1                = ВыборкаПоСтрокамДокумента.Показатель1;
	Движение.Показатель2                = ВыборкаПоСтрокамДокумента.Показатель2;
	Движение.Показатель3                = ВыборкаПоСтрокамДокумента.Показатель3;
	Движение.Показатель4                = ВыборкаПоСтрокамДокумента.Показатель4;
	Движение.Показатель5                = ВыборкаПоСтрокамДокумента.Показатель5;
	Движение.Показатель6                = ВыборкаПоСтрокамДокумента.Показатель6;
	Движение.ВидУчетаВремени  	        = ПроведениеРасчетов.ПолучитьВидУчетаВремени(ВыборкаПоСтрокамДокумента.СпособРасчета, ВыборкаПоСтрокамДокумента.СуммированныйУчетРабочегоВремени);
	Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
	Движение.ПериодРасчетаСреднегоЗаработкаНачало		= ВыборкаПоСтрокамДокумента.ПериодРасчетаСреднегоЗаработкаНачало;
	Движение.ПериодРасчетаСреднегоЗаработкаОкончание	= ВыборкаПоСтрокамДокумента.ПериодРасчетаСреднегоЗаработкаОкончание;
	Движение.ДатаНачалаСобытия			= ВыборкаПоСтрокамДокумента.ДатаНачалаСобытия;
	Движение.ОбособленноеПодразделение	= ВыборкаПоШапкеДокумента.Организация;
	Движение.СпособОтраженияВБухучете	= ВыборкаПоСтрокамДокумента.СпособОтраженияВБухучете;
	Движение.ДополнительныеДанные		= ВыборкаПоСтрокамДокумента.ДополнительныеДанные;
	Движение.Авторасчет					= ВыборкаПоСтрокамДокумента.Авторасчет;
	Движение.СторнируемыйДокумент 		= ВыборкаПоСтрокамДокумента.СторнируемыйДокумент;
	Движение.СуммаВычетовДоходовОтОбратного = ВыборкаПоСтрокамДокумента.СуммаВычетовДоходовОтОбратного;	
	
КонецПроцедуры // ДобавитьСтрокуОсновныхНачислений

// По строке выборок из результатов запроса по документу формируем движения по регистру
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента				- спозиционированная на определеной строке выборка 
//				  							  из результата запроса к ТЧ документа, 
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуДопНачислений(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, НаборЗаписей)
	
	Движение = НаборЗаписей.Добавить();

	// Свойства
	Движение.ПериодРегистрации          = ?(ВыборкаПоСтрокамДокумента.БазовыйПериодНачало > КонецМесяца(ПериодРегистрации), ПериодРегистрации, Макс(ПериодРегистрации, ВыборкаПоСтрокамДокумента.БазовыйПериодНачало));
	Движение.БазовыйПериодНачало    	= ВыборкаПоСтрокамДокумента.БазовыйПериодНачало;
	Движение.БазовыйПериодКонец		    = ВыборкаПоСтрокамДокумента.БазовыйПериодКонец;
	Движение.ВидРасчета				    = ВыборкаПоСтрокамДокумента.ВидРасчета;
	Движение.Сторно						= ВыборкаПоСтрокамДокумента.Сторно;

	// Измерения
	Движение.Сотрудник                  = ВыборкаПоСтрокамДокумента.Сотрудник;
	Движение.ФизЛицо                    = ВыборкаПоСтрокамДокумента.ФизЛицо;
	Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;

	// Ресурсы
	Движение.Результат					= ВыборкаПоСтрокамДокумента.Результат;

	// Реквизиты
	Движение.Показатель1                = ВыборкаПоСтрокамДокумента.Показатель1;
	Движение.Показатель2                = ВыборкаПоСтрокамДокумента.Показатель2;
	Движение.Показатель3                = ВыборкаПоСтрокамДокумента.Показатель3;
	Движение.Показатель4                = ВыборкаПоСтрокамДокумента.Показатель4;
	Движение.Показатель5                = ВыборкаПоСтрокамДокумента.Показатель5;
	Движение.Показатель6                = ВыборкаПоСтрокамДокумента.Показатель6;
	Движение.ЧислоМесяцев				= ВыборкаПоСтрокамДокумента.ЧислоМесяцев;
	Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
	Если ВыборкаПоСтрокамДокумента.РасчетПоДоговору Тогда
		Движение.ДокументОснование		= ВыборкаПоСтрокамДокумента.ДокументОснование;
	КонецЕсли;
	Движение.ОбособленноеПодразделение	= ВыборкаПоШапкеДокумента.Организация;
	Движение.СпособОтраженияВБухучете	= ВыборкаПоСтрокамДокумента.СпособОтраженияВБухучете;	
	Движение.ДополнительныеДанные		= ВыборкаПоСтрокамДокумента.ДополнительныеДанные;
	Движение.Авторасчет					= ВыборкаПоСтрокамДокумента.Авторасчет;
	Движение.СторнируемыйДокумент 		= ВыборкаПоСтрокамДокумента.СторнируемыйДокумент;
	Движение.СуммаВычетовДоходовОтОбратного = ВыборкаПоСтрокамДокумента.СуммаВычетовДоходовОтОбратного;	
	
КонецПроцедуры // ДобавитьСтрокуДопНачислений

// По выборке из результатов запроса по документу формируем движения по регистру
//
// Параметры: 
//  ВыборкаПоШапкеДокумента				- спозиционированная на определеной строке выборка 
//				  							  из результата запроса к документу 
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуРабочегоВремени(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям, НаборЗаписей)
	
	Если ВыборкаПоНачислениям.ЯвляетсяПочасовымОтклонением Тогда
		Движение = НаборЗаписей.Добавить();
		
		// Свойства
		Движение.Период = ВыборкаПоНачислениям.ПериодДействияНачало;
		
		// Измерения
		Движение.Сотрудник 							= ВыборкаПоНачислениям.Сотрудник;
		Движение.Организация 						= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
		Движение.ВидИспользованияРабочегоВремени 	= ВыборкаПоНачислениям.ВидИспользованияРабочегоВремени;
		
		// Ресурсы
		Движение.Дней			= 0;
		Движение.Часов			= ВыборкаПоНачислениям.ОплачиватьЧасов;
		Движение.ДнейПоНорме 	= 0;
		Движение.ЧасовПоНорме 	= ВыборкаПоНачислениям.ОплачиватьЧасов;
		
		// Реквизиты
		Движение.СводнаяЗапись = Ложь;
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуРабочегоВремени

// Добавляет одну строку в движения по регистрам накопления.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, 
															ВыборкаПоСтрокамДокумента, 
															ИсчислениеНалоговСтруктурныхЕдиниц)
															
    Если ВыборкаПоСтрокамДокумента.Результат = 0 Тогда
    	// нулевые суммы не записываем
    	Возврат;
    КонецЕсли;

    Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик 		= ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница,
																					ВыборкаПоШапкеДокумента.Организация,
																					ИсчислениеНалоговСтруктурныхЕдиниц,
																					Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
    КонецЕсли;

	////////////////////////////////
	// ИПНСведенияОДоходах

	Если ВыборкаПоСтрокамДокумента.УчитыватьИПН Тогда 
		
		Движение = Движения.ИПНСведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Иначе
			Движение.Период = НачалоМесяца(ВыборкаПоСтрокамДокумента.ПериодДействияНачало);
		КонецЕсли;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоСтрокамДокумента.ОблагаетсяИПН;
		Движение.ВидРасчета			= ВыборкаПоСтрокамДокумента.ВидРасчета;
		Движение.ВидДохода			= ВыборкаПоСтрокамДокумента.ВидДохода;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;		
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;
		
	КонецЕсли;
	
	////////////////////////////////
	// СНСведенияОДоходах

	Если ВыборкаПоСтрокамДокумента.УчитыватьСН Тогда
		
		Движение = Движения.СНСведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Иначе
			Движение.Период = НачалоМесяца(ВыборкаПоСтрокамДокумента.ПериодДействияНачало);
		КонецЕсли;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоСтрокамДокумента.ОблагаетсяСН;
		Движение.ВидРасчета			= ВыборкаПоСтрокамДокумента.ВидРасчета;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;		
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;
		
	КонецЕсли;
	
	////////////////////////////////
	// ОПВСведенияОДоходах

	Если ВыборкаПоСтрокамДокумента.УчитыватьОПВ Тогда
		
		Движение = Движения.ОПВСведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Иначе
			Движение.Период = НачалоМесяца(ВыборкаПоСтрокамДокумента.ПериодДействияНачало);
		КонецЕсли;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоСтрокамДокумента.ОблагаетсяОПВ;
		Движение.ВидРасчета			= ВыборкаПоСтрокамДокумента.ВидРасчета;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;		
		КонецЕсли;
			
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;
		
	КонецЕсли;
		
	////////////////////////////////
	// СОСведенияОДоходах

	Если ВыборкаПоСтрокамДокумента.УчитыватьСО Тогда
		
		Движение = Движения.СОСведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Иначе
			Движение.Период = НачалоМесяца(ВыборкаПоСтрокамДокумента.ПериодДействияНачало);
		КонецЕсли;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоСтрокамДокумента.ОблагаетсяСО;
		Движение.ВидРасчета			= ВыборкаПоСтрокамДокумента.ВидРасчета;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;		
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;
		
	КонецЕсли;
		
	////////////////////////////////
	// ОППВСведенияОДоходах

	Если ВыборкаПоШапкеДокумента.ОрганизацияЯвляетсяВкладчикомОППВ 
		И ВыборкаПоСтрокамДокумента.ИсчислятьОППВ 
		И ВыборкаПоСтрокамДокумента.УчитыватьОППВ Тогда
		
		Движение = Движения.ОППВСведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Иначе
			Движение.Период = НачалоМесяца(ВыборкаПоСтрокамДокумента.ПериодДействияНачало);
		КонецЕсли;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоСтрокамДокумента.ОблагаетсяОППВ;
		Движение.ВидРасчета			= ВыборкаПоСтрокамДокумента.ВидРасчета;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;		
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;
		
	КонецЕсли;
	
	////////////////////////////////
	// ОПВРСведенияОДоходах

	Если ВыборкаПоСтрокамДокумента.УчитыватьОПВР Тогда
		
		Движение = Движения.ОПВРСведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Иначе
			Движение.Период = НачалоМесяца(ВыборкаПоСтрокамДокумента.ПериодДействияНачало);
		КонецЕсли;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоСтрокамДокумента.ОблагаетсяОПВР;
		Движение.ВидРасчета			= ВыборкаПоСтрокамДокумента.ВидРасчета;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;		
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;
		
	КонецЕсли;
	
	////////////////////////////////
	// ВОСМССведенияОДоходах

	Если ВыборкаПоСтрокамДокумента.УчитыватьВОСМС Тогда
		
		Движение = Движения.ВОСМССведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Иначе
			Движение.Период = НачалоМесяца(ВыборкаПоСтрокамДокумента.ПериодДействияНачало);
		КонецЕсли;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоСтрокамДокумента.ОблагаетсяВОСМС;
		Движение.ВидРасчета			= ВыборкаПоСтрокамДокумента.ВидРасчета;
		Движение.ВидДохода			= ВыборкаПоСтрокамДокумента.ВидДохода;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;		
		КонецЕсли;
			
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;
		
	КонецЕсли;
	
	////////////////////////////////
	// ООСМССведенияОДоходах

	Если ВыборкаПоСтрокамДокумента.УчитыватьООСМС Тогда
		
		Движение = Движения.ООСМССведенияОДоходах.мТаблицаДвижений.Добавить();
		
		//Свойства
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.Период = ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Иначе
			Движение.Период = НачалоМесяца(ВыборкаПоСтрокамДокумента.ПериодДействияНачало);
		КонецЕсли;
		
		// Измерения
		Движение.ФизЛицо			= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация		= ВыборкаПоШапкеДокумента.Организация;
		Движение.СпособНалогообложения	=	ВыборкаПоСтрокамДокумента.ОблагаетсяООСМС;
		Движение.ВидРасчета			= ВыборкаПоСтрокамДокумента.ВидРасчета;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;		
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода		= ВыборкаПоСтрокамДокумента.Результат;
		
	КонецЕсли;


	Если ВыборкаПоСтрокамДокумента.ЯвляетсяПрочимДоходом Тогда

		////////////////////////////////
		// ВыплаченныеДоходыРаботникамОрганизацийНУ
		
		Движение = Движения.ВыплаченныеДоходыРаботникамОрганизацийНУ.мТаблицаДвижений.Добавить();
		
		//Свойства
		Движение.Период 		= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		
		// Измерения
		Движение.ФизЛицо				= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница		= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.МесяцНалоговогоПериода	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Иначе
			Движение.МесяцНалоговогоПериода = НачалоМесяца(ВыборкаПоСтрокамДокумента.ПериодДействияНачало);
		КонецЕсли;
		Движение.Организация			= ВыборкаПоШапкеДокумента.Организация;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;		
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаДохода			= ВыборкаПоСтрокамДокумента.Результат;
	
	Иначе

		////////////////////////////////
		// ВзаиморасчетыСРаботникамиОрганизаций
		
		Движение = Движения.ВзаиморасчетыСРаботникамиОрганизаций.мТаблицаДвижений.Добавить();
		
		//Свойства
		Движение.ВидДвижения	= ВидДвиженияНакопления.Приход;
		Движение.Период 		= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		
		// Измерения
		Движение.ФизЛицо				= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница		= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодВзаиморасчетов	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация			= ВыборкаПоШапкеДокумента.Организация;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации	= ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;		
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаВзаиморасчетов	= ВыборкаПоСтрокамДокумента.Результат;
		
		// Реквизиты
		Движение.ВидСтроки				= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление;
	
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамНакопления()

// По выборке из результатов запроса по документу формируем движения по регистру
//
// Параметры: 
//  ВыборкаПоШапкеДокумента				- спозиционированная на определеной строке выборка 
//				  							  из результата запроса к документу 
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВРасчетПервойПоловиныМесяца(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям)
	
	Если НЕ ВыборкаПоНачислениям.ЯвляетсяПрочимДоходом Тогда

		ЭтоОсновноеНачисление = (ТипЗнч(ВыборкаПоНачислениям.ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));

		Движение = Движения.РасчетПервойПоловиныМесяца.мТаблицаДвижений.Добавить();
		
		// Свойства
		Движение.Период = КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		
		// Измерения
		Движение.Физлицо 				= ВыборкаПоНачислениям.ФизЛицо;
		Движение.Организация 			= ВыборкаПоШапкеДокумента.Организация;
		Движение.ВидРасчета 			= ВыборкаПоНачислениям.ВидРасчета;
		
		// Ресурсы
		Движение.СуммаВзаиморасчетов	= ВыборкаПоНачислениям.Результат;
		Если ЭтоОсновноеНачисление Тогда
			Движение.НормаДнейПоПятидневке = ВыборкаПоНачислениям.НормаДнейПоПятидневке;
		КонецЕсли;
		
		// Реквизиты
		Движение.Сотрудник 				= ВыборкаПоНачислениям.Сотрудник;
		Движение.ДатаНачала				= ВыборкаПоНачислениям.ПериодДействияНачало;
		Движение.ДатаОкончания			= ВыборкаПоНачислениям.ПериодДействияКонец;
		
		Если ЭтоОсновноеНачисление Тогда
			Движение.ГрафикРаботы		= ВыборкаПоНачислениям.ГрафикРаботы;
			Движение.ВидУчетаВремени	= ПроведениеРасчетов.ПолучитьВидУчетаВремени(ВыборкаПоНачислениям.СпособРасчета, ВыборкаПоНачислениям.СуммированныйУчетРабочегоВремени);
		Иначе
			Движение.ДокументОснование	= ВыборкаПоНачислениям.ДокументОснование;
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуВРасчетПервойПоловиныМесяца()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ПередЗаписью"
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(Начисления);
	МассивТЧ.Добавить(ДополнительныеНачисления);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ);
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
    
	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект) Тогда
		Возврат
	КонецЕсли;

	// создадим таблицы движений по структуре совпадающие со структрой регистров накопления
	МассивНаборыЗаписей = Новый Массив();
	МассивНаборыЗаписей.Добавить(Движения.ВзаиморасчетыСРаботникамиОрганизаций);
	МассивНаборыЗаписей.Добавить(Движения.ВыплаченныеДоходыРаботникамОрганизацийНУ);
	МассивНаборыЗаписей.Добавить(Движения.ИПНСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ОПВСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.СНСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.СОСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ОППВСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ВОСМССведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ООСМССведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ОПВРСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.РасчетПервойПоловиныМесяца);
	
	Для Каждого НаборЗаписей Из МассивНаборыЗаписей Цикл
		НаборЗаписей.мТаблицаДвижений = НаборЗаписей.ВыгрузитьКолонки();
	КонецЦикла;

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	УчетнаяПолитикаПоПерсоналуОрганизации = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация];
	
	ИсчислениеНалоговСтруктурныхЕдиниц = глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц");

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда

			ЭтоРасчетПервойПоловиныМесяца = (ВыборкаПоШапкеДокумента.ПериодНачисления = Перечисления.ПериодНачисленияЗарплаты.ПерваяПоловинаТекущегоМесяца);

			////////////////////////////////////////////////////////////////////////
			// основные Начисления

			Движения.ОсновныеНачисленияРаботниковОрганизаций.мВыполнятьРасчетПериодаНачисленияСотрудника = УчетнаяПолитикаПоПерсоналуОрганизации.ПроверкаПериодовНачисления;

			// получим реквизиты табличной части
			ВыборкаПоНачислениям = СформироватьЗапросПоНачисления(ВыборкаПоШапкеДокумента, , , "ОбработкаПроведения").Выбрать();

			Пока ВыборкаПоНачислениям.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоНачислениям, Отказ, Заголовок, "ОбработкаПроведения");
				Если НЕ Отказ Тогда
					// Заполним записи в наборах записей регистров
					Если ЭтоРасчетПервойПоловиныМесяца Тогда
						ДобавитьСтрокуВРасчетПервойПоловиныМесяца(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям);
					Иначе
						ДобавитьСтрокуОсновныхНачислений(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям, Движения.ОсновныеНачисленияРаботниковОрганизаций);
						ДобавитьСтрокуРабочегоВремени(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям, Движения.РабочееВремяРаботниковОрганизаций);
						ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоНачислениям, ИсчислениеНалоговСтруктурныхЕдиниц);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;

			////////////////////////////////////////////////////////////////////////
			// дополнительные Начисления

			// получим реквизиты табличной части
			ВыборкаПоДопНачислениям = СформироватьЗапросПоДопНачисления(ВыборкаПоШапкеДокумента, , , "ОбработкаПроведения").Выбрать();

			Пока ВыборкаПоДопНачислениям.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиДопНачисления(ВыборкаПоШапкеДокумента, ВыборкаПоДопНачислениям, Отказ, Заголовок, "ОбработкаПроведения");
				Если НЕ Отказ Тогда
					// Заполним записи в наборах записей регистров
					Если ЭтоРасчетПервойПоловиныМесяца Тогда
						ДобавитьСтрокуВРасчетПервойПоловиныМесяца(ВыборкаПоШапкеДокумента, ВыборкаПоДопНачислениям);
					Иначе
						ДобавитьСтрокуДопНачислений(ВыборкаПоШапкеДокумента, ВыборкаПоДопНачислениям, Движения.ДополнительныеНачисленияРаботниковОрганизаций);
						ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоДопНачислениям, ИсчислениеНалоговСтруктурныхЕдиниц);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;

			Если НЕ Отказ Тогда
				// свернем таблицы регистров накопления и запишем их в наборы записей
				Для Каждого НаборЗаписей Из МассивНаборыЗаписей Цикл
					ОбщегоНазначения.СвернутьТаблицуДвиженийРегистраНакопления(НаборЗаписей);
					НаборЗаписей.мТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
					НаборЗаписей.Загрузить(НаборЗаписей.мТаблицаДвижений);
				Конеццикла;
				
			КонецЕсли;
			
			// выполним удаление и перезаполнений исправленного документа
			Если ЗначениеЗаполнено(ПерерассчитываемыйДокумент) Тогда
					
				ПроведениеРасчетов.УдалитьСведенияОПерезаполненииДокумента(Ссылка, Неопределено, Истина); // Только по исправленным документам и только сотрудников нашего документа
					
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура - обработчик события "ПриКопировании"
//
Процедура ПриКопировании(ОбъектКопирования)
	
	ПерерассчитываемыйДокумент = Неопределено;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ 

мПоддержкаРаботыСоСтруктурнымиПодразделениями = Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить();
