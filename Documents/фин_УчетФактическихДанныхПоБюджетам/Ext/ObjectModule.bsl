#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Процедура ОбработкаПроведения
// 
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	фин_ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	ПараметрыПроведения = Документы.фин_УчетФактическихДанныхПоБюджетам.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	//
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_КонтрольЛимитовПриРучномУчетеФактическихДанных") И НЕ фин_РегистрацияФактическихДанныхПоБюджетированию.РазрешеноПревышениеКонтролируемыхЗначенийПоБюджетам() Тогда
		
		ТаблицаДвиженийПоЛимитам = Новый ТаблицаЗначений;
		ОбъектМетаданных = Метаданные.РегистрыНакопления.фин_КонтролируемыеФинансовыеПоказатели;
		Для Каждого Измерение Из ОбъектМетаданных.Измерения Цикл
			ТаблицаДвиженийПоЛимитам.Колонки.Добавить(Измерение.Имя,Измерение.Тип);
		КонецЦикла;
		Для Каждого Измерение Из ОбъектМетаданных.Ресурсы Цикл
			ТаблицаДвиженийПоЛимитам.Колонки.Добавить(Измерение.Имя,Измерение.Тип);
		КонецЦикла;
		
		ОбъектКонтроль = Обработки.фин_КонтрольПрогнозныхТранзакций.Создать();
		ОбъектКонтроль.Документ = Ссылка;
		ОбъектКонтроль.Организация = Организация;
		ОбъектКонтроль.Дата = Дата;
		ОбъектКонтроль.БюджетныеОперации.Загрузить(БюджетныеОперации.Выгрузить());
		Обработки.фин_КонтрольПрогнозныхТранзакций.ИнициализироватьДанныеОбработки(ОбъектКонтроль);
		Обработки.фин_КонтрольПрогнозныхТранзакций.ИнициализироватьДанныеРазрезов(ОбъектКонтроль);
		Если Не Обработки.фин_КонтрольПрогнозныхТранзакций.КонтрольВыполнен(ОбъектКонтроль,,ТаблицаДвиженийПоЛимитам)  Тогда
			Отказ = Истина;
			Возврат;
		Иначе
			фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ТаблицаДвиженийПоЛимитам, Движения, Отказ,,,,"фин_КонтролируемыеФинансовыеПоказатели");	
		КонецЕсли;
		
	КонецЕсли;
    	
	фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаБюджетныеОперации, Движения, Отказ,"БюджетныеОперации",,,фин_ОбщегоНазначенияВызовСервераПовтИсп.РегистрФактическихДанныхДляДокумента("фин_УчетФактическихДанныхПоБюджетам").ИмяРегистра);	
	
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ВестиУчетПоПлануСчетовБюджетирования") Тогда
		ТаблицаПроводок = фин_ПроцедурыУчетаПоУправленческомуПлануСчетовСервер.ПодготовитьТаблицуПроводокДокументаУчетФактическихДанных(ПараметрыПроведения.Реквизиты[0]);
		фин_ПроцедурыУчетаПоУправленческомуПлануСчетовСервер.ЗарегистрироватьПроводкиДокумента(ТаблицаПроводок,Движения,Отказ);	
	КонецЕсли;
		
КонецПроцедуры //ОбработкаПроведения


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
		
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура") 
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		Документы.фин_УчетФактическихДанныхПоБюджетам.ЗаполнитьПоДокументуОснованию(ЭтотОбъект, ДанныеЗаполнения);
	ИначеЕсли ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения = Тип("Структура") Тогда
		Попытка
			Документы.фин_УчетФактическихДанныхПоБюджетам.ЗаполнитьПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		Исключение
		КонецПопытки;
		Возврат;
	КонецЕсли;
	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект,фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"));
КонецПроцедуры

#КонецЕсли
