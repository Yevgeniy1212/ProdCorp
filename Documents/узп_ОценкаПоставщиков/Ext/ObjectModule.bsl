
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаПроведения".
//
Процедура ОбработкаПроведения(Отказ, Режим)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	               |	узп_ОценкаПоставщиков.Дата,
	               |	узп_ОценкаПоставщиков.Организация,
	               |	узп_ОценкаПоставщиков.СтруктурноеПодразделение,
	               |	узп_ОценкаПоставщиков.Состояние,
	               |	узп_ОценкаПоставщиков.Ответственный,
	               |	узп_ОценкаПоставщиков.Автор,
	               |	узп_ОценкаПоставщиков.Контрагент,
	               |	узп_ОценкаПоставщиков.Лот,
	               |	узп_ОценкаПоставщиков.ТипЦен,
	               |	узп_ОценкаПоставщиковОценка.Критерий,
	               |	узп_ОценкаПоставщиковОценка.Балл,
	               |	узп_ОценкаПоставщиковОценка.Значение,
	               |	узп_ОценкаПоставщиковОценка.Комментарий
	               |ИЗ
	               |	Документ.узп_ОценкаПоставщиков.Оценка КАК узп_ОценкаПоставщиковОценка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.узп_ОценкаПоставщиков КАК узп_ОценкаПоставщиков
	               |		ПО узп_ОценкаПоставщиковОценка.Ссылка = узп_ОценкаПоставщиков.Ссылка
	               |ГДЕ
	               |	узп_ОценкаПоставщиков.Ссылка = &Ссылка";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	// регистр узп_ОценкаПоставщиков
	Движения.узп_ОценкаПоставщиков.Записывать = Истина;
	Движения.узп_ОценкаПоставщиков.Очистить();
	Пока Выборка.Следующий() Цикл
		//Если Выборка.Критерий.Предопределенный Тогда
		//	Продолжить;
		//КонецЕсли;
		Движение = Движения.узп_ОценкаПоставщиков.Добавить();
		Движение.Период = Выборка.Дата;
		Движение.Организация = Выборка.Организация;
		Движение.СтруктурноеПодразделение = Выборка.СтруктурноеПодразделение;
		Движение.Контрагент = Выборка.Контрагент;
		Движение.Лот = Выборка.Лот;
		Движение.Критерий = Выборка.Критерий;
		Движение.Балл = Выборка.Балл;
		Движение.Значение = Выборка.Значение;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
		
	//ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	//	
	//Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура") 
	//	И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
	//	Документы.узп_ЗаказПокупателя.ЗаполнитьПоДокументуОснованию(ЭтотОбъект, ДанныеЗаполнения);
	//	Возврат;
	//КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.узп_Лот") Тогда
		// Заполнение шапки
		Организация = ДанныеЗаполнения.Организация;
		Ответственный = ДанныеЗаполнения.Ответственный;
		Состояние = ДанныеЗаполнения.Состояние;
		Лот = ДанныеЗаполнения.Ссылка;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СтруктурноеПодразделение = ДанныеЗаполнения.СтруктурноеПодразделение;
		Для каждого СтрокаТЧ Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = НоменклатураПоставщика.Добавить();
			НоваяСтрока.Номенклатура = СтрокаТЧ.Номенклатура;
		КонецЦикла;
	КонецЕсли;
	
	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"));
	
КонецПроцедуры

#КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
