#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбластьПланирования=Перечисления.узп_ОбластиПланированияЗакупок.ПоПодразделению Тогда
		Для Каждого СтрокаТовар Из Товары Цикл
			СтрокаТовар.Подразделение = Подразделение;
		КонецЦикла;
		Для Каждого СтрокаУслуги Из Услуги Цикл
			СтрокаУслуги.Подразделение = Подразделение;
		КонецЦикла;
	КонецЕсли;
	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
КонецПроцедуры

// Процедура - обработчик события "ОбработкаПроведения".
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	фин_ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.узп_ПланЗакупок.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ Тогда
		фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаТовары, Движения, Отказ,"Товары","узп_УправлениеЗакупками","ЗарегистрироватьДвиженияПланЗакупок",,);
		фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаУслуги, Движения, Отказ,"Услуги","узп_УправлениеЗакупками","ЗарегистрироватьДвиженияПланЗакупок",,);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Если ОбластьПланирования<>Перечисления.узп_ОбластиПланированияЗакупок.ПоПодразделению Тогда
		дог_УправлениеДоговорами.ИсключитьПроверку(ПроверяемыеРеквизиты,"Подразделение");
	КонецЕсли;
	
	//Проверка на несоответствие номенклатур табличным частям
	Документы.узп_ПланЗакупок.ПроверитьТоварыУслуги(ЭтотОбъект, Отказ);
	
	//Проверка превышения лимитов
	Отказ = Не Документы.узп_ПланЗакупок.ПроверкаНаЛимиты(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	УчетЗаявок = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("УказыватьДляПозицийПланаЗакупокЗаявкиОснования");
	ПризнакПроекта = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("узп_ВестиУчетЗакупокПоПроектам");
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.узп_ЗаявкаМТС") Тогда
		// Заполнение шапки
		Комментарий = ДанныеЗаполнения.Комментарий;
		Организация = ДанныеЗаполнения.Организация;
		ПериодПланирования = ДанныеЗаполнения.ПериодПланирования;
		Подразделение = ДанныеЗаполнения.Подразделение;
		Состояние = ДанныеЗаполнения.Состояние;
		СтруктурноеПодразделение = ДанныеЗаполнения.СтруктурноеПодразделение;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Сценарий = ДанныеЗаполнения.Сценарий;
		ЗакрытьВключенныеЗаявки = УчетЗаявок;
		ОбластьПланирования = ?(ЗначениеЗаполнено(Подразделение),Перечисления.узп_ОбластиПланированияЗакупок.ПоПодразделению,Перечисления.узп_ОбластиПланированияЗакупок.ПоОрганизации);
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		Товары.Очистить();
		Услуги.Очистить();
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовары.ЕдиницаИзмерения;
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Коэффициент = ТекСтрокаТовары.Коэффициент;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ОбъектРемонта = ТекСтрокаТовары.ОбъектРемонта;
			НоваяСтрока.ПериодПланирования = ТекСтрокаТовары.ПериодПланирования;
			НоваяСтрока.Подразделение = ТекСтрокаТовары.Подразделение;
			НоваяСтрока.Приоритет = ТекСтрокаТовары.Приоритет;
			НоваяСтрока.Сумма = ТекСтрокаТовары.Сумма;
			НоваяСтрока.Характеристика = ТекСтрокаТовары.Характеристика;
			НоваяСтрока.Цена = ТекСтрокаТовары.Цена;
			Если УчетЗаявок Тогда
				НоваяСтрока.Заявка = ДанныеЗаполнения.Ссылка;
			КонецЕсли;
			Если ПризнакПроекта тогда
				НоваяСтрока.Проект = ТекСтрокаТовары.Проект;
			КонецЕсли;
			
		КонецЦикла;
		Для Каждого ТекСтрокаУслуги Из ДанныеЗаполнения.Услуги Цикл
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Количество = ТекСтрокаУслуги.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаУслуги.Номенклатура;
			НоваяСтрока.ОбъектРемонта = ТекСтрокаТовары.ОбъектРемонта;
			НоваяСтрока.ПериодПланирования = ТекСтрокаУслуги.ПериодПланирования;
			НоваяСтрока.Подразделение = ТекСтрокаУслуги.Подразделение;
			НоваяСтрока.Приоритет = ТекСтрокаУслуги.Приоритет;
			НоваяСтрока.Сумма = ТекСтрокаУслуги.Сумма;
			НоваяСтрока.Характеристика = ТекСтрокаУслуги.Характеристика;
			НоваяСтрока.Цена = ТекСтрокаУслуги.Цена;
			Если УчетЗаявок Тогда
				НоваяСтрока.Заявка = ДанныеЗаполнения.Ссылка;
			КонецЕсли;
			Если ПризнакПроекта тогда
				НоваяСтрока.Проект = ТекСтрокаУслуги.Проект;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"));
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#КонецЕсли

