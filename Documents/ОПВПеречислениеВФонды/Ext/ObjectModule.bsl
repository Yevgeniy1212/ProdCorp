// - БК - начало
Перем мОтображатьСтруктурныеПодразделения Экспорт;
// - БК - конец

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Процедура выполняет заполнение табличной части документа по данным регистров.
//
// Параметры: ВариантЗаполнения = "Остатки" на дату, "Остатки на конец месяца" на конец месяца
//            Исчисление (тип "Булево") = Истина в случае заполнения исчисленными суммами ОПВ
//            							  Ложь в случае заполнения удержанными суммами ОПВ по НУ (суммы к перечислению)
//
Процедура Автозаполнение() Экспорт
	
	ПоУдельномуВесу = (СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюОПВ.ПоЗадолженностиЗаМесяцПоНУ 
						Или СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюОПВ.ПоОстаткамЗадолженностиНаКонецМесяцаПоНУ);
	
	ПоОстаткам 		= (СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюОПВ.ПоОстаткамЗадолженностиНаКонецМесяца
						Или СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюОПВ.ПоОстаткамЗадолженностиНаКонецМесяцаПоНУ);
	
	ПенсионныеВзносы.Очистить();
	
	ПоДаннымОПВ = (ВидОперации = Перечисления.ВидыОперацийОПВПеречислениеВФонды.ПеречислениеОбязательныхПенсионныхВзносов);
	ПоДаннымОПВР = (ВидОперации = Перечисления.ВидыОперацийОПВПеречислениеВФонды.ПеречислениеОбязательныхПенсионныхВзносовРаботодателя);
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеРеглУчетаТекст = "";
	
	Если ПорядокЗаполнения = 1 Тогда
		УсловиеСтруктурноеПодразделение = " И СтруктурнаяЕдиница = &парамСтруктурноеПодразделение ";
	Иначе
		УсловиеСтруктурноеПодразделение = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПодразделениеОрганизации)
		ИЛИ ПоДаннымОПВ Тогда
		ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст + 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТ_РаботникиОрганизаций
		|ИЗ
		|	(ВЫБРАТЬ
		|		РаботникиОрганизации.Сотрудник.Физлицо КАК ФизЛицо,
		|		МАКСИМУМ(ВЫБОР
		|				КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|					ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
		|				ИНАЧЕ РаботникиОрганизации.Период
		|			КОНЕЦ) КАК Период
		|	ИЗ
		|		РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|	ГДЕ
		|		РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
		|		И РаботникиОрганизации.Период <= &парамНачало
		|		И РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		РаботникиОрганизации.Сотрудник.Физлицо) КАК ДатыПоследнихНазначений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизацийСрезПоследних
		|		ПО ДатыПоследнихНазначений.ФизЛицо = РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо
		|			И (ДатыПоследнихНазначений.Период = ВЫБОР
		|				КОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|					ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизацийСрезПоследних.Период, ДЕНЬ, -1)
		|				ИНАЧЕ РаботникиОрганизацийСрезПоследних.Период
		|			КОНЕЦ)
		|			И (РаботникиОрганизацийСрезПоследних.Организация = &парамГоловнаяОрганизация)
		|			И (РаботникиОрганизацийСрезПоследних.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
		|ГДЕ
		|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации В ИЕРАРХИИ(&парамПодразделениеОрганизации)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДоговорникиОрганизации.Сотрудник.Физлицо
		|ИЗ
		|	РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ДоговорникиОрганизации.Сотрудник.Физлицо КАК ФизЛицо,
		|			МАКСИМУМ(ДоговорникиОрганизации.Договор) КАК Договор
		|		ИЗ
		|			РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ДоговорникиОрганизации.Сотрудник.Физлицо КАК ФизЛицо,
		|					МАКСИМУМ(ДоговорникиОрганизации.ДатаНачала) КАК ДатаНачала
		|				ИЗ
		|					РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
		|				ГДЕ
		|					ДоговорникиОрганизации.ДатаНачала <= &парамНачало
		|					И ДоговорникиОрганизации.Организация = &парамГоловнаяОрганизация
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ДоговорникиОрганизации.Сотрудник.Физлицо) КАК ДоговорникиОрганизацииСрез
		|				ПО ДоговорникиОрганизации.Сотрудник.Физлицо = ДоговорникиОрганизацииСрез.ФизЛицо
		|					И ДоговорникиОрганизации.ДатаНачала = ДоговорникиОрганизацииСрез.ДатаНачала
		|					И (ДоговорникиОрганизации.Организация = &парамГоловнаяОрганизация)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ДоговорникиОрганизации.Сотрудник.Физлицо) КАК ДоговорникиОрганизацииСрез
		|		ПО ДоговорникиОрганизации.Сотрудник.Физлицо = ДоговорникиОрганизацииСрез.ФизЛицо
		|			И ДоговорникиОрганизации.Договор = ДоговорникиОрганизацииСрез.Договор
		|			И (ДоговорникиОрганизации.Организация = &парамГоловнаяОрганизация)
		|ГДЕ
		|	ДоговорникиОрганизации.ПодразделениеОрганизации В ИЕРАРХИИ(&парамПодразделениеОрганизации)
		|;
		|";
		
	КонецЕсли;
	
	
	Если Не ПоУдельномуВесу Тогда
		ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОПВРасчетыСФондамиОстатки.Физлицо КАК ФизЛицо,
		|	ОПВРасчетыСФондамиОстатки.ВзносОстаток КАК Сумма,
		|	ИСТИНА КАК Авторасчет
		|ИЗ
		|	РегистрНакопления." + ?(ПоДаннымОПВ, "ОПВРасчетыСФондами", ?(ПоДаннымОПВР, "ОПВРРасчетыСФондами", "ОППВРасчетыСФондами")) + ".Остатки(
		|				&парамГраницаОстатков,
		|				Организация = &парамОрганизация" + УсловиеСтруктурноеПодразделение + "
		|				И ВидПлатежа = &парамВидПлатежа
		|				И " + ?(ПоОстаткам, "
		|					МесяцНалоговогоПериода <= КОНЕЦПЕРИОДА(&парамМесяц, МЕСЯЦ)", "
		|					МесяцНалоговогоПериода МЕЖДУ НАЧАЛОПЕРИОДА(&парамМесяц, МЕСЯЦ) И КОНЕЦПЕРИОДА(&парамМесяц, МЕСЯЦ)") + ") КАК ОПВРасчетыСФондамиОстатки";
	Иначе
		ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОПВРасчетыСФондамиОстатки.Физлицо КАК ФизЛицо,
		|	ОПВРасчетыСФондамиОстатки.ВзносОстаток КАК Сумма,
		|	ИСТИНА КАК Авторасчет
		|ИЗ
		|	РегистрНакопления.ОПВПодлежитПеречислениюВФонды.Остатки(
		|				&парамГраницаОстатков,
		|				Организация = &парамОрганизация			
		|				И " + ?(ПоОстаткам, "
		|					МесяцВыплатыДоходов <= КОНЕЦПЕРИОДА(&парамМесяц, МЕСЯЦ)", "
		|					МесяцВыплатыДоходов МЕЖДУ НАЧАЛОПЕРИОДА(&парамМесяц, МЕСЯЦ) И КОНЕЦПЕРИОДА(&парамМесяц, МЕСЯЦ)") + ") КАК ОПВРасчетыСФондамиОстатки";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПодразделениеОрганизации)
		ИЛИ ПоДаннымОПВ Тогда
		ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст +
		"		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РаботникиОрганизаций КАК РаботникиОрганизаций
		|		ПО РаботникиОрганизаций.ФизЛицо = ОПВРасчетыСФондамиОстатки.ФизЛицо";
	
		// - КУФИБ - начало
		Если мОтображатьСтруктурныеПодразделения Тогда
			ТекстФильтрПоСтруктурномуПодразделению = "ВЫБРАТЬ
			|	УчетВзаиморасчетов.Сотрудник КАК Сотрудник,
			|	УчетВзаиморасчетов.Сотрудник.ФизЛицо КАК ФизЛицо,
			|	УчетВзаиморасчетов.СтруктурноеПодразделение
			|ИЗ
			|	РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамМесяц,Организация = &парамГоловнаяОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетов";
			ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст +"
			|	ЛЕВОЕ СОЕДИНЕНИЕ ("+ТекстФильтрПоСтруктурномуПодразделению+") КАК ФильтрПоСтруктурномуПодразделению										 
			|    	ПО ОПВРасчетыСФондамиОстатки.ФизЛицо = ФильтрПоСтруктурномуПодразделению.ФизЛицо
			|				И НЕ (ФильтрПоСтруктурномуПодразделению.Сотрудник.ДатаУвольнения<&парамМесяц И ФильтрПоСтруктурномуПодразделению.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))
			|  	ГДЕ ЕСТЬNULL(ФильтрПоСтруктурномуПодразделению.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))=&СтруктурноеПодразделение";
			
		КонецЕсли;
		// - КУФИБ - конец
		Если ПорядокЗаполнения = 0 Тогда //  по сотрудникам организации
			ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст +
			?(мОтображатьСтруктурныеПодразделения,"
			|И","
			|ГДЕ")+"
			|	НЕ РаботникиОрганизаций.ФизЛицо ЕСТЬ NULL
			|";
		Иначе  // по непринятым лицам
			ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст +
			?(мОтображатьСтруктурныеПодразделения,"
			|И","
			|ГДЕ")+"
			|	РаботникиОрганизаций.ФизЛицо ЕСТЬ NULL
			|";
		КонецЕсли;
	КонецЕсли;
	
	ДанныеРеглУчетаТекст = ДанныеРеглУчетаТекст + "
	|УПОРЯДОЧИТЬ ПО
	|	ОПВРасчетыСФондамиОстатки.Физлицо.Наименование
	|";
	
	Запрос = Новый Запрос(ДанныеРеглУчетаТекст);
	
	// - КУФИБ - начало
	Если мОтображатьСтруктурныеПодразделения Тогда
		Запрос.УстановитьПараметр("СтруктурноеПодразделение",СтруктурноеПодразделение);
	КонецЕсли;
	// - КУФИБ - конец
	ДатаСреза = Макс(Дата, КонецМесяца(ПериодРегистрации));
	
	Запрос.УстановитьПараметр("парамГраницаОстатков", Новый Граница(ДатаСреза, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамСтруктурноеПодразделение", СтруктурноеПодразделение);
	Запрос.УстановитьПараметр("парамПодразделениеОрганизации", ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("парамПенсионныйФонд", Контрагент);
	Запрос.УстановитьПараметр("парамМесяц", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамНачало", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВидПлатежа", ВидПлатежа);
	
	Если ПорядокЗаполнения = 1 Тогда
		Если ЗначениеЗаполнено(СтруктурноеПодразделение) Тогда
			Запрос.УстановитьПараметр("парамСтруктурноеПодразделение", СтруктурноеПодразделение);
		Иначе
			Запрос.УстановитьПараметр("парамСтруктурноеПодразделение", Организация);
		КонецЕсли;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Сумма) И Выборка.Сумма > 0 Тогда
			НоваяСтрока = ПенсионныеВзносы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры //  Автозаполнение()

// Процедура выполняет расчет строк табличной части документа по данным регистров.
//
// Параметры: ВариантРасчета = "НаДатуДокумента" на дату, "НаКонецМесяца" на конец месяца
//            Исчисление (тип "Булево") = Истина в случае заполнения исчисленными суммами ОПВ
//            							  Ложь в случае заполнения удержанными суммами ОПВ по НУ (суммы к перечислению)
//
Процедура Рассчитать() Экспорт
	// - КУФИБ - начало
	ТекстВТ = "";
	ТекстФильтр = "ВЫБРАТЬ
		|										ФизЛицо
		|									ИЗ
		|										Документ.ОПВПеречислениеВФонды.ПенсионныеВзносы КАК Док
		|									ГДЕ
		|										Док.Ссылка = &парамСсылка";
	Если мОтображатьСтруктурныеПодразделения Тогда
		ТекстВТ = "ВЫБРАТЬ
		|	ПенсионныеВзносы.ФизЛицо
		|ПОМЕСТИТЬ ВТ_ФизЛица
		|ИЗ
		|	Документ.ОПВПеречислениеВФонды.ПенсионныеВзносы КАК ПенсионныеВзносы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамМесяц, Организация = &парамГоловнаяОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК РеглУчетВзаиморасчетовССотрудникамиОрганизацийСрезПоследних
		|		ПО ПенсионныеВзносы.ФизЛицо = РеглУчетВзаиморасчетовССотрудникамиОрганизацийСрезПоследних.Сотрудник.ФизЛицо
		|ГДЕ
		|	ПенсионныеВзносы.Ссылка = &парамСсылка
		|	И ЕСТЬNULL(РеглУчетВзаиморасчетовССотрудникамиОрганизацийСрезПоследних.СтруктурноеПодразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) = &СтруктурноеПодразделение
		|;
		|";
	ТекстФильтр = "ВЫБРАТЬ
		|										ФизЛицо
		|									ИЗ
		|										ВТ_ФизЛица КАК Док";
	КонецЕсли;
	
	// - КУФИБ - конец
	
	
	ПоУдельномуВесу = (СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюОПВ.ПоЗадолженностиЗаМесяцПоНУ 
						Или СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюОПВ.ПоОстаткамЗадолженностиНаКонецМесяцаПоНУ);
	
	ПоОстаткам 		= (СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюОПВ.ПоОстаткамЗадолженностиНаКонецМесяца
						Или СпособРасчетаСуммКПеречислению = Перечисления.СпособыРасчетаСуммКПеречислениюОПВ.ПоОстаткамЗадолженностиНаКонецМесяцаПоНУ);
	
	ПоДаннымОПВ = (ВидОперации = Перечисления.ВидыОперацийОПВПеречислениеВФонды.ПеречислениеОбязательныхПенсионныхВзносов);
	ПоДаннымОПВР = (ВидОперации = Перечисления.ВидыОперацийОПВПеречислениеВФонды.ПеречислениеОбязательныхПенсионныхВзносовРаботодателя);
	
	Если Не ПоУдельномуВесу Тогда
		ДанныеРеглУчетаТекст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОПВПеречислениеВФондыПенсионныеВзносы.НомерСтроки,
		|	ОПВПеречислениеВФондыПенсионныеВзносы.Физлицо,
		|	ОПВРасчетыСФондамиОстатки.ВзносОстаток КАК Сумма
		|ИЗ
		|	Документ.ОПВПеречислениеВФонды.ПенсионныеВзносы КАК ОПВПеречислениеВФондыПенсионныеВзносы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления." + ?(ПоДаннымОПВ, "ОПВРасчетыСФондами", ?(ПоДаннымОПВР, "ОПВРРасчетыСФондами", "ОППВРасчетыСФондами")) + ".Остатки(
		|					&парамГраницаОстатков,
		|					Организация = &парамОрганизация
		|					И ВидПлатежа = &парамВидПлатежа
		|					И " + ?(ПоОстаткам, "
		|						МесяцНалоговогоПериода <= КОНЕЦПЕРИОДА(&парамМесяц, МЕСЯЦ)", "
		|						МесяцНалоговогоПериода МЕЖДУ НАЧАЛОПЕРИОДА(&парамМесяц, МЕСЯЦ) И КОНЕЦПЕРИОДА(&парамМесяц, МЕСЯЦ)") + "
		|					И ФизЛицо В (ВЫБРАТЬ
		|										ФизЛицо
		|									ИЗ
		|										Документ.ОПВПеречислениеВФонды.ПенсионныеВзносы КАК Док
		|									ГДЕ
		|										Док.Ссылка = &парамСсылка)) КАК ОПВРасчетыСФондамиОстатки
		|			ПО ОПВПеречислениеВФондыПенсионныеВзносы.ФизЛицо = ОПВРасчетыСФондамиОстатки.ФизЛицо
		|
		|ГДЕ
		|	ОПВПеречислениеВФондыПенсионныеВзносы.Ссылка = &парамСсылка
		|	И ОПВПеречислениеВФондыПенсионныеВзносы.Авторасчет
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОПВПеречислениеВФондыПенсионныеВзносы.НомерСтроки";
	Иначе
		ДанныеРеглУчетаТекст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОПВПеречислениеВФондыПенсионныеВзносы.НомерСтроки,
		|	ОПВПеречислениеВФондыПенсионныеВзносы.Физлицо,
		|	ОПВРасчетыСФондамиОстатки.ВзносОстаток КАК Сумма
		|ИЗ
		|	Документ.ОПВПеречислениеВФонды.ПенсионныеВзносы КАК ОПВПеречислениеВФондыПенсионныеВзносы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОПВПодлежитПеречислениюВФонды.Остатки(
		|					&парамГраницаОстатков,
		|					Организация = &парамОрганизация		
		|					И " + ?(ПоОстаткам, "
		|						МесяцВыплатыДоходов <= КОНЕЦПЕРИОДА(&парамМесяц, МЕСЯЦ)", "
		|						МесяцВыплатыДоходов МЕЖДУ НАЧАЛОПЕРИОДА(&парамМесяц, МЕСЯЦ) И КОНЕЦПЕРИОДА(&парамМесяц, МЕСЯЦ)") + "
		|					И ФизЛицо В (ВЫБРАТЬ
		|										ФизЛицо
		|									ИЗ
		|										Документ.ОПВПеречислениеВФонды.ПенсионныеВзносы КАК Док
		|									ГДЕ
		|										Док.Ссылка = &парамСсылка)) КАК ОПВРасчетыСФондамиОстатки
		|			ПО ОПВПеречислениеВФондыПенсионныеВзносы.ФизЛицо = ОПВРасчетыСФондамиОстатки.ФизЛицо
		|
		|ГДЕ
		|	ОПВПеречислениеВФондыПенсионныеВзносы.Ссылка = &парамСсылка
		|	И ОПВПеречислениеВФондыПенсионныеВзносы.Авторасчет
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОПВПеречислениеВФондыПенсионныеВзносы.НомерСтроки";
	КонецЕсли;
	
	// - КУФИБ - начало
	Если мОтображатьСтруктурныеПодразделения Тогда
		ДанныеРеглУчетаТекст = ТекстВТ + ДанныеРеглУчетаТекст;
	КонецЕсли;
	// - КУФИБ - конец
	
	Запрос = Новый Запрос(ДанныеРеглУчетаТекст);
	
	// - КУФИБ - начало
	Если мОтображатьСтруктурныеПодразделения Тогда
		Запрос.УстановитьПараметр("СтруктурноеПодразделение", СтруктурноеПодразделение);
		Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	КонецЕсли;
	// - КУФИБ - конец
	
	ДатаСреза = Макс(Дата, КонецМесяца(ПериодРегистрации));
	
	Запрос.УстановитьПараметр("парамГраницаОстатков", Новый Граница(ДатаСреза, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("парамСсылка", Ссылка);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамМесяц", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамВидПлатежа", ВидПлатежа);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаТЧ = ПенсионныеВзносы[Выборка.НомерСтроки - 1];
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка);
	КонецЦикла;
		
		
КонецПроцедуры // Рассчитать()

// Процедура выполняет заполнение документа по документу-основанию
//
Процедура ЗаполнитьПоДокументуОснования(Основание)  Экспорт
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.РасчетПениОПВиСО") Тогда
	
		Если Основание.ВидОперации <> Перечисления.ВидыОперацийРасчетПени.РаспределениеПениОПВ
			И Основание.ВидОперации <> Перечисления.ВидыОперацийРасчетПени.РасчетПениОПВ
			И Основание.ВидОперации <> Перечисления.ВидыОперацийРасчетПени.РаспределениеПениОППВ
			И Основание.ВидОперации <> Перечисления.ВидыОперацийРасчетПени.РасчетПениОППВ
			И Основание.ВидОперации <> Перечисления.ВидыОперацийРасчетПени.РаспределениеПениОПВР
			И Основание.ВидОперации <> Перечисления.ВидыОперацийРасчетПени.РасчетПениОПВР Тогда
			Возврат;
		КонецЕсли;

		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание);
		ВидПлатежа = Основание.ВидПлатежа;
		
		Если Основание.ВидОперации = Перечисления.ВидыОперацийРасчетПени.РаспределениеПениОПВ ИЛИ 
			 Основание.ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениОПВ Тогда
			ВидОперации = Перечисления.ВидыОперацийОПВПеречислениеВФонды.ПеречислениеОбязательныхПенсионныхВзносов;
		ИначеЕсли Основание.ВидОперации = Перечисления.ВидыОперацийРасчетПени.РаспределениеПениОПВР ИЛИ 
				  Основание.ВидОперации = Перечисления.ВидыОперацийРасчетПени.РасчетПениОПВР Тогда
			ВидОперации = Перечисления.ВидыОперацийОПВПеречислениеВФонды.ПеречислениеОбязательныхПенсионныхВзносовРаботодателя;
		Иначе
			ВидОперации = Перечисления.ВидыОперацийОПВПеречислениеВФонды.ПеречислениеОбязательныхПрофессиональныхПенсионныхВзносов;
		КонецЕсли;
		
		ДокументОснование = Основание;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Основание", Основание);
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(РасчетПени.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода
		|ИЗ
		|	Документ.РасчетПениОПВиСО.ИсчислениеПени КАК РасчетПени
		|ГДЕ
		|	РасчетПени.Ссылка = &Основание
		|УПОРЯДОЧИТЬ ПО
		|	МесяцНалоговогоПериода
		|";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		СписокМесяцевНалоговогоПериода = Новый СписокЗначений;
		Пока Выборка.Следующий() Цикл
			СписокМесяцевНалоговогоПериода.Добавить(Выборка.МесяцНалоговогоПериода, Формат(Выборка.МесяцНалоговогоПериода, "ДФ='ММММ гггг'"));
		КонецЦикла;
		
		Если СписокМесяцевНалоговогоПериода.Количество() = 0 Тогда
			// вообще нет данных в документе-основании
			Возврат;
		ИначеЕсли СписокМесяцевНалоговогоПериода.Количество() = 1 Тогда
			ПериодРегистрации = СписокМесяцевНалоговогоПериода[0].Значение;
		Иначе
			ЗначениеВыбора = СписокМесяцевНалоговогоПериода.ВыбратьЭлемент("Выберите месяц налогового периода");
			Если ЗначениеВыбора = Неопределено Тогда
				Возврат;
			КонецЕсли;
			ПериодРегистрации = ЗначениеВыбора.Значение;
		КонецЕсли;
	
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РасчетПени.ФизЛицо,
		|	ИСТИНА КАК Авторасчет,
		|	СУММА(РасчетПени.Сумма) КАК Сумма
		|ИЗ
		|	Документ.РасчетПениОПВиСО.ИсчислениеПени КАК РасчетПени
		|ГДЕ
		|	РасчетПени.Ссылка = &Основание
		|	И РасчетПени.МесяцНалоговогоПериода МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
		|СГРУППИРОВАТЬ ПО
		|	РасчетПени.ФизЛицо
		|";
		
		ПенсионныеВзносы.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецЕсли;
	
	ДокументОснование = Основание;

КонецПроцедуры
	
#Если Клиент Тогда

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	КонецЕсли;
	
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	//так как нет печатных форм у документа, по умолчанию
	ТабДокумент = Неопределено;
	
	Если ТабДокумент = Неопределено Тогда
		Возврат
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект));

КонецПроцедуры // Печать()

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура();

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаЗаполнения" документа.
//
Процедура ОбработкаЗаполнения(Основание) 
	
	ЗаполнитьПоДокументуОснования(Основание);
	
КонецПроцедуры // ОбработкаЗаполнения()

// Процедура - обработчик события "ПередЗаписью" документа.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(ПенсионныеВзносы);

	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "ФизЛицо");
	
	СуммаДокумента = ПенсионныеВзносы.Итог("Сумма");
	
КонецПроцедуры // ПередЗаписью()

//Процедура-обработчик события "ПриКопировании" документа
//
Процедура ПриКопировании(ОбъектКопирования)
	ДокументОснование = Неопределено;
КонецПроцедуры

// - БК - начало
мОтображатьСтруктурныеПодразделения = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделенийВЗарплате();
// - БК - конец
