
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ДокументПриСозданииНаСервере(ЭтотОбъект);
	
	ПодготовитьФормуНаСервере();
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ДокументПриЧтенииНаСервере(ЭтотОбъект,ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_фин_ПланОценкиЭффективностиИМотивацииОтветственныхБюджетногоПроцесса", ПараметрыЗаписи, Объект.Ссылка);	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	общ_ОбщегоНазначенияКлиент.ОбработкаОповещенияФормыДокумента(ЭтотОбъект, Объект.Ссылка, ИмяСобытия, Параметр, Источник);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ПереченьПравилРасчета


&НаКлиенте
Процедура ПереченьПравилРасчетаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Копирование Тогда
		ТекущаяСтрока = Элементы.ПереченьПравилРасчета.ТекущиеДанные;
		ТекущаяСтрока.УдельныйВес = 1;
		ТекущаяСтрока.ОграничитьПодразделением = Истина;
		ТекущаяСтрока.Цель =ПредопределенноеЗначение("Перечисление.фин_ЦелиОтветственныхПоДостижениюПоказателей.Максимизация");
		ТекущаяСтрока.ДанныеПоказателя = ПредопределенноеЗначение("Перечисление.фин_РеквизитыДляРасчетаЗависимыхСтатейБюджета.Сумма");
		ТекущаяСтрока.ИспользуемаяВеличина = ПредопределенноеЗначение("Перечисление.фин_ИспользуемыеВеличиныОценкиЭффективностиРаботыОтветственных.ОтносительноеОтклонение");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПереченьПравилРасчетаДанныеПоказателяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокПоказателей(Элементы.ПереченьПравилРасчета.ТекущиеДанные.ФинансовыйПоказатель);
КонецПроцедуры

&НаКлиенте
Процедура ПереченьПравилРасчетаИспользуемаяВеличинаПриИзменении(Элемент)
	Если НЕ Элементы.ПереченьПравилРасчета.ТекущиеДанные.ИспользуемаяВеличина = ПредопределенноеЗначение("Перечисление.фин_ИспользуемыеВеличиныОценкиЭффективностиРаботыОтветственных.Формула") Тогда
		Элементы.ПереченьПравилРасчета.ТекущиеДанные.Формула = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПереченьПравилРасчетаФормулаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВходящиеПоказатели = Новый Массив;
	ВходящиеПоказатели.Добавить("План");
	ВходящиеПоказатели.Добавить("Факт");
	ПараметрыФормулы = Новый Структура("Формула,ВходящиеПоказатели",Элементы.ПереченьПравилРасчета.ТекущиеДанные.Формула,ВходящиеПоказатели);
	ОписаниеОбработкаВыбораФормулы = Новый ОписаниеОповещения("ОбработкаВыбораФормулы",ЭтотОбъект,Элементы.ПереченьПравилРасчета.ТекущиеДанные);
	ОткрытьФорму("Документ.фин_ПланОценкиЭффективностиИМотивацииОтветственныхБюджетногоПроцесса.Форма.ФормаВводаФормулы",ПараметрыФормулы,ЭтотОбъект,,,,ОписаниеОбработкаВыбораФормулы,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура МатериальноеСтимулированиеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Копирование Тогда
		ТекущаяСтрока = Элементы.МатериальноеСтимулирование.ТекущиеДанные;
		ТекущаяСтрока.Формула = "Коэффициент";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МатериальноеСтимулированиеФормулаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВходящиеПоказатели = Новый Массив;
	ВходящиеПоказатели.Добавить("Коэффициент");
	ПараметрыФормулы = Новый Структура("Формула,ВходящиеПоказатели",Элементы.МатериальноеСтимулирование.ТекущиеДанные.Формула,ВходящиеПоказатели);
	ОписаниеОбработкаВыбораФормулы = Новый ОписаниеОповещения("ОбработкаВыбораФормулы",ЭтотОбъект,Элементы.МатериальноеСтимулирование.ТекущиеДанные);
	ОткрытьФорму("Документ.фин_ПланОценкиЭффективностиИМотивацииОтветственныхБюджетногоПроцесса.Форма.ФормаВводаФормулы",ПараметрыФормулы,ЭтотОбъект,,,,ОписаниеОбработкаВыбораФормулы,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораФормулы(Результат,СтрокаДанных) Экспорт
	Если Результат<>Неопределено Тогда
		СтрокаДанных.Формула = Результат;
    КонецЕсли;
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	Если НЕ фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки


&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ТекущаяДатаДокумента = Объект.Дата;
	НадписьМатериальноеСтимулирование = "Схема мотивации";
	НадписьПравилаРасчетаКоэффициентовЭффективности = "Правила расчета коэффициентов эффективности";
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Если НЕ (ЗначениеЗаполнено(Параметры.ЗначениеКопирования) ИЛИ ЗначениеЗаполнено(Параметры.Основание)) Тогда
			// по умолчанию при распределении учитываются все возможные показатели

		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаСервере
Функция СписокПоказателей(Показатель)
	СЗ = Новый СписокЗначений;
	Если Показатель.УчетПоСумме Тогда
		СЗ.Добавить(Перечисления.фин_РеквизитыДляРасчетаЗависимыхСтатейБюджета.Сумма);
	КонецЕсли;
	Если Показатель.УчетПоКоличеству Тогда
		СЗ.Добавить(Перечисления.фин_РеквизитыДляРасчетаЗависимыхСтатейБюджета.Количество);
	КонецЕсли;
	Возврат СЗ;
КонецФункции

