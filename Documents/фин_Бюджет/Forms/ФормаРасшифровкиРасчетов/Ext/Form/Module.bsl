
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("Сценарий",Сценарий);
	Если ЗначениеЗаполнено(Параметры.АдресДанных) Тогда
		Попытка
			ДанныеХранилища = ПолучитьИзВременногоХранилища(Параметры.АдресДанных);
		Исключение
			
		КонецПопытки;
		Если ТипЗнч(ДанныеХранилища)=Тип("Соответствие") Тогда
			ВывестиДанные(ДанныеХранилища);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВывестиДанные(ДанныеХранилища)
	Макет = Документы.фин_Бюджет.ПолучитьМакет("МакетРасчеты");
	ДокументРезультат.НачатьАвтогруппировкуСтрок();
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Период");
	Таблица.Колонки.Добавить("Данные");
	Для Каждого ЭлементПериод Из ДанныеХранилища Цикл
		НС = Таблица.Добавить();
		НС.Период = ЭлементПериод.Ключ;
		НС.Данные = ЭлементПериод;
	КонецЦикла;
	Таблица.Сортировать("Период");
	Для Каждого ЭлементПериод Из Таблица Цикл
		ВывестиПериод(ЭлементПериод.Данные,Макет);	
	КонецЦикла;
	//Для Каждого ЭлементПериод Из ДанныеХранилища Цикл
	//	ВывестиПериод(ЭлементПериод,Макет);	
	//КонецЦикла;
	ДокументРезультат.ЗакончитьАвтогруппировкуСтрок();
КонецПроцедуры

&НаСервере
Процедура ВывестиПериод(ЭлементПериод,Макет)
	ОбластьПериод = Макет.ПолучитьОбласть("ПериодРасчета");
	ОбластьПериод.Параметры.ПериодРасчетаПредставление = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПредставлениеПериодаСтрокой(ЭлементПериод.Ключ,Сценарий);
	ОбластьПериод.Параметры.ПериодРасчета = ЭлементПериод.Ключ;
	ДокументРезультат.Вывести(ОбластьПериод,1);
	Если ЭлементПериод.Значение.Количество()>1 Тогда
		Для Каждого ПорядокРасчета Из ЭлементПериод.Значение Цикл
			ВывестиПорядокРасчета(ПорядокРасчета,Макет);
		КонецЦикла;
	Иначе
		Для Каждого ЭлементПорядокРасчета Из ЭлементПериод.Значение Цикл
			Для Каждого ЭлементСтатья Из ЭлементПорядокРасчета.Значение Цикл
				ВывестиСтатьюБюджета(ЭлементСтатья,Макет);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВывестиПорядокРасчета(ЭлементПорядок,Макет)
	ОбластьПорядок = Макет.ПолучитьОбласть("ПорядокРасчета");
	ОбластьПорядок.Параметры.ПорядокРасчета = ЭлементПорядок.Ключ;
	ДокументРезультат.Вывести(ОбластьПорядок,2);
	Для Каждого ЭлементСтатья Из ЭлементПорядок.Значение Цикл
		ВывестиСтатьюБюджета(ЭлементСтатья,Макет);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВывестиСтатьюБюджета(ЭлементСтатья,Макет)
	ОбластьСтатья = Макет.ПолучитьОбласть("СтатьяБюджета");
	ОбластьСтатья.Параметры.СтатьяБюджета = ЭлементСтатья.Ключ;
	ДокументРезультат.Вывести(ОбластьСтатья,3);
	Для Каждого ЭлементДанныеРасчетаПоля Из ЭлементСтатья.Значение Цикл
	   ИмяПоля 		= ЭлементДанныеРасчетаПоля.Ключ;
	   ДанныеПоля 	= ЭлементДанныеРасчетаПоля.Значение;
		ОбластьДействие = Макет.ПолучитьОбласть("Действие");
		ОбластьДействие.Параметры.Действие = "Расчет ресурса:";
		ОбластьДействие.Параметры.ЗначениеДействия = ИмяПоля;
		ДокументРезультат.Вывести(ОбластьДействие,4);
		Если ДанныеПоля.Количество()>1 Тогда
			Для Каждого НомерРасчета Из ДанныеПоля Цикл
				ВывестиНомерРасчета(НомерРасчета,Макет);
			КонецЦикла;
		Иначе
			Для Каждого ЭлементДанныеНомерРасчета Из ДанныеПоля Цикл
				//Для Каждого ЭлементДанныеРасчета Из ЭлементДанныеНомерРасчета.Значение Цикл
					ВывестиЭлементРасчета(ЭлементДанныеНомерРасчета.Значение,Макет);
				//КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВывестиНомерРасчета(ЭлементНомерРасчета,Макет)
	ОбластьНомерРасчета = Макет.ПолучитьОбласть("НомерРасчета");
	ОбластьНомерРасчета.Параметры.НомерРасчета = ЭлементНомерРасчета.Ключ;
	Линия = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
	ОбластьНомерРасчета.Область().Обвести(,,,Линия);
	ДокументРезультат.Вывести(ОбластьНомерРасчета,5);
	//Для Каждого ЭлементДанныеРасчета Из ЭлементНомерРасчета.Значение Цикл
		ВывестиЭлементРасчета(ЭлементНомерРасчета.Значение,Макет);
	//КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВывестиЭлементРасчета(ЭлементДанныеРасчета,Макет)
	//ОбластьНадпись = Макет.ПолучитьОбласть("Действие");
	//ОбластьНадпись.Параметры.Действие = ЭлементДанныеРасчета.Ключ;
	//ДокументРезультат.Вывести(ОбластьНадпись,6);
	Для Каждого ЭлементСтруктурыРасшифровки Из ЭлементДанныеРасчета Цикл
		Если ЭлементСтруктурыРасшифровки.Ключ = "РазрезыРасчета" Тогда
			Если ЭлементСтруктурыРасшифровки.Значение.Количество()>0 Тогда
				ОбластьЗаголовокРазрезы = Макет.ПолучитьОбласть("ШапкаТаблицы|Базовая");
				ОбластьЗаголовокРазрезы.Параметры.НазваниеТаблицы = "Исходные разрезы расчета:";
				ДокументРезультат.Вывести(ОбластьЗаголовокРазрезы,6);
				Для Каждого Разрез Из ЭлементСтруктурыРасшифровки.Значение Цикл
					ОбластьЗаголовокКолонки = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТаблицы");
					ОбластьЗаголовокКолонки.Параметры.Колонка = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПредставлениеРазреза(Перечисления.фин_ФактическиеПоказателиБюджетирования[Разрез.Ключ]);
					ДокументРезультат.Присоединить(ОбластьЗаголовокКолонки);
				КонецЦикла;
				ОбластьЗаголовокРазрезы = Макет.ПолучитьОбласть("СтрокаТаблицы|Базовая");
				ДокументРезультат.Вывести(ОбластьЗаголовокРазрезы,6);
				Для Каждого Разрез Из ЭлементСтруктурыРасшифровки.Значение Цикл
					ОбластьЗаголовокКолонки = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТаблицы");
					ОбластьЗаголовокКолонки.Параметры.ЗначениеКолонки = Разрез.Значение;
					ДокументРезультат.Присоединить(ОбластьЗаголовокКолонки);
				КонецЦикла;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ЭлементСтруктурыРасшифровки.Значение)=Тип("Структура") Тогда
			ЭлементРасшифровки = ЭлементСтруктурыРасшифровки.Значение;
			ОбластьНадпись = Макет.ПолучитьОбласть("Действие");
			ОбластьНадпись.Параметры.Действие = ЭлементСтруктурыРасшифровки.Ключ;
			ОбластьНадпись.Область("R2C6").ЦветФона = WebЦвета.АкварельноСиний;
			Линия = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
			ОбластьНадпись.Область("R2C6").Обвести(Линия,Линия,Линия,Линия);
			ОбластьНадпись.Область("R2C6").ЦветРамки = WebЦвета.ГолубойСоСтальнымОттенком;
			ДокументРезультат.Вывести(ОбластьНадпись,6);
			Если ЭлементРасшифровки.Свойство("Формула") Тогда
				// текст формулы
				ОбластьНадпись = Макет.ПолучитьОбласть("Формула");
				ОбластьНадпись.Параметры.ТекстФормулы 	= ЭлементРасшифровки.Формула;
				ДокументРезультат.Вывести(ОбластьНадпись,7);
				// данные формулы
				ОбластьЗаголовокРазрезы = Макет.ПолучитьОбласть("ШапкаТаблицы|Базовая");
				ОбластьЗаголовокРазрезы.Параметры.НазваниеТаблицы = "Данные расчета:";
				ДокументРезультат.Вывести(ОбластьЗаголовокРазрезы,7);
				КолонкиДанных = Новый Структура("КодПоказателя,Значение,Показатель,ВидПоказателя,Данные,ПериодСбораДанных","Код показателя","Значение","Показатель","Вид показателя","Данные","Период сбора данных");
				Для Каждого Разрез Из КолонкиДанных Цикл
					ОбластьЗаголовокКолонки = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТаблицы");
					ОбластьЗаголовокКолонки.Параметры.Колонка = Разрез.Значение;
					ДокументРезультат.Присоединить(ОбластьЗаголовокКолонки);
				КонецЦикла;
				ТаблицаДанных = ЭлементРасшифровки.Правила;
				Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
					ОбластьЗаголовокРазрезы = Макет.ПолучитьОбласть("СтрокаТаблицы|Базовая");
					ДокументРезультат.Вывести(ОбластьЗаголовокРазрезы,7);
					Для Каждого Разрез Из КолонкиДанных Цикл
						ОбластьЗаголовокКолонки = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТаблицы");
						ОбластьЗаголовокКолонки.Параметры.ЗначениеКолонки = СтрокаДанных[Разрез.Ключ];
						Если Разрез.Ключ = "Показатель" И ТипЗнч(СтрокаДанных[Разрез.Ключ])=Тип("СправочникСсылка.фин_ФормулыРасчетаФинансовыхПоказателей") Тогда
							ОбластьЗаголовокКолонки.Параметры.ЗначениеКолонки = "Накопленные данные предыдущих периодов";
						КонецЕсли;
						ДокументРезультат.Присоединить(ОбластьЗаголовокКолонки);
					КонецЦикла;
				КонецЦикла;
				//приведенная формула
				ОбластьНадпись = Макет.ПолучитьОбласть("Действие");
				ОбластьНадпись.Параметры.Действие = "Приведенная формула:";
				ОбластьНадпись.Параметры.ЗначениеДействия = ЭлементРасшифровки.ПриведеннаяФормула;
				ДокументРезультат.Вывести(ОбластьНадпись,7);
				//результат расчета
				ОбластьНадпись = Макет.ПолучитьОбласть("Действие");
				ОбластьНадпись.Параметры.Действие = "Результат расчета:";
				ОбластьНадпись.Параметры.ЗначениеДействия = ЭлементРасшифровки.Результат;
				ДокументРезультат.Вывести(ОбластьНадпись,7);
			Иначе
				Для Каждого ЭлементСтруктуры Из ЭлементРасшифровки Цикл
					ОбластьНадпись = Макет.ПолучитьОбласть("Действие");
					ОбластьНадпись.Параметры.Действие = ЭлементСтруктуры.Ключ;
					ОбластьНадпись.Параметры.ЗначениеДействия = ЭлементСтруктуры.Значение;
					ОбластьНадпись.Область().Отступ = 1;
					ОбластьНадпись.Область().Автоотступ = 1;
					ДокументРезультат.Вывести(ОбластьНадпись,7);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
