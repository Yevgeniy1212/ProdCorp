
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Параметры.Свойство("Настройки") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Настройки 					= Параметры.Настройки;
	СтруктураРазрезовБюджета.ЗагрузитьЗначения(Параметры.СтруктураРазрезовБюджета.ВыгрузитьЗначения());
	СтруктураНастроекУсловие	= Неопределено;
	КоллекцияСпособов			= Новый ФиксированноеСоответствие(Новый Соответствие);
	Если Настройки.Свойство("Условие",СтруктураНастроекУсловие) Тогда
		СтруктураНастроекУсловие.Свойство("СтатьяБюджетаОтбор",			СтатьяБюджетаОтбор);
		СтруктураНастроекУсловие.Свойство("СтатьяБюджетаЗначение",		СтатьяБюджетаЗначение);
	КонецЕсли;
	ФинансовыйПоказатель = СтатьяБюджетаЗначение.ФинансовыйПоказатель;
	Настроено = Ложь;
	Для Каждого РазрезЭлемент Из СтруктураРазрезовБюджета Цикл
		Если РазрезЭлемент.Значение = Перечисления.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение И Параметры.УровеньДетализацииБюджета = Перечисления.фин_УровниДетализацииБюджета.БюджетПодразделения Тогда
			Продолжить;
		ИначеЕсли РазрезЭлемент.Значение = Перечисления.фин_ФактическиеПоказателиБюджетирования.Проект И Параметры.УровеньДетализацииБюджета = Перечисления.фин_УровниДетализацииБюджета.БюджетПроекта Тогда
			Продолжить;
		КонецЕсли;
		ИмяРазреза = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(РазрезЭлемент.Значение);
		Если ((НЕ СтруктураНастроекУсловие.Свойство(ИмяРазреза+"Отбор")) ИЛИ СтруктураНастроекУсловие[ИмяРазреза+"Отбор"]=Ложь) И фин_РаботаСДополнительнымиРазрезамиБюджетирования.УчетПоСтатьеПоРазрезу(ФинансовыйПоказатель,РазрезЭлемент.Значение) Тогда
			Если Настройки.Свойство(ИмяРазреза) Тогда
				Если Настройки[ИмяРазреза].Свойство("СпособЗаполнения") Тогда
					мКоллекцияСпособов = Новый Соответствие(КоллекцияСпособов);
					мКоллекцияСпособов.Вставить(РазрезЭлемент.Значение,Настройки[ИмяРазреза]["СпособЗаполнения"]);
					КоллекцияСпособов = Новый ФиксированноеСоответствие(мКоллекцияСпособов);
					Для Каждого Значение Из Настройки[ИмяРазреза].Значение Цикл
						НС = ТаблицаЗначенийРазреза.Добавить();
						НС.Измерение 	= РазрезЭлемент.Значение;
						НС.Значение 	= Значение;
						НС.Доля 		= Настройки[ИмяРазреза].СоответствиеДолей.Получить(Значение);
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			
			НовыйЭлемент = ДоступныеУровни.Добавить(РазрезЭлемент.Значение,фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(РазрезЭлемент.Значение));
			Если НЕ Настроено Тогда
				Элементы.ДоступныеУровни.ТекущаяСтрока = НовыйЭлемент.ПолучитьИдентификатор();
				НастроитьСтраницуАналитики(РазрезЭлемент.Значение);
				Настроено = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	фин_БюджетированиеОбщегоНазначения.НастроитьОформлениеТабличногоПоля(Элементы.ТаблицаЗначенийРазреза);
	ВключаяПодчиненныеПодразделения = Параметры.ФормируемыйБюджет.ВключаяПодчиненныеПодразделения;
	ОткрытиеФормы = Истина;
КонецПроцедуры

&НаСервере
Процедура НастроитьСтраницуАналитики(НовоеИзмерение)
	// сворачивание текущих настроек
	ПоместитьПараметрыРазрезаВСписки(ТекущееИзмерение);
	// развертывание требуемых настроек
	Способ = КоллекцияСпособов.Получить(НовоеИзмерение);
	Если НЕ ЗначениеЗаполнено(Способ) Тогда
		Способ = Перечисления.фин_СпособыНастройкиАналитикиСтрокБюджета.НеИзменять;
	КонецЕсли;
	Элементы.ТаблицаЗначенийРазреза.ОтборСтрок=Новый ФиксированнаяСтруктура("Измерение",НовоеИзмерение);
	РазрезАналитики 	= фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(НовоеИзмерение);
	Элементы.ТаблицаЗначенийРазрезаЗначение.ОграничениеТипа = РазрезАналитики.ТипЗначения;
	ТекущееИзмерение 	= НовоеИзмерение;
	// настройка видимых элементов
	Элементы.ГруппаПанельПравая.Заголовок = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(НовоеИзмерение);
	Если НовоеИзмерение=Перечисления.фин_ФактическиеПоказателиБюджетирования.Номенклатура Тогда
		Элементы.ТаблицаЗначенийРазрезаЗначение.ОграничениеТипа = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ОписаниеТиповНоменклатурногоПеречня(СтатьяБюджетаЗначение.ФинансовыйПоказатель,Параметры.Сценарий);
	КонецЕсли;
	// настройка списка типов для подбора
	Сценарий = Параметры.Сценарий;	
	СписокТипов.Очистить();
	Для Каждого ТипЗначения Из РазрезАналитики.ТипЗначения.Типы() Цикл
		ИмяТаблицы = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ОпределитьТаблицуПоТипу(ТипЗначения);
		Если РазрезАналитики = ПланыВидовХарактеристик.фин_ВидыСубконтоБюджетирования.Номенклатура Тогда
			Если ИмяТаблицы = "Справочник.НоменклатурныеГруппы" Тогда
				Если Сценарий.ДетализацияПланирования<>фин_ОбщегоНазначенияВызовСервераПовтИсп.ДетализацияПланированияНоменклатурныеГруппы() Тогда
					Продолжить;
				КонецЕсли;
			ИначеЕсли Сценарий.ДетализацияПланирования=фин_ОбщегоНазначенияВызовСервераПовтИсп.ДетализацияПланированияНоменклатурныеГруппы() Тогда
				Продолжить;
			ИначеЕсли ИмяТаблицы = "Справочник.Номенклатура" Тогда
				Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВестиУчетПоПлановойНоменклатуре") И СтатьяБюджетаЗначение.ФинансовыйПоказатель.ИспользуемыйНоменклатурныйПеречень=Перечисления.узп_ИспользуемыеНоменклатурныеПеречни.ПлановаяНоменклатура Тогда
					Продолжить;
				КонецЕсли;
			ИначеЕсли ИмяТаблицы = "Справочник.фин_ПлановаяНоменклатура" Тогда
				Если (НЕ фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВестиУчетПоПлановойНоменклатуре")) ИЛИ СтатьяБюджетаЗначение.ФинансовыйПоказатель.ИспользуемыйНоменклатурныйПеречень=Перечисления.узп_ИспользуемыеНоменклатурныеПеречни.РегламентированнаяНоменклатура Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		СписокТипов.Добавить(ИмяТаблицы,Строка(ТипЗначения));
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПоместитьПараметрыРазрезаВСписки(Измерение)
	Если ЗначениеЗаполнено(Измерение) Тогда
		Если КоллекцияСпособов<>Неопределено Тогда
			мКоллекцияСпособов = Новый Соответствие(КоллекцияСпособов);
		Иначе
			мКоллекцияСпособов = Новый Соответствие();
		КонецЕсли;
		мКоллекцияСпособов.Вставить(Измерение,Способ);
		КоллекцияСпособов = Новый ФиксированноеСоответствие(мКоллекцияСпособов);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СпособПриИзменении(Элемент)
	Элементы.ТаблицаЗначенийРазрезаДоля.Видимость = (Способ = ПредопределенноеЗначение("Перечисление.фин_СпособыНастройкиАналитикиСтрокБюджета.ТиражироватьСтрокуПоСпискуПозиций") ИЛИ Способ = ПредопределенноеЗначение("Перечисление.фин_СпособыНастройкиАналитикиСтрокБюджета.РаспределитьСтрокуПоСпискуПозиций"));
	Если НЕ Способ = ПредопределенноеЗначение("Перечисление.фин_СпособыНастройкиАналитикиСтрокБюджета.УстановитьЗначение") Тогда
		Возврат;
	КонецЕсли;
	СтрокиПоИзмерению = ТаблицаЗначенийРазреза.НайтиСтроки(Новый Структура("Измерение",ТекущееИзмерение));
	Если СтрокиПоИзмерению.Количество()>1 Тогда
		Для Инд = 2 По СтрокиПоИзмерению.Количество() Цикл
			ТаблицаЗначенийРазреза.Удалить(СтрокиПоИзмерению[Инд-1]);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	Если НЕ ЗначениеЗаполнено(РазрезАналитики) Тогда
		Возврат;
	КонецЕсли;
	Если СписокТипов.Количество()=1 Тогда
		ВыбранныйЭлемент = СписокТипов[0];
		ОткрытьФормуПодбора(ВыбранныйЭлемент.Значение);
	Иначе
		ОписаниеОповещенияВыбораСправочника = Новый ОписаниеОповещения("ОбработчикВыбораСправочника",ЭтотОбъект);
		ПоказатьВыборИзСписка(ОписаниеОповещенияВыбораСправочника,СписокТипов,Команда);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыбораСправочника(ВыбранноеЗначение,ДополнительныеПараметры) Экспорт
	Если ВыбранноеЗначение<>Неопределено Тогда
		ОткрытьФормуПодбора(ВыбранноеЗначение.Значение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПодбора(ИмяФормы)
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе,ВыборГруппИЭлементов",Ложь,ИспользованиеГруппИЭлементов.ГруппыИЭлементы);
	Если ТекущееИзмерение = ПредопределенноеЗначение("Перечисление.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение") И Параметры.УровеньДетализацииБюджета=ПредопределенноеЗначение("Перечисление.фин_УровниДетализацииБюджета.БюджетПодразделения") И ВключаяПодчиненныеПодразделения Тогда
		ПараметрыФормы.Вставить("НастройкиОтбораВБюджет",Новый Структура("ВидСравнения,Список",ВидСравненияКомпоновкиДанных.ВИерархии,Параметры.УправленческоеПодразделение));
	КонецЕсли;
	Если ИмяФормы = "Справочник.Номенклатура" Тогда
		РежимВстраивания = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_РежимИнтеграцииСУчетнойСистемой");
		Если РежимВстраивания = ПредопределенноеЗначение("Перечисление.фин_РежимыИнтеграцииСУчетнойСистемой.КомплексноеУправлениеФинансамиИБюджетированиеДляКазахстана") Тогда
			ОткрытьФорму(ИмяФормы+".Форма.УправляемаяФормаВыбора",ПараметрыФормы,ЭтотОбъект,,ВариантОткрытияОкна.ОтдельноеОкно);	
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ПараметрыФормы.Вставить("ИмяТаблицы",ИмяФормы);
	Попытка
		ОткрытьФорму(ИмяФормыВыбора(ИмяФормы),ПараметрыФормы,ЭтотОбъект,,ВариантОткрытияОкна.ОтдельноеОкно);	
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось получить управляемую форму подбора!");
	КонецПопытки;
КонецПроцедуры


&НаСервереБезКонтекста
Функция ИмяФормыВыбора(ИмяТипа)
	Возврат фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяФормыВыбораСправочника(ИмяТипа);
КонецФункции


&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение)=Тип("СправочникСсылка.фин_ПрофилиИзмененияПлановПоИзмерениям") Тогда
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			ЗаполнитьПоПрофилюНаСервере(ВыбранноеЗначение);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	Если ТаблицаЗначенийРазреза.НайтиСтроки(Новый Структура("Значение",ВыбранноеЗначение)).Количество()<>0 Тогда
		Возврат;
	КонецЕсли;
	НоваяСтрока = ТаблицаЗначенийРазреза.Добавить();
	НоваяСтрока.Значение 	= ВыбранноеЗначение;
	НоваяСтрока.Измерение 	= ТекущееИзмерение;
 	НоваяСтрока.Доля 		= 1;
	ЗначенияРазреза = ТаблицаЗначенийРазреза.НайтиСтроки(Новый Структура("Измерение",ТекущееИзмерение));
 	Если ЗначенияРазреза.Количество()=0 Тогда
		Способ = ПредопределенноеЗначение("Перечисление.фин_СпособыНастройкиАналитикиСтрокБюджета.НеИзменять");
	ИначеЕсли ЗначенияРазреза.Количество()=1 Тогда
		Способ = ПредопределенноеЗначение("Перечисление.фин_СпособыНастройкиАналитикиСтрокБюджета.УстановитьЗначение");
	ИначеЕсли НЕ (Способ = ПредопределенноеЗначение("Перечисление.фин_СпособыНастройкиАналитикиСтрокБюджета.ТиражироватьСтрокуПоСпискуПозиций") ИЛИ Способ = ПредопределенноеЗначение("Перечисление.фин_СпособыНастройкиАналитикиСтрокБюджета.РаспределитьСтрокуПоСпискуПозиций")) Тогда
		Способ = ПредопределенноеЗначение("Перечисление.фин_СпособыНастройкиАналитикиСтрокБюджета.ТиражироватьСтрокуПоСпискуПозиций");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоПрофилю(Команда)
	ОткрытьФорму("Справочник.фин_ПрофилиИзмененияПлановПоИзмерениям.ФормаВыбора",Новый Структура("Отбор",Новый Структура("ИзмерениеБюджетирования",ТекущееИзмерение)),ЭтотОбъект,,ВариантОткрытияОкна.ОтдельноеОкно,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоПрофилюНаСервере(Профиль)
	Если Способ <> Перечисления.фин_СпособыНастройкиАналитикиСтрокБюджета.ТиражироватьСтрокуПоСпискуПозиций
		И Способ <> Перечисления.фин_СпособыНастройкиАналитикиСтрокБюджета.РаспределитьСтрокуПоСпискуПозиций Тогда
		Способ = Перечисления.фин_СпособыНастройкиАналитикиСтрокБюджета.РаспределитьСтрокуПоСпискуПозиций;
	КонецЕсли;
	СтрокиПоИзмерению = ТаблицаЗначенийРазреза.НайтиСтроки(Новый Структура("Измерение",ТекущееИзмерение));
	Если СтрокиПоИзмерению.Количество()>1 Тогда
		Для Инд = 1 По СтрокиПоИзмерению.Количество() Цикл
			ТаблицаЗначенийРазреза.Удалить(СтрокиПоИзмерению[Инд-1]);
		КонецЦикла;
	КонецЕсли;
	мТаблицаЗначенийРазреза = ТаблицаЗначенийРазреза.Выгрузить().СкопироватьКолонки();
	фин_ЗащитаПривилегированныеПроцедуры.ЗаполнитьДолиПоПрофилю(Профиль,мТаблицаЗначенийРазреза,Параметры.Сценарий,Параметры.ПериодПланирования,Параметры.Организация,СтатьяБюджетаЗначение,ТекущееИзмерение,РазрезАналитики,Способ,Параметры.ДокументСсылка,Истина);
	Для Каждого СтрокаТЗ Из мТаблицаЗначенийРазреза Цикл
		НС = ТаблицаЗначенийРазреза.Добавить();
		ЗаполнитьЗначенияСвойств(НС,СтрокаТЗ);
		НС.Измерение = ТекущееИзмерение;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗначенийРазрезаЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ТекущееИзмерение = ПредопределенноеЗначение("Перечисление.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение") И Параметры.УровеньДетализацииБюджета=ПредопределенноеЗначение("Перечисление.фин_УровниДетализацииБюджета.БюджетПодразделения") И ВключаяПодчиненныеПодразделения Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("НастройкиОтбораВБюджет",Новый Структура("ВидСравнения,Список",ВидСравненияКомпоновкиДанных.ВИерархии,Параметры.УправленческоеПодразделение));
		ОткрытьФорму("Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПодразделений()+".ФормаВыбора",ПараметрыФормы,ЭтотОбъект);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗначенийРазрезаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элементы.ТаблицаЗначенийРазреза.ТекущиеДанные;
		ТекущиеДанные.Измерение 		= ТекущееИзмерение;
		ТекущиеДанные.Доля 				= 1;
		Элемент.ТекущиеДанные.Значение 	= Элементы.ТаблицаЗначенийРазрезаЗначение.ОграничениеТипа.ПривестиЗначение(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗначенийРазрезаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если ТаблицаЗначенийРазреза.Количество()=0 Тогда
		Способ = ПредопределенноеЗначение("Перечисление.фин_СпособыНастройкиАналитикиСтрокБюджета.НеИзменять");
	ИначеЕсли ТаблицаЗначенийРазреза.Количество()=1 Тогда
		Способ = ПредопределенноеЗначение("Перечисление.фин_СпособыНастройкиАналитикиСтрокБюджета.УстановитьЗначение");
	ИначеЕсли НЕ Способ = ПредопределенноеЗначение("Перечисление.фин_СпособыНастройкиАналитикиСтрокБюджета.РаспределитьСтрокуПоСпискуПозиций") Тогда
		Способ = ПредопределенноеЗначение("Перечисление.фин_СпособыНастройкиАналитикиСтрокБюджета.ТиражироватьСтрокуПоСпискуПозиций");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ЗаполнитьПередаваемыеПараметрыНаСервере();
	//КонецЕсли;
	Если БезИзменений() Тогда
		Закрыть();
	Иначе
		Закрыть(Настройки);
	КонецЕсли;
КонецПроцедуры

//Функция БезИзменений
//
&НаКлиенте
Функция БезИзменений()
	Если КоллекцияСпособов = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	ИзмененийНет = Истина;
	Для Каждого ЭлементСпособ Из КоллекцияСпособов Цикл
		Если ЭлементСпособ.Значение <> ПредопределенноеЗначение("Перечисление.фин_СпособыНастройкиАналитикиСтрокБюджета.НеИзменять") Тогда
	 		ИзмененийНет = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат ИзмененийНет;
КонецФункции //БезИзменений

&НаСервере
Процедура ЗаполнитьПередаваемыеПараметрыНаСервере()
	ПоместитьПараметрыРазрезаВСписки(ТекущееИзмерение);
	мНастройки = Новый Структура(Настройки);
	Для Каждого РазрезЭлемент Из СтруктураРазрезовБюджета Цикл
		ИмяРазреза = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(РазрезЭлемент.Значение);
		СтруктураНастроекРазрез	= Новый Структура();
		СоответствиеДолей 		= Новый Соответствие;
		ТаблицаРазреза			= ТаблицаЗначенийРазреза.Выгрузить(Новый Структура("Измерение",РазрезЭлемент.Значение));
		Если КоллекцияСпособов.Получить(РазрезЭлемент.Значение) <> Неопределено И ТаблицаРазреза.Количество()>0 Тогда
			СтруктураНастроекРазрез.Вставить("СпособЗаполнения",КоллекцияСпособов.Получить(РазрезЭлемент.Значение));
			МассивЗначений = ТаблицаРазреза.ВыгрузитьКолонку("Значение");
			СтруктураНастроекРазрез.Вставить("Значение",МассивЗначений);
			Для Каждого СтрокаТаблицы Из ТаблицаРазреза Цикл
				СоответствиеДолей.Вставить(СтрокаТаблицы.Значение,СтрокаТаблицы.Доля);
			КонецЦикла;
		КонецЕсли;
		СтруктураНастроекРазрез.Вставить("СоответствиеДолей",СоответствиеДолей);
		мНастройки.Вставить(ИмяРазреза,СтруктураНастроекРазрез);
	КонецЦикла;
	Настройки = Новый ФиксированнаяСтруктура(мНастройки);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОткрытиеФормы = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ДоступныеУровниВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	НастроитьСтраницуАналитики(Элементы.ДоступныеУровни.ТекущиеДанные.Значение);
КонецПроцедуры
