Перем мНачДата; // Хранит дату начала периода

Перем мКонДата; // Хранит дату окончания периода

Перем мВалютаРегламентированногоУчета; // Хранит валюту регламентированного учета

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
	
	// Процедура осуществляет печать документа. Можно направить печать на 
	// экран или принтер, а также распечатать необходимое количество копий.
	//
	//  Название макета печати передается в качестве параметра,
	// по переданному названию находим имя макета в соответствии.
	//
	// Параметры:
	//  НазваниеМакета - строка, название макета.
	//
	Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
		
		Если ЭтоНовый() Тогда
			Предупреждение("Документ можно распечатать только после его записи");
			Возврат;
		ИначеЕсли Не УправлениеПользователями.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
			Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
			Возврат;
		КонецЕсли;
		
		Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
			Возврат;
		КонецЕсли;
		
		Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда
			
			ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
			
			Если ТабДокумент = Неопределено Тогда
				Возврат;
			КонецЕсли; 
			
		КонецЕсли;
		
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект));
		
	КонецПроцедуры // Печать
	
	
	// Процедура вызывается перед записью документа 
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//ОбщегоНазначения.ПередЗаписьюДокументаОчисткаРеквизитаРучнаяКорректировка(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	ЗаполнениеДокументов.ПередЗаписьюДокументаУстановкаАвтораПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура();
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

//проверим, не был ли введен документ с такими же функциями тем же месяцем
Функция ПроверкаПовторовВидовОпераций(НачДата, КонДата)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НачалоДняПериода", НачДата);
	Запрос.УстановитьПараметр("КонецДняПериода",  КонДата);
	Запрос.УстановитьПараметр("Организация",  Организация);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА моп_ДвиженияМониторинга.ДвиженияПоМониторингуРеализации = ИСТИНА
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДвиженияПоМониторингуРеализации,
	|	СУММА(ВЫБОР
	|			КОГДА моп_ДвиженияМониторинга.ДвиженияПоМониторингуПокупок = ИСТИНА
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДвиженияПоМониторингуПокупок,
	|	СУММА(ВЫБОР
	|			КОГДА моп_ДвиженияМониторинга.ДвиженияПоМониторингуИмпорта = ИСТИНА
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДвиженияПоМониторингуИмпорта,
	|	СУММА(ВЫБОР
	|			КОГДА моп_ДвиженияМониторинга.ДвиженияПоМониторингуЭкспорта = ИСТИНА
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДвиженияПоМониторингуЭкспорта
	|ИЗ
	|	Документ.моп_ДвиженияМониторинга КАК моп_ДвиженияМониторинга
	|ГДЕ
	|	моп_ДвиженияМониторинга.Организация = &Организация
	|	И моп_ДвиженияМониторинга.Дата >= &НачалоДняПериода
	|	И моп_ДвиженияМониторинга.Дата <= &КонецДняПериода
	|	И моп_ДвиженияМониторинга.Проведен
	|	И (НЕ моп_ДвиженияМониторинга.ПометкаУдаления)";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	ТекстСообщения = "";
	
	Для Каждого Выборка Из Результат Цикл
		
		Если Выборка.ДвиженияПоМониторингуРеализации > 1 Тогда
			ТекстСообщения = ТекстСообщения + "Движения по регистру накопления ""Мониторинг реализации"" за текущий период уже были сформированы ранее введенным документом.
			|";
		КонецЕсли;
		
		Если Выборка.ДвиженияПоМониторингуПокупок > 1 Тогда
			ТекстСообщения = ТекстСообщения + "Движения по регистру накопления ""Мониторинг покупок"" за текущий период уже были сформированы ранее введенным документом.
			|";
		КонецЕсли;
		
		Если Выборка.ДвиженияПоМониторингуИмпорта > 1 Тогда
			ТекстСообщения = ТекстСообщения + "Движения по регистру накопления ""Мониторинг импорта"" за текущий период уже были сформированы ранее введенным документом.
			|";
		КонецЕсли;			
		
		Если Выборка.ДвиженияПоМониторингуЭкспорта > 1 Тогда
			ТекстСообщения = ТекстСообщения + "Движения по регистру накопления ""Мониторинг экспорта"" за текущий период уже были сформированы ранее введенным документом.
			|";
		КонецЕсли;							
		
	КонецЦикла;
	
	Возврат ТекстСообщения;
	
Конецфункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаЗаполнения".
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);	
	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект) Тогда
		Возврат
	КонецЕсли;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = "Проведение документа """ + СокрЛП(ЭтотОбъект) + """: ";
	
	Если ДвиженияПоМониторингуРеализации + ДвиженияПоМониторингуПокупок + ДвиженияПоМониторингуИмпорта + ДвиженияПоМониторингуЭкспорта = 0 Тогда
		Сообщить("Выберите хотя бы одно действие!", СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НачДата = НачалоМесяца(Дата);
	КонДата = КонецМесяца(Дата);	
	СообщенияОПовторахВидовОпераций = ПроверкаПовторовВидовОпераций(НачДата, КонДата);
	
	Если ЗначениеЗаполнено(СообщенияОПовторахВидовОпераций) Тогда
		Сообщить(СообщенияОПовторахВидовОпераций);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОсновнаяКонфигурация = моп_Общий.ПолучитьОсновнуюКонфигурацию();
	Если Не ЗначениеЗаполнено(ОсновнаяКонфигурация) Тогда
		Сообщить("Не установлено значение основной конфигурации! Установите значение основной конфигурации самостоятельно через настройку параметров.", СтатусСообщения.Важное);		
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ДанныеДокумента = Новый Структура;
	ДанныеДокумента.Вставить("Ссылка", Ссылка);
	ДанныеДокумента.Вставить("Дата", Дата);
	ДанныеДокумента.Вставить("Организация", Организация);	
	ДанныеДокумента.Вставить("ДвиженияПоМониторингуИмпорта", ДвиженияПоМониторингуИмпорта);	
	ДанныеДокумента.Вставить("ДвиженияПоМониторингуПокупок", ДвиженияПоМониторингуПокупок);	
	ДанныеДокумента.Вставить("ДвиженияПоМониторингуРеализации", ДвиженияПоМониторингуРеализации);	
	ДанныеДокумента.Вставить("ДвиженияПоМониторингуЭкспорта", ДвиженияПоМониторингуЭкспорта);	
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Если ОсновнаяКонфигурация = Перечисления.моп_Конфигурации.Нефтебаза Тогда
		
		Если ДвиженияПоМониторингуРеализации Тогда		
			#Если Клиент Тогда
				Сообщить("Выполняются движения по Мониторингу реализации...");
				Состояние("Заполнение движений по Мониторингу реализации..." );
			#КонецЕсли
			моп_ВыполнениеОперацийНаСервере.ВыполнитьДвиженияПоМониторингуРеализацииГСМ(ДанныеДокумента, НачДата, КонДата, ВалютаРегламентированногоУчета);			
		КонецЕсли;	
		
		Если ДвиженияПоМониторингуПокупок Тогда		
			#Если Клиент Тогда
				Сообщить("Выполняются движения по Мониторингу покупок...");
				Состояние("Заполнение движений по Мониторингу покупок..." );
			#КонецЕсли
			моп_ВыполнениеОперацийНаСервере.ВыполнитьДвиженияПоМониторингуПокупокГСМ(ДанныеДокумента, НачДата, КонДата, ВалютаРегламентированногоУчета);			
		КонецЕсли;	
		
		Если ДвиженияПоМониторингуИмпорта Тогда		
			#Если Клиент Тогда
				Сообщить("Выполняются движения по Мониторингу импорта...");
				Состояние("Заполнение движений по Мониторингу импорта..." );
			#КонецЕсли
			моп_ВыполнениеОперацийНаСервере.ВыполнитьДвиженияПоМониторингуИмпортаГСМ(ДанныеДокумента, НачДата, КонДата, ВалютаРегламентированногоУчета);			
		КонецЕсли;	
		
		Если ДвиженияПоМониторингуЭкспорта Тогда		
			#Если Клиент Тогда
				Сообщить("Выполняются движения по Мониторингу экспорта...");
				Состояние("Заполнение движений по Мониторингу экспорта..." );
			#КонецЕсли
			моп_ВыполнениеОперацийНаСервере.ВыполнитьДвиженияПоМониторингуЭкспортаГСМ(ДанныеДокумента, НачДата, КонДата, ВалютаРегламентированногоУчета);			
		КонецЕсли;	
		
	ИначеЕсли ОсновнаяКонфигурация = Перечисления.моп_Конфигурации.УППДляКазахстана Тогда 
		Если ДвиженияПоМониторингуРеализации Тогда		
			#Если Клиент Тогда
				Сообщить("Выполняются движения по Мониторингу реализации...");
				Состояние("Заполнение движений по Мониторингу реализации..." );
			#КонецЕсли
			моп_ВыполнениеОперацийНаСервере.ВыполнитьДвиженияПоМониторингуРеализацииУПП(ДанныеДокумента, НачДата, КонДата, ВалютаРегламентированногоУчета);			
		КонецЕсли;	
		
		Если ДвиженияПоМониторингуПокупок Тогда		
			#Если Клиент Тогда
				Сообщить("Выполняются движения по Мониторингу покупок...");
				Состояние("Заполнение движений по Мониторингу покупок..." );
			#КонецЕсли
			моп_ВыполнениеОперацийНаСервере.ВыполнитьДвиженияПоМониторингуПокупокУПП(ДанныеДокумента, НачДата, КонДата, ВалютаРегламентированногоУчета);			
		КонецЕсли;	
		
		Если ДвиженияПоМониторингуИмпорта Тогда		
			#Если Клиент Тогда
				Сообщить("Выполняются движения по Мониторингу импорта...");
				Состояние("Заполнение движений по Мониторингу импорта..." );
			#КонецЕсли
			моп_ВыполнениеОперацийНаСервере.ВыполнитьДвиженияПоМониторингуИмпортаУПП(ДанныеДокумента, НачДата, КонДата, ВалютаРегламентированногоУчета);			
		КонецЕсли;	
		
		Если ДвиженияПоМониторингуЭкспорта Тогда		
			#Если Клиент Тогда
				Сообщить("Выполняются движения по Мониторингу экспорта...");
				Состояние("Заполнение движений по Мониторингу экспорта..." );
			#КонецЕсли
			моп_ВыполнениеОперацийНаСервере.ВыполнитьДвиженияПоМониторингуЭкспортаУПП(ДанныеДокумента, НачДата, КонДата, ВалютаРегламентированногоУчета);			
		КонецЕсли;	
	ИначеЕсли ОсновнаяКонфигурация = Перечисления.моп_Конфигурации.БухгалтерияДляКазахстана Тогда 
		Если ДвиженияПоМониторингуРеализации Тогда		
			#Если Клиент Тогда
				Сообщить("Выполняются движения по Мониторингу реализации...");
				Состояние("Заполнение движений по Мониторингу реализации..." );
			#КонецЕсли
			моп_ВыполнениеОперацийНаСервере.ВыполнитьДвиженияПоМониторингуРеализации(ДанныеДокумента, НачДата, КонДата, ВалютаРегламентированногоУчета);			
		КонецЕсли;	
		
		Если ДвиженияПоМониторингуПокупок Тогда		
			#Если Клиент Тогда
				Сообщить("Выполняются движения по Мониторингу покупок...");
				Состояние("Заполнение движений по Мониторингу покупок..." );
			#КонецЕсли
			моп_ВыполнениеОперацийНаСервере.ВыполнитьДвиженияПоМониторингуПокупок(ДанныеДокумента, НачДата, КонДата, ВалютаРегламентированногоУчета);			
		КонецЕсли;	
		
		Если ДвиженияПоМониторингуИмпорта Тогда		
			#Если Клиент Тогда
				Сообщить("Выполняются движения по Мониторингу импорта...");
				Состояние("Заполнение движений по Мониторингу импорта..." );
			#КонецЕсли
			моп_ВыполнениеОперацийНаСервере.ВыполнитьДвиженияПоМониторингуИмпорта(ДанныеДокумента, НачДата, КонДата, ВалютаРегламентированногоУчета);			
		КонецЕсли;	
		
		Если ДвиженияПоМониторингуЭкспорта Тогда		
			#Если Клиент Тогда
				Сообщить("Выполняются движения по Мониторингу экспорта...");
				Состояние("Заполнение движений по Мониторингу экспорта..." );
			#КонецЕсли
			моп_ВыполнениеОперацийНаСервере.ВыполнитьДвиженияПоМониторингуЭкспорта(ДанныеДокумента, НачДата, КонДата, ВалютаРегламентированногоУчета);			
		КонецЕсли;	
	Иначе Сообщить("Не идентифицировано значение основной конфигурации! Обратитесь к разработчику.", СтатусСообщения.Важное);		
	КонецЕсли;
	
	Сообщить("...завершено");
	
КонецПроцедуры


// Предопределенная процедура обработки удаления проведения документа
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, РучнаяКорректировка);
	
КонецПроцедуры


