#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
		
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	ЭтотОбъект.Сценарий 	= фин_ОбщегоНазначенияСервер.ПолучитьЗначениеПоУмолчанию(, "СценарийПланированияДДС");
	ЭтотОбъект.ФормаОплаты 	= фин_ОбщегоНазначенияСервер.ПолучитьЗначениеПоУмолчанию(, "ФормаОплатыЗаявок");
	ЭтотОбъект.Состояние = фин_ОбщегоНазначенияСервер.СостояниеДокументаПоУмолчанию(ЭтотОбъект.Метаданные().Имя);
		
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура") 
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		Документы.ден_ЗаявкаНаРасходованиеСредств.ЗаполнитьПоДокументуОснованию(ЭтотОбъект, ДанныеЗаполнения);
		Возврат;
	ИначеЕсли ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения = Тип("Структура") Тогда
		Документы.ден_ЗаявкаНаРасходованиеСредств.ЗаполнитьПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		Возврат;
	КонецЕсли;
	
	ВалютаРегламентированногоУчета = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета");
	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, ВалютаРегламентированногоУчета);
	
	ден_ПроцедурыКазначейства.ЗаполнитьРеквизитыРасчетногоДокумента(ЭтотОбъект, ЭтотОбъект.РасшифровкаПлатежа);
			

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();	
	
	// работа с проверкой реквизитов шапки
	
	ЕстьРасчетыСКонтрагентами 	= ден_ПроцедурыКазначейства.ЕстьРасчетыСКонтрагентами(ВидОперации);
	ЕстьРасчетыПоКредитам 		= ден_ПроцедурыКазначейства.ЕстьРасчетыПоКредитам(ВидОперации);
	
	Если ВидОперации 	= Перечисления.ден_ВидыОперацийЗаявкиНаРасходование.ВыдачаДенежныхСредствПодотчетнику 
		И ФормаОплаты 	= Перечисления.ден_ВидыДенежныхСредств.Безналичные Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Получатель");
	КонецЕсли;
	Если ВидОперации 	= Перечисления.ден_ВидыОперацийЗаявкиНаРасходование.ВыдачаДенежныхСредствПодотчетнику 
		И ФормаОплаты 	= Перечисления.ден_ВидыДенежныхСредств.Наличные Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПеречислениеВПодотчет.ФизЛицо");
	КонецЕсли;
	Если НЕ (ВидОперации = Перечисления.ден_ВидыОперацийЗаявкиНаРасходование.ВыдачаДенежныхСредствПодотчетнику
		ИЛИ ВидОперации = Перечисления.ден_ВидыОперацийЗаявкиНаРасходование.РасчетыПоКредитамИЗаймамСРаботниками) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Получатель");
		МассивНепроверяемыхРеквизитов.Добавить("ВалютаВзаиморасчетовПодотчетника");
	КонецЕсли;
	Если НЕ (ВидОперации = Перечисления.ден_ВидыОперацийЗаявкиНаРасходование.ПеречислениеНалога
		ИЛИ ВидОперации  = Перечисления.ден_ВидыОперацийЗаявкиНаРасходование.ПеречислениеНДССИзмененнымСрокомУплаты) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидНалога");
	КонецЕсли;
	Если НЕ (ЕстьРасчетыСКонтрагентами ИЛИ ЕстьРасчетыПоКредитам) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Контрагент");
	КонецЕсли;

	ПроверятьБюджетныеРеквизиты = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетнаяПолитика.ПроверятьЗаполнениеБюджетнойКлассификацииВЗаявкахНаРасходование
	|ИЗ
	|	РегистрСведений.фин_УчетнаяПолитикаПоБюджетированию.СрезПоследних(&ДатаРасхода, ) КАК УчетнаяПолитика";

	Запрос.УстановитьПараметр("ДатаРасхода", ДатаРасхода);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Если ВыборкаДетальныеЗаписи.ПроверятьЗаполнениеБюджетнойКлассификацииВЗаявкахНаРасходование Тогда
			ПроверятьБюджетныеРеквизиты = Истина;
		КонецЕсли;
	КонецЕсли;
	Если НЕ ПроверятьБюджетныеРеквизиты Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Сценарий");
		МассивНепроверяемыхРеквизитов.Добавить("ФинансовыйПоказатель");
	КонецЕсли;
	
	// работа с проверкой реквизитов табличных частей
	Если НЕ (ЕстьРасчетыСКонтрагентами ИЛИ ЕстьРасчетыПоКредитам) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорКонтрагента");
		МассивНепроверяемыхРеквизитов.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
	КонецЕсли;
			
	Если (Не Отказ) И (ЕстьРасчетыСКонтрагентами ИЛИ ЕстьРасчетыПоКредитам) Тогда
		Для Каждого Платеж Из РасшифровкаПлатежа Цикл
			Если ЗначениеЗаполнено(Организация) 
				И Организация <> Платеж.ДоговорКонтрагента.Организация Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Выбран договор контрагента, не соответствующий организации, указанной в документе!",ЭтотОбъект,"РасшифровкаПлатежа["+Строка(РасшифровкаПлатежа.Индекс(Платеж))+"].ДоговорКонтрагента",, Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если (НЕ Отказ) И УказыватьВедомости Тогда
		Если ВидОперации = Перечисления.ден_ВидыОперацийЗаявкиНаРасходование.ПеречислениеЗП Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ЕСТЬNULL(СУММА(ЗарплатаКВыплате.Сумма+ЗарплатаКВыплате.ДепонированнаяСумма), 0) КАК СуммаВыплачено
			|ИЗ
			|	Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплате
			|ГДЕ
			|	ЗарплатаКВыплате.Ссылка В (&Ссылки)";
			Запрос.УстановитьПараметр("Выплачено",	Перечисления.ВыплаченностьЗарплаты.Выплачено);
			Запрос.УстановитьПараметр("НеВыплачено",Перечисления.ВыплаченностьЗарплаты.НеВыплачено);		
			Запрос.УстановитьПараметр("Ссылки",		ПеречислениеЗаработнойПлаты.ВыгрузитьКолонку("Ведомость"));
			
			Результат = Запрос.Выполнить().Выбрать();
			
			НеСоответствиеСумм = Ложь;
			Если НЕ Результат.Следующий() Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сумма документа не совпадает с суммой по ведомостям",ЭтотОбъект,"ПеречислениеЗаработнойПлаты",, Отказ);
				Отказ = Истина;
			ИначеЕсли Результат.СуммаВыплачено <> СуммаДокумента Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сумма документа не совпадает с суммой по ведомостям",ЭтотОбъект,"ПеречислениеЗаработнойПлаты",, Отказ);
				Отказ = Истина;
			КонецЕсли;
		ИначеЕсли ВидОперации = Перечисления.ден_ВидыОперацийЗаявкиНаРасходование.ПеречислениеПоИсполнительнымЛистам Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			               |	СУММА(ЕСТЬNULL(ИсполнительныеЛисты.СуммаПлатежа, 0)) КАК СуммаВыплачено
			               |ИЗ
			               |	Документ.ИЛПеречислениеПолучателям.ИсполнительныеЛисты КАК ИсполнительныеЛисты
			               |ГДЕ
			               |	ИсполнительныеЛисты.Ссылка В(&Ссылки)";
			Запрос.УстановитьПараметр("Ссылки",		ПеречислениеПоИсполнительнымЛистам.ВыгрузитьКолонку("Документ"));
			
			Результат = Запрос.Выполнить().Выбрать();
			
			НеСоответствиеСумм = Ложь;
			Если НЕ Результат.Следующий() Тогда
				ТекстСообщения = НСтр("ru = 'Сумма документа не совпадает с суммой по спискам на перечисление'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ПеречислениеЗаработнойПлаты",, Отказ);
				Отказ = Истина;
			ИначеЕсли Результат.СуммаВыплачено <> СуммаДокумента Тогда
				ТекстСообщения = НСтр("ru = 'Сумма документа не совпадает с суммой по спискам на перечисление'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ПеречислениеЗаработнойПлаты",, Отказ);
				Отказ = Истина;
			КонецЕсли;
		ИначеЕсли ВидОперации = Перечисления.ден_ВидыОперацийЗаявкиНаРасходование.ПеречислениеПенсионныхВзносов Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			               |	СУММА(ЕСТЬNULL(ПенсионныеВзносы.Сумма, 0)) КАК СуммаВыплачено
			               |ИЗ
			               |	Документ.ОПВПеречислениеВФонды.ПенсионныеВзносы КАК ПенсионныеВзносы
			               |ГДЕ
			               |	ПенсионныеВзносы.Ссылка В(&Ссылки)";
			Запрос.УстановитьПараметр("Ссылки", ПеречислениеПенсионныхВзносов.ВыгрузитьКолонку("Документ"));
			
			Результат = Запрос.Выполнить().Выбрать();
			
			НеСоответствиеСумм = Ложь;
			Если НЕ Результат.Следующий() Тогда
				ТекстСообщения = НСтр("ru = 'Сумма документа не совпадает с суммой по спискам на перечисление'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ПеречислениеЗаработнойПлаты",, Отказ);
				Отказ = Истина;
			ИначеЕсли Результат.СуммаВыплачено <> СуммаДокумента Тогда
				ТекстСообщения = НСтр("ru = 'Сумма документа не совпадает с суммой по спискам на перечисление'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ПеречислениеЗаработнойПлаты",, Отказ);
				Отказ = Истина;
			КонецЕсли;
		ИначеЕсли ВидОперации = Перечисления.ден_ВидыОперацийЗаявкиНаРасходование.ПеречислениеСоциальныхОтчислений Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			               |	СУММА(ЕСТЬNULL(СоциальныеОтчисления.Сумма, 0)) КАК СуммаВыплачено
			               |ИЗ
			               |	Документ.СОПеречислениеВФонды.СоциальныеОтчисления КАК СоциальныеОтчисления
			               |ГДЕ
			               |	СоциальныеОтчисления.Ссылка В(&Ссылки)";
			Запрос.УстановитьПараметр("Ссылки", ПеречислениеСоциальныхОтчислений.ВыгрузитьКолонку("Документ"));
			
			Результат = Запрос.Выполнить().Выбрать();
			
			НеСоответствиеСумм = Ложь;
			Если НЕ Результат.Следующий() Тогда
				ТекстСообщения = НСтр("ru = 'Сумма документа не совпадает с суммой по спискам на перечисление'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ПеречислениеЗаработнойПлаты",, Отказ);
				Отказ = Истина;
			ИначеЕсли Результат.СуммаВыплачено <> СуммаДокумента Тогда
				ТекстСообщения = НСтр("ru = 'Сумма документа не совпадает с суммой по спискам на перечисление'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ПеречислениеЗаработнойПлаты",, Отказ);
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Не РасшифровкаПлатежа.Итог("СуммаПлатежа") = СуммаДокумента Тогда
		ТекстСообщения = НСтр("ru = 'Не совпадают сумма документа и ее расшифровка.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "РасшифровкаПлатежа", "Объект", Отказ);
	КонецЕсли;
	
	Если РазмещениеЗаявки.Итог("СуммаПлатежа") > СуммаДокумента Тогда
		ТекстСообщения = НСтр("ru = 'Сумма размещения превышает сумму документа.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "РазмещениеЗаявки", "Объект", Отказ);
	КонецЕсли;
	
	Если НачалоДня(Дата) > НачалоДня(ДатаРасхода) Тогда
		ТекстСообщения = НСтр("ru = 'Дата подачи больше даты расхода!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Дата", "Объект");
	КонецЕсли;	
	
	фин_ЗаполнениеДокументов.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;

	ЦФО_Заявки = Документы.ден_ЗаявкаНаРасходованиеСредств.КраткийСоставПодразделений(ЭтотОбъект);
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Подразделения.Представление
		|ИЗ
		|	Справочник.Подразделения КАК Подразделения
		|ГДЕ
		|	Подразделения.Ссылка В(&ЦФО)";

	Запрос.УстановитьПараметр("ЦФО", ЦФО_Заявки);

	Результат = Запрос.Выполнить();

	МассивПодразделений = Результат.Выгрузить().ВыгрузитьКолонку("Представление");
	мКраткийСоставПодразделения = "";
	Для Каждого ЭлементМассива Из МассивПодразделений Цикл
		мКраткийСоставПодразделения = мКраткийСоставПодразделения + ?(мКраткийСоставПодразделения = "","","; ") + ЭлементМассива;
		Если СтрДлина(мКраткийСоставПодразделения) > 100 Тогда
			мКраткийСоставПодразделения = Сред(мКраткийСоставПодразделения,1,97) + "...";
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если СтрДлина(мКраткийСоставПодразделения) > 100 Тогда
		мКраткийСоставПодразделения = Сред(мКраткийСоставПодразделения,1,97) + "...";
	КонецЕсли;
	
	КраткийСоставПодразделения = мКраткийСоставПодразделения; 

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	фин_ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.ден_ЗаявкаНаРасходованиеСредств.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Сценарий) И ЗначениеЗаполнено(ФинансовыйПоказатель) Тогда
		Если Не Документы.ден_ЗаявкаНаРасходованиеСредств.КонтрольВыполнен(ЭтотОбъект) 
			И Не фин_РегистрацияФактическихДанныхПоБюджетированию.РазрешеноПревышениеКонтролируемыхЗначенийПоБюджетам() Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаРазмещениеЗаявки, Движения, Отказ, "РазмещениеЗаявки", "ден_ПроцедурыКазначейства", "СформироватьДвиженияЗаявкаНаРасходованиеСредствРазмещениеЗаявок",,);	
	фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаРазмещениеЗаявки, Движения, Отказ, "РазмещениеЗаявки", "ден_ПроцедурыКазначейства", "СформироватьДвиженияЗаявкаНаРасходованиеСредствДенежныеСредстваВРезерве",,);
	фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения, Движения, Отказ, "РасшифровкаПлатежа", "ден_ПроцедурыКазначейства", "СформироватьДвиженияЗаявкаНаРасходованиеСредствЗаявкиНаРасходование",,);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#КонецЕсли