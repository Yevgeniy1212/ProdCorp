

&НаКлиенте
// Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("ДокументСсылка.цс_ЗаявкаНаФинасирование") тогда
		Возврат
	КонецЕсли;
	
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Ложь,Элементы.Список.ТекущаяСтрока, Истина);
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("ДокументСсылка.цс_ЗаявкаНаФинасирование") тогда
		Возврат
	КонецЕсли;
	
	РаботаСДиалогами.ОткрытьСвойстваДокумента(Элементы.Список.ТекущаяСтрока, ЭтаФорма);
	
КонецПроцедуры // ДействияФормыДействиеОткрытьСвойства()

&НаКлиенте
// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("ДокументСсылка.цс_ЗаявкаНаФинасирование") тогда
		Возврат
	КонецЕсли;
	
	РаботаСДиалогами.ОткрытьКатегорииДокумента(Элементы.Список.ТекущаяСтрока, ЭтаФорма);
	
КонецПроцедуры // ДействияФормыДействиеОткрытьКатегории()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ТекущийПользователь(), "УчетПоВсемОрганизациям") Тогда // Установлен режим учета по одной организации
		Список.Отбор.Элементы.Очистить();
		Поле = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Поле.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Организация");
		Поле.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		Поле.ПравоеЗначение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ТекущийПользователь(), "ОсновнаяОрганизация");
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура ПоказатьНезаключенныеДоговораПриИзменении(Элемент)
	Если ПоказатьЗаявкиСРасторгнутымиДоговорами тогда
		ПоказатьЗаявкиСРасторгнутымиДоговорами = ложь;
	КонецЕсли;
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список,"СостояниеДоговора","Не заключен",ПоказатьНезаключенныеДоговора);
	
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЗаявкиСРасторгнутымиДоговорамиПриИзменении(Элемент)
	Если ПоказатьНезаключенныеДоговора тогда
		ПоказатьНезаключенныеДоговора = ложь;
	КонецЕсли;
	СписокРасторгнутых = новый СписокЗначений;
	СписокРасторгнутых.Добавить(ПредопределенноеЗначение("Перечисление.ЦС_ОснованияРасторженияДоговоровФЗ.ДобровольноеРасторжение"));
	СписокРасторгнутых.Добавить(ПредопределенноеЗначение("Перечисление.ЦС_ОснованияРасторженияДоговоровФЗ.НесвоевременноеПредоставлениеГарантии"));
	СписокРасторгнутых.Добавить(ПредопределенноеЗначение("Перечисление.ЦС_ОснованияРасторженияДоговоровФЗ.ОтказаноГарантом"));
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список,"СостояниеДоговора",СписокРасторгнутых,ПоказатьЗаявкиСРасторгнутымиДоговорами,ВидСравненияКомпоновкиДанных.ВСписке);	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьДополнительныйОтбор(Команда)
	
	Если элементы.Отбор.Видимость тогда
		Элементы.ФормаПоказатьДополнительныйОтбор.Заголовок = "Показать дополнительный отбор";
		
		Элементы.Отбор.Видимость = ложь;	
	Иначе
			Элементы.ФормаПоказатьДополнительныйОтбор.Заголовок = "Скрыть дополнительный отбор";
		
		Элементы.Отбор.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

