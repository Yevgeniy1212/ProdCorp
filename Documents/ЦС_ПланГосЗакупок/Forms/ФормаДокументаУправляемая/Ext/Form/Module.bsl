
&НаКлиенте
Процедура РасчетнаяТаблицаПриИзменении(Элемент)
	объект.СуммаДокумента = объект.РасчетнаяТаблица.итог("КонтрольнаяСумма");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	если Объект.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОбъектов.Утвержден") тогда
		ТолькоПросмотр = истина;
	КонецЕсли;
	мМакетКодовСтрокКПВЭД 	= ПолучитьОбщийМакет("КодыКПВЭД");
	Для Каждого СтрокаТЧ из объект.РасчетнаяТаблица Цикл
		ОбработатьОписаниеКПВЭД(СтрокаТЧ, мМакетКодовСтрокКПВЭД);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетнаяТаблицаНоменклатураПриИзменении(Элемент)
	ТекущиеДанные = Элементы.РасчетнаяТаблица.ТекущиеДанные;
	ТекущиеДанные.КодКПВЭД = КПВЭД(ТекущиеДанные.НоменклатураГосЗакупа);
	ОбработатьОписаниеКПВЭД(ТекущиеДанные, мМакетКодовСтрокКПВЭД);	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КПВЭД(НоменклатураСсылка)
	
	Возврат НоменклатураСсылка.КодКПВЭД;	
	
КонецФункции

&НаКлиенте
Процедура РасчетнаяТаблицаНоменклатураКодКПВЭДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = элементы.РасчетнаяТаблица.ТекущиеДанные;
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбораКода = ПолучитьОбщуюФорму("ФормаВыбораИзКлассификатора", ЭтаФорма);
	
	ФормаВыбораКода.РежимВыбора = Истина;
	ФормаВыбораКода.ИмяМакета = "КодыКПВЭД";
	ФормаВыбораКода.ИмяСекции = "Классификатор";
	ФормаВыбораКода.ПолучатьПолныеДанные = Истина;
	ФормаВыбораКода.ТекущийКодСтроки = ?(НЕ ЗначениеЗаполнено(ТекущиеДанные.КодКПВЭД), Неопределено, СокрЛП(ТекущиеДанные.КодКПВЭД));	
	ФормаВыбораКода.ОткрытьМодально();
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетнаяТаблицаНоменклатураКодКПВЭДПриИзменении(Элемент)
	
	ОбработатьОписаниеКПВЭД(Элементы.РасчетнаяТаблица.ТекущиеДанные, мМакетКодовСтрокКПВЭД);	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбработатьОписаниеКПВЭД(СтрокаТабличнойЧасти,
									мМакетКодовСтрокКПВЭД)	
	
	КодКПВЭД = СтрокаТабличнойЧасти.КодКПВЭД; 
	Если ПустаяСтрока(СтрЗаменить(КодКПВЭД, ".", "")) Тогда
		РасшифровкаКодСтрокиКПВЭД = "<не указано>";
	Иначе                                              		
		мОбластьСтрокКПВЭД   = мМакетКодовСтрокКПВЭД.Области.Найти("Классификатор");
		
		НаименованиеСтроки = ПолучитьНаименованиеСтрокиКлассификатораПоКоду(мМакетКодовСтрокКПВЭД, 
																			мОбластьСтрокКПВЭД,
																			КодКПВЭД,
																			3,
																			4);
		Если ПустаяСтрока(НаименованиеСтроки) Тогда
			РасшифровкаКодСтрокиКПВЭД = "строка с кодом " + СокрЛП(КодКПВЭД) + " не найдена.";
		Иначе
			РасшифровкаКодСтрокиКПВЭД = НаименованиеСтроки;
		КонецЕсли;
		
	КонецЕсли;
	
	СтрокаТабличнойЧасти.ОписаниеКПВЭД = РасшифровкаКодСтрокиКПВЭД;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьНаименованиеСтрокиКлассификатораПоКоду(МакетКлассификатора, 
														Область,
														Знач КодСтроки, 
														НомерКолонкиКода = 1,
														НомерКолонкиНаименования = 2) Экспорт
	
	НаименованиеСтроки = "";
	КодСтроки = ВРег(СокрЛП(КодСтроки));
	
	Для НомерСтроки = Область.Верх По Область.Низ Цикл
		
		Если КодСтроки = ВРег(СокрЛП(МакетКлассификатора.Область(НомерСтроки, НомерКолонкиКода).Текст)) Тогда
			НаименованиеСтроки = МакетКлассификатора.Область(НомерСтроки, НомерКолонкиНаименования).Текст;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НаименованиеСтроки;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	ТекущиеДанные = Элементы.РасчетнаяТаблица.ТекущиеДанные;
	ТекущиеДанные.КодКПВЭД = ВыбранноеЗначение.КодСтроки;
	ТекущиеДанные.ОписаниеКПВЭД = ВыбранноеЗначение.Наименование;
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзРасчетнойТаблицы(Команда)
	ФормаВыбора = ПолучитьФорму("Документ.б_РасчетнаяТаблица.ФормаВыбора");
	ФормаВыбора.Отбор.организация.Значение = Объект.Организация;
	ФормаВыбора.Отбор.ПериодПланирования.Значение = НачалоГода(объект.ПериодПланирования);
	Если Не Объект.ПодразделениеОрганизации.Пустая() Тогда 
	ФормаВыбора.Отбор.ПодразделениеОрганизации.Значение = Объект.ПодразделениеОрганизации;
	ФормаВыбора.Отбор.ПодразделениеОрганизации.использование = Истина;
	Иначе
	ФормаВыбора.Отбор.ПодразделениеОрганизации.использование = Ложь;
	КонецЕсли;
	ФормаВыбора.Отбор.организация.использование = Истина;
    ФормаВыбора.Отбор.ПериодПланирования.использование = истина;

	РасчетнаяТаблицаИсх = ФормаВыбора.открытьмодально();
	
	Если РасчетнаяТаблицаИсх <> Неопределено тогда
		Если РасчетнаяТаблицаИсх.ВидРасчетнойТаблицы = Перечисления.б_ВидыРасчетныхТаблиц.ПоГруппеСтатейБюджета тогда
			БратьОписание = "СБ";
		ИначеЕсли РасчетнаяТаблицаИсх.ВидРасчетнойТаблицы = Перечисления.б_ВидыРасчетныхТаблиц.Общая тогда
			БратьОписание = "НомНаим";
		ИначеЕсли РасчетнаяТаблицаИсх.ВидРасчетнойТаблицы = Перечисления.б_ВидыРасчетныхТаблиц.Коммунальные тогда		
			БратьОписание = "Ком";
		КонецЕсли;
		
		
		
		
		Форма = Обработки.ЦС_КонструкторПланаЗакупок.ПолучитьФорму("Форма");
		Обработка = Форма.ОбработкаОбъект;
		ЗаполнитьЗначенияСвойств(Обработка,РасчетнаяТаблицаИсх);
		Обработка.документоснование = РасчетнаяТаблицаИсх;
		Обработка.ВызовИзПлана = Истина;
		Для каждого строкатч из РасчетнаяТаблицаИсх.РасчетнаяТаблица Цикл
			НС = Обработка.Закупки.Добавить();
			нс.брать = истина;
			ЗаполнитьЗначенияСвойств(НС,СтрокаТЧ);
			НС.СтатьяЗатрат = СтрокаТЧ.Номенклатура; 
			НС.СтатьяБюджета = СтрокаТЧ.СтатьяБюджета;
			Если НС.Цена = 0 Тогда				
				НС.Цена = СтрокаТЧ.ЦенаЗаЛитр;
			КонецЕсли; 		
			Если БратьОписание = "СБ" тогда
				НС.Описание = СтрокаТЧ.СтатьяБюджета.Наименование;
			ИначеЕсли БратьОписание = "НомНаим" тогда
				НС.Описание = строкатч.Номенклатура;
			ИначеЕсли БратьОписание = "Ком" тогда
				НС.Описание = РасчетнаяТаблицаИсх.СтатьяБюджета;
			Иначе 
				Если ТипЗнч(строкатч.Номенклатура) = Тип("Строка") Тогда
					НС.описание = строкатч.Номенклатура;
				Иначе
					НС.описание = строкатч.Номенклатура.Наименование;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ТабЧасть = форма.ОткрытьМодально();
		Если табчасть<>Неопределено тогда
			
			Для каждого строкаТЧ Из ТабЧасть Цикл
				НС = объект.РасчетнаяТаблица.Добавить();
				ЗаполнитьЗначенияСвойств(НС,СтрокаТЧ);
				
				Если строкаТЧ.СтатьяЗатрат = Неопределено И НС.Номенклатура.Пустая() Тогда
					Продолжить;	
				КонецЕсли;
								
				Если НС.НоменклатураГосЗакупа.Пустая() Тогда
					Если Не строкаТЧ.СтатьяЗатрат.Пустая() Тогда
						НС.НоменклатураГосЗакупа = строкаТЧ.СтатьяЗатрат.НоменклатураГЗ;
					КонецЕсли;
				КонецЕсли;
				НС.КодКПВЭД = КПВЭД(?(НС.Номенклатура.Пустая(), строкаТЧ.СтатьяЗатрат, НС.Номенклатура));
				ОбработатьОписаниеКПВЭД(НС, мМакетКодовСтрокКПВЭД);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьНДС(РасчетСуммыСНДС)
	
	Если РасчетСуммыСНДС Тогда
		Для Каждого Строка Из Объект.РасчетнаяТаблица Цикл
			
			Если Строка.ОбъемЗакупаВНатуральномВыражении > 0 Тогда 				
				Строка.СуммаСНДС = Строка.ОбъемЗакупаВНатуральномВыражении * Строка.ЦенаСНДС;
			Иначе
				Строка.СуммаСНДС = ОКР(Строка.КонтрольнаяСумма * 1.12,0,1);
			КонецЕсли;
								
		КонецЦикла;
	Иначе
		Для Каждого Строка Из Объект.РасчетнаяТаблица Цикл
			
			Строка.ЦенаСНДС = ОКР(Строка.Цена * 1.12,0,1);
					
		КонецЦикла;
	КонецЕсли;     	
	
КонецПроцедуры  

&НаКлиенте
Процедура РассчитатьСуммуСНДС(Команда)
	
	РассчитатьНДС(Истина);	
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьЦенуСНДС(Команда)
	
	РассчитатьНДС(Ложь);
		
КонецПроцедуры

&НаКлиенте
Процедура РасчетнаяТаблицаЦенаСНДСПриИзменении(Элемент)
	
	ТекСтрока = Элементы.РасчетнаяТаблица.ТекущиеДанные;
	
	Если ТекСтрока.ОбъемЗакупаВНатуральномВыражении > 0 Тогда 				
		ТекСтрока.СуммаСНДС = ТекСтрока.ОбъемЗакупаВНатуральномВыражении * ТекСтрока.ЦенаСНДС;
	КонецЕсли; 
	
КонецПроцедуры
