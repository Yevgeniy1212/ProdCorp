////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Признак ведения учета по спецификам
Перем ВедениеУчетаПоСпецификам Экспорт; // экспортируемая переменная 
// Признак ведения учета закупок в разрезе складов
Перем ВедениеУчетаЗакупокВРазрезеСкладов Экспорт; // экспортируемая переменная 
// Признак ведения учета учета исполнения заказов подразделений
Перем ВедениеУчетаИсполненияЗаказовПодразделений Экспорт; // экспортируемая переменная 


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
	
	// Функция формирует табличный документ с печатной формой ГодовойПлан,
	//
	// Возвращаемое значение:
	//  Табличный документ - печатная форма документа
	//
	Функция ПечатьГодовогоПлана()
		
		ВыводитьКоды    = Истина;
		Колонка         = "Артикул";
		ТекстКодАртикул = "Артикул";
		
		Если ВедениеУчетаПоСпецификам Тогда
			ОбластьШапки  = "ШапкаТаблицыСоСпецификой";
			ОбластьСтроки = "СтрокаСоСпецификой";
		Иначе
			ОбластьШапки  = "ШапкаТаблицы";
			ОбластьСтроки = "Строка";
		КонецЕсли;
		
		// запрос для реквизитов шапки 
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.Текст = "ВЫБРАТЬ
		               |	гз_ГодовойПлан.Организация,
		               |	гз_ГодовойПлан.Дата,
		               |	гз_ГодовойПлан.Номер,
		               |	гз_ГодовойПлан.Ответственный
		               |ИЗ
		               |	Документ.гз_ГодовойПлан КАК гз_ГодовойПлан
		               |ГДЕ
		               |	гз_ГодовойПлан.Ссылка = &Ссылка";	
		Док = Запрос.Выполнить().Выбрать();
		Док.Следующий();
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",      Ссылка);
		Запрос.УстановитьПараметр("ДатаДок",     Дата);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Товары", Перечисления.гз_ВидыПредметовЗакупки.Товар);
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	гз_ГодовойПланСоставЗаявкиТовары.НомерСтроки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Количество,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Номенклатура,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Сумма,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Характеристика,
		               |	гз_ГодовойПланСоставЗаявкиТовары.СпособЗакупки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Цена,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ПериодПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.РазмерАвансовогоПлатежа,
		               |	гз_ГодовойПланСоставЗаявкиТовары.МестоПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.МестоПроведенияЗакупок,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ДатаНачалаПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ДатаОкончанияПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ДатаНачалаЗакупок,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ДатаОкончанияЗакупок,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ИнициаторЗакупок,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ОрганизаторЗакупок
		               |ИЗ
		               |	Документ.гз_ГодовойПлан.СоставЗаявкиТовары КАК гз_ГодовойПланСоставЗаявкиТовары
		               |ГДЕ
		               |	гз_ГодовойПланСоставЗаявкиТовары.Ссылка = &Ссылка
					   |	И гз_ГодовойПланСоставЗаявкиТовары.ВидПредметаЗакупок = &Товары ";
		
		РезЗапросаТовары = Запрос.Выполнить().Выбрать();
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",      Ссылка);
		Запрос.УстановитьПараметр("ДатаДок",     Дата);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Товары", Перечисления.гз_ВидыПредметовЗакупки.Услуга);
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	гз_ГодовойПланСоставЗаявкиТовары.НомерСтроки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Количество,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Номенклатура,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Сумма,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Характеристика,
		               |	гз_ГодовойПланСоставЗаявкиТовары.СпособЗакупки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Цена,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ПериодПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.РазмерАвансовогоПлатежа,
		               |	гз_ГодовойПланСоставЗаявкиТовары.МестоПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.МестоПроведенияЗакупок,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ДатаНачалаПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ДатаОкончанияПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ДатаНачалаЗакупок,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ДатаОкончанияЗакупок,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ИнициаторЗакупок,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ОрганизаторЗакупок
		               |ИЗ
		               |	Документ.гз_ГодовойПлан.СоставЗаявкиТовары КАК гз_ГодовойПланСоставЗаявкиТовары
		               |ГДЕ
		               |	гз_ГодовойПланСоставЗаявкиТовары.Ссылка = &Ссылка
					   |	И гз_ГодовойПланСоставЗаявкиТовары.ВидПредметаЗакупок = &Товары ";
		
		РезЗапросаУслуги = Запрос.Выполнить().Выбрать();
			
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",      Ссылка);
		Запрос.УстановитьПараметр("ДатаДок",     Дата);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Товары", Перечисления.гз_ВидыПредметовЗакупки.Работа);
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	гз_ГодовойПланСоставЗаявкиТовары.НомерСтроки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Количество,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Номенклатура,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Сумма,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Характеристика,
		               |	гз_ГодовойПланСоставЗаявкиТовары.СпособЗакупки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Цена,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ПериодПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.РазмерАвансовогоПлатежа,
		               |	гз_ГодовойПланСоставЗаявкиТовары.МестоПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.МестоПроведенияЗакупок,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ДатаНачалаПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ДатаОкончанияПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ДатаНачалаЗакупок,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ДатаОкончанияЗакупок,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ИнициаторЗакупок,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ОрганизаторЗакупок
		               |ИЗ
		               |	Документ.гз_ГодовойПлан.СоставЗаявкиТовары КАК гз_ГодовойПланСоставЗаявкиТовары
		               |ГДЕ
		               |	гз_ГодовойПланСоставЗаявкиТовары.Ссылка = &Ссылка
					   |	И гз_ГодовойПланСоставЗаявкиТовары.ВидПредметаЗакупок = &Товары ";
		
		РезЗапросаРабота = Запрос.Выполнить().Выбрать();
		
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_гз_ЗаявкиНаПланированиеГосЗакупок";
		Макет       = ПолучитьМакет("ГодовойПлан");
		
		// Выводим заголовок 
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = "План закупок товаров, работ и услуг планируемых к приобретению "+ СокрЛП(Организация.Наименование)+" в "+Год+" году";
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим шапку 
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакетаСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаРаздел = Макет.ПолучитьОбласть("Раздел");
		
		ОбластьМакетаРаздел.параметры.ПредставлениеРаздела = "Товары";
		
		ТабДокумент.Вывести(ОбластьМакетаРаздел);
		
		// Вывести табличную часть
		
		НомПП=0;
		
		Пока РезЗапросаТовары.Следующий() Цикл
			
			НомПП=НомПП+1;
			
			ОбластьМакетаСтрока.Параметры.Заполнить(РезЗапросаТовары);
			
			ОбластьМакетаСтрока.Параметры.НомПП = НомПП;
			ОбластьМакетаСтрока.Параметры.КодКПВЭД = РезЗапросаТовары.Номенклатура.КодКПВЭД;
			ОбластьМакетаСтрока.Параметры.НаименованиеНаКаз = РезЗапросаТовары.Номенклатура.НаименованиеПолноеКЗ;
			ОбластьМакетаСтрока.Параметры.Наименование = РезЗапросаТовары.Номенклатура.НаименованиеПолное;
			ОбластьМакетаСтрока.Параметры.ЕдИзм = РезЗапросаТовары.Номенклатура.БазоваяЕдиницаИзмерения;
			ОбластьМакетаСтрока.Параметры.КодЕдИзм = РезЗапросаТовары.Номенклатура.БазоваяЕдиницаИзмерения.Код;
			ОбластьМакетаСтрока.Параметры.КодКАТО = РезЗапросаТовары.МестоПроведенияЗакупок.КодКАТО;
			ОбластьМакетаСтрока.Параметры.ГодПланаЗакупок = Год;
			ОбластьМакетаСтрока.Параметры.СрокПроведенияЗакупок = ПредставлениеПериода(НачалоДня(РезЗапросаТовары.ДатаНачалаЗакупок), КонецДня(РезЗапросаТовары.ДатаОкончанияЗакупок), "ФП");
			ОбластьМакетаСтрока.Параметры.СрокПоставки = ПредставлениеПериода(НачалоДня(РезЗапросаТовары.ДатаНачалаПоставки), КонецДня(РезЗапросаТовары.ДатаОкончанияПоставки), "ФП");
			
			ТабДокумент.Вывести(ОбластьМакетаСтрока);
			 
		КонецЦикла;
		
		ОбластьМакетаРаздел.параметры.ПредставлениеРаздела = "Услуги";
		
		ТабДокумент.Вывести(ОбластьМакетаРаздел);
		НомПП=0;
		
		Пока РезЗапросаУслуги.Следующий() Цикл
			
			НомПП=НомПП+1;
			
			ОбластьМакетаСтрока.Параметры.Заполнить(РезЗапросаУслуги);
			
			ОбластьМакетаСтрока.Параметры.НомПП = НомПП;
			ОбластьМакетаСтрока.Параметры.КодКПВЭД = РезЗапросаУслуги.Номенклатура.КодКПВЭД;
			ОбластьМакетаСтрока.Параметры.НаименованиеНаКаз = РезЗапросаУслуги.Номенклатура.НаименованиеПолноеКЗ;
			ОбластьМакетаСтрока.Параметры.Наименование = РезЗапросаУслуги.Номенклатура.НаименованиеПолное;
			ОбластьМакетаСтрока.Параметры.ЕдИзм = РезЗапросаУслуги.Номенклатура.БазоваяЕдиницаИзмерения;
			ОбластьМакетаСтрока.Параметры.КодЕдИзм = РезЗапросаУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код;
			ОбластьМакетаСтрока.Параметры.КодКАТО = РезЗапросаУслуги.МестоПроведенияЗакупок.КодКАТО;
			ОбластьМакетаСтрока.Параметры.ГодПланаЗакупок = Год;
			ОбластьМакетаСтрока.Параметры.СрокПроведенияЗакупок = ПредставлениеПериода(НачалоДня(РезЗапросаУслуги.ДатаНачалаЗакупок), КонецДня(РезЗапросаУслуги.ДатаОкончанияЗакупок), "ФП");
			ОбластьМакетаСтрока.Параметры.СрокПоставки = ПредставлениеПериода(НачалоДня(РезЗапросаУслуги.ДатаНачалаПоставки), КонецДня(РезЗапросаУслуги.ДатаОкончанияПоставки), "ФП");
			
			ТабДокумент.Вывести(ОбластьМакетаСтрока);
			 
		КонецЦикла;
		
		
		ОбластьМакетаРаздел.параметры.ПредставлениеРаздела = "Работы";
		
		ТабДокумент.Вывести(ОбластьМакетаРаздел);
		НомПП=0;
		
		Пока РезЗапросаРабота.Следующий() Цикл
			
			НомПП=НомПП+1;
			
			ОбластьМакетаСтрока.Параметры.Заполнить(РезЗапросаРабота);
			
			ОбластьМакетаСтрока.Параметры.НомПП = НомПП;
			ОбластьМакетаСтрока.Параметры.КодКПВЭД = РезЗапросаРабота.Номенклатура.КодКПВЭД;
			ОбластьМакетаСтрока.Параметры.НаименованиеНаКаз = РезЗапросаРабота.Номенклатура.НаименованиеПолноеКЗ;
			ОбластьМакетаСтрока.Параметры.Наименование = РезЗапросаРабота.Номенклатура.НаименованиеПолное;
			ОбластьМакетаСтрока.Параметры.ЕдИзм = РезЗапросаРабота.Номенклатура.БазоваяЕдиницаИзмерения;
			ОбластьМакетаСтрока.Параметры.КодЕдИзм = РезЗапросаРабота.Номенклатура.БазоваяЕдиницаИзмерения.Код;
			ОбластьМакетаСтрока.Параметры.КодКАТО = РезЗапросаРабота.МестоПроведенияЗакупок.КодКАТО;
			ОбластьМакетаСтрока.Параметры.ГодПланаЗакупок = Год;
			ОбластьМакетаСтрока.Параметры.СрокПроведенияЗакупок = ПредставлениеПериода(НачалоДня(РезЗапросаРабота.ДатаНачалаЗакупок), КонецДня(РезЗапросаРабота.ДатаОкончанияЗакупок), "ФП");
			ОбластьМакетаСтрока.Параметры.СрокПоставки = ПредставлениеПериода(НачалоДня(РезЗапросаРабота.ДатаНачалаПоставки), КонецДня(РезЗапросаРабота.ДатаОкончанияПоставки), "ФП");
			
			ТабДокумент.Вывести(ОбластьМакетаСтрока);
			 
		КонецЦикла;
		
		// Вывести Итого
		//ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		//ОбластьМакета.Параметры.Итог = гз_ОбщегоНазначения.мФорматСумм(Сумма);
		//ТабДокумент.Вывести(ОбластьМакета);
		//
		//ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		//ОбластьМакета.Параметры.Ответственный = СокрЛП(Док.Ответственный.Наименование);
		//ТабДокумент.Вывести(ОбластьМакета);
		
		Возврат ТабДокумент;
		
	КонецФункции // ПечатьГодовогоПлана()
	
	// Функция формирует табличный документ с печатной формой Корректировка,
	//
	// Возвращаемое значение:
	//  Табличный документ - печатная форма документа
	//
	Функция ПечатьКорректировки()
		
			ВыводитьКоды    = Истина;
			Колонка         = "Код";
			ТекстКодАртикул = "Код";
			КодОС			= Истина;

		Если ВедениеУчетаПоСпецификам Тогда
			ОбластьШапки  = "ШапкаТаблицыСоСпецификой";
			ОбластьСтроки = "СтрокаСоСпецификой";
		Иначе
			ОбластьШапки  = "ШапкаТаблицы";
			ОбластьСтроки = "Строка";
		КонецЕсли;
		
		// запрос для реквизитов шапки 
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.Текст = "ВЫБРАТЬ
		               |	гз_ГодовойПлан.Организация,
		               |	гз_ГодовойПлан.Дата,
		               |	гз_ГодовойПлан.Номер,
		               |	гз_ГодовойПлан.Ответственный
		               |ИЗ
		               |	Документ.гз_ГодовойПлан КАК гз_ГодовойПлан
		               |ГДЕ
		               |	гз_ГодовойПлан.Ссылка = &Ссылка";	
		Док = Запрос.Выполнить().Выбрать();
		Док.Следующий();
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",      Ссылка);
		Запрос.УстановитьПараметр("ДатаДок",     Дата);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	гз_ГодовойПланСоставЗаявкиТовары.НомерСтроки КАК НомерСтроки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Количество,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Номенклатура,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Сумма,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Характеристика,
		               |	гз_ГодовойПланСоставЗаявкиТовары.СпособЗакупки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.Цена,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ПериодПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.РазмерАвансовогоПлатежа,
		               |	гз_ГодовойПланСоставЗаявкиТовары.МестоПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ДатаОкончанияПоставки,
		               |	гз_ГодовойПланСоставЗаявкиТовары.ВидКорректировки
		               |ИЗ
		               |	Документ.гз_ГодовойПлан.СоставЗаявкиТовары КАК гз_ГодовойПланСоставЗаявкиТовары
		               |ГДЕ
		               |	гз_ГодовойПланСоставЗаявкиТовары.Ссылка = &Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	НомерСтроки";
		
			РезЗапросаСписка = Запрос.Выполнить().Выбрать();
		
			РезультатЗапросаПоНоменклатуре = Запрос.Выполнить().Выгрузить();
			РезультатЗапросаПоНоменклатуре.Свернуть("Номенклатура");
			МассивНоменклатуры = РезультатЗапросаПоНоменклатуре.ВыгрузитьКолонку("Номенклатура");
			
			ЗапросВидаНоменклатуры = Новый Запрос;
			ЗапросВидаНоменклатуры.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
			ЗапросВидаНоменклатуры.Текст =		 "ВЫБРАТЬ
		              		 |	гз_СвойстваНоменклатуры.Номенклатура
		              		 |ИЗ
		              		 |	РегистрСведений.гз_СвойстваНоменклатуры КАК гз_СвойстваНоменклатуры
		              		 |ГДЕ
		              		 |	гз_СвойстваНоменклатуры.Номенклатура В(&МассивНоменклатуры)
		              		 |	И гз_СвойстваНоменклатуры.Работа";
			Результат = ЗапросВидаНоменклатуры.Выполнить().Выгрузить();
			
		Если ВедениеУчетаПоСпецификам Тогда 
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
			Запрос.Текст =		 "ВЫБРАТЬ
			              		 |	гз_СвойстваНоменклатуры.Номенклатура,
			              		 |	гз_СвойстваНоменклатуры.Специфика
			              		 |ИЗ
			              		 |	РегистрСведений.гз_СвойстваНоменклатуры КАК гз_СвойстваНоменклатуры
			              		 |ГДЕ
			              		 |	гз_СвойстваНоменклатуры.Номенклатура В(&МассивНоменклатуры)";
			РезультатЗапросаПоСпецификеНоменклатуры = Запрос.Выполнить().Выгрузить();
		КонецЕсли;
			
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_гз_ЗаявкиНаПланированиеГосЗакупок";
		Макет       = ПолучитьМакет("Корректировка");
		
		// Выводим заголовок 
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = гз_РаботаСДиалогами.мСформироватьЗаголовокДокумента(ЭтотОбъект, "Корректировка годового плана закупок товаров, работ и услуг", глСписокПрефиксовУзлов);
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим шапку 
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Организация = Организация;
		ОбластьМакета.Параметры.Год = Год;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Вывести табличную часть
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
		Сумма = 0;	
		НомСтр = 1;
		ТабДокумент.НачатьАвтогруппировкуСтрок();
		Пока РезЗапросаСписка.Следующий() Цикл
			
				ОбластьМакета.Параметры.Заполнить(РезЗапросаСписка);
				
				ОбластьМакета.Параметры.Заполнить(РезЗапросаСписка);
				ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(РезЗапросаСписка.Номенклатура.Наименование);
				ОбластьМакета.Параметры.Ед = РезЗапросаСписка.Номенклатура.БазоваяЕдиницаИзмерения;
				
				Если Результат.Найти(РезЗапросаСписка.Номенклатура, "Номенклатура")<>Неопределено Тогда 
					ОбластьМакета.Параметры.ВидНоменклатуры = Перечисления.гз_ВидыПредметовЗакупки.Работа			  
				ИначеЕсли РезЗапросаСписка.Номенклатура.Услуга Тогда  
					ОбластьМакета.Параметры.ВидНоменклатуры = Перечисления.гз_ВидыПредметовЗакупки.Услуга			 
				Иначе 
					ОбластьМакета.Параметры.ВидНоменклатуры = Перечисления.гз_ВидыПредметовЗакупки.Товар			 
				КонецЕсли;
				
				Если ВедениеУчетаПоСпецификам Тогда 
					СтрокаСпецифики = РезультатЗапросаПоСпецификеНоменклатуры.Найти(РезЗапросаСписка.Номенклатура, "Номенклатура");
					Если СтрокаСпецифики<>Неопределено Тогда
						ОбластьМакета.Параметры.Специфика = СтрокаСпецифики.Специфика.Ссылка;
					КонецЕсли;
				КонецЕсли;
								
				Если ВыводитьКоды И гз_ОбщегоНазначения.ПолучитьРежимРаботы()<>"БГУ"  Тогда
					ОбластьМакета.Параметры.КодАртикул = РезЗапросаСписка.Номенклатура.КодКПВЭД;
				КонецЕсли;   
				
				ОбластьМакета.Параметры.НомерСтроки = НомСтр;
				НомСтр = НомСтр + 1;
				ТабДокумент.Вывести(ОбластьМакета, 0);
				Сумма     = Сумма + РезЗапросаСписка.Сумма;
		КонецЦикла;
		
		ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Итог = гз_ОбщегоНазначения.мФорматСумм(Сумма);
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Ответственный = СокрЛП(Док.Ответственный.Наименование);
		ТабДокумент.Вывести(ОбластьМакета);
		
		Возврат ТабДокумент;
		
	КонецФункции // ПечатьКорректировки()
	
	// Функция формирует табличный документ с печатной формой ГодовойПланСУчетомКорректировок,
	//
	// Возвращаемое значение:
	//  Табличный документ - печатная форма документа
	//
	Функция ПечатьГодовогоПланаСУчетомКорректировки()
		
			ВыводитьКоды    = Истина;
			Колонка         = "Код";
			ТекстКодАртикул = "Код";
			КодОС			= Истина;
		
		Если ВедениеУчетаПоСпецификам Тогда
			ОбластьШапки  = "ШапкаТаблицыСоСпецификой";
			ОбластьСтроки = "СтрокаСоСпецификой";
		Иначе
			ОбластьШапки  = "ШапкаТаблицы";
			ОбластьСтроки = "Строка";
		КонецЕсли;
		
		// запрос для реквизитов шапки 
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.Текст = "ВЫБРАТЬ
		               |	гз_ГодовойПлан.Организация,
		               |	гз_ГодовойПлан.Дата,
		               |	гз_ГодовойПлан.Номер,
		               |	гз_ГодовойПлан.Ответственный
		               |ИЗ
		               |	Документ.гз_ГодовойПлан КАК гз_ГодовойПлан
		               |ГДЕ
		               |	гз_ГодовойПлан.Ссылка = &Ссылка";	
		Док = Запрос.Выполнить().Выбрать();
		Док.Следующий();
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",      Ссылка);
		Запрос.УстановитьПараметр("ДатаДок",     Дата);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Запрос=новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	ВложенныйЗапрос.Номенклатура,
		             |	ВложенныйЗапрос.СпособЗакупки,
		             |	ВложенныйЗапрос.ПериодПоставки,
		             |	ВложенныйЗапрос.МестоПоставки,
		             |	СУММА(ВложенныйЗапрос.КоличествоОборот) КАК Количество,
		             |	СУММА(ВложенныйЗапрос.СуммаОборот) КАК Сумма
		             |ИЗ
		             |	(ВЫБРАТЬ
		             |		ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		             |		ВложенныйЗапрос.СпособЗакупки КАК СпособЗакупки,
		             |		ВложенныйЗапрос.ПериодПоставки КАК ПериодПоставки,
		             |		ВложенныйЗапрос.МестоПоставки КАК МестоПоставки,
		             |		СУММА(ВложенныйЗапрос.КоличествоОборот) КАК КоличествоОборот,
		             |		СУММА(ВложенныйЗапрос.СуммаОборот) КАК СуммаОборот
		             |	ИЗ
		             |		(ВЫБРАТЬ
		             |			гз_ГодовойПланЗакупокОбороты.Номенклатура КАК Номенклатура,
		             |			гз_ГодовойПланЗакупокОбороты.СпособЗакупки КАК СпособЗакупки,
		             |			гз_ГодовойПланЗакупокОбороты.ПериодПоставки КАК ПериодПоставки,
		             |			гз_ГодовойПланЗакупокОбороты.МестоПоставки КАК МестоПоставки,
		             |			СУММА(гз_ГодовойПланЗакупокОбороты.КоличествоОборот) КАК КоличествоОборот,
		             |			СУММА(гз_ГодовойПланЗакупокОбороты.СуммаОборот) КАК СуммаОборот
		             |		ИЗ
		             |			РегистрНакопления.гз_ГодовойПланЗакупок.Обороты(
		             |					,
		             |					&ПериодДокумента,
		             |					Регистратор,
		             |					Организация = &Организация
		             |						И Год = &Год) КАК гз_ГодовойПланЗакупокОбороты
		             |		ГДЕ
		             |			гз_ГодовойПланЗакупокОбороты.Регистратор <> &Ссылка
		             |		
		             |		СГРУППИРОВАТЬ ПО
		             |			гз_ГодовойПланЗакупокОбороты.Номенклатура,
		             |			гз_ГодовойПланЗакупокОбороты.СпособЗакупки,
		             |			гз_ГодовойПланЗакупокОбороты.ПериодПоставки,
		             |			гз_ГодовойПланЗакупокОбороты.МестоПоставки
		             |		
		             |		ОБЪЕДИНИТЬ ВСЕ
		             |		
		             |		ВЫБРАТЬ
		             |			гз_ГодовойПланСоставЗаявкиТовары.Номенклатура,
		             |			гз_ГодовойПланСоставЗаявкиТовары.СпособЗакупки,
		             |			гз_ГодовойПланСоставЗаявкиТовары.ПериодПоставки,
		             |			гз_ГодовойПланСоставЗаявкиТовары.МестоПоставки,
		             |			-гз_ГодовойПланСоставЗаявкиТовары.Количество,
		             |			-гз_ГодовойПланСоставЗаявкиТовары.Сумма
		             |		ИЗ
		             |			Документ.гз_ГодовойПлан.СоставЗаявкиТовары КАК гз_ГодовойПланСоставЗаявкиТовары
		             |		ГДЕ
		             |			гз_ГодовойПланСоставЗаявкиТовары.Ссылка = &Ссылка
		             |			И гз_ГодовойПланСоставЗаявкиТовары.ВидКорректировки = &Удаление
		             |		
		             |		ОБЪЕДИНИТЬ ВСЕ
		             |		
		             |		ВЫБРАТЬ
		             |			гз_ГодовойПланСоставЗаявкиТовары.Номенклатура,
		             |			гз_ГодовойПланСоставЗаявкиТовары.СпособЗакупки,
		             |			гз_ГодовойПланСоставЗаявкиТовары.ПериодПоставки,
		             |			гз_ГодовойПланСоставЗаявкиТовары.МестоПоставки,
		             |			гз_ГодовойПланСоставЗаявкиТовары.Количество,
		             |			гз_ГодовойПланСоставЗаявкиТовары.Сумма
		             |		ИЗ
		             |			Документ.гз_ГодовойПлан.СоставЗаявкиТовары КАК гз_ГодовойПланСоставЗаявкиТовары
		             |		ГДЕ
		             |			гз_ГодовойПланСоставЗаявкиТовары.Ссылка = &Ссылка
		             |			И (гз_ГодовойПланСоставЗаявкиТовары.ВидКорректировки = &Добавление
		             |					ИЛИ гз_ГодовойПланСоставЗаявкиТовары.ВидКорректировки = &Замена)) КАК ВложенныйЗапрос
		             |	
		             |	СГРУППИРОВАТЬ ПО
		             |		ВложенныйЗапрос.Номенклатура,
		             |		ВложенныйЗапрос.ПериодПоставки,
		             |		ВложенныйЗапрос.СпособЗакупки,
		             |		ВложенныйЗапрос.МестоПоставки) КАК ВложенныйЗапрос
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	ВложенныйЗапрос.Номенклатура,
		             |	ВложенныйЗапрос.СпособЗакупки,
		             |	ВложенныйЗапрос.ПериодПоставки,
		             |	ВложенныйЗапрос.МестоПоставки";
		запрос.УстановитьПараметр("Год",Год);
		запрос.УстановитьПараметр("Добавление",Перечисления.гз_ВидыКорректировокГодовогоПлана.Добавление);
		запрос.УстановитьПараметр("Замена",Перечисления.гз_ВидыКорректировокГодовогоПлана.Замена);
		запрос.УстановитьПараметр("Организация",Организация);
		запрос.УстановитьПараметр("Ссылка",Ссылка);
		запрос.УстановитьПараметр("ПериодДокумента",Дата);
		запрос.УстановитьПараметр("Удаление",Перечисления.гз_ВидыКорректировокГодовогоПлана.Удаление);
		РезЗапросаСписка = Запрос.Выполнить().Выбрать();
		
			РезультатЗапросаПоНоменклатуре = Запрос.Выполнить().Выгрузить();
			РезультатЗапросаПоНоменклатуре.Свернуть("Номенклатура");
			МассивНоменклатуры = РезультатЗапросаПоНоменклатуре.ВыгрузитьКолонку("Номенклатура");
			
			ЗапросВидаНоменклатуры = Новый Запрос;
			ЗапросВидаНоменклатуры.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
			ЗапросВидаНоменклатуры.Текст =		 "ВЫБРАТЬ
		              		 |	гз_СвойстваНоменклатуры.Номенклатура
		              		 |ИЗ
		              		 |	РегистрСведений.гз_СвойстваНоменклатуры КАК гз_СвойстваНоменклатуры
		              		 |ГДЕ
		              		 |	гз_СвойстваНоменклатуры.Номенклатура В(&МассивНоменклатуры)
		              		 |	И гз_СвойстваНоменклатуры.Работа";
			Результат = ЗапросВидаНоменклатуры.Выполнить().Выгрузить();
			
			Если ВедениеУчетаПоСпецификам Тогда
			
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
				Запрос.Текст =		 "ВЫБРАТЬ
				              		 |	гз_СвойстваНоменклатуры.Номенклатура,
				              		 |	гз_СвойстваНоменклатуры.Специфика
				              		 |ИЗ
				              		 |	РегистрСведений.гз_СвойстваНоменклатуры КАК гз_СвойстваНоменклатуры
				              		 |ГДЕ
				              		 |	гз_СвойстваНоменклатуры.Номенклатура В(&МассивНоменклатуры)";
				РезультатЗапросаПоСпецификеНоменклатуры = Запрос.Выполнить().Выгрузить();
				
			КонецЕсли;
			
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_гз_ЗаявкиНаПланированиеГосЗакупок";
		Макет       = ПолучитьМакет("ГодовойПланСУчетомКорректировок");
		
		// Выводим заголовок 
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = "Годовой план государственных закупок товаров, работ и услуг на "+Формат(Год,"ДФ=гггг")+" год с учетом корректировок";
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим шапку 
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Организация = Организация;
		ОбластьМакета.Параметры.Год = Год;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Вывести табличную часть
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
		Сумма = 0;	
		НомСтр = 1;
		ТабДокумент.НачатьАвтогруппировкуСтрок();
		Пока РезЗапросаСписка.Следующий() Цикл
			
				ОбластьМакета.Параметры.Заполнить(РезЗапросаСписка);
				Если ОбластьМакета.Параметры.Количество <> 0 Тогда 
					ОбластьМакета.Параметры.Цена = ОбластьМакета.Параметры.Сумма / ОбластьМакета.Параметры.Количество;
				КонецЕсли;
				ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(РезЗапросаСписка.Номенклатура.Наименование);
				ОбластьМакета.Параметры.Ед = РезЗапросаСписка.Номенклатура.БазоваяЕдиницаИзмерения;
				
				Если Результат.Найти(РезЗапросаСписка.Номенклатура, "Номенклатура")<>Неопределено Тогда 
					ОбластьМакета.Параметры.ВидНоменклатуры = Перечисления.гз_ВидыПредметовЗакупки.Работа			  
				ИначеЕсли РезЗапросаСписка.Номенклатура.Услуга Тогда  
					ОбластьМакета.Параметры.ВидНоменклатуры = Перечисления.гз_ВидыПредметовЗакупки.Услуга			 
				Иначе 
					ОбластьМакета.Параметры.ВидНоменклатуры = Перечисления.гз_ВидыПредметовЗакупки.Товар			 
				КонецЕсли;
				
			Если ВедениеУчетаПоСпецификам Тогда
				
				СтрокаСпецифики = РезультатЗапросаПоСпецификеНоменклатуры.Найти(РезЗапросаСписка.Номенклатура, "Номенклатура");
				Если СтрокаСпецифики<>Неопределено Тогда
					ОбластьМакета.Параметры.Специфика = СтрокаСпецифики.Специфика.Ссылка;
				КонецЕсли;
				
				Если ВыводитьКоды И гз_ОбщегоНазначения.ПолучитьРежимРаботы()<>"БГУ"  Тогда
					ОбластьМакета.Параметры.КодАртикул = РезЗапросаСписка.Номенклатура.КодКПВЭД;
				КонецЕсли;   
				
			КонецЕсли;
				
				ОбластьМакета.Параметры.НомерСтроки = НомСтр;
				НомСтр = НомСтр + 1;
				ТабДокумент.Вывести(ОбластьМакета, 0);
				Сумма     = Сумма + РезЗапросаСписка.Сумма;
		КонецЦикла;
		
		ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Итог = гз_ОбщегоНазначения.мФорматСумм(Сумма);
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Ответственный = СокрЛП(Док.Ответственный.Наименование);
		ТабДокумент.Вывести(ОбластьМакета);
		
		Возврат ТабДокумент;
		
	КонецФункции // ПечатьГодовогоПланаСУчетомКорректировки()
	
	// Процедура осуществляет печать документа. Можно направить печать на 
	// экран или принтер, а также распечатать необходимое количество копий.
	//
	//  Название макета печати передается в качестве параметра,
	// по переданному названию находим имя макета в соответствии.
	//
	// Параметры:
	//  НазваниеМакета - строка, название макета.
	//
	Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
		
		Если ЭтоНовый() Тогда
			Предупреждение("Документ можно распечатать только после его записи");
			Возврат;
		ИначеЕсли Не гз_УправлениеПользователямиБК.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
			Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
			Возврат;
		КонецЕсли;
		
		Если Не гз_РаботаСДиалогами.мПроверитьМодифицированность(ЭтотОбъект) Тогда
			Возврат;
		КонецЕсли;
		
		Если ИмяМакета = "ГодовойПлан" Тогда
			
			ТабДокумент = ПечатьГодовогоПлана();
			
		ИначеЕсли ИмяМакета = "Корректировка" Тогда
			
			ТабДокумент = ПечатьКорректировки();
	
		ИначеЕсли ИмяМакета = "ГодовойПланСУчетомКорректировок" Тогда
			
			ТабДокумент = ПечатьГодовогоПланаСУчетомКорректировки();
			
		ИначеЕсли ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда
			
			ТабДокумент = гз_РаботаСДиалогами.мНапечататьВнешнююФорму(Ссылка, ИмяМакета);
			
			Если ТабДокумент = Неопределено Тогда
				Возврат
			КонецЕсли;		
			
		КонецЕсли;
		
		гз_РаботаСДиалогами.мНапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, гз_РаботаСДиалогами.мСформироватьЗаголовокДокумента(ЭтотОбъект, "Годовой план государственных закупок товаров, работ и услуг"));
		
	КонецПроцедуры // Печать()
	
#КонецЕсли

// Функция возвращает таблицу разниц между годовым палном и планами закупок подразделения
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьРазницуПоГодовомуПлануИПланамЗакупок() Экспорт 

	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	гз_ГодовойПланСоставЗаявкиТовары.Номенклатура КАК Номенклатура,
	                |	ВЫБОР
	                |		КОГДА гз_ГодовойПланСоставЗаявкиТовары.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.гз_ВидыКорректировокГодовогоПлана.Удаление)
	                |			ТОГДА -гз_ГодовойПланСоставЗаявкиТовары.Количество
	                |		ИНАЧЕ гз_ГодовойПланСоставЗаявкиТовары.Количество
	                |	КОНЕЦ КАК Количество,
	                |	ВЫБОР
	                |		КОГДА гз_ГодовойПланСоставЗаявкиТовары.МестоПоставки = ЗНАЧЕНИЕ(Справочник.гз_местаПоставки.пустаяСсылка)
	                |			ТОГДА гз_ГодовойПланСоставЗаявкиТовары.Ссылка.МестоПоставки
	                |		ИНАЧЕ гз_ГодовойПланСоставЗаявкиТовары.МестоПоставки
	                |	КОНЕЦ КАК МестоПоставки,
	                |	гз_ГодовойПланСоставЗаявкиТовары.ПериодПоставки КАК ПериодПоставки
	                |ПОМЕСТИТЬ ВТ_Обороты_ГП
	                |ИЗ
	                |	Документ.гз_ГодовойПлан.СоставЗаявкиТовары КАК гз_ГодовойПланСоставЗаявкиТовары
	                |ГДЕ
	                |	гз_ГодовойПланСоставЗаявкиТовары.Ссылка = &Ссылка
	                |
	                |ОБЪЕДИНИТЬ ВСЕ
	                |
	                |ВЫБРАТЬ
	                |	гз_ГодовойПланЗакупокОбороты.Номенклатура,
	                |	гз_ГодовойПланЗакупокОбороты.КоличествоОборот,
	                |	гз_ГодовойПланЗакупокОбороты.МестоПоставки,
	                |	гз_ГодовойПланЗакупокОбороты.ПериодПоставки
	                |ИЗ
	                |	РегистрНакопления.гз_ГодовойПланЗакупок.Обороты(
	                |			,
	                |			,
	                |			Регистратор,
	                |			Организация = &Организация
	                |				И ВидПланаЗакупок = &ВидПланаЗакупок
	                |				И Год = &Год) КАК гз_ГодовойПланЗакупокОбороты
	                |ГДЕ
	                |	гз_ГодовойПланЗакупокОбороты.Регистратор <> &Ссылка
	                |
	                |ИНДЕКСИРОВАТЬ ПО
	                |	Номенклатура,
	                |	МестоПоставки,
	                |	ПериодПоставки
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_Обороты_ГП.Номенклатура,
	                |	СУММА(ВТ_Обороты_ГП.Количество) КАК Количество,
	                |	ВТ_Обороты_ГП.МестоПоставки,
	                |	ВТ_Обороты_ГП.ПериодПоставки
	                |ПОМЕСТИТЬ ОборотыГП
	                |ИЗ
	                |	ВТ_Обороты_ГП КАК ВТ_Обороты_ГП
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВТ_Обороты_ГП.Номенклатура,
	                |	ВТ_Обороты_ГП.ПериодПоставки,
	                |	ВТ_Обороты_ГП.МестоПоставки
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	гз_ПланыЗакупокОбороты.Номенклатура КАК Номенклатура,
	                |	гз_ПланыЗакупокОбороты.КоличествоОборот КАК Количество,
	                |	гз_ПланыЗакупокОбороты.МестоПоставки КАК МестоПоставки,
	                |	гз_ПланыЗакупокОбороты.ПериодПоставки КАК ПериодПоставки
	                |ПОМЕСТИТЬ ВТ_Обороты_ПЗП
	                |ИЗ
	                |	РегистрНакопления.гз_ПланыЗакупок.Обороты(
	                |			,
	                |			,
	                |			,
	                |			Организация = &Организация
	                |				И ВидПланаЗакупок = &ВидПланаЗакупок
	                |				И Год = &Год) КАК гз_ПланыЗакупокОбороты
	                |
	                |ИНДЕКСИРОВАТЬ ПО
	                |	Номенклатура,
	                |	МестоПоставки,
	                |	ПериодПоставки
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ЕСТЬNULL(ВТ_Обороты_ПЗП.Номенклатура, ОборотыГП.Номенклатура) КАК Номенклатура,
	                |	ЕСТЬNULL(ОборотыГП.МестоПоставки, ВТ_Обороты_ПЗП.МестоПоставки) КАК МестоПоставки,
	                |	ЕСТЬNULL(ВТ_Обороты_ПЗП.ПериодПоставки, ОборотыГП.ПериодПоставки) КАК ПериодПоставки,
	                |	ЕСТЬNULL(ОборотыГП.Количество, 0) - ЕСТЬNULL(ВТ_Обороты_ПЗП.Количество, 0) КАК Количество
	                |ИЗ
	                |	ВТ_Обороты_ПЗП КАК ВТ_Обороты_ПЗП
	                |		ПОЛНОЕ СОЕДИНЕНИЕ ОборотыГП КАК ОборотыГП
	                |		ПО ВТ_Обороты_ПЗП.Номенклатура = ОборотыГП.Номенклатура
	                |			И ВТ_Обороты_ПЗП.МестоПоставки = ОборотыГП.МестоПоставки
	                |			И ВТ_Обороты_ПЗП.ПериодПоставки = ОборотыГП.ПериодПоставки
	                |ГДЕ
	                |	ЕСТЬNULL(ВТ_Обороты_ПЗП.Количество, 0) <> ЕСТЬNULL(ОборотыГП.Количество, 0)";
	 Запрос.УстановитьПараметр("Ссылка"		,Ссылка);
	 Запрос.УстановитьПараметр("Год"		,Год);
	 Запрос.УстановитьПараметр("Организация",Организация);
	 Запрос.УстановитьПараметр("ВидПланаЗакупок"	,ВидПланаЗакупок);
	 
	 Возврат Запрос.Выполнить().Выгрузить();

 КонецФункции
 
// Функция возвращает таблицу разниц между годовым палном и планами закупок подразделения с учетом корректировок
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьРазницуПоГодовомуПлануИПланамЗакупокСУчетомКорректировок() 

	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	гз_ГодовойПланСоставЗаявкиТовары.Номенклатура КАК Номенклатура,
	                |	ВЫБОР
	                |		КОГДА гз_ГодовойПланСоставЗаявкиТовары.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.гз_ВидыКорректировокГодовогоПлана.Удаление)
	                |			ТОГДА -гз_ГодовойПланСоставЗаявкиТовары.Количество
	                |		ИНАЧЕ гз_ГодовойПланСоставЗаявкиТовары.Количество
	                |	КОНЕЦ КАК Количество,
	                |	ВЫБОР
	                |		КОГДА гз_ГодовойПланСоставЗаявкиТовары.МестоПоставки = ЗНАЧЕНИЕ(Справочник.гз_местаПоставки.пустаяСсылка)
	                |			ТОГДА гз_ГодовойПланСоставЗаявкиТовары.Ссылка.МестоПоставки
	                |		ИНАЧЕ гз_ГодовойПланСоставЗаявкиТовары.МестоПоставки
	                |	КОНЕЦ КАК МестоПоставки,
	                |	гз_ГодовойПланСоставЗаявкиТовары.ПериодПоставки КАК ПериодПоставки
	                |ПОМЕСТИТЬ ВТ_Обороты_ГП
	                |ИЗ
	                |	Документ.гз_ГодовойПлан.СоставЗаявкиТовары КАК гз_ГодовойПланСоставЗаявкиТовары
	                |ГДЕ
	                |	гз_ГодовойПланСоставЗаявкиТовары.Ссылка = &Ссылка
	                |
	                |ОБЪЕДИНИТЬ ВСЕ
	                |
	                |ВЫБРАТЬ
	                |	гз_ГодовойПланЗакупокОбороты.Номенклатура,
	                |	гз_ГодовойПланЗакупокОбороты.КоличествоОборот,
	                |	гз_ГодовойПланЗакупокОбороты.МестоПоставки,
	                |	гз_ГодовойПланЗакупокОбороты.ПериодПоставки
	                |ИЗ
	                |	РегистрНакопления.гз_ГодовойПланЗакупок.Обороты(
	                |			,
	                |			,
	                |			Регистратор,
	                |			Организация = &Организация
	                |				И ВидПланаЗакупок = &ВидПланаЗакупок
	                |				И Год = &Год) КАК гз_ГодовойПланЗакупокОбороты
	                |ГДЕ
	                |	гз_ГодовойПланЗакупокОбороты.Регистратор <> &Ссылка
	                |
	                |ОБЪЕДИНИТЬ ВСЕ
	                |
	                |ВЫБРАТЬ
	                |	гз_ГодовойПланКорректировкаПлановЗакупок.Номенклатура,
	                |	-гз_ГодовойПланКорректировкаПлановЗакупок.Количество,
	                |	гз_ГодовойПланКорректировкаПлановЗакупок.МестоПоставки,
	                |	гз_ГодовойПланКорректировкаПлановЗакупок.ПериодПоставки
	                |ИЗ
	                |	Документ.гз_ГодовойПлан.КорректировкаПлановЗакупок КАК гз_ГодовойПланКорректировкаПлановЗакупок
	                |ГДЕ
	                |	гз_ГодовойПланКорректировкаПлановЗакупок.Ссылка = &Ссылка
	                |
	                |ИНДЕКСИРОВАТЬ ПО
	                |	Номенклатура,
	                |	МестоПоставки,
	                |	ПериодПоставки
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ_Обороты_ГП.Номенклатура,
	                |	СУММА(ВТ_Обороты_ГП.Количество) КАК Количество,
	                |	ВТ_Обороты_ГП.МестоПоставки,
	                |	ВТ_Обороты_ГП.ПериодПоставки
	                |ПОМЕСТИТЬ ОборотыГП
	                |ИЗ
	                |	ВТ_Обороты_ГП КАК ВТ_Обороты_ГП
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВТ_Обороты_ГП.Номенклатура,
	                |	ВТ_Обороты_ГП.ПериодПоставки,
	                |	ВТ_Обороты_ГП.МестоПоставки
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	гз_ПланыЗакупокОбороты.Номенклатура КАК Номенклатура,
	                |	гз_ПланыЗакупокОбороты.КоличествоОборот КАК Количество,
	                |	гз_ПланыЗакупокОбороты.МестоПоставки КАК МестоПоставки,
	                |	гз_ПланыЗакупокОбороты.ПериодПоставки КАК ПериодПоставки
	                |ПОМЕСТИТЬ ВТ_Обороты_ПЗП
	                |ИЗ
	                |	РегистрНакопления.гз_ПланыЗакупок.Обороты(
	                |			,
	                |			,
	                |			,
	                |			Организация = &Организация
	                |				И ВидПланаЗакупок = &ВидПланаЗакупок
	                |				И Год = &Год) КАК гз_ПланыЗакупокОбороты
	                |
	                |ИНДЕКСИРОВАТЬ ПО
	                |	Номенклатура,
	                |	МестоПоставки,
	                |	ПериодПоставки
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ЕСТЬNULL(ВТ_Обороты_ПЗП.Номенклатура, ОборотыГП.Номенклатура) КАК Номенклатура,
	                |	ЕСТЬNULL(ОборотыГП.МестоПоставки, ВТ_Обороты_ПЗП.МестоПоставки) КАК МестоПоставки,
	                |	ЕСТЬNULL(ВТ_Обороты_ПЗП.ПериодПоставки, ОборотыГП.ПериодПоставки) КАК ПериодПоставки,
	                |	ЕСТЬNULL(ОборотыГП.Количество, 0) - ЕСТЬNULL(ВТ_Обороты_ПЗП.Количество, 0) КАК Количество
	                |ИЗ
	                |	ВТ_Обороты_ПЗП КАК ВТ_Обороты_ПЗП
	                |		ПОЛНОЕ СОЕДИНЕНИЕ ОборотыГП КАК ОборотыГП
	                |		ПО ВТ_Обороты_ПЗП.Номенклатура = ОборотыГП.Номенклатура
	                |			И ВТ_Обороты_ПЗП.МестоПоставки = ОборотыГП.МестоПоставки
	                |			И ВТ_Обороты_ПЗП.ПериодПоставки = ОборотыГП.ПериодПоставки
	                |ГДЕ
	                |	ЕСТЬNULL(ВТ_Обороты_ПЗП.Количество, 0) <> ЕСТЬNULL(ОборотыГП.Количество, 0)
	                |ИТОГИ
	                |	СУММА(Количество)
	                |ПО
	                |	Номенклатура";
	 Запрос.УстановитьПараметр("Ссылка"		,Ссылка);
	 Запрос.УстановитьПараметр("Год"		,Год);
	 Запрос.УстановитьПараметр("Организация",Организация);
	 Запрос.УстановитьПараметр("ВидПланаЗакупок"	,ВидПланаЗакупок);
	 
	 Возврат Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	 
КонецФункции

// Функция возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = Новый Структура;
	
	Если ВидОперации = Перечисления.гз_ВидыОперацийДокументовПланированияЗакупок.Планирование Тогда 
		СтруктураПечатныхФорм.Вставить("ГодовойПлан","Годовой план");
	ИначеЕсли ВидОперации = Перечисления.гз_ВидыОперацийДокументовПланированияЗакупок.Корректировка Тогда 
		СтруктураПечатныхФорм.Вставить("Корректировка","Корректировка");
		СтруктураПечатныхФорм.Вставить("ГодовойПланСУчетомКорректировок","Годовой план с учетом корректировок");
	КонецЕсли;
	
	Возврат СтруктураПечатныхФорм;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Функция проверяет, сформирован ли годовой план с видом операции Планирование
//
// Параметры:
//  ВидОперации - вид операции документа годового плана государственных закупок.
//
// Возвращаемое значение:
//  Выборка документов годового плана с заданным видом операции
//  
Функция ПолучитьВыборкуГодовогоПлана(ВидОперации) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Год", Год);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидОперации", ВидОперации);
	Запрос.УстановитьПараметр("ВидПланаЗакупок", ВидПланаЗакупок);
		
	// проверить, сформирован ли годовой план с видом операции планирование на этот год от этой организации
	Запрос.Текст =  "ВЫБРАТЬ
	                |	гз_ГодовойПлан.Ссылка
	                |ИЗ
	                |	Документ.гз_ГодовойПлан КАК гз_ГодовойПлан
	                |ГДЕ
	                |	гз_ГодовойПлан.Год = &Год
	                |	И гз_ГодовойПлан.Организация = &Организация
	                |	И гз_ГодовойПлан.ВидОперации = &ВидОперации
	                |	И (НЕ гз_ГодовойПлан.ПометкаУдаления)
	                |	И гз_ГодовойПлан.Проведен
	                |	И гз_ГодовойПлан.Ссылка <> &Ссылка
	                |	И гз_ГодовойПлан.ВидПланаЗакупок = &ВидПланаЗакупок";
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции //ПолучитьВыборкуГодовогоПлана()

// Функция проверяет, существуют ли корректировки годового плана с более поздней датой
//
// Возвращаемое значение:
//  Истина, если существуют корректировки годового плана датой позже, иначе - ложь
//  
Функция СуществуютКорректировкиСПозднейДатой() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Год", Год);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.гз_ВидыОперацийДокументовПланированияЗакупок.Корректировка);
	Запрос.УстановитьПараметр("ДатаНовойКорректировки", Дата);
	Запрос.УстановитьПараметр("ВидПланаЗакупок", ВидПланаЗакупок);
	Запрос.Текст =  "ВЫБРАТЬ
	                |	гз_ГодовойПлан.Ссылка
	                |ИЗ
	                |	Документ.гз_ГодовойПлан КАК гз_ГодовойПлан
	                |ГДЕ
	                |	гз_ГодовойПлан.Год = &Год
	                |	И гз_ГодовойПлан.Организация = &Организация
	                |	И гз_ГодовойПлан.ВидОперации = &ВидОперации
	                |	И гз_ГодовойПлан.Проведен
	                |	И (НЕ гз_ГодовойПлан.ПометкаУдаления)
	                |	И гз_ГодовойПлан.Дата > &ДатаНовойКорректировки
	                |	И гз_ГодовойПлан.Ссылка <> &Ссылка
	                |	И гз_ГодовойПлан.ВидПланаЗакупок = &ВидПланаЗакупок";
	Если Запрос.Выполнить().Выбрать().Следующий() Тогда 
		Возврат Истина
	Иначе 
		Возврат Ложь
	КонецЕсли;
	
КонецФункции //СуществуютКорректировкиСПозднейДатой()

// Функция формирует запрос для получения таблицы цен номенклатуры
//
// Параметры:
//  МассивНоменклатуры.
//
// Возвращаемое значение:
//  Таблица значений, содержащая колонки Номенклатура и Цена
//  
Функция ПолучитьТаблицуЦенНоменклатуры(МассивНоменклатуры) Экспорт 
	
	Возврат гз_ПроцедурыОперативногоУчетаЗакупок.мПолучитьТаблицуЦенНоменклатуры(МассивНоменклатуры,Организация,Год);

КонецФункции //ПолучитьТаблицуЦенНоменклатуры()

// Функция формирует запрос для получения неучтенных планов закупок подразделений
//
// Возвращаемое значение:
//  Таблица значений, содержащая неучтенные планы закупок подразделений
//  
Функция СформироватьТаблицуПлановЗакупокОснований() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Год", Год);
	Запрос.УстановитьПараметр("ВидОперации", ВидОперации);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =	"ВЫБРАТЬ
	              	|	гз_ГодовойПланЗаявкиОснования.Заявка.Ссылка
	              	|ИЗ
	              	|	Документ.гз_ГодовойПлан.ЗаявкиОснования КАК гз_ГодовойПланЗаявкиОснования
	              	|ГДЕ
	              	|	гз_ГодовойПланЗаявкиОснования.Ссылка.Организация = &Организация
	              	|	И гз_ГодовойПланЗаявкиОснования.Ссылка.Год = &Год
	              	|	И гз_ГодовойПланЗаявкиОснования.Ссылка.Проведен
	              	|	И (НЕ гз_ГодовойПланЗаявкиОснования.Ссылка.ПометкаУдаления)
	              	|	И гз_ГодовойПланЗаявкиОснования.Ссылка.ВидОперации = &ВидОперации
	              	|	И гз_ГодовойПланЗаявкиОснования.Ссылка <> &Ссылка";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции //СформироватьТаблицуПлановЗакупокОснований()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Процедура проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - выборка из результата запроса по шапке документа,
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки(РежимПроведения,СтруктураШапкиДокумента, Отказ, Заголовок)
	
	// Укажем, что надо проверить:
	ОбязательныеРеквизитыШапки = "Организация, ВидОперации, ВидПланаЗакупок"; // , ОперацияСОбъектамиОС - НЕ обязательна к заполнению
	
	СтруктураОбязательныхПолей = Новый Структура(ОбязательныеРеквизитыШапки);
	
	// Теперь позовем общую процедуру проверки.
	гз_ОбщегоНазначения.мПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Процедура проверяет правильность заполнения реквизитов документа
//
Процедура ПроверкаРеквизитовТЧ(ТабЗаявки, СтруктураШапкиДокумента,Отказ, Заголовок, ТипТЧ) Экспорт
	
	Если ТипТЧ = "Товары" Тогда
		
		РеквизитыТабЗаявки = "Номенклатура, Количество, СпособЗакупки, Сумма"; //через запятую
		
	КонецЕсли;
	
	гз_ОбщегоНазначения.мПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "СоставЗаявки"+ТипТЧ, Новый Структура(РеквизитыТабЗаявки), Отказ, Заголовок);
	
КонецПроцедуры // ПроверкаРеквизитовТЧ()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Процедура формирования движений регистров
//
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоЗаявкеТовары, Отказ, Заголовок)
	
	Если Не Отказ Тогда
		
		мГод 					= СтруктураШапкиДокумента.Год;
		ОрганизацияДляДвижения 	= СтруктураШапкиДокумента.Организация;
		ДатаДляДвижения 		= СтруктураШапкиДокумента.Дата;
		мМестоПоставки 			= СтруктураШапкиДокумента.МестоПоставки;
		мВидПланаЗакупок	 	= СтруктураШапкиДокумента.ВидПланаЗакупок;
		
		Если ВидОперации = Перечисления.гз_ВидыОперацийДокументовПланированияЗакупок.Планирование Тогда 
			Движение = Движения.гз_ИспользуемыеВидыПлановЗакупок.Добавить();
			Движение.Период 		= мГод;
			Движение.Организация 	= ОрганизацияДляДвижения;
			Движение.ВидПланаЗакупок 		= мВидПланаЗакупок;
		КонецЕсли;
				
		// Движение по регистру по Товарам
		ДвиженияПоРегистрамТовары(ТаблицаПоЗаявкеТовары, Отказ, мГод, мВидПланаЗакупок, ОрганизацияДляДвижения, ДатаДляДвижения, мМестоПоставки);
		
	КонецЕсли;
	
КонецПроцедуры // ДвиженияПоРегистрам()

// Процедура формирования движений регистров по ТЧ Товары
//
Процедура ДвиженияПоРегистрамТовары(ТаблицаПоЗаявкеТовары, Отказ, Год, ВидПланаЗакупок, ОрганизацияДляДвижения, ДатаДляДвижения,  МестоПоставки)
	Если Не Отказ Тогда
		
		МассивНоменклатуры = ТаблицаПоЗаявкеТовары.выгрузитьколонку("Номенклатура");
		Результат = гз_ПроцедурыОперативногоУчетаЗакупок.мПолучитьТаблицуРабот(МассивНоменклатуры);
		
		Для Каждого ТекСтр из ТаблицаПоЗаявкеТовары Цикл
			// движения по регистру гз_ГодовойПланЗакупок
			Движение = Движения.гз_ГодовойПланЗакупок.Добавить();
			Движение.Год					 = Год;
			Движение.ВидПланаЗакупок	 	 = ВидПланаЗакупок;
			Движение.ПериодПоставки			 = ТекСтр.ПериодПоставки;
			Движение.ДатаНачалаПоставки		 = ТекСтр.ДатаНачалаПоставки;
			Движение.ДатаОкончанияПоставки	 = ТекСтр.ДатаОкончанияПоставки;
			Движение.Характеристика			 = ТекСтр.Характеристика;
			Движение.Количество 			 = ?(ТекСтр.ВидКорректировки = Перечисления.гз_ВидыКорректировокГодовогоПлана.Удаление,- ТекСтр.Количество,ТекСтр.Количество);
			Движение.МестоПоставки			 = ?(ТекСтр.МестоПоставки.Пустая(),МестоПоставки,ТекСтр.МестоПоставки);
			Движение.Номенклатура			 = ТекСтр.Номенклатура;
			Движение.Организация			 = ОрганизацияДляДвижения;
			Движение.Период					 = ДатаДляДвижения;
			Движение.СпособЗакупки			 = ТекСтр.СпособЗакупки;
			
			Если Результат.Найти(ТекСтр.Номенклатура, "Номенклатура")<>Неопределено Тогда 
				Движение.ВидНоменклатуры = Перечисления.гз_ВидыПредметовЗакупки.Работа			  
			ИначеЕсли ТекСтр.Номенклатура.Услуга Тогда  
				Движение.ВидНоменклатуры = Перечисления.гз_ВидыПредметовЗакупки.Услуга			 
			Иначе 
				Движение.ВидНоменклатуры = Перечисления.гз_ВидыПредметовЗакупки.Товар			 
			КонецЕсли;
			
			Отбор = Новый Структура("ВидНоменклатуры");
			Отбор.ВидНоменклатуры = Движение.ВидНоменклатуры;			 
			Выборка = РегистрыСведений.гз_РазмерыАвансовыхПлатежей.СрезПоследних(КонецГода(Год),Отбор);
			Если Выборка.Количество()>0 Тогда
				Если ТекСтр.РазмерАвансовогоПлатежа > Выборка[0].МаксимальныйРазмерАвансовогоПлатежа Тогда 
					Отказ = Истина;
					Сообщить("В строке номер """ + ТекСтр.НомерСтроки + """ " "Размер авансового платежа не может быть больше утвержденного максимального размера авансового платежа!");
				КонецЕсли;
			КонецЕсли;
			Движение.Сумма					 = ?(ТекСтр.ВидКорректировки = Перечисления.гз_ВидыКорректировокГодовогоПлана.Удаление,- ТекСтр.Сумма,ТекСтр.Сумма);
			Движение.Аванс					 = ТекСтр.РазмерАвансовогоПлатежа;
			
			// движения по регистру гз_ДвижениеНоменклатурыПоГодовомуПлану
			Движение = Движения.гз_ДвижениеНоменклатурыПоГодовомуПлану.ДобавитьПриход();
			Движение.Год					 = Год;
			Движение.ВидПланаЗакупок		 = ВидПланаЗакупок;
			Движение.Номенклатура			 = ТекСтр.Номенклатура;
			Движение.Организация			 = ОрганизацияДляДвижения;
			Движение.СпособЗакупки			 = ТекСтр.СпособЗакупки;
			Движение.Период					 = ДатаДляДвижения;
			Движение.Количество 			 = ?(ТекСтр.ВидКорректировки = Перечисления.гз_ВидыКорректировокГодовогоПлана.Удаление,- ТекСтр.Количество,ТекСтр.Количество);
			Движение.Сумма					 = ?(ТекСтр.ВидКорректировки = Перечисления.гз_ВидыКорректировокГодовогоПлана.Удаление,- ТекСтр.Сумма,ТекСтр.Сумма);
			
		КонецЦикла;
		
		Если ВедениеУчетаИсполненияЗаказовПодразделений Тогда 
			
		    Выборка = ПолучитьРазницуПоГодовомуПлануИПланамЗакупокСУчетомКорректировок();
			НайденаРазница = Ложь;
			Пока Выборка.Следующий() Цикл  
				Если НЕ НайденаРазница Тогда 
					НайденаРазница = Истина;
					СтрокаСообщения = "Различаются данные по годовому плану закупок и по планам закупок подразделений для номенклатуры:"+Символы.ПС;
					СтрокаСообщения = СтрокаСообщения + Выборка.Номенклатура;
					Продолжить;
				КонецЕсли;
				
				СтрокаСообщения = СтрокаСообщения  + ";" + Символы.ПС + Выборка.Номенклатура;
				
			КонецЦикла;
			Отказ = НайденаРазница;
			Если Отказ Тогда 
				СтрокаСообщения = СтрокаСообщения  + ".";
				Сообщить(СтрокаСообщения);
				Возврат;
			КонецЕсли;
		
			Для Каждого ТекСтр из КорректировкаПлановЗакупок Цикл
				// движения по регистру гз_ПланыЗакупок
				Движение = Движения.гз_ПланыЗакупок.Добавить();
				Движение.Год					 = Год;
				Движение.ВидПланаЗакупок		 = ВидПланаЗакупок;
				Движение.Подразделение			 = ТекСтр.ПодразделениеОрганизации;
				Движение.ПериодПоставки			 = ТекСтр.ПериодПоставки;
				Движение.Количество 			 = ТекСтр.Количество;
				Движение.МестоПоставки			 = ТекСтр.МестоПоставки;
				Движение.Номенклатура			 = ТекСтр.Номенклатура;
				Движение.Организация			 = ОрганизацияДляДвижения;
				Движение.Период					 = ДатаДляДвижения;
				
				Если Результат.Найти(ТекСтр.Номенклатура, "Номенклатура")<>Неопределено Тогда 
					Движение.ВидНоменклатуры = Перечисления.гз_ВидыПредметовЗакупки.Работа			  
				ИначеЕсли ТекСтр.Номенклатура.Услуга Тогда  
					Движение.ВидНоменклатуры = Перечисления.гз_ВидыПредметовЗакупки.Услуга			 
				Иначе 
					Движение.ВидНоменклатуры = Перечисления.гз_ВидыПредметовЗакупки.Товар			 
				КонецЕсли;
				
			КонецЦикла;
		
		КонецЕсли;
	
		
	КонецЕсли;
КонецПроцедуры // ДвиженияПоРегистрамТовары()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаПроведения" объекта.
//
Процедура ОбработкаПроведения(Отказ,РежимПроведения)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = гз_ОбщегоНазначения.мПредставлениеДокументаПриПроведении(Ссылка);
	
	// Проверка ручной корректировки
	Если гз_ОбщегоНазначения.мРучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект) Тогда
		Возврат
	КонецЕсли;
	
	// Проверка согласованности
	Если Состояние <> Перечисления.гз_СостояниеДокумента.Утверждена Тогда
		Сообщить(Заголовок + " документ можно провести только после утверждения.");
		Отказ = истина;
	КонецЕсли;
	
	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = гз_ОбщегоНазначения.мСформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	// Проверим правильность заполнения шапки документа
	ПроверитьЗаполнениеШапки(РежимПроведения,СтруктураШапкиДокумента, Отказ, Заголовок);
	
	ТаблицаСоставаЗаявкиТовары = СоставЗаявкиТовары.Выгрузить();
	
	ПроверкаРеквизитовТЧ(ТаблицаСоставаЗаявкиТовары, СтруктураШапкиДокумента,Отказ, Заголовок, "Товары");
	
	// Проверим, не дублируются ли Номенклатура в таб.части
	
	Если НЕ Отказ Тогда
		// Формирование движений регистров, бухгалтерских и налоговых проводок.
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаСоставаЗаявкиТовары, Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры //ОбработкаПроведения()

// Процедура - обработчик события "ОбработкаУдаленияПроведения" объекта.
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	гз_ОбщегоНазначения.мУдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, РучнаяКорректировка);
КонецПроцедуры //ОбработкаУдаленияПроведения()

// Процедура - обработчик события "ПередЗаписью" объекта.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка ИЛИ ДополнительныеСвойства.Свойство("ВнешняяОбработка") Тогда 
		Возврат;
	КонецЕсли;
	
	Если ВидПланаЗакупок.Пустая() Тогда 
		Сообщить("Не заполнено значение реквизита ""Вид плана закупок""!",СтатусСообщения.Важное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
		
	 // Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
	 СуммаДокумента = СоставЗаявкиТовары.Итог("Сумма");

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Год", Год);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидПланаЗакупок", ВидПланаЗакупок);
	Если НЕ ДополнительныеСвойства.Свойство("ВнешняяОбработка") Тогда 
		Если ВидОперации = Перечисления.гз_ВидыОперацийДокументовПланированияЗакупок.Планирование Тогда 
			
			// проверить, существует ли годовой план с видом операции планирование на этот год
			Запрос.УстановитьПараметр("ВидОперации", Перечисления.гз_ВидыОперацийДокументовПланированияЗакупок.Планирование);

			Запрос.Текст =  "ВЫБРАТЬ
			                |	гз_ГодовойПлан.Ссылка
			                |ИЗ
			                |	Документ.гз_ГодовойПлан КАК гз_ГодовойПлан
			                |ГДЕ
			                |	гз_ГодовойПлан.Год = &Год
			                |	И гз_ГодовойПлан.Организация = &Организация
			                |	И гз_ГодовойПлан.Ссылка <> &Ссылка
			                |	И гз_ГодовойПлан.Проведен
			                |	И гз_ГодовойПлан.ВидОперации = &ВидОперации
			                |	И (НЕ гз_ГодовойПлан.ПометкаУдаления)
			                |	И гз_ГодовойПлан.ВидПланаЗакупок = &ВидПланаЗакупок";
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда 
				Сообщить("На " + Формат(Год(Год),"ЧГ=0") + " год уже существует документ " + Выборка.Ссылка + 
				" с видом операции планирование");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
			// проверить, существует ли годовой план с видом операции корректировка на этот год
			Запрос.УстановитьПараметр("ВидОперации", Перечисления.гз_ВидыОперацийДокументовПланированияЗакупок.Корректировка);

			Запрос.Текст =  "ВЫБРАТЬ
			                |	гз_ГодовойПлан.Ссылка
			                |ИЗ
			                |	Документ.гз_ГодовойПлан КАК гз_ГодовойПлан
			                |ГДЕ
			                |	гз_ГодовойПлан.Год = &Год
			                |	И гз_ГодовойПлан.Организация = &Организация
			                |	И гз_ГодовойПлан.Ссылка <> &Ссылка
			                |	И гз_ГодовойПлан.Проведен
			                |	И гз_ГодовойПлан.ВидОперации = &ВидОперации
			                |	И (НЕ гз_ГодовойПлан.ПометкаУдаления)
			                |	И гз_ГодовойПлан.ВидПланаЗакупок = &ВидПланаЗакупок";
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда 
				Сообщить("На " + Формат(Год(Год),"ЧГ=0") + " год уже существует документ " + Выборка.Ссылка + 
				" с видом операции корректировка");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
		ИначеЕсли ВидОперации = Перечисления.гз_ВидыОперацийДокументовПланированияЗакупок.Корректировка Тогда 
			
			// проверить, существует ли годовой план с видом операции планирование на этот год
			Запрос.УстановитьПараметр("ВидОперации", Перечисления.гз_ВидыОперацийДокументовПланированияЗакупок.Планирование);

			Запрос.Текст =  "ВЫБРАТЬ
			                |	гз_ГодовойПлан.Ссылка
			                |ИЗ
			                |	Документ.гз_ГодовойПлан КАК гз_ГодовойПлан
			                |ГДЕ
			                |	гз_ГодовойПлан.Год = &Год
			                |	И гз_ГодовойПлан.Организация = &Организация
			                |	И гз_ГодовойПлан.Ссылка <> &Ссылка
			                |	И гз_ГодовойПлан.Проведен
			                |	И гз_ГодовойПлан.ВидОперации = &ВидОперации
			                |	И (НЕ гз_ГодовойПлан.ПометкаУдаления)
			                |	И гз_ГодовойПлан.ВидПланаЗакупок = &ВидПланаЗакупок";
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Количество()=0 Тогда 
				Сообщить("На " + Формат(Год(Год),"ЧГ=0") + " год не существует документа "+
				"""ГЗ: Годовой план государственных закупок товаров, работ и услуг"" с видом операции планирование.");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
			// проверить, не существуют ли корректировки годового плана  
			// от данной организации с более поздней датой		
			Запрос.УстановитьПараметр("ВидОперации", Перечисления.гз_ВидыОперацийДокументовПланированияЗакупок.Корректировка);
			Запрос.УстановитьПараметр("ДатаНовойКорректировки", Дата);
			
			Запрос.Текст =  "ВЫБРАТЬ
			                |	гз_ГодовойПлан.Ссылка
			                |ИЗ
			                |	Документ.гз_ГодовойПлан КАК гз_ГодовойПлан
			                |ГДЕ
			                |	гз_ГодовойПлан.Год = &Год
			                |	И гз_ГодовойПлан.Организация = &Организация
			                |	И гз_ГодовойПлан.ВидОперации = &ВидОперации
			                |	И гз_ГодовойПлан.Проведен
			                |	И (НЕ гз_ГодовойПлан.ПометкаУдаления)
			                |	И гз_ГодовойПлан.Дата > &ДатаНовойКорректировки
			                |	И гз_ГодовойПлан.Ссылка <> &Ссылка
			                |	И гз_ГодовойПлан.ВидПланаЗакупок = &ВидПланаЗакупок";
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда 
				Сообщить("Невозможно записать документ " + Ссылка + " с видом операции корректировка, так как дата документа "+
				"раньше даты последней утвержденной корректировки годового плана " + Выборка.Ссылка);
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры //ПередЗаписью()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

ВедениеУчетаПоСпецификам  = Константы.гз_ВестиУчетПоСпецификам.Получить();
ВедениеУчетаЗакупокВРазрезеСкладов  = Константы.гз_ВестиУчетЗакупокВРазрезеМестПоставки.Получить();
ВедениеУчетаИсполненияЗаказовПодразделений = Константы.гз_ВестиУчетИсполненияЗаказовПодразделений.Получить();
