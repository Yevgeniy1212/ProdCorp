#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Процедура ОбработкаПроведения
// 
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	фин_ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	ПараметрыПроведения = Документы.фин_РегистрацияПрогнозныхДанныхПоИсполнениюБюджетов.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Статус = ПараметрыПроведения.Реквизиты[0].СтатусОперации;
	//
	Если (Статус = Перечисления.фин_СтатусыПрогнозныхОпераций.Прогноз ИЛИ Статус = Перечисления.фин_СтатусыПрогнозныхОпераций.ОтразитьВИсполнении) И фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_КонтрольЛимитовПриРегистрацииПрогнозныхДанных") И НЕ фин_РегистрацияФактическихДанныхПоБюджетированию.РазрешеноПревышениеКонтролируемыхЗначенийПоБюджетам() Тогда
		Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_КонтрольЛимитовПриРучномУчетеФактическихДанных") Тогда
			
			ТаблицаДвиженийПоЛимитам = Новый ТаблицаЗначений;
			ОбъектМетаданных = Метаданные.РегистрыНакопления.фин_КонтролируемыеФинансовыеПоказатели;
			Для Каждого Измерение Из ОбъектМетаданных.Измерения Цикл
				ТаблицаДвиженийПоЛимитам.Колонки.Добавить(Измерение.Имя,Измерение.Тип);
			КонецЦикла;
			Для Каждого Измерение Из ОбъектМетаданных.Ресурсы Цикл
				ТаблицаДвиженийПоЛимитам.Колонки.Добавить(Измерение.Имя,Измерение.Тип);
			КонецЦикла;
		Иначе
			ТаблицаДвиженийПоЛимитам = Неопределено;
		КонецЕсли;
		ОбъектКонтроль = Обработки.фин_КонтрольПрогнозныхТранзакций.Создать();
		ОбъектКонтроль.Документ = Ссылка;
		ОбъектКонтроль.Организация = Организация;
		ОбъектКонтроль.Дата = Дата;
		ОбъектКонтроль.БюджетныеОперации.Загрузить(БюджетныеОперации.Выгрузить());
		Обработки.фин_КонтрольПрогнозныхТранзакций.ИнициализироватьДанныеОбработки(ОбъектКонтроль);
		Обработки.фин_КонтрольПрогнозныхТранзакций.ИнициализироватьДанныеРазрезов(ОбъектКонтроль);
		Если Не Обработки.фин_КонтрольПрогнозныхТранзакций.КонтрольВыполнен(ОбъектКонтроль,,ТаблицаДвиженийПоЛимитам)  Тогда
			Отказ = Истина;
			Возврат;
		ИначеЕсли Статус = Перечисления.фин_СтатусыПрогнозныхОпераций.ОтразитьВИсполнении И фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_КонтрольЛимитовПриРучномУчетеФактическихДанных") Тогда
			фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ТаблицаДвиженийПоЛимитам, Движения, Отказ,,,,"фин_КонтролируемыеФинансовыеПоказатели");	
		КонецЕсли;
	КонецЕсли;
	
	Если Статус = Перечисления.фин_СтатусыПрогнозныхОпераций.Исполнена ИЛИ Статус = Перечисления.фин_СтатусыПрогнозныхОпераций.Отменена Тогда
		Возврат;
	ИначеЕсли Статус = Перечисления.фин_СтатусыПрогнозныхОпераций.Прогноз Тогда
		фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаБюджетныеОперации, Движения, Отказ,"БюджетныеОперации",,,"фин_ПрогнозИсполненияБюджетов");	
	ИначеЕсли Статус = Перечисления.фин_СтатусыПрогнозныхОпераций.ОтразитьВИсполнении Тогда
		РежимРегистрации = фин_ОбщегоНазначенияВызовСервераПовтИсп.РегистрФактическихДанныхДляДокумента("фин_РегистрацияПрогнозныхДанныхПоИсполнениюБюджетов");
		фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаБюджетныеОперации, Движения, Отказ,"БюджетныеОперации",,,РежимРегистрации.ИмяРегистра);	
	КонецЕсли;	
	
	//Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ВестиУчетПоПлануСчетовБюджетирования") Тогда
	//	ТаблицаПроводок = фин_ПроцедурыУчетаПоУправленческомуПлануСчетовСервер.ПодготовитьТаблицуПроводокДокументаРегистрацииПрогнозныхДанных(ПараметрыПроведения.Реквизиты[0]);
	//	фин_ПроцедурыУчетаПоУправленческомуПлануСчетовСервер.ЗарегистрироватьПроводкиДокумента(ТаблицаПроводок,Движения,Отказ);	
	//КонецЕсли;
		
КонецПроцедуры //ОбработкаПроведения

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
		
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура") 
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		Возврат;
	ИначеЕсли ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения = Тип("Структура") Тогда
		Попытка
			Документы.фин_РегистрацияПрогнозныхДанныхПоИсполнениюБюджетов.ЗаполнитьПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		Исключение
		КонецПопытки;
		Возврат;
	КонецЕсли;
	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект,фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"));
КонецПроцедуры

#КонецЕсли
