&НаКлиенте
Перем МассивПриоритетов;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ДокументПриСозданииНаСервере(ЭтотОбъект);
	
	ПодготовитьФормуНаСервере();
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
	
	// Активизировать табличную часть
	УстановитьТекущуюСтраницуОсновнойПанели();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ДокументПриЧтенииНаСервере(ЭтотОбъект,ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	общ_ОбщегоНазначенияКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(СтруктурноеПодразделениеОрганизация) Тогда 
		Объект.Организация = Неопределено;
		Объект.СтруктурноеПодразделение = Неопределено;
	Иначе 
		Результат = общ_РаботаСоСтруктурнымиПодразделениями.ПроверитьИзменениеЗначенийОрганизацииСтруктурногоПодразделения(СтруктурноеПодразделениеОрганизация, Объект.Организация, Объект.СтруктурноеПодразделение);
		Если Результат.ИзмененаОрганизация ИЛИ Результат.ИзмененоСтруктурноеПодразделение Тогда
			СтруктурноеПодразделениеОрганизацияПриИзмененииНаКлиенте(Истина, Результат);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	общ_РаботаСоСтруктурнымиПодразделениями.СтруктурноеПодразделениеНачалоВыбора(ЭтаФорма, СтандартнаяОбработка, Объект.Организация, Объект.СтруктурноеПодразделение, Истина);
КонецПроцедуры


&НаКлиенте
Процедура ПриоритетыПередНачаломИзменения(Элемент, Отказ)
	МассивПриоритетов.Очистить();
	Для Каждого СтрокаТЧ из Объект.Приоритеты Цикл
		МассивПриоритетов.Вставить(СтрокаТЧ.Критерий,СтрокаТЧ.Приоритет);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриоритетыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если не Элементы.ПриоритетыАвтоматическийПерерасчет.Пометка Тогда
		Возврат;
	КонецЕсли;
	ПерерасчитатьПриоритеты();
		
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ <>



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	Если НЕ фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Заполнить(Команда)
	Режим = РежимДиалогаВопрос.ДаНет;
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаЗаполнение", ЭтаФорма, Параметры);
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Табличная часть будет очищена. Продолжить?';"), Режим, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПриоритетыКакВПрошлом(Команда)
	РаспределитьПриоритетыКакВПрошломНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПриоритетыРавнымиДолями(Команда)
	Количество = Объект.Приоритеты.Количество();
	ПриоритетЕдиницы = Формат(100/Количество,"ЧЦ=5; ЧДЦ=2");
	ОбщаяСуммаПриоритетов = 0;
	Для каждого СтрокаТЧ из Объект.Приоритеты Цикл
		СтрокаТЧ.Приоритет = ПриоритетЕдиницы;
	КонецЦикла;
	СтрокаТЧ.Приоритет = 100 - ПриоритетЕдиницы*(Количество-1);
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПриоритетыЛесенкой(Команда)
	Если Объект.Приоритеты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	Для каждого СтрокаТЧ из Объект.Приоритеты Цикл
		СтрокаТЧ.Приоритет = 0 ;
	КонецЦикла;
	
	Количество = Объект.Приоритеты.Количество();
	ПриоритетЕдиницы = Число(Формат(100/Количество,"ЧЦ=5; ЧДЦ=2"));
	ОбщаяСуммаПриоритетов = 0;
	//устанавливаем смещение по коэфициенту приоритета - 5
	СуммаКоэффициентовПриоритетов = 0;
	ТекущийКоэффициентПриоритета = 0;
	МассивСоотношенийПриоритетов = Новый Массив;
	Для к = 1 По Количество Цикл
		ТекущийКоэффициентПриоритета = ТекущийКоэффициентПриоритета + 5;
		МассивСоотношенийПриоритетов.Добавить(ТекущийКоэффициентПриоритета);
		СуммаКоэффициентовПриоритетов = СуммаКоэффициентовПриоритетов + ТекущийКоэффициентПриоритета;
	КонецЦикла;
	МаксимальныйКоэффициентПриоритета = МассивСоотношенийПриоритетов[Количество-1];
	МаксимальныйАбсолютныйПриоритет = МаксимальныйКоэффициентПриоритета*100/СуммаКоэффициентовПриоритетов;
	
	// Рассчет коэффициента смещения 
	//5*100/ СуммаКоэффициентовПриоритетов
	СмещениеПоПриоритету = 500/СуммаКоэффициентовПриоритетов;
	Если Не Найти(Команда.Имя,"Вверх")=0 Тогда
		к = Количество;
		ПоследнийИндекс = 0;
		Пока Не к = ПоследнийИндекс + 1 Цикл
			к = к - 1;
			Объект.Приоритеты[к].Приоритет = МаксимальныйАбсолютныйПриоритет - СмещениеПоПриоритету * ((Количество-1)-к);
			ОбщаяСуммаПриоритетов = ОбщаяСуммаПриоритетов + Объект.Приоритеты[к].Приоритет;
		КонецЦикла;
	ИначеЕсли Не Найти(Команда.Имя, "Вниз")=0 Тогда
		к = 0;
		Шаг = 1;
		ПоследнийИндекс = 0;
		Пока Не к = Количество - 1 Цикл
			к = к + 1;
			Объект.Приоритеты[к].Приоритет = МаксимальныйАбсолютныйПриоритет - СмещениеПоПриоритету * (к);
			ОбщаяСуммаПриоритетов = ОбщаяСуммаПриоритетов + Объект.Приоритеты[к].Приоритет;
		КонецЦикла;
	КонецЕсли;
	Объект.Приоритеты[ПоследнийИндекс].Приоритет = 100 - ОбщаяСуммаПриоритетов;
КонецПроцедуры

&НаКлиенте
Процедура АвтоматическийПерерасчет(Команда)
	Элементы.ПриоритетыАвтоматическийПерерасчет.Пометка = не Элементы.ПриоритетыАвтоматическийПерерасчет.Пометка;
	ПриоритетыПередНачаломИзменения(Неопределено,неопределено);
	ПерерасчитатьПриоритеты();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияПриИзмененииНаКлиенте(ОчищатьНекорректныеЗначения, Параметры)

	Параметры.Вставить("ОчищатьНекорректныеЗначения", ОчищатьНекорректныеЗначения);
	
	СтруктураРезультатаВыполнения = Неопределено;
	СтруктурноеПодразделениеОрганизацияПриИзмененииНаСервере(Параметры, СтруктураРезультатаВыполнения);
		
	Если Параметры.Свойство("ИзмененаОрганизация") И Параметры.ИзмененаОрганизация Тогда
		//
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораСтруктурногоПодразделения(Результат, Параметры) Экспорт
	
	общ_РаботаСоСтруктурнымиПодразделениями.ПослеВыбораСтруктурногоПодразделения(Результат, Объект.Организация, Объект.СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация);
	Если Результат.ИзмененаОрганизация ИЛИ Результат.ИзмененоСтруктурноеПодразделение Тогда
		Модифицированность = Истина;
		Результат.Вставить("НеобходимоИзменитьЗначенияРеквизитовОбъекта", Ложь);
		СтруктурноеПодразделениеОрганизацияПриИзмененииНаКлиенте(Истина, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СтруктурноеПодразделениеОрганизацияПриИзмененииНаСервере(СтруктураПараметров = Неопределено, СтруктураРезультатаВыполнения)
	
	Если СтруктураПараметров = Неопределено	ИЛИ (СтруктураПараметров.Свойство("НеобходимоИзменитьЗначенияРеквизитовОбъекта") 
				И СтруктураПараметров.НеобходимоИзменитьЗначенияРеквизитовОбъекта) Тогда 
		общ_РаботаСоСтруктурнымиПодразделениями.СтруктурноеПодразделениеПриИзменении(СтруктурноеПодразделениеОрганизация, Объект.Организация, Объект.СтруктурноеПодразделение, СтруктураПараметров);
	КонецЕсли;
		
	ПриИзмененииЗначенияОрганизацииСервер(СтруктураПараметров, СтруктураРезультатаВыполнения);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииЗначенияОрганизацииСервер(СтруктураПараметров, СтруктураРезультатаВыполнения)
	
	Если НЕ СтруктураПараметров.ИзмененаОрганизация И НЕ СтруктураПараметров.ИзмененоСтруктурноеПодразделение Тогда
		Возврат;
	КонецЕсли;
	
	общ_РаботаСоСтруктурнымиПодразделениями.ПриИзмененииЗначенияОрганизации(Объект, , СтруктураРезультатаВыполнения);
	
	УправлениеФормой(ЭтаФорма);
			
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ТекущаяДатаДокумента = Объект.Дата;
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПризнакОтображенияСтруктурныхПодразделений();
		
	Если Объект.Ссылка.Пустая() Тогда
		
		Если НЕ (ЗначениеЗаполнено(Параметры.ЗначениеКопирования) ИЛИ ЗначениеЗаполнено(Параметры.Основание)) Тогда
			// по умолчанию при распределении учитываются все возможные показатели

		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Состояние) Тогда
		Объект.Состояние = Перечисления.СостоянияОбъектов.Подготовлен;
	КонецЕсли;

	
	общ_РаботаСоСтруктурнымиПодразделениями.УстановитьВидимостьСтруктурногоПодразделения(Объект.Организация, Объект.СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	общ_РаботаСоСтруктурнымиПодразделениями.УстановитьСвойстваЭлементаСтруктурноеПодразделениеОрганизация(Элементы.СтруктурноеПодразделениеОрганизация, Объект.СтруктурноеПодразделение, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	
	//ТекущийДокументОснование = Объект.ДокументОснование;
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущуюСтраницуОсновнойПанели()
	
	СписокТабличныхЧастей = Новый СписокЗначений;
	
	АктивизироватьТабличнуюЧасть = фин_ОбщегоНазначенияКлиентСервер.ПолучитьТекущуюВидимуюТабличнуюЧасть(ЭтаФорма, СписокТабличныхЧастей);
	фин_ОбщегоНазначенияСервер.АктивизироватьЭлементФормы(ЭтаФорма, АктивизироватьТабличнуюЧасть);

КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьНаСервере()
	Объект.Приоритеты.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	узп_КритерииОценкиПоставщиков.Ссылка Как Критерий
	               |ИЗ
	               |	ПланВидовХарактеристик.узп_КритерииОценкиПоставщиков КАК узп_КритерииОценкиПоставщиков
	               |ГДЕ
	               |	узп_КритерииОценкиПоставщиков.ПометкаУдаления = ЛОЖЬ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	узп_КритерииОценкиПоставщиков.Наименование";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Приоритеты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РаспределитьПриоритетыКакВПрошломНаСервере()
	Документы.узп_НастройкаСхемРасчетаРейтинговыхОценок.РаспределитьПриоритетыКакВПрошлом(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерерасчитатьПриоритеты()
	//Для Каждого ТекущиеДанные Из Объект.Приоритеты Цикл
		ТекущиеДанные = Элементы.Приоритеты.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		СтарыйПриоритет = МассивПриоритетов.Получить(ТекущиеДанные.Критерий);
		Если Не ТекущиеДанные.Приоритет = СтарыйПриоритет Тогда 
			Если СтарыйПриоритет = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			СуммаОставшихсяПриоритетов = 0;
			Для Каждого СтрокаТЧ из Объект.Приоритеты Цикл
				Если Не СтрокаТЧ.Критерий = ТекущиеДанные.Критерий Тогда 
					СуммаОставшихсяПриоритетов = СуммаОставшихсяПриоритетов + СтрокаТЧ.Приоритет;
				КонецЕсли;
			КонецЦикла;
			Если не СуммаОставшихсяПриоритетов = 0 Тогда 
				Дельта = ТекущиеДанные.Приоритет-СтарыйПриоритет;
				Для Каждого СтрокаТЧ Из Объект.Приоритеты Цикл
					Если Не СтрокаТЧ.Критерий = ТекущиеДанные.Критерий Тогда
						
						ОтношениеПриоритета = СтрокаТЧ.Приоритет/СуммаОставшихсяПриоритетов;
						ОтношениеДельты = Дельта/100;
						СтрокаТЧ.Приоритет = СтрокаТЧ.Приоритет - (ОтношениеПриоритета*ОтношениеДельты*100);
					КонецЕсли;
				КонецЦикла;
				СтрокаТЧ.Приоритет = СтрокаТЧ.Приоритет - (Объект.Приоритеты.Итог("Приоритет")-100);
			КонецЕсли;
			
		КонецЕсли;
	//КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗаполнение(Результат, Параметры) Экспорт
    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
	ЗаполнитьНаСервере();
	РаспределитьПриоритетыРавнымиДолями(Неопределено);
КонецПроцедуры

МассивПриоритетов = Новый Соответствие;