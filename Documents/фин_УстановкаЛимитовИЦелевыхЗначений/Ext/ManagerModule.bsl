#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Заполнение


////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	СтруктураДанныхДокумента = Новый Структура("Организация,ИсправляемыйДокумент,ВидОграниченияОборотов,ВидОтклоненияКонтролируемыхЗначений,КонтролирующийСценарийПериодичность,Отклонение,ИспользованиеКонтролируемыхЗначений,ВидКонтролируемыхЗначений,ДатаНачалаКонтролирующегоСценария,ДатаКонцаКонтролирующегоСценария,КонтролирующийСценарий,Сценарий");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Документ.Организация,
		|	Документ.ДатаНачалаКонтролирующегоСценария,
		|	Документ.ДатаКонцаКонтролирующегоСценария,
		|	Документ.ВидКонтролируемыхЗначений,
		|	Документ.ИспользованиеКонтролируемыхЗначений,
		|	Документ.ВидОграниченияОборотов,
		|	Документ.Отклонение,
		|	Документ.КонтролирующийСценарий,
		|	Документ.Сценарий,
		|	Документ.ВидОтклоненияКонтролируемыхЗначений,
		|	Документ.КонтролирующийСценарий."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолеПериодичность()+",
		|	Документ.ИсправляемыйДокумент
		|ИЗ
		|	Документ.фин_УстановкаЛимитовИЦелевыхЗначений КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураДанныхДокумента,ВыборкаДетальныеЗаписи);
	КонецЕсли;
	
	ДополнительныеПараметрыЗапроса = Новый Структура;
	ДополнительныеПараметрыЗапроса.Вставить("Организация",							СтруктураДанныхДокумента.Организация);
	ДополнительныеПараметрыЗапроса.Вставить("ИспользованиеКонтролируемыхЗначений",	СтруктураДанныхДокумента.ИспользованиеКонтролируемыхЗначений);
	ДополнительныеПараметрыЗапроса.Вставить("ВидКонтролируемыхЗначений",			СтруктураДанныхДокумента.ВидКонтролируемыхЗначений);
	ДополнительныеПараметрыЗапроса.Вставить("ВидОтклоненияКонтролируемыхЗначений",	СтруктураДанныхДокумента.ВидОтклоненияКонтролируемыхЗначений);
	ДополнительныеПараметрыЗапроса.Вставить("ДатаНач",								СтруктураДанныхДокумента.ДатаНачалаКонтролирующегоСценария);
	ДополнительныеПараметрыЗапроса.Вставить("ДатаКон",								СтруктураДанныхДокумента.ДатаКонцаКонтролирующегоСценария);
	ДополнительныеПараметрыЗапроса.Вставить("КонтролирующийСценарий",				СтруктураДанныхДокумента.КонтролирующийСценарий);
	ДополнительныеПараметрыЗапроса.Вставить("Сценарий",								?(СтруктураДанныхДокумента.ИспользованиеКонтролируемыхЗначений=Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриПланировании,СтруктураДанныхДокумента.Сценарий,СтруктураДанныхДокумента.КонтролирующийСценарий));
	ДополнительныеПараметрыЗапроса.Вставить("Отклонение",							?(СтруктураДанныхДокумента.ВидОтклоненияКонтролируемыхЗначений=Перечисления.фин_ВидыОтклоненийКонтролируемыхЗначенийБюджетов.Абсолютное,СтруктураДанныхДокумента.Отклонение,1+СтруктураДанныхДокумента.Отклонение/100));
	ДополнительныеПараметрыЗапроса.Вставить("ВалютаСценарияПланирования",			?(СтруктураДанныхДокумента.ИспользованиеКонтролируемыхЗначений=Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриПланировании,СтруктураДанныхДокумента.Сценарий,СтруктураДанныхДокумента.КонтролирующийСценарий).Валюта);
	ДополнительныеПараметрыЗапроса.Вставить("ВалютаУпрУчета",						фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета"));
	
	ДополнительныеЗапросы = Новый Массив;
	Если СтруктураДанныхДокумента.ВидОграниченияОборотов = Перечисления.фин_ВидыОграниченийОборотовБюджета.КонтролирующийСценарийПоВсем Тогда
		ДополнительныеЗапросы.Добавить("ТаблицаКонтролирующийСценарийПоВсем");
	КонецЕсли;
	Если СтруктураДанныхДокумента.ВидОграниченияОборотов = Перечисления.фин_ВидыОграниченийОборотовБюджета.КонтролирующийСценарийВыборочно Тогда
		ДополнительныеЗапросы.Добавить("ТаблицаКонтролирующийСценарийВыборочно");
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураДанныхДокумента.ИсправляемыйДокумент) Тогда
		ДополнительныеЗапросы.Добавить("ТаблицаДанныеИсправляемыхДокументов");
		ИсправляемыйДокумент 	= СтруктураДанныхДокумента.ИсправляемыйДокумент;
		МассивИсправляемых 		= Новый Массив;
		МассивИсправляемых.Добавить(ИсправляемыйДокумент);
		ПредыдущийИсправляемый 	= ИсправляемыйДокумент.ИсправляемыйДокумент;
		Пока ЗначениеЗаполнено(ПредыдущийИсправляемый) Цикл
			МассивИсправляемых.Добавить(ПредыдущийИсправляемый);
			ПредыдущийИсправляемый = ПредыдущийИсправляемый.ИсправляемыйДокумент;
		КонецЦикла;
		ДополнительныеПараметрыЗапроса.Вставить("ИсправляемыеДокументы",МассивИсправляемых);
	КонецЕсли;
	
	Если СтруктураДанныхДокумента.ВидОграниченияОборотов = Перечисления.фин_ВидыОграниченийОборотовБюджета.КонтролирующийСценарийВыборочно Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ГраницыЗначений.Ссылка,
			|	ГраницыЗначений.НомерСтроки,
			|	ГраницыЗначений.Период,
			|	ГраницыЗначений.ФинансовыйПоказатель,
			|	ГраницыЗначений.УправленческоеПодразделение,
			|	ГраницыЗначений.Проект,
			|	ГраницыЗначений.Контрагент,
			|	ГраницыЗначений.Номенклатура,
			|	ГраницыЗначений.ВидОтклоненияКонтролируемыхЗначений,
			|	ГраницыЗначений.Отклонение,
			|	ГраницыЗначений.СуммаСценарияКонтроль,
			|	ГраницыЗначений.Разрез1,
			|	ГраницыЗначений.Разрез10,
			|	ГраницыЗначений.Разрез2,
			|	ГраницыЗначений.Разрез3,
			|	ГраницыЗначений.Разрез4,
			|	ГраницыЗначений.Разрез5,
			|	ГраницыЗначений.Разрез6,
			|	ГраницыЗначений.Разрез7,
			|	ГраницыЗначений.Разрез8,
			|	ГраницыЗначений.Разрез9,
			|	ГраницыЗначений.ДополнительныеРазрезы
			|ИЗ
			|	Документ.фин_УстановкаЛимитовИЦелевыхЗначений.ГраницыЗначений КАК ГраницыЗначений
			|ГДЕ
			|	ГраницыЗначений.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		СтрокаГраницы 	= РезультатЗапроса.Выбрать();
		
		СписокИзмерений = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПолучитьПолныйМассивРазрезов");
		Для Каждого ЭлементСписка Из СписокИзмерений Цикл
			ИмяРазреза = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(ЭлементСписка);
			ДополнительныеПараметрыЗапроса.Вставить(ИмяРазреза+"Пустое",фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(ЭлементСписка).ТипЗначения.ПривестиЗначение(Неопределено));
		КонецЦикла;
		МинимальныйПериод 	= Неопределено;
		МаксимальныйПериод 	= Неопределено;
		Пока СтрокаГраницы.Следующий() Цикл
			НомерСтрокой 	=  Формат(СтрокаГраницы.НомерСтроки,"ЧГ=");
			ДополнительныеПараметрыЗапроса.Вставить("ДатаНач"+НомерСтрокой,СтрокаГраницы.Период);
			ДополнительныеПараметрыЗапроса.Вставить("ДатаКон"+НомерСтрокой,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(СтрокаГраницы.Период,СтруктураДанныхДокумента.КонтролирующийСценарийПериодичность));
			Для Каждого ЭлементСписка Из СписокИзмерений Цикл
				ИмяРазреза = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(ЭлементСписка);
				Если ЗначениеЗаполнено(СтрокаГраницы[ИмяРазреза]) Тогда
					ДополнительныеПараметрыЗапроса.Вставить(ИмяРазреза+НомерСтрокой,СтрокаГраницы[ИмяРазреза]);
				КонецЕсли;
			КонецЦикла;
			ДополнительныеПараметрыЗапроса.Вставить("ФинансовыйПоказатель"+НомерСтрокой,СтрокаГраницы.ФинансовыйПоказатель);
			МинимальныйПериод = ?(МинимальныйПериод=Неопределено,СтрокаГраницы.Период,Мин(МинимальныйПериод,СтрокаГраницы.Период));
			МаксимальныйПериод = ?(МаксимальныйПериод=Неопределено,СтрокаГраницы.Период,Макс(МаксимальныйПериод,СтрокаГраницы.Период));
		КонецЦикла;
		ДополнительныеПараметрыЗапроса.Вставить("ДатаНач",	МинимальныйПериод);
		ДополнительныеПараметрыЗапроса.Вставить("ДатаКон",	МаксимальныйПериод);
		
	КонецЕсли;

	ПереопределяемыеТаблицы = Новый Массив;
	//Если СтруктураДанныхДокумента.ВидОграниченияОборотов = Перечисления.фин_ВидыОграниченийОборотовБюджета.ПредварительныйБюджет Тогда
	Если СтруктураДанныхДокумента.ВидОграниченияОборотов <> Перечисления.фин_ВидыОграниченийОборотовБюджета.КонтролирующийСценарийПоВсем Тогда
		ПереопределяемыеТаблицы.Добавить("ГраницыЗначений");
	КонецЕсли;
	
	ПараметрыПроведения = фин_УправлениеПроведениемДокументовСервер.ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ,,,,,,ПереопределяемыеТаблицы,ДополнительныеПараметрыЗапроса,ДополнительныеЗапросы);
	
	Возврат ПараметрыПроведения;

КонецФункции 

Функция ТекстЗапросаТаблицаКонтролирующийСценарийПоВсем(НомераТаблиц,ПараметрыПроведения, Реквизиты)  Экспорт
	ИспользоватьКурсыСценария 	= Реквизиты.Сценарий.ИспользоватьКурсыСценария;
	РегистрКурсовВалют 			= ?(ИспользоватьКурсыСценария,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"КурсыВалютПоСценариям","КурсыВалют");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	фин_УстановкаЛимитовИЦелевыхЗначенийРазрезыКонтроля.Ссылка,
	|	фин_УстановкаЛимитовИЦелевыхЗначенийРазрезыКонтроля.НомерСтроки,
	|	фин_УстановкаЛимитовИЦелевыхЗначенийРазрезыКонтроля.Измерение
	|ИЗ
	|	Документ.фин_УстановкаЛимитовИЦелевыхЗначений.РазрезыКонтроля КАК фин_УстановкаЛимитовИЦелевыхЗначенийРазрезыКонтроля
	|ГДЕ
	|	фин_УстановкаЛимитовИЦелевыхЗначенийРазрезыКонтроля.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	
	РазрезыКонтроля = Запрос.Выполнить().Выгрузить();
	
	ТекстЗапроса="
	|ВЫБРАТЬ
	|	ФинансовыйПоказатель,
	|	ПрименятьКонтроль
	|ПОМЕСТИТЬ ВТ_НастройкиРегулярногоКонтроляПоказателей
	|ИЗ РегистрСведений.фин_НастройкиРегулярногоКонтроляПоказателей.СрезПоследних(, ИспользованиеКонтролируемыхЗначений = &ИспользованиеКонтролируемыхЗначений) КАК НастройкиРегулярногоКонтроля
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодПланирования КАК Дата 
	|ПОМЕСТИТЬ ВТ_ПериодыРегистра
	|ИЗ РегистрНакопления.фин_ОборотыБюджетов.Обороты(,,,ПериодПланирования >=&ДатаНач И ПериодПланирования <=&ДатаКон И Сценарий=&КонтролирующийСценарий)
	|
	|;
	|
	|ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуСценария.Дата, 
	|	КурсыВалют.Курс, 
	|	КурсыВалют.Кратность
	|ПОМЕСТИТЬ ВТ_КурсыСценарияПлан
	|ИЗ РегистрСведений."+РегистрКурсовВалют+" КАК КурсыВалют
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|								Максимум(КурсыВнутр.Период) КАК Период,
	|								Дата
	|							ИЗ РегистрСведений."+РегистрКурсовВалют+" КАК КурсыВнутр
	|								ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыРегистра КАК Контр
	|									ПО Контр.Дата >= КурсыВнутр.Период
	|										И КурсыВнутр.Валюта = &ВалютаСценарияПланирования";
	Если ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|										И КурсыВнутр.Сценарий=&Сценарий";
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|							СГРУППИРОВАТЬ ПО Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуСценария
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуСценария.Период
	|ГДЕ КурсыВалют.Валюта = &ВалютаСценарияПланирования";
	Если ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|	И КурсыВалют.Сценарий=&Сценарий";
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|
	|;
	|
	|ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуСценария.Дата, 
	|	КурсыВалют.Курс, 
	|	КурсыВалют.Кратность
	|ПОМЕСТИТЬ ВТ_КурсыУпрУчета
	|ИЗ РегистрСведений."+РегистрКурсовВалют+" КАК КурсыВалют
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|								Максимум(КурсыВнутр.Период) КАК Период,
	|								Дата
	|							ИЗ РегистрСведений."+РегистрКурсовВалют+" КАК КурсыВнутр
	|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыРегистра КАК Контр
	|							ПО Контр.Дата >= КурсыВнутр.Период
	|								И КурсыВнутр.Валюта = &ВалютаУпрУчета";
	Если ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|								И КурсыВнутр.Сценарий=&Сценарий";
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|							СГРУППИРОВАТЬ ПО Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуСценария
	|ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуСценария.Период
	|ГДЕ КурсыВалют.Валюта = &ВалютаУпрУчета";
	Если ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|	И КурсыВалют.Сценарий=&Сценарий";
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|
	|;
	|
	|ВЫБРАТЬ
	|	&КонтролирующийСценарий КАК КонтролирующийСценарий,
	|	&Сценарий КАК Сценарий,
	|	&ВидКонтролируемыхЗначений КАК ВидКонтролируемогоЗначения,
	|	&ИспользованиеКонтролируемыхЗначений КАК ИспользованиеКонтролируемогоЗначения,
	|	ОборотыБюджетовОбороты.ПериодПланирования КАК Период,
	|	ОборотыБюджетовОбороты.ПериодПланирования КАК ПериодПланирования,
	|	ОборотыБюджетовОбороты.ФинансовыйПоказатель КАК ФинансовыйПоказатель,"+?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("БюджетированиеПоОрганизациям"),"
	|	&Организация КАК Организация,","ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,");
	
	СписокИзмерений = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПолучитьПолныйМассивРазрезов");
	
	Для Каждого ЭлементСписка Из СписокИзмерений Цикл
		ИмяРазреза = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(ЭлементСписка);
		Если РазрезыКонтроля.НайтиСтроки(Новый Структура("Измерение",ЭлементСписка)).Количество()<>0 Тогда
			ТекстЗапроса=ТекстЗапроса+"
			|	ОборотыБюджетовОбороты."+?(Найти(ИмяРазреза,"Разрез")=0,"","ДополнительныеРазрезы.")+ИмяРазреза+" КАК "+ИмяРазреза+",";
		КонецЕсли;
	КонецЦикла;
	
	// Пересчитываем в валюту сценария, для которого устанавливаются граничные значения
	ТекстЗапроса=ТекстЗапроса+"        
	|	СУММА(ВЫРАЗИТЬ 
	|		(ВЫБОР 
	|			КОГДА &ВалютаСценарияПланирования=&ВалютаУпрУчета ТОГДА ОборотыБюджетовОбороты.СуммаУпрОборот
	|			КОГДА &ВалютаСценарияПланирования=ОборотыБюджетовОбороты.Валюта ТОГДА ОборотыБюджетовОбороты.ВалютнаяСуммаОборот
	|			КОГДА &ВалютаСценарияПланирования<>&ВалютаУпрУчета И КурсыСценарияПлан.Курс <>0 И КурсыУпрУчета.Курс <>0 ТОГДА
	|				ОборотыБюджетовОбороты.СуммаУпрОборот*КурсыУпрУчета.Курс * КурсыСценарияПлан.Кратность 
	|				/ (КурсыСценарияПлан.Курс * КурсыУпрУчета.Кратность)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО (15,2))";
	
	Если Реквизиты.ВидОтклоненияКонтролируемыхЗначений=Перечисления.фин_ВидыОтклоненийКонтролируемыхЗначенийБюджетов.Абсолютное Тогда
		ТекстЗапроса=ТекстЗапроса+" + &Отклонение) КАК СуммаСценарияКонтроль";
	Иначе
		ТекстЗапроса=ТекстЗапроса+"*&Отклонение) КАК СуммаСценарияКонтроль";
	КонецЕсли;
	
	ТекстЗапроса=ТекстЗапроса+"
	|ИЗ
	|	РегистрНакопления.фин_ОборотыБюджетов.Обороты(,,,ПериодПланирования >=&ДатаНач И ПериодПланирования <=&ДатаКон И  Сценарий=&КонтролирующийСценарий) КАК ОборотыБюджетовОбороты	
	// Курсы валюты упр. учета
	|ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КурсыУпрУчета КАК КурсыУпрУчета 
	|	ПО КурсыУпрУчета.Дата = ОборотыБюджетовОбороты.ПериодПланирования
	// Курсы сценария планирования
	|ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КурсыСценарияПлан КАК КурсыСценарияПлан 
	|ПО КурсыСценарияПлан.Дата = ОборотыБюджетовОбороты.ПериодПланирования
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НастройкиРегулярногоКонтроляПоказателей КАК НастройкиРегулярногоКонтроля
	|		ПО ОборотыБюджетовОбороты.ФинансовыйПоказатель = НастройкиРегулярногоКонтроля.ФинансовыйПоказатель
	| ГДЕ ЕСТЬNULL(НастройкиРегулярногоКонтроля.ПрименятьКонтроль, ЛОЖЬ) = ЛОЖЬ
	|СГРУППИРОВАТЬ ПО
	|	&КонтролирующийСценарий,
	|	&Сценарий,
	|	&ВидКонтролируемыхЗначений,
	|	&ИспользованиеКонтролируемыхЗначений,
	|	ОборотыБюджетовОбороты.ПериодПланирования,
	|	ОборотыБюджетовОбороты.ФинансовыйПоказатель,"+?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("БюджетированиеПоОрганизациям"),"
	|	&Организация","ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)");
	
	
	Для Каждого ЭлементСписка Из СписокИзмерений Цикл
		ИмяРазреза = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(ЭлементСписка);
		Если РазрезыКонтроля.НайтиСтроки(Новый Структура("Измерение",ЭлементСписка)).Количество()<>0 Тогда
			ТекстЗапроса=ТекстЗапроса+",
			|	ОборотыБюджетовОбороты."+?(Найти(ИмяРазреза,"Разрез")=0,"","ДополнительныеРазрезы.")+ИмяРазреза;
		КонецЕсли;
	КонецЦикла;

	
	
	ТекстЗапроса = ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();
	НомераТаблиц.Вставить("ВТ_НастройкиРегулярногоКонтроляПоказателей", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПериодыРегистра",  						НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_КурсыСценарияПлан",  						НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_КурсыУпрУчета",  							НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаОборотов",  							НомераТаблиц.Количество());
	Возврат ТекстЗапроса;	
КонецФункции 

Функция ТекстЗапросаТаблицаКонтролирующийСценарийВыборочно(НомераТаблиц,ПараметрыПроведения, Реквизиты)  Экспорт
	ТекстЗапроса = "";
	Если НЕ Реквизиты["ЕстьГраницыЗначений"] Тогда
		ПараметрыПроведения.Вставить("ТаблицаОборотов", Неопределено);
	Иначе
		ИспользоватьКурсыСценария 	= Реквизиты.Сценарий.ИспользоватьКурсыСценария;
		РегистрКурсовВалют 			= ?(ИспользоватьКурсыСценария,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"КурсыВалютПоСценариям","КурсыВалют");
		
		РазрезыКонтроля = ПараметрыПроведения.ТаблицаРазрезыКонтроля;
		//ГраницыЗначений = ПараметрыПроведения.ТаблицаГраницыЗначений;
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ГраницыЗначений.Ссылка,
			|	ГраницыЗначений.НомерСтроки,
			|	ГраницыЗначений.Период,
			|	ГраницыЗначений.ФинансовыйПоказатель,
			|	ГраницыЗначений.УправленческоеПодразделение,
			|	ГраницыЗначений.Проект,
			|	ГраницыЗначений.Контрагент,
			|	ГраницыЗначений.Номенклатура,
			|	ГраницыЗначений.ВидОтклоненияКонтролируемыхЗначений,
			|	ГраницыЗначений.Отклонение,
			|	ГраницыЗначений.СуммаСценарияКонтроль,
			|	ГраницыЗначений.Разрез1,
			|	ГраницыЗначений.Разрез10,
			|	ГраницыЗначений.Разрез2,
			|	ГраницыЗначений.Разрез3,
			|	ГраницыЗначений.Разрез4,
			|	ГраницыЗначений.Разрез5,
			|	ГраницыЗначений.Разрез6,
			|	ГраницыЗначений.Разрез7,
			|	ГраницыЗначений.Разрез8,
			|	ГраницыЗначений.Разрез9,
			|	ГраницыЗначений.ДополнительныеРазрезы
			|ИЗ
			|	Документ.фин_УстановкаЛимитовИЦелевыхЗначений.ГраницыЗначений КАК ГраницыЗначений
			|ГДЕ
			|	ГраницыЗначений.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ПараметрыПроведения.Реквизиты[0].Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
	    ГраницыЗначений = РезультатЗапроса.Выгрузить();
	
		//сформируем общие для всех запросов временные таблицы
		
		ТекстЗапроса="
		|ВЫБРАТЬ
		|	ФинансовыйПоказатель,
		|	ПрименятьКонтроль
		|ПОМЕСТИТЬ ВТ_НастройкиРегулярногоКонтроляПоказателей
		|ИЗ РегистрСведений.фин_НастройкиРегулярногоКонтроляПоказателей.СрезПоследних(, ИспользованиеКонтролируемыхЗначений = &ИспользованиеКонтролируемыхЗначений) КАК НастройкиРегулярногоКонтроля
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПериодПланирования КАК Дата 
		|ПОМЕСТИТЬ ВТ_ПериодыРегистра
		|ИЗ РегистрНакопления.фин_ОборотыБюджетов.Обороты(,,,ПериодПланирования >=&ДатаНач И ПериодПланирования <=&ДатаКон И Сценарий=&КонтролирующийСценарий)
		|
		|;
		|
		|ВЫБРАТЬ 
		|	ПериодПоследнейЗаписиКурсаНаДатуСценария.Дата, 
		|	КурсыВалют.Курс, 
		|	КурсыВалют.Кратность
		|ПОМЕСТИТЬ ВТ_КурсыСценарияПлан
		|ИЗ РегистрСведений."+РегистрКурсовВалют+" КАК КурсыВалют
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
		|								Максимум(КурсыВнутр.Период) КАК Период,
		|								Дата
		|							ИЗ РегистрСведений."+РегистрКурсовВалют+" КАК КурсыВнутр
		|								ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыРегистра КАК Контр
		|									ПО Контр.Дата >= КурсыВнутр.Период
		|										И КурсыВнутр.Валюта = &ВалютаСценарияПланирования";
		Если ИспользоватьКурсыСценария Тогда
			ТекстЗапроса=ТекстЗапроса+"
			|										И КурсыВнутр.Сценарий=&Сценарий";
		КонецЕсли;
		ТекстЗапроса=ТекстЗапроса+"
		|							СГРУППИРОВАТЬ ПО Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуСценария
		|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуСценария.Период
		|ГДЕ КурсыВалют.Валюта = &ВалютаСценарияПланирования";
		Если ИспользоватьКурсыСценария Тогда
			ТекстЗапроса=ТекстЗапроса+"
			|	И КурсыВалют.Сценарий=&Сценарий";
		КонецЕсли;
		ТекстЗапроса=ТекстЗапроса+"
		|
		|;
		|
		|ВЫБРАТЬ 
		|	ПериодПоследнейЗаписиКурсаНаДатуСценария.Дата, 
		|	КурсыВалют.Курс, 
		|	КурсыВалют.Кратность
		|ПОМЕСТИТЬ ВТ_КурсыУпрУчета
		|ИЗ РегистрСведений."+РегистрКурсовВалют+" КАК КурсыВалют
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|								Максимум(КурсыВнутр.Период) КАК Период,
		|								Дата
		|							ИЗ РегистрСведений."+РегистрКурсовВалют+" КАК КурсыВнутр
		|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыРегистра КАК Контр
		|							ПО Контр.Дата >= КурсыВнутр.Период
		|								И КурсыВнутр.Валюта = &ВалютаУпрУчета";
		Если ИспользоватьКурсыСценария Тогда
			ТекстЗапроса=ТекстЗапроса+"
			|								И КурсыВнутр.Сценарий=&Сценарий";
		КонецЕсли;
		ТекстЗапроса=ТекстЗапроса+"
		|							СГРУППИРОВАТЬ ПО Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуСценария
		|ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуСценария.Период
		|ГДЕ КурсыВалют.Валюта = &ВалютаУпрУчета";
		Если ИспользоватьКурсыСценария Тогда
			ТекстЗапроса=ТекстЗапроса+"
			|	И КурсыВалют.Сценарий=&Сценарий";
		КонецЕсли;
		ТекстЗапроса=ТекстЗапроса+"
		|
		|;
		| ";
		// сформируем набор запросов для строк лимитов
		СписокИзмерений = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПолучитьПолныйМассивРазрезов");
		
		Для Инд = 1 По ГраницыЗначений.Количество() Цикл
			СтрокаГраницы = ГраницыЗначений[Инд-1];
			Если Инд <> 1 Тогда
				ТекстЗапроса=ТекстЗапроса+"
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|";
			КонецЕсли;
			
			ТекстУсловия="";
			
			НомерСтрокой =  Формат(СтрокаГраницы.НомерСтроки,"ЧГ=");
			
			Для Каждого ЭлементСписка Из СписокИзмерений Цикл
				ИмяРазреза = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(ЭлементСписка);
				Если ЗначениеЗаполнено(СтрокаГраницы[ИмяРазреза]) Тогда
					ТекстУсловия = ТекстУсловия+" И "+?(Найти(ИмяРазреза,"Разрез")=0,"","ДополнительныеРазрезы.")+ИмяРазреза+"=&"+ИмяРазреза+НомерСтрокой;
				КонецЕсли;
			КонецЦикла;
			ТекстУсловия=ТекстУсловия+" И ФинансовыйПоказатель=&ФинансовыйПоказатель" + НомерСтрокой;
			
			ТекстЗапроса=ТекстЗапроса+"
			|ВЫБРАТЬ
			|	&КонтролирующийСценарий КАК КонтролирующийСценарий,
			|	&Сценарий КАК Сценарий,
			|	&ВидКонтролируемыхЗначений КАК ВидКонтролируемогоЗначения,
			|	&ИспользованиеКонтролируемыхЗначений КАК ИспользованиеКонтролируемогоЗначения,
			|	ОборотыБюджетовОбороты.ПериодПланирования КАК Период,
			|	ОборотыБюджетовОбороты.ПериодПланирования КАК ПериодПланирования,
			|	ОборотыБюджетовОбороты.ФинансовыйПоказатель КАК ФинансовыйПоказатель,"+?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("БюджетированиеПоОрганизациям"),"
			|	&Организация КАК Организация,","ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,");
			
			
			Для Каждого ЭлементСписка Из СписокИзмерений Цикл
				ИмяРазреза = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(ЭлементСписка);
				Если ЗначениеЗаполнено(СтрокаГраницы[ИмяРазреза]) Тогда
					ТекстЗапроса=ТекстЗапроса+"
					|	&"+ИмяРазреза+НомерСтрокой+" КАК "+ИмяРазреза+",";
				Иначе
					ТекстЗапроса=ТекстЗапроса+"
					|	&"+ИмяРазреза+"Пустое КАК "+ИмяРазреза+",";
				КонецЕсли;
			КонецЦикла;
			
			// Пересчитываем в валюту сценария, для которого устанавливаются граничные значения
			ТекстЗапроса=ТекстЗапроса+"        
			|	ВЫРАЗИТЬ 
			|		(ВЫБОР 
			|			КОГДА &ВалютаСценарияПланирования=&ВалютаУпрУчета ТОГДА ОборотыБюджетовОбороты.СуммаУпрОборот
			|			КОГДА &ВалютаСценарияПланирования=ОборотыБюджетовОбороты.Валюта ТОГДА ОборотыБюджетовОбороты.ВалютнаяСуммаОборот
			|			КОГДА &ВалютаСценарияПланирования<>&ВалютаУпрУчета И КурсыСценарияПлан.Курс <>0 И КурсыУпрУчета.Курс <>0 ТОГДА
			|				ОборотыБюджетовОбороты.СуммаУпрОборот*КурсыУпрУчета.Курс * КурсыСценарияПлан.Кратность 
			|				/ (КурсыСценарияПлан.Курс * КурсыУпрУчета.Кратность)
			|		ИНАЧЕ
			|			0
			|		КОНЕЦ КАК ЧИСЛО (15,2)) * ВЫБОР КОГДА ГраницыЗначений.ВидОтклоненияКонтролируемыхЗначений = ЗНАЧЕНИЕ(Перечисление.фин_ВидыОтклоненийКонтролируемыхЗначенийБюджетов.Относительное) ТОГДА 1+ ГраницыЗначений.Отклонение/100 ИНАЧЕ 1 КОНЕЦ
			|		+ ВЫБОР КОГДА ГраницыЗначений.ВидОтклоненияКонтролируемыхЗначений = ЗНАЧЕНИЕ(Перечисление.фин_ВидыОтклоненийКонтролируемыхЗначенийБюджетов.Абсолютное) ТОГДА ГраницыЗначений.Отклонение ИНАЧЕ 0 КОНЕЦ КАК СуммаСценарияКонтроль";
			
			//Если Реквизиты.ВидОтклоненияКонтролируемыхЗначений=Перечисления.фин_ВидыОтклоненийКонтролируемыхЗначенийБюджетов.Абсолютное Тогда
			//	ТекстЗапроса=ТекстЗапроса+" + &Отклонение КАК СуммаСценарияКонтроль";
			//Иначе
			//	ТекстЗапроса=ТекстЗапроса+"*&Отклонение КАК СуммаСценарияКонтроль";
			//КонецЕсли;
			
			ТекстЗапроса=ТекстЗапроса+"
			|ИЗ
			|	РегистрНакопления.фин_ОборотыБюджетов.Обороты(,,,ПериодПланирования >=&ДатаНач"+НомерСтрокой+" И ПериодПланирования <=&ДатаКон"+НомерСтрокой+" И Сценарий=&КонтролирующийСценарий"+ТекстУсловия+") КАК ОборотыБюджетовОбороты	
			|ЛЕВОЕ СОЕДИНЕНИЕ Документ.фин_УстановкаЛимитовИЦелевыхЗначений.ГраницыЗначений КАК ГраницыЗначений
			|	ПО ГраницыЗначений.Ссылка = &Ссылка И ГраницыЗначений.НомерСтроки = "+Формат(Инд,"ЧГ=")+"
			// Курсы валюты упр. учета
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КурсыУпрУчета КАК КурсыУпрУчета 
			|	ПО КурсыУпрУчета.Дата = ОборотыБюджетовОбороты.ПериодПланирования
			// Курсы сценария планирования
			|ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КурсыСценарияПлан КАК КурсыСценарияПлан 
			|ПО КурсыСценарияПлан.Дата = ОборотыБюджетовОбороты.ПериодПланирования
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НастройкиРегулярногоКонтроляПоказателей КАК НастройкиРегулярногоКонтроля
			|		ПО ОборотыБюджетовОбороты.ФинансовыйПоказатель = НастройкиРегулярногоКонтроля.ФинансовыйПоказатель
			| ГДЕ ЕСТЬNULL(НастройкиРегулярногоКонтроля.ПрименятьКонтроль, ЛОЖЬ) = ЛОЖЬ";
		КонецЦикла;
		
		ТекстЗапроса = ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();
		НомераТаблиц.Вставить("ВТ_НастройкиРегулярногоКонтроляПоказателей", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВТ_ПериодыРегистра",  						НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВТ_КурсыСценарияПлан",  						НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВТ_КурсыУпрУчета",  							НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ТаблицаОборотов",  							НомераТаблиц.Количество());
	КонецЕсли;
	Возврат ТекстЗапроса;
КонецФункции 

Функция ТекстЗапросаГраницыЗначений(НомераТаблиц,ПараметрыПроведения, Реквизиты)  Экспорт

	ТекстЗапроса = "";
	
	Если НЕ Реквизиты["ЕстьГраницыЗначений"] Тогда
		ПараметрыПроведения.Вставить("ТаблицаГраницыЗначений", Неопределено);
	Иначе
		ТекстЗапроса = 		"ВЫБРАТЬ
		               		|	ГраницыЗначений.Ссылка,"+?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("БюджетированиеПоОрганизациям"),"
							|	ГраницыЗначений.Ссылка.Организация КАК Организация,","ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,")+"
		               		|	ГраницыЗначений.НомерСтроки,
		               		|	ГраницыЗначений.Период,
		               		|	ГраницыЗначений.ФинансовыйПоказатель,
		               		|	ГраницыЗначений.УправленческоеПодразделение,
		               		|	ГраницыЗначений.Проект,
		               		|	ГраницыЗначений.Контрагент,
		               		|	ГраницыЗначений.Номенклатура,
		               		|	ГраницыЗначений.ВидОтклоненияКонтролируемыхЗначений,
		               		|	ГраницыЗначений.Отклонение,
		               		|	ГраницыЗначений.СуммаСценарияКонтроль,
		               		|	ГраницыЗначений.Разрез1,
		               		|	ГраницыЗначений.Разрез10,
		               		|	ГраницыЗначений.Разрез2,
		               		|	ГраницыЗначений.Разрез3,
		               		|	ГраницыЗначений.Разрез4,
		               		|	ГраницыЗначений.Разрез5,
		               		|	ГраницыЗначений.Разрез6,
		               		|	ГраницыЗначений.Разрез7,
		               		|	ГраницыЗначений.Разрез8,
		               		|	ГраницыЗначений.Разрез9,
		               		|	ГраницыЗначений.ДополнительныеРазрезы,
		               		|	ГраницыЗначений.Ссылка.Сценарий,
		               		|	ГраницыЗначений.Ссылка.ИспользованиеКонтролируемыхЗначений КАК ИспользованиеКонтролируемогоЗначения,
		               		|	ГраницыЗначений.Ссылка.ВидКонтролируемыхЗначений КАК ВидКонтролируемогоЗначения,
		               		|	ГраницыЗначений.Период КАК ПериодПланирования
		               		|ИЗ
		               		|	Документ.фин_УстановкаЛимитовИЦелевыхЗначений.ГраницыЗначений КАК ГраницыЗначений
		               		|ГДЕ
		               		|	ГраницыЗначений.Ссылка = &Ссылка";

		ТекстЗапроса = ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();
		НомераТаблиц.Вставить("ТаблицаГраницыЗначений",  НомераТаблиц.Количество());
	КонецЕсли;
	
	Возврат ТекстЗапроса;	
КонецФункции 

Функция ТекстЗапросаТаблицаДанныеИсправляемыхДокументов(НомераТаблиц,ПараметрыПроведения, Реквизиты)  Экспорт
	
	ИмяНабораДвижений = ?(Реквизиты.ВидКонтролируемыхЗначений=Перечисления.фин_ВидыКонтролируемогоЗначенияБюджета.Ограничивающее,"фин_КонтролируемыеФинансовыеПоказатели","фин_ЦелевыеЗначенияПоБюджетам");

	ТекстЗапроса = 		"ВЫБРАТЬ
			|	фин_ЦелевыеЗначенияПоБюджетам.Сценарий,
			|	фин_ЦелевыеЗначенияПоБюджетам.ФинансовыйПоказатель,
			|	фин_ЦелевыеЗначенияПоБюджетам.УправленческоеПодразделение,
			|	фин_ЦелевыеЗначенияПоБюджетам.Проект,
			|	фин_ЦелевыеЗначенияПоБюджетам.Контрагент,
			|	фин_ЦелевыеЗначенияПоБюджетам.Номенклатура,
			|	фин_ЦелевыеЗначенияПоБюджетам.Организация,
			|	фин_ЦелевыеЗначенияПоБюджетам.ДополнительныеРазрезы,
			|	фин_ЦелевыеЗначенияПоБюджетам.КонтролирующийСценарий,
			|	фин_ЦелевыеЗначенияПоБюджетам.ИспользованиеКонтролируемогоЗначения,
			|	СУММА(фин_ЦелевыеЗначенияПоБюджетам.СуммаСценарияКонтроль) КАК СуммаСценарияКонтроль,
			|	фин_ЦелевыеЗначенияПоБюджетам.ПериодПланирования
			|ИЗ
			|	"+?(Реквизиты.ВидКонтролируемыхЗначений=Перечисления.фин_ВидыКонтролируемогоЗначенияБюджета.Ограничивающее,"РегистрНакопления","РегистрСведений")+"."+ИмяНабораДвижений+" КАК фин_ЦелевыеЗначенияПоБюджетам
			|ГДЕ
			|	фин_ЦелевыеЗначенияПоБюджетам.Регистратор В(&ИсправляемыеДокументы)
			|
			|СГРУППИРОВАТЬ ПО
			|	фин_ЦелевыеЗначенияПоБюджетам.Проект,
			|	фин_ЦелевыеЗначенияПоБюджетам.Контрагент,
			|	фин_ЦелевыеЗначенияПоБюджетам.ДополнительныеРазрезы,
			|	фин_ЦелевыеЗначенияПоБюджетам.ИспользованиеКонтролируемогоЗначения,
			|	фин_ЦелевыеЗначенияПоБюджетам.Номенклатура,
			|	фин_ЦелевыеЗначенияПоБюджетам.УправленческоеПодразделение,
			|	фин_ЦелевыеЗначенияПоБюджетам.ФинансовыйПоказатель,
			|	фин_ЦелевыеЗначенияПоБюджетам.КонтролирующийСценарий,
			|	фин_ЦелевыеЗначенияПоБюджетам.Сценарий,
			|	фин_ЦелевыеЗначенияПоБюджетам.Организация,
			|	фин_ЦелевыеЗначенияПоБюджетам.ПериодПланирования";

	ТекстЗапроса = ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();
	НомераТаблиц.Вставить("ТаблицаДанныеИсправляемыхДокументов",  НомераТаблиц.Количество());
	
	Возврат ТекстЗапроса;	
КонецФункции 



////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Прочие служебные процедуры и функции


#КонецЕсли