
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ДокументПриСозданииНаСервере(ЭтотОбъект);
	
	ПодготовитьФормуНаСервере();
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ДокументПриЧтенииНаСервере(ЭтотОбъект,ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_фин_РасчетКоэффициентовЭффективностиРаботыОтветственныхБюджетногоПроцесса", ПараметрыЗаписи, Объект.Ссылка);	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	общ_ОбщегоНазначенияКлиент.ОбработкаОповещенияФормыДокумента(ЭтотОбъект, Объект.Ссылка, ИмяСобытия, Параметр, Источник);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры


&НаКлиенте
Процедура НадписьПериодПланированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораПериодаПланирования",ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.фин_ВыборБюджетногоПериода",Новый Структура("НачалоПериодаПланирования,КонецПериодаПланирования,Периодичность,РазрешитьПроизвольныйПериод",Объект.ПериодПланирования,ГоризонтПланирования,Объект.Сценарий,Ложь),ЭтотОбъект,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещения);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ <>



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	Если НЕ фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ТекущаяДатаДокумента = Объект.Дата;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Если НЕ (ЗначениеЗаполнено(Параметры.ЗначениеКопирования) ИЛИ ЗначениеЗаполнено(Параметры.Основание)) Тогда
			// по умолчанию при распределении учитываются все возможные показатели
   			Объект.ПериодПланирования = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(ТекущаяДата(),Объект.Сценарий);

		КонецЕсли;
		
	КонецЕсли;
	мПериод = Объект.ПериодПланирования;
	фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.УстановитьГоризонтПланированияИПредставлениеБюджетногоПериода(НадписьПериодПланирования,ГоризонтПланирования,Объект.ПериодПланирования,Объект.Сценарий);
	
	НадписьРасчетКоэффициентов = "Расчет коэффициентов";
	НадписьПараметрыПланирования = "Параметры оцениваемых планов";
	
	УправлениеФормой(ЭтотОбъект);
	НастроитьУсловноеОформление();
	
КонецПроцедуры 

&НаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ПродолжительностьЦикла = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьПродолжительностьЦикла(Объект.Сценарий);
	Элементы.РасчетКоэффициентовПериодПланирования.Видимость = (ПродолжительностьЦикла>1);
    мФормат = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьФормат(Объект.Сценарий);
	Элементы.РасчетКоэффициентовПериодПланирования.Формат = мФормат;
	Элементы.РасчетКоэффициентовПериодПланирования.ФорматРедактирования = мФормат;
	
КонецПроцедуры



//////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ


&НаСервере
Процедура НастроитьУсловноеОформление()
	УсловноеОформление.Элементы.Очистить();
	СписокДоступныхПериодов = СписокПериодов();
	Для Каждого ДоступныйПериод Из СписокДоступныхПериодов Цикл
		НовыйЭлементОформления = УсловноеОформление.Элементы.Добавить();
		НовыйЭлементОформления.Использование=Истина;
		ОтборЭлемент = НовыйЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемент.ПравоеЗначение = ДоступныйПериод.Значение;
		ОтборЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.РасчетКоэффициентов.ПериодПланирования");
		ПолеОформления = НовыйЭлементОформления.Поля.Элементы.Добавить();
		ПолеОформления.Использование=Истина;
		ПолеОформления.Поле=Новый ПолеКомпоновкиДанных("РасчетКоэффициентовПериодПланирования");
		НовыйЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст",ДоступныйПериод.Представление);
	КонецЦикла;
КонецПроцедуры
                                                                
&НаСервере
Функция СписокПериодов()
	Возврат фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.СписокПериодовВШаге(Объект.ПериодПланирования,Объект.Сценарий);
КонецФункции


//////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОЙ ЧАСТИ "Товары"

&НаКлиенте
Процедура РасчетКоэффициентовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Копирование Тогда
		Элементы.РасчетКоэффициентов.ТекущиеДанные.ПериодПланирования = Объект.ПериодПланирования;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РасчетКоэффициентовПериодПланированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокПериодов();
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	ПриИзмененииСценария();
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииСценария()
   	Объект.ПериодПланирования = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(Объект.ПериодПланирования,Объект.Сценарий);
	МассивТЧ = Новый Массив;
	МассивТЧ.Добавить("РасчетКоэффициентов");
	Для Каждого ТЧ ИЗ МассивТЧ Цикл
		Для Каждого СтрокаТЧ Из Объект[ТЧ] Цикл
			СтрокаТЧ.ПериодПланирования = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(СтрокаТЧ.ПериодПланирования,Объект.Сценарий);
		КонецЦикла;
	КонецЦикла;
	фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.УстановитьГоризонтПланированияИПредставлениеБюджетногоПериода(НадписьПериодПланирования,ГоризонтПланирования,Объект.ПериодПланирования,Объект.Сценарий);
	Для Каждого ТЧ ИЗ МассивТЧ Цикл
		Для Каждого СтрокаТЧ Из Объект[ТЧ] Цикл
			СтрокаТЧ.ПериодПланирования = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(СтрокаТЧ.ПериодПланирования,Объект.Сценарий);
			Если СтрокаТЧ.ПериодПланирования<Объект.ПериодПланирования Тогда
				СтрокаТЧ.ПериодПланирования = Объект.ПериодПланирования;
			ИначеЕсли СтрокаТЧ.ПериодПланирования>ГоризонтПланирования Тогда
				СтрокаТЧ.ПериодПланирования = ГоризонтПланирования;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАБОТЫ С ПЛАНОВЫМ ПЕРИОДОМ


&НаСервере
Процедура ПриИзмененииПериода()
	Если мПериод<>Объект.ПериодПланирования Тогда
		ПериодПланирования = Объект.ПериодПланирования;
		МассивТЧ = Новый Массив;
		МассивТЧ.Добавить("РасчетКоэффициентов");
		Для Каждого ТЧ Из МассивТЧ Цикл
			фин_ПроцедурыМеханизмовБюджетирования.ПереносПериодовПланированияВТабличнойЧасти(Объект[ТЧ],Объект.Сценарий,ПериодПланирования,мПериод,ГоризонтПланирования);
		КонецЦикла;
		мПериод = Объект.ПериодПланирования;
		НастроитьУсловноеОформление();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьКоэффициенты(Команда)
	Если ПроверитьЗаполнение() Тогда
		ВыполнитьРасчет();
	Иначе
		ПоказатьПредупреждение(,"Для выполнения расчета заполните требуемые поля!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьРасчет()
	Документы.фин_РасчетКоэффициентовЭффективностиРаботыОтветственныхБюджетногоПроцесса.Рассчитать(Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораПериодаПланирования(РезультатВыбора,ДополнительныеПараметры) Экспорт
	Если РезультатВыбора<>Неопределено Тогда
		Модифицированность=Истина;
		Объект.ПериодПланирования = РезультатВыбора.НачалоПериода;
		фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.УстановитьГоризонтПланированияИПредставлениеБюджетногоПериода(НадписьПериодПланирования,ГоризонтПланирования,Объект.ПериодПланирования,Объект.Сценарий);
	КонецЕсли;
КонецПроцедуры
