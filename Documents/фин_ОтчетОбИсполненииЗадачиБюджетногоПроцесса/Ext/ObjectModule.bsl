#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


//Процедура ОбработкаПроведения
//
Процедура ОбработкаПроведения(Отказ, Режим)
	
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	фин_ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	ПараметрыПроведения = Документы.фин_ОтчетОбИсполненииЗадачиБюджетногоПроцесса.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	
	фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаГрафикПроцесса, Движения, Отказ,,,,"фин_КалендарныеПланыБюджетныхКампаний");	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив;
	БюджетированиеПоОрганизациям 	= фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("БюджетированиеПоОрганизациям");
	Если НЕ БюджетированиеПоОрганизациям Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Организация");
	КонецЕсли;
		
	фин_ЗаполнениеДокументов.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если НЕ Отказ Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_КалендарныеПланыБюджетныхКампаний.Исполнитель
		|ИЗ
		|	РегистрСведений.фин_КалендарныеПланыБюджетныхКампаний КАК фин_КалендарныеПланыБюджетныхКампаний
		|ГДЕ
		|	фин_КалендарныеПланыБюджетныхКампаний.КалендарныйПлан = &КалендарныйПлан
		|	И фин_КалендарныеПланыБюджетныхКампаний.Регистратор = &КалендарныйПлан
		|	И фин_КалендарныеПланыБюджетныхКампаний.Бюджет = &Бюджет
		|	И фин_КалендарныеПланыБюджетныхКампаний.ВидЗадачи = &ВидЗадачи
		|	И фин_КалендарныеПланыБюджетныхКампаний.УровеньДетализации = &УровеньДетализации
		|	И фин_КалендарныеПланыБюджетныхКампаний.Организация = &Организация
		|	И фин_КалендарныеПланыБюджетныхКампаний.ЭтапБюджетногоПроцесса = &ЭтапБюджетногоПроцесса
		|	И фин_КалендарныеПланыБюджетныхКампаний.Исполнитель = &Исполнитель";
		
		Запрос.УстановитьПараметр("КалендарныйПлан", 		КалендарныйПлан);
		Запрос.УстановитьПараметр("Бюджет", 				Бюджет);
		Запрос.УстановитьПараметр("ВидЗадачи", 				ВидЗадачи);
		Запрос.УстановитьПараметр("УровеньДетализации", 	?(ЗначениеЗаполнено(УровеньДетализации),УровеньДетализации,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПустоеЗначениеРазреза("Проект")));
		Запрос.УстановитьПараметр("Организация", 			Организация);
		Запрос.УстановитьПараметр("ЭтапБюджетногоПроцесса", ЭтапБюджетногоПроцесса);
		Запрос.УстановитьПараметр("Исполнитель", 			Исполнитель);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если НЕ ВыборкаДетальныеЗаписи.Следующий() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В составе задач указанного календарного плана не обнаружена задача с указанными параметрами:
			|	бюджет: "+Бюджет+"
			|	вид задачи: "+ВидЗадачи+"
			|	уровень детализации: "+УровеньДетализации+"
			|	организация: "+Организация+?(ПолучитьФункциональнуюОпцию("фин_СтруктурироватьБюджетныйПроцессПоЭтапам"),"
			|	этап бюджетного процесса: "+ЭтапБюджетногоПроцесса,"")+"
			|	исполнитель: "+Исполнитель,,,,Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
		
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура") 
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		Документы.фин_ОтчетОбИсполненииЗадачиБюджетногоПроцесса.ЗаполнитьПоДокументуОснованию(ЭтотОбъект, ДанныеЗаполнения);
		Возврат;
	ИначеЕсли ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения = Тип("Структура") Тогда
		Попытка
			Документы.фин_ОтчетОбИсполненииЗадачиБюджетногоПроцесса.ЗаполнитьПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
		Исключение
		КонецПопытки;
		Возврат;
	КонецЕсли;
	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект,фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"));
КонецПроцедуры

#КонецЕсли

