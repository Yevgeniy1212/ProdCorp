
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ДокументПриСозданииНаСервере(ЭтотОбъект);
	
	мПериодичностьРегламента = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПериодичностьФормированияБюджетногоРегламента");
	Если Не ЗначениеЗаполнено(мПериодичностьРегламента) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для работы с регламентом необходимо указать 
		|периодичность его формирования (в настройках параметров учета)!",,,,Отказ);
		Возврат;
	КонецЕсли;
	
	ПодготовитьФормуНаСервере();
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ДокументПриЧтенииНаСервере(ЭтотОбъект,ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Элементы.ФормаРедактировать.Пометка Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("РазрешенаЗапись");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_фин_БюджетныйРегламент", ПараметрыЗаписи, Объект.Ссылка);	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	общ_ОбщегоНазначенияКлиент.ОбработкаОповещенияФормыДокумента(ЭтотОбъект, Объект.Ссылка, ИмяСобытия, Параметр, Источник);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	Если НЕ фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	фин_ПроцедрыРаботыСОбъектамиПереопределяемый.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки


&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ТекущаяДатаДокумента = Объект.Дата;
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПризнакОтображенияСтруктурныхПодразделений();
		
	Если Объект.Ссылка.Пустая() Тогда
		
		Если НЕ (ЗначениеЗаполнено(Параметры.ЗначениеКопирования) ИЛИ ЗначениеЗаполнено(Параметры.Основание)) Тогда
			Объект.РасширенныйРежим = Истина;
		КонецЕсли;
		Объект.Состояние 		= фин_БюджетированиеОбщегоНазначения.СостояниеОбъектаПоУмолчанию();
		Объект.Дата 			= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(ТекущаяДата(),мПериодичностьРегламента);
		Объект.Ответственный	= фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ТекущийПользователь");
	ИначеЕсли Объект.Проведен Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	БюджетныйРегламент.Ссылка,
		|	БюджетныйРегламент.Дата
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.фин_БюджетныйРегламент КАК БюджетныйРегламент
		|ГДЕ
		|	БюджетныйРегламент.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БюджетныйРегламент.Дата КАК ДатаОкончания,
		|	ВТ_ДанныеДокумента.Дата КАК ДатаНачала
		|ПОМЕСТИТЬ ВТ_Границы
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.фин_БюджетныйРегламент КАК БюджетныйРегламент
		|		ПО ВТ_ДанныеДокумента.Ссылка <> БюджетныйРегламент.Ссылка
		|			И ВТ_ДанныеДокумента.Дата <= БюджетныйРегламент.Дата
		|			И (БюджетныйРегламент.Проведен)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Бюджет.Ссылка
		|ИЗ
		|	Документ.фин_Бюджет КАК Бюджет
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Границы КАК ВТ_Границы
		|		ПО Бюджет.Дата >= ВТ_Границы.ДатаНачала
		|			И (ВЫБОР
		|				КОГДА НЕ ВТ_Границы.ДатаОкончания ЕСТЬ NULL 
		|					ТОГДА Бюджет.Дата <= ВТ_Границы.ДатаОкончания
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|ГДЕ
		|	Бюджет.Проведен";
		Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
		РезультатЗапроса = Запрос.Выполнить();
		ТекстСообщения = "";
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ТолькоПросмотр = Истина;
			ТекстСообщения =ТекстСообщения +"
			|	- имеются бюджеты, использующие данный регламент;";
		КонецЕсли;
		
		Если ТекстСообщения <> "" Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ "+Объект.Ссылка+" открыт в режиме просмотра, так как:"+ТекстСообщения);
		КонецЕсли;
	
	КонецЕсли;
	
	Элементы.ГруппаСрокиРазработкиБюджетов.Видимость = Объект.РасширенныйРежим И ПолучитьФункциональнуюОпцию("фин_ВестиКалендарноеПланированиеБюджетногоПроцесса");
	
	Элементы.ГруппаКнопкиРасширенногоРежима.Видимость = Объект.РасширенныйРежим;
	Элементы.ГруппаДобавлениеВРасширенномРежиме.Видимость = Объект.РасширенныйРежим;
	Элементы.ГруппаКнопкиРасширенногоРежима1.Видимость = Объект.РасширенныйРежим;
	Элементы.ГруппаДобавлениеВРасширенномРежиме1.Видимость = Объект.РасширенныйРежим;
	Масштаб =10;
	мЦветЛинии = Новый Цвет(100,149,237); //василек
	мЦветТекста	= Новый Цвет(165,42,42); // коричневый
	мЦветБлока	= Новый Цвет(230,230,250); // лаванда
	
	// обработка доступности формы на основании данных согласования документов
	усд_УправлениеСогласованиемДокументов.ДоступностьРедактированияДокумента(ЭтотОбъект,Объект);
	Если НЕ РольДоступна("ПолныеПрава") Тогда
		Элементы.ФормаРедактировать.Видимость = Ложь;
	Иначе
		Элементы.ФормаРедактировать.Видимость = ТолькоПросмотр;
	КонецЕсли;
	ОбновитьПолеРегламента();
	
	Элементы.ФормаОткрытьНастройкуКомплекта.Видимость = Объект.ДляКомплектаБюджетов;
	
	УстановитьДоступностьКнопокУправления();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	
КонецПроцедуры


//обновляет графическое поле регламента
//
&НаСервере
Процедура ОбновитьПолеРегламента()
	Документы.фин_БюджетныйРегламент.ОбновитьПолеРегламента(Объект,Регламент,мЦветБлока,мЦветТекста,мЦветЛинии,Объект.Масштаб);
КонецПроцедуры //ОбновитьПолеРегламента

&НаКлиенте
Процедура Вверх(Команда)
	Если Объект.РасширенныйРежим Тогда
		ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
		Если ПараметрыТекущегоБюджета = Неопределено Тогда
			ПоказатьПредупреждение(,"Не выбран бюджет!");
		ИначеЕсли ПараметрыТекущегоБюджета.Ранг = 1 Тогда
			ПоказатьПредупреждение(,"Бюджет находится на самой верхней строке (уровне) регламента!");
		ИначеЕсли Объект.Регламент.НайтиСтроки(Новый Структура("Ранг,Ячейка",ПараметрыТекущегоБюджета.Ранг - 1,ПараметрыТекущегоБюджета.Ячейка)).Количество()>0 Тогда
			ПоказатьПредупреждение(,"Невозможно переместить бюджет, т.к. предполагаемое место размещения занято бюджетом """+Объект.Регламент.НайтиСтроки(Новый Структура("Ранг,Ячейка",ПараметрыТекущегоБюджета.Ранг - 1,ПараметрыТекущегоБюджета.Ячейка))[0].Бюджет+"""!");
		Иначе
			Бюджет = ПараметрыТекущегоБюджета.Бюджет;
			Ошибки = "";
			ТекущиеСтроки = Объект.ПредшествующиеБюджеты.НайтиСтроки(Новый Структура("Бюджет",Бюджет));
			Для Каждого СтрокаПредшествующий Из ТекущиеСтроки Цикл
				СтрокиРегламента = Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",СтрокаПредшествующий.Предшественник));
				Если СтрокиРегламента.Количество()>0 Тогда
					Если СтрокиРегламента[0].Ранг >= ПараметрыТекущегоБюджета.Ранг - 1 Тогда
						Ошибки = Ошибки+Символы.ПС+" - бюджет """+СтрокаПредшествующий.Предшественник+""" будет исключен из списка предшествующих, т.к. не может находиться на одном уровне или позже текущего";
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если Ошибки = "" Тогда
				ОбработатьПеремещениеВышеПоРегламенту(КодВозвратаДиалога.ОК,Бюджет);
			Иначе
				ОписаниеОтветаНаВопросПеремещениеВышеПоРегламенту = Новый ОписаниеОповещения("ОбработатьПеремещениеВышеПоРегламенту",ЭтотОбъект,Бюджет);
				ПоказатьВопрос(ОписаниеОтветаНаВопросПеремещениеВышеПоРегламенту,"При продолжении будут исправлены следующие конфликты:"+Ошибки+Символы.ПС+"Продолжить?",РежимДиалогаВопрос.ОКОтмена);
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекущиеОбласти = Регламент.ВыделенныеОбласти;
		Для Каждого Область Из ТекущиеОбласти Цикл
			Если ТипЗнч(Область)=Тип("РисунокТабличногоДокумента") 
				И Область.ТипРисунка= ТипРисункаТабличногоДокумента.Текст
				И ЗначениеЗаполнено(Область.Значение) 
				И ТипЗнч(Область.Значение)=Тип("СправочникСсылка.фин_Бюджеты") Тогда
				ПеремещаемыйБюджет = Область.Значение;  // бюджет
				ТекущиеСтроки = Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",ПеремещаемыйБюджет));
				ТекущиеСтроки[0].Ранг = ТекущиеСтроки[0].Ранг - 1;
				ОбработкаРанга();
				ОбновитьПолеРегламента();
				Возврат;
			КонецЕсли;
		КонецЦикла;
		ПоказатьПредупреждение(,"Не выбран бюджет!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПеремещениеВышеПоРегламенту(Результат,Бюджет) Экспорт
	Если Результат= КодВозвратаДиалога.ОК Тогда
		СтрокиРегламента = Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",Бюджет));
		Если СтрокиРегламента.Количество()>0 Тогда
			СтрокиРегламента[0].Ранг = СтрокиРегламента[0].Ранг - 1;
			КонфликтныеСтроки = Объект.ПредшествующиеБюджеты.НайтиСтроки(Новый Структура("Бюджет",Бюджет));
			Для Каждого СтрокаПредшествующий Из КонфликтныеСтроки Цикл
				СтрокиРегламентаДляКонфликтных = Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",СтрокаПредшествующий.Предшественник));
				Если СтрокиРегламентаДляКонфликтных.Количество()>0 Тогда
					Если СтрокиРегламентаДляКонфликтных[0].Ранг >= СтрокиРегламента[0].Ранг Тогда
						Объект.ПредшествующиеБюджеты.Удалить(СтрокаПредшествующий);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ОбновитьПолеРегламента();
		АктивизироватьОбласть(Бюджет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Вниз(Команда)
	Если Объект.РасширенныйРежим Тогда
		ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
		Если ПараметрыТекущегоБюджета = Неопределено Тогда
			ПоказатьПредупреждение(,"Не выбран бюджет!");
		ИначеЕсли Объект.Регламент.НайтиСтроки(Новый Структура("Ранг,Ячейка",ПараметрыТекущегоБюджета.Ранг + 1,ПараметрыТекущегоБюджета.Ячейка)).Количество()>0 Тогда
			ПоказатьПредупреждение(,"Невозможно переместить бюджет, т.к. предполагаемое место размещения занято бюджетом """+Объект.Регламент.НайтиСтроки(Новый Структура("Ранг,Ячейка",ПараметрыТекущегоБюджета.Ранг + 1,ПараметрыТекущегоБюджета.Ячейка))[0].Бюджет+"""!");
		Иначе
			Бюджет = ПараметрыТекущегоБюджета.Бюджет;
			Ошибки = "";
			ТекущиеСтроки = Объект.ПредшествующиеБюджеты.НайтиСтроки(Новый Структура("Предшественник",Бюджет));
			Для Каждого СтрокаПредшествующий Из ТекущиеСтроки Цикл
				СтрокиРегламента = Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",СтрокаПредшествующий.Бюджет));
				Если СтрокиРегламента.Количество()>0 Тогда
					Если СтрокиРегламента[0].Ранг <= ПараметрыТекущегоБюджета.Ранг + 1 Тогда
						Ошибки = Ошибки+Символы.ПС+" - бюджет будет исключен из списка предшествующих для """+СтрокаПредшествующий.Бюджет+""", т.к. не может находиться на одном уровне или позже него";
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если Ошибки = "" Тогда
				ОбработатьПеремещениеНижеПоРегламенту(КодВозвратаДиалога.ОК,Бюджет);
			Иначе
				ОписаниеОтветаНаВопросПеремещениеНижеПоРегламенту = Новый ОписаниеОповещения("ОбработатьПеремещениеНижеПоРегламенту",ЭтотОбъект,Бюджет);
				ПоказатьВопрос(ОписаниеОтветаНаВопросПеремещениеНижеПоРегламенту,"При продолжении будут исправлены следующие конфликты:"+Ошибки+Символы.ПС+"Продолжить?",РежимДиалогаВопрос.ОКОтмена);
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекущиеОбласти = Регламент.ВыделенныеОбласти;
		Для Каждого Область Из ТекущиеОбласти Цикл
			Если ТипЗнч(Область)=Тип("РисунокТабличногоДокумента") 
				И Область.ТипРисунка= ТипРисункаТабличногоДокумента.Текст
				И ЗначениеЗаполнено(Область.Значение) 
				И ТипЗнч(Область.Значение)=Тип("СправочникСсылка.фин_Бюджеты") Тогда
				ПеремещаемыйБюджет = Область.Значение;     // бюджет
				ТекущиеСтроки = Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",ПеремещаемыйБюджет));
				ТекущиеСтроки[0].Ранг = ТекущиеСтроки[0].Ранг + 1;
				ОбработкаРанга();
				ОбновитьПолеРегламента();
				Возврат;
			КонецЕсли;
		КонецЦикла;
		ПоказатьПредупреждение(,"Не выбран бюджет!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПеремещениеНижеПоРегламенту(Результат,Бюджет) Экспорт
	Если Результат= КодВозвратаДиалога.ОК Тогда
		СтрокиРегламента = Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",Бюджет));
		Если СтрокиРегламента.Количество()>0 Тогда
			СтрокиРегламента[0].Ранг = СтрокиРегламента[0].Ранг + 1;
			КонфликтныеСтроки = Объект.ПредшествующиеБюджеты.НайтиСтроки(Новый Структура("Предшественник",Бюджет));
			Для Каждого СтрокаПредшествующий Из КонфликтныеСтроки Цикл
				СтрокиРегламентаДляКонфликтных = Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",СтрокаПредшествующий.Бюджет));
				Если СтрокиРегламентаДляКонфликтных.Количество()>0 Тогда
					Если СтрокиРегламентаДляКонфликтных[0].Ранг <= СтрокиРегламента[0].Ранг Тогда
						Объект.ПредшествующиеБюджеты.Удалить(СтрокаПредшествующий);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ОбновитьПолеРегламента();
		АктивизироватьОбласть(Бюджет);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаРанга()
	СписокРангов = Объект.Регламент.Выгрузить();
	СписокРангов.Свернуть("Ранг");
	СписокРангов.Сортировать("Ранг");
	КоличествоРангов = СписокРангов.Количество();
	ТекущийРанг=1;
	Для Каждого СтрокаРанг Из СписокРангов Цикл
		СтрокиРанга = Объект.Регламент.НайтиСтроки(Новый Структура("Ранг",СтрокаРанг.Ранг));
		Для Каждого СтрокаТаблицы Из СтрокиРанга Цикл
			 СтрокаТаблицы.РангКУстановке = ТекущийРанг;
		КонецЦикла;
		ТекущийРанг=ТекущийРанг+1;
	КонецЦикла;
	Для Каждого СтрокаРегламента Из Объект.Регламент Цикл
		СтрокаРегламента.Ранг = СтрокаРегламента.РангКУстановке;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	Если Объект.РасширенныйРежим Тогда
		ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
		Если ПараметрыТекущегоБюджета = Неопределено Тогда
			ПоказатьПредупреждение(,"Не выбран бюджет!");
		Иначе
			Бюджет = ПараметрыТекущегоБюджета.Бюджет;
			ТекущиеСтроки = Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",Бюджет));
			Для Каждого СтрокаРегламент Из ТекущиеСтроки Цикл
				 Объект.Регламент.Удалить(СтрокаРегламент);
			КонецЦикла;
			ТекущиеСтроки = Объект.ПредшествующиеБюджеты.НайтиСтроки(Новый Структура("Бюджет",Бюджет));
			Для Каждого СтрокаРегламент Из ТекущиеСтроки Цикл
				 Объект.ПредшествующиеБюджеты.Удалить(СтрокаРегламент);
			КонецЦикла;
			ТекущиеСтроки = Объект.ПредшествующиеБюджеты.НайтиСтроки(Новый Структура("Предшественник",Бюджет));
			Для Каждого СтрокаРегламент Из ТекущиеСтроки Цикл
				 Объект.ПредшествующиеБюджеты.Удалить(СтрокаРегламент);
			КонецЦикла;
			ОбновитьПолеРегламента();
		КонецЕсли;
	Иначе
		ТекущиеОбласти = Регламент.ВыделенныеОбласти;
		Для Каждого Область Из ТекущиеОбласти Цикл
			Если ТипЗнч(Область)=Тип("РисунокТабличногоДокумента") И Область.ТипРисунка= ТипРисункаТабличногоДокумента.Текст
				И ЗначениеЗаполнено(Область.Значение) И ТипЗнч(Область.Значение)=Тип("СправочникСсылка.фин_Бюджеты") Тогда
				ПеремещаемыйБюджет = Область.Значение;     // бюджет
				ТекущиеСтроки = Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",ПеремещаемыйБюджет));
				Для Каждого СтрокаРегламент Из ТекущиеСтроки Цикл
					 Объект.Регламент.Удалить(СтрокаРегламент);
				КонецЦикла;
				ОбработкаРанга();
				ОбновитьПолеРегламента();
				Возврат;
			КонецЕсли;
		КонецЦикла;
		ПоказатьПредупреждение(,"Не выбран бюджет!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Добавить(Команда)
	Если Объект.РасширенныйРежим Тогда
		Адрес = ПолучитьАдресДанных();
		ПараметрыДобавления 		= Новый Структура("РежимДобавления,Адрес",Истина,Адрес);
		ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
		Если ПараметрыТекущегоБюджета <> Неопределено Тогда
			ПараметрыДобавления.Вставить("Ранг",ПараметрыТекущегоБюджета.Ранг+1);
			ПараметрыДобавления.Вставить("Ячейка",ПараметрыТекущегоБюджета.Ячейка);
			ПараметрыДобавления.Вставить("ПоЦентру",ПараметрыТекущегоБюджета.ПоЦентру);
		КонецЕсли;
		ОписаниеОповещенияВыбораБюджета = Новый ОписаниеОповещения("ОбработатьРедактированиеБюджета",ЭтотОбъект,ПараметрыТекущегоБюджета);
		ОткрытьФорму("Документ.фин_БюджетныйРегламент.Форма.ФормаДобавленияБюджета",ПараметрыДобавления,Элементы.Добавить,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещенияВыбораБюджета,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		СписокИспользованных = ПолучитьСписокИспользованных();
		ОписаниеОповещенияВыбораБюджета = Новый ОписаниеОповещения("ДобавитьНаСервере",ЭтотОбъект);
		ОткрытьФорму("Справочник.фин_Бюджеты.ФормаВыбора",Новый Структура("ЗначениеОтбора,ВидОтбора",СписокИспользованных,"НеВСписке"),Элементы.Добавить,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещенияВыбораБюджета,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРедактированиеБюджета(Результат,ДополнительныеПараметры) Экспорт
	Если Результат<>Неопределено Тогда
		Бюджет = ОбработатьРедактированиеБюджетаНаСервере(Результат,ДополнительныеПараметры);
		АктивизироватьОбласть(Бюджет);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ОбработатьРедактированиеБюджетаНаСервере(Результат,ДополнительныеПараметры)
	ДанныеХранилища = ПолучитьИзВременногоХранилища(Адрес);
	Если ДанныеХранилища.РежимДобавления Тогда
		СтрокаРегламент = Объект.Регламент.Добавить();
	Иначе
		СтрокиРегламент = Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",ДанныеХранилища.Бюджет));
		Если СтрокиРегламент.Количество()=0 Тогда
			СтрокаРегламент = Объект.Регламент.Добавить();
		Иначе
			СтрокаРегламент = СтрокиРегламент[0];
		КонецЕсли;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(СтрокаРегламент,ДанныеХранилища);
	Если ПолучитьФункциональнуюОпцию("фин_ВестиКалендарноеПланированиеБюджетногоПроцесса") Тогда
		СтрокиСроков = Объект.СрокиРазработкиБюджетов.НайтиСтроки(Новый Структура("Бюджет",ДанныеХранилища.Бюджет));
		Если СтрокиСроков.Количество()=0 Тогда
			СтрокаСроков = Объект.СрокиРазработкиБюджетов.Добавить();
			СтрокаСроков.Бюджет = ДанныеХранилища.Бюджет;
		Иначе
			СтрокаСроков = СтрокиСроков[0];
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СтрокаСроков,ДанныеХранилища);
	КонецЕсли;
	СтрокиПредшественники = Объект.ПредшествующиеБюджеты.НайтиСтроки(Новый Структура("Бюджет",СтрокаРегламент.Бюджет));
	Для Каждого СтрокаПредшественник Из СтрокиПредшественники Цикл
		Объект.ПредшествующиеБюджеты.Удалить(СтрокаПредшественник);
	КонецЦикла;
	Для Каждого СтрокаПредшественник Из ДанныеХранилища.ПредшествующиеБюджеты Цикл
		НС = Объект.ПредшествующиеБюджеты.Добавить();
		ЗаполнитьЗначенияСвойств(НС,СтрокаПредшественник);
		НС.Бюджет = СтрокаРегламент.Бюджет;
	КонецЦикла;
	ОбновитьПолеРегламента();
	Возврат СтрокаРегламент.Бюджет;
КонецФункции

&НаСервере
Функция ПолучитьАдресДанных()
	СтруктураДанных = Новый Структура("Регламент,ПредшествующиеБюджеты",Объект.Регламент.Выгрузить(),Объект.ПредшествующиеБюджеты.Выгрузить());	
	Возврат ПоместитьВоВременноеХранилище(СтруктураДанных,УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Функция ПолучитьПараметрыАктивногоБюджета()
	ТекущиеОбласти = Регламент.ВыделенныеОбласти;
	ТекущийРанг = Неопределено;
	Для Каждого Область Из ТекущиеОбласти Цикл
		Если ТипЗнч(Область)=Тип("РисунокТабличногоДокумента") И Область.ТипРисунка= ТипРисункаТабличногоДокумента.Текст
			И ЗначениеЗаполнено(Область.Значение) И ТипЗнч(Область.Значение)=Тип("СправочникСсылка.фин_Бюджеты") Тогда
			Бюджет = Область.Значение;     // бюджет
			ТекущиеСтроки 	= Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",Бюджет));
			ТекущийРанг 	=  ТекущиеСтроки[0].Ранг;
			Ячейка 			=  ТекущиеСтроки[0].Ячейка;
			ПоЦентру 		=  ТекущиеСтроки[0].ПоЦентру;
			Возврат Новый Структура("Бюджет,Ранг,Ячейка,ПоЦентру",Бюджет,ТекущийРанг,Ячейка,ПоЦентру);
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

&НаСервере
Функция ПолучитьСписокИспользованных()
	СписокИспользованных = Новый СписокЗначений;
	СписокИспользованных.ЗагрузитьЗначения(Объект.Регламент.Выгрузить(,"Бюджет").ВыгрузитьКолонку("Бюджет"));
	Возврат СписокИспользованных;
КонецФункции

&НаСервере
Процедура ДобавитьНаСервере(Значение,ДополнительныеПараметры)
	Если Значение=Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущиеОбласти = Регламент.ВыделенныеОбласти;
	ТекущийРанг = Неопределено;
	Для Каждого Область Из ТекущиеОбласти Цикл
		Если ТипЗнч(Область)=Тип("РисунокТабличногоДокумента") И Область.ТипРисунка= ТипРисункаТабличногоДокумента.Текст
			И ЗначениеЗаполнено(Область.Значение) И ТипЗнч(Область.Значение)=Тип("СправочникСсылка.фин_Бюджеты") Тогда
			ПеремещаемыйБюджет = Область.Значение;     // бюджет
			ТекущиеСтроки = Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",ПеремещаемыйБюджет));
			ТекущийРанг =  ТекущиеСтроки[0].Ранг;
		КонецЕсли;
	КонецЦикла;
	
	СписокРангов = Объект.Регламент.Выгрузить();
	СписокРангов.Свернуть("Ранг");
	СписокРангов.Сортировать("Ранг");
	КоличествоРангов = СписокРангов.Количество();
	Если ТекущийРанг = Неопределено Тогда
		Если КоличествоРангов = 0 Тогда
			ТекущийРанг = 1;
		Иначе
			ТекущийРанг = СписокРангов[СписокРангов.Количество()-1].Ранг+1;
		КонецЕсли;
	КонецЕсли;
	СтрокаБюджета = Объект.Регламент.Добавить();
	СтрокаБюджета.Ранг = ТекущийРанг;
	СтрокаБюджета.Бюджет = Значение;
	СписокРангов = Объект.Регламент.Выгрузить();
	СписокРангов.Свернуть("Ранг");
	СписокРангов.Сортировать("Ранг");
	КоличествоРангов = СписокРангов.Количество();
	ТекущийРанг=1;
	Для Каждого СтрокаРанг Из СписокРангов Цикл
		СтрокиРанга = Объект.Регламент.НайтиСтроки(Новый Структура("Ранг",СтрокаРанг.Ранг));
		Для Каждого СтрокаТаблицы Из СтрокиРанга Цикл
			СтрокаТаблицы.РангКУстановке = ТекущийРанг;
		КонецЦикла;
		ТекущийРанг=ТекущийРанг+1;
	КонецЦикла;
	Для Каждого СтрокаРегламента Из Объект.Регламент Цикл
		СтрокаРегламента.Ранг = СтрокаРегламента.РангКУстановке;
	КонецЦикла;
	ОбновитьПолеРегламента();
КонецПроцедуры

&НаКлиенте
Процедура МасштабПриИзменении(Элемент)
	ОбновитьПолеРегламента();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРегламенту(Команда)
	ЗаполнитьПоРегламентуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоРегламентуНаСервере()
	
	Объект.Регламент.Очистить();
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_ПрименяемыеРегламентыФормированияБюджетовСрезПоследних.Регламент,
		|	фин_ПрименяемыеРегламентыФормированияБюджетовСрезПоследних.РасширенныйРежим
		|ИЗ
		|	РегистрСведений.фин_ПрименяемыеРегламентыФормированияБюджетов.СрезПоследних(&Дата, ) КАК фин_ПрименяемыеРегламентыФормированияБюджетовСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		АктуальныйРегламент = ВыборкаДетальныеЗаписи.Регламент;
		ВРасширенномРежиме = ВыборкаДетальныеЗаписи.РасширенныйРежим;
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_ВзаимосвязиБюджетовПоРегламенту.Регламент,
		|	фин_ВзаимосвязиБюджетовПоРегламенту.Бюджет,
		|	фин_ВзаимосвязиБюджетовПоРегламенту.Предшественник,
		|	фин_ВзаимосвязиБюджетовПоРегламенту.Обязательный
		|ИЗ
		|	РегистрСведений.фин_ВзаимосвязиБюджетовПоРегламенту КАК фин_ВзаимосвязиБюджетовПоРегламенту
		|ГДЕ
		|	фин_ВзаимосвязиБюджетовПоРегламенту.Регламент = &Регламент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	фин_РегламентФормированияБюджетов.Бюджет,
		|	фин_РегламентФормированияБюджетов.Ранг,
		|	фин_РегламентФормированияБюджетов.Ячейка,
		|	фин_РегламентФормированияБюджетов.ПоЦентру
		|ИЗ
		|	РегистрСведений.фин_РегламентФормированияБюджетов КАК фин_РегламентФормированияБюджетов
		|ГДЕ
		|	фин_РегламентФормированияБюджетов.Регламент = &Регламент";
	
	Запрос.УстановитьПараметр("Регламент", АктуальныйРегламент);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаПредшественников = РезультатЗапроса[0].Выгрузить();
	Объект.ПредшествующиеБюджеты.Загрузить(ТаблицаПредшественников);
	
	ВыборкаРегламент = РезультатЗапроса[1].Выбрать();
	Пока ВыборкаРегламент.Следующий() Цикл
		НоваяСтрока = Объект.Регламент.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаРегламент);
		Если НЕ ВРасширенномРежиме Тогда
			НоваяСтрока.Ячейка = Объект.Регламент.НайтиСтроки(Новый Структура("Ранг",НоваяСтрока.Ранг)).Количество();
		КонецЕсли;
	КонецЦикла;
	
	Объект.СрокиРазработкиБюджетов.Загрузить(АктуальныйРегламент.СрокиРазработкиБюджетов.Выгрузить());

	ОбновитьПолеРегламента();

КонецПроцедуры

&НаКлиенте
Процедура Анализ(Команда)
	ПоместитьРегламентВХранилище();
	ОткрытьФорму("Обработка.фин_КонтрольКорректностиНастроекБюджетнойСтруктуры.Форма",Новый Структура("СУчетомАктуальногоРегламента,Адрес",Истина,Адрес),ЭтотОбъект,УникальныйИдентификатор,?(фин_ОбщегоНазначенияКлиентПовтИсп.РежимОтдельногоОткрытияОкон(),ВариантОткрытияОкна.ОтдельноеОкно,Окно));
КонецПроцедуры

&НаСервере
Процедура ПоместитьРегламентВХранилище()
	Адрес = ПоместитьВоВременноеХранилище(Объект.Регламент.Выгрузить(),УникальныйИдентификатор);	
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	ИзмененияРедактированияНаСервере();
	//ЭтотОбъект.ДополнительныеСвойства.Вставить("РазрешенаЗапись");
КонецПроцедуры

&НаСервере
Процедура ИзмененияРедактированияНаСервере()
	Элементы.ФормаРедактировать.Пометка = Не Элементы.ФормаРедактировать.Пометка;
	ЭтотОбъект.ТолькоПросмотр = НЕ Элементы.ФормаРедактировать.Пометка;
	УстановитьДоступностьКнопокУправления();
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьКнопокУправления()
	Элементы.Вверх.Доступность 		= Не ЭтотОбъект.ТолькоПросмотр;
	Элементы.Вниз.Доступность 		= Не ЭтотОбъект.ТолькоПросмотр;
	Элементы.Добавить.Доступность 	= Не ЭтотОбъект.ТолькоПросмотр;
	Элементы.Удалить.Доступность 	= Не ЭтотОбъект.ТолькоПросмотр;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьПолеРегламента();
КонецПроцедуры

&НаКлиенте
Процедура ТолщинаЛинийПриИзменении(Элемент)
	ОбновитьПолеРегламента();
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьСвязиРазличнымиЦветамиПриИзменении(Элемент)
	ОбновитьПолеРегламента();
КонецПроцедуры

&НаКлиенте
Процедура Влево(Команда)
	ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
	Если ПараметрыТекущегоБюджета = Неопределено Тогда
		ПоказатьПредупреждение(,"Не выбран бюджет!");
	ИначеЕсли ПараметрыТекущегоБюджета.Ячейка = 1 Тогда
		ПоказатьПредупреждение(,"Бюджет находится в самом левом столбце регламента!");
	ИначеЕсли Объект.Регламент.НайтиСтроки(Новый Структура("Ранг,Ячейка",ПараметрыТекущегоБюджета.Ранг,ПараметрыТекущегоБюджета.Ячейка-1)).Количество()>0 Тогда
		ПоказатьПредупреждение(,"Невозможно переместить бюджет, т.к. предполагаемое место размещения занято бюджетом """+Объект.Регламент.НайтиСтроки(Новый Структура("Ранг,Ячейка",ПараметрыТекущегоБюджета.Ранг,ПараметрыТекущегоБюджета.Ячейка - 1))[0].Бюджет+"""!");
	Иначе
		Бюджет = ПараметрыТекущегоБюджета.Бюджет;
		СтрокиРегламента = Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",Бюджет));
		Если СтрокиРегламента.Количество()>0 Тогда
			СтрокиРегламента[0].Ячейка = СтрокиРегламента[0].Ячейка - 1;
		КонецЕсли;
		ОбновитьПолеРегламента();
		АктивизироватьОбласть(Бюджет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Вправо(Команда)
	ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
	Если ПараметрыТекущегоБюджета = Неопределено Тогда
		ПоказатьПредупреждение(,"Не выбран бюджет!");
	ИначеЕсли Объект.Регламент.НайтиСтроки(Новый Структура("Ранг,Ячейка",ПараметрыТекущегоБюджета.Ранг,ПараметрыТекущегоБюджета.Ячейка+1)).Количество()>0 Тогда
		ПоказатьПредупреждение(,"Невозможно переместить бюджет, т.к. предполагаемое место размещения занято бюджетом """+Объект.Регламент.НайтиСтроки(Новый Структура("Ранг,Ячейка",ПараметрыТекущегоБюджета.Ранг,ПараметрыТекущегоБюджета.Ячейка + 1))[0].Бюджет+"""!");
	Иначе
		Бюджет = ПараметрыТекущегоБюджета.Бюджет;
		СтрокиРегламента = Объект.Регламент.НайтиСтроки(Новый Структура("Бюджет",Бюджет));
		Если СтрокиРегламента.Количество()>0 Тогда
			СтрокиРегламента[0].Ячейка = СтрокиРегламента[0].Ячейка + 1;
		КонецЕсли;
		ОбновитьПолеРегламента();
		АктивизироватьОбласть(Бюджет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АктивизироватьОбласть(Бюджет)
	Регламент.ТекущаяОбласть = Регламент.НайтиЗначение(Бюджет);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСлева(Команда)
	ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
	Если ПараметрыТекущегоБюджета = Неопределено Тогда
		ПоказатьПредупреждение(,"Не выбран бюджет!");
	ИначеЕсли ПараметрыТекущегоБюджета.Ячейка = 1 Тогда
		ПоказатьПредупреждение(,"Невозможно вставить элемент левее текущего, т.к. выбранный бюджет находится в самом левом столбце регламента!");
	Иначе
		Ячейка = ПараметрыТекущегоБюджета.Ячейка-1;
		Пока Объект.Регламент.НайтиСтроки(Новый Структура("Ранг,Ячейка",ПараметрыТекущегоБюджета.Ранг,Ячейка)).Количество()>0 Цикл
			Ячейка = Ячейка - 1;
		КонецЦикла;
		Если Ячейка < 1 Тогда
			ПоказатьПредупреждение(,"Невозможно вставить элемент левее текущего, т.к. неопределен свободный столбец в текущей строке!");	
			Возврат;
		КонецЕсли;
		Адрес = ПолучитьАдресДанных();
		ПараметрыДобавления 		= Новый Структура("РежимДобавления,Адрес,Ранг,Ячейка",Истина,Адрес,ПараметрыТекущегоБюджета.Ранг,Ячейка);
		
		ОписаниеОповещенияВыбораБюджета = Новый ОписаниеОповещения("ОбработатьРедактированиеБюджета",ЭтотОбъект,ПараметрыТекущегоБюджета);
		ОткрытьФорму("Документ.фин_БюджетныйРегламент.Форма.ФормаДобавленияБюджета",ПараметрыДобавления,Элементы.Добавить,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещенияВыбораБюджета,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьБюджетСправа(Команда)
	ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
	Если ПараметрыТекущегоБюджета = Неопределено Тогда
		ПоказатьПредупреждение(,"Не выбран бюджет!");
	Иначе
		Ячейка = ПараметрыТекущегоБюджета.Ячейка+1;
		Пока Объект.Регламент.НайтиСтроки(Новый Структура("Ранг,Ячейка",ПараметрыТекущегоБюджета.Ранг,Ячейка)).Количество()>0 Цикл
			Ячейка = Ячейка + 1;
		КонецЦикла;
		Адрес = ПолучитьАдресДанных();
		ПараметрыДобавления 		= Новый Структура("РежимДобавления,Адрес",Истина,Адрес);
		ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
		ПараметрыДобавления.Вставить("Ранг",ПараметрыТекущегоБюджета.Ранг);
		ПараметрыДобавления.Вставить("Ячейка",Ячейка);
		ОписаниеОповещенияВыбораБюджета = Новый ОписаниеОповещения("ОбработатьРедактированиеБюджета",ЭтотОбъект,ПараметрыТекущегоБюджета);
		ОткрытьФорму("Документ.фин_БюджетныйРегламент.Форма.ФормаДобавленияБюджета",ПараметрыДобавления,Элементы.Добавить,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещенияВыбораБюджета,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСледующий(Команда)
	ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
	Если ПараметрыТекущегоБюджета = Неопределено Тогда
		ПоказатьПредупреждение(,"Не выбран бюджет!");
	Иначе
		Адрес 		= ПолучитьАдресДанных();
		Ячейка 		= ПараметрыТекущегоБюджета.Ячейка;
		ПоЦентру 	= ПараметрыТекущегоБюджета.ПоЦентру;
		Если Объект.Регламент.НайтиСтроки(Новый Структура("Ранг,Ячейка",ПараметрыТекущегоБюджета.Ранг+1,Ячейка)).Количество()>0 Тогда
			ПоЦентру = Ложь;
			Ячейка = Ячейка+1;
			Пока Объект.Регламент.НайтиСтроки(Новый Структура("Ранг,Ячейка",ПараметрыТекущегоБюджета.Ранг+1,Ячейка)).Количество()>0 Цикл
				Ячейка = Ячейка + 1;
			КонецЦикла;
		КонецЕсли;
		ПараметрыДобавления 		= Новый Структура("РежимДобавления,Адрес,ПредшествующийБюджет,Ранг,Ячейка,ПоЦентру",Истина,Адрес,ПараметрыТекущегоБюджета.Бюджет,ПараметрыТекущегоБюджета.Ранг+1,Ячейка,ПоЦентру);
		ОписаниеОповещенияВыбораБюджета = Новый ОписаниеОповещения("ОбработатьРедактированиеБюджета",ЭтотОбъект,ПараметрыТекущегоБюджета);
		ОткрытьФорму("Документ.фин_БюджетныйРегламент.Форма.ФормаДобавленияБюджета",ПараметрыДобавления,Элементы.Добавить,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещенияВыбораБюджета,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПараметрыБюджета(Команда)
	ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
	Если ПараметрыТекущегоБюджета = Неопределено Тогда
		ПоказатьПредупреждение(,"Не выбран бюджет!");
	Иначе
		Адрес 		= ПолучитьАдресДанных();
		ПараметрыДобавления 		= Новый Структура("Адрес,Ранг,Ячейка,ПоЦентру,Бюджет",Адрес,ПараметрыТекущегоБюджета.Ранг,ПараметрыТекущегоБюджета.Ячейка,ПараметрыТекущегоБюджета.ПоЦентру,ПараметрыТекущегоБюджета.Бюджет);
		Если ПолучитьФункциональнуюОпциюИнтерфейса("фин_ВестиКалендарноеПланированиеБюджетногоПроцесса") Тогда
			СтрокиСроков = Объект.СрокиРазработкиБюджетов.НайтиСтроки(Новый Структура("Бюджет",ПараметрыТекущегоБюджета.Бюджет));
			Если СтрокиСроков.Количество()<>0 Тогда
				СтрокаСроков = СтрокиСроков[0];
				ПараметрыДобавления.Вставить("ПодачаЗаявок",СтрокаСроков.ПодачаЗаявок);
				ПараметрыДобавления.Вставить("СогласованиеЗаявок",СтрокаСроков.СогласованиеЗаявок);
				ПараметрыДобавления.Вставить("ФормированиеБюджета",СтрокаСроков.ФормированиеБюджета);
				ПараметрыДобавления.Вставить("СогласованиеБюджета",СтрокаСроков.СогласованиеБюджета);
			КонецЕсли;
		КонецЕсли;
		ОписаниеОповещенияВыбораБюджета = Новый ОписаниеОповещения("ОбработатьРедактированиеБюджета",ЭтотОбъект,ПараметрыТекущегоБюджета);
		ОткрытьФорму("Документ.фин_БюджетныйРегламент.Форма.ФормаДобавленияБюджета",ПараметрыДобавления,Элементы.Добавить,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещенияВыбораБюджета,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РегламентОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	ОбработатьВыборБюджета();
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСтолбецСлева(Команда)
	ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
	Если ПараметрыТекущегоБюджета = Неопределено Тогда
		ПоказатьПредупреждение(,"Выберите один из бюджетов столбца!");
	Иначе
		ЯчейкаТекущая 		= ПараметрыТекущегоБюджета.Ячейка;
		ЯчейкаМаксимальная 	= ЯчейкаТекущая;
		Для Каждого СтрокаРегламент Из Объект.Регламент Цикл
			ЯчейкаМаксимальная = Макс(ЯчейкаМаксимальная,СтрокаРегламент.Ячейка);
		КонецЦикла;
		Инд = ЯчейкаМаксимальная;
		Пока Инд >= ЯчейкаТекущая Цикл
			СтрокиРегламента = Объект.Регламент.НайтиСтроки(Новый Структура("Ячейка",Инд));
			Для Каждого СтрокаРегламента Из СтрокиРегламента Цикл
				СтрокаРегламента.Ячейка = СтрокаРегламента.Ячейка + 1;
			КонецЦикла;
			Инд = Инд - 1;
		КонецЦикла;
		ОбновитьПолеРегламента();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСтолбецСправа(Команда)
	ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
	Если ПараметрыТекущегоБюджета = Неопределено Тогда
		ПоказатьПредупреждение(,"Выберите один из бюджетов столбца!");
	Иначе
		ЯчейкаТекущая 		= ПараметрыТекущегоБюджета.Ячейка+1;
		ЯчейкаМаксимальная 	= ЯчейкаТекущая;
		Для Каждого СтрокаРегламент Из Объект.Регламент Цикл
			ЯчейкаМаксимальная = Макс(ЯчейкаМаксимальная,СтрокаРегламент.Ячейка);
		КонецЦикла;
		Инд = ЯчейкаМаксимальная;
		Пока Инд >= ЯчейкаТекущая Цикл
			СтрокиРегламента = Объект.Регламент.НайтиСтроки(Новый Структура("Ячейка",Инд));
			Для Каждого СтрокаРегламента Из СтрокиРегламента Цикл
				СтрокаРегламента.Ячейка = СтрокаРегламента.Ячейка + 1;
			КонецЦикла;
			Инд = Инд - 1;
		КонецЦикла;
		ОбновитьПолеРегламента();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСтрокуСверху(Команда)
	ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
	Если ПараметрыТекущегоБюджета = Неопределено Тогда
		ПоказатьПредупреждение(,"Выберите один из бюджетов строки!");
	Иначе
		РангТекущий 		= ПараметрыТекущегоБюджета.Ранг;
		РангМаксимальный 	= РангТекущий;
		Для Каждого СтрокаРегламент Из Объект.Регламент Цикл
			РангМаксимальный = Макс(РангМаксимальный,СтрокаРегламент.Ранг);
		КонецЦикла;
		Инд = РангМаксимальный;
		Пока Инд >= РангТекущий Цикл
			СтрокиРегламента = Объект.Регламент.НайтиСтроки(Новый Структура("Ранг",Инд));
			Для Каждого СтрокаРегламента Из СтрокиРегламента Цикл
				СтрокаРегламента.Ранг = СтрокаРегламента.Ранг + 1;
			КонецЦикла;
			Инд = Инд - 1;
		КонецЦикла;
		ОбновитьПолеРегламента();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСтрокуСнизу(Команда)
	ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
	Если ПараметрыТекущегоБюджета = Неопределено Тогда
		ПоказатьПредупреждение(,"Выберите один из бюджетов строки!");
	Иначе
		РангТекущий 		= ПараметрыТекущегоБюджета.Ранг+1;
		РангМаксимальный 	= РангТекущий;
		Для Каждого СтрокаРегламент Из Объект.Регламент Цикл
			РангМаксимальный = Макс(РангМаксимальный,СтрокаРегламент.Ранг);
		КонецЦикла;
		Инд = РангМаксимальный;
		Пока Инд >= РангТекущий Цикл
			СтрокиРегламента = Объект.Регламент.НайтиСтроки(Новый Структура("Ранг",Инд));
			Для Каждого СтрокаРегламента Из СтрокиРегламента Цикл
				СтрокаРегламента.Ранг = СтрокаРегламента.Ранг + 1;
			КонецЦикла;
			Инд = Инд - 1;
		КонецЦикла;
		ОбновитьПолеРегламента();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтолбец(Команда)
	ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
	Если ПараметрыТекущегоБюджета <> Неопределено Тогда
		УдалитьСтолбецНаКлиенте(ПараметрыТекущегоБюджета.Ячейка,Неопределено);
	Иначе
		ОповещениеВводаНомераСтолбца = Новый ОписаниеОповещения("УдалитьСтолбецНаКлиенте",ЭтотОбъект);
		ПоказатьВводЧисла(ОповещениеВводаНомераСтолбца,1,"Введите номер столбца к удалению",2,0);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтолбецНаКлиенте(Столбец,ДополнительныеПараметры) Экспорт
	Если Не ЗначениеЗаполнено(Столбец) Тогда
		Возврат;
	КонецЕсли;
	СтрокиРегламента = Объект.Регламент.НайтиСтроки(Новый Структура("Ячейка",Столбец));
	Для Каждого СтрокаРегламента Из СтрокиРегламента Цикл
		Объект.Регламент.Удалить(СтрокаРегламента);
	КонецЦикла;
	ЯчейкаТекущая 		= Столбец+1;
	ЯчейкаМаксимальная 	= ЯчейкаТекущая;
	Для Каждого СтрокаРегламент Из Объект.Регламент Цикл
		ЯчейкаМаксимальная = Макс(ЯчейкаМаксимальная,СтрокаРегламент.Ячейка);
	КонецЦикла;
	Для Инд = ЯчейкаТекущая По ЯчейкаМаксимальная Цикл
		СтрокиРегламента = Объект.Регламент.НайтиСтроки(Новый Структура("Ячейка",Инд));
		Для Каждого СтрокаРегламента Из СтрокиРегламента Цикл
			СтрокаРегламента.Ячейка = СтрокаРегламента.Ячейка - 1;
		КонецЦикла;
	КонецЦикла;
	ОбновитьПолеРегламента();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтроку(Команда)
	ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
	Если ПараметрыТекущегоБюджета <> Неопределено Тогда
		УдалитьСтрокуНаКлиенте(ПараметрыТекущегоБюджета.Ранг,Неопределено);
	Иначе
		ОповещениеВводаНомераСтолбца = Новый ОписаниеОповещения("УдалитьСтрокуНаКлиенте",ЭтотОбъект);
		ПоказатьВводЧисла(ОповещениеВводаНомераСтолбца,1,"Введите номер строки к удалению",2,0);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуНаКлиенте(Ранг,ДополнительныеПараметры) Экспорт
	Если Не ЗначениеЗаполнено(Ранг) Тогда
		Возврат;
	КонецЕсли;
	СтрокиРегламента = Объект.Регламент.НайтиСтроки(Новый Структура("Ранг",Ранг));
	Для Каждого СтрокаРегламента Из СтрокиРегламента Цикл
		Объект.Регламент.Удалить(СтрокаРегламента);
	КонецЦикла;
	РангТекущий 		= Ранг+1;
	РангМаксимальный 	= РангТекущий;
	Для Каждого СтрокаРегламент Из Объект.Регламент Цикл
		РангМаксимальный = Макс(РангМаксимальный,СтрокаРегламент.Ранг);
	КонецЦикла;
	Инд = РангМаксимальный;
	Для Инд = РангТекущий По РангМаксимальный Цикл
		СтрокиРегламента = Объект.Регламент.НайтиСтроки(Новый Структура("Ранг",Инд));
		Для Каждого СтрокаРегламента Из СтрокиРегламента Цикл
			СтрокаРегламента.Ранг = СтрокаРегламента.Ранг - 1;
		КонецЦикла;
	КонецЦикла;
	ОбновитьПолеРегламента();
КонецПроцедуры

&НаКлиенте
Процедура РегламентВыбор(Элемент, Область, СтандартнаяОбработка)
	ОбработатьВыборБюджета();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборБюджета()
	ПараметрыТекущегоБюджета 	= ПолучитьПараметрыАктивногоБюджета();
	Если ПараметрыТекущегоБюджета <> Неопределено Тогда
		Если Объект.РасширенныйРежим Тогда
			Адрес 		= ПолучитьАдресДанных();
			ПараметрыДобавления 		= Новый Структура("Адрес,Ранг,Ячейка,ПоЦентру,Бюджет",Адрес,ПараметрыТекущегоБюджета.Ранг,ПараметрыТекущегоБюджета.Ячейка,ПараметрыТекущегоБюджета.ПоЦентру,ПараметрыТекущегоБюджета.Бюджет);
			Если ПолучитьФункциональнуюОпциюИнтерфейса("фин_ВестиКалендарноеПланированиеБюджетногоПроцесса") Тогда
				СтрокиСроков = Объект.СрокиРазработкиБюджетов.НайтиСтроки(Новый Структура("Бюджет",ПараметрыТекущегоБюджета.Бюджет));
				Если СтрокиСроков.Количество()<>0 Тогда
					СтрокаСроков = СтрокиСроков[0];
					ПараметрыДобавления.Вставить("ПодачаЗаявок",СтрокаСроков.ПодачаЗаявок);
					ПараметрыДобавления.Вставить("СогласованиеЗаявок",СтрокаСроков.СогласованиеЗаявок);
					ПараметрыДобавления.Вставить("ФормированиеБюджета",СтрокаСроков.ФормированиеБюджета);
					ПараметрыДобавления.Вставить("СогласованиеБюджета",СтрокаСроков.СогласованиеБюджета);
				КонецЕсли;
			КонецЕсли;
			ОписаниеОповещенияВыбораБюджета = Новый ОписаниеОповещения("ОбработатьРедактированиеБюджета",ЭтотОбъект,ПараметрыТекущегоБюджета);
			ОткрытьФорму("Документ.фин_БюджетныйРегламент.Форма.ФормаДобавленияБюджета",ПараметрыДобавления,Элементы.Добавить,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещенияВыбораБюджета,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			ПоказатьЗначение(,ПараметрыТекущегоБюджета.Бюджет);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкуКомплекта(Команда)
	ОткрытьФорму("Обработка.фин_НастройкаКомплектаБюджетов.Форма",Новый Структура("Регламент",Объект.Ссылка),ЭтотОбъект,УникальныйИдентификатор,?(фин_ОбщегоНазначенияКлиентПовтИсп.РежимОтдельногоОткрытияОкон(),ВариантОткрытияОкна.ОтдельноеОкно,Окно));
КонецПроцедуры
