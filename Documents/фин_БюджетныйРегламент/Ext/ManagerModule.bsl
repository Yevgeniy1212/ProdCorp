#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС


//////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОТОБРАЖЕНИЯ ПОЛЯ РЕГЛАМЕНТА

//обновляет графическое поле регламента
//
&НаСервере
Процедура ОбновитьПолеРегламента(Объект,Регламент,мЦветБлока,мЦветТекста,мЦветЛинии,Знач Масштаб,Очищать = Истина) Экспорт
	Если Очищать Тогда
		Регламент.Очистить();
	КонецЕсли;
	фин_ЗащитаПривилегированныеПроцедуры.ОбновитьПолеРегламента(Объект,Регламент,мЦветБлока,мЦветТекста,мЦветЛинии,Масштаб);
КонецПроцедуры //ОбновитьПолеРегламента


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Заполнение


////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	//ДополнительныеЗапросы = Новый Массив;
	//ДополнительныеЗапросы.Добавить("Регламент");
	
	ПереопределяемыеТаблицы = Новый Массив;
	ПереопределяемыеТаблицы.Добавить("Регламент");
	ПереопределяемыеТаблицы.Добавить("ПредшествующиеБюджеты");
	ПереопределяемыеТаблицы.Добавить("УстановленныеПараметрыКомплекта");
	ПереопределяемыеТаблицы.Добавить("ЗначенияПользовательскихПараметровКомплектаБюджетов");
	
	ДополнительныеПараметрыЗапросов = Новый Структура;
	ДополнительныеПараметрыЗапросов.Вставить("Дата", фин_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ДокументСсылка, "Дата"));
	
	ПараметрыПроведения = фин_УправлениеПроведениемДокументовСервер.ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ,,,,,,ПереопределяемыеТаблицы,ДополнительныеПараметрыЗапросов);
	
	Возврат ПараметрыПроведения;

КонецФункции 

Функция ТекстЗапросаРегламент(НомераТаблиц, ПараметрыПроведения, Реквизиты) Экспорт
	
	НомераТаблиц.Вставить("ТаблицаРегламент", НомераТаблиц.Количество());

	ТекстЗапроса = "ВЫБРАТЬ
	               |	БюджетныйРегламентРегламент.Ссылка,
	               |	БюджетныйРегламентРегламент.НомерСтроки,
	               |	БюджетныйРегламентРегламент.Бюджет,
	               |	БюджетныйРегламентРегламент.Ранг,
	               |	БюджетныйРегламентРегламент.РангКУстановке,
	               |	БюджетныйРегламентРегламент.Ячейка,
	               |	БюджетныйРегламентРегламент.ПоЦентру,
	               |	БюджетныйРегламентРегламент.Ссылка КАК Регламент
	               |ИЗ
	               |	Документ.фин_БюджетныйРегламент.Регламент КАК БюджетныйРегламентРегламент
	               |ГДЕ
	               |	БюджетныйРегламентРегламент.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПредшествующиеБюджеты(НомераТаблиц, ПараметрыПроведения, Реквизиты) Экспорт
	
	НомераТаблиц.Вставить("ТаблицаПредшествующиеБюджеты", НомераТаблиц.Количество());

	ТекстЗапроса = "ВЫБРАТЬ
	               |	БюджетныйРегламентПредшествующиеБюджеты.Ссылка,
	               |	БюджетныйРегламентПредшествующиеБюджеты.НомерСтроки,
	               |	БюджетныйРегламентПредшествующиеБюджеты.Бюджет,
	               |	БюджетныйРегламентПредшествующиеБюджеты.Предшественник,
	               |	БюджетныйРегламентПредшествующиеБюджеты.Обязательный,
	               |	БюджетныйРегламентПредшествующиеБюджеты.Ссылка КАК Регламент
	               |ИЗ
	               |	Документ.фин_БюджетныйРегламент.ПредшествующиеБюджеты КАК БюджетныйРегламентПредшествующиеБюджеты
	               |ГДЕ
	               |	БюджетныйРегламентПредшествующиеБюджеты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаУстановленныеПараметрыКомплекта(НомераТаблиц, ПараметрыПроведения, Реквизиты) Экспорт
	
	НомераТаблиц.Вставить("ТаблицаУстановленныеПараметрыКомплекта", НомераТаблиц.Количество());

	ТекстЗапроса = "ВЫБРАТЬ
	               |	БюджетныйРегламентУстановленныеПараметрыКомплекта.Ссылка,
	               |	БюджетныйРегламентУстановленныеПараметрыКомплекта.НомерСтроки,
	               |	БюджетныйРегламентУстановленныеПараметрыКомплекта.Параметр КАК Компонент,
	               |	БюджетныйРегламентУстановленныеПараметрыКомплекта.Ссылка КАК Регламент
	               |ИЗ
	               |	Документ.фин_БюджетныйРегламент.УстановленныеПараметрыКомплекта КАК БюджетныйРегламентУстановленныеПараметрыКомплекта
	               |ГДЕ
	               |	БюджетныйРегламентУстановленныеПараметрыКомплекта.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаЗначенияПользовательскихПараметровКомплектаБюджетов(НомераТаблиц, ПараметрыПроведения, Реквизиты) Экспорт
	
	НомераТаблиц.Вставить("ТаблицаЗначенияПользовательскихПараметровКомплектаБюджетов", НомераТаблиц.Количество());

	ТекстЗапроса = "ВЫБРАТЬ
	               |	БюджетныйРегламентЗначенияПользовательскихПараметровКомплектаБюджетов.Ссылка,
	               |	БюджетныйРегламентЗначенияПользовательскихПараметровКомплектаБюджетов.НомерСтроки,
	               |	БюджетныйРегламентЗначенияПользовательскихПараметровКомплектаБюджетов.Значение,
	               |	БюджетныйРегламентЗначенияПользовательскихПараметровКомплектаБюджетов.Параметр,
	               |	БюджетныйРегламентЗначенияПользовательскихПараметровКомплектаБюджетов.Ссылка КАК Регламент
	               |ИЗ
	               |	Документ.фин_БюджетныйРегламент.ЗначенияПользовательскихПараметровКомплектаБюджетов КАК БюджетныйРегламентЗначенияПользовательскихПараметровКомплектаБюджетов
	               |ГДЕ
	               |	БюджетныйРегламентЗначенияПользовательскихПараметровКомплектаБюджетов.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Бюджетный регламент
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "БюджетныйРегламент";
	КомандаПечати.Представление = НСтр("ru = 'Бюджетный регламент'");
	//КомандаПечати.ПроверкаПроведенияПередПечатью = НЕ фин_ОбщегоНазначенияВызовСервераПовтИсп.ЕстьДополнительноеПравоПользователя("ПечатьНепроведенныхДокументов");
	КомандаПечати.Порядок = 50;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БюджетныйРегламент") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"БюджетныйРегламент",
			НСтр("ru = 'Бюджетный регламент'"),
			ПечатьРегламента(МассивОбъектов, ОбъектыПечати),
			,
			);
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка табличных печатных документов.

// Функция формирует табличный документ с печатной формой 
// 
//
// Возвращаемое значение:
//  Табличный документ - печатная форма 
//
Функция ПечатьРегламента(МассивОбъектов, ОбъектыПечати)
	
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "фин_БюджетныйРегламент";
	
	ЦветЛинии = Новый Цвет(100,149,237); //василек
	ЦветТекста 	= Новый Цвет(165,42,42); // коричневый
	ЦветБлока	= Новый Цвет(230,230,250); // лаванда
	
	ВставлятьРазделительСтраниц = Ложь;
	
	Для Каждого ДокументОбъект Из МассивОбъектов Цикл
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		Документы.фин_БюджетныйРегламент.ОбновитьПолеРегламента(ДокументОбъект,ТабДокумент,ЦветБлока,ЦветТекста,ЦветЛинии,ДокументОбъект.Масштаб,Ложь);
		// Первую колонку не печатаем
		ТабДокумент.ОбластьПечати = ТабДокумент.Область(1,1,ТабДокумент.ВысотаТаблицы,ТабДокумент.ШиринаТаблицы);
		ВставлятьРазделительСтраниц = Истина;
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// Прочие служебные процедуры и функции


#КонецЕсли