
Функция ПолучитьСписокСчетов()
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаОтбора.СчетУчета
	|ИЗ
	|  Документ.ПереоценкаСельскохозяйственнойПродукцииПоСредневзвешеннойЦене.СчетаОтбора КАК СчетаОтбора
	|Где
	|	СчетаОтбора.ссылка = &ТекДокумент
	|";
	
	Запрос.УстановитьПараметр("ТекДокумент",ЭтотОбъект.Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Типовой.Записывать = Истина;
	Движения.Налоговый.Записывать = Истина;
	
	СписокСчетовОтбора = ПолучитьСписокСчетов();
	
	НачДата = НачалоДня(Дата);
			
		СредняяЦена =0;
		//средняя цена для каждой номенклатуры
		ЗапросОбщий = Новый Запрос;
		ЗапросОбщий.Текст = 
			"ВЫБРАТЬ
			|	ТиповойОстатки.Субконто1 КАК Номенклатура,
			|	ТиповойОстатки.СуммаОстаток,
			|	ТиповойОстатки.КоличествоОстаток,
			|	ВЫБОР
			|		КОГДА ТиповойОстатки.КоличествоОстаток <> 0
			|			ТОГДА ТиповойОстатки.СуммаОстаток / ТиповойОстатки.КоличествоОстаток
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК СредняяЦена
			|ИЗ
			|	РегистрБухгалтерии.Типовой.Остатки(&ДатаОт, Счет В (&Счета), , ) КАК ТиповойОстатки";
		
		ЗапросОбщий.УстановитьПараметр("ДатаОт", НачДата);
		ЗапросОбщий.УстановитьПараметр("Счета", СписокСчетовОтбора);
				
		РезультатЗапроса1 = ЗапросОбщий.Выполнить();
		
		ВыборкаОбщая = РезультатЗапроса1.Выбрать();
		
		Пока ВыборкаОбщая.Следующий() Цикл
			
			//средняя цена по организациям
			ЗапросПоОрг = Новый Запрос;
			ЗапросПоОрг.Текст = 
				"ВЫБРАТЬ
				|	ТиповойОстатки.Субконто1 КАК Номенклатура,
				|	ТиповойОстатки.СуммаОстаток,
				|	ТиповойОстатки.КоличествоОстаток,
				|	ВЫБОР
				|		КОГДА ТиповойОстатки.КоличествоОстаток <> 0
				|			ТОГДА ТиповойОстатки.СуммаОстаток / ТиповойОстатки.КоличествоОстаток
				|		ИНАЧЕ 0
				|	КОНЕЦ КАК СредняяЦенаПоОрганизации,
				|	ТиповойОстатки.Организация,
				|	ТиповойОстатки.Счет
				|ИЗ
				|	РегистрБухгалтерии.Типовой.Остатки(&НачДата, Счет В (&Счета), , ) КАК ТиповойОстатки
				|ГДЕ
				|	ТиповойОстатки.Субконто1 = &ТекНоменклатура";
			
			ЗапросПоОрг.УстановитьПараметр("НачДата", НачДата);
			ЗапросПоОрг.УстановитьПараметр("Счета", СписокСчетовОтбора);
			ЗапросПоОрг.УстановитьПараметр("ТекНоменклатура", ВыборкаОбщая.Номенклатура);

			РезультатЗапроса2 = ЗапросПоОрг.Выполнить();
			
			ВыборкаПоОрганизации = РезультатЗапроса2.Выбрать();
			
			//-=-=
			СуммаКорректировкиОбщая = 0;
			//-=-=
			
			Пока ВыборкаПоОрганизации.Следующий() Цикл
				РазницаВЦене = 0;
				СуммаКорректировки = 0;
				
				Если ВыборкаОбщая.СредняяЦена <> ВыборкаПоОрганизации.СредняяЦенаПоОрганизации Тогда
					 РазницаВЦене = ВыборкаОбщая.СредняяЦена - ВыборкаПоОрганизации.СредняяЦенаПоОрганизации;
									 
					 СуммаКорректировки = РазницаВЦене*ВыборкаПоОрганизации.КоличествоОстаток;
					 
					 Если СуммаКорректировки < 0.02 И СуммаКорректировки > -0.02 Тогда 
						 Продолжить;
					 КонецЕсли;
					 
					 НаборЗаписей = РегистрыСведений.СобственныеКонтрагенты.СоздатьНаборЗаписей();
					 НаборЗаписей.Отбор.Организация.Значение = ВыборкаПоОрганизации.Организация;
					 НаборЗаписей.Отбор.Организация.Использование = Истина;
					 НаборЗаписей.Прочитать();
					
					 Если НаборЗаписей.Количество() > 0 Тогда
						КонтрагентОрганизации = НаборЗаписей[0].Контрагент;
					 Иначе
						КонтрагентОрганизации = Справочники.Контрагенты.ПустаяСсылка();
					 КонецЕсли;
				
					 	Проводка = Движения.Типовой.Добавить();
						Проводка.Организация = ВыборкаПоОрганизации.Организация;
						Проводка.Период = НачДата;
						Проводка.СчетДт = ВыборкаПоОрганизации.Счет;
						
						ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, ВыборкаОбщая.Номенклатура);
											
						Проводка.СчетКт = ПланыСчетов.Типовой.КраткосрочнаяДебиторскаяЗадолженностьПредставительств;
						ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, КонтрагентОрганизации);
						ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, Справочники.СтатьиОборотов.ПереоценкаСельскохозяйственнойПродукции);
						
						Проводка.Сумма = СуммаКорректировки;
						
						//налоговый
						ПроводкаНУ = Движения.Налоговый.Добавить();
						ПроводкаНУ.Организация = ВыборкаПоОрганизации.Организация;
						ПроводкаНУ.Период = НачДата;
						ПроводкаНУ.СчетДт = ВыборкаПоОрганизации.Счет.СчетНУ;
						
						ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, 1, ВыборкаОбщая.Номенклатура);
											
						ПроводкаНУ.СчетКт = ПланыСчетов.Типовой.КраткосрочнаяДебиторскаяЗадолженностьПредставительств.СчетНУ;
						ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, 1, КонтрагентОрганизации);
						ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, 2, КонтрагентОрганизации.ОсновнойДоговорКонтрагента);
						
						ПроводкаНУ.Сумма = СуммаКорректировки;

						//ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(Проводка, СтруктурноеПодразделение, СтруктурноеПодразделение);
						
						//-=-=
						СуммаКорректировкиОбщая = СуммаКорректировкиОбщая + Проводка.Сумма;
						//-=-=
				КонецЕсли;
			КонецЦикла;
			//-=-=
			Если Проводка <> Неопределено Тогда
				Проводка.Сумма = Проводка.Сумма - СуммаКорректировкиОбщая;
				ПроводкаНУ.Сумма = ПроводкаНУ.Сумма - СуммаКорректировкиОбщая;
				СуммаКорректировкиОбщая = 0;
			КонецЕсли;
			//-=-=
		КонецЦикла;
		
КонецПроцедуры
