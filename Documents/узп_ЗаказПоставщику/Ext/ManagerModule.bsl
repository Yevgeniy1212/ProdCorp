#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Заполнение

Процедура ЗаполнитьПоДокументуОснованию(Объект, ДокументОснование) Экспорт
	ПризнакПроекта = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("узп_ВестиУчетЗакупокПоПроектам");
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.узп_ЗаявкаМТС") Тогда
		// Заполнение шапки
		Объект.Комментарий = ДокументОснование.Комментарий;
		Объект.Организация = ДокументОснование.Организация;
		Объект.СрокПоставки = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ДокументОснование.ПериодПланирования,ДокументОснование.Сценарий);
		Объект.Подразделение = ДокументОснование.Подразделение;
		Объект.ДокументОснование = ДокументОснование.Ссылка;
		Объект.СтруктурноеПодразделение = ДокументОснование.СтруктурноеПодразделение;
		Объект.СуммаДокумента = ДокументОснование.СуммаДокумента;
		Объект.ЕдиныйСрокПоставкиПоЗаказу = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьПродолжительностьЦикла(ДокументОснование.Сценарий)<2;
		Объект.ВалютаДокумента = ?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПланированиеЗакупокВВалютеРеглУчета"),фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"),фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета"));
		Объект.Состояние = Перечисления.СостоянияОбъектов.Подготовлен;
		Объект.УчитыватьНДС = фин_ЗаполнениеДокументов.ПолучитьПризнакПлательщикаНДС(Объект.Организация,Объект.Дата);
		Объект.ОбластьПланирования = ДокументОснование.ИсточникЗаявки;
		Если Не ЗначениеЗаполнено(Объект.ТипЦен) Тогда
			Объект.ТипЦен = фин_ОбщегоНазначенияСервер.ПолучитьЗначениеПоУмолчанию(Пользователи.ТекущийПользователь(), "ОсновнойТипЦенЗаказовПоставщикам");
		КонецЕсли;
		Объект.СуммаВключаетНДС = Объект.УчитыватьНДС И Объект.ТипЦен.ЦенаВключаетНДС;
		Для Каждого ТекСтрокаТовары Из ДокументОснование.Товары Цикл
			НоваяСтрока = Объект.Товары.Добавить();
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовары.ЕдиницаИзмерения;
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Коэффициент = ТекСтрокаТовары.Коэффициент;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ОбъектРемонта = ДокументОснование.ОбъектРемонта;
			НоваяСтрока.СрокПоставки = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ТекСтрокаТовары.ПериодПланирования,ДокументОснование.Сценарий);
			НоваяСтрока.Подразделение = ТекСтрокаТовары.Подразделение;
			НоваяСтрока.Сумма = ТекСтрокаТовары.Сумма;
			НоваяСтрока.Характеристика = ТекСтрокаТовары.Характеристика;
			НоваяСтрока.Цена = ТекСтрокаТовары.Цена;
			НоваяСтрока.СтавкаНДС = НоваяСтрока.Номенклатура.СтавкаНДС;
			НоваяСтрока.ЗаявкаМТС = ДокументОснование.Ссылка;
			Если ПризнакПроекта Тогда
				НоваяСтрока.Проект = ТекСтрокаТовары.Проект;
			КонецЕсли;
			//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НоваяСтрока, Объект);
			ДанныеОбъекта = фин_ОбщегоНазначенияСервер.СформироватьСтруктуруРеквизитовОбъекта(Объект.Ссылка);
			ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
			ДанныеСтрокиТаблицы	= фин_ОбщегоНазначенияСервер.СформироватьСтруктуруРеквизитовОбъекта(Объект.Ссылка,"Товары");
			ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, НоваяСтрока);
			дог_УправлениеДоговорамиКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДанныеСтрокиТаблицы, ДанныеОбъекта);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтрокиТаблицы);
		КонецЦикла;
		Для Каждого ТекСтрокаУслуги Из ДокументОснование.Услуги Цикл
			НоваяСтрока = Объект.Услуги.Добавить();
			НоваяСтрока.Количество = ТекСтрокаУслуги.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаУслуги.Номенклатура;
			НоваяСтрока.ОбъектРемонта = ДокументОснование.ОбъектРемонта;
			НоваяСтрока.СрокПоставки = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ТекСтрокаУслуги.ПериодПланирования,ДокументОснование.Сценарий);
			НоваяСтрока.Подразделение = ТекСтрокаУслуги.Подразделение;
			НоваяСтрока.Сумма = ТекСтрокаУслуги.Сумма;
			НоваяСтрока.Характеристика = ТекСтрокаУслуги.Характеристика;
			НоваяСтрока.Цена = ТекСтрокаУслуги.Цена;
			НоваяСтрока.СтавкаНДС = НоваяСтрока.Номенклатура.СтавкаНДС;
			НоваяСтрока.ЗаявкаМТС = ДокументОснование.Ссылка;
			Если ПризнакПроекта тогда
				НоваяСтрока.Проект = ТекСтрокаУслуги.Проект;
			КонецЕсли;
			
			ДанныеОбъекта = фин_ОбщегоНазначенияСервер.СформироватьСтруктуруРеквизитовОбъекта(Объект.Ссылка);
			ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
			ДанныеСтрокиТаблицы	= фин_ОбщегоНазначенияСервер.СформироватьСтруктуруРеквизитовОбъекта(Объект.Ссылка,"Услуги");
			ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, НоваяСтрока);
			дог_УправлениеДоговорамиКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДанныеСтрокиТаблицы, ДанныеОбъекта);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтрокиТаблицы);
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.узп_ПланЗакупок") Тогда
		// Заполнение шапки
		Объект.Комментарий = ДокументОснование.Комментарий;
		Объект.Организация = ДокументОснование.Организация;
		Объект.СрокПоставки = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ДокументОснование.ПериодПланирования,ДокументОснование.Сценарий);
		Объект.Подразделение = ДокументОснование.Подразделение;
		Объект.Состояние = ДокументОснование.Состояние;
		Объект.ДокументОснование = ДокументОснование.Ссылка;
		Объект.СтруктурноеПодразделение = ДокументОснование.СтруктурноеПодразделение;
		Объект.СуммаДокумента = ДокументОснование.СуммаДокумента;
		Объект.ЕдиныйСрокПоставкиПоЗаказу = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьПродолжительностьЦикла(ДокументОснование.Сценарий)<2;
		Объект.ВалютаДокумента = ?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПланированиеЗакупокВВалютеРеглУчета"),фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"),фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета"));
		Объект.Состояние = Перечисления.СостоянияОбъектов.Подготовлен;
		Объект.УчитыватьНДС = фин_ЗаполнениеДокументов.ПолучитьПризнакПлательщикаНДС(Объект.Организация,Объект.Дата);
		Объект.ОбластьПланирования = ДокументОснование.ОбластьПланирования;
		Если Не ЗначениеЗаполнено(Объект.ТипЦен) Тогда
			Объект.ТипЦен = фин_ОбщегоНазначенияСервер.ПолучитьЗначениеПоУмолчанию(Пользователи.ТекущийПользователь(), "ОсновнойТипЦенЗаказовПоставщикам");
		КонецЕсли;
		//Объект.ТипЦен = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ТипПлановыхЦенЗаявокМТС");
		Объект.СуммаВключаетНДС = Объект.УчитыватьНДС И Объект.ТипЦен.ЦенаВключаетНДС;
		
		ТЧТовары = ДокументОснование.Товары.Выгрузить();
		ТЧТовары.Свернуть("Поставщик");
		Если ТЧТовары.Количество() = 1 Тогда
			ТЧУслуги = ДокументОснование.Услуги.Выгрузить();
			ТЧУслуги.Свернуть("Поставщик");
			Если ТЧУслуги.Количество() = 1 Тогда
				Если ТЧТовары[0].Поставщик = ТЧУслуги[0].Поставщик Тогда 
					Объект.Контрагент = ТЧТовары[0].Поставщик;
				КонецЕсли;
			Иначе
				Объект.Контрагент = ТЧТовары[0].Поставщик;
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого ТекСтрокаТовары Из ДокументОснование.Товары Цикл
			НоваяСтрока = Объект.Товары.Добавить();
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовары.ЕдиницаИзмерения;
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Коэффициент = ТекСтрокаТовары.Коэффициент;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ОбъектРемонта = ТекСтрокаТовары.ОбъектРемонта;
			НоваяСтрока.СрокПоставки = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ТекСтрокаТовары.ПериодПланирования,ДокументОснование.Сценарий);
			НоваяСтрока.Подразделение = ТекСтрокаТовары.Подразделение;
			НоваяСтрока.Сумма = ТекСтрокаТовары.Сумма;
			НоваяСтрока.Характеристика = ТекСтрокаТовары.Характеристика;
			НоваяСтрока.Цена = ТекСтрокаТовары.Цена;
			НоваяСтрока.СтавкаНДС = НоваяСтрока.Номенклатура.СтавкаНДС;
			НоваяСтрока.ЗаявкаМТС = ТекСтрокаТовары.Заявка;
			Если ПризнакПроекта Тогда
				НоваяСтрока.Проект = ТекСтрокаТовары.Проект;
			КонецЕсли;
			
			//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НоваяСтрока, Объект);
			ДанныеОбъекта = фин_ОбщегоНазначенияСервер.СформироватьСтруктуруРеквизитовОбъекта(Объект.Ссылка);
			ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
			ДанныеСтрокиТаблицы	= фин_ОбщегоНазначенияСервер.СформироватьСтруктуруРеквизитовОбъекта(Объект.Ссылка,"Товары");
			ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, НоваяСтрока);
			дог_УправлениеДоговорамиКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДанныеСтрокиТаблицы, ДанныеОбъекта);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтрокиТаблицы);
		КонецЦикла;
		Для Каждого ТекСтрокаУслуги Из ДокументОснование.Услуги Цикл
			НоваяСтрока = Объект.Услуги.Добавить();
			НоваяСтрока.Количество = ТекСтрокаУслуги.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаУслуги.Номенклатура;
			НоваяСтрока.ОбъектРемонта = ТекСтрокаУслуги.ОбъектРемонта;
			НоваяСтрока.СрокПоставки = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ТекСтрокаУслуги.ПериодПланирования,ДокументОснование.Сценарий);
			НоваяСтрока.Подразделение = ТекСтрокаУслуги.Подразделение;
			НоваяСтрока.Сумма = ТекСтрокаУслуги.Сумма;
			НоваяСтрока.Характеристика = ТекСтрокаУслуги.Характеристика;
			НоваяСтрока.Цена = ТекСтрокаУслуги.Цена;
			НоваяСтрока.СтавкаНДС = НоваяСтрока.Номенклатура.СтавкаНДС;
			НоваяСтрока.ЗаявкаМТС = ТекСтрокаУслуги.Заявка;
			Если ПризнакПроекта Тогда
				НоваяСтрока.Проект = ТекСтрокаУслуги.Проект;
			КонецЕсли;
			
			//ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НоваяСтрока, Объект);
			ДанныеОбъекта = фин_ОбщегоНазначенияСервер.СформироватьСтруктуруРеквизитовОбъекта(Объект.Ссылка);
			ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
			ДанныеСтрокиТаблицы	= фин_ОбщегоНазначенияСервер.СформироватьСтруктуруРеквизитовОбъекта(Объект.Ссылка,"Услуги");
			ЗаполнитьЗначенияСвойств(ДанныеСтрокиТаблицы, НоваяСтрока);
			дог_УправлениеДоговорамиКлиентСервер.РассчитатьСуммуНДСТабЧасти(ДанныеСтрокиТаблицы, ДанныеОбъекта);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтрокиТаблицы);
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.дог_РегистрацияДоговоров") Тогда
		Если ДокументОснование.ВидОперацииПоДоговору<>Перечисления.дог_ВидыОперацийПоДоговору.ТоварныеОперации Тогда
			СтандартнаяОбработка = Ложь;
			Сообщить("Заказ поставщику не может быть создан на основании нетоварного договора!");
			Возврат;
		КонецЕсли;
		Если ДокументОснование.ВидДоговораПоТоварнымОперациям=Перечисления.дог_ВидыДоговоровПоТоварнымОперациям.ДоговорРеализации Тогда
			СтандартнаяОбработка = Ложь;
			Сообщить("Заказ поставщику не может быть создан на основании договора реализации!");
			Возврат;
		КонецЕсли;
		// Заполнение шапки
		Объект.ВалютаДокумента = ДокументОснование.ВалютаДокумента;
		Объект.ДоговорКонтрагента = ДокументОснование.ДоговорКонтрагента;
		Объект.ЕдиныйСрокПоставкиПоЗаказу = ДокументОснование.ЕдиныйСрокПоставкиПоЗаказу;
		Объект.Комментарий = ДокументОснование.Комментарий;
		Объект.Контрагент = ДокументОснование.Контрагент;
		Объект.СуммаДокумента = ДокументОснование.ОбщаяСуммаДоговора;
		Объект.Организация = ДокументОснование.Организация;
		Объект.Подразделение = ДокументОснование.Подразделение;
		Объект.СрокПоставки = ДокументОснование.СрокПоставки;
		Объект.ДокументОснование = ДокументОснование.Ссылка;
		Объект.СтруктурноеПодразделение = ДокументОснование.СтруктурноеПодразделение;
		Объект.Состояние = Перечисления.СостоянияОбъектов.Подготовлен;
		Объект.УчитыватьНДС = ДокументОснование.УчитыватьНДС;
		Объект.ТипЦен = ДокументОснование.ТипЦен;
		Объект.СуммаВключаетНДС = ДокументОснование.СуммаВключаетНДС;
		Для Каждого ТекСтрокаТовары Из ДокументОснование.Товары Цикл
			НоваяСтрока = Объект.Товары.Добавить();
			НоваяСтрока.СрокПоставки = ТекСтрокаТовары.ДатаПоставки;
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовары.ЕдиницаИзмерения;
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Коэффициент = ТекСтрокаТовары.Коэффициент;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.ОбъектРемонта = ТекСтрокаТовары.ОбъектРемонта;
			НоваяСтрока.Подразделение = ТекСтрокаТовары.Подразделение;
			НоваяСтрока.Сумма = ТекСтрокаТовары.Сумма;
			НоваяСтрока.Цена = ТекСтрокаТовары.Цена;
			НоваяСтрока.СтавкаНДС = ТекСтрокаТовары.СтавкаНДС;
			НоваяСтрока.СуммаНДС = ТекСтрокаТовары.СуммаНДС;
			НоваяСтрока.ЗаявкаМТС = ТекСтрокаТовары.ЗаявкаМТС;
			Если ПризнакПроекта Тогда
				НоваяСтрока.Проект = ТекСтрокаТовары.Проект;
			КонецЕсли;
			
		КонецЦикла;
		Для Каждого ТекСтрокаУслуги Из ДокументОснование.Услуги Цикл
			НоваяСтрока = Объект.Услуги.Добавить();
			НоваяСтрока.СрокПоставки = ТекСтрокаУслуги.ДатаПоставки;
			НоваяСтрока.Количество = ТекСтрокаУслуги.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаУслуги.Номенклатура;
			НоваяСтрока.ОбъектРемонта = ТекСтрокаУслуги.ОбъектРемонта;
			НоваяСтрока.Подразделение = ТекСтрокаУслуги.Подразделение;
			НоваяСтрока.Сумма = ТекСтрокаУслуги.Сумма;
			НоваяСтрока.Цена = ТекСтрокаУслуги.Цена;
			НоваяСтрока.СтавкаНДС = ТекСтрокаУслуги.СтавкаНДС;
			НоваяСтрока.СуммаНДС = ТекСтрокаУслуги.СуммаНДС;
			НоваяСтрока.ЗаявкаМТС = ТекСтрокаУслуги.ЗаявкаМТС;
			Если ПризнакПроекта тогда
				НоваяСтрока.Проект = ТекСтрокаУслуги.Проект;
			КонецЕсли;
			
		КонецЦикла;
		Для Каждого ТекСтрокаУслуги Из ДокументОснование.ОС Цикл
			НоваяСтрока = Объект.Товары.Добавить();
			НоваяСтрока.СрокПоставки = ТекСтрокаУслуги.ДатаПоставки;
			НоваяСтрока.Количество = ТекСтрокаУслуги.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаУслуги.Номенклатура;
			НоваяСтрока.Подразделение = ТекСтрокаУслуги.Подразделение;
			НоваяСтрока.Сумма = ТекСтрокаУслуги.Сумма;
			НоваяСтрока.Цена = ТекСтрокаУслуги.Цена;
			НоваяСтрока.СтавкаНДС = ТекСтрокаУслуги.СтавкаНДС;
			НоваяСтрока.СуммаНДС = ТекСтрокаУслуги.СуммаНДС;
			НоваяСтрока.ЗаявкаМТС = ТекСтрокаУслуги.ЗаявкаМТС;
			Если ПризнакПроекта тогда
				НоваяСтрока.Проект = ТекСтрокаУслуги.Проект;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры   


////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// анализ промежуточного исполнения
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗаказПоставщику";
	КомандаПечати.Представление = НСтр("ru = 'Заказ поставщику'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
	Возврат;	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаказПоставщику") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЗаказПоставщику",
			НСтр("ru = 'Заказ поставщику'"),
			ПечатьЗаказПоставщику(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.узп_ЗаказПоставщику.ПФ_MXL_ЗаказПоставщику");
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка табличных печатных документов.

//Печать заказа поставщику
Функция ПечатьЗаказПоставщику(МассивОбъектов, ОбъектыПечати) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Макет = Документы.узп_ЗаказПоставщику.ПолучитьМакет("ПФ_MXL_ЗаказПоставщику");
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "узп_ЗаказПоставщику_ЗаказПоставщику";
	ПризнакПроекта = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("узп_ВестиУчетЗакупокПоПроектам");
	Если ПризнакПроекта тогда
		Проект = ", Проект";
	Иначе
		Проект = "";
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказПоставщику.Автор,
	|	ЗаказПоставщику.Ссылка,
	|	ЗаказПоставщику.Дата,
	|	ЗаказПоставщику.ДоговорКонтрагента,
	|	ЗаказПоставщику.Номер,
	|	ЗаказПоставщику.Организация,
	|	ЗаказПоставщику.Ответственный,
	|	ЗаказПоставщику.СрокПоставки,
	|	ЗаказПоставщику.Подразделение,
	|	ЗаказПоставщику.СтруктурноеПодразделение,
	|	ЗаказПоставщику.Контрагент,
	|	ЗаказПоставщику.Товары.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Характеристика,
	|		ЕдиницаИзмерения,
	|		Коэффициент,
	|		СрокПоставки,
	|		Количество,
	|		Цена,
	|		Сумма,
	|		Подразделение,
	|		СтавкаНДС,
	|		ОбъектРемонта,
	|		СуммаНДС"+Проект+"
	|	),
	|	ЗаказПоставщику.Услуги.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Характеристика,
	|		СрокПоставки,
	|		Количество,
	|		Цена,
	|		Сумма,
	|		Подразделение,
	|		ОбъектРемонта,
	|		СтавкаНДС,
	|		СуммаНДС"+Проект+"
	|	),
	|	ЗаказПоставщику.УчитыватьНДС
	|ИЗ
	|	Документ.узп_ЗаказПоставщику КАК ЗаказПоставщику
	|ГДЕ
	|	ЗаказПоставщику.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
	Выборка = Запрос.Выполнить().Выбрать();

	Шапка = Макет.ПолучитьОбласть("Шапка");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабличныйДокумент.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка");
		ОбластьТовары = Макет.ПолучитьОбласть("Товары");
		ОбластьУслугиШапка = Макет.ПолучитьОбласть("УслугиШапка");
		ОбластьУслуги = Макет.ПолучитьОбласть("Услуги");
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		ВставлятьРазделительСтраниц = Ложь;
		Если НЕ Выборка.УчитыватьНДС Тогда
			ОбластьТоварыШапка.УдалитьОбласть(ОбластьТоварыШапка.Область("R2C10:R2C11"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьУслугиШапка.УдалитьОбласть(ОбластьУслугиШапка.Область("R2C8:R2C9"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьТовары.УдалитьОбласть(ОбластьТовары.Область("R1C10:R1C11"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьУслуги.УдалитьОбласть(ОбластьУслуги.Область("R1C8:R1C9"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		КонецЕсли;
		Если НЕ ПризнакПроекта Тогда
			ОбластьТоварыШапка.УдалитьОбласть(ОбластьТоварыШапка.Область("ШапкаТоварыПроекты"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьУслугиШапка.УдалитьОбласть(ОбластьУслугиШапка.Область("ШапкаУслугиПроекты"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьТовары.УдалитьОбласть(ОбластьТовары.Область("ТоварыПроекты"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			ОбластьУслуги.УдалитьОбласть(ОбластьУслуги.Область("УслугиПроекты"),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		КонецЕсли;
		
		Шапка.Параметры.Заполнить(Выборка);
		Шапка.Параметры.ОрганизацияНаименование = Выборка.Организация.Наименование+?(ЗначениеЗаполнено(Выборка.СтруктурноеПодразделение),"/"+Выборка.СтруктурноеПодразделение.Наименование,"");
		Шапка.Параметры.Поставщик = Выборка.Контрагент.Наименование+?(ЗначениеЗаполнено(Выборка.ДоговорКонтрагента),"/ договор: "+Выборка.ДоговорКонтрагента.Наименование,"");
		ТабличныйДокумент.Вывести(Шапка, Выборка.Уровень());

		ВыборкаТовары = Выборка.Товары.Выбрать();
		Если ВыборкаТовары.Количество()>0 Тогда
			ТабличныйДокумент.Вывести(ОбластьТоварыШапка);
		КонецЕсли;
		Пока ВыборкаТовары.Следующий() Цикл
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			Если ЗначениеЗаполнено(ВыборкаТовары.Характеристика) Тогда
				ОбластьТовары.Параметры.Номенклатура = ВыборкаТовары.Номенклатура.Наименование + " / "+ВыборкаТовары.Характеристика.Наименование;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
		КонецЦикла;

		ВыборкаУслуги = Выборка.Услуги.Выбрать();
		Если ВыборкаУслуги.Количество()>0 Тогда
			ТабличныйДокумент.Вывести(ОбластьУслугиШапка);
		КонецЕсли;
		Пока ВыборкаУслуги.Следующий() Цикл
			ОбластьУслуги.Параметры.Заполнить(ВыборкаУслуги);
			Если ЗначениеЗаполнено(ВыборкаУслуги.Характеристика) Тогда
				ОбластьУслуги.Параметры.Номенклатура = ВыборкаУслуги.Номенклатура.Наименование + " / "+ВыборкаУслуги.Характеристика.Наименование;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьУслуги, ВыборкаУслуги.Уровень());
		КонецЦикла;

		Подвал.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(Подвал);

		ВставлятьРазделительСтраниц = Истина;
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	КонецЦикла;
	Возврат ТабличныйДокумент;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ДополнительныеПараметрыЗапросов = Новый Структура();
		
	ДополнительныеЗапросы = Новый Массив;
		
	ПараметрыПроведения = фин_УправлениеПроведениемДокументовСервер.ПодготовитьПараметрыПроведения(ДокументСсылка,Отказ,Истина,Истина,,,,,ДополнительныеПараметрыЗапросов,ДополнительныеЗапросы);
	
	Возврат ПараметрыПроведения;

КонецФункции 

#КонецЕсли
