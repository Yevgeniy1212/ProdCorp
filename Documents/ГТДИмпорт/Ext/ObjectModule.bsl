Перем мВалютаРегламентированногоУчета Экспорт;

// переменные для управления реквизитами налогового учета
Перем мУчетнаяПолитикаПоНалоговомуУчету Экспорт;
Перем мУчетнаяПолитикаПоБухгалтерскомуУчету Экспорт;

Перем мПоддержкаРаботыСоСтруктурнымиПодразделениями Экспорт;
Перем мОтображатьСтруктурныеПодразделения Экспорт;

// Заполняет счета БУ в строке табличной части
//
Процедура ЗаполнитьСчетаБУ(СтрокаТЧ,  ИмяТабЧасти = "Товары", СчетаУчета, ЗаполнятьБУ)
	
	Если ЗаполнятьБУ = Истина Тогда
		СтрокаТЧ.СчетУчетаБУ  = СчетаУчета.СчетУчетаБУ;
		СтрокаТЧ.СчетУчетаНДС = ?(НЕ ЗначениеЗаполнено(СчетаУчета.СчетУчетаНДСУплаченногоНаТаможне), СчетаУчета.СчетУчетаНДСПоПриобретению, СчетаУчета.СчетУчетаНДСУплаченногоНаТаможне);
		
	ИначеЕсли ЗаполнятьБУ = Ложь Тогда
		СтрокаТЧ.СчетУчетаБУ  = ПланыСчетов.Типовой.ПустаяСсылка();
		СтрокаТЧ.СчетУчетаНДС = ПланыСчетов.Типовой.ПустаяСсылка();
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет счета НУ в строке табличной части
//
Процедура ЗаполнитьСчетаНУ(СтрокаТЧ, ИмяТабЧасти = "Товары", СчетаУчета, ЗаполнятьНУ)
	
	Если ЗаполнятьНУ  = Истина Тогда
		СтрокаТЧ.СчетУчетаНУ = СчетаУчета.СчетУчетаНУ;
		
	ИначеЕсли ЗаполнятьНУ = Ложь Тогда
		СтрокаТЧ.СчетУчетаНУ  = ПланыСчетов.Налоговый.ПустаяСсылка();
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

Процедура ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТЧ, ИмяТабЧасти = "Товары", ЗаполнятьБУ, ЗаполнятьНУ) Экспорт
	
	Склад = Неопределено;
	Если ИмяТабЧасти = "ОС" Тогда			
		СчетаУчета = УправлениеВнеоборотнымиАктивами.ПолучитьСчетаУчетаОС(Организация, СтрокаТЧ.ОсновноеСредство, Дата);
		
		Если СчетаУчета.СчетУчетаБУ = ПланыСчетов.Типовой.ПустаяСсылка() Тогда
			СчетаУчета.СчетУчетаБУ  = ПланыСчетов.Типовой.ОсновныеСредства;
		КонецЕсли;	

		Если СчетаУчета.СчетУчетаНДСПоПриобретению = ПланыСчетов.Типовой.ПустаяСсылка() Тогда
			СчетаУчета.СчетУчетаНДСПоПриобретению  = ПланыСчетов.Типовой.НалогНаДобавленнуюСтоимостьКВозмещению;
		КонецЕсли;	
	Иначе
		СчетаУчета = ПроцедурыБухгалтерскогоУчета.ПолучитьСчетаУчетаНоменклатуры(Организация, СтрокаТЧ.Номенклатура);
	КонецЕсли;
	
	
	ЗаполнитьСчетаБУ(СтрокаТЧ, ИмяТабЧасти, СчетаУчета, ЗаполнятьБУ);
	ЗаполнитьСчетаНУ(СтрокаТЧ, ИмяТабЧасти, СчетаУчета, ЗаполнятьНУ);
	
КонецПроцедуры // ЗаполнитьСчетаУчетаВСтрокеТабЧасти()

Процедура ЗаполнитьСчетаУчетаВТабЧасти(ТабличнаяЧасть,ЗаполнятьБУ, ЗаполнятьНУ) Экспорт
	ИмяТабЧасти = Метаданные.НайтиПоТипу(ТипЗнч(ТабличнаяЧасть)).Имя;
	Для каждого СтрокаТабЧасти Из ТабличнаяЧасть Цикл
		ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТабЧасти, ИмяТабЧасти, ЗаполнятьБУ, ЗаполнятьНУ);
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьСчетаУчетаВТабЧасти()

// Функция выполняет необходимые действия при изменении договора взаиморасчетов
// с контрагентом.
// Возвращаемое значение - ТекстСообщенияОбОшибке
//						ПустаяСтрока, если договор удовлетворяет условиям документа
//						Стркоа сообщений, если договор не может быть выбран в документе
Функция ПроверитьКорректностьДоговора(ДоговорКонтрагента, ТолькоВВалютеДокумента = Ложь, ТолькоВВалютеВзаиморасчетов = Ложь) Экспорт
	
	ТекстСообщения = "";
	
	Если НЕ ЗначениеЗаполнено(ДоговорКонтрагента) Тогда	 
		Возврат ТекстСообщения;	
	КонецЕсли;
	
    // Проверка владельца
	Если Не ДоговорКонтрагента.Владелец = Контрагент Тогда		
		ТекстСообщения = ТекстСообщения + Символы.ПС + "Контрагент, указанный в договоре не соответствует контрагенту, указанному в документе.";	
	КонецЕсли;	
	
	// Проверка организации
	Если Не ДоговорКонтрагента.Организация = Организация Тогда
		ТекстСообщения = ТекстСообщения + Символы.ПС + "Организация, указанная в договоре не соответствует организации документа.";		
	КонецЕсли;	
		
	// Проверка валюты
	Если НЕ ((ДоговорКонтрагента.ВалютаВзаиморасчетов = ВалютаДокумента и не ТолькоВВалютеВзаиморасчетов) или 
			ДоговорКонтрагента.ВалютаВзаиморасчетов = ВалютаВзаиморасчетов и не ТолькоВВалютеДокумента) Тогда
			
		СтрокаДоступныхВалют = 	?(не ТолькоВВалютеВзаиморасчетов, СокрЛП(ВалютаДокумента) + "," ,"") + 
								?(не ТолькоВВалютеДокумента, СокрЛП(ВалютаВзаиморасчетов),"");
		
		ТекстСообщения = ТекстСообщения + Символы.ПС + "Валюта, указанная в договоре (" + СокрЛП(ДоговорКонтрагента.ВалютаВзаиморасчетов) + ")не соответствует валютам документа - " +СтрокаДоступныхВалют;		
	КонецЕсли;	
	
	// Проверка вида договора и ведения взаиморасчетов по договору
	Если Не ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Прочее Тогда		
		ТекстСообщения = ТекстСообщения + Символы.ПС + "Вид договора(" + СокрЛП(ДоговорКонтрагента.ВидДоговора)+ ") не соответствует допустимому для документа значению - Прочее.";
	КонецЕсли;
	
		
	Если Не ДоговорКонтрагента.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом Тогда			
		ТекстСообщения = ТекстСообщения + Символы.ПС + "Способ ведения взаиморасчетов по договору (" + СокрЛП(ДоговорКонтрагента.ВедениеВзаиморасчетов)+") не соответствует допустимому для документа значению - По договору в целом.";		
		
	КонецЕсли;
	
	
	Возврат ТекстСообщения;	

КонецФункции // ПроверитьКорректностьДоговора()

// Процедура заполняет договора взаиморасчетов, если основной договор контрагента
// соответствует требованиям документа
Процедура ЗаполнитьДоговорыВСтрокеТабЧастиРазделов(СтрокаТЧРазделов) Экспорт
	Если Контрагент.Пустая() тогда
		Возврат;
	КонецЕсли;
	ОсновнойДоговор = ОбщегоНазначения.ДоступныйДоговорКонтрагента(Контрагент.ОсновнойДоговорКонтрагента);
	Если ОсновнойДоговор.Пустая() Тогда
		Возврат;
	КонецЕсли;
	// установим договор, если он отвечает условиям
	Если ПроверитьКорректностьДоговора(ОсновнойДоговор) = "" тогда
		// Для НДС и пошлины можно установить данный договор
		Если НЕ ЗначениеЗаполнено(СтрокаТЧРазделов.ДоговорВзаиморасчетовПошлина) ТОгда
			СтрокаТЧРазделов.ДоговорВзаиморасчетовПошлина = ОсновнойДоговор;
		КонецЕсли;	
		Если НЕ ЗначениеЗаполнено(СтрокаТЧРазделов.ДоговорВзаиморасчетовНДС) ТОгда
			СтрокаТЧРазделов.ДоговорВзаиморасчетовНДС = ОсновнойДоговор;
		КонецЕсли;			
		// Для сбора можно установит только договор, валюта которого равна валюте документа
		Если НЕ ЗначениеЗаполнено(СтрокаТЧРазделов.ДоговорВзаиморасчетовСбор) и ОсновнойДоговор.ВалютаВзаиморасчетов = ВалютаДокумента Тогда
			СтрокаТЧРазделов.ДоговорВзаиморасчетовСбор = ОсновнойДоговор;
		КонецЕсли;			
		// Для валютного сбора можно установит только договор, валюта которого равна валюте взаиморасчетов
		Если НЕ ЗначениеЗаполнено(СтрокаТЧРазделов.ДоговорВзаиморасчетовСборВал) и ОсновнойДоговор.ВалютаВзаиморасчетов = ВалютаВзаиморасчетов Тогда
			СтрокаТЧРазделов.ДоговорВзаиморасчетовСборВал = ОсновнойДоговор;
		КонецЕсли;			
	КонецЕсли;	
	
КонецПроцедуры // ЗаполнитьДоговорыВСтрокеТабЧастиРазделов(СтрокаТЧРазделов)

// Добавляет строку в табличную часть "Разделы"
//
// Возвращаемое значение:
//   строка табличной части, которую добавили.
//
Функция ДобавитьРаздел() Экспорт
	
	НовыйРаздел = Разделы.Добавить();
	
	НовыйРаздел.СтавкаНДС     = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяСтавкаНДС");
	
	#Если Клиент Тогда
		НовыйРаздел.СтавкаПошлины = ВосстановитьЗначение("СтавкаТаможеннойПошлины");
	#КонецЕсли
	
	Возврат НовыйРаздел;
	
КонецФункции // ДобавитьРаздел()

// Вычисляет итоговые суммы раздела по каждой табличной части.
//
Процедура ПосчитатьИтогиПоТабличнойЧасти(МассивСтрок, ВсегоСтоимость, ВсегоПошлина, ВсегоНДС, ВсегоСбор, ВсегоСборВал)	
	
	Для каждого ЭлементМассива Из МассивСтрок Цикл		
		ВсегоСтоимость 	= ВсегоСтоимость + ЭлементМассива.ФактурнаяСтоимость;
		ВсегоПошлина   	= ВсегоПошлина   + ЭлементМассива.СуммаПошлины;
		ВсегоНДС       	= ВсегоНДС       + ЭлементМассива.СуммаНДС;
		ВсегоСбор 		= ВсегоСбор 	 + ЭлементМассива.СуммаСбора;
		ВсегоСборВал	= ВсегоСборВал 	 + ЭлементМассива.СуммаСбораВал;				
	КонецЦикла;

КонецПроцедуры

// Вычисляет суммы по данным раздела.
//
// Параметры
//  НомерРаздела   - число, номер раздела по которому надо получить итоги,
//  ВсегоСтоимость - число, в этот параметр будет возвращена сумма фактурной стоимости,
//  ВсегоПошлина   - число, в этот параметр будет возвращена сумма пошлины, 
//  ВсегоНДС       - число, в этот параметр будет возвращена сумма НДС.
//  ВсегоСбор      - число, в этот параметр будет возвращена сумма таможенного сбора.
//  ВсегоСборВал   - число, в этот параметр будет возвращена сумма таможенного сбора в валюте.
//
Процедура ПосчитатьИтогиПоРазделу(НомерРаздела, ВсегоСтоимость, ВсегоПошлина, ВсегоНДС, ВсегоСбор, ВсегоСборВал)  Экспорт
	
	ВсегоСтоимость 	= 0;
	ВсегоПошлина   	= 0;
	ВсегоНДС       	= 0;
	ВсегоСбор		= 0;
	ВсегоСборВал	= 0;
	ВсегоНДС       	= 0;
	МассивСтрок    	= Товары.НайтиСтроки(Новый Структура("НомерРаздела", НомерРаздела));
	ПосчитатьИтогиПоТабличнойЧасти(МассивСтрок, ВсегоСтоимость, ВсегоПошлина, ВсегоНДС, ВсегоСбор, ВсегоСборВал);	
	
	МассивСтрокОС    	= ОС.НайтиСтроки(Новый Структура("НомерРаздела", НомерРаздела));
	ПосчитатьИтогиПоТабличнойЧасти(МассивСтрокОС, ВсегоСтоимость, ВсегоПошлина, ВсегоНДС, ВсегоСбор, ВсегоСборВал);		
КонецПроцедуры // ПосчитатьИтогиПоРазделу()


// Заполняет таб часть Товары/ОС по указанному поступлению товаров
//
// Параметры
//  ДокументПоступления - ссылка на документ ПоступлениеТоваровУслуг, определяет документ поступления, по которому надо заполнить этот документ,
//  НомерРаздела        - число, номер раздела, который надо заполнить.
//
Процедура ЗаполнитьПоПоступлению(ДокументПоступления, НомерРаздела, ИмяТабличнойЧасти = "Товары") Экспорт
	
	ОснованиеВидОперации = ДокументПоступления.ВидОперации;
	ПоддержкаУчетаВременныхРазниц = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(Организация, ОбщегоНазначения.ПолучитьРабочуюДату(), Неопределено) и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(Организация, ОбщегоНазначения.ПолучитьРабочуюДату(), Неопределено);
	   
	Если (ОснованиеВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомисия) ИЛИ (ОснованиеВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Импорт) Тогда 
		ТаблицаЗначенийТовары = ДокументПоступления[ИмяТабличнойЧасти].Выгрузить();						
	Иначе
		Возврат;		
	КонецЕсли;
	
	// пересчитываем в валюту рег. учета 
	ВалютаДокумента 		= мВалютаРегламентированногоУчета;
	
	СтруктураКурсаДокумента = ОбщегоНазначения.ПолучитьКурсВалюты(ВалютаДокумента, ОбщегоНазначения.ПолучитьРабочуюДату());
	КурсДокумента 			= СтруктураКурсаДокумента.Курс;
	КратностьДокумента 		= СтруктураКурсаДокумента.Кратность;	
	
	Если ИмяТабличнойЧасти = "ОС" Тогда			
		// видимость местонахождения ОС
		ЗаполнятьПодразделенияОС = УправлениеВнеоборотнымиАктивами.ВедетсяАналитическийУчетОСПоПодразделениям(Дата);
		ЗаполнятьМОЛОС 			 = УправлениеВнеоборотнымиАктивами.ВедетсяАналитическийУчетОСПоМОЛ(Дата);
	
		ТаблицаЗначенийТовары.Свернуть("ОсновноеСредство,ПодразделениеОрганизации, МОЛОрганизации, СчетУчетаБУ, СчетУчетаНУ, СчетУчетаНДС", "Сумма");
	КонецЕсли;
	
	// Обработка добавленных строк	
	Для Каждого СтрокаТаблицыЗначений Из ТаблицаЗначенийТовары Цикл
		
		НоваяСтрока = ЭтотОбъект[ИмяТабличнойЧасти].Добавить();
		
		НоваяСтрока.НомерРаздела     = НомерРаздела;		
		Если ИмяТабличнойЧасти = "Товары" Тогда			
			НоваяСтрока.Номенклатура     	= СтрокаТаблицыЗначений.Номенклатура;
			НоваяСтрока.КодТНВЭД         	= СтрокаТаблицыЗначений.Номенклатура.КодТНВЭД;
			НоваяСтрока.ЕдиницаИзмерения 	= СтрокаТаблицыЗначений.ЕдиницаИзмерения;
			НоваяСтрока.Количество       	= СтрокаТаблицыЗначений.Количество;
			НоваяСтрока.Коэффициент      	= СтрокаТаблицыЗначений.Коэффициент;
			НоваяСтрока.ДокументПартии   	= ДокументПоступления;
			НоваяСтрока.НаименованиеТовара 	= ?(ЗначениеЗаполнено(НоваяСтрока.Номенклатура.НаименованиеПолное), НоваяСтрока.Номенклатура.НаименованиеПолное, НоваяСтрока.Номенклатура.Наименование);

		Иначе
			НоваяСтрока.ОсновноеСредство = СтрокаТаблицыЗначений.ОсновноеСредство;
			
			Если ЗаполнятьПодразделенияОС Тогда 
				НоваяСтрока.ПодразделениеОрганизации = СтрокаТаблицыЗначений.ПодразделениеОрганизации;
			КонецЕсли;
			
			Если ЗаполнятьМОЛОС Тогда 
				НоваяСтрока.МОЛОрганизации 			 = СтрокаТаблицыЗначений.МОЛОрганизации;
			КонецЕсли;
			
			НоваяСтрока.ДокументПартии   = ДокументПоступления;
		КонецЕсли;
		
		ЗаполнитьСчетаУчетаВСтрокеТабЧасти(НоваяСтрока, ИмяТабличнойЧасти, Истина, УчитыватьКПН И (ПоддержкаУчетаВременныхРазниц ИЛИ ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ));
		
		НоваяСтрока.СчетУчетаБУ		 = СтрокаТаблицыЗначений.СчетУчетаБУ;
		НоваяСтрока.СчетУчетаНУ		 = ?(УчитыватьКПН И (ПоддержкаУчетаВременныхРазниц ИЛИ ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ), СтрокаТаблицыЗначений.СчетУчетаНУ, ПланыСчетов.Налоговый.ПустаяСсылка());
		НоваяСтрока.СчетУчетаНДС	 = СтрокаТаблицыЗначений.СчетУчетаНДС;
					
		НоваяСтрока.ФактурнаяСтоимость = ОбщегоНазначения.ПересчитатьИзВалютыВВалюту(СтрокаТаблицыЗначений.Сумма, ДокументПоступления.ВалютаДокумента,
										 ВалютаДокумента, 
										 ОбщегоНазначения.КурсДокумента(ДокументПоступления, мВалютаРегламентированногоУчета),КурсДокумента,
										 ОбщегоНазначения.КратностьДокумента(ДокументПоступления, мВалютаРегламентированногоУчета),КратностьДокумента);
				
		ЗаполнитьРеквизитыНалоговогоУчета(НоваяСтрока);
		КонецЦикла;	
КонецПроцедуры // ЗаполнитьПоПоступлению()

// Производит заполнение и установку реквизитов налогового учета и НДС в табличной части
//
Процедура ЗаполнитьРеквизитыНалоговогоУчета(СтрокаТабличнойЧасти) Экспорт
	
	ОбработкаТабличныхЧастей.ЗаполнитьНДСВидОборотаТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
	ТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");	
	ОбработкаТабличныхЧастей.ЗаполнитьНДСВидПоступленияТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект, ТекущийПользователь);			
	Если ОбщегоНазначения.ПолучитьИмяТабличнойЧастиПоСсылкеНаСтроку(СтрокаТабличнойЧасти) = "Товары" Тогда
		СтрокаТабличнойЧасти.ВидНДС = ?(Не НДСВключенВСтоимость, УчетНДСИАкциза.ПолучитьВидНДСПриИмпорте(СтрокаТабличнойЧасти.Номенклатура), Перечисления.ВидыНДС.НДС);
	Иначе
		СтрокаТабличнойЧасти.ВидНДС = Перечисления.ВидыНДС.НДС;
	КонецЕсли;	
Конецпроцедуры	

#Если Клиент Тогда
// Функция формирует табличный документ по макету "ГТДИмпорт_доп.расходы" 	
//
Функция ПечатьГТДИмпортДопРасходы_ПоКонтрагентам(ИмяМакета)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ГТДИМпорт_ДопРасходы_ПоКонтрагентам";

	СтруктурнаяЕдиницаОрганизация = ОбщегоНазначения.ПолучитьСтруктурнуюЕдиницу(Организация, СтруктурноеПодразделение);
	
	Макет = ПолучитьМакет(ИмяМакета);
	ОбластьЗаголовка = Макет.ПолучитьОбласть("Заголовок");	
	ОбластьЗаголовка.Параметры.ТекстЗаголовка = РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект.Ссылка, "Дополнительные расходы к ГТД по импорту", глСписокПрефиксовУзлов);
	ПредставлениеОрганизации = ОбщегоНазначения.ОписаниеОрганизации(ОбщегоНазначения.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, Дата), "ПолноеНаименование,");
	ПредставлениеКонтрагента = ОбщегоНазначения.ОписаниеОрганизации(ОбщегоНазначения.СведенияОЮрФизЛице(Контрагент, Дата), "ПолноеНаименование,");
	
	ОбластьЗаголовка.Параметры.ПредставлениеПолучателя 	= ПредставлениеОрганизации;
	ОбластьЗаголовка.Параметры.ПредставлениеКонтрагента = ПредставлениеКонтрагента;
	ОбластьЗаголовка.Параметры.ГТДНомер 				= НомерГТД;
	
	ТабДокумент.Вывести(ОбластьЗаголовка);
	ЗапросПоДопРасходам = Новый Запрос;
	ЗапросПоДопРасходам.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	ЗапросПоДопРасходам.Текст = "ВЫБРАТЬ
	|	ГТДИмпорт.Ссылка КАК Ссылка,
	|	ГТДИмпорт.Дата,
	|	ГТДИмпорт.Контрагент,
	|	ГТДИмпорт.ВалютаДокумента,
	|	ГТДИмпорт.НомерГТД,
	|	ГТДИмпорт.Организация,
	|	ГТДИмпорт.СтруктурноеПодразделение
	|ПОМЕСТИТЬ ВТ_ГТД
	|ИЗ
	|	Документ.ГТДИмпорт КАК ГТДИмпорт
	|ГДЕ
	|	ГТДИмпорт.Ссылка В(&Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ДопРасходы.ДопРасходыСумма) КАК ДопРасходыСумма,
	|	ВТ_ГТД.ВалютаДокумента КАК ВалютаДокумента,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ДопРасходы.КратностьВзаиморасчетов, 0) = 0
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(ДопРасходы.ДопРасходыСумма * ДопРасходы.КурсВзаиморасчетов / ДопРасходы.КратностьВзаиморасчетов, 0)
	|		КОНЕЦ) КАК ДопРасходыСуммаРегл,
	|	ДопРасходы.ДопРасходыКонтрагент КАК ДопРасходыКонтрагент,
	|	ДопРасходы.ДопРасходыСодержание,
	|	ДопРасходы.ДопРасходыСсылка,
	|	ДопРасходы.ДопРасходыДокументПартии КАК ДопРасходыДокументПартии,
	|	ПРЕДСТАВЛЕНИЕ(ДопРасходы.ДопРасходыДокументПартии),
	|	ВТ_ГТД.Ссылка КАК Ссылка,
	|	ВТ_ГТД.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ВТ_ГТД.Организация КАК Организация,
	|	ВТ_ГТД.Контрагент КАК Контрагент,
	|	ВТ_ГТД.НомерГТД КАК НомерГТД,
	|	ВТ_ГТД.Дата КАК Дата
	|ИЗ
	|	ВТ_ГТД КАК ВТ_ГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
	|			ГТДИмпортТовары.Ссылка КАК Ссылка,
	|			ГТДИмпортТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента
	|		ИЗ
	|			Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|		ГДЕ
	|			ГТДИмпортТовары.Ссылка В(&Ссылка)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ГТДИмпортТовары.ДокументПартии,
	|			ГТДИмпортТовары.Ссылка,
	|			ГТДИмпортТовары.Ссылка.ВалютаДокумента
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ГТДИмпортОС.ДокументПартии,
	|			ГТДИмпортОС.Ссылка,
	|			ГТДИмпортОС.Ссылка.ВалютаДокумента
	|		ИЗ
	|			Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	|		ГДЕ
	|			ГТДИмпортОС.Ссылка В(&Ссылка)) КАК ГТДИМпорт
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ВЫБОР
	|					КОГДА ПоступлениеДопРасходовТовары.Ссылка.СуммаВключаетНДС
	|							И НЕ ПоступлениеДопРасходовТовары.Ссылка.НДСВключенВСтоимость
	|						ТОГДА СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения - ПоступлениеДопРасходовТовары.СуммаРаспределенияНДС)
	|					ИНАЧЕ СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения)
	|				КОНЕЦ КАК ДопРасходыСумма,
	|				ПоступлениеДопРасходовТовары.ДокументПартии КАК ДопРасходыДокументПартии,
	|				ПоступлениеДопРасходовТовары.Ссылка КАК ДопРасходыСсылка,
	|				ПоступлениеДопРасходовТовары.Ссылка.Контрагент КАК ДопРасходыКонтрагент,
	|				ВЫРАЗИТЬ(ПоступлениеДопРасходовТовары.Ссылка.Содержание КАК СТРОКА(1000)) КАК ДопРасходыСодержание,
	|				ПоступлениеДопРасходовТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|				ПоступлениеДопРасходовТовары.Ссылка.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|				ПоступлениеДопРасходовТовары.Ссылка.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов
	|			ИЗ
	|				Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|			ГДЕ
	|				ПоступлениеДопРасходовТовары.Ссылка.Проведен = ИСТИНА
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ПоступлениеДопРасходовТовары.ДокументПартии,
	|				ПоступлениеДопРасходовТовары.Ссылка,
	|				ПоступлениеДопРасходовТовары.Ссылка.Контрагент,
	|				ВЫРАЗИТЬ(ПоступлениеДопРасходовТовары.Ссылка.Содержание КАК СТРОКА(1000)),
	|				ПоступлениеДопРасходовТовары.Ссылка.ВалютаДокумента,
	|				ПоступлениеДопРасходовТовары.Ссылка.КурсВзаиморасчетов,
	|				ПоступлениеДопРасходовТовары.Ссылка.КратностьВзаиморасчетов,
	|				ПоступлениеДопРасходовТовары.Ссылка.СуммаВключаетНДС,
	|				ПоступлениеДопРасходовТовары.Ссылка.НДСВключенВСтоимость
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ВЫБОР
	|					КОГДА ПоступлениеДопРасходовОС.Ссылка.СуммаВключаетНДС
	|							И НЕ ПоступлениеДопРасходовОС.Ссылка.НДСВключенВСтоимость
	|						ТОГДА СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения - ПоступлениеДопРасходовОС.СуммаРаспределенияНДС)
	|					ИНАЧЕ СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения)
	|				КОНЕЦ,
	|				ПоступлениеДопРасходовОС.ДокументПартии,
	|				ПоступлениеДопРасходовОС.Ссылка,
	|				ПоступлениеДопРасходовОС.Ссылка.Контрагент,
	|				ВЫРАЗИТЬ(ПоступлениеДопРасходовОС.Ссылка.Содержание КАК СТРОКА(1000)),
	|				ПоступлениеДопРасходовОС.Ссылка.ВалютаДокумента,
	|				ПоступлениеДопРасходовОС.Ссылка.КурсВзаиморасчетов,
	|				ПоступлениеДопРасходовОС.Ссылка.КратностьВзаиморасчетов
	|			ИЗ
	|				Документ.ПоступлениеДопРасходов.ОС КАК ПоступлениеДопРасходовОС
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ПоступлениеДопРасходовОС.ДокументПартии,
	|				ПоступлениеДопРасходовОС.Ссылка.СуммаВключаетНДС,
	|				ПоступлениеДопРасходовОС.Ссылка.НДСВключенВСтоимость,
	|				ПоступлениеДопРасходовОС.Ссылка,
	|				ВЫРАЗИТЬ(ПоступлениеДопРасходовОС.Ссылка.Содержание КАК СТРОКА(1000)),
	|				ПоступлениеДопРасходовОС.Ссылка.Контрагент,
	|				ПоступлениеДопРасходовОС.Ссылка.ВалютаДокумента,
	|				ПоступлениеДопРасходовОС.Ссылка.КурсВзаиморасчетов,
	|				ПоступлениеДопРасходовОС.Ссылка.КратностьВзаиморасчетов) КАК ДопРасходы
	|			ПО ГТДИМпорт.ДокументПартии = ДопРасходы.ДопРасходыДокументПартии
	|		ПО ВТ_ГТД.Ссылка = ГТДИМпорт.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДопРасходы.ДопРасходыКонтрагент,
	|	ДопРасходы.ДопРасходыСодержание,
	|	ДопРасходы.ДопРасходыСсылка,
	|	ДопРасходы.ДопРасходыДокументПартии,
	|	ВТ_ГТД.Ссылка,
	|	ВТ_ГТД.СтруктурноеПодразделение,
	|	ВТ_ГТД.Организация,
	|	ВТ_ГТД.Контрагент,
	|	ВТ_ГТД.НомерГТД,
	|	ВТ_ГТД.Дата,
	|	ВТ_ГТД.ВалютаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ДопРасходыДокументПартии,
	|	ДопРасходыКонтрагент
	|ИТОГИ
	|	СУММА(ДопРасходыСумма),
	|	МАКСИМУМ(ВалютаДокумента),
	|	СУММА(ДопРасходыСуммаРегл),
	|	МАКСИМУМ(СтруктурноеПодразделение),
	|	МАКСИМУМ(Организация),
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(НомерГТД),
	|	МАКСИМУМ(Дата)
	|ПО
	|	Ссылка,
	|	ДопРасходыКонтрагент
	|АВТОУПОРЯДОЧИВАНИЕ";    			
	
	РезультатДопРасходы = ЗапросПоДопРасходам.Выполнить();
	ВыборкаДопРасходыИтоги = РезультатДопРасходы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаДопРасходыИтоги.Следующий();
	
						
	ОбластьШапки = Макет.ПолучитьОбласть("Шапка");		
	ОбластьШапки.Параметры.ВалютаДокумента 	= ВалютаДокумента;
		
	ТабДокумент.Вывести(ОбластьШапки);
	
	ОбластьКонтрагент	= Макет.ПолучитьОбласть("Контрагент");			
	ОбластьДанных  		= Макет.ПолучитьОбласть("Данные");			
	ОбластьДопРасходовГр= Макет.ПолучитьОбласть("ДопРасходыГр");		
	ОбластьПодвала 		= Макет.ПолучитьОбласть("Подвал");		
		
		
	ОбластьПодвала.Параметры.Заполнить(ВыборкаДопРасходыИтоги);
	
	// Контрагенты
	ВыборкаКонтрагенты = ВыборкаДопРасходыИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	НомерСтрокиПечати = 0;
	
	Пока ВыборкаКонтрагенты.Следующий() Цикл
		ИтогоСтоимость = 0;
		НомерСтрокиПечати = НомерСтрокиПечати + 1;
		
		ОбластьКонтрагент.Параметры.Заполнить(ВыборкаКонтрагенты);
		ОбластьКонтрагент.Параметры.ПредставлениеКонтрагента = СокрЛП(ОбщегоНазначения.ОписаниеОрганизации(ОбщегоНазначения.СведенияОЮрФизЛице(ВыборкаКонтрагенты.ДопРасходыКонтрагент, Дата), "ПолноеНаименование,"));
		ОбластьКонтрагент.Параметры.НомерСтрокиПечати = НомерСтрокиПечати;
		ТабДокумент.Вывести(ОбластьКонтрагент);		
		
		ОбластьДопРасходовГр.Параметры.Заполнить(ВыборкаКонтрагенты);
				
		ВыборкаДопРасходы = ВыборкаКонтрагенты.Выбрать();				
		
		Пока ВыборкаДопРасходы.Следующий()Цикл
			ОбластьДанных.Параметры.Заполнить(ВыборкаДопРасходы);
			Если ЗначениеЗаполнено(ВыборкаДопРасходы.ДопРасходыСумма) Тогда
				ОбластьДанных.Параметры.ДопРасходыСумма = ОбщегоНазначения.ФорматСумм(ВыборкаДопРасходы.ДопРасходыСумма,ВыборкаДопРасходы.ВалютаДокумента);
			КонецЕсли;
			ОбластьДанных.Параметры.ДопРасходыСодержание = СокрЛП(ВыборкаДопРасходы.ДопРасходыСодержание);
			
			ТабДокумент.Вывести(ОбластьДанных);			
		КонецЦикла;
		
		ТабДокумент.Вывести(ОбластьДопРасходовГр);				
	КонецЦикла;
	
	ОбластьПодвала.Параметры.ВалютаДокумента = ВалютаДокумента;
	ТабДокумент.Вывести(ОбластьПодвала);
	
	Возврат ТабДокумент;
	
КонецФункции

// Функция формирует табличный документ по макету "ГТДИмпорт_доп.расходы" 	
//
Функция ПечатьГТДИмпортДопРасходы(ИмяМакета)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ГТДИМпорт_ДопРасходы";

	СтруктурнаяЕдиницаОрганизация = ОбщегоНазначения.ПолучитьСтруктурнуюЕдиницу(Организация, СтруктурноеПодразделение);
	
	Макет = ПолучитьМакет(ИмяМакета);
	ОбластьЗаголовка = Макет.ПолучитьОбласть("Заголовок");	
	ОбластьЗаголовка.Параметры.ТекстЗаголовка = РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект.Ссылка, "ГТД по импорту", глСписокПрефиксовУзлов);
	ПредставлениеОрганизации = ОбщегоНазначения.ОписаниеОрганизации(ОбщегоНазначения.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, Дата), "ПолноеНаименование,");
	ПредставлениеКонтрагента = ОбщегоНазначения.ОписаниеОрганизации(ОбщегоНазначения.СведенияОЮрФизЛице(Контрагент, Дата), "ПолноеНаименование,");
	
	ОбластьЗаголовка.Параметры.ПредставлениеПолучателя 	= ПредставлениеОрганизации;
	ОбластьЗаголовка.Параметры.ПредставлениеКонтрагента = ПредставлениеКонтрагента;
	ОбластьЗаголовка.Параметры.ГТДНомер 				= НомерГТД;
	
	ТабДокумент.Вывести(ОбластьЗаголовка);
	ЗапросПоДопРасходам = Новый Запрос;
	ЗапросПоДопРасходам.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	ЗапросПоДопРасходам.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГТДИМпорт.Номенклатура КАК Номенклатура,
	|	ДопРасходы.ДопРасходыСумма,
	|	ДопРасходы.ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДопРасходы.КратностьВзаиморасчетов, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ДопРасходы.ДопРасходыСумма * ДопРасходы.КурсВзаиморасчетов / ДопРасходы.КратностьВзаиморасчетов, 0)
	|	КОНЕЦ КАК ДопРасходыСуммаРегл,
	|	ДопРасходы.ДопРасходыКонтрагент КАК ДопРасходыКонтрагент,
	|	ДопРасходы.ДопРасходыСодержание,
	|	ДопРасходы.ДопРасходыСсылка,
	|	ДопРасходы.ДопРасходыДокументПартии КАК ДопРасходыДокументПартии,
	|	ГТДИМпорт.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	|		ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
	|		ГТДИмпортТовары.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|	ГДЕ
	|		ГТДИмпортТовары.Ссылка В(&Ссылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГТДИмпортТовары.Номенклатура,
	|		ГТДИмпортТовары.ДокументПартии,
	|		ГТДИмпортТовары.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ГТДИмпортОС.ОсновноеСредство,
	|		ГТДИмпортОС.ДокументПартии,
	|		ГТДИмпортОС.Ссылка
	|	ИЗ
	|		Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	|	ГДЕ
	|		ГТДИмпортОС.Ссылка В(&Ссылка)) КАК ГТДИМпорт
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПоступлениеДопРасходовТовары.Номенклатура КАК ДопРасходыНоменклатура,
	|			ВЫБОР
	|				КОГДА ПоступлениеДопРасходовТовары.Ссылка.СуммаВключаетНДС
	|						И НЕ ПоступлениеДопРасходовТовары.Ссылка.НДСВключенВСтоимость
	|					ТОГДА СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения - ПоступлениеДопРасходовТовары.СуммаРаспределенияНДС)
	|				ИНАЧЕ СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения)
	|			КОНЕЦ КАК ДопРасходыСумма,
	|			ПоступлениеДопРасходовТовары.ДокументПартии КАК ДопРасходыДокументПартии,
	|			ПоступлениеДопРасходовТовары.Ссылка КАК ДопРасходыСсылка,
	|			ПоступлениеДопРасходовТовары.Ссылка.Контрагент КАК ДопРасходыКонтрагент,
	|			ВЫРАЗИТЬ(ПоступлениеДопРасходовТовары.Ссылка.Содержание КАК СТРОКА(1000)) КАК ДопРасходыСодержание,
	|			ПоступлениеДопРасходовТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|			ПоступлениеДопРасходовТовары.Ссылка.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|			ПоступлениеДопРасходовТовары.Ссылка.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов
	|		ИЗ
	|			Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|		ГДЕ
	|			ПоступлениеДопРасходовТовары.Ссылка.Проведен = ИСТИНА
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПоступлениеДопРасходовТовары.Номенклатура,
	|			ПоступлениеДопРасходовТовары.ДокументПартии,
	|			ПоступлениеДопРасходовТовары.Ссылка,
	|			ПоступлениеДопРасходовТовары.Ссылка.Контрагент,
	|			ВЫРАЗИТЬ(ПоступлениеДопРасходовТовары.Ссылка.Содержание КАК СТРОКА(1000)),
	|			ПоступлениеДопРасходовТовары.Ссылка.ВалютаДокумента,
	|			ПоступлениеДопРасходовТовары.Ссылка.КурсВзаиморасчетов,
	|			ПоступлениеДопРасходовТовары.Ссылка.КратностьВзаиморасчетов,
	|			ПоступлениеДопРасходовТовары.Ссылка.СуммаВключаетНДС,
	|			ПоступлениеДопРасходовТовары.Ссылка.НДСВключенВСтоимость
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ПоступлениеДопРасходовОС.ОсновноеСредство,
	|			ВЫБОР
	|				КОГДА ПоступлениеДопРасходовОС.Ссылка.СуммаВключаетНДС
	|						И НЕ ПоступлениеДопРасходовОС.Ссылка.НДСВключенВСтоимость
	|					ТОГДА СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения - ПоступлениеДопРасходовОС.СуммаРаспределенияНДС)
	|				ИНАЧЕ СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения)
	|			КОНЕЦ,
	|			ПоступлениеДопРасходовОС.ДокументПартии,
	|			ПоступлениеДопРасходовОС.Ссылка,
	|			ПоступлениеДопРасходовОС.Ссылка.Контрагент,
	|			ВЫРАЗИТЬ(ПоступлениеДопРасходовОС.Ссылка.Содержание КАК СТРОКА(1000)),
	|			ПоступлениеДопРасходовОС.Ссылка.ВалютаДокумента,
	|			ПоступлениеДопРасходовОС.Ссылка.КурсВзаиморасчетов,
	|			ПоступлениеДопРасходовОС.Ссылка.КратностьВзаиморасчетов
	|		ИЗ
	|			Документ.ПоступлениеДопРасходов.ОС КАК ПоступлениеДопРасходовОС
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПоступлениеДопРасходовОС.ОсновноеСредство,
	|			ПоступлениеДопРасходовОС.ДокументПартии,
	|			ПоступлениеДопРасходовОС.Ссылка.СуммаВключаетНДС,
	|			ПоступлениеДопРасходовОС.Ссылка.НДСВключенВСтоимость,
	|			ПоступлениеДопРасходовОС.Ссылка,
	|			ВЫРАЗИТЬ(ПоступлениеДопРасходовОС.Ссылка.Содержание КАК СТРОКА(1000)),
	|			ПоступлениеДопРасходовОС.Ссылка.Контрагент,
	|			ПоступлениеДопРасходовОС.Ссылка.ВалютаДокумента,
	|			ПоступлениеДопРасходовОС.Ссылка.КурсВзаиморасчетов,
	|			ПоступлениеДопРасходовОС.Ссылка.КратностьВзаиморасчетов) КАК ДопРасходы
	|		ПО ГТДИМпорт.ДокументПартии = ДопРасходы.ДопРасходыДокументПартии
	|			И ГТДИМпорт.Номенклатура = ДопРасходы.ДопРасходыНоменклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ДопРасходыДокументПартии,
	|	ДопРасходыКонтрагент";       	
	
	ЗапросПоГТД = Новый Запрос;
	ЗапросПоГТД.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура);
	ЗапросПоГТД.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	ВидыСубконтоОС = Новый Массив;
	ВидыСубконтоОС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ОсновныеСредства);
	ЗапросПоГТД.УстановитьПараметр("ВидыСубконтоОС", ВидыСубконтоОС);
	
	ЗапросПоГТД.Текст = "ВЫБРАТЬ
	                    |	ГТДИмпортТовары.ДокументПартии
	                    |ПОМЕСТИТЬ ВТ_ДокументыПартии
	                    |ИЗ
	                    |	Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	                    |ГДЕ
	                    |	ГТДИмпортТовары.Ссылка В(&Ссылка)
	                    |
	                    |ОБЪЕДИНИТЬ
	                    |
	                    |ВЫБРАТЬ
	                    |	ГТДИмпортОС.ДокументПартии
	                    |ИЗ
	                    |	Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	                    |ГДЕ
	                    |	ГТДИмпортОС.Ссылка В(&Ссылка)
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	ТиповойОборотыДтКт.СубконтоДт1,
	                    |	ТиповойОборотыДтКт.Регистратор,
	                    |	ТиповойОборотыДтКт.СчетДт,
	                    |	ТиповойОборотыДтКт.СуммаОборот
	                    |ПОМЕСТИТЬ ВТ_ТиповойОборотыДтКт
	                    |ИЗ
	                    |	РегистрБухгалтерии.Типовой.ОборотыДтКт(, , Регистратор, , &ВидыСубконто, , , ) КАК ТиповойОборотыДтКт
	                    |ГДЕ
	                    |	ТиповойОборотыДтКт.Регистратор В
	                    |			(ВЫБРАТЬ
	                    |				ВТ_ДокументыПартии.ДокументПартии
	                    |			ИЗ
	                    |				ВТ_ДокументыПартии)
	                    |
	                    |ОБЪЕДИНИТЬ ВСЕ
	                    |
	                    |ВЫБРАТЬ
	                    |	ТиповойОборотыДтКт.СубконтоДт1,
	                    |	ТиповойОборотыДтКт.Регистратор,
	                    |	ТиповойОборотыДтКт.СчетДт,
	                    |	ТиповойОборотыДтКт.СуммаОборот
	                    |ИЗ
	                    |	РегистрБухгалтерии.Типовой.ОборотыДтКт(, , Регистратор, , &ВидыСубконтоОС, , , ) КАК ТиповойОборотыДтКт
	                    |ГДЕ
	                    |	ТиповойОборотыДтКт.Регистратор В
	                    |			(ВЫБРАТЬ
	                    |				ВТ_ДокументыПартии.ДокументПартии
	                    |			ИЗ
	                    |				ВТ_ДокументыПартии)
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	ГТДИмпорт.Ссылка КАК Ссылка,
	                    |	ГТДИмпорт.Дата,
	                    |	ГТДИмпорт.ВалютаВзаиморасчетов,
	                    |	ГТДИмпорт.ВалютаДокумента,
	                    |	ГТДИмпорт.Контрагент,
	                    |	ГТДИмпорт.НДСВключенВСтоимость,
	                    |	ГТДИмпорт.НомерГТД,
	                    |	ГТДИмпорт.Организация,
	                    |	ГТДИмпорт.СтруктурноеПодразделение
	                    |ПОМЕСТИТЬ ВТ_ГТД
	                    |ИЗ
	                    |	Документ.ГТДИмпорт КАК ГТДИмпорт
	                    |ГДЕ
	                    |	ГТДИмпорт.Ссылка В(&Ссылка)
	                    |
	                    |ИНДЕКСИРОВАТЬ ПО
	                    |	Ссылка
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                    |	ВТ_ГТД.Ссылка КАК Ссылка,
	                    |	ГТДИмпорт.Номенклатура КАК Номенклатура,
	                    |	ГТДИмпорт.ДокументПартии КАК ДокументПартии,
	                    |	ГТДИмпорт.СуммаПоступленияРегл КАК СуммаПоступленияРегл,
	                    |	ГТДИмпорт.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
	                    |	ГТДИмпорт.СуммаПошлиныВВалюте КАК СуммаПошлиныВВалюте,
	                    |	ГТДИмпорт.СуммаСбора КАК СуммаСбора,
	                    |	ГТДИмпорт.СуммаСбораВВалюте КАК СуммаСбораВВалюте,
	                    |	ГТДИмпорт.СтавкаПошлины КАК СтавкаПошлины,
	                    |	ГТДИмпорт.СуммаНДСВВалюте КАК СуммаНДСВВалюте,
	                    |	ГТДИмпорт.СуммаПошлиныРегл КАК СуммаПошлиныРегл,
	                    |	ГТДИмпорт.СуммаВалютногоСбораРегл КАК СуммаВалютногоСбораРегл,
	                    |	ГТДИмпорт.СуммаНДСРегл КАК СуммаНДСРегл,
	                    |	ГТДИмпорт.ОбщаяСуммаРегл + ЕСТЬNULL(ДопРасходы.ДопРасходыСуммаРегл, 0) КАК ОбщаяСуммаРегл,
	                    |	ГТДИмпорт.КодНоменклатуры КАК КодНоменклатуры,
	                    |	ВЫБОР
	                    |		КОГДА ГТДИмпорт.КоличествоПоступления = 0
	                    |			ТОГДА 0
	                    |		ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпорт.СуммаПоступленияРегл / ГТДИмпорт.КоличествоПоступления КАК ЧИСЛО(15, 2))
	                    |	КОНЕЦ КАК ЦенаРегл,
	                    |	ВЫБОР
	                    |		КОГДА ГТДИмпорт.КоличествоПоступления = 0
	                    |			ТОГДА 0
	                    |		ИНАЧЕ ВЫРАЗИТЬ((ГТДИмпорт.ОбщаяСуммаРегл + ЕСТЬNULL(ДопРасходы.ДопРасходыСуммаРегл, 0)) / ГТДИмпорт.КоличествоПоступления КАК ЧИСЛО(15, 2))
	                    |	КОНЕЦ КАК ОбщаяЦенаРегл,
	                    |	ДопРасходы.ДопРасходыСуммаРегл КАК ДопРасходыСуммаРегл,
	                    |	ПРЕДСТАВЛЕНИЕ(ГТДИмпорт.ДокументПартии) КАК ПредставлениеДокументаПартии,
	                    |	ГТДИмпорт.КоличествоПоступления,
	                    |	ВТ_ГТД.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	                    |	ВТ_ГТД.Контрагент КАК Контрагент,
	                    |	ВТ_ГТД.Организация КАК Организация,
	                    |	ВТ_ГТД.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	                    |	ВТ_ГТД.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	                    |	ВТ_ГТД.Дата КАК Дата,
	                    |	ВТ_ГТД.НомерГТД КАК НомерГТД,
	                    |	ВТ_ГТД.ВалютаДокумента КАК ВалютаДокумента
	                    |ИЗ
	                    |	ВТ_ГТД КАК ВТ_ГТД
	                    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                    |			ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	                    |			СУММА(ГТДИмпортТовары.ФактурнаяСтоимость) КАК ТаможеннаяСтоимость,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ГТДИмпортТовары.СуммаПошлины
	                    |				КОНЕЦ) КАК СуммаПошлиныВВалюте,
	                    |			СУММА(ГТДИмпортТовары.СуммаСбора) КАК СуммаСбора,
	                    |			СУММА(ГТДИмпортТовары.СуммаСбораВал) КАК СуммаСбораВВалюте,
	                    |			СУММА(ЕСТЬNULL(ГТДИмпортТовары.Количество, 0)) КАК КоличествоПоступления,
	                    |			СУММА(ГТДИмпортРазделы.СтавкаПошлины) КАК СтавкаПошлины,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ГТДИмпортТовары.СуммаНДС
	                    |				КОНЕЦ) КАК СуммаНДСВВалюте,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	                    |						ТОГДА ГТДИмпортТовары.СуммаПошлины
	                    |					КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаПошлины * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	                    |				КОНЕЦ) КАК СуммаПошлиныРегл,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаСбораВал * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	                    |				КОНЕЦ) КАК СуммаВалютногоСбораРегл,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	                    |						ТОГДА ГТДИмпортТовары.СуммаНДС
	                    |					КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаНДС * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	                    |				КОНЕЦ) КАК СуммаНДСРегл,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ЕСТЬNULL(ПоступлениеТМЗ.Количество, 0) = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ЕСТЬNULL(ТиповойОборотыДтКт.СуммаОборот, 0) * ЕСТЬNULL(ГТДИмпортТовары.Количество, 0) / ПоступлениеТМЗ.Количество
	                    |				КОНЕЦ) КАК СуммаПоступленияРегл,
	                    |			СУММА(ВЫБОР
	                    |					КОГДА ЕСТЬNULL(ПоступлениеТМЗ.Количество, 0) = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ЕСТЬNULL(ТиповойОборотыДтКт.СуммаОборот, 0) * ЕСТЬNULL(ГТДИмпортТовары.Количество, 0) / ПоступлениеТМЗ.Количество
	                    |				КОНЕЦ + ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	                    |						ТОГДА ГТДИмпортТовары.СуммаПошлины
	                    |					КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаПошлины * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	                    |				КОНЕЦ + ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	                    |						ТОГДА 0
	                    |					ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаСбораВал * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	                    |				КОНЕЦ + ВЫБОР
	                    |					КОГДА ГТДИмпортРазделы.Ссылка.НДСВключенВСтоимость
	                    |						ТОГДА ВЫБОР
	                    |								КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	                    |									ТОГДА ГТДИмпортТовары.СуммаНДС
	                    |								КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	                    |									ТОГДА 0
	                    |								ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаНДС * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	                    |							КОНЕЦ
	                    |					ИНАЧЕ 0
	                    |				КОНЕЦ + ГТДИмпортТовары.СуммаСбора) КАК ОбщаяСуммаРегл,
	                    |			ГТДИмпортТовары.Номенклатура.Код КАК КодНоменклатуры,
	                    |			ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
	                    |			ГТДИмпортТовары.Ссылка КАК Ссылка
	                    |		ИЗ
	                    |			(ВЫБРАТЬ
	                    |				МИНИМУМ(ГТДИмпортТовары.НомерСтроки) КАК НомерСтроки,
	                    |				ГТДИмпортТовары.НомерРаздела КАК НомерРаздела,
	                    |				ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	                    |				СУММА(ГТДИмпортТовары.Количество) КАК Количество,
	                    |				СУММА(ГТДИмпортТовары.ФактурнаяСтоимость) КАК ФактурнаяСтоимость,
	                    |				СУММА(ГТДИмпортТовары.СуммаПошлины) КАК СуммаПошлины,
	                    |				СУММА(ГТДИмпортТовары.СуммаСбора) КАК СуммаСбора,
	                    |				СУММА(ГТДИмпортТовары.СуммаСбораВал) КАК СуммаСбораВал,
	                    |				ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
	                    |				ГТДИмпортТовары.Ссылка КАК Ссылка,
	                    |				СУММА(ГТДИмпортТовары.СуммаНДС) КАК СуммаНДС,
	                    |				ГТДИмпортТовары.СчетУчетаБУ КАК СчетУчетаБУ
	                    |			ИЗ
	                    |				(ВЫБРАТЬ
	                    |					ГТДИмпортТовары.НомерСтроки КАК НомерСтроки,
	                    |					ГТДИмпортТовары.НомерРаздела КАК НомерРаздела,
	                    |					ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	                    |					ГТДИмпортТовары.Количество КАК Количество,
	                    |					ГТДИмпортТовары.ФактурнаяСтоимость КАК ФактурнаяСтоимость,
	                    |					ГТДИмпортТовары.СуммаПошлины КАК СуммаПошлины,
	                    |					ГТДИмпортТовары.СуммаСбора КАК СуммаСбора,
	                    |					ГТДИмпортТовары.СуммаСбораВал КАК СуммаСбораВал,
	                    |					ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
	                    |					ГТДИмпортТовары.Ссылка КАК Ссылка,
	                    |					ГТДИмпортТовары.СуммаНДС КАК СуммаНДС,
	                    |					ГТДИмпортТовары.СчетУчетаБУ КАК СчетУчетаБУ
	                    |				ИЗ
	                    |					Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	                    |				ГДЕ
	                    |					ГТДИмпортТовары.Ссылка В(&Ссылка)
	                    |				
	                    |				ОБЪЕДИНИТЬ ВСЕ
	                    |				
	                    |				ВЫБРАТЬ
	                    |					ГТДИмпортОС.НомерСтроки,
	                    |					ГТДИмпортОС.НомерРаздела,
	                    |					ГТДИмпортОС.ОсновноеСредство,
	                    |					1,
	                    |					ГТДИмпортОС.ФактурнаяСтоимость,
	                    |					ГТДИмпортОС.СуммаПошлины,
	                    |					ГТДИмпортОС.СуммаСбора,
	                    |					ГТДИмпортОС.СуммаСбораВал,
	                    |					ГТДИмпортОС.ДокументПартии,
	                    |					ГТДИмпортОС.Ссылка,
	                    |					ГТДИмпортОС.СуммаНДС,
	                    |					ГТДИмпортОС.СчетУчетаБУ
	                    |				ИЗ
	                    |					Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	                    |				ГДЕ
	                    |					ГТДИмпортОС.Ссылка В(&Ссылка)) КАК ГТДИмпортТовары
	                    |			
	                    |			СГРУППИРОВАТЬ ПО
	                    |				ГТДИмпортТовары.НомерРаздела,
	                    |				ГТДИмпортТовары.Номенклатура,
	                    |				ГТДИмпортТовары.ДокументПартии,
	                    |				ГТДИмпортТовары.СчетУчетаБУ,
	                    |				ГТДИмпортТовары.Ссылка) КАК ГТДИмпортТовары
	                    |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	                    |				ПО ГТДИмпортТовары.Ссылка = ГТДИмпортРазделы.Ссылка
	                    |					И ГТДИмпортТовары.НомерРаздела = ГТДИмпортРазделы.НомерСтроки
	                    |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                    |					ПоступлениеТоваровУслугТовары.Ссылка КАК Ссылка,
	                    |					ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	                    |					ПоступлениеТоваровУслугТовары.ВалютаДокумента КАК ВалютаДокумента,
	                    |					СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
	                    |					СУММА(ПоступлениеТоваровУслугТовары.СуммаПоступленияВал) КАК СуммаПоступленияВал
	                    |				ИЗ
	                    |					(ВЫБРАТЬ
	                    |						ПоступлениеТоваровУслугТовары.Ссылка КАК Ссылка,
	                    |						ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	                    |						ПоступлениеТоваровУслугТовары.Количество КАК Количество,
	                    |						ВЫБОР
	                    |							КОГДА ПоступлениеТоваровУслугТовары.Ссылка.СуммаВключаетНДС
	                    |									И НЕ ПоступлениеТоваровУслугТовары.Ссылка.НДСВключенВСтоимость
	                    |								ТОГДА ПоступлениеТоваровУслугТовары.Сумма - ПоступлениеТоваровУслугТовары.СуммаНДС
	                    |							ИНАЧЕ ПоступлениеТоваровУслугТовары.Сумма
	                    |						КОНЕЦ КАК СуммаПоступленияВал,
	                    |						ПоступлениеТоваровУслугТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента
	                    |					ИЗ
	                    |						Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	                    |					
	                    |					ОБЪЕДИНИТЬ ВСЕ
	                    |					
	                    |					ВЫБРАТЬ
	                    |						ПоступлениеТоваровУслугОС.Ссылка,
	                    |						ПоступлениеТоваровУслугОС.ОсновноеСредство,
	                    |						1,
	                    |						ВЫБОР
	                    |							КОГДА ПоступлениеТоваровУслугОС.Ссылка.СуммаВключаетНДС
	                    |									И НЕ ПоступлениеТоваровУслугОС.Ссылка.НДСВключенВСтоимость
	                    |								ТОГДА ПоступлениеТоваровУслугОС.Сумма - ПоступлениеТоваровУслугОС.СуммаНДС
	                    |							ИНАЧЕ ПоступлениеТоваровУслугОС.Сумма
	                    |						КОНЕЦ,
	                    |						ПоступлениеТоваровУслугОС.Ссылка.ВалютаДокумента
	                    |					ИЗ
	                    |						Документ.ПоступлениеТоваровУслуг.ОС КАК ПоступлениеТоваровУслугОС) КАК ПоступлениеТоваровУслугТовары
	                    |				
	                    |				СГРУППИРОВАТЬ ПО
	                    |					ПоступлениеТоваровУслугТовары.Ссылка,
	                    |					ПоступлениеТоваровУслугТовары.Номенклатура,
	                    |					ПоступлениеТоваровУслугТовары.ВалютаДокумента) КАК ПоступлениеТМЗ
	                    |				ПО ГТДИмпортТовары.ДокументПартии = ПоступлениеТМЗ.Ссылка
	                    |					И ГТДИмпортТовары.Номенклатура = ПоступлениеТМЗ.Номенклатура
	                    |				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТиповойОборотыДтКт КАК ТиповойОборотыДтКт
	                    |				ПО ГТДИмпортТовары.Номенклатура = ТиповойОборотыДтКт.СубконтоДт1
	                    |					И ГТДИмпортТовары.ДокументПартии = ТиповойОборотыДтКт.Регистратор
	                    |					И ГТДИмпортТовары.СчетУчетаБУ = ТиповойОборотыДтКт.СчетДт
	                    |		
	                    |		СГРУППИРОВАТЬ ПО
	                    |			ГТДИмпортТовары.Номенклатура,
	                    |			ГТДИмпортТовары.ДокументПартии,
	                    |			ГТДИмпортТовары.Номенклатура.Код,
	                    |			ГТДИмпортТовары.Ссылка) КАК ГТДИмпорт
	                    |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                    |				ДопРасходы.ДопРасходыНоменклатура КАК ДопРасходыНоменклатура,
	                    |				СУММА(ДопРасходы.ДопРасходыСумма) КАК ДопРасходыСумма,
	                    |				ДопРасходы.ДопРасходыДокументПартии КАК ДопРасходыДокументПартии,
	                    |				СУММА(ДопРасходы.ДопРасходыСуммаРегл) КАК ДопРасходыСуммаРегл
	                    |			ИЗ
	                    |				(ВЫБРАТЬ
	                    |					ПоступлениеДопРасходовТовары.Номенклатура КАК ДопРасходыНоменклатура,
	                    |					ВЫБОР
	                    |						КОГДА ПоступлениеДопРасходовТовары.Ссылка.СуммаВключаетНДС
	                    |								И НЕ ПоступлениеДопРасходовТовары.Ссылка.НДСВключенВСтоимость
	                    |							ТОГДА СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения - ПоступлениеДопРасходовТовары.СуммаРаспределенияНДС)
	                    |						ИНАЧЕ СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения)
	                    |					КОНЕЦ КАК ДопРасходыСумма,
	                    |					ПоступлениеДопРасходовТовары.ДокументПартии КАК ДопРасходыДокументПартии,
	                    |					ВЫБОР
	                    |						КОГДА ПоступлениеДопРасходовТовары.Ссылка.КратностьВзаиморасчетов = 0
	                    |							ТОГДА 0
	                    |						ИНАЧЕ ПоступлениеДопРасходовТовары.Ссылка.КурсВзаиморасчетов / ПоступлениеДопРасходовТовары.Ссылка.КратностьВзаиморасчетов * ВЫБОР
	                    |								КОГДА ПоступлениеДопРасходовТовары.Ссылка.СуммаВключаетНДС
	                    |										И НЕ ПоступлениеДопРасходовТовары.Ссылка.НДСВключенВСтоимость
	                    |									ТОГДА СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения - ПоступлениеДопРасходовТовары.СуммаРаспределенияНДС)
	                    |								ИНАЧЕ СУММА(ПоступлениеДопРасходовТовары.СуммаРаспределения)
	                    |							КОНЕЦ
	                    |					КОНЕЦ КАК ДопРасходыСуммаРегл
	                    |				ИЗ
	                    |					Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	                    |				ГДЕ
	                    |					ПоступлениеДопРасходовТовары.Ссылка.Проведен = ИСТИНА
	                    |				
	                    |				СГРУППИРОВАТЬ ПО
	                    |					ПоступлениеДопРасходовТовары.Номенклатура,
	                    |					ПоступлениеДопРасходовТовары.ДокументПартии,
	                    |					ПоступлениеДопРасходовТовары.Ссылка.СуммаВключаетНДС,
	                    |					ПоступлениеДопРасходовТовары.Ссылка.НДСВключенВСтоимость,
	                    |					ПоступлениеДопРасходовТовары.Ссылка.КурсВзаиморасчетов,
	                    |					ПоступлениеДопРасходовТовары.Ссылка.КратностьВзаиморасчетов
	                    |				
	                    |				ОБЪЕДИНИТЬ ВСЕ
	                    |				
	                    |				ВЫБРАТЬ
	                    |					ПоступлениеДопРасходовОС.ОсновноеСредство,
	                    |					ВЫБОР
	                    |						КОГДА ПоступлениеДопРасходовОС.Ссылка.СуммаВключаетНДС
	                    |								И НЕ ПоступлениеДопРасходовОС.Ссылка.НДСВключенВСтоимость
	                    |							ТОГДА СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения - ПоступлениеДопРасходовОС.СуммаРаспределенияНДС)
	                    |						ИНАЧЕ СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения)
	                    |					КОНЕЦ,
	                    |					ПоступлениеДопРасходовОС.ДокументПартии,
	                    |					ВЫБОР
	                    |						КОГДА ПоступлениеДопРасходовОС.Ссылка.КратностьВзаиморасчетов = 0
	                    |							ТОГДА 0
	                    |						ИНАЧЕ ПоступлениеДопРасходовОС.Ссылка.КурсВзаиморасчетов / ПоступлениеДопРасходовОС.Ссылка.КратностьВзаиморасчетов * ВЫБОР
	                    |								КОГДА ПоступлениеДопРасходовОС.Ссылка.СуммаВключаетНДС
	                    |										И НЕ ПоступлениеДопРасходовОС.Ссылка.НДСВключенВСтоимость
	                    |									ТОГДА СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения - ПоступлениеДопРасходовОС.СуммаРаспределенияНДС)
	                    |								ИНАЧЕ СУММА(ПоступлениеДопРасходовОС.СуммаРаспределения)
	                    |							КОНЕЦ
	                    |					КОНЕЦ
	                    |				ИЗ
	                    |					Документ.ПоступлениеДопРасходов.ОС КАК ПоступлениеДопРасходовОС
	                    |				ГДЕ
	                    |					ПоступлениеДопРасходовОС.Ссылка.Проведен = ИСТИНА
	                    |				
	                    |				СГРУППИРОВАТЬ ПО
	                    |					ПоступлениеДопРасходовОС.ОсновноеСредство,
	                    |					ПоступлениеДопРасходовОС.ДокументПартии,
	                    |					ПоступлениеДопРасходовОС.Ссылка.СуммаВключаетНДС,
	                    |					ПоступлениеДопРасходовОС.Ссылка.НДСВключенВСтоимость,
	                    |					ПоступлениеДопРасходовОС.Ссылка.КурсВзаиморасчетов,
	                    |					ПоступлениеДопРасходовОС.Ссылка.КратностьВзаиморасчетов) КАК ДопРасходы
	                    |			
	                    |			СГРУППИРОВАТЬ ПО
	                    |				ДопРасходы.ДопРасходыНоменклатура,
	                    |				ДопРасходы.ДопРасходыДокументПартии) КАК ДопРасходы
	                    |			ПО ГТДИмпорт.Номенклатура = ДопРасходы.ДопРасходыНоменклатура
	                    |				И ГТДИмпорт.ДокументПартии = ДопРасходы.ДопРасходыДокументПартии
	                    |		ПО ВТ_ГТД.Ссылка = ГТДИмпорт.Ссылка
	                    |
	                    |УПОРЯДОЧИТЬ ПО
	                    |	Ссылка
	                    |ИТОГИ
	                    |	СУММА(СуммаПоступленияРегл),
	                    |	СУММА(ТаможеннаяСтоимость),
	                    |	СУММА(СуммаПошлиныВВалюте),
	                    |	СУММА(СуммаСбора),
	                    |	СУММА(СуммаСбораВВалюте),
	                    |	МАКСИМУМ(СтавкаПошлины),
	                    |	СУММА(СуммаНДСВВалюте),
	                    |	СУММА(СуммаПошлиныРегл),
	                    |	СУММА(СуммаВалютногоСбораРегл),
	                    |	СУММА(СуммаНДСРегл),
	                    |	СУММА(ОбщаяСуммаРегл),
	                    |	МАКСИМУМ(КодНоменклатуры),
	                    |	СУММА(ДопРасходыСуммаРегл),
	                    |	МАКСИМУМ(ВалютаВзаиморасчетов),
	                    |	МАКСИМУМ(Контрагент),
	                    |	МАКСИМУМ(Организация),
	                    |	МАКСИМУМ(СтруктурноеПодразделение),
	                    |	МАКСИМУМ(НДСВключенВСтоимость),
	                    |	МАКСИМУМ(Дата),
	                    |	МАКСИМУМ(НомерГТД),
	                    |	МАКСИМУМ(ВалютаДокумента)
	                    |ПО
	                    |	Ссылка,
	                    |	Номенклатура
	                    |АВТОУПОРЯДОЧИВАНИЕ" ;
				   
	Результат = ЗапросПоГТД.Выполнить();
	РезультатДоРасходы = ЗапросПоДопРасходам.Выполнить();
	ВЫборкаДопРАсходы = РезультатДоРасходы.Выбрать();
	
	ВыборкаОбщиеИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщиеИтоги.Следующий();
	ПечатьВВалюте = НЕ ВыборкаОбщиеИтоги.СуммаПошлиныВВалюте = 0 ИЛИ 
					НЕ ВыборкаОбщиеИтоги.СуммаСбораВВалюте = 0 ИЛИ 
					НЕ ВыборкаОбщиеИтоги.СуммаНДСВВалюте = 0; 
					
	ОбластьШапки = Макет.ПолучитьОбласть(?(ПечатьВВалюте, "ШапкаВал", "Шапка"));	
	
	ОбластьШапки.Параметры.Валюта 			= ВалютаВзаиморасчетов;
	ОбластьШапки.Параметры.ВалютаДокумента 	= ВалютаДокумента;
	ОбластьШапки.Параметры.СтрокаНДС 		= ?(НДСВключенВСтоимость, "НДС (включен в стоимость ТМЗ)","НДС");
		
	ТабДокумент.Вывести(ОбластьШапки);
	
	Если ПечатьВВалюте Тогда
		ОбластьНоменклатуры = Макет.ПолучитьОбласть("НоменклатураВал");	
		ОбластьДанных  		= Макет.ПолучитьОбласть("ДанныеВал");		
		ОбластьДопРасходов	= Макет.ПолучитьОбласть("ДопРасходыВал");		
		ОбластьПодвала 		= Макет.ПолучитьОбласть("ПодвалВал");		
		
		СтруктураСуммовыхПолей 			= Новый Структура("СуммаПоступленияРегл,СуммаПошлиныВВалюте,СуммаПошлиныРегл,СуммаСбораВВалюте,СуммаСбора,СуммаВалютногоСбораРегл,СуммаНДСВВалюте,СуммаНДСРегл,ОбщаяСуммаРегл");			
		СтруктураСуммовыхПолейПодвала 	= Новый Структура("СуммаПоступленияРегл,ТаможеннаяСтоимость,СуммаПошлиныРегл,СуммаВалютногоСбораРегл,СуммаСбора,СуммаНДСРегл,ОбщаяСуммаРегл");
	Иначе
		ОбластьНоменклатуры = Макет.ПолучитьОбласть("Номенклатура");	
		ОбластьДанных  		= Макет.ПолучитьОбласть("Данные");		
		ОбластьДопРасходов	= Макет.ПолучитьОбласть("ДопРасходы");		
		ОбластьПодвала 		= Макет.ПолучитьОбласть("Подвал");		
		
		СтруктураСуммовыхПолей 			= Новый Структура("СуммаПоступленияРегл,СуммаПошлиныРегл,СуммаСбора,СуммаНДСРегл,ОбщаяСуммаРегл");	
		СтруктураСуммовыхПолейПодвала 	= Новый Структура("СуммаПоступленияРегл,ТаможеннаяСтоимость,СуммаПошлиныРегл,СуммаСбора,СуммаНДСРегл,ОбщаяСуммаРегл");
	КонецЕсли;
		
	ОбластьПодвала.Параметры.Заполнить(ВыборкаОбщиеИтоги);
	
	// номенклатурные позиции	
	ВыборкаНоменклатуры = ВыборкаОбщиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	НомерСтрокиПечати = 0;
	Пока ВыборкаНоменклатуры.Следующий() Цикл
		НомерСтрокиПечати = НомерСтрокиПечати + 1;
		ОбластьНоменклатуры.Параметры.Заполнить(ВыборкаНоменклатуры);					
		// форматирование суммовых полей
		Для каждого СуммовоеПоле из СтруктураСуммовыхПолей Цикл
			ОбластьНоменклатуры.Параметры[СуммовоеПоле.Ключ] = ОбщегоНазначения.ФорматСумм(ВыборкаНоменклатуры[СуммовоеПоле.Ключ]);
		КонецЦикла;	
		ОбластьНоменклатуры.Параметры.НомерСтрокиПечати = НомерСтрокиПечати;
		
		ТабДокумент.Вывести(ОбластьНоменклатуры);
		// Партии поступления
		ВыборкаДанные= ВыборкаНоменклатуры.Выбрать();
		Пока ВыборкаДанные.Следующий() Цикл
			ОбластьДанных.Параметры.Заполнить(ВыборкаДанные);
			// форматирование суммовых полей
			Для Каждого СуммовоеПоле Из СтруктураСуммовыхПолей Цикл
				ОбластьДанных.Параметры[СуммовоеПоле.Ключ] = ОбщегоНазначения.ФорматСумм(ВыборкаДанные[СуммовоеПоле.Ключ]);
			КонецЦикла;	
			ОбластьДанных.Параметры.ЦенаРегл 		= ОбщегоНазначения.ФорматСумм(ВыборкаДанные.ЦенаРегл);
			ОбластьДанных.Параметры.ОбщаяЦенаРегл 	= ОбщегоНазначения.ФорматСумм(ВыборкаДанные.ОбщаяЦенаРегл);
			ТабДокумент.Вывести(ОбластьДанных);
			// ДопРасходы
			ВЫборкаДопРАсходы.Сбросить();
			Пока ВЫборкаДопРАсходы.НайтиСледующий(Новый Структура("Номенклатура, ДопРасходыДокументПартии",ВыборкаДанные.Номенклатура, ВыборкаДанные.ДокументПартии)) Цикл
				ОбластьДопРасходов.Параметры.Заполнить(ВЫборкаДопРасходы);
				// форматирование полей
				ОбластьДопРасходов.Параметры.ДопРасходыСумма 		= ОбщегоНазначения.ФорматСумм(ВыборкаДопРасходы.ДопРасходыСумма,ВыборкаДопРасходы.ВалютаДокумента);				
				ОбластьДопРасходов.Параметры.ДопРасходыСодержание 	= СокрЛП(ВыборкаДопРасходы.ДопРасходыСодержание);
				ТабДокумент.Вывести(ОбластьДопРасходов);				
			КонецЦикла;	                                			
		КонецЦикла;	
	КонецЦикла;		
	
	// форматирование суммовых полей
	Для каждого СуммовоеПоле из СтруктураСуммовыхПолейПодвала Цикл
		ОбластьПодвала.Параметры[СуммовоеПоле.Ключ] = ОбщегоНазначения.ФорматСумм(ВыборкаОбщиеИтоги[СуммовоеПоле.Ключ],,"0,00");
	КонецЦикла;	
	
	ОбластьПодвала.Параметры.ВалютаДокумента = ВалютаДокумента;
	ТабДокумент.Вывести(ОбластьПодвала);
	
	Возврат ТабДокумент;
	
КонецФункции
	
// Функция формирует табличный документ по макету "ГТДИмпорт" 	
//
Функция ПечатьГТДИмпорт(ИмяМакета)
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ГТДИМпорт";
	
	СтруктурнаяЕдиницаОрганизация = ОбщегоНазначения.ПолучитьСтруктурнуюЕдиницу(Организация, СтруктурноеПодразделение);
	
	Макет = ПолучитьМакет(ИмяМакета);
	ОбластьЗаголовка = Макет.ПолучитьОбласть("Заголовок");	
	ОбластьЗаголовка.Параметры.ТекстЗаголовка = РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект.Ссылка, "ГТД по импорту", глСписокПрефиксовУзлов);
	ПредставлениеОрганизации = ОбщегоНазначения.ОписаниеОрганизации(ОбщегоНазначения.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, Дата), "ПолноеНаименование,");
	ПредставлениеКонтрагента = ОбщегоНазначения.ОписаниеОрганизации(ОбщегоНазначения.СведенияОЮрФизЛице(Контрагент, Дата), "ПолноеНаименование,");
	
	ОбластьЗаголовка.Параметры.ПредставлениеПолучателя 	= ПредставлениеОрганизации;
	ОбластьЗаголовка.Параметры.ПредставлениеКонтрагента = ПредставлениеКонтрагента;
	ОбластьЗаголовка.Параметры.ГТДНомер 				= НомерГТД;
	
	ТабДокумент.Вывести(ОбластьЗаголовка);
			
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Номенклатура);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	ВидыСубконтоОС = Новый Массив;
	ВидыСубконтоОС.Добавить(ПланыВидовХарактеристик.ВидыСубконтоТиповые.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидыСубконтоОС", ВидыСубконтоОС);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ГТДИмпортТовары.ДокументПартии
	               |ПОМЕСТИТЬ ВТ_ДокументыПартии
	               |ИЗ
	               |	Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	               |ГДЕ
	               |	ГТДИмпортТовары.Ссылка В(&Ссылка)
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	ГТДИмпортОС.ДокументПартии
	               |ИЗ
	               |	Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	               |ГДЕ
	               |	ГТДИмпортОС.Ссылка В(&Ссылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТиповойОборотыДтКт.СубконтоДт1,
	               |	ТиповойОборотыДтКт.Регистратор,
	               |	ТиповойОборотыДтКт.СчетДт,
	               |	ТиповойОборотыДтКт.СуммаОборот
	               |ПОМЕСТИТЬ ВТ_ТиповойОборотыДтКт
	               |ИЗ
	               |	РегистрБухгалтерии.Типовой.ОборотыДтКт(, , Регистратор, , &ВидыСубконто, , , ) КАК ТиповойОборотыДтКт
	               |ГДЕ
	               |	ТиповойОборотыДтКт.Регистратор В
	               |			(ВЫБРАТЬ
	               |				ВТ_ДокументыПартии.ДокументПартии
	               |			ИЗ
	               |				ВТ_ДокументыПартии)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ТиповойОборотыДтКт.СубконтоДт1,
	               |	ТиповойОборотыДтКт.Регистратор,
	               |	ТиповойОборотыДтКт.СчетДт,
	               |	ТиповойОборотыДтКт.СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Типовой.ОборотыДтКт(, , Регистратор, , &ВидыСубконтоОС, , , ) КАК ТиповойОборотыДтКт
	               |ГДЕ
	               |	ТиповойОборотыДтКт.Регистратор В
	               |			(ВЫБРАТЬ
	               |				ВТ_ДокументыПартии.ДокументПартии
	               |			ИЗ
	               |				ВТ_ДокументыПартии)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ГТДИмпорт.Ссылка КАК Ссылка,
	               |	ГТДИмпорт.Номер,
	               |	ГТДИмпорт.Дата,
	               |	ГТДИмпорт.ВалютаВзаиморасчетов,
	               |	ГТДИмпорт.ВалютаДокумента,
	               |	ГТДИмпорт.Контрагент,
	               |	ГТДИмпорт.НДСВключенВСтоимость,
	               |	ГТДИмпорт.НомерГТД,
	               |	ГТДИмпорт.Организация,
	               |	ГТДИмпорт.СтруктурноеПодразделение
	               |ПОМЕСТИТЬ ВТ_ГТД
	               |ИЗ
	               |	Документ.ГТДИмпорт КАК ГТДИмпорт
	               |ГДЕ
	               |	ГТДИмпорт.Ссылка В(&Ссылка)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВТ_ГТД.Ссылка КАК Ссылка,
	               |	ВТ_ГТД.Организация КАК Организация,
	               |	ВТ_ГТД.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	               |	ГТДОбщий.НомерСтроки КАК НомерСтроки,
	               |	ГТДОбщий.НомерРаздела КАК НомерРаздела,
	               |	ГТДОбщий.Номенклатура,
	               |	ГТДОбщий.ТаможеннаяСтоимость КАК ТаможеннаяСтоимость,
	               |	ГТДОбщий.СуммаПошлиныВВалюте КАК СуммаПошлиныВВалюте,
	               |	ГТДОбщий.СуммаСбора КАК СуммаСбора,
	               |	ГТДОбщий.СуммаСбораВВалюте КАК СуммаСбораВВалюте,
	               |	ГТДОбщий.ВалютаСбора КАК ВалютаСбора,
	               |	ГТДОбщий.Количество КАК Количество,
	               |	ГТДОбщий.ВалютаДокументаПоступления КАК ВалютаДокументаПоступления,
	               |	ГТДОбщий.СтавкаПошлины КАК СтавкаПошлины,
	               |	ГТДОбщий.ВалютаПошлины КАК ВалютаПошлины,
	               |	ГТДОбщий.СуммаНДСВВалюте КАК СуммаНДСВВалюте,
	               |	ГТДОбщий.ВалютаНДС КАК ВалютаНДС,
	               |	ГТДОбщий.СуммаПошлиныРегл КАК СуммаПошлиныРегл,
	               |	ГТДОбщий.СуммаВалютногоСбораРегл КАК СуммаВалютногоСбораРегл,
	               |	ГТДОбщий.СуммаНДСРегл КАК СуммаНДСРегл,
	               |	ГТДОбщий.СуммаПоступленияРегл КАК СуммаПоступленияРегл,
	               |	ГТДОбщий.СуммаПоступленияРегл + ГТДОбщий.СуммаПошлиныРегл + ГТДОбщий.СуммаВалютногоСбораРегл + ГТДОбщий.СуммаСбора + ГТДОбщий.СуммаНДСВСтоимостиРегл КАК ОбщаяСуммаРегл,
	               |	ВЫБОР
	               |		КОГДА ГТДОбщий.Количество = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ (ГТДОбщий.СуммаПоступленияРегл + ГТДОбщий.СуммаПошлиныРегл + ГТДОбщий.СуммаВалютногоСбораРегл + ГТДОбщий.СуммаСбора + ГТДОбщий.СуммаНДСВСтоимостиРегл) / ГТДОбщий.Количество
	               |	КОНЕЦ КАК ОбщаяЦенаРегл,
	               |	ГТДОбщий.ЦенаРегл,
	               |	ГТДОбщий.ЦенаВал,
	               |	ВТ_ГТД.ВалютаДокумента КАК ВалютаДокумента,
	               |	ГТДОбщий.КодНоменклатуры,
	               |	ВТ_ГТД.Дата КАК Дата,
	               |	ВТ_ГТД.Контрагент КАК Контрагент,
	               |	ВТ_ГТД.НомерГТД КАК НомерГТД,
	               |	ВТ_ГТД.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	               |	ВТ_ГТД.НДСВключенВСтоимость КАК НДСВключенВСтоимость
	               |ИЗ
	               |	ВТ_ГТД КАК ВТ_ГТД
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ГТДИмпортТовары.Ссылка КАК Ссылка,
	               |			ГТДИмпортТовары.НомерСтроки КАК НомерСтроки,
	               |			ГТДИмпортТовары.НомерРаздела КАК НомерРаздела,
	               |			ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	               |			ГТДИмпортТовары.ФактурнаяСтоимость КАК ТаможеннаяСтоимость,
	               |			ВЫБОР
	               |				КОГДА НЕ ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	               |					ТОГДА ГТДИмпортТовары.СуммаПошлины
	               |				ИНАЧЕ 0
	               |			КОНЕЦ КАК СуммаПошлиныВВалюте,
	               |			ГТДИмпортТовары.СуммаСбора КАК СуммаСбора,
	               |			ГТДИмпортТовары.СуммаСбораВал КАК СуммаСбораВВалюте,
	               |			ГТДИмпортРазделы.ДоговорВзаиморасчетовСбор.ВалютаВзаиморасчетов КАК ВалютаСбора,
	               |			ЕСТЬNULL(ГТДИмпортТовары.Количество, 0) КАК Количество,
	               |			ПоступлениеТМЗ.ВалютаДокумента КАК ВалютаДокументаПоступления,
	               |			ГТДИмпортРазделы.СтавкаПошлины КАК СтавкаПошлины,
	               |			ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов КАК ВалютаПошлины,
	               |			ВЫБОР
	               |				КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	               |					ТОГДА 0
	               |				ИНАЧЕ ГТДИмпортТовары.СуммаНДС
	               |			КОНЕЦ КАК СуммаНДСВВалюте,
	               |			ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов КАК ВалютаНДС,
	               |			ВЫБОР
	               |				КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	               |					ТОГДА ГТДИмпортТовары.СуммаПошлины
	               |				КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	               |					ТОГДА 0
	               |				ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаПошлины * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	               |			КОНЕЦ КАК СуммаПошлиныРегл,
	               |			ВЫБОР
	               |				КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	               |					ТОГДА 0
	               |				ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаСбораВал * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	               |			КОНЕЦ КАК СуммаВалютногоСбораРегл,
	               |			ВЫБОР
	               |				КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	               |					ТОГДА ГТДИмпортТовары.СуммаНДС
	               |				КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	               |					ТОГДА 0
	               |				ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаНДС * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	               |			КОНЕЦ КАК СуммаНДСРегл,
	               |			ВЫБОР
	               |				КОГДА ЕСТЬNULL(ПоступлениеТМЗ.Количество, 0) = 0
	               |					ТОГДА 0
	               |				ИНАЧЕ ЕСТЬNULL(ТиповойОборотыДтКт.СуммаОборот, 0) * ЕСТЬNULL(ГТДИмпортТовары.Количество, 0) / ПоступлениеТМЗ.Количество
	               |			КОНЕЦ КАК СуммаПоступленияРегл,
	               |			ВЫБОР
	               |				КОГДА ГТДИмпортРазделы.Ссылка.НДСВключенВСтоимость
	               |					ТОГДА ВЫБОР
	               |							КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	               |								ТОГДА ГТДИмпортТовары.СуммаНДС
	               |							КОГДА ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов = 0
	               |								ТОГДА 0
	               |							ИНАЧЕ ВЫРАЗИТЬ(ГТДИмпортТовары.СуммаНДС * ГТДИмпортРазделы.Ссылка.КурсВзаиморасчетов / ГТДИмпортРазделы.Ссылка.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ КАК СуммаНДСВСтоимостиРегл,
	               |			ВЫРАЗИТЬ(ВЫБОР
	               |					КОГДА ЕСТЬNULL(ПоступлениеТМЗ.Количество, 0) = 0
	               |						ТОГДА 0
	               |					ИНАЧЕ ЕСТЬNULL(ПоступлениеТМЗ.СуммаПоступленияВал, 0) / ЕСТЬNULL(ПоступлениеТМЗ.Количество, 0)
	               |				КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ЦенаВал,
	               |			ВЫРАЗИТЬ(ВЫБОР
	               |					КОГДА ЕСТЬNULL(ПоступлениеТМЗ.Количество, 0) = 0
	               |						ТОГДА 0
	               |					ИНАЧЕ ЕСТЬNULL(ТиповойОборотыДтКт.СуммаОборот, 0) / ЕСТЬNULL(ПоступлениеТМЗ.Количество, 0)
	               |				КОНЕЦ КАК ЧИСЛО(15, 2)) КАК ЦенаРегл,
	               |			ГТДИмпортРазделы.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	               |			ГТДИмпортТовары.Номенклатура.Код КАК КодНоменклатуры
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				МИНИМУМ(ГТДИмпортТовары.НомерСтроки) КАК НомерСтроки,
	               |				ГТДИмпортТовары.НомерРаздела КАК НомерРаздела,
	               |				ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	               |				СУММА(ГТДИмпортТовары.Количество) КАК Количество,
	               |				СУММА(ГТДИмпортТовары.ФактурнаяСтоимость) КАК ФактурнаяСтоимость,
	               |				СУММА(ГТДИмпортТовары.СуммаПошлины) КАК СуммаПошлины,
	               |				СУММА(ГТДИмпортТовары.СуммаСбора) КАК СуммаСбора,
	               |				СУММА(ГТДИмпортТовары.СуммаСбораВал) КАК СуммаСбораВал,
	               |				ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
	               |				ГТДИмпортТовары.Ссылка КАК Ссылка,
	               |				СУММА(ГТДИмпортТовары.СуммаНДС) КАК СуммаНДС,
	               |				ГТДИмпортТовары.СчетУчетаБУ КАК СчетУчетаБУ
	               |			ИЗ
	               |				(ВЫБРАТЬ
	               |					ГТДИмпортТовары.НомерСтроки КАК НомерСтроки,
	               |					ГТДИмпортТовары.НомерРаздела КАК НомерРаздела,
	               |					ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	               |					ГТДИмпортТовары.Количество КАК Количество,
	               |					ГТДИмпортТовары.ФактурнаяСтоимость КАК ФактурнаяСтоимость,
	               |					ГТДИмпортТовары.СуммаПошлины КАК СуммаПошлины,
	               |					ГТДИмпортТовары.СуммаСбора КАК СуммаСбора,
	               |					ГТДИмпортТовары.СуммаСбораВал КАК СуммаСбораВал,
	               |					ГТДИмпортТовары.ДокументПартии КАК ДокументПартии,
	               |					ГТДИмпортТовары.Ссылка КАК Ссылка,
	               |					ГТДИмпортТовары.СуммаНДС КАК СуммаНДС,
	               |					ГТДИмпортТовары.СчетУчетаБУ КАК СчетУчетаБУ
	               |				ИЗ
	               |					Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	               |				ГДЕ
	               |					ГТДИмпортТовары.Ссылка В(&Ссылка)
	               |				
	               |				ОБЪЕДИНИТЬ ВСЕ
	               |				
	               |				ВЫБРАТЬ
	               |					ГТДИмпортОС.НомерСтроки,
	               |					ГТДИмпортОС.НомерРаздела,
	               |					ГТДИмпортОС.ОсновноеСредство,
	               |					1,
	               |					ГТДИмпортОС.ФактурнаяСтоимость,
	               |					ГТДИмпортОС.СуммаПошлины,
	               |					ГТДИмпортОС.СуммаСбора,
	               |					ГТДИмпортОС.СуммаСбораВал,
	               |					ГТДИмпортОС.ДокументПартии,
	               |					ГТДИмпортОС.Ссылка,
	               |					ГТДИмпортОС.СуммаНДС,
	               |					ГТДИмпортОС.СчетУчетаБУ
	               |				ИЗ
	               |					Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	               |				ГДЕ
	               |					ГТДИмпортОС.Ссылка В(&Ссылка)) КАК ГТДИмпортТовары
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ГТДИмпортТовары.НомерРаздела,
	               |				ГТДИмпортТовары.Номенклатура,
	               |				ГТДИмпортТовары.ДокументПартии,
	               |				ГТДИмпортТовары.Ссылка,
	               |				ГТДИмпортТовары.СчетУчетаБУ) КАК ГТДИмпортТовары
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	               |				ПО ГТДИмпортТовары.Ссылка = ГТДИмпортРазделы.Ссылка
	               |					И ГТДИмпортТовары.НомерРаздела = ГТДИмпортРазделы.НомерСтроки
	               |				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |					ПоступлениеТоваровУслугТовары.Ссылка КАК Ссылка,
	               |					ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	               |					ПоступлениеТоваровУслугТовары.ВалютаДокумента КАК ВалютаДокумента,
	               |					СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
	               |					СУММА(ПоступлениеТоваровУслугТовары.СуммаПоступленияВал) КАК СуммаПоступленияВал
	               |				ИЗ
	               |					(ВЫБРАТЬ
	               |						ПоступлениеТоваровУслугТовары.Ссылка КАК Ссылка,
	               |						ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	               |						ПоступлениеТоваровУслугТовары.Количество КАК Количество,
	               |						ВЫБОР
	               |							КОГДА ПоступлениеТоваровУслугТовары.Ссылка.СуммаВключаетНДС
	               |									И НЕ ПоступлениеТоваровУслугТовары.Ссылка.НДСВключенВСтоимость
	               |								ТОГДА ПоступлениеТоваровУслугТовары.Сумма - ПоступлениеТоваровУслугТовары.СуммаНДС
	               |							ИНАЧЕ ПоступлениеТоваровУслугТовары.Сумма
	               |						КОНЕЦ КАК СуммаПоступленияВал,
	               |						ПоступлениеТоваровУслугТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента
	               |					ИЗ
	               |						Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	               |					
	               |					ОБЪЕДИНИТЬ ВСЕ
	               |					
	               |					ВЫБРАТЬ
	               |						ПоступлениеТоваровУслугОС.Ссылка,
	               |						ПоступлениеТоваровУслугОС.ОсновноеСредство,
	               |						1,
	               |						ВЫБОР
	               |							КОГДА ПоступлениеТоваровУслугОС.Ссылка.СуммаВключаетНДС
	               |									И НЕ ПоступлениеТоваровУслугОС.Ссылка.НДСВключенВСтоимость
	               |								ТОГДА ПоступлениеТоваровУслугОС.Сумма - ПоступлениеТоваровУслугОС.СуммаНДС
	               |							ИНАЧЕ ПоступлениеТоваровУслугОС.Сумма
	               |						КОНЕЦ,
	               |						ПоступлениеТоваровУслугОС.Ссылка.ВалютаДокумента
	               |					ИЗ
	               |						Документ.ПоступлениеТоваровУслуг.ОС КАК ПоступлениеТоваровУслугОС) КАК ПоступлениеТоваровУслугТовары
	               |				
	               |				СГРУППИРОВАТЬ ПО
	               |					ПоступлениеТоваровУслугТовары.Ссылка,
	               |					ПоступлениеТоваровУслугТовары.Номенклатура,
	               |					ПоступлениеТоваровУслугТовары.ВалютаДокумента) КАК ПоступлениеТМЗ
	               |				ПО ГТДИмпортТовары.ДокументПартии = ПоступлениеТМЗ.Ссылка
	               |					И ГТДИмпортТовары.Номенклатура = ПоступлениеТМЗ.Номенклатура
	               |				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТиповойОборотыДтКт КАК ТиповойОборотыДтКт
	               |				ПО ГТДИмпортТовары.Номенклатура = ТиповойОборотыДтКт.СубконтоДт1
	               |					И ГТДИмпортТовары.ДокументПартии = ТиповойОборотыДтКт.Регистратор
	               |					И ГТДИмпортТовары.СчетУчетаБУ = ТиповойОборотыДтКт.СчетДт) КАК ГТДОбщий
	               |		ПО ВТ_ГТД.Ссылка = ГТДОбщий.Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Ссылка,
	               |	НомерРаздела,
	               |	НомерСтроки
	               |ИТОГИ
	               |	МАКСИМУМ(Организация),
	               |	МАКСИМУМ(СтруктурноеПодразделение),
	               |	СУММА(ТаможеннаяСтоимость),
	               |	СУММА(СуммаПошлиныВВалюте),
	               |	СУММА(СуммаСбора),
	               |	СУММА(СуммаСбораВВалюте),
	               |	МАКСИМУМ(ВалютаСбора),
	               |	СУММА(Количество),
	               |	МАКСИМУМ(ВалютаДокументаПоступления),
	               |	МАКСИМУМ(СтавкаПошлины),
	               |	МАКСИМУМ(ВалютаПошлины),
	               |	СУММА(СуммаНДСВВалюте),
	               |	МАКСИМУМ(ВалютаНДС),
	               |	СУММА(СуммаПошлиныРегл),
	               |	СУММА(СуммаВалютногоСбораРегл),
	               |	СУММА(СуммаНДСРегл),
	               |	СУММА(СуммаПоступленияРегл),
	               |	СУММА(ОбщаяСуммаРегл),
	               |	МАКСИМУМ(ВалютаДокумента),
	               |	МАКСИМУМ(Дата),
	               |	МАКСИМУМ(Контрагент),
	               |	МАКСИМУМ(НомерГТД),
	               |	МАКСИМУМ(ВалютаВзаиморасчетов),
	               |	МАКСИМУМ(НДСВключенВСтоимость)
	               |ПО
	               |	Ссылка,
	               |	НомерРаздела
	               |АВТОУПОРЯДОЧИВАНИЕ" ;
				   
	Результат = Запрос.Выполнить();
	ВыборкаОбщиеИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщиеИтоги.Следующий();
	ПечатьВВалюте = Не ВыборкаОбщиеИтоги.СуммаПошлиныВВалюте = 0 или 
					Не ВыборкаОбщиеИтоги.СуммаСбораВВалюте = 0 или 
					Не ВыборкаОбщиеИтоги.СуммаНДСВВалюте = 0; 
					
					
	ОбластьШапки = Макет.ПолучитьОбласть(?(ПечатьВВалюте, "ШапкаВал", "Шапка"));	
	
	ОбластьШапки.Параметры.Валюта = ВалютаВзаиморасчетов;
	ОбластьШапки.Параметры.ВалютаДокумента = ВалютаДокумента;
	ОбластьШапки.Параметры.СтрокаНДС = ?(НДСВключенВСтоимость, "НДС (включен в стоимость ТМЗ)","НДС");
		
	ТабДокумент.Вывести(ОбластьШапки);
	
	Если ПечатьВВалюте Тогда
		ОбластьРаздела = Макет.ПолучитьОбласть("РазделВал");	
		ОбластьДанных  = Макет.ПолучитьОбласть("ДанныеВал");		
		ОбластьПодвала = Макет.ПолучитьОбласть("ПодвалВал");		
		СтруктураСуммовыхПолей = Новый Структура("СуммаПоступленияРегл,СуммаПошлиныВВалюте,СуммаПошлиныРегл,СуммаСбораВВалюте,СуммаСбора,СуммаВалютногоСбораРегл,СуммаНДСВВалюте,СуммаНДСРегл,ОбщаяСуммаРегл");			
		СтруктураСуммовыхПолейПодвала 	= Новый Структура("СуммаПоступленияРегл,ТаможеннаяСтоимость,СуммаПошлиныРегл,СуммаВалютногоСбораРегл,СуммаСбора,СуммаНДСРегл,ОбщаяСуммаРегл");
	Иначе
		ОбластьРаздела = Макет.ПолучитьОбласть("Раздел");	
		ОбластьДанных  = Макет.ПолучитьОбласть("Данные");		
		ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");		
		СтруктураСуммовыхПолей 			= Новый Структура("СуммаПоступленияРегл,СуммаПошлиныРегл,СуммаСбора,СуммаНДСРегл,ОбщаяСуммаРегл");	
		СтруктураСуммовыхПолейПодвала 	= Новый Структура("СуммаПоступленияРегл,ТаможеннаяСтоимость,СуммаПошлиныРегл,СуммаСбора,СуммаНДСРегл,ОбщаяСуммаРегл");
	КонецЕсли;
	
	ОбластьПодвала.Параметры.Заполнить(ВыборкаОбщиеИтоги);
		
	ВыборкаРазделы = ВыборкаОбщиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаРазделы.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(ВыборкаРазделы.НомерРаздела) Тогда
			Продолжить;
		КонецЕсли; 
		
		ОбластьРаздела.Параметры.Заполнить(ВыборкаРазделы);
		
		ПредставлениеРаздела = "Раздел №" + СокрЛП(ВыборкаРазделы.НомерРаздела) + 
								", пошлина (" + СокрЛП(?(ПечатьВВалюте,ВыборкаРазделы.ВалютаПошлины, ВыборкаРазделы.ВалютаДокумента)) + ") : " +	СокрЛП(ВыборкаРазделы.СтавкаПошлины) + "%" + 
								", таможенный сбор (" +СокрЛП(?(ПечатьВВалюте,ВыборкаРазделы.ВалютаСбора, ВыборкаРазделы.ВалютаДокумента)) +  ")" +
								", НДС (" +СокрЛП(?(ПечатьВВалюте,ВыборкаРазделы.ВалютаНДС, ВыборкаРазделы.ВалютаДокумента))+")";
			
		ОбластьРаздела.Параметры.ПредставлениеРаздела = ПредставлениеРаздела;
		// форматирование суммовых полей
		Для каждого СуммовоеПоле из СтруктураСуммовыхПолей Цикл
			ОбластьРаздела.Параметры[СуммовоеПоле.Ключ] = ОбщегоНазначения.ФорматСумм(ВыборкаРазделы[СуммовоеПоле.Ключ]);
		КонецЦикла;	
			
		ТабДокумент.Вывести(ОбластьРаздела);
		
		ВыборкаДанные= ВыборкаРазделы.Выбрать();
		Пока ВыборкаДанные.Следующий() Цикл
			ОбластьДанных.Параметры.Заполнить(ВыборкаДанные);
			// форматирование суммовых полей
			Для Каждого СуммовоеПоле из СтруктураСуммовыхПолей Цикл
				ОбластьДанных.Параметры[СуммовоеПоле.Ключ] = ОбщегоНазначения.ФорматСумм(ВыборкаДанные[СуммовоеПоле.Ключ]);
			КонецЦикла;	
			ОбластьДанных.Параметры.СуммаПоступленияРегл = ОбщегоНазначения.ФорматСумм(ВыборкаДанные.СуммаПоступленияРегл);
			ОбластьДанных.Параметры.ЦенаРегл = ОбщегоНазначения.ФорматСумм(ВыборкаДанные.ЦенаРегл);
			ОбластьДанных.Параметры.ОбщаяЦенаРегл = ОбщегоНазначения.ФорматСумм(ВыборкаДанные.ОбщаяЦенаРегл);
			ТабДокумент.Вывести(ОбластьДанных);
		КонецЦикла;	
	КонецЦикла;		
	// форматирование суммовых полей
	Для каждого СуммовоеПоле из СтруктураСуммовыхПолейПодвала Цикл
		ОбластьПодвала.Параметры[СуммовоеПоле.Ключ] = ОбщегоНазначения.ФорматСумм(ВыборкаОбщиеИтоги[СуммовоеПоле.Ключ],,"0,00");
	КонецЦикла;	
	
	ТабДокумент.Вывести(ОбластьПодвала);
	
	Возврат ТабДокумент;
	
КонецФункции

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеПользователями.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;
	
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	// Печать встроенных печатных форм
	Если ИмяМакета = "ГТДИМпорт_ДопРасходы_ПоКонтрагентам" Тогда
		ТабДокумент = ПечатьГТДИмпортДопРасходы_ПоКонтрагентам(ИмяМакета);
	ИначеЕсли ИмяМакета = "ГТДИМпорт_ДопРасходы" Тогда
		ТабДокумент = ПечатьГТДИмпортДопРасходы(ИмяМакета);	
	Иначе	
		ТабДокумент = ПечатьГТДИмпорт(ИмяМакета);	
	КонецЕсли;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);
	
КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ГТДИмпорт, ГТДИМпорт_ДопРасходы, ГТДИМпорт_ДопРасходы_ПоКонтрагентам","ГТД по импорту", "ГТД по импорту (доп. расходы)", "Доп. расходы (по контрагентам)");
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Процедура ЗаполнитьПоДокументуОснования(Основание) Экспорт
	
	Если НЕ (ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")) Тогда
		Возврат;
	КонецЕсли;
	
	Если (НЕ (Основание.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомисия ИЛИ Основание.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Импорт)) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание);
	
	// при импорте, лицо импортирующее товар автоматически считается плательщиком НДС
	// В том случае, если организация не состоит на учете по НДС
	// сумму уплаченного НДС будем включать в стоимость приобретаемого товара
	УчитыватьНДС = Истина;
	НДСВключенВСтоимость = НЕ ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНДС(Организация, ОбщегоНазначения.ПолучитьРабочуюДату(), мУчетнаяПолитикаПоНалоговомуУчету);
		
	// Контрагент у нас другой
	Контрагент			= Организация.НалоговыйКомитет;
	Сделка             	= Неопределено;
	
	// Заполним Табличную часть разделов
	Раздел = ДобавитьРаздел();	
	ЗаполнитьДоговорыВСтрокеТабЧастиРазделов(Разделы[0]);
	
	ЗаполнитьПоПоступлению(Основание, 1);
	ЗаполнитьПоПоступлению(Основание, 1,"ОС");
	
	
	ВсегоСтоимость 	= 0;
	ВсегоПошлина   	= 0;
	ВсегоНДС       	= 0;
	ВсегоСбор   	= 0;
	ВсегоСборВал	= 0;
	ВсегоНДС       	= 0;
	
	ПосчитатьИтогиПоРазделу(1, ВсегоСтоимость, ВсегоПошлина, ВсегоНДС, ВсегоСбор, ВсегоСборВал);
	
	Раздел.ТаможеннаяСтоимость = ВсегоСтоимость;
	
	ДокументОснование = Основание;

КонецПроцедуры //  ЗаполнитьПоДокументуОснования

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения строк табличной части "Товары".
//
// Параметры:
// Параметры: 
//  ТаблицаПоТоварам        - таблица значений, содержащая данные для проведения и проверки ТЧ Товары
//  СтруктураШапкиДокумента - структура, содержащая рексвизиты шапки документа и результаты запроса по шапке
//  Отказ                   - флаг отказа в проведении.
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеТабличнойЧастиРазделы(ТаблицаПоРазделам, СтруктураШапкиДокумента, Отказ, Заголовок)
	
	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("ТаможеннаяСтоимость");  //, СтавкаПошлины, СуммаПошлины
	Если СтруктураШапкиДокумента.УчитыватьНДС Тогда
		СтруктураОбязательныхПолей.Вставить("СтавкаНДС");
	КонецЕсли;

	// Теперь позовем общую процедуру проверки.
	ОбщегоНазначения.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Разделы", СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	//Суммы пошлины и НДС в каждом разделе должны совпадать с итогами по разделу в ТЧ Товары.
	Для каждого Раздел Из ТаблицаПоРазделам Цикл
		
		ВсегоСтоимость 	= 0;
		ВсегоПошлина  	= 0;
		ВсегоНДС       	= 0;
		ВсегоСбор		= 0;
		ВсегоСборВал	= 0;
		ВсегоНДС       	= 0;
		
		НомерРаздела  	= ТаблицаПоРазделам.Индекс(Раздел) + 1;
		
		ПосчитатьИтогиПоРазделу(НомерРаздела, ВсегоСтоимость, ВсегоПошлина, ВсегоНДС, ВсегоСбор, ВсегоСборВал);
		
		Если ВсегоПошлина <> Раздел.СуммаПошлины Тогда
			ОбщегоНазначения.СообщитьОбОшибке("По разделу """ + СокрЛП(НомерРаздела) + """ сумма пошлины не совпадает с итогом по товарам раздела", Отказ, Заголовок);
		КонецЕсли;
		
		Если ВсегоНДС <> Раздел.СуммаНДС Тогда
			ОбщегоНазначения.СообщитьОбОшибке("По разделу """ + СокрЛП(НомерРаздела) + """ сумма НДС не совпадает с итогом по товарам раздела", Отказ, Заголовок);
		КонецЕсли;
		
		Если ВсегоСбор <> Раздел.ТаможенныйСбор Тогда
			ОбщегоНазначения.СообщитьОбОшибке("По разделу """ + СокрЛП(НомерРаздела) + """ сумма таможенных сборов не совпадает с итогом по товарам раздела", Отказ, Заголовок);
		КонецЕсли;
		
		Если ВсегоСборВал <> Раздел.ТаможенныйСборВал Тогда
			ОбщегоНазначения.СообщитьОбОшибке("По разделу """ + СокрЛП(НомерРаздела) + """ сумма таможенных сборов в валюте не совпадает с итогом по товарам раздела", Отказ, Заголовок);
		КонецЕсли;
		
		/////
		Если ЗначениеЗаполнено(Раздел.СуммаПошлины) И НЕ ЗначениеЗаполнено(Раздел.ДоговорВзаиморасчетовПошлина) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("По разделу """ + СокрЛП(НомерРаздела) + """ не заполнен договор взаиморасчетов по пошлине", Ложь, Заголовок);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Раздел.СуммаНДС) И НЕ ЗначениеЗаполнено(Раздел.ДоговорВзаиморасчетовНДС)  Тогда
			ОбщегоНазначения.СообщитьОбОшибке("По разделу """ + СокрЛП(НомерРаздела) + """ не заполнен договор взаиморасчетов по НДС", Ложь, Заголовок);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Раздел.ТаможенныйСбор) И НЕ ЗначениеЗаполнено(Раздел.ДоговорВзаиморасчетовСбор) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("По разделу """ + СокрЛП(НомерРаздела) + """ не заполнен договор взаиморасчетов по таможенному сбору", Ложь, Заголовок);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Раздел.ТаможенныйСборВал) И НЕ ЗначениеЗаполнено(Раздел.ДоговорВзаиморасчетовСборВал) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("По разделу """ + СокрЛП(НомерРаздела) + """ не заполнен договор взаиморасчетов по таможенному сбору в валюте", Ложь, Заголовок);
		КонецЕсли;
		
		
	КонецЦикла; // Для каждого Раздел Из ТаблицаПоРазделам Цикл
	
КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиТовары()

// Проверяет правильность заполнения строк табличной части "Товары".
//
// Параметры:
// Параметры: 
//  ТаблицаПоТоварам        - таблица значений, содержащая данные для проведения и проверки ТЧ Товары
//  СтруктураШапкиДокумента - структура, содержащая рексвизиты шапки документа и результаты запроса по шапке
//  Отказ                   - флаг отказа в проведении.
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеТабличнойЧастиТовары(ТаблицаВалюта, ТаблицаТенге, СтруктураШапкиДокумента, Отказ, Заголовок)
	
	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Номенклатура, Количество, ФактурнаяСтоимость, ДокументПартии");
	
	СтруктураОбязательныхПолей.Вставить("СчетУчетаБУ");	
	
	Если СтруктураШапкиДокумента.НеобходимостьОтраженияВНУ Тогда
		СтруктураОбязательныхПолей.Вставить("СчетУчетаНУ");
	КонецЕсли;
	
	Если СтруктураШапкиДокумента.УчитыватьНДС Тогда
		СтруктураОбязательныхПолей.Вставить("НДСВидОборота");
		СтруктураОбязательныхПолей.Вставить("НДСВидПоступления");
		СтруктураОбязательныхПолей.Вставить("ВидНДС");
		Если Не СтруктураШапкиДокумента.НДСВключенВСтоимость Тогда
			СтруктураОбязательныхПолей.Вставить("СчетУчетаНДС");		
		КонецЕсли;	
	КонецЕсли;

	
	// Теперь позовем общую процедуру проверки.
	ОбщегоНазначения.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Товары", СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	ТаблицаПоТоварам = ТаблицаВалюта.Скопировать();
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаТенге,ТаблицаПоТоварам);
	
	ТаблицаПоТоварам.Свернуть("НомерРаздела,НомерСтроки,Номенклатура, Услуга,СчетУчетаНУ");
	ТаблицаПоТоварам.Сортировать("НомерРаздела Возр,НомерСтроки возр");
	
	// Здесь услуг быть не должно.
	УправлениеЗапасами.ПроверитьЧтоНетУслуг(ЭтотОбъект, "Товары", ТаблицаПоТоварам, Отказ, Заголовок);
	
		
КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиТовары()

// Проверяет правильность заполнения строк табличной части "ОС".
//
// Параметры:
// Параметры: 
//  ТаблицаПоОС		        - таблица значений, содержащая данные для проведения и проверки ТЧ ОС
//  СтруктураШапкиДокумента - структура, содержащая реквизиты шапки документа и результаты запроса по шапке
//  Отказ                   - флаг отказа в проведении.
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеТабличнойЧастиОС(ТаблицаВалюта, ТаблицаТенге, СтруктураШапкиДокумента, Отказ, Заголовок)
	
	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("ОсновноеСредство");
	
	СтруктураОбязательныхПолей.Вставить("СчетУчетаБУ");	
	
	Если СтруктураШапкиДокумента.НеобходимостьОтраженияВНУ Тогда
		СтруктураОбязательныхПолей.Вставить("СчетУчетаНУ");
	КонецЕсли;
	
	Если СтруктураШапкиДокумента.УчитыватьНДС Тогда
		СтруктураОбязательныхПолей.Вставить("НДСВидОборота");
		СтруктураОбязательныхПолей.Вставить("НДСВидПоступления");
		СтруктураОбязательныхПолей.Вставить("ВидНДС");
		Если Не СтруктураШапкиДокумента.НДСВключенВСтоимость Тогда
			СтруктураОбязательныхПолей.Вставить("СчетУчетаНДС");		
		КонецЕсли;	
	КонецЕсли;

	
	// Теперь позовем общую процедуру проверки.
	ОбщегоНазначения.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "ОС", СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	ТаблицаПоОС = ТаблицаВалюта.Скопировать();
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаТенге,ТаблицаПоОС);
	
	ТаблицаПоОС.Свернуть("НомерРаздела,НомерСтроки,ОсновноеСредство, СчетУчетаНУ");
	ТаблицаПоОС.Сортировать("НомерРаздела Возр,НомерСтроки возр");	
		
КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиТовары()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - структура, содержащая рексвизиты шапки документа и результаты запроса по шапке
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация, НомерГТД,
	|ВалютаДокумента, КурсДокумента, КратностьДокумента, Контрагент");
	
	СтруктураОбязательныхПолей.Вставить("СчетУчетаРасчетовСКонтрагентом");	
	
	// Проверка таблицы разделов
	ПризнакВалютныхВзаиморасчетов = Ложь;	
	Для Каждого Раздел Из Разделы Цикл
		
		Если (НЕ Раздел.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = мВалютаРегламентированногоУчета) ИЛИ 
			(НЕ Раздел.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = мВалютаРегламентированногоУчета) Тогда
			
			ПризнакВалютныхВзаиморасчетов = Истина;							
		КонецЕсли;
		/////////////////////////////////////////////////////////////////////////////////////////////////
		// проверка договоров взаиморасчетов
		СписокДоговоров = Новый СписокЗначений;		
		СписокДоговоров.Добавить(Раздел.ДоговорВзаиморасчетовНДС, "договор расчетов по НДС");		
		СписокДоговоров.Добавить(Раздел.ДоговорВзаиморасчетовСбор, "договор расчетов по сбору");
		СписокДоговоров.Добавить(Раздел.ДоговорВзаиморасчетовСборВал, "договор расчетов по сбору (вал.)");
		СписокДоговоров.Добавить(Раздел.ДоговорВзаиморасчетовПошлина);
		
		Для Каждого ТекущийДоговор Из СписокДоговоров Цикл			
			ЗначениеТекущегоДоговора 		= ТекущийДоговор.Значение;
			ПредставлениеТекущегоДоговора 	= ТекущийДоговор.Представление;
			
			Если НЕ ЗначениеЗаполнено(ЗначениеТекущегоДоговора) Тогда
				Продолжить;
			КонецЕсли;	
			
			СтрНачалоСообщения = "Раздел №" + Раздел.НомерСтроки + ", " + ПредставлениеТекущегоДоговора +" - ";			
						
			//1. Организация в документе должна совпадать с организацией, указанной в договоре взаиморасчетов.					
			Если Не ЗначениеТекущегоДоговора.Организация = Организация Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрНачалоСообщения + " значение Организации в договоре не соответствует Организации, указанной в документе", Отказ, Заголовок);				
			КонецЕсли;				
			//2. Вид договора должен быть "Прочее"
			Если НЕ ЗначениеТекущегоДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Прочее Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрНачалоСообщения + " должен иметь вид ""Прочее"".", Отказ, Заголовок);
			КонецЕсли;
			//3. Взаиморасчеты только  "по договору в целом"
			Если Не ЗначениеТекущегоДоговора.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрНачалоСообщения + " расчеты по договору должны вестись ""По договору в целом"".", Отказ, Заголовок);
			КонецЕсли;
		КонецЦикла;			
	КонецЦикла;	
	
	Если ПризнакВалютныхВзаиморасчетов Тогда
		СтруктураОбязательныхПолей.Вставить("СчетУчетаРасчетовСКонтрагентомВал");
		СтруктураОбязательныхПолей.Вставить("КратностьВзаиморасчетов");		
		СтруктураОбязательныхПолей.Вставить("КурсВзаиморасчетов");		
	КонецЕсли;
	
	// НДС методом зачета
	Если НЕ Товары.Найти(Перечисления.ВидыНДС.НДСМетодомЗачета, "ВидНДС") = Неопределено 
		ИЛИ НЕ ОС.Найти(Перечисления.ВидыНДС.НДСМетодомЗачета, "ВидНДС") = Неопределено  Тогда
		
		СтруктураОбязательныхПолей.Вставить("СчетУчетаНДСПоРеализации");		
	КонецЕсли;	
	
	Если СтруктураШапкиДокумента.УчитыватьКПН Тогда
		СтруктураОбязательныхПолей.Вставить("ВидУчетаНУ");		
	КонецЕсли;
		
	
	// Теперь позовем общую процедуру проверки.
    ОбщегоНазначения.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);			
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Подготавливает таблицы для проведения документа
Процедура СформироватьТаблицыТоваровПоДокументу(СтруктураШапкиДокумента, ТоварыВВалюте, ТоварыВТенге)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);	
		
	///////////////////////////////////////////////////
	//Подготовка таблицы по договору расчетов в валюте
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	""НДС"" КАК Содержание,
	|	2 КАК ПорядокОтражения,
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС Как ДоговорВзаиморасчетов,
	|	ГТДИмпортРазделы.НомерСтроки КАК НомерРаздела,
	|	ГТДИмпортТовары.НомерСтроки КАК НомерСтроки,
	|	ГТДИмпортТовары.СчетУчетаБУ,
	|	ГТДИмпортТовары.Номенклатура,
	|	ГТДИмпортТовары.Номенклатура.Услуга как Услуга,
	|	ГТДИмпортТовары.ДокументПартии.Склад КАК Склад,
	|	ГТДИмпортТовары.ДокументПартии КАК ДокументОприходования,
	|	ГТДИмпортТовары.СчетУчетаНДС,
	|	ГТДИмпортРазделы.СтавкаНДС,
	|	ГТДИмпортТовары.ВидНДС,
	|	ГТДИмпортТовары.НДСВидОборота,
	|	ГТДИмпортТовары.НДСВидПоступления,
	|	ГТДИмпортТовары.НДССрокПлатежа,	
	|	ГТДИмпортТовары.СчетУчетаНУ,	
	|	0 КАК Сумма,
	|	ГТДИмпортТовары.СуммаНДС как НДС
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|		ПО ГТДИмпортРазделы.НомерСтроки = ГТДИмпортТовары.НомерРаздела
	|
	|ГДЕ	
	|	(НЕ ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента) И
	|	ГТДИмпортРазделы.Ссылка = &Ссылка И
	|	ГТДИмпортТовары.Ссылка = &Ссылка И
	|	(ГТДИмпортТовары.СуммаНДС > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Пошлина"",
	|	1 КАК ПорядокОтражения,
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина Как ДоговорВзаиморасчетов,
	|	ГТДИмпортРазделы.НомерСтроки,
	|	ГТДИмпортТовары.НомерСтроки,
	|	ГТДИмпортТовары.СчетУчетаБУ,
	|	ГТДИмпортТовары.Номенклатура,
	|	ГТДИмпортТовары.Номенклатура.Услуга как Услуга,
	|	ГТДИмпортТовары.ДокументПартии.Склад,
	|	ГТДИмпортТовары.ДокументПартии,
	|	ГТДИмпортТовары.СчетУчетаНДС,
	|	ГТДИмпортРазделы.СтавкаНДС,
	|	ГТДИмпортТовары.ВидНДС,
	|	ГТДИмпортТовары.НДСВидОборота,
	|	ГТДИмпортТовары.НДСВидПоступления,
	|	ГТДИмпортТовары.НДССрокПлатежа,	
	|	ГТДИмпортТовары.СчетУчетаНУ,	
	|	ГТДИмпортТовары.СуммаПошлины,
	|	0	
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|		ПО ГТДИмпортРазделы.НомерСтроки = ГТДИмпортТовары.НомерРаздела
	|
	|ГДЕ
	|	(НЕ ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента) И
	|	ГТДИмпортРазделы.Ссылка = &Ссылка И
	|	ГТДИмпортТовары.Ссылка = &Ссылка И
	|	(ГТДИмпортТовары.СуммаПошлины > 0)
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Сбор"",
	|	3 КАК ПорядокОтражения,
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовСборВал Как ДоговорВзаиморасчетов,
	|	ГТДИмпортРазделы.НомерСтроки,
	|	ГТДИмпортТовары.НомерСтроки,
	|	ГТДИмпортТовары.СчетУчетаБУ,
	|	ГТДИмпортТовары.Номенклатура,
	|	ГТДИмпортТовары.Номенклатура.Услуга как Услуга,
	|	ГТДИмпортТовары.ДокументПартии.Склад,
	|	ГТДИмпортТовары.ДокументПартии,
	|	ГТДИмпортТовары.СчетУчетаНДС,
	|	ГТДИмпортРазделы.СтавкаНДС,
	|	ГТДИмпортТовары.ВидНДС,
	|	ГТДИмпортТовары.НДСВидОборота,
	|	ГТДИмпортТовары.НДСВидПоступления,
	|	ГТДИмпортТовары.НДССрокПлатежа,	
	|	ГТДИмпортТовары.СчетУчетаНУ,	
	|	ГТДИмпортТовары.СуммаСбораВал КАК Сумма,
	|	0 КАК СуммаНДС	
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|		ПО ГТДИмпортРазделы.НомерСтроки = ГТДИмпортТовары.НомерРаздела
	|
	|ГДЕ	
	|	ГТДИмпортРазделы.Ссылка = &Ссылка И
	|	ГТДИмпортТовары.Ссылка = &Ссылка И
	|	(ГТДИмпортТовары.СуммаСбораВал > 0)	
	|УПОРЯДОЧИТЬ ПО
	|	НомерРаздела Возр,
	|	НомерСтроки Возр,
	|	ПорядокОтражения Возр";
	
	ТоварыВВалюте = Запрос.Выполнить().Выгрузить();//Подготовка таблицы по таможенному сбору в валюте
	
	//Подготовка таблицы по договору расчетов в валюте
	///////////////////////////////////////////////////
	
	///////////////////////////////////////////////////
	//Подготовка таблицы по договору расчетов в Тенге
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	""НДС"" КАК Содержание,
	|	2 КАК ПорядокОтражения,
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС Как ДоговорВзаиморасчетов,
	|	ГТДИмпортРазделы.НомерСтроки КАК НомерРаздела,
	|	ГТДИмпортТовары.НомерСтроки КАК НомерСтроки,
	|	ГТДИмпортТовары.СчетУчетаБУ,
	|	ГТДИмпортТовары.Номенклатура,
	|	ГТДИмпортТовары.Номенклатура.Услуга как Услуга,
	|	ГТДИмпортТовары.ДокументПартии.Склад КАК Склад,
	|	ГТДИмпортТовары.ДокументПартии КАК ДокументОприходования,
	|	ГТДИмпортТовары.СчетУчетаНДС,
	|	ГТДИмпортРазделы.СтавкаНДС,
	|	ГТДИмпортТовары.ВидНДС,
	|	ГТДИмпортТовары.НДСВидОборота,
	|	ГТДИмпортТовары.НДСВидПоступления,
	|	ГТДИмпортТовары.НДССрокПлатежа,	
	|	ГТДИмпортТовары.СчетУчетаНУ,	
	|	0 КАК Сумма,
	|	ГТДИмпортТовары.СуммаНДС как НДС	
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|		ПО ГТДИмпортРазделы.НомерСтроки = ГТДИмпортТовары.НомерРаздела
	|
	|ГДЕ	
	|	(ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента) И
	|	ГТДИмпортРазделы.Ссылка = &Ссылка И
	|	ГТДИмпортТовары.Ссылка = &Ссылка И
	|	(ГТДИмпортТовары.СуммаНДС > 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Пошлина"",
	|	1 КАК ПорядокОтражения,
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина Как ДоговорВзаиморасчетов,
	|	ГТДИмпортРазделы.НомерСтроки,
	|	ГТДИмпортТовары.НомерСтроки,
	|	ГТДИмпортТовары.СчетУчетаБУ,
	|	ГТДИмпортТовары.Номенклатура,
	|	ГТДИмпортТовары.Номенклатура.Услуга как Услуга,
	|	ГТДИмпортТовары.ДокументПартии.Склад,
	|	ГТДИмпортТовары.ДокументПартии,
	|	ГТДИмпортТовары.СчетУчетаНДС,
	|	ГТДИмпортРазделы.СтавкаНДС,
	|	ГТДИмпортТовары.ВидНДС,
	|	ГТДИмпортТовары.НДСВидОборота,
	|	ГТДИмпортТовары.НДСВидПоступления,
	|	ГТДИмпортТовары.НДССрокПлатежа,	
	|	ГТДИмпортТовары.СчетУчетаНУ,	
	|	ГТДИмпортТовары.СуммаПошлины,
	|	0	
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|		ПО ГТДИмпортРазделы.НомерСтроки = ГТДИмпортТовары.НомерРаздела
	|
	|ГДЕ
	|	(ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента) И
	|	ГТДИмпортРазделы.Ссылка = &Ссылка И
	|	ГТДИмпортТовары.Ссылка = &Ссылка И
	|	(ГТДИмпортТовары.СуммаПошлины > 0)
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Сбор"",
	|	3 КАК ПорядокОтражения,
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовСбор Как ДоговорВзаиморасчетов,
	|	ГТДИмпортРазделы.НомерСтроки,
	|	ГТДИмпортТовары.НомерСтроки,
	|	ГТДИмпортТовары.СчетУчетаБУ,
	|	ГТДИмпортТовары.Номенклатура,
	|	ГТДИмпортТовары.Номенклатура.Услуга как Услуга,
	|	ГТДИмпортТовары.ДокументПартии.Склад,
	|	ГТДИмпортТовары.ДокументПартии,
	|	ГТДИмпортТовары.СчетУчетаНДС,
	|	ГТДИмпортРазделы.СтавкаНДС,
	|	ГТДИмпортТовары.ВидНДС,
	|	ГТДИмпортТовары.НДСВидОборота,
	|	ГТДИмпортТовары.НДСВидПоступления,
	|	ГТДИмпортТовары.НДССрокПлатежа,	
	|	ГТДИмпортТовары.СчетУчетаНУ,	
	|	ГТДИмпортТовары.СуммаСбора,
	|	0	
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|		ПО ГТДИмпортРазделы.НомерСтроки = ГТДИмпортТовары.НомерРаздела
	|
	|ГДЕ	
	|	ГТДИмпортРазделы.Ссылка = &Ссылка И
	|	ГТДИмпортТовары.Ссылка = &Ссылка И
	|	(ГТДИмпортТовары.СуммаСбора > 0)	
	|УПОРЯДОЧИТЬ ПО
	|	НомерРаздела Возр,
	|	НомерСтроки Возр,
	|	ПорядокОтражения Возр";
	
	ТоварыВТенге = Запрос.Выполнить().Выгрузить();	
	
	//Подготовка таблицы по договору расчетов в тенге
	///////////////////////////////////////////////////							  
КонецПроцедуры // СформироватьТаблицыТоваровПоДокументу(СтруктураШапкиДокумента)()

// Подготавливает таблицы для проведения документа
Процедура СформироватьТаблицыОСПоДокументу(СтруктураШапкиДокумента, ОСВВалюте, ОСВТенге)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);	
		
	///////////////////////////////////////////////////
	//Подготовка таблицы по договору расчетов в валюте
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	""НДС"" КАК Содержание,
	|	2 КАК ПорядокОтражения,
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС КАК ДоговорВзаиморасчетов,
	|	ГТДИмпортРазделы.НомерСтроки КАК НомерРаздела,
	|	ГТДИмпортОС.НомерСтроки КАК НомерСтроки,
	|	ГТДИмпортОС.СчетУчетаБУ,
	|	ГТДИмпортОС.ОсновноеСредство,
	|	ГТДИмпортОС.СчетУчетаНДС,
	|	ГТДИмпортРазделы.СтавкаНДС,
	|	ГТДИмпортОС.ВидНДС,
	|	ГТДИмпортОС.НДСВидОборота,
	|	ГТДИмпортОС.НДСВидПоступления,
	|	ГТДИмпортОС.НДССрокПлатежа,
	|	ГТДИмпортОС.СчетУчетаНУ,
	|	0 КАК Сумма,
	|	ГТДИмпортОС.СуммаНДС КАК НДС,
	|	ГТДИмпортОС.ПодразделениеОрганизации,
	|	ГТДИмпортОС.МОЛОрганизации
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	|		ПО ГТДИмпортРазделы.НомерСтроки = ГТДИмпортОС.НомерРаздела
	|ГДЕ
	|	(НЕ ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента)
	|	И ГТДИмпортРазделы.Ссылка = &Ссылка
	|	И ГТДИмпортОС.Ссылка = &Ссылка
	|	И ГТДИмпортОС.СуммаНДС > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Пошлина"",
	|	1,
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина,
	|	ГТДИмпортРазделы.НомерСтроки,
	|	ГТДИмпортОС.НомерСтроки,
	|	ГТДИмпортОС.СчетУчетаБУ,
	|	ГТДИмпортОС.ОсновноеСредство,
	|	ГТДИмпортОС.СчетУчетаНДС,
	|	ГТДИмпортРазделы.СтавкаНДС,
	|	ГТДИмпортОС.ВидНДС,
	|	ГТДИмпортОС.НДСВидОборота,
	|	ГТДИмпортОС.НДСВидПоступления,
	|	ГТДИмпортОС.НДССрокПлатежа,
	|	ГТДИмпортОС.СчетУчетаНУ,
	|	ГТДИмпортОС.СуммаПошлины,
	|	0,
	|	ГТДИмпортОС.ПодразделениеОрганизации,
	|	ГТДИмпортОС.МОЛОрганизации
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	|		ПО ГТДИмпортРазделы.НомерСтроки = ГТДИмпортОС.НомерРаздела
	|ГДЕ
	|	(НЕ ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента)
	|	И ГТДИмпортРазделы.Ссылка = &Ссылка
	|	И ГТДИмпортОС.Ссылка = &Ссылка
	|	И ГТДИмпортОС.СуммаПошлины > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Сбор"",
	|	3,
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовСборВал,
	|	ГТДИмпортРазделы.НомерСтроки,
	|	ГТДИмпортОС.НомерСтроки,
	|	ГТДИмпортОС.СчетУчетаБУ,
	|	ГТДИмпортОС.ОсновноеСредство,
	|	ГТДИмпортОС.СчетУчетаНДС,
	|	ГТДИмпортРазделы.СтавкаНДС,
	|	ГТДИмпортОС.ВидНДС,
	|	ГТДИмпортОС.НДСВидОборота,
	|	ГТДИмпортОС.НДСВидПоступления,
	|	ГТДИмпортОС.НДССрокПлатежа,
	|	ГТДИмпортОС.СчетУчетаНУ,
	|	ГТДИмпортОС.СуммаСбораВал,
	|	0,
	|	ГТДИмпортОС.ПодразделениеОрганизации,
	|	ГТДИмпортОС.МОЛОрганизации
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	|		ПО ГТДИмпортРазделы.НомерСтроки = ГТДИмпортОС.НомерРаздела
	|ГДЕ
	|	ГТДИмпортРазделы.Ссылка = &Ссылка
	|	И ГТДИмпортОС.Ссылка = &Ссылка
	|	И ГТДИмпортОС.СуммаСбораВал > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерРаздела,
	|	НомерСтроки,
	|	ПорядокОтражения";
	
	ОСВВалюте = Запрос.Выполнить().Выгрузить();//Подготовка таблицы по таможенному сбору в валюте
	
	//Подготовка таблицы по договору расчетов в валюте
	///////////////////////////////////////////////////
	
	///////////////////////////////////////////////////
	//Подготовка таблицы по договору расчетов в Тенге
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	""НДС"" КАК Содержание,
	|	2 КАК ПорядокОтражения,
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС КАК ДоговорВзаиморасчетов,
	|	ГТДИмпортРазделы.НомерСтроки КАК НомерРаздела,
	|	ГТДИмпортОС.НомерСтроки КАК НомерСтроки,
	|	ГТДИмпортОС.СчетУчетаБУ,
	|	ГТДИмпортОС.ОсновноеСредство,
	|	ГТДИмпортОС.СчетУчетаНДС,
	|	ГТДИмпортРазделы.СтавкаНДС,
	|	ГТДИмпортОС.ВидНДС,
	|	ГТДИмпортОС.НДСВидОборота,
	|	ГТДИмпортОС.НДСВидПоступления,
	|	ГТДИмпортОС.НДССрокПлатежа,
	|	ГТДИмпортОС.СчетУчетаНУ,
	|	0 КАК Сумма,
	|	ГТДИмпортОС.СуммаНДС КАК НДС,
	|	ГТДИмпортОС.ПодразделениеОрганизации,
	|	ГТДИмпортОС.МОЛОрганизации
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	|		ПО ГТДИмпортРазделы.НомерСтроки = ГТДИмпортОС.НомерРаздела
	|ГДЕ
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	|	И ГТДИмпортРазделы.Ссылка = &Ссылка
	|	И ГТДИмпортОС.Ссылка = &Ссылка
	|	И ГТДИмпортОС.СуммаНДС > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Пошлина"",
	|	1,
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина,
	|	ГТДИмпортРазделы.НомерСтроки,
	|	ГТДИмпортОС.НомерСтроки,
	|	ГТДИмпортОС.СчетУчетаБУ,
	|	ГТДИмпортОС.ОсновноеСредство,
	|	ГТДИмпортОС.СчетУчетаНДС,
	|	ГТДИмпортРазделы.СтавкаНДС,
	|	ГТДИмпортОС.ВидНДС,
	|	ГТДИмпортОС.НДСВидОборота,
	|	ГТДИмпортОС.НДСВидПоступления,
	|	ГТДИмпортОС.НДССрокПлатежа,
	|	ГТДИмпортОС.СчетУчетаНУ,
	|	ГТДИмпортОС.СуммаПошлины,
	|	0,
	|	ГТДИмпортОС.ПодразделениеОрганизации,
	|	ГТДИмпортОС.МОЛОрганизации
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	|		ПО ГТДИмпортРазделы.НомерСтроки = ГТДИмпортОС.НомерРаздела
	|ГДЕ
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	|	И ГТДИмпортРазделы.Ссылка = &Ссылка
	|	И ГТДИмпортОС.Ссылка = &Ссылка
	|	И ГТДИмпортОС.СуммаПошлины > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Сбор"",
	|	3,
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовСбор,
	|	ГТДИмпортРазделы.НомерСтроки,
	|	ГТДИмпортОС.НомерСтроки,
	|	ГТДИмпортОС.СчетУчетаБУ,
	|	ГТДИмпортОС.ОсновноеСредство,
	|	ГТДИмпортОС.СчетУчетаНДС,
	|	ГТДИмпортРазделы.СтавкаНДС,
	|	ГТДИмпортОС.ВидНДС,
	|	ГТДИмпортОС.НДСВидОборота,
	|	ГТДИмпортОС.НДСВидПоступления,
	|	ГТДИмпортОС.НДССрокПлатежа,
	|	ГТДИмпортОС.СчетУчетаНУ,
	|	ГТДИмпортОС.СуммаСбора,
	|	0,
	|	ГТДИмпортОС.ПодразделениеОрганизации,
	|	ГТДИмпортОС.МОЛОрганизации
	|ИЗ
	|	Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	|		ПО ГТДИмпортРазделы.НомерСтроки = ГТДИмпортОС.НомерРаздела
	|ГДЕ
	|	ГТДИмпортРазделы.Ссылка = &Ссылка
	|	И ГТДИмпортОС.Ссылка = &Ссылка
	|	И ГТДИмпортОС.СуммаСбора > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерРаздела,
	|	НомерСтроки,
	|	ПорядокОтражения";
	
	ОСВТенге = Запрос.Выполнить().Выгрузить();	
	
	//Подготовка таблицы по договору расчетов в тенге
	///////////////////////////////////////////////////							  
КонецПроцедуры // СформироватьТаблицыОСПоДокументу(СтруктураШапкиДокумента)()


 // Формируем движения по регистрам.
//
// Параметры: 
//  СтруктураШапкиДокумента   - структура, содержащая рексвизиты шапки документа и результаты запроса по шапке
//  ТаблицаПоТоварам          - таблица значений, содержащая данные для проведения и проверки ТЧ Товары
//  Отказ                     - флаг отказа в проведении
//
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоОС, Отказ,Заголовок)	
	ДвиженияПоРегистрамБухгалтерии(СтруктураШапкиДокумента, ТаблицаПоТоварам,ТаблицаПоОС, Отказ,Заголовок);	                       	
КонецПроцедуры

// Формирует бухгалтерские и налоговые проводки по регистрам бухгалтерии
//
Процедура ДвиженияПоРегистрамБухгалтерии(СтруктураШапкиДокумента, ТаблицаПоТоварам, ТаблицаПоОС, Отказ,Заголовок)
	
	ПроводкиБУ = Движения.Типовой;
	ПроводкиНУ = Движения.Налоговый;
	ДатаДок    = СтруктураШапкиДокумента.Дата;
	
	ДополнениеКСодержанию = ?(СтруктураШапкиДокумента.ВалютаДокумента = мВалютаРегламентированногоУчета,""," (в валюте)");
		
	// чтобы для каждой строки не выполнять запрос по стратегии списания для счета
	// добавим соответствие [Счет, СтратегияСписания]
	СтратегииСписания = Новый Соответствие;

	////////////////////////////////////////////////////////////////
	// Проводки по взаиморасчетам
	ТаблицыДокумента = Новый Структура();
	ТаблицыДокумента.Вставить("ТаблицаПоТоварам",	ТаблицаПоТоварам);
	ТаблицыДокумента.Вставить("ТаблицаПоОС",		ТаблицаПоОС);
    	
	//// Проводки по взаиморасчетам
	
	////////////////////////////////////////////////////////////////
	// ПО ТАБЛИЧНОЙ ЧАСТИ ТОВАРЫ
	Для каждого СтрокаТЧ из ТаблицаПоТоварам Цикл 
		// если нет соответствия стратегии выбранному счету, добавим значение
		Если СтратегииСписания.Получить(СтрокаТЧ.СчетУчетаБУ) = Неопределено Тогда			
			СтратегииСписания.Вставить(СтрокаТЧ.СчетУчетаБУ,УправлениеЗапасами.ВедетсяПартионныйУчетДляСчета(СтрокаТЧ.СчетУчетаБУ));			
		КонецЕсли;
		
		ВедетсяПартионныйУчетДляСчета = СтратегииСписания.Получить(СтрокаТЧ.СчетУчетаБУ);		


		Если СтрокаТЧ.Содержание = "Пошлина" или СтрокаТЧ.Содержание = "Сбор" 
			или (СтрокаТЧ.Содержание = "НДС" и СтруктураШапкиДокумента.НДСВключенВСтоимость) Тогда
			СуммаПроводки = ?(СтрокаТЧ.Содержание = "НДС", СтрокаТЧ.НДС, ?(СтруктураШапкиДокумента.НДСВключенВСтоимость, СтрокаТЧ.СуммаБезНДС, СтрокаТЧ.Сумма));
			
			СуммаПроводкиВал = ?(СтрокаТЧ.Содержание = "НДС", СтрокаТЧ.НДСВал, ?(СтруктураШапкиДокумента.НДСВключенВСтоимость, СтрокаТЧ.СуммаБезНДСВал, СтрокаТЧ.СуммаВал));
			
			Если (СуммаПроводки = 0) и  (СуммаПроводкиВал = 0) Тогда 
				Продолжить;
			КонецЕсли;
			
			Проводка = ПроводкиБУ.Добавить();
				
			Проводка.Период      = ДатаДок;
			Проводка.Организация = СтруктураШапкиДокумента.Организация;
			Проводка.Сумма       = СуммаПроводки;
			Если СтрокаТЧ.Содержание = "Пошлина" тогда
				Проводка.Содержание  = "Таможенная пошлина"+ДополнениеКСодержанию;
			КонецЕсли;	
			Если СтрокаТЧ.Содержание = "Сбор" тогда
				Проводка.Содержание  = "Таможенный сбор"+ДополнениеКСодержанию;
			КонецЕсли;
			Если СтрокаТЧ.Содержание = "НДС" тогда
				Проводка.Содержание  = "НДС по импорту"+ДополнениеКСодержанию;
			КонецЕсли;
			
			ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(
				Проводка, СтруктураШапкиДокумента.СтруктурноеПодразделение, СтруктураШапкиДокумента.СтруктурноеПодразделение);

			Проводка.СчетДт = СтрокаТЧ.СчетУчетаБУ;			
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Номенклатура", СтрокаТЧ.Номенклатура);				
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт, "Склады", СтрокаТЧ.Склад);			
						
			Если ВедетсяПартионныйУчетДляСчета Тогда
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт, "Партии", СтрокаТЧ.ДокументОприходования);
			КонецЕсли;			

			Проводка.СчетКт = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;

			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Договоры",    СтрокаТЧ.ДоговорВзаиморасчетов);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами", СтруктураШапкиДокумента.Ссылка);
			
			Если Проводка.СчетКт.Валютный Тогда
				Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
				Проводка.ВалютнаяСуммаКт = СуммаПроводкиВал;
			КонецЕсли;
			
			Если СтруктураШапкиДокумента.НеобходимостьОтраженияВНУ Тогда
				
				Проводка = ПроводкиНУ.Добавить();
				
				Проводка.Период      = ДатаДок;
				Проводка.Организация = СтруктураШапкиДокумента.Организация;
				Проводка.Сумма       = СуммаПроводки;
				
				Если СтрокаТЧ.Содержание = "Пошлина" тогда
					Проводка.Содержание  = "Таможенная пошлина"+ДополнениеКСодержанию;
				КонецЕсли;	
				Если СтрокаТЧ.Содержание = "Сбор" тогда
					Проводка.Содержание  = "Таможенный сбор"+ДополнениеКСодержанию;
				КонецЕсли;
				Если СтрокаТЧ.Содержание = "НДС" тогда
					Проводка.Содержание  = "НДС по импорту"+ДополнениеКСодержанию;
				КонецЕсли;
				
				ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(
					Проводка, СтруктураШапкиДокумента.СтруктурноеПодразделение, СтруктураШапкиДокумента.СтруктурноеПодразделение);

				Проводка.СчетДт      = СтрокаТЧ.СчетУчетаНУ;
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Номенклатура", СтрокаТЧ.Номенклатура);									
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт, "Склады", СтрокаТЧ.Склад);				
				
				Проводка.СчетКт      = ПроцедурыНалоговогоУчета.ПолучитьСчетРасчетовСКонтрагентомНУ();				
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, СтруктураШапкиДокумента.Контрагент);
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, СтрокаТЧ.ДоговорВзаиморасчетов);
				ПроцедурыНалоговогоУчета.ВидУчетаНУ(Проводка, ВидУчетаНУ);			
			КонецЕсли;
			
		ИначеЕсли СтрокаТЧ.Содержание = "НДС" Тогда
			Если СтрокаТЧ.НДС > 0  Тогда // НДС
				// Стандартная корреспонденция по НДС
				Проводка = ПроводкиБУ.Добавить();
				
				Проводка.Период      = ДатаДок;
				Проводка.Организация = СтруктураШапкиДокумента.Организация;
				Проводка.Сумма       = СтрокаТЧ.НДС;
				Проводка.Содержание  = "НДС"+ДополнениеКСодержанию;
				Проводка.СчетДт      = СтрокаТЧ.СчетУчетаНДС;
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"НалогиСборыОтчисления", 
									?(СтрокаТЧ.ВидНДС = Перечисления.ВидыНДС.НДССИзменениемСрокаУплаты, Справочники.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимостьСИзмененнымСрокомУплаты ,Справочники.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость));
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ВидыПлатежейВБюджетИФонды", Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
				
				ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(
					Проводка, СтруктураШапкиДокумента.СтруктурноеПодразделение, СтруктураШапкиДокумента.СтруктурноеПодразделение);

				Проводка.СчетКт = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;

				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Договоры",    СтрокаТЧ.ДоговорВзаиморасчетов);
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами", СтруктураШапкиДокумента.Ссылка);
				
				Если Проводка.СчетКт.Валютный Тогда
					// по НДС с изменением срока уплаты
					// взаиморасчеты возможны только в валюте рег. учета
					Если СтрокаТЧ.ВидНДС = Перечисления.ВидыНДС.НДССИзменениемСрокаУплаты Тогда
						Проводка.ВалютаКт        = мВалютаРегламентированногоУчета;
						Проводка.ВалютнаяСуммаКт = СтрокаТЧ.НДС;
						Если СтруктураШапкиДокумента.ВалютаВзаиморасчетов <> мВалютаРегламентированногоУчета Тогда									
							ОбщегоНазначения.СообщитьОбОшибке("Расчеты по НДС с измененным сроком уплаты в валюте не допустимы! Раздел "+ СтрокаТЧ.НомерРаздела +" строка " + СтрокаТЧ.НомерСтроки+ ". Документ не проведен");							
						КонецЕсли;
					Иначе
						Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
						Проводка.ВалютнаяСуммаКт = СтрокаТЧ.НДСВал;
					КонецЕсли;                            				
				КонецЕсли;    
				
				//Проводки по НДС (НУ)
				Если СтруктураШапкиДокумента.НеобходимостьОтраженияВНУ Тогда
					
					ПроводкаНУ = ПроводкиНУ.Добавить();
					
					ПроводкаНУ.Период      = ДатаДок;
					ПроводкаНУ.Организация = СтруктураШапкиДокумента.Организация;
					ПроводкаНУ.Сумма       = СтрокаТЧ.НДС;
					ПроводкаНУ.Содержание  = "НДС"+ДополнениеКСодержанию;
					ПроводкаНУ.СчетДт      = ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНДСКВозмещениюНУ(СтрокаТЧ.СчетУчетаНДС, Дата);
					
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт,ПроводкаНУ.СубконтоДт,"НалогиСборыОтчисления", 
																?(СтрокаТЧ.ВидНДС = Перечисления.ВидыНДС.НДССИзменениемСрокаУплаты, Справочники.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимостьСИзмененнымСрокомУплаты ,Справочники.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость));
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт,ПроводкаНУ.СубконтоДт,"ВидыПлатежейВБюджетИФонды", Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
					
					ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(
								ПроводкаНУ, СтруктураШапкиДокумента.СтруктурноеПодразделение, СтруктураШапкиДокумента.СтруктурноеПодразделение);
					
					ПроводкаНУ.СчетКт = ПроцедурыНалоговогоУчета.ПолучитьСчетРасчетовСКонтрагентомНУ();
					
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, "Договоры",    СтрокаТЧ.ДоговорВзаиморасчетов);					
					
					ПроцедурыНалоговогоУчета.ВидУчетаНУ(ПроводкаНУ, СтруктураШапкиДокумента.ВидУчетаНУ);
				КонецЕсли;
				
				Если СтрокаТЧ.ВидНДС = Перечисления.ВидыНДС.НДСМетодомЗачета Тогда
					// Дополнительные корреспонденции по НДС методом зачета
					Проводка = ПроводкиБУ.Добавить();				
					Проводка.Период      = ДатаДок;
					Проводка.Организация = СтруктураШапкиДокумента.Организация;
					Проводка.Сумма       = СтрокаТЧ.НДС;
					Проводка.Содержание  = "зачет НДС"+ДополнениеКСодержанию;
					
					ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(
						Проводка, СтруктураШапкиДокумента.СтруктурноеПодразделение, СтруктураШапкиДокумента.СтруктурноеПодразделение);

					Проводка.СчетДт = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;
					
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Договоры",    СтрокаТЧ.ДоговорВзаиморасчетов);
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ДокументыРасчетовСКонтрагентами", СтруктураШапкиДокумента.Ссылка);
					
					Проводка.СчетКт      = СтруктураШапкиДокумента.СчетУчетаНДСПоРеализации;
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"НалогиСборыОтчисления", Справочники.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость);
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ВидыПлатежейВБюджетИФонды", Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
					
					
					Если Проводка.СчетДт.Валютный Тогда
						Проводка.ВалютаДт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
						Проводка.ВалютнаяСуммаДт = СтрокаТЧ.НДСВал;						
					КонецЕсли;   
					
					Если СтруктураШапкиДокумента.НеобходимостьОтраженияВНУ Тогда
						// Дополнительные корреспонденции по НДС методом зачета
						ПроводкаНУ = ПроводкиНУ.Добавить();				
						ПроводкаНУ.Период      = ДатаДок;
						ПроводкаНУ.Организация = СтруктураШапкиДокумента.Организация;
						ПроводкаНУ.Сумма       = СтрокаТЧ.НДС;
						ПроводкаНУ.Содержание  = "зачет НДС"+ДополнениеКСодержанию;
						
						ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(
						ПроводкаНУ, СтруктураШапкиДокумента.СтруктурноеПодразделение, СтруктураШапкиДокумента.СтруктурноеПодразделение);
						
						ПроводкаНУ.СчетДт = ПроцедурыНалоговогоУчета.ПолучитьСчетРасчетовСКонтрагентомНУ();
						
						ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
						ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "Договоры",    СтрокаТЧ.ДоговорВзаиморасчетов);
						
						ПроводкаНУ.СчетКт      = ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНДСНачисленногоНУ(СтруктураШапкиДокумента.СчетУчетаНДСПоРеализации, Дата);
						ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт,ПроводкаНУ.СубконтоКт,"НалогиСборыОтчисления", Справочники.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость);
						ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт,ПроводкаНУ.СубконтоКт,"ВидыПлатежейВБюджетИФонды", Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
						
						ПроцедурыНалоговогоУчета.ВидУчетаНУ(ПроводкаНУ, СтруктураШапкиДокумента.ВидУчетаНУ);
					КонецЕсли; 							
				КонецЕсли;	
				
				
			КонецЕсли;					
		КонецЕсли;
	КонецЦикла;
	
	////////////////////////////////////////////////////////////////
	// ПО ТАБЛИЧНОЙ ЧАСТИ ОС
	Для каждого СтрокаТЧ из ТаблицаПоОС Цикл 
		Если СтрокаТЧ.Содержание = "Пошлина" тогда
			СодержаниеПроводки  = "Таможенная пошлина"+ДополнениеКСодержанию;
		КонецЕсли;	
		Если СтрокаТЧ.Содержание = "Сбор" тогда
			СодержаниеПроводки = "Таможенный сбор"+ДополнениеКСодержанию;
		КонецЕсли;
		Если СтрокаТЧ.Содержание = "НДС" тогда
			СодержаниеПроводки = "НДС по импорту"+ДополнениеКСодержанию;
		КонецЕсли;
		
		ВедетсяАналитУчетОсПоПодразделениям = СтруктураШапкиДокумента.ВедетсяАналитУчетОсПоПодразделениям;
		ВедетсяАналитУчетОсПоМОЛ 			= СтруктураШапкиДокумента.ВедетсяАналитУчетОсПоМОЛ;
		
		// по стоимости ОС
		Если СтрокаТЧ.Содержание = "Пошлина" или СтрокаТЧ.Содержание = "Сбор" 
			или (СтрокаТЧ.Содержание = "НДС" и СтруктураШапкиДокумента.НДСВключенВСтоимость) Тогда
			
			СуммаПроводки = ?(СтрокаТЧ.Содержание = "НДС", СтрокаТЧ.НДС, ?(СтруктураШапкиДокумента.НДСВключенВСтоимость, СтрокаТЧ.СуммаБезНДС, СтрокаТЧ.Сумма));			
			СуммаПроводкиВал = ?(СтрокаТЧ.Содержание = "НДС", СтрокаТЧ.НДСВал, ?(СтруктураШапкиДокумента.НДСВключенВСтоимость, СтрокаТЧ.СуммаБезНДСВал, СтрокаТЧ.СуммаВал));
						
			Если (СуммаПроводки = 0) и  (СуммаПроводкиВал = 0) Тогда 
				Продолжить;
			КонецЕсли;
			
			Проводка = ПроводкиБУ.Добавить();
				
			Проводка.Период      = ДатаДок;
			Проводка.Организация = СтруктураШапкиДокумента.Организация;
			Проводка.Сумма       = СуммаПроводки;
			Проводка.Содержание  = СодержаниеПроводки;			
			
			Проводка.СчетДт = СтрокаТЧ.СчетУчетаБУ;			
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаТЧ.ОсновноеСредство);				
			
			Если ВедетсяАналитУчетОсПоПодразделениям Тогда
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Подразделения", СтрокаТЧ.ПодразделениеОрганизации);
			КонецЕсли;
		
			Если ВедетсяАналитУчетОсПоМОЛ Тогда
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РаботникиОрганизаций", СтрокаТЧ.МОЛОрганизации);
			КонецЕсли;
		
			Проводка.СчетКт = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;

			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Договоры",    СтрокаТЧ.ДоговорВзаиморасчетов);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ДокументыРасчетовСКонтрагентами", СтруктураШапкиДокумента.Ссылка);
			
			ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(
					Проводка, СтруктураШапкиДокумента.СтруктурноеПодразделение, СтруктураШапкиДокумента.СтруктурноеПодразделение);

			Если Проводка.СчетКт.Валютный Тогда
				Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
				Проводка.ВалютнаяСуммаКт = СуммаПроводкиВал;
			КонецЕсли;
			// по ОС в налоговом учете
			Если СтруктураШапкиДокумента.НеобходимостьОтраженияВНУ Тогда
				
				Проводка = ПроводкиНУ.Добавить();
				
				Проводка.Период      = ДатаДок;
				Проводка.Организация = СтруктураШапкиДокумента.Организация;
				Проводка.Сумма       = СуммаПроводки;
				Проводка.Содержание  = СодержаниеПроводки;
				
				ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(
					Проводка, СтруктураШапкиДокумента.СтруктурноеПодразделение, СтруктураШапкиДокумента.СтруктурноеПодразделение);

				Проводка.СчетДт      = СтрокаТЧ.СчетУчетаНУ;
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ВнеоборотныеАктивы", СтрокаТЧ.ОсновноеСредство);
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ВидыДвиженияСтоимостиФА", Перечисления.ВидыДвиженияСтоимостиФА.Поступление);
				
				Проводка.СчетКт      = ПроцедурыНалоговогоУчета.ПолучитьСчетРасчетовСКонтрагентомНУ();				
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, СтруктураШапкиДокумента.Контрагент);
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, СтрокаТЧ.ДоговорВзаиморасчетов);
				ПроцедурыНалоговогоУчета.ВидУчетаНУ(Проводка, ВидУчетаНУ);			
			КонецЕсли;
		// НДС по табличной части ОС	
		ИначеЕсли СтрокаТЧ.Содержание = "НДС" Тогда
			Если СтрокаТЧ.НДС > 0  Тогда // НДС
				// Стандартная корреспонденция по НДС
				Проводка = ПроводкиБУ.Добавить();
				
				Проводка.Период      = ДатаДок;
				Проводка.Организация = СтруктураШапкиДокумента.Организация;
				Проводка.Сумма       = СтрокаТЧ.НДС;
				Проводка.Содержание  = "НДС"+ДополнениеКСодержанию;
				Проводка.СчетДт      = СтрокаТЧ.СчетУчетаНДС;
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"НалогиСборыОтчисления", 
									?(СтрокаТЧ.ВидНДС = Перечисления.ВидыНДС.НДССИзменениемСрокаУплаты, Справочники.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимостьСИзмененнымСрокомУплаты ,Справочники.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость));
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ВидыПлатежейВБюджетИФонды", Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
				
				ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(
					Проводка, СтруктураШапкиДокумента.СтруктурноеПодразделение, СтруктураШапкиДокумента.СтруктурноеПодразделение);

				Проводка.СчетКт = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;

				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Договоры",    СтрокаТЧ.ДоговорВзаиморасчетов);
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ДокументыРасчетовСКонтрагентами", СтруктураШапкиДокумента.Ссылка);
				
				Если Проводка.СчетКт.Валютный Тогда
					// по НДС с изменением срока уплаты
					// взаиморасчеты возможны только в валюте рег. учета
					Если СтрокаТЧ.ВидНДС = Перечисления.ВидыНДС.НДССИзменениемСрокаУплаты Тогда
						Проводка.ВалютаКт        = мВалютаРегламентированногоУчета;
						Проводка.ВалютнаяСуммаКт = СтрокаТЧ.НДС;
						Если СтруктураШапкиДокумента.ВалютаВзаиморасчетов <> мВалютаРегламентированногоУчета Тогда									
							ОбщегоНазначения.СообщитьОбОшибке("Расчеты по НДС с измененным сроком уплаты в валюте не допустимы! Раздел "+ СтрокаТЧ.НомерРаздела +" строка " + СтрокаТЧ.НомерСтроки+ ". Документ не проведен");							
						КонецЕсли;
					Иначе
						Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
						Проводка.ВалютнаяСуммаКт = СтрокаТЧ.НДСВал;
					КонецЕсли;                            				
				КонецЕсли;  
				
				Если СтруктураШапкиДокумента.НеобходимостьОтраженияВНУ Тогда
					
					ПроводкаНУ = ПроводкиНУ.Добавить();
					
					ПроводкаНУ.Период      = ДатаДок;
					ПроводкаНУ.Организация = СтруктураШапкиДокумента.Организация;
					ПроводкаНУ.Сумма       = СтрокаТЧ.НДС;
					ПроводкаНУ.Содержание  = "НДС"+ДополнениеКСодержанию;
					ПроводкаНУ.СчетДт      = ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНДСКВозмещениюНУ(СтрокаТЧ.СчетУчетаНДС, Дата);
					
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт,ПроводкаНУ.СубконтоДт,"НалогиСборыОтчисления", 
																?(СтрокаТЧ.ВидНДС = Перечисления.ВидыНДС.НДССИзменениемСрокаУплаты, Справочники.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимостьСИзмененнымСрокомУплаты ,Справочники.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость));
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт,ПроводкаНУ.СубконтоДт,"ВидыПлатежейВБюджетИФонды", Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
					
					ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(
								ПроводкаНУ, СтруктураШапкиДокумента.СтруктурноеПодразделение, СтруктураШапкиДокумента.СтруктурноеПодразделение);
					
					ПроводкаНУ.СчетКт = ПроцедурыНалоговогоУчета.ПолучитьСчетРасчетовСКонтрагентомНУ();
					
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, "Договоры",    СтрокаТЧ.ДоговорВзаиморасчетов);					
					
					ПроцедурыНалоговогоУчета.ВидУчетаНУ(ПроводкаНУ, СтруктураШапкиДокумента.ВидУчетаНУ);
				КонецЕсли;

				Если СтрокаТЧ.ВидНДС = Перечисления.ВидыНДС.НДСМетодомЗачета Тогда
					// Дополнительные корреспонденции по НДС методом зачета
					Проводка = ПроводкиБУ.Добавить();				
					Проводка.Период      = ДатаДок;
					Проводка.Организация = СтруктураШапкиДокумента.Организация;
					Проводка.Сумма       = СтрокаТЧ.НДС;
					Проводка.Содержание  = "зачет НДС"+ДополнениеКСодержанию;
					
					ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(
						Проводка, СтруктураШапкиДокумента.СтруктурноеПодразделение, СтруктураШапкиДокумента.СтруктурноеПодразделение);

					Проводка.СчетДт = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;
					
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Договоры",    СтрокаТЧ.ДоговорВзаиморасчетов);
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ДокументыРасчетовСКонтрагентами", СтруктураШапкиДокумента.Ссылка);
					
					Проводка.СчетКт      = СтруктураШапкиДокумента.СчетУчетаНДСПоРеализации;
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"НалогиСборыОтчисления", Справочники.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость);
					ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"ВидыПлатежейВБюджетИФонды", Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
					
					
					Если Проводка.СчетДт.Валютный Тогда
						Проводка.ВалютаДт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
						Проводка.ВалютнаяСуммаДт = СтрокаТЧ.НДСВал;
					КонецЕсли;   
					
					Если СтруктураШапкиДокумента.НеобходимостьОтраженияВНУ Тогда
						// Дополнительные корреспонденции по НДС методом зачета
						ПроводкаНУ = ПроводкиНУ.Добавить();				
						ПроводкаНУ.Период      = ДатаДок;
						ПроводкаНУ.Организация = СтруктураШапкиДокумента.Организация;
						ПроводкаНУ.Сумма       = СтрокаТЧ.НДС;
						ПроводкаНУ.Содержание  = "зачет НДС"+ДополнениеКСодержанию;
						
						ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(
						ПроводкаНУ, СтруктураШапкиДокумента.СтруктурноеПодразделение, СтруктураШапкиДокумента.СтруктурноеПодразделение);
						
						ПроводкаНУ.СчетДт = ПроцедурыНалоговогоУчета.ПолучитьСчетРасчетовСКонтрагентомНУ();
						
						ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
						ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "Договоры",    СтрокаТЧ.ДоговорВзаиморасчетов);
						
						ПроводкаНУ.СчетКт      = ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНДСНачисленногоНУ(СтруктураШапкиДокумента.СчетУчетаНДСПоРеализации, Дата);
						ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт,ПроводкаНУ.СубконтоКт,"НалогиСборыОтчисления", Справочники.НалогиСборыОтчисления.НалогНаДобавленнуюСтоимость);
						ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт,ПроводкаНУ.СубконтоКт,"ВидыПлатежейВБюджетИФонды", Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
						
						ПроцедурыНалоговогоУчета.ВидУчетаНУ(ПроводкаНУ, СтруктураШапкиДокумента.ВидУчетаНУ);
					КонецЕсли; 			
				КонецЕсли;		
			КонецЕсли;					
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ДвиженияПоРегистрамБухгалтерииРегл()

// Вызывается из тела процедуры "ДвиженияПоРегистрам" в процедуре формируются движения, отражающие
// поступление доп. расходов в подсистеме учета НДС
Процедура ДвиженияПоРегистрамПодсистемыНДС(СтруктураШапкиДокумента, Отказ, Заголовок)
	// Для не плательщиков НДС
	// НДС включается в стоимость импортируемого товара и 
	// движений по регистрам системы НДС делать не нужно
	Если НЕ СтруктураШапкиДокумента.ПризнакПлательщикаНДС Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ СтруктураШапкиДокумента.УчитыватьНДС Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка необходимости расчетов
	Если НЕ ПроцедурыБухгалтерскогоУчета.ПроводитьДокументПоРазделуУчета(СтруктураШапкиДокумента.Организация, Перечисления.РазделыУчета.НДС, СтруктураШапкиДокумента.Дата) Тогда
		Возврат;
	КонецЕсли;
		
	КоэффициентВалютногоПересчета = СтруктураШапкиДокумента.КурсВзаиморасчетов/СтруктураШапкиДокумента.КратностьВзаиморасчетов;	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ГТДИмпортТМЗ.СчетУчетаЦенности КАК СчетУчетаЦенности,
	|	ГТДИмпортТМЗ.Номенклатура,
	|	ГТДИмпортРазделы.СтавкаНДС,
	|	ГТДИмпортТМЗ.ВидНДС,
	|	ГТДИмпортТМЗ.НДСВидОборота,
	|	ГТДИмпортТМЗ.НДСВидПоступления,
	|	ГТДИмпортТМЗ.НДССрокПлатежа,
	|	ГТДИмпортТМЗ.СчетУчетаНДС,
	|	ГТДИмпортТМЗ.НомерГТД,
	|	ВЫБОР
	|		КОГДА ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	|			ТОГДА ГТДИмпортТМЗ.Ссылка.СчетУчетаРасчетовСКонтрагентом
	|		ИНАЧЕ ГТДИмпортТМЗ.Ссылка.СчетУчетаРасчетовСКонтрагентомВал
	|	КОНЕЦ КАК СчетУчетаРасчетовСКонтрагентом,
	|	ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА НЕ ГТДИмпортРазделы.ДоговорВзаиморасчетовНДС.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	|			ТОГДА ГТДИмпортТМЗ.СуммаНДС * &КоэффициентВалютногоПересчета
	|		ИНАЧЕ ГТДИмпортТМЗ.СуммаНДС
	|	КОНЕЦ КАК НДС,
	|	ВЫБОР
	|		КОГДА НЕ ГТДИмпортРазделы.ДоговорВзаиморасчетовПошлина.ВалютаВзаиморасчетов = ГТДИмпортРазделы.Ссылка.ВалютаДокумента
	|			ТОГДА ГТДИмпортТМЗ.СуммаПошлины * &КоэффициентВалютногоПересчета
	|		ИНАЧЕ ГТДИмпортТМЗ.СуммаПошлины
	|	КОНЕЦ + ГТДИмпортТМЗ.СуммаСбора + ГТДИмпортТМЗ.ФактурнаяСтоимость + ГТДИмпортТМЗ.СуммаСбораВал * &КоэффициентВалютногоПересчета КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ГТДИмпортТовары.Ссылка КАК Ссылка,
	|		ГТДИмпортТовары.СчетУчетаБУ КАК СчетУчетаЦенности,
	|		ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	|		ГТДИмпортТовары.ВидНДС КАК ВидНДС,
	|		ГТДИмпортТовары.НДСВидОборота КАК НДСВидОборота,
	|		ГТДИмпортТовары.НДСВидПоступления КАК НДСВидПоступления,
	|		ГТДИмпортТовары.НДССрокПлатежа КАК НДССрокПлатежа,
	|		ГТДИмпортТовары.СчетУчетаНДС КАК СчетУчетаНДС,
	|		ГТДИмпортТовары.СуммаНДС КАК СуммаНДС,
	|		ГТДИмпортТовары.СуммаПошлины КАК СуммаПошлины,
	|		ГТДИмпортТовары.СуммаСбора КАК СуммаСбора,
	|		ГТДИмпортТовары.ФактурнаяСтоимость КАК ФактурнаяСтоимость,
	|		ГТДИмпортТовары.СуммаСбораВал КАК СуммаСбораВал,
	|		ГТДИмпортТовары.НомерРаздела КАК НомерРаздела,
	|		ГТДИмпортТовары.НомерГТД КАК НомерГТД
	|	ИЗ
	|		Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|	ГДЕ
	|		ГТДИмпортТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ГТДИмпортОС.Ссылка,
	|		ГТДИмпортОС.СчетУчетаБУ,
	|		ГТДИмпортОС.ОсновноеСредство,
	|		ГТДИмпортОС.ВидНДС,
	|		ГТДИмпортОС.НДСВидОборота,
	|		ГТДИмпортОС.НДСВидПоступления,
	|		ГТДИмпортОС.НДССрокПлатежа,
	|		ГТДИмпортОС.СчетУчетаНДС,
	|		ГТДИмпортОС.СуммаНДС,
	|		ГТДИмпортОС.СуммаПошлины,
	|		ГТДИмпортОС.СуммаСбора,
	|		ГТДИмпортОС.ФактурнаяСтоимость,
	|		ГТДИмпортОС.СуммаСбораВал,
	|		ГТДИмпортОС.НомерРаздела,
	|		ГТДИмпортОС.НомерГТД
	|	ИЗ
	|		Документ.ГТДИмпорт.ОС КАК ГТДИмпортОС
	|	ГДЕ
	|		ГТДИмпортОС.Ссылка = &Ссылка) КАК ГТДИмпортТМЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Разделы КАК ГТДИмпортРазделы
	|		ПО ГТДИмпортТМЗ.НомерРаздела = ГТДИмпортРазделы.НомерСтроки
	|ГДЕ
	|	ГТДИмпортРазделы.Ссылка = &Ссылка") ;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("КоэффициентВалютногоПересчета", КоэффициентВалютногоПересчета);	
	
	ТаблицаПоТоварамДляНДС = Запрос.Выполнить().Выгрузить();			
	
	Если СтруктураШапкиДокумента.Свойство("НДСВключенВСтоимость") И СтруктураШапкиДокумента.НДСВключенВСтоимость Тогда
		ТаблицаПоТоварамДляНДС.Колонки.Сумма.Имя = "СуммаБезНДС";
	КонецЕсли;	
	// Работа со структурными подразделениями
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ПлательщикНДС 	= ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(СтруктураШапкиДокумента.Организация,
																	СтруктураШапкиДокумента.Организация,
																	глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц"),
																	Перечисления.РазделыНалоговогоУчета.НДС);
	Иначе
		ПлательщикНДС 	= СтруктураШапкиДокумента.Организация;															
	КонецЕсли;																
	
	СтруктураШапкиДокумента.Вставить("ПлательщикНДС", ПлательщикНДС);
	
	УчетНДСИАкциза.СформироватьДвиженияПоРегиструНДСКВозмещению(СтруктураШапкиДокумента, ТаблицаПоТоварамДляНДС, Движения, Отказ);			
КонецПроцедуры // ДвиженияПоРегистрамПодсистемыНДС()

Процедура ДвиженияПоРегиструТоварыОрганизацийБУ(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГТДИмпортТовары.НомерСтроки,
	|	ГТДИмпортТовары.Номенклатура КАК Номенклатура,
	|	ГТДИмпортТовары.НомерГТД,
	|	ГТДИмпортТовары.Количество * ГТДИмпортТовары.Коэффициент КАК Количество
	|ИЗ
	|	Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
	|ГДЕ
	|	ГТДИмпортТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	ТаблицаТоварыНомераГТД = Запрос.Выполнить().Выгрузить();
	
	НомераГТДСервер.СформироватьДвиженияТоварыОрганизацийПриход(ТаблицаТоварыНомераГТД, СтруктураШапкиДокумента, Движения, Отказ);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПриКопировании(ОбъектКопирования)
	
	Для Каждого СтрокаТовары Из ЭтотОбъект.Товары Цикл
		СтрокаТовары.НомерГТД = Неопределено;
	КонецЦикла;
	
	Для Каждого СтрокаОС Из ЭтотОбъект.ОС Цикл
		СтрокаОС.НомерГТД = Неопределено;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(Основание)
	
	ЗаполнитьПоДокументуОснования(Основание);
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
		
	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента 		= ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	СтруктураШапкиДокументаВалюта 	= ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	СтруктураШапкиДокумента.Вставить("ПризнакПлательщикаНДС", ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНДС(СтруктураШапкиДокумента.Организация, СтруктураШапкиДокумента.Дата));
	
	// для плательщиков КПН в любом случае формируются корреспонденции по отражению в налоговом учете
	// если признак "Отражать в НУ" в документе не установлен, то формируется проводка по постоянной разнице
	ОрганизацияПлательщикНалогаНаПрибыль 			= ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(Организация, Дата, мУчетнаяПолитикаПоНалоговомуУчету);
	ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль 	= ОрганизацияПлательщикНалогаНаПрибыль и ПроцедурыНалоговогоУчета.ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль(Организация, Дата, мУчетнаяПолитикаПоБухгалтерскомуУчету);	
	СтруктураШапкиДокумента.Вставить("НеобходимостьОтраженияВНУ", 						УчитыватьКПН И (ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль ИЛИ ВидУчетаНУ = Справочники.ВидыУчетаНУ.НУ));
	СтруктураШапкиДокумента.Вставить("ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль", 	ПоддержкаУчетаВременныхРазницПоНалогуНаПрибыль);
	СтруктураШапкиДокумента.Вставить("ОрганизацияПлательщикНалогаНаПрибыль", 			ОрганизацияПлательщикНалогаНаПрибыль);
	
	СтруктураШапкиДокумента.Вставить("ВедетсяАналитУчетОсПоПодразделениям", 			УправлениеВнеоборотнымиАктивами.ВедетсяАналитическийУчетОСПоПодразделениям(Дата));
	СтруктураШапкиДокумента.Вставить("ВедетсяАналитУчетОсПоМОЛ", 						УправлениеВнеоборотнымиАктивами.ВедетсяАналитическийУчетОСПоМОЛ(Дата));
	
	
 	// для не плательщиков НДС проводки не формируем
	Если СтруктураШапкиДокумента.УчитыватьНДС и 
		Не СтруктураШапкиДокумента.НДСВключенВСтоимость и
		Не СтруктураШапкиДокумента.ПризнакПлательщикаНДС  Тогда
		
		ОбщегоНазначения.СообщитьОбОшибке("Организация не является плательщиком НДС, для документа необходимо установить признак включения НДС в стоимость товаров", Отказ, Заголовок);		
		
	КонецЕсли;	
	
	// Устанавливаем валюту документа для данной структуры равной валюте взаиморасчетов
	СтруктураШапкиДокументаВалюта.Вставить("ВалютаДокумента",	СтруктураШапкиДокументаВалюта.ВалютаВзаиморасчетов);
	СтруктураШапкиДокументаВалюта.Вставить("КурсДокумента",  	СтруктураШапкиДокументаВалюта.КурсВзаиморасчетов);
	СтруктураШапкиДокументаВалюта.Вставить("КратностьДокумента",СтруктураШапкиДокументаВалюта.КратностьВзаиморасчетов);
	
	//Дополним структуру данными, необходимыми для отработки некоторых стандартных механизмов
	СтруктураШапкиДокументаВалюта.Вставить("СчетУчетаРасчетовПоАвансам", Неопределено);
	
	
	//Сформируем структуру, аналогичную структуре шапки документа для отработки по валютному договору
	///////////////////////////////////////////////////////////////////////////////////////////////
	
	///////////////////////////////////////////////////////////////////////////////////////////////
	//Сформируем структуру, аналогичную структуре шапки документа для отработки по тенговому договору
	СтруктураШапкиДокументаТенге = Новый структура();
	Для каждого Параметр Из СтруктураШапкиДокумента Цикл
		Если Прав(Параметр.Ключ,3) = "Вал" тогда
			//Данные, специфические для договора в валюте не требуются
			Продолжить;
		ИначеЕсли Прав(Параметр.Ключ,4) = "Регл" тогда
			//Необходимо установить данные реквизиты без специфического окончания 
			СтруктураШапкиДокументаТенге.Вставить(Сред(Параметр.Ключ,1,СтрДлина(Параметр.Ключ)-4),Параметр.Значение);	
		ИначеЕсли СтруктураШапкиДокументаТенге.Свойство(Параметр.Ключ) Тогда
			// Заполнено ранее, возможно - при переименовании реквизитов с постфиксом "Регл"
			продолжить;
		Иначе
			СтруктураШапкиДокументаТенге.Вставить(Параметр.Ключ,Параметр.Значение);
			СтруктураШапкиДокументаВалюта.Вставить(Параметр.Ключ,Параметр.Значение);
		КонецЕсли; 
	КонецЦикла; 
	// Устанавливаем валюту документа для данной структуры равной валюте регл. учета
	СтруктураШапкиДокументаТенге.Вставить("ВалютаДокумента",мВалютаРегламентированногоУчета);
	СтруктураШапкиДокументаТенге.Вставить("КурсДокумента",  1);
	СтруктураШапкиДокументаТенге.Вставить("КратностьДокумента",  1);
	// Устанавливаем валюту документа для данной структуры равной валюте регл. учета
	СтруктураШапкиДокументаТенге.Вставить("ВалютаВзаиморасчетов",мВалютаРегламентированногоУчета);
	СтруктураШапкиДокументаТенге.Вставить("КурсВзаиморасчетов",  1);
	СтруктураШапкиДокументаТенге.Вставить("КратностьВзаиморасчетов",  1);
	
	// Устанавливаем валюту документа для данной структуры равной валюте взаиморасчетов
	СтруктураШапкиДокументаВалюта.Вставить("ВалютаДокумента", 	СтруктураШапкиДокумента.ВалютаВзаиморасчетов);
	СтруктураШапкиДокументаВалюта.Вставить("КурсДокумента",  	СтруктураШапкиДокумента.КурсВзаиморасчетов);
	СтруктураШапкиДокументаВалюта.Вставить("КратностьДокумента", СтруктураШапкиДокумента.КратностьВзаиморасчетов);
	// Устанавливаем валюту документа для данной структуры равной валюте регл. учета
	СтруктураШапкиДокументаВалюта.Вставить("ВалютаВзаиморасчетов",		СтруктураШапкиДокумента.ВалютаВзаиморасчетов);
	СтруктураШапкиДокументаВалюта.Вставить("КурсВзаиморасчетов",  		СтруктураШапкиДокумента.КурсВзаиморасчетов);
	СтруктураШапкиДокументаВалюта.Вставить("КратностьВзаиморасчетов",  	СтруктураШапкиДокумента.КурсВзаиморасчетов);
	
	//Дополним структуру данными, необходимыми для отработки некоторых стандартных механизмов	
	СтруктураШапкиДокументаВалюта.Вставить("СчетУчетаРасчетовПоАвансам", Неопределено);
	//Сформируем структуру, аналогичную структуре шапки документа для отработки по тенговому договору
	///////////////////////////////////////////////////////////////////////////////////////////////

	ТаблицаПоТоварамВалюта 	= Неопределено;
	ТаблицаПоТоварамТенге 	= Неопределено;
	ТаблицаПоОСВалюта 		= Неопределено;
	ТаблицаПоОСТенге 		= Неопределено;
	
	СформироватьТаблицыТоваровПоДокументу(СтруктураШапкиДокумента,ТаблицаПоТоварамВалюта,ТаблицаПоТоварамТенге);
	СформироватьТаблицыОСПоДокументу(СтруктураШапкиДокумента,ТаблицаПоОСВалюта,ТаблицаПоОСТенге);
	
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);
	ПроверитьЗаполнениеТабличнойЧастиРазделы(Разделы, СтруктураШапкиДокумента, Отказ, Заголовок);
	
	ПроверитьЗаполнениеТабличнойЧастиТовары(ТаблицаПоТоварамВалюта,ТаблицаПоТоварамТенге, СтруктураШапкиДокумента, Отказ, Заголовок);
	ПроверитьЗаполнениеТабличнойЧастиОС(ТаблицаПоОСВалюта,ТаблицаПоОСТенге, СтруктураШапкиДокумента, Отказ, Заголовок);	
			
	УправлениеВзаиморасчетами.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ТаблицаПоТоварамВалюта, СтруктураШапкиДокументаВалюта, Ложь, мВалютаРегламентированногоУчета); //, Разделы
	УправлениеВзаиморасчетами.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ТаблицаПоТоварамТенге,  СтруктураШапкиДокументаТенге, Ложь, мВалютаРегламентированногоУчета); //, Разделы
	УправлениеВзаиморасчетами.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ТаблицаПоОСВалюта, СтруктураШапкиДокументаВалюта, Ложь, мВалютаРегламентированногоУчета); //, Разделы
	УправлениеВзаиморасчетами.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ТаблицаПоОСТенге,  СтруктураШапкиДокументаТенге, Ложь, мВалютаРегламентированногоУчета); //, Разделы
	
	Если НЕ Отказ Тогда
		
		ДвиженияПоРегистрам(СтруктураШапкиДокументаВалюта, ТаблицаПоТоварамВалюта, ТаблицаПоОСВалюта, Отказ,Заголовок);
		ДвиженияПоРегистрам(СтруктураШапкиДокументаТенге, ТаблицаПоТоварамТенге,  ТаблицаПоОСТенге, Отказ,Заголовок);
		ДвиженияПоРегистрамПодсистемыНДС(СтруктураШапкиДокумента, Отказ, Заголовок);
		ДвиженияПоРегиструТоварыОрганизацийБУ(СтруктураШапкиДокумента, Отказ, Заголовок);
		
		//Учет курсовых разниц
		Если (ВалютаДокумента <> мВалютаРегламентированногоУчета) тогда
			ПроцедурыБухгалтерскогоУчета.ПереоценкаСчетовДокументаРегл(ЭтотОбъект, СтруктураШапкиДокумента, мВалютаРегламентированногоУчета, Отказ);
		КонецЕсли; // Учет курсовых разниц
		
		Если Не Отказ Тогда			
			ПроцедурыНалоговогоУчета.ОтразитьПостоянныеРазницыВНУ(ЭтотОбъект, СтруктураШапкиДокумента, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	// Если в таблице Товары не указаны коды ТН ВЭД, то источники происхождения будут созданы для ОС, а для Товары не будут созданы. 
	// В результате проведение не пройдет и в ОС будет <Объект не найден>.
	Если НЕ ВоВсехСтрокахУказаныНомераГТД() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	// Если происходит отказ от записи, то элементы справочника НомераГТД,
	// созданные в событии ПередЗаписью будут иметь вид <Объект не найден>,
	// поэтому ссылки на них нужно очистить в таблицах Товары и ОС.
	Если Отказ Тогда
		Если ДополнительныеСвойства.Свойство("МассивСозданныхНомеровГТД") Тогда
			УдалитьСозданныеНомераГТДИзТаблицТоварыИОС(ДополнительныеСвойства.МассивСозданныхНомеровГТД);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Предопределенная процедура обработки события удаления проведения документа
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, РучнаяКорректировка);
КонецПроцедуры

// Процедура - обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДокумента = 0;
	
	Для Каждого СтрокаТЧ ИЗ Разделы Цикл
		СуммаДокумента = СуммаДокумента + СтрокаТЧ.ТаможеннаяСтоимость; 
	КонецЦикла;	
	
	///////////////////////////////////////////////////////////////
	// Реквизиты входящего документа
	Если ПустаяСтрока(ВидВходящегоДокумента) Тогда 
		ВидВходящегоДокумента = "Грузовая таможенная декларация";
	КонецЕсли;
	
	Если ПустаяСтрока(НомерВходящегоДокумента) И (НЕ ПустаяСтрока(НомерГТД)) Тогда 
		НомерВходящегоДокумента = СокрЛП(НомерГТД);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаВходящегоДокумента) Тогда 
		ДатаВходящегоДокумента = Дата;
	КонецЕсли;
	
	Если НЕ Отказ И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ВедетсяУчетПоТоварамОрганизацийБУ = НомераГТДСервер.ВедетсяУчетПоТоварамОрганизаций(Дата);
		
		Если ВедетсяУчетПоТоварамОрганизацийБУ Тогда
			ЗаполнитьПустыеПризнакиПроисхождения("Товары");			
		КонецЕсли;

		МассивСозданныхНомеровГТД = НайтиСоздатьОбновитьНомераГТД(ВедетсяУчетПоТоварамОрганизацийБУ);
		ДополнительныеСвойства.Вставить("МассивСозданныхНомеровГТД", МассивСозданныхНомеровГТД);

	КонецЕсли; 
	
КонецПроцедуры	

// Процедура - обработчик события "ПриЗаписи".
//
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция НайтиСоздатьОбновитьНомераГТД(ВедетсяУчетПоТоварамОрганизацийБУ)
		
	ТоварыМассивСозданныхНомеровГТД = ТоварыНайтиСоздатьОбновитьНомераГТД(ВедетсяУчетПоТоварамОрганизацийБУ);
	ОСМассивСозданныхНомеровГТД = ОСНайтиСоздатьОбновитьНомераГТД(ВедетсяУчетПоТоварамОрганизацийБУ);
	
	МассивСозданныхНомеровГТД = Новый Массив;
	
	Для Каждого СсылкаНомерГТД Из ТоварыМассивСозданныхНомеровГТД Цикл
		МассивСозданныхНомеровГТД.Добавить(СсылкаНомерГТД);	
	КонецЦикла;	
	
	Для Каждого СсылкаНомерГТД Из ОСМассивСозданныхНомеровГТД Цикл
		МассивСозданныхНомеровГТД.Добавить(СсылкаНомерГТД);	
	КонецЦикла;
	
	Возврат МассивСозданныхНомеровГТД;
	  	
КонецФункции

Функция ТоварыНайтиСоздатьОбновитьНомераГТД(ВедетсяУчетПоТоварамОрганизацийБУ)
	
	ТаблицаНомеровГТД = Справочники.НомераГТД.ПустаяТаблицаНомеровГТД();
	ТаблицаНомеровГТД.Колонки.Добавить("НомерСтрокиГТДЧисло", Новый ОписаниеТипов("Число"));
	
	// Заполнить ТаблицаНомеровГТД, которая будет использоваться 
	// для поиска, создания, обновления номеров ГТД.
	Для Каждого СтрокаТовар Из Товары Цикл
		
		Если ВедетсяУчетПоТоварамОрганизацийБУ ИЛИ СтрокаТовар.ВидНДС = Перечисления.ВидыНДС.НДССИзменениемСрокаУплаты Тогда
			СтрокаНомерГТД = ТаблицаНомеровГТД.Добавить();
			
			СтрокаНомерГТД.Идентификатор = Формат(СтрокаТовар.НомерСтроки, "ЧН=0; ЧГ=");
			СтрокаНомерГТД.НомерСтроки = Формат(СтрокаТовар.НомерСтроки, "ЧН=0; ЧГ=");
			
			СтрокаНомерГТД.НомерГТД = ЭтотОбъект.НомерГТД;
			СтрокаНомерГТД.НомерСтрокиГТД = Формат(СтрокаТовар.НомерРаздела, "ЧН=0; ЧГ=");
			СтрокаНомерГТД.НомерСтрокиГТДЧисло = СтрокаТовар.НомерРаздела;
			
			СтрокаНомерГТД.КодТНВЭД = СтрокаТовар.КодТНВЭД;
			СтрокаНомерГТД.ГСВС = ЭСФСерверПереопределяемый.ПолучитьГСВС(,СтрокаТовар.КодТНВЭД);
			СтрокаНомерГТД.НаименованиеТовара = СтрокаТовар.НаименованиеТовара;
			СтрокаНомерГТД.СтранаПроисхожденияТовара = СтрокаТовар.СтранаПроисхождения;
			
			СтрокаРаздел = ЭтотОбъект.Разделы.Найти(СтрокаТовар.НомерРаздела, "НомерСтроки");
			СтрокаНомерГТД.СпособПроисхожденияТовара = СтрокаРаздел.СпособПроисхожденияТовара; 			
			СтрокаНомерГТД.РегистрационныйНомерЭСФ = "";
			
			СтрокаНомерГТД.СсылкаНомерГТД = СтрокаТовар.НомерГТД;
			СтрокаНомерГТД.ПризнакПроисхождения = СтрокаТовар.ПризнакПроисхождения;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТаблицаНомеровГТД.Количество() = 0 Тогда
		Возврат Новый Массив;
	КонецЕсли;
	 	
	РеквизитыИзменены = (НомерГТД <> Ссылка.НомерГТД) ИЛИ ИзменилисьРеквизитыТЧТовары(ТаблицаНомеровГТД, ВедетсяУчетПоТоварамОрганизацийБУ);
	Если НЕ РеквизитыИзменены Тогда
		Возврат Новый Массив;
	КонецЕсли;
			
	МассивСозданныхНомеровГТД = Справочники.НомераГТД.НайтиСоздатьОбновитьНомераГТД(ТаблицаНомеровГТД, "ТМЗ", ЭтотОбъект.Ссылка);
	
	// Заполнить в таблице Товары ссылки на найденные и созданные элементы справочника НомераГТД. 
	Для Каждого СтрокаТовар Из Товары Цикл
		СтрокаНомерГТД = ТаблицаНомеровГТД.Найти(Формат(СтрокаТовар.НомерСтроки, "ЧН=0; ЧГ="), "Идентификатор");
		Если СтрокаНомерГТД = Неопределено Тогда
			Продолжить;
		КонецЕсли;		
		СтрокаТовар.НомерГТД = СтрокаНомерГТД.СсылкаНомерГТД;
	КонецЦикла;
	
	Возврат МассивСозданныхНомеровГТД;
		
КонецФункции

Функция ОСНайтиСоздатьОбновитьНомераГТД(ВедетсяУчетПоТоварамОрганизацийБУ)
	
	ТаблицаНомеровГТД = Справочники.НомераГТД.ПустаяТаблицаНомеровГТД();	
	
	// На данный момент учет по ГТД в разрезе ОС не реализован.
	// Номера ГТД для ОС нужно указывать для приложения 300.03.
	
	// Заполнить ТаблицаНомеровГТД, которая будет использоваться 
	// для поиска, создания, обновления номеров ГТД.
	Для Каждого СтрокаОС Из ОС Цикл
		
		Если ВедетсяУчетПоТоварамОрганизацийБУ ИЛИ СтрокаОС.ВидНДС = Перечисления.ВидыНДС.НДССИзменениемСрокаУплаты Тогда		
			СтрокаНомерГТД = ТаблицаНомеровГТД.Добавить();
			
			СтрокаНомерГТД.Идентификатор = Формат(СтрокаОС.НомерСтроки, "ЧН=0; ЧГ=");
			СтрокаНомерГТД.НомерСтроки = Формат(СтрокаОС.НомерСтроки, "ЧН=0; ЧГ=");
			
			СтрокаНомерГТД.НомерГТД = ЭтотОбъект.НомерГТД;
			СтрокаНомерГТД.НомерСтрокиГТД = "";
			СтрокаНомерГТД.КодТНВЭД = Неопределено;
			СтрокаНомерГТД.НаименованиеТовара = "";
			СтрокаНомерГТД.СтранаПроисхожденияТовара = Справочники.КлассификаторСтранМира.ПустаяСсылка();
			СтрокаНомерГТД.СпособПроисхожденияТовара = Перечисления.СпособыПроисхожденияТоваров.ПустаяСсылка();
			СтрокаНомерГТД.РегистрационныйНомерЭСФ   = "";
			
			СтрокаНомерГТД.СсылкаНомерГТД = СтрокаОС.НомерГТД;		
			
		КонецЕсли;  	
		
	КонецЦикла;
	
	Если ТаблицаНомеровГТД.Количество() = 0 Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	МассивСозданныхНомеровГТД = Справочники.НомераГТД.НайтиСоздатьОбновитьНомераГТД(ТаблицаНомеровГТД, "ОС", ЭтотОбъект.Ссылка);
	
	Для Каждого СтрокаОС Из ОС Цикл
		Если СтрокаОС.НомерГТД.Пустая() Тогда
			СтрокаНомерГТД = ТаблицаНомеровГТД.Найти(Формат(СтрокаОС.НомерСтроки, "ЧН=0; ЧГ="), "Идентификатор");
			СтрокаОС.НомерГТД = СтрокаНомерГТД.СсылкаНомерГТД;
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивСозданныхНомеровГТД;

	
КонецФункции

Функция ИзменилисьРеквизитыТЧТовары(ТаблицаНомеровГТД, ВедетсяУчетПоТоварамОрганизацийБУ)
			
	Запрос = Новый Запрос;  
	Запрос.УстановитьПараметр("НомераГТД", ТаблицаНомеровГТД);
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	               |	НомераГТД.НомерСтрокиГТДЧисло КАК НомерСтрокиГТД,
	               |	НомераГТД.КодТНВЭД КАК КодТНВЭД,
	               |	НомераГТД.НаименованиеТовара КАК НаименованиеТовара,
	               |	НомераГТД.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	               |	НомераГТД.СпособПроисхожденияТовара КАК СпособПроисхожденияТовара,
	               |	НомераГТД.ПризнакПроисхождения КАК ПризнакПроисхождения,
	               |	НомераГТД.СсылкаНомерГТД КАК СсылкаНомерГТД,
	               |	1 КАК Счетчик
	               |ПОМЕСТИТЬ ВТ_НовыеДанныеНомераГТД
	               |ИЗ
	               |	&НомераГТД КАК НомераГТД
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Товары.СсылкаНомерГТД КАК СсылкаНомерГТД
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ТЧТовары.НомерРаздела КАК НомерСтрокиГТД,
	               |		ТЧТовары.КодТНВЭД КАК КодТНВЭД,
	               |		ТЧТовары.НаименованиеТовара КАК НаименованиеТовара,
	               |		ТЧТовары.СтранаПроисхождения КАК СтранаПроисхожденияТовара,
	               |		ТЧРазделы.СпособПроисхожденияТовара КАК СпособПроисхожденияТовара,
	               |		ТЧТовары.ПризнакПроисхождения КАК ПризнакПроисхождения,
				   |		ТЧТовары.НомерГТД КАК СсылкаНомерГТД,
				   |		-1 КАК Счетчик
				   |	ИЗ
				   |		Документ.ГТДИмпорт.Товары КАК ТЧТовары
				   |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ГТДИмпорт.Разделы КАК ТЧРазделы
				   |			ПО (ТЧРазделы.Ссылка = ТЧТовары.Ссылка)
				   |				И ТЧТовары.НомерРаздела = ТЧРазделы.НомерСтроки
				   |	ГДЕ
				   |		ТЧТовары.Ссылка = &ДокументСсылка";
				   Если Не ВедетсяУчетПоТоварамОрганизацийБУ Тогда
					   Запрос.Текст = Запрос.Текст + "
					   |		И ТЧТовары.ВидНДС = Значение(Перечисление.ВидыНДС.НДССИзменениемСрокаУплаты)";
				   КонецЕсли;
				   Запрос.Текст = Запрос.Текст + "
				   |	
				   |	ОБЪЕДИНИТЬ ВСЕ
				   |	
				   |	ВЫБРАТЬ
				   |		НомераГТД.НомерСтрокиГТД,
	               |		НомераГТД.КодТНВЭД,
	               |		НомераГТД.НаименованиеТовара,
	               |		НомераГТД.СтранаПроисхожденияТовара,
	               |		НомераГТД.СпособПроисхожденияТовара,
	               |		НомераГТД.ПризнакПроисхождения,
	               |		НомераГТД.СсылкаНомерГТД,
	               |		НомераГТД.Счетчик
	               |	ИЗ
	               |		ВТ_НовыеДанныеНомераГТД КАК НомераГТД) КАК Товары
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Товары.СтранаПроисхожденияТовара,
	               |	Товары.ПризнакПроисхождения,
	               |	Товары.КодТНВЭД,
	               |	Товары.НаименованиеТовара,
	               |	Товары.СсылкаНомерГТД,
	               |	Товары.НомерСтрокиГТД,
	               |	Товары.СпособПроисхожденияТовара
	               |
	               |ИМЕЮЩИЕ
	               |	(СУММА(Товары.Счетчик) <> 0
	               |		ИЛИ Товары.СсылкаНомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))";
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());

КонецФункции

Функция ВоВсехСтрокахУказаныНомераГТД()
	
	ВоВсехСтроках = Истина;
	ВедетсяУчетПоТоварамОрганизацийБУ = НомераГТДСервер.ВедетсяУчетПоТоварамОрганизаций(Дата);
	НДССИзменениемСрокаУплаты = Перечисления.ВидыНДС.НДССИзменениемСрокаУплаты;
	
	Для Каждого Строка Из ЭтотОбъект.Товары Цикл
		Если НЕ ЗначениеЗаполнено(Строка.НомерГТД) Тогда
			Если ВедетсяУчетПоТоварамОрганизацийБУ Тогда
				ВоВсехСтроках = Ложь;
			ИначеЕсли Строка.ВидНДС = НДССИзменениемСрокаУплаты Тогда
				ВоВсехСтроках = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из ЭтотОбъект.ОС Цикл
		Если НЕ ЗначениеЗаполнено(Строка.НомерГТД) Тогда 
			Если ВедетсяУчетПоТоварамОрганизацийБУ Тогда
				ВоВсехСтроках = Ложь;
			ИначеЕсли Строка.ВидНДС = НДССИзменениемСрокаУплаты Тогда
				ВоВсехСтроках = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВоВсехСтроках;
	
КонецФункции

Процедура УдалитьСозданныеНомераГТДИзТаблицТоварыИОС(Знач МассивСозданныхНомеровГТД)
	
	МассивИменТаблиц = Новый Массив;
	МассивИменТаблиц.Добавить("Товары");
	МассивИменТаблиц.Добавить("ОС");
	
	Для Каждого ИмяТаблицы Из МассивИменТаблиц Цикл
		
		Для Каждого СтрокаТаблицы Из ЭтотОбъект[ИмяТаблицы] Цикл
			
			Если МассивСозданныхНомеровГТД.Найти(СтрокаТаблицы.НомерГТД) <> Неопределено Тогда
				
				СтрокаТаблицы.НомерГТД = Неопределено;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

//Заполнение пустых признаков происхождения по умолчанию
//
Процедура ЗаполнитьПустыеПризнакиПроисхождения(ИмяТЧ)
	
	ЭСФСервер.ЗаполнитьПустыеПризнакиПроисхождения(ЭтотОбъект, ИмяТЧ)
	
КонецПроцедуры

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
мПоддержкаРаботыСоСтруктурнымиПодразделениями = Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить();
мОтображатьСтруктурныеПодразделения = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений();