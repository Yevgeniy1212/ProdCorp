////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Формирует запрос по документу
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросДляПечати()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("НачалоМесяца",  НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка",        Ссылка);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР КОГДА (ФИОФизЛицСрезПоследних.Фамилия) ЕСТЬ NULL  ТОГДА ЗарплатаКВыплатеЗарплата.Физлицо.Наименование ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество КОНЕЦ КАК ФизЛицо,
	|	ЗарплатаКВыплатеЗарплата.Сумма,
	|	ВзаиморасчетыДатаДокумента.СуммаУпрОстаток КАК СуммаНаДатуДокумента,
	|	ВзаиморасчетыНачалоМесяца.СуммаУпрОстаток КАК СуммаНаНачалоМесяца,
	|	ЗарплатаКВыплатеЗарплата.НомерСтроки КАК НомерПП
	|ИЗ
	|	Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплатеЗарплата
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, Физлицо в (ВЫБРАТЬ РАЗЛИЧНЫЕ	ЗарплатаКВыплатеЗарплата.Физлицо ИЗ Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплатеЗарплата ГДЕ ЗарплатаКВыплатеЗарплата.Ссылка = &Ссылка)) КАК ФИОФизЛицСрезПоследних
	|		ПО ЗарплатаКВыплатеЗарплата.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСРаботниками.Остатки(&НачалоМесяца, Физлицо в (ВЫБРАТЬ РАЗЛИЧНЫЕ	ЗарплатаКВыплатеЗарплата.Физлицо ИЗ Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплатеЗарплата ГДЕ ЗарплатаКВыплатеЗарплата.Ссылка = &Ссылка)) КАК ВзаиморасчетыНачалоМесяца
	|		ПО ЗарплатаКВыплатеЗарплата.Физлицо = ВзаиморасчетыНачалоМесяца.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСРаботниками.Остатки(&ДатаДокумента, Физлицо в (ВЫБРАТЬ РАЗЛИЧНЫЕ	ЗарплатаКВыплатеЗарплата.Физлицо ИЗ Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплатеЗарплата ГДЕ ЗарплатаКВыплатеЗарплата.Ссылка = &Ссылка)) КАК ВзаиморасчетыДатаДокумента
	|		ПО ЗарплатаКВыплатеЗарплата.Физлицо = ВзаиморасчетыДатаДокумента.Физлицо
	|
	|ГДЕ
	|	ЗарплатаКВыплатеЗарплата.Ссылка = &Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

Процедура Автозаполнение() Экспорт
	
	Зарплата.Очистить();
	
	// ДанныеУпрУчета
	//	Поля:
	//		СтатьяЗатрат           	- статья затрат управленческго учета
	//		НоменклатурнаяГруппа	- номенклатурная группа управленческго учета
	//		Подразделение
	//		Результат
	//
	//	Описание:
	//	Содержит данные для отражения начисленй в упр. учете	
	
	ДанныеУпрУчетаТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Взаиморасчеты.Физлицо,
	|	Взаиморасчеты.СуммаУпрОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСРаботниками.Остатки(&парамДата) КАК Взаиморасчеты
	|
	|ГДЕ
	|	(Взаиморасчеты.СуммаУпрОстаток > 0)";
	
	Запрос = Новый Запрос(ДанныеУпрУчетаТекст);
	
	Запрос.УстановитьПараметр("парамДата", Новый Граница(Дата, ВидГраницы.Включая));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Строка = Зарплата.Добавить();
		
		Строка.Физлицо = Выборка.Физлицо;
		Строка.Сумма = Выборка.Сумма;
		
	КонецЦикла;
	
	
КонецПроцедуры //  Автозаполнение

#Если Клиент Тогда

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	// Получить экземпляр документа на печать
	Если ИмяМакета = "Печать" Тогда

		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗарплатаКВыплате_Печать";
		
		// получаем данные для печати
		Выборка = СформироватьЗапросДляПечати().Выбрать();
		
		// получаем макет
		Макет = ПолучитьМакет("Макет");
		
		// выводим шапку документа
		ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); 
		ОбластьМакетаШапка.Параметры.НачалоМесяца  = НачалоМесяца(Ссылка.Дата);
		ОбластьМакетаШапка.Параметры.ДатаДокумента = Ссылка.Дата;
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаРаботника"); // строка работника
		
		СуммаНаНачалоМесяца = 0;
		СуммаНаДатуДокумента = 0;
		Сумма = 0;
		
		// выводим данные
		Пока Выборка.Следующий() Цикл
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ТабДокумент.Вывести(ОбластьМакета);
			
			// копим итоги 
			СуммаНаНачалоМесяца = СуммаНаНачалоМесяца + ?(Выборка.СуммаНаНачалоМесяца <> NULL, Выборка.СуммаНаНачалоМесяца, 0);
			СуммаНаДатуДокумента = СуммаНаДатуДокумента + ?(Выборка.СуммаНаДатуДокумента <> NULL, Выборка.СуммаНаДатуДокумента, 0);
			Сумма = Сумма + ?(Выборка.Сумма <> NULL, Выборка.Сумма, 0);
		КонецЦикла;
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Параметры.СуммаНаНачалоМесяца = СуммаНаНачалоМесяца;
		ОбластьПодвал.Параметры.СуммаНаДатуДокумента = СуммаНаДатуДокумента;
		ОбластьПодвал.Параметры.Сумма = Сумма;
		
		ТабДокумент.Вывести(ОбластьПодвал);
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект,"Зарплата к выплате "));

КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("Печать","Ведомость");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(Зарплата);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "ФизЛицо");

КонецПроцедуры
