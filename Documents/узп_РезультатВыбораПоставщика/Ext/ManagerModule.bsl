#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать. Начало 

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// анализ подбора поставщиков
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АнализПодбора";
	КомандаПечати.Представление = НСтр("ru = 'Анализ подбора поставщика'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
	Возврат;	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АнализПодбора") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АнализПодбора",
			НСтр("ru = 'Анализ подбора поставщика'"),
			ПечатьАнализПодбора(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.узп_РезультатВыбораПоставщика.ПФ_MXL_АналитикаВыбораПоставщика");
	КонецЕсли;
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
КонецПроцедуры

//Функция ПечатьОтчета(АналитикаПодбора, ИспользоватьХарактеристики) Экспорт
Функция ПечатьАнализПодбора(МассивОбъектов, ОбъектыПечати) Экспорт	
	ИспользоватьХарактеристики = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("узп_ИспользоватьХарактеристикиНоменклатурыПриПланированииЗакупок");
	ИспользоватьПроекты = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("узп_ВестиУчетЗакупокПоПроектам");
	
	Макет = Документы.узп_РезультатВыбораПоставщика.ПолучитьМакет("ПФ_MXL_АналитикаВыбораПоставщика");
	
	Для Каждого Объект Из МассивОбъектов Цикл
		АналитикаПодбора = Объект.АналитикаПодбора;
		
		ТЧ = Новый ТабличныйДокумент;
		ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		ТЧ.Вывести(ОбластьПустаяСтрока);
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.Заголовок = Объект.Ссылка;
		ТЧ.Вывести(ОбластьШапка);
		//ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		ТЧ.Вывести(ОбластьПустаяСтрока);
		//получить список критериев оценки для заполнения по колонкам
		КритерииОценки = АналитикаПодбора.Выгрузить();
		КритерииОценки.Свернуть("Критерий");
		КритерииОценки = КритерииОценки.ВыгрузитьКолонку("Критерий");
		ОбластьШапкаНачало = Макет.ПолучитьОбласть("ШапкаНачало");
		ТЧ.Вывести(ОбластьШапкаНачало);
		Для Каждого Критерий Из КритерииОценки Цикл
			ОбластьШапкаКритерий = Макет.ПолучитьОбласть("ШапкаКритерийПриоритет");
			ОбластьШапкаКритерий.Параметры["Критерий"] = Критерий;
			ТЧ.Присоединить(ОбластьШапкаКритерий);
		КонецЦикла;
		ОбластьШапкаИтого = Макет.ПолучитьОбласть("ШапкаИтого");
		ТЧ.Присоединить(ОбластьШапкаИтого);
		
		Если ИспользоватьХарактеристики Тогда 
			СписокНоменклатуры = АналитикаПодбора.Выгрузить();
			СписокНоменклатуры.Свернуть("Номенклатура,Характеристика");
			СписокНоменклатуры.Сортировать("Номенклатура,Характеристика");
			ТаблицаПодбораПоставщиков = АналитикаПодбора.Выгрузить();
			ТаблицаПодбораПоставщиков.Свернуть("Номенклатура,Характеристика,Контрагент");
			ТаблицаПодбораПоставщиков.Сортировать("Номенклатура,Характеристика,Контрагент");
		Иначе
			СписокНоменклатуры = АналитикаПодбора.Выгрузить();
			СписокНоменклатуры.Свернуть("Номенклатура");
			СписокНоменклатуры.Сортировать("Номенклатура");
			ТаблицаПодбораПоставщиков = АналитикаПодбора.Выгрузить();
			ТаблицаПодбораПоставщиков.Свернуть("Номенклатура,Контрагент");
			ТаблицаПодбораПоставщиков.Сортировать("Номенклатура,Контрагент");
		КонецЕсли;
		
		Для Каждого СтрокаТЧ Из СписокНоменклатуры Цикл
			ПерваяСтрока = Истина;
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаНачало");
			ОбластьСтрока.Параметры["Номенклатура"] = СтрокаТЧ.Номенклатура;
			Если ИспользоватьХарактеристики Тогда 
				ОбластьСтрока.Параметры["Характеристика"] = СтрокаТЧ.Характеристика;
			КонецЕсли;
			ТЧ.Вывести(ОбластьСтрока);
			Если ИспользоватьХарактеристики Тогда 
				ПараметрыПоиска = Новый Структура("Номенклатура, Характеристика",СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика);
			Иначе
				ПараметрыПоиска = Новый Структура("Номенклатура",СтрокаТЧ.Номенклатура);
			КонецЕсли;
			
			НайденныеПоставщики = ТаблицаПодбораПоставщиков.НайтиСтроки(ПараметрыПоиска);
			Для Каждого Критерий Из КритерииОценки Цикл
				ОбластьСтрокаКритерийПриоритет = Макет.ПолучитьОбласть("СтрокаБаллПриоритетПустой");
				ТЧ.Присоединить(ОбластьСтрокаКритерийПриоритет);
			КонецЦикла;
			ОбластьИтого = Макет.ПолучитьОбласть("СтрокаИтого");
			ТЧ.Присоединить(ОбластьИтого);
			Для Каждого НайденныйПоставщик Из НайденныеПоставщики Цикл
				Итого = 0;
				ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаНоменклатураПустой");
				ТЧ.Вывести(ОбластьСтрока);
				ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаКонтрагент");
				ОбластьСтрока.Параметры["Контрагент"] = НайденныйПоставщик.Контрагент;
				ТЧ.Присоединить(ОбластьСтрока);
				Для Каждого Критерий Из КритерииОценки Цикл
					ОбластьСтрокаКритерийПриоритет = Макет.ПолучитьОбласть("СтрокаБаллПриоритет");
					Если ИспользоватьХарактеристики Тогда
						ПараметрыПоиска = Новый Структура("Номенклатура,Характеристика,Контрагент,Критерий", СтрокаТЧ.Номенклатура,СтрокаТЧ.Характеристика,НайденныйПоставщик.Контрагент,Критерий);
					Иначе
						ПараметрыПоиска = Новый Структура("Номенклатура,Контрагент,Критерий", СтрокаТЧ.Номенклатура,НайденныйПоставщик.Контрагент,Критерий);
					КонецЕсли;
					НайденныеОценки = АналитикаПодбора.НайтиСтроки(ПараметрыПоиска);
					Для Каждого НайденнаяОценка Из НайденныеОценки Цикл
						ОбластьСтрокаКритерийПриоритет.Параметры["Балл"] = ?(НайденнаяОценка.Балл = 0, "Х", НайденнаяОценка.Балл);
						ОбластьСтрокаКритерийПриоритет.Параметры["Приоритет"] = НайденнаяОценка.Приоритет;
						ИтоговыйБалл = (НайденнаяОценка.Балл * НайденнаяОценка.Приоритет / 100) ;
						ОбластьСтрокаКритерийПриоритет.Параметры["ИтоговыйБалл"] = ИтоговыйБалл;
						Итого = Итого + ИтоговыйБалл;
					КонецЦикла;
					ТЧ.Присоединить(ОбластьСтрокаКритерийПриоритет);
				КонецЦикла;
				ОбластьИтого = Макет.ПолучитьОбласть("СтрокаИтого");
				ОбластьИтого.Параметры["Итого"] = Итого;
				ТЧ.Присоединить(ОбластьИтого);
			КонецЦикла;
		КонецЦикла;
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаНоменклатураКонец");
		ТЧ.Вывести(ОбластьСтрока);
		
	КонецЦикла;

	Возврат ТЧ;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ДополнительныеПараметрыЗапросов = Новый Структура();
		
	ДополнительныеЗапросы = Новый Массив;
		
	ПараметрыПроведения = фин_УправлениеПроведениемДокументовСервер.ПодготовитьПараметрыПроведения(ДокументСсылка,Отказ,Истина,Истина,,,,,ДополнительныеПараметрыЗапросов,ДополнительныеЗапросы);
	
	Возврат ПараметрыПроведения;

КонецФункции 

#КонецЕсли




