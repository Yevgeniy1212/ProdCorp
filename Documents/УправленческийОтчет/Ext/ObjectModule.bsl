////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит признак скопированной формы.
Перем мСкопированаФорма Экспорт;

// Хранит таблицу значений - состав показателей отчета.
Перем мТаблицаСоставПоказателей Экспорт;

// Хранит структуру многостраничных разделов.
Перем мСтруктураМногостраничныхРазделов Экспорт;

// Хранит структуру - состав показателей отчета,
// значение которых автоматически заполняется по учетным данным.
Перем мСтруктураВариантыЗаполнения Экспорт;

// Хранит дерево значений - структуру листов отчета.
Перем мДеревоСтраницОтчета Экспорт;


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	КонецЕсли;
	
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	//так как нет печатных форм у документа, по умолчанию
	//ТабДокумент = Неопределено
	ТабДокумент = Неопределено;
	
	Если ТабДокумент = Неопределено Тогда
		Возврат;
	КонецЕсли;  

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект));

КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура();

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ОБЪЕКТА

// Процедура - обработчик события ПриКопировании формы.
//
Процедура ПриКопировании(ОбъектКопирования)

	// Храним информацию о выбранной форме объекта копирования.
	// Она нужна для дальнейшего принятия решения - новый документ создаем
	// с сохранением или с очисткой данных объекта копирования.
	мСкопированаФорма = ОбъектКопирования.ВыбраннаяФорма;
	
КонецПроцедуры // ПриКопировании()

Функция ПолучитьПрефиксДокументаОтчета() Экспорт
	
	Префикс = ?(НЕ ЗначениеЗаполнено(ЭтотОбъект.Организация.Префикс),"00",ЭтотОбъект.Организация.Префикс);
	
	Если ПараметрыСеанса.ИспользованиеРИБ Тогда
		ПрефиксУзла = ПараметрыСеанса.ПрефиксУзлаРаспределеннойИнформационнойБазы;
		Префикс = ПрефиксУзла + Префикс;
	КонецЕсли;
				
	ЭлементСправочника = Справочники.РегламентированныеОтчеты.НайтиПоРеквизиту("ИсточникОтчета", СокрЛП(ЭтотОбъект.ИсточникОтчета));
		Если ЭлементСправочника <> Неопределено Тогда
			Префикс = Префикс + ?(НЕ ЗначениеЗаполнено(ЭлементСправочника.ПрефиксОтчета), "00",ЭлементСправочника.ПрефиксОтчета);
		КонецЕсли;
	
	Возврат Префикс;
КонецФункции

Процедура УстановитьНомерДокументаОтчета() Экспорт

	// Если  нет реквизита "Организация" или для нее не задан префикс, то 
	// используем пустой префикс,
	// иначе используем префикс организации.
	
	ЭтотОбъект.УстановитьНовыйНомер(ПолучитьПрефиксДокументаОтчета());
	
КонецПроцедуры // ОбщегоНазначения.УстановитьНомерДокумента()

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьНомерДокументаОтчета();
	
КонецПроцедуры
