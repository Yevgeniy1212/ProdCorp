#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Добавляет в табличную часть заявки, по которым есть остатки в регистрах
// "ЗаявкиНаРасходованиеСредств" и (или) в регистре "ДенежныеСредстваВРезерве"
//
Процедура ЗаполнитьЗаявкиПоОстаткам(Объект, МассивЗаявок = "") Экспорт
	
	Запрос = СформироватьЗапросПолученияОстатков(Объект, МассивЗаявок);
	
	ЗаявкиНаРасходованиеСредств = Объект.ЗаявкиНаРасходованиеСредств;
	ДокументОснование = Объект.ДокументОснование;
	
	Если ЗначениеЗаполнено(Запрос.Текст) Тогда 
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ЗаявкиНаРасходованиеСредств.Добавить();
			НоваяСтрока.Заявка = Выборка.Заявка;
			НоваяСтрока.ВалютаЗаявка = Выборка.ВалютаЗаявка;
			НоваяСтрока.ОстатокЗаявка = Выборка.ОстатокЗаявка;
			НоваяСтрока.ОстатокРезерв = Выборка.ОстатокРезерв;
			НоваяСтрока.ОстатокРазмещение = Выборка.ОстатокРазмещение;
			НоваяСтрока.Контрагент = Выборка.Контрагент;
			НоваяСтрока.Ответственный = Выборка.Ответственный;
			Если Выборка.Заявка.ВидОперации = Перечисления.ден_ВидыОперацийЗаявкиНаРасходование.ВыдачаДенежныхСредствПодотчетнику 
				ИЛИ Выборка.Заявка.ВидОперации = Перечисления.ден_ВидыОперацийЗаявкиНаРасходование.РасчетыПоКредитамИЗаймамСРаботниками Тогда
				НоваяСтрока.Контрагент = Выборка.Заявка.Получатель;
			КонецЕсли;
			Если ЗначениеЗаполнено(ДокументОснование) И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ден_ПланПлатежей") Тогда
				СтрокаЗаявка = ДокументОснование.Платежи.НайтиСтроки(Новый Структура("ЗРС", Выборка.Заявка));
				Если СтрокаЗаявка.Количество() > 0 Тогда
					СуммаПринятая = СтрокаЗаявка[0].Сумма;
					НоваяСтрока.ОстатокЗаявка = Мин(Выборка.ОстатокЗаявка, Выборка.Заявка.СуммаДокумента - СуммаПринятая);
					КСписаниюПоРезервамИРазмещениям = НоваяСтрока.ОстатокРазмещение + НоваяСтрока.ОстатокРезерв;
					КСписаниюПоРезервамИРазмещениям = ?(КСписаниюПоРезервамИРазмещениям>СуммаПринятая, КСписаниюПоРезервамИРазмещениям-СуммаПринятая,0);
					НоваяСтрока.ОстатокРазмещение = Мин(КСписаниюПоРезервамИРазмещениям, НоваяСтрока.ОстатокРазмещение);
					НоваяСтрока.ОстатокРезерв = Мин(НоваяСтрока.ОстатокРезерв, КСписаниюПоРезервамИРазмещениям-НоваяСтрока.ОстатокРазмещение);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла; 
	Иначе 
		ТекстСообщения = "Недостаточно параметров для формирования запроса:" + Символы.ПС + "- необходимо заполнить хотя бы один из параметров отбора по реквизитам: дату расхода, контрагента и т.д.";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект.Ссылка);
	КонецЕсли;
		
КонецПроцедуры // ЗаполнитьЗаявкиПоОстаткам

// Создает запрос для получения остатков по регистрам "ЗаявкиНаРасходованиеСредств"
// и "ДенежныеСредстваВРезерве"
//
Функция СформироватьЗапросПолученияОстатков(Объект, Заявка = "") Экспорт
	
	ЦФО = Объект.ЦФО;
	Контрагент = Объект.Контрагент;
	ОтборДатаНач = Объект.ОтборДатаНач;
	ОтборДатаКон = Объект.ОтборДатаКон;
	
	Запрос = Новый Запрос;
	СтруктураПараметров = Новый Структура;
	
	ТекстОтбора = "";
	
	Если Заявка = "" Тогда // Формируем запрос для заполнения ТЧ
		
		Если Объект.ОтборЦФО Тогда
			
			Если ЦФО.Пустая() Тогда
				ТекстОтбора = ТекстОтбора + "
				|И (##.ЦФО = &ЦФО)";
			Иначе
				ТекстОтбора = ТекстОтбора + "
				|И (##.ЦФО В ИЕРАРХИИ (&ЦФО))";
			КонецЕсли;
			
			СтруктураПараметров.Вставить("ЦФО", ЦФО);
			
		КонецЕсли;
				
		Если Объект.ОтборКонтрагент Тогда
			
			Если Контрагент.Пустая() Тогда
				ТекстОтбора = ТекстОтбора + "
				|И (##.Контрагент = &Контрагент)";
			Иначе
				ТекстОтбора = ТекстОтбора + "
				|И (##.Контрагент В ИЕРАРХИИ (&Контрагент))";
			КонецЕсли;
			
			СтруктураПараметров.Вставить("Контрагент", Контрагент);
			
		КонецЕсли;
				
		Если Объект.ОтборОтветственный Тогда
			
			Если Объект.Ответственный.Пустая() Тогда
				ТекстОтбора = ТекстОтбора + "
				|И (##.Ответственный = &Ответственный)";
			Иначе
				ТекстОтбора = ТекстОтбора + "
				|И (##.Ответственный В ИЕРАРХИИ (&Ответственный))";
			КонецЕсли;
			
			СтруктураПараметров.Вставить("Ответственный", Объект.ОтветственныйЗаявка);
			
		КонецЕсли;
		
		Если НЕ (ОтборДатаНач = '00010101' ИЛИ ОтборДатаКон = '00010101') Тогда
			
			ТекстОтбора = ТекстОтбора + "
			|И (##.ДатаРасхода МЕЖДУ &ДатаНач И &ДатаКон)";
			
			СтруктураПараметров.Вставить("ДатаНач", НачалоДня(ОтборДатаНач));
			СтруктураПараметров.Вставить("ДатаКон", КонецДня(ОтборДатаКон));
			
		ИначеЕсли НЕ ОтборДатаНач = '00010101' Тогда
			
			ТекстОтбора = ТекстОтбора + "
			|И (##.ДатаРасхода >= &ДатаНач)";
			
			СтруктураПараметров.Вставить("ДатаНач", НачалоДня(ОтборДатаНач));
			
		ИначеЕсли НЕ ОтборДатаКон = '00010101' Тогда
			
			ТекстОтбора = ТекстОтбора + "
			|И (##.ДатаРасхода <= &ДатаКон)";
			
			СтруктураПараметров.Вставить("ДатаКон", КонецДня(ОтборДатаКон));
			
		КонецЕсли;

		ТекстОтбора = ТекстОтбора+"
		|И (##.Организация = &Организация)";
		СтруктураПараметров.Вставить("Организация", Объект.Организация);
		
		ТекстОтбора = ТекстОтбора + "
		|И (##.СтруктурноеПодразделение = &СтруктурноеПодразделение)";
		СтруктураПараметров.Вставить("СтруктурноеПодразделение", Объект.СтруктурноеПодразделение);
			
		ТекстОтбора = Сред(ТекстОтбора, 4);
	ИначеЕсли ТипЗнч(Заявка) = Тип("Массив") Тогда
		
		ТекстОтбора = "## В (&Заявка)";
		СтруктураПараметров.Вставить("Заявка", Заявка);
		
	Иначе // Формируем запрос по конкретной заявке
		
		ТекстОтбора = "##=&Заявка";
		СтруктураПараметров.Вставить("Заявка", Заявка);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОтбора) Тогда 
		
		ТекстОтбораЗаявок = "ЗаявкаНаРасходование В (ВЫБРАТЬ Ссылка ИЗ Документ.ден_ЗаявкаНаРасходованиеСредств ГДЕ "+ТекстОтбора+")";
	
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаявкиОстаток.Заявка КАК Заявка,
		|	СУММА(ЗаявкиОстаток.СуммаЗаявкиОстаток) КАК ОстатокЗаявка,
		|	СУММА(ЗаявкиОстаток.СуммаРезерваОстаток) КАК ОстатокРезерв,
		|	СУММА(ЗаявкиОстаток.СуммаРазмещенияОстаток) КАК ОстатокРазмещение,
		|	ЗаявкиОстаток.Заявка.Ответственный КАК Ответственный,
		|	ЗаявкиОстаток.Заявка.ВалютаДокумента КАК ВалютаЗаявка,
		|	ЗаявкиОстаток.Заявка.Контрагент КАК Контрагент
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование КАК Заявка,
		|		ЗаявкиНаРасходованиеСредствОстатки.СуммаОстаток КАК СуммаЗаявкиОстаток,
		|		ЗаявкиНаРасходованиеСредствОстатки.СуммаУпрОстаток КАК СуммаУпрЗаявкиОстаток,
		|		ЗаявкиНаРасходованиеСредствОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовЗаявкиОстаток,
		|		0 КАК СуммаРезерваОстаток,
		|       0 КАК СуммаРазмещенияОстаток
		|	ИЗ
		|		РегистрНакопления.ден_ЗаявкиНаРасходованиеСредств.Остатки("+?(ЗначениеЗаполнено(Объект.ДокументОснование) И ТипЗнч(Объект.ДокументОснование)=Тип("ДокументСсылка.ден_ПланПлатежей"),"","&МоментДокумента")+","+СтрЗаменить(ТекстОтбораЗаявок,"##","Ссылка")+" ) КАК ЗаявкиНаРасходованиеСредствОстатки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДенежныеСредстваВРезервеОстатки.ДокументРезервирования,
		|		0,
		|		0,
		|		0,
		|		ДенежныеСредстваВРезервеОстатки.СуммаОстаток,
		|		0
		|	ИЗ
		|		РегистрНакопления.ден_ДенежныеСредстваВРезерве.Остатки("+?(ЗначениеЗаполнено(Объект.ДокументОснование) И ТипЗнч(Объект.ДокументОснование)=Тип("ДокументСсылка.ден_ПланПлатежей"),"","&МоментДокумента")+","+СтрЗаменить(ТекстОтбора,"##","ДокументРезервирования")+" ) КАК ДенежныеСредстваВРезервеОстатки
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|		
		|	ВЫБРАТЬ
		|		РазмещениеЗаявокНаРасходованиеСредствОстатки.ДокументРезервирования,
		|		0,
		|		0,
		|		0,
		|		0,
		|		РазмещениеЗаявокНаРасходованиеСредствОстатки.СуммаОстаток
		|	ИЗ
		|		РегистрНакопления.ден_РазмещениеЗаявокНаРасходованиеСредств.Остатки(,"+СтрЗаменить(ТекстОтбора,"##","ДокументРезервирования")+" ) КАК РазмещениеЗаявокНаРасходованиеСредствОстатки) КАК ЗаявкиОстаток
		|  	
		|СГРУППИРОВАТЬ ПО
		|	ЗаявкиОстаток.Заявка";
		
		Для Каждого Параметр Из СтруктураПараметров Цикл
			Запрос.УстановитьПараметр(Параметр.Ключ,Параметр.Значение);
		КонецЦикла;
	
		Если Объект.Ссылка.Пустая() Тогда
			МоментДокумента = Объект.Дата;
		Иначе
			МоментДокумента = Объект.Ссылка.МоментВремени();
		КонецЕсли;
		Запрос.УстановитьПараметр("МоментДокумента", МоментДокумента);

	КонецЕсли;
	
	Возврат Запрос;
	
КонецФункции // СформироватьЗапросПолученияОстатков()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Заполнение

Процедура ЗаполнитьПоДокументуОснованию(Объект, ДокументОснование) Экспорт
	
	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(Объект, ДокументОснование);
	
	Объект.ДокументОснование = ДокументОснование;
	
	ЗаявкиНаРасходованиеСредств = Объект.ЗаявкиНаРасходованиеСредств;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ден_ПланПлатежей") Тогда
		
		ЗначенияРеквизитов = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ДокументОснование, "Дата, Организация, СтруктурноеПодразделение"); 
		
		Объект.Дата = ЗначенияРеквизитов.Дата + 1;
		Объект.Организация = ЗначенияРеквизитов.Организация;
		Объект.СтруктурноеПодразделение = ЗначенияРеквизитов.СтруктурноеПодразделение;
		ЗаполнитьЗаявкиПоОстаткам(Объект, ДокументОснование.Платежи.ВыгрузитьКолонку("ЗРС"));
		
		Для Каждого СтрокаЗаявка Из ЗаявкиНаРасходованиеСредств.НайтиСтроки(Новый Структура("ОстатокЗаявка,ОстатокРезерв,ОстатокРазмещение",0,0,0)) Цикл
			ЗаявкиНаРасходованиеСредств.Удалить(СтрокаЗаявка);
		КонецЦикла;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Состояние) Тогда
		Объект.Состояние = Перечисления.СостоянияОбъектов.Подготовлен;
	КонецЕсли;
	
КонецПроцедуры   

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт 
	
	ПереопределяемыеТаблицы = Новый Массив;
	ПереопределяемыеТаблицы.Добавить("ЗаявкиНаРасходованиеСредств");
	
	ДополнительныеЗапросы = Новый Массив;
	ДополнительныеЗапросы.Добавить("ЗаявкиНаРасходованиеСредствОстатки");  
	ДополнительныеЗапросы.Добавить("ДенежныеСредстваВРезервеОстатки");
	ДополнительныеЗапросы.Добавить("РазмещениеЗаявокНаРасходованиеСредствОстатки");
	ДополнительныеЗапросы.Добавить("ЗаявкиНаРасходованиеСредствИсходныеДанные");
	
	ДополнительныеПараметрыЗапросов = Новый Структура;
	ДополнительныеПараметрыЗапросов.Вставить("Дата", фин_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(ДокументСсылка, "Дата"));
	ДополнительныеПараметрыЗапросов.Вставить("МоментВремени", ДокументСсылка.МоментВремени());
	ДополнительныеПараметрыЗапросов.Вставить("ВалютаУпр", фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета"));
	
	ПараметрыПроведения = фин_УправлениеПроведениемДокументовСервер.ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ,,,,,,ПереопределяемыеТаблицы,ДополнительныеПараметрыЗапросов,ДополнительныеЗапросы);
	
	Возврат ПараметрыПроведения;
	
КонецФункции

// Возвращает текст запроса, переопределяющий получение ТЧ ЗаявкиНаРасходованиеСредств
//
Функция ТекстЗапросаЗаявкиНаРасходованиеСредств(НомераТаблиц, ПараметрыПроведения, Реквизиты) Экспорт
	
	НомераТаблиц.Вставить("ВТ_ЗаявкиКЗакрытию", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаявкиКЗакрытию.Заявка КАК Заявка,
	|	ЗаявкиКЗакрытию.Заявка.ВидОперации КАК ВидОперации,
	|	ЗаявкиКЗакрытию.Заявка.ВключатьВПлатежныйКалендарь КАК ВключатьВПлатежныйКалендарь,
	|	ЗаявкиКЗакрытию.ОстатокЗаявка,
	|	ЗаявкиКЗакрытию.ОстатокРезерв,
	|	ЗаявкиКЗакрытию.ОстатокРазмещение,
	|	ВЫБОР
	|		КОГДА ЗаявкиКЗакрытию.ВалютаЗаявка = &ВалютаУпр
	|			ТОГДА ЗаявкиКЗакрытию.ОстатокЗаявка
	|		КОГДА ЕСТЬNULL(КурсыУпр.Курс, 0) = 0
	|				ИЛИ ЕСТЬNULL(КурсыЗаявки.Кратность, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЗаявкиКЗакрытию.ОстатокЗаявка * КурсыЗаявки.Курс * КурсыУпр.Кратность / (КурсыУпр.Курс * КурсыЗаявки.Кратность)
	|	КОНЕЦ КАК СуммаУпр
	|ПОМЕСТИТЬ ЗаявкиКЗакрытию
	|ИЗ
	|	Документ.ден_ЗакрытиеЗаявокНаРасходованиеСредств.ЗаявкиНаРасходованиеСредств КАК ЗаявкиКЗакрытию
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыЗаявки
	|		ПО ЗаявкиКЗакрытию.ВалютаЗаявка = КурсыЗаявки.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &ВалютаУпр) КАК КурсыУпр
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ЗаявкиКЗакрытию.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();

КонецФункции

// Возвращает текст запроса, переопределяющий получение ТЧ ЗаявкиНаРасходованиеСредств
//
Функция ТекстЗапросаЗаявкиНаРасходованиеСредствИсходныеДанные(НомераТаблиц, ПараметрыПроведения, Реквизиты) Экспорт
	
	НомераТаблиц.Вставить("ЗаявкиНаРасходованиеСредствИсходныеДанные", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаявкиКЗакрытию.Заявка КАК Заявка,
	|	СУММА(ЗаявкиКЗакрытию.ОстатокЗаявка) КАК ОстатокЗаявка,
	|	СУММА(ЗаявкиКЗакрытию.ОстатокРезерв) КАК ОстатокРезерв,
	|	СУММА(ЗаявкиКЗакрытию.ОстатокРазмещение) КАК ОстатокРазмещение,
	|	СУММА(ЗаявкиКЗакрытию.СуммаУпр) КАК СуммаУпр
	|ИЗ
	|	ЗаявкиКЗакрытию КАК ЗаявкиКЗакрытию
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкиКЗакрытию.Заявка";
	
	Возврат ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаЗаявкиНаРасходованиеСредствОстатки(НомераТаблиц, ПараметрыПроведения, Реквизиты) Экспорт

	НомераТаблиц.Вставить("ТаблицаЗаявкиНаРасходованиеСредствОстатки", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаявкиКЗакрытию.Заявка КАК ЗаявкаНаРасходование,
	|	ЗаявкиКЗакрытию.ВидОперации КАК ВидОперации,
	|	ЗаявкиНаРасходованиеСредствОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЗаявкиНаРасходованиеСредствОстатки.Контрагент КАК Контрагент,
	|	ЗаявкиНаРасходованиеСредствОстатки.Организация КАК Организация,
	|	ЗаявкиНаРасходованиеСредствОстатки.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗаявкиНаРасходованиеСредствОстатки.Сделка КАК Сделка,
	|	ЗаявкиНаРасходованиеСредствОстатки.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ЗаявкиНаРасходованиеСредствОстатки.Проект КАК Проект,
	|	0 КАК СуммаВзаиморасчетов,
	|	ЗаявкиНаРасходованиеСредствОстатки.СуммаВзаиморасчетовОстаток,
	|	0 КАК СуммаУпр,
	|	ЗаявкиНаРасходованиеСредствОстатки.СуммаУпрОстаток,
	|	0 КАК Сумма,
	|	ЗаявкиНаРасходованиеСредствОстатки.СуммаОстаток
	|ИЗ
	|	РегистрНакопления.ден_ЗаявкиНаРасходованиеСредств.Остатки(&МоментВремени,
	|		ЗаявкаНаРасходование В (ВЫБРАТЬ РАЗЛИЧНЫЕ Заявка ИЗ ЗаявкиКЗакрытию)) КАК ЗаявкиНаРасходованиеСредствОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ЗаявкиКЗакрытию
	|		ПО ЗаявкиКЗакрытию.Заявка = ЗаявкиНаРасходованиеСредствОстатки.ЗаявкаНаРасходование
	|ГДЕ
	|	НЕ (ЗаявкиНаРасходованиеСредствОстатки.СуммаОстаток ЕСТЬ NULL
	|			ИЛИ ЗаявкиКЗакрытию.ОстатокЗаявка = 0) 
	|
	|ДЛЯ ИЗМЕНЕНИЯ
	|	РегистрНакопления.ден_ЗаявкиНаРасходованиеСредств.Остатки";
		
	Возврат ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаДенежныеСредстваВРезервеОстатки(НомераТаблиц, ПараметрыПроведения, Реквизиты) Экспорт

	НомераТаблиц.Вставить("ТаблицаДенежныеСредстваВРезервеОстатки", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДенежныеСредстваВРезервеОстатки.ДокументРезервирования КАК ДокументРезервирования,
	|	ДенежныеСредстваВРезервеОстатки.ВидДенежныхСредств КАК ВидДенежныхСредств,
	|	ДенежныеСредстваВРезервеОстатки.БанковскийСчетКасса КАК БанковскийСчетКасса,
	|	ДенежныеСредстваВРезервеОстатки.Организация КАК Организация,
	|	ДенежныеСредстваВРезервеОстатки.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗаявкиКЗакрытию.ОстатокРезерв КАК Сумма
	|ИЗ
	|	РегистрНакопления.ден_ДенежныеСредстваВРезерве.Остатки(&МоментВремени,
	|		ДокументРезервирования В (ВЫБРАТЬ РАЗЛИЧНЫЕ Заявка ИЗ ЗаявкиКЗакрытию)) КАК ДенежныеСредстваВРезервеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ЗаявкиКЗакрытию
	|		ПО ЗаявкиКЗакрытию.Заявка = ДенежныеСредстваВРезервеОстатки.ДокументРезервирования
	|ГДЕ
	|	НЕ (ДенежныеСредстваВРезервеОстатки.СуммаОстаток ЕСТЬ NULL ИЛИ ДенежныеСредстваВРезервеОстатки.СуммаОстаток = 0)
	|
	|ДЛЯ ИЗМЕНЕНИЯ
	|	РегистрНакопления.ден_ДенежныеСредстваВРезерве.Остатки";	
	
	Возврат ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаРазмещениеЗаявокНаРасходованиеСредствОстатки(НомераТаблиц, ПараметрыПроведения, Реквизиты) Экспорт

	НомераТаблиц.Вставить("ТаблицаРазмещениеЗаявокНаРасходованиеСредствОстатки", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РазмещениеЗаявокНаРасходованиеСредствОстатки.ДокументРезервирования КАК ДокументРезервирования,
	|	РазмещениеЗаявокНаРасходованиеСредствОстатки.ДокументПланирования КАК ДокументПланирования,
	|	ЗаявкиКЗакрытию.ОстатокРазмещение КАК Сумма
	|ИЗ
	|	РегистрНакопления.ден_РазмещениеЗаявокНаРасходованиеСредств.Остатки(&МоментВремени,
	|		ДокументРезервирования В (ВЫБРАТЬ РАЗЛИЧНЫЕ Заявка ИЗ ЗаявкиКЗакрытию)) КАК РазмещениеЗаявокНаРасходованиеСредствОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ЗаявкиКЗакрытию
	|		ПО ЗаявкиКЗакрытию.Заявка = РазмещениеЗаявокНаРасходованиеСредствОстатки.ДокументРезервирования
	|ГДЕ
	|	НЕ (РазмещениеЗаявокНаРасходованиеСредствОстатки.СуммаОстаток ЕСТЬ NULL ИЛИ РазмещениеЗаявокНаРасходованиеСредствОстатки.СуммаОстаток = 0)
	|
	|ДЛЯ ИЗМЕНЕНИЯ
	|	РегистрНакопления.ден_РазмещениеЗаявокНаРасходованиеСредств.Остатки";
	
	Возврат ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой Печать.

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
		
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подготовка табличных печатных документов.

#КонецЕсли