#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ДанныеЗаполнения <> Неопределено И ТипДанныхЗаполнения <> Тип("Структура") 
		И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		Документы.ден_ЗакрытиеЗаявокНаРасходованиеСредств.ЗаполнитьПоДокументуОснованию(ЭтотОбъект, ДанныеЗаполнения);
		Возврат;
	КонецЕсли;

	фин_ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, , , , , ДанныеЗаполнения);
	
	УстановитьВремя(РежимАвтоВремя.ТекущееИлиПоследним);
	
	Если Не ЗначениеЗаполнено(Состояние) Тогда
		Состояние = Перечисления.СостоянияОбъектов.Подготовлен;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	фин_ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.ден_ЗакрытиеЗаявокНаРасходованиеСредств.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗаявкиНаРасходованиеСредствИсходныеДанные = ПараметрыПроведения.ЗаявкиНаРасходованиеСредствИсходныеДанные;
	
	Для Каждого СтрокаЗаявок Из ЗаявкиНаРасходованиеСредствИсходныеДанные Цикл
		СтрокиЗакрытия = ПараметрыПроведения.ТаблицаЗаявкиНаРасходованиеСредствОстатки.НайтиСтроки(Новый Структура("ЗаявкаНаРасходование",СтрокаЗаявок.Заявка));
		БазаЗакрытия = ПараметрыПроведения.ТаблицаЗаявкиНаРасходованиеСредствОстатки.Скопировать(Новый Структура("ЗаявкаНаРасходование",СтрокаЗаявок.Заявка));
		Если БазаЗакрытия.Количество()=0 Тогда
			Продолжить;
		КонецЕсли;
		Сумма = СтрокаЗаявок.ОстатокЗаявка;
		СуммаУпр = ?(СтрокаЗаявок.ОстатокЗаявка =БазаЗакрытия.Итог("СуммаОстаток"),БазаЗакрытия.Итог("СуммаУпрОстаток"),СтрокаЗаявок.СуммаУпр); 
		СуммаВзаиморасчетов = ?(СтрокаЗаявок.ОстатокЗаявка =БазаЗакрытия.Итог("СуммаОстаток"),БазаЗакрытия.Итог("СуммаВзаиморасчетовОстаток"),?(БазаЗакрытия.Итог("СуммаОстаток")=0,0,БазаЗакрытия.Итог("СуммаВзаиморасчетовОстаток")*(СтрокаЗаявок.ОстатокЗаявка /БазаЗакрытия.Итог("СуммаОстаток"))));

		Если СтрокиЗакрытия.Количество()=1 Тогда
			СтрокиЗакрытия[0].Сумма = Сумма;
			СтрокиЗакрытия[0].СуммаУпр = СуммаУпр; 
			СтрокиЗакрытия[0].СуммаВзаиморасчетов = СуммаВзаиморасчетов;
		Иначе
			СтрокиУдалить = Новый Массив;
			Для Каждого СтрокаЗакрытия Из СтрокиЗакрытия Цикл
				СтрокаЗакрытия.Сумма = 				Мин(Сумма,СтрокаЗакрытия.СуммаОстаток);
				СтрокаЗакрытия.СуммаУпр = 			Мин(СуммаУпр,СтрокаЗакрытия.СуммаУпрОстаток); 
				СтрокаЗакрытия.СуммаВзаиморасчетов = Мин(СуммаВзаиморасчетов,СтрокаЗакрытия.СуммаВзаиморасчетовОстаток);
				Сумма 				= Сумма - СтрокаЗакрытия.Сумма;
				СуммаУпр 			= СуммаУпр - СтрокаЗакрытия.СуммаУпр;
				СуммаВзаиморасчетов = СуммаВзаиморасчетов - СтрокаЗакрытия.СуммаВзаиморасчетов;
				Если СтрокаЗакрытия.Сумма=0 И СтрокаЗакрытия.СуммаУпр=0 И СтрокаЗакрытия.СуммаВзаиморасчетов=0 Тогда
					СтрокиУдалить.Добавить(СтрокаЗакрытия);
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаЗакрытия Из СтрокиУдалить Цикл
			    ПараметрыПроведения.ТаблицаЗаявкиНаРасходованиеСредствОстатки.Удалить(СтрокаЗакрытия);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаЗаявкиНаРасходованиеСредствОстатки, Движения, Отказ, "ЗаявкиНаРасходованиеСредств",,, "ден_ЗаявкиНаРасходованиеСредств",, ВидДвиженияНакопления.Расход);
	фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаДенежныеСредстваВРезервеОстатки, Движения, Отказ, "ЗаявкиНаРасходованиеСредств",,, "ден_ДенежныеСредстваВРезерве",, ВидДвиженияНакопления.Расход);	
	фин_УправлениеПроведениемДокументовСервер.СформироватьДвиженияПоРегистрам(ПараметрыПроведения.Реквизиты, ПараметрыПроведения.ТаблицаРазмещениеЗаявокНаРасходованиеСредствОстатки, Движения, Отказ, "ЗаявкиНаРасходованиеСредств",,, "ден_РазмещениеЗаявокНаРасходованиеСредств",, ВидДвиженияНакопления.Расход);	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#КонецЕсли