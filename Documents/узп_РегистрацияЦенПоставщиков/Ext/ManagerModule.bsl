#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Возврат;	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Проведение

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ЕстьВзаиморасчеты = Ложь;
	
	ИмяОбъектаМетаданных = ДокументСсылка.Метаданные().Имя;
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",	Константы.ВалютаРегламентированногоУчета.Получить());

	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(ИмяОбъектаМетаданных,НомераТаблиц,Ложь);
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = фин_ОбщегоНазначенияСервер.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	Если Отказ Тогда
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Если Не ЕстьВзаиморасчеты Тогда
		Запрос.Текст = фин_УправлениеПроведениемДокументовСервер.ТекстЗапросаВременныеТаблицыДокумента(ИмяОбъектаМетаданных,НомераТаблиц, Реквизиты);
		Если НЕ ПустаяСтрока(Запрос.Текст) Тогда 
			Результат    = Запрос.ВыполнитьПакет();
		КонецЕсли;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = "";
					
	Для Каждого ТабличнаяЧасть Из Метаданные.Документы[ИмяОбъектаМетаданных].ТабличныеЧасти Цикл
		
		ИмяТЧ = ТабличнаяЧасть.Имя;
		
		Запрос.Текст = Запрос.Текст + ТекстЗапросаТабличнаяЧасть(ИмяОбъектаМетаданных,ИмяТЧ, НомераТаблиц, ПараметрыПроведения, Реквизиты);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("НеобходимостьОтраженияВНУ",	ЛОЖЬ);
	Запрос.УстановитьПараметр("ВедениеУчетаВременныхРазницБалансовымМетодом",	ЛОЖЬ);

	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда 
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПараметрыПроведения;

КонецФункции

//Текст запроса реквизиты документа
//
Функция ТекстЗапросаРеквизитыДокумента(ИмяОбъектаМетаданных,НомераТаблиц,ТребуютсяРегламентированныеПоказатели = Ложь) Экспорт
	
	НомераТаблиц.Вставить("ВременнаяТаблицаСоставДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	Если Метаданные.Документы[ИмяОбъектаМетаданных].ТабличныеЧасти.Количество()>0 Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|";
		Первая = Истина;
		Для Каждого ТабличнаяЧасть Из Метаданные.Документы[ИмяОбъектаМетаданных].ТабличныеЧасти Цикл
			
			ИмяТЧ = ТабличнаяЧасть.Имя;
			
			ТекстЗапроса = ТекстЗапроса + ?(Первая,"",",")+ "
			|	МАКСИМУМ(СоставДокумента.Есть"+ИмяТЧ+") КАК Есть"+ИмяТЧ;
			Первая = Ложь;
		КонецЦикла;
		
		ТекстЗапроса =  ТекстЗапроса + "
		|ПОМЕСТИТЬ СоставДокумента
		|ИЗ
		|	(";
		
		ПерваяТЧ = Истина;
		Для Каждого ТабличнаяЧасть Из Метаданные.Документы[ИмяОбъектаМетаданных].ТабличныеЧасти Цикл
			
			ИмяТЧ = ТабличнаяЧасть.Имя;
			
			ТекстЗапроса = ТекстЗапроса + ?(ПерваяТЧ,"","
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	") + "
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|";
			
			ПерваяТЧКор = Истина;
			Для Каждого ТабличнаяЧастьКорреспондирующая Из Метаданные.Документы[ИмяОбъектаМетаданных].ТабличныеЧасти Цикл
				
				ИмяТЧКор = ТабличнаяЧастьКорреспондирующая.Имя;
				ТекстЗапроса =  ТекстЗапроса + ?(ПерваяТЧКор,"",",") +"
				|		"+?(ИмяТЧ = ИмяТЧКор,"ИСТИНА","ЛОЖЬ")+" КАК Есть"+ИмяТЧКор;
				
				ПерваяТЧКор = Ложь;
			КонецЦикла;
			ТекстЗапроса =  ТекстЗапроса + "
			|	ИЗ
			|		Документ."+ИмяОбъектаМетаданных+"."+ИмяТЧ+" КАК ТаблицаДокумента
			|	ГДЕ
			|		ТаблицаДокумента.Ссылка = &Ссылка";
			
			ПерваяТЧ = Ложь;
		КонецЦикла;
		
		ТекстЗапроса =  ТекстЗапроса + "
		|) КАК СоставДокумента
		|;
		|";
	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	1 КАК Поле1
		|ПОМЕСТИТЬ СоставДокумента
		|;
		|";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса+"	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
//	|	Реквизиты.Организация КАК Организация,
	//|	Реквизиты.Организация КАК Налогоплательщик,
	//|	ВЫБОР
	//|		КОГДА Реквизиты.Организация.ГоловнаяОрганизация ЕСТЬ NULL 
	//|				ИЛИ Реквизиты.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	//|			ТОГДА Реквизиты.Организация
	//|		ИНАЧЕ Реквизиты.Организация.ГоловнаяОрганизация
	//|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	&ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета";
	Для Каждого Реквизит Из Метаданные.Документы[ИмяОбъектаМетаданных].Реквизиты Цикл
			
		ТекстЗапроса =  ТекстЗапроса + ",
		|	Реквизиты."+Реквизит.Имя+" КАК "+Реквизит.Имя;
	КонецЦикла;
	
	Если ТребуютсяРегламентированныеПоказатели Тогда
		ТекстЗапроса =  ТекстЗапроса + ",
		|	РеглПоказатели.РазмерМЗП,
		|	РеглПоказатели.РазмерМРП,
		|	РеглПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
		|	РеглПоказатели.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы,
		|	РеглПоказатели.РазмерМЗПДляЦелейНалогообложения,
		|	РеглПоказатели.РазмерМРПДляЦелейНалогообложения";
	КонецЕсли;
	
	ТекстЗапроса =  ТекстЗапроса + "
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ."+ИмяОбъектаМетаданных+" КАК Реквизиты";
	
	Если ТребуютсяРегламентированныеПоказатели Тогда
		ТекстЗапроса =  ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныеРасчетныеПоказатели.СрезПоследних(&ДатаРеглПоказателей,) КАК РеглПоказатели
		|		ПО ИСТИНА";
	КонецЕсли;
	
	ТекстЗапроса =  ТекстЗапроса + "
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Дата КАК Дата,
	//|	Реквизиты.Организация КАК Налогоплательщик,
	//|	ВЫБОР
	//|		КОГДА Реквизиты.Организация.ГоловнаяОрганизация ЕСТЬ NULL 
	//|				ИЛИ Реквизиты.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	//|			ТОГДА Реквизиты.Организация
	//|		ИНАЧЕ Реквизиты.Организация.ГоловнаяОрганизация
	//|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Реквизиты.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета";
	Для Каждого Реквизит Из Метаданные.Документы[ИмяОбъектаМетаданных].Реквизиты Цикл
			
		ТекстЗапроса =  ТекстЗапроса + ",
		|	Реквизиты."+Реквизит.Имя+" КАК "+Реквизит.Имя;
	КонецЦикла;
	Для Каждого ТабличнаяЧасть Из Метаданные.Документы[ИмяОбъектаМетаданных].ТабличныеЧасти Цикл
		
		ИмяТЧ = ТабличнаяЧасть.Имя;
		
		ТекстЗапроса = ТекстЗапроса + ",
		|	ЕСТЬNULL(СоставДокумента.Есть"+ИмяТЧ+", ЛОЖЬ) КАК Есть"+ИмяТЧ;
		
	КонецЦикла;
	Если ТребуютсяРегламентированныеПоказатели Тогда
		ТекстЗапроса =  ТекстЗапроса + ",
		|	Реквизиты.РазмерМЗП,
		|	Реквизиты.РазмерМРП,
		|	Реквизиты.РазмерНеоблагаемогоИПНДоходаИнвалидов1_2Группы,
		|	Реквизиты.РазмерНеоблагаемогоИПНДоходаИнвалидов3Группы,
		|	Реквизиты.РазмерМЗПДляЦелейНалогообложения,
		|	Реквизиты.РазмерМРПДляЦелейНалогообложения";
	КонецЕсли;
	ТекстЗапроса =  ТекстЗапроса + "
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоставДокумента КАК СоставДокумента
	|		ПО (ИСТИНА)";

	Возврат ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТабличнаяЧасть(ИмяОбъектаМетаданных,ИмяТЧ, НомераТаблиц,ПараметрыПроведения, Реквизиты)

	ТекстЗапроса = "";
	
	Если НЕ Реквизиты["Есть"+ИмяТЧ] Тогда
		ПараметрыПроведения.Вставить("Таблица"+ИмяТЧ, Неопределено);
	Иначе 
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	"+ИмяТЧ+".НомерСтроки КАК НомерСтроки";
		Для Каждого Реквизит Из Метаданные.Документы[ИмяОбъектаМетаданных].ТабличныеЧасти[ИмяТЧ].Реквизиты Цикл
			ТекстЗапроса = ТекстЗапроса+",
			|	"+ИмяТЧ+"."+Реквизит.Имя+" КАК "+Реквизит.Имя;
		КонецЦикла;
		ТекстЗапроса = ТекстЗапроса+"
		|ИЗ
		|	Документ."+ИмяОбъектаМетаданных+"."+ИмяТЧ+" КАК "+ИмяТЧ+"
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ "+ИмяТЧ+".Ссылка = &Ссылка"
		+ фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();
		
		НомераТаблиц.Вставить("Таблица"+ИмяТЧ, НомераТаблиц.Количество());
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;	
КонецФункции 

#КонецЕсли
