////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем мВидСубконтоРаботникиОрганизаций; // ссылка на предопределенный вид субконто РаботникиОрганизаций
Перем мВалютаРеглУчета; // ссылка на валюту регламентированного учета
Перем мПоддержкаРаботыСоСтруктурнымиПодразделениями Экспорт;
Перем мПромежуточнаяТаблица; // таблица значений, совпадающая по структуре с табличной частью документа
Перем мСтрокаРеквизитовГруппировки; // строка с перечнем колонок, по которым группировать данные в мПромежуточнаяТаблица
Перем мСоответствиеСчетаБУВлияющиеНаНалогооблагаемыйДоход; // соответствие для хранения счетов БУ, которые влияют на налогооблагаемый доход
Перем мВедениеУчетаВременныхРазницБалансовымМетодом Экспорт;
Перем мУчетнаяПолитикаПоБухгалтерскомуУчету Экспорт;
Перем мОтображатьСтруктурныеПодразделения Экспорт;
Перем мВедениеБухУчетаВРазрезеСП Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция подготавливает менеджер временных таблиц со списком физлиц-работников,
// числящихся в указанном подразделении на начало месяц либо принятых в подразделение в течение месяца.
//
Функция ПодготовитьМенеджерВременныхТаблицСоСпискомФизЛиц()
  	Если мОтображатьСтруктурныеПодразделения Тогда
		ПоверитьСписокФизЛиц();
	КонецЕсли;

	УсловиеНаПодразделение = "";
		
	Если ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		УсловиеНаПодразделение = "РаботникиОрганизации.ПодразделениеОрганизации В ИЕРАРХИИ (&парамПодразделение)";
	КонецЕсли;
		
	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Запрос.УстановитьПараметр("парамНачалоМесяца", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамКонецМесяца", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Принят", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	Запрос.УстановитьПараметр("Уволен", Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("парамВнутреннееСовместительство", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	Запрос.УстановитьПараметр("парамПодразделение", ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("парамПриход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамИсчисление", Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Ежемесячно", Перечисления.ХарактерВыплатыПоДоговору.Ежемесячно);
	
	ВТ_ОсновныеОрганизации = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                         |	РаботникиОрганизации.Сотрудник,
	                         |	РаботникиОрганизации.ОбособленноеПодразделение,
	                         |	СотрудникиОрганизаций.Физлицо
	                         |ПОМЕСТИТЬ ВТ_ОсновныеОрганизации
	                         |ИЗ
	                         |	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	                         |			&парамНачалоМесяца,
	                         |			Организация = &парамГоловнаяОрганизация
	                         |				И ОбособленноеПодразделение = &парамОрганизация
	                         |				И Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство) КАК РаботникиОрганизации
	                         |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	                         |		ПО РаботникиОрганизации.Сотрудник = СотрудникиОрганизаций.Ссылка
	                         |
	                         |;
	                         |
	                         |////////////////////////////////////////////////////////////////////////////////
	                         |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                         |	РаботникиОрганизации.Период,
	                         |	РаботникиОрганизации.Сотрудник,
	                         |	РаботникиОрганизации.ОбособленноеПодразделение
	                         |ПОМЕСТИТЬ ВТ_ОсновныеОрганизацииДвижения
	                         |ИЗ
	                         |	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	                         |ГДЕ
	                         |	РаботникиОрганизации.Период > &парамНачалоМесяца
	                         |	И РаботникиОрганизации.Период <= &парамКонецМесяца
	                         |	И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
	                         |	И РаботникиОрганизации.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
							 |;";
	
	//СписокРаботниковТекст
	//Описание:
	//	Выбирает список работников, отвечающих условиям отбора, числящихся на начало месяца и принятых за месяц,
	//  а также переведенных в середине месяца из других обособленных подразделений
	СписокРаботниковТекст = "
	|		// срез работников на начало месяца
	|		ВЫБРАТЬ
	|			РаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо
	|		ИЗ
	|			(ВЫБРАТЬ
	|				РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|				МАКСИМУМ(ВЫБОР
	|							КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Уволен
	|								ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
	|							ИНАЧЕ РаботникиОрганизации.Период
	|						КОНЕЦ) КАК Период
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|						&парамНачалоМесяца, 
	|						Организация = &парамГоловнаяОрганизация) КАК РаботникиОрганизации
	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеОрганизации КАК ВТ_ОсновныеОрганизации
	|					ПО РаботникиОрганизации.Сотрудник.ФизЛицо = ВТ_ОсновныеОрганизации.ФизЛицо
//	|					ПО РаботникиОрганизации.Сотрудник = ВТ_ОсновныеОрганизации.Сотрудник
	|			ГДЕ
	|				РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|				И ВЫБОР 
	|					КОГДА РаботникиОрганизации.ОбособленноеПодразделение = ЕСТЬNULL(ВТ_ОсновныеОрганизации.ОбособленноеПодразделение,ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|						ТОГДА РаботникиОрганизации.Сотрудник.ВидЗанятости<>&парамВнутреннееСовместительство
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиОрганизации.Сотрудник.ФизЛицо) КАК ДатыПоследнихНазначений
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеОрганизации КАК ВТ_ОсновныеОрганизации
	|						ПО РаботникиОрганизации.Сотрудник.ФизЛицо = ВТ_ОсновныеОрганизации.Сотрудник.ФизЛицо
//	|						ПО РаботникиОрганизации.Сотрудник.ФизЛицо = ВТ_ОсновныеОрганизации.Сотрудник.ФизЛицо
	|				ПО ДатыПоследнихНазначений.ФизЛицо = РаботникиОрганизации.Сотрудник.ФизЛицо
	|					И ДатыПоследнихНазначений.Период = ВЫБОР
	|															КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Уволен
	|																ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
	|															ИНАЧЕ РаботникиОрганизации.Период
	|														КОНЕЦ
	|					И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
	|					И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|					И ВЫБОР 
	|						КОГДА РаботникиОрганизации.ОбособленноеПодразделение = ЕСТЬNULL(ВТ_ОсновныеОрганизации.ОбособленноеПодразделение,ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|							ТОГДА РаботникиОрганизации.Сотрудник.ВидЗанятости<>&парамВнутреннееСовместительство
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ
	|		" + ?(НЕ ЗначениеЗаполнено(ПодразделениеОрганизации), "", "
	|		ГДЕ
	|			РаботникиОрганизации.ПодразделениеОрганизации В ИЕРАРХИИ (&парамПодразделение) ") + "
	|		
	|		ОБЪЕДИНИТЬ
	|
	|		// движения работников за месяц
	|		ВЫБРАТЬ
	|			РаботникиОрганизации.Сотрудник.Физлицо  КАК ФизЛицо
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
 	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеОрганизацииДвижения КАК ВТ_ОсновныеОрганизацииДвижения
	|				ПО РаботникиОрганизации.Сотрудник.ФизЛицо = ВТ_ОсновныеОрганизацииДвижения.Сотрудник.ФизЛицо
 	|					И РаботникиОрганизации.Период = ВТ_ОсновныеОрганизацииДвижения.Период
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|									ТекущееНазначение.Регистратор,
	|									ТекущееНазначение.НомерСтроки,
	|									МАКСИМУМ(ПредыдущееНазначение.Период) КАК ДатаПредыдущегоНазначения
	|								ИЗ
	|									РегистрСведений.РаботникиОрганизаций КАК ТекущееНазначение
	|									ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПредыдущееНазначение
	|										ПО ТекущееНазначение.Сотрудник = ПредыдущееНазначение.Сотрудник
	|											И ПредыдущееНазначение.Организация = &парамГоловнаяОрганизация
	|											И ПредыдущееНазначение.Период < ТекущееНазначение.Период
	|								ГДЕ
	|									ТекущееНазначение.Период > &парамНачалоМесяца
	|									И ТекущееНазначение.Период <= &парамКонецМесяца
	|									И ТекущееНазначение.Организация = &парамГоловнаяОрганизация
	|									И ТекущееНазначение.ОбособленноеПодразделение = &парамОрганизация
	|								СГРУППИРОВАТЬ ПО
	|									ТекущееНазначение.Регистратор,
	|									ТекущееНазначение.НомерСтроки) КАК ДатыПредыдущихНазначений
	|				ПО РаботникиОрганизации.Регистратор = ДатыПредыдущихНазначений.Регистратор
	|					И РаботникиОрганизации.НомерСтроки = ДатыПредыдущихНазначений.НомерСтроки
	|					
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПредыдущиеНазначения
	|				ПО РаботникиОрганизации.Сотрудник = ПредыдущиеНазначения.Сотрудник
	|					И ПредыдущиеНазначения.Организация = &парамГоловнаяОрганизация
	|					И ДатыПредыдущихНазначений.ДатаПредыдущегоНазначения = ПредыдущиеНазначения.Период
	|		
	|		ГДЕ
	|			РаботникиОрганизации.Период > &парамНачалоМесяца
	|			И РаботникиОрганизации.Период <= &парамКонецМесяца
	|			И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
	|			И ВЫБОР
	|				КОГДА ЕСТЬNULL(ВТ_ОсновныеОрганизацииДвижения.ОбособленноеПодразделение,ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))=РаботникиОрганизации.ОбособленноеПодразделение
	|					ТОГДА РаботникиОрганизации.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|			И (РаботникиОрганизации.ПричинаИзмененияСостояния = &Принят
	|					ИЛИ РаботникиОрганизации.ОбособленноеПодразделение <> ПредыдущиеНазначения.ОбособленноеПодразделение)
	|			И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация " + ?(НЕ ЗначениеЗаполнено(ПодразделениеОрганизации), "", "
	|			И РаботникиОрганизации.ПодразделениеОрганизации В ИЕРАРХИИ (&парамПодразделение)") + "
	|
	|		ОБЪЕДИНИТЬ
	|
	|		// договорники организаций
	|		ВЫБРАТЬ
	|			ДоговорникиОрганизаций.Сотрудник.Физлицо  КАК ФизЛицо
	|		ИЗ
	|			РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизаций
	|
	|
	|		ГДЕ
	|			ДоговорникиОрганизаций.Организация = &парамОрганизация 
	|			И ((ДоговорникиОрганизаций.ХарактерОплаты = &Ежемесячно
	|					И ДоговорникиОрганизаций.ДатаОкончания >= &парамНачалоМесяца
	|					И ДоговорникиОрганизаций.ДатаНачала <= &парамКонецМесяца) 
	|				ИЛИ
	|				(ДоговорникиОрганизаций.ХарактерОплаты <> &Ежемесячно
	|					И ДоговорникиОрганизаций.ДатаОкончания >= &парамНачалоМесяца
	|					И ДоговорникиОрганизаций.ДатаОкончания <= &парамКонецМесяца)) " + ?(НЕ ЗначениеЗаполнено(ПодразделениеОрганизации), "", "
	|			И ДоговорникиОрганизаций.ПодразделениеОрганизации В ИЕРАРХИИ (&парамПодразделение)");
	
	Если НЕ ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		СписокРаботниковТекст = СписокРаботниковТекст + "
	|	
	|		ОБЪЕДИНИТЬ
	|		
	|		// выберем еще физлиц, по которым были движения по налоговым регистрам, но которых нет в регистре РаботникиОрганизации
	|		ВЫБРАТЬ
	|			ДанныеОНалогах.ФизЛицо
	|		ИЗ
	|			(ВЫБРАТЬ 
	|				ИПНРасчетыСБюджетом.ФизЛицо
	|			ИЗ
	|				РегистрНакопления.ИПНРасчетыСБюджетом КАК ИПНРасчетыСБюджетом
	|			ГДЕ
	|				ИПНРасчетыСБюджетом.Организация = &парамОрганизация
	|				И ИПНРасчетыСБюджетом.Период МЕЖДУ &парамНачалоМесяца И &парамКонецМесяца
	|				И ИПНРасчетыСБюджетом.ВидДвижения = &парамПриход
	|				И ИПНРасчетыСБюджетом.ВидСтроки = &парамИсчисление
	|				И НЕ ИПНРасчетыСБюджетом.НеОтражатьВРеглУчете
	|				И ИПНРасчетыСБюджетом.Налог <> 0
	|
	|			ОБЪЕДИНИТЬ
	|			
	|			ВЫБРАТЬ
	|				ОПВРасчетыСФондами.ФизЛицо
	|			ИЗ
	|				РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
	|			ГДЕ
	|				ОПВРасчетыСФондами.Организация = &парамОрганизация
	|				И ОПВРасчетыСФондами.Период МЕЖДУ &парамНачалоМесяца И &парамКонецМесяца
	|				И ОПВРасчетыСФондами.ВидДвижения = &парамПриход
	|				И ОПВРасчетыСФондами.ВидСтроки = &парамИсчисление
	|				И НЕ ОПВРасчетыСФондами.НеОтражатьВРеглУчете
	|				И ОПВРасчетыСФондами.Взнос <> 0
	|
	|			ОБЪЕДИНИТЬ 
	|
	|			ВЫБРАТЬ
	|				СОРасчетыСФондами.ФизЛицо
	|			ИЗ
	|				РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами
	|			ГДЕ
	|				СОРасчетыСФондами.Организация = &парамОрганизация
	|				И СОРасчетыСФондами.Период МЕЖДУ &парамНачалоМесяца И &парамКонецМесяца
	|				И СОРасчетыСФондами.ВидДвижения = &парамПриход
	|				И СОРасчетыСФондами.ВидСтроки = &парамИсчисление
	|				И СОРасчетыСФондами.Отчисление <> 0
	|
	|			ОБЪЕДИНИТЬ
	|
	|			ВЫБРАТЬ
	|				СНИсчисленный.ФизЛицо
	|			ИЗ
	|				РегистрНакопления.СНИсчисленный КАК СНИсчисленный
	|			ГДЕ
	|				СНИсчисленный.Организация = &парамОрганизация
	|				И СНИсчисленный.Период МЕЖДУ &парамНачалоМесяца И &парамКонецМесяца
	|				И НЕ СНИсчисленный.НеОтражатьВРеглУчете
	|				И СНИсчисленный.Налог <> 0
	|
	|			ОБЪЕДИНИТЬ
	|			
	|			ВЫБРАТЬ
	|				ВОСМСРасчетыСФондами.ФизЛицо
	|			ИЗ
	|				РегистрНакопления.ВОСМСРасчетыСФондами КАК ВОСМСРасчетыСФондами
	|			ГДЕ
	|				ВОСМСРасчетыСФондами.Организация = &парамОрганизация
	|				И ВОСМСРасчетыСФондами.Период МЕЖДУ &парамНачалоМесяца И &парамКонецМесяца
	|				И ВОСМСРасчетыСФондами.ВидДвижения = &парамПриход
	|				И ВОСМСРасчетыСФондами.ВидСтроки = &парамИсчисление
	|				И НЕ ВОСМСРасчетыСФондами.НеОтражатьВРеглУчете
	|				И ВОСМСРасчетыСФондами.Взнос <> 0
	|
	|			ОБЪЕДИНИТЬ
	|			
	|			ВЫБРАТЬ
	|				ООСМСРасчетыСФондами.ФизЛицо
	|			ИЗ
	|				РегистрНакопления.ООСМСРасчетыСФондами КАК ООСМСРасчетыСФондами
	|			ГДЕ
	|				ООСМСРасчетыСФондами.Организация = &парамОрганизация
	|				И ООСМСРасчетыСФондами.Период МЕЖДУ &парамНачалоМесяца И &парамКонецМесяца
	|				И ООСМСРасчетыСФондами.ВидДвижения = &парамПриход
	|				И ООСМСРасчетыСФондами.ВидСтроки = &парамИсчисление
	|				И ООСМСРасчетыСФондами.Отчисление <> 0
	|
	|			ОБЪЕДИНИТЬ
	|
	|			ВЫБРАТЬ
	|				ПогашениеЗаймов.ФизЛицо
	|			ИЗ
	|				РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК ПогашениеЗаймов
	|			ГДЕ
	|				ПогашениеЗаймов.Организация = &парамОрганизация
	|				И ПогашениеЗаймов.Период МЕЖДУ &парамНачалоМесяца И &парамКонецМесяца
	|				И ПогашениеЗаймов.УдержаноИзЗарплаты
	|				И ПогашениеЗаймов.ОсновнойДолг <> 0) КАК ДанныеОНалогах
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|						&парамКонецМесяца, 
	|						Организация = &парамГоловнаяОрганизация
	|						И ВЫБОР
	|							КОГДА ОбособленноеПодразделение = Организация
	|								ТОГДА Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
	|							ИНАЧЕ ИСТИНА
	|						КОНЕЦ
	|						) КАК РаботникиОрганизации
	|				ПО ДанныеОНалогах.ФизЛицо = РаботникиОрганизации.Сотрудник.ФизЛицо
	|					И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
	|				ПО ДанныеОНалогах.ФизЛицо = ДоговорникиОрганизации.Сотрудник.ФизЛицо
	|					И ДоговорникиОрганизации.Организация = &парамОрганизация
	|
	|		ГДЕ
	|			РаботникиОрганизации.Сотрудник ЕСТЬ NULL
	|			И ДоговорникиОрганизации.Сотрудник ЕСТЬ NULL
	|";
	КонецЕсли;
	
	
	// Дополним список контрагентами
    СписокРаботниковТекст = СписокРаботниковТекст + " 
	|		ОБЪЕДИНИТЬ
	|			
	|		ВЫБРАТЬ 
	|			ОПВСведенияОДоходах.ФизЛицо
	|		ИЗ
	|			РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
	|		ГДЕ
	|			ОПВСведенияОДоходах.Организация = &парамОрганизация
	|			И ОПВСведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|			И ОПВСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
	|			И ОПВСведенияОДоходах.ПериодРегистрации = &парамНачалоМесяца
	|			И ОПВСведенияОДоходах.СуммаДохода <> 0 " + ?(НЕ ЗначениеЗаполнено(ПодразделениеОрганизации), "", "
	|			И ОПВСведенияОДоходах.Регистратор.ПодразделениеОрганизации В ИЕРАРХИИ (&парамПодразделение)") + "
	|
	|		ОБЪЕДИНИТЬ
	|		
	|		ВЫБРАТЬ 
	|			ИПНСведенияОДоходах.ФизЛицо
	|		ИЗ
	|			РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
	|		ГДЕ
	|			ИПНСведенияОДоходах.Организация = &парамОрганизация
	|			И ИПНСведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|			И ИПНСведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
	|			И ИПНСведенияОДоходах.ПериодРегистрации МЕЖДУ &парамНачалоМесяца И &парамКонецМесяца
	|			И ИПНСведенияОДоходах.СуммаДохода <> 0 " + ?(НЕ ЗначениеЗаполнено(ПодразделениеОрганизации), "", "
	|			И ИПНСведенияОДоходах.Регистратор.ПодразделениеОрганизации В ИЕРАРХИИ (&парамПодразделение)")+"
	|
	|		ОБЪЕДИНИТЬ
	|		
	|		ВЫБРАТЬ 
	|			ВОСМССведенияОДоходах.ФизЛицо
	|		ИЗ
	|			РегистрНакопления.ВОСМССведенияОДоходах КАК ВОСМССведенияОДоходах
	|		ГДЕ
	|			ВОСМССведенияОДоходах.Организация = &парамОрганизация
	|			И ВОСМССведенияОДоходах.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|			И ВОСМССведенияОДоходах.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения
	|			И ВОСМССведенияОДоходах.ПериодРегистрации МЕЖДУ &парамНачалоМесяца И &парамКонецМесяца
	|			И ВОСМССведенияОДоходах.СуммаДохода <> 0 " + ?(НЕ ЗначениеЗаполнено(ПодразделениеОрганизации), "", "
	|			И ВОСМССведенияОДоходах.Регистратор.ПодразделениеОрганизации В ИЕРАРХИИ (&парамПодразделение)") + "
	|";


	Запрос.Текст = СписокРаботниковТекст;

	Запрос.Текст = ВТ_ОсновныеОрганизации + "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	СписокФизЛиц.ФизЛицо
	|
	|ПОМЕСТИТЬ ВТСписокФизЛиц
	|
	|ИЗ
	|	(" + СписокРаботниковТекст + ") КАК СписокФизЛиц
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК УжеРанееОтражено
	|		ПО (ВЫБОР
	|				КОГДА СписокФизЛиц.ФизЛицо ССЫЛКА Справочник.Контрагенты
	|					ТОГДА СписокФизЛиц.ФизЛицо.ФизЛицо
	|				ИНАЧЕ СписокФизЛиц.ФизЛицо
	|			КОНЕЦ = УжеРанееОтражено.ФизЛицо)
	|			И УжеРанееОтражено.Ссылка.Организация = &парамОрганизация
	|			И УжеРанееОтражено.Ссылка.ПериодРегистрации = &парамНачалоМесяца
	|			И УжеРанееОтражено.Ссылка.Проведен
	|			И УжеРанееОтражено.Ссылка <> &ДокументСсылка
	|
	|ГДЕ
	|	УжеРанееОтражено.ФизЛицо ЕСТЬ NULL // зарплату такого физлица еще не отражали в бух. учете
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СписокФизЛиц.ФизЛицо
	|";

	Запрос.Выполнить();
	
	Возврат МенеджерВТ;

КонецФункции // ПодготовитьМенеджерВременныхТаблицСоСпискомФизЛиц()


// Получение данных для бухучета.
// 
// Параметры:
//  Основные - булево, если Истина, то получаем данные по основным начислениям иначе - по доп.
//
// Возвращаемое значение:
//  Результат запроса
// 
Функция ПолучитьДанныеУчета(Основной, МенеджерВТ = Неопределено)
	
	Возврат куфиб_ЗащитаПроцедурыУправленческогоУчета.ПолучитьДанныеУчета(Организация, ПериодРегистрации, Основной, МенеджерВТ);

КонецФункции  // ПолучитьДанныеУчета

// автозаполнерие субконто по данным строки 
Процедура АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет)
	// если не пустой счет - заполним "автозаполняемые" субконто
	Если ДанныеУчета.СчетДт <> ПустойСчет Тогда
		Если ДанныеУчета.НомерСубконтоСотрудникиРаботникиДт <> 0 Тогда
			Субконто = ДанныеУчета["СубконтоДт" + ДанныеУчета.НомерСубконтоСотрудникиРаботникиДт];
			Если НЕ ЗначениеЗаполнено(Субконто) Тогда
				СтрокаДанных["СубконтоДт" + ДанныеУчета.НомерСубконтоСотрудникиРаботникиДт] = ДанныеУчета.Сотрудник.Физлицо;
			КонецЕсли;
		КонецЕсли;
		Если ДанныеУчета.НомерСубконтоПодразделенияДт <> 0 Тогда
			Субконто = ДанныеУчета["СубконтоДт" + ДанныеУчета.НомерСубконтоПодразделенияДт];
			Если НЕ ЗначениеЗаполнено(Субконто) Тогда
				СтрокаДанных["СубконтоДт" + ДанныеУчета.НомерСубконтоПодразделенияДт] = ДанныеУчета.ПодразделениеОрганизации;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ДанныеУчета.СчетКт <> ПустойСчет Тогда
 		Если ДанныеУчета.НомерСубконтоСотрудникиРаботникиКт <> 0 Тогда
 			Субконто = ДанныеУчета["СубконтоКт" + ДанныеУчета.НомерСубконтоСотрудникиРаботникиКт];
			Если НЕ ЗначениеЗаполнено(Субконто) Тогда
 				СтрокаДанных["СубконтоКт" + ДанныеУчета.НомерСубконтоСотрудникиРаботникиКт] = ДанныеУчета.Сотрудник.Физлицо;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ДанныеУчета.СчетДтНУ <> ПланыСчетов.Налоговый.ПустаяСсылка() Тогда
		Если ДанныеУчета.НомерСубконтоСотрудникиРаботникиДтНУ <> 0 Тогда
			Субконто = ДанныеУчета["СубконтоДтНУ" + ДанныеУчета.НомерСубконтоСотрудникиРаботникиДтНУ];
			Если НЕ ЗначениеЗаполнено(Субконто) Тогда
				СтрокаДанных["СубконтоДтНУ" + ДанныеУчета.НомерСубконтоСотрудникиРаботникиДтНУ] = ДанныеУчета.Сотрудник.Физлицо;
			КонецЕсли;
		КонецЕсли;
		Если ДанныеУчета.НомерСубконтоПодразделенияДтНУ <> 0 Тогда
			Субконто = ДанныеУчета["СубконтоДтНУ" + ДанныеУчета.НомерСубконтоПодразделенияДтНУ];
			Если НЕ ЗначениеЗаполнено(Субконто) Тогда
				СтрокаДанных["СубконтоДтНУ" + ДанныеУчета.НомерСубконтоПодразделенияДтНУ] = ДанныеУчета.ПодразделениеОрганизации;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ДанныеУчета.СчетКтНУ <> ПланыСчетов.Налоговый.ПустаяСсылка() Тогда
 		Если ДанныеУчета.НомерСубконтоСотрудникиРаботникиКтНУ <> 0 Тогда
 			Субконто = ДанныеУчета["СубконтоКтНУ" + ДанныеУчета.НомерСубконтоСотрудникиРаботникиКтНУ];
			Если НЕ ЗначениеЗаполнено(Субконто) Тогда
 				СтрокаДанных["СубконтоКтНУ" + ДанныеУчета.НомерСубконтоСотрудникиРаботникиКтНУ] = ДанныеУчета.Сотрудник.Физлицо;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры  // АвтозаполнениеСубконто

// создает строку движений БУОсновныеНачисления или БУДополнительныеНачисления
// 
// Параметры:
//	ДанныеУчета - спозиционированная выборка по результату запроса
//  НаборЗаписей - набор записей
//  ЭтоОсновныеНачисления - признак того, что передан набор записей основных начсилений
//  Пустой счет - пустая ссылка на счет
//
Процедура СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет)
	СтрокаДанных = НаборЗаписей.Добавить();
	
	// вид расчета
	СтрокаДанных.ВидРасчета = ДанныеУчета.ВидРасчета;
	// период регистрации
	СтрокаДанных.ПериодРегистрации = ПериодРегистрации;
	// измерения
	СтрокаДанных.ФизЛицо = ДанныеУчета.Сотрудник.ФизЛицо;
	СтрокаДанных.Сотрудник = ДанныеУчета.Сотрудник;
    СтрокаДанных.Организация = ДанныеУчета.ГоловнаяОрганизация;
	
	// ресурсы
	СтрокаДанных.Результат = ДанныеУчета.Результат;

	// реквизиты
	Если ЭтоОсновныеНачисления Тогда
		// только для БУОсновныеНачисления
		
		// период действия
		СтрокаДанных.ПериодДействияНачало = ДанныеУчета.ПериодДействияНачало;
		СтрокаДанных.ПериодДействияКонец = ДанныеУчета.ПериодДействияКонец;

	КонецЕсли;
	
	СтрокаДанных.СчетДт = ДанныеУчета.СчетДт;
	СтрокаДанных.СчетКт = ДанныеУчета.СчетКт;
	СтрокаДанных.СубконтоДт1 = ДанныеУчета.СубконтоДт1;
	СтрокаДанных.СубконтоДт2 = ДанныеУчета.СубконтоДт2;
	СтрокаДанных.СубконтоДт3 = ДанныеУчета.СубконтоДт3;
	СтрокаДанных.СубконтоКт1 = ДанныеУчета.СубконтоКт1;
	СтрокаДанных.СубконтоКт2 = ДанныеУчета.СубконтоКт2;
	СтрокаДанных.СубконтоКт3 = ДанныеУчета.СубконтоКт3;
	
	// - НУ -
	СтрокаДанных.СчетДтНУ = ДанныеУчета.СчетДтНУ;
	СтрокаДанных.СчетКтНУ = ДанныеУчета.СчетКтНУ;
	СтрокаДанных.СубконтоДтНУ1 = ДанныеУчета.СубконтоДтНУ1;
	СтрокаДанных.СубконтоДтНУ2 = ДанныеУчета.СубконтоДтНУ2;
	СтрокаДанных.СубконтоДтНУ3 = ДанныеУчета.СубконтоДтНУ3;
	СтрокаДанных.СубконтоКтНУ1 = ДанныеУчета.СубконтоКтНУ1;
	СтрокаДанных.СубконтоКтНУ2 = ДанныеУчета.СубконтоКтНУ2;
	СтрокаДанных.СубконтоКтНУ3 = ДанныеУчета.СубконтоКтНУ3;
	
	// - НУ -
	//Если мОтображатьСтруктурныеПодразделения Тогда
	//	СтрокаДанных.СтруктурноеПодразделениеДт = ДанныеУчета.СтруктурноеПодразделениеДт;
	//	СтрокаДанных.СтруктурноеПодразделениеКт = ДанныеУчета.СтруктурноеПодразделениеКт;
	//КонецЕсли;
	
	СтрокаДанных.ОбособленноеПодразделение = ДанныеУчета.Организация;
	
	АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, ПустойСчет);
	
КонецПроцедуры // СоздатьСтрокуДвижений
	
// Переносит данные из переменной мПромежуточнаяТаблица в табличную часть документа
//
Процедура ПеренестиОтражениеВУчетеИзПромежуточнойТаблицы()

	// переносим в табличную часть
	мПромежуточнаяТаблица.Свернуть(мСтрокаРеквизитовГруппировки, "Сумма");
	
	Для Каждого Проводка Из мПромежуточнаяТаблица Цикл
		НоваяСтрока = ОтражениеВУчете.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Проводка);
	КонецЦикла;

КонецПроцедуры // ПеренестиОтражениеВУчетеИзПромежуточнойТаблицы()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура АвтозаполнениеПроводок(МенеджерВТ = Неопределено) Экспорт
	
	мВедениеБухУчетаВРазрезеСП = Ложь;
	мИмяПланаСчетов = "Типовой";
	
	ОтражениеВУчете.Очистить();
	
	// Ссылки на часто используемые 
	
	СпособОтраженияПоУмолчанию 		= Справочники.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеНачисленийПоУмолчанию;
	СчетКтДляРезервов				= ПланыСчетов.Типовой.КраткосрочныеОценочныеОбязательстваПоВознаграждениямРаботникам;
	СчетДебетаДляПени 				= ПланыСчетов.Типовой.АдминистративныеРасходы;	
	ВидСубконтоРаботникиОрганизаций = ПланыВидовХарактеристик.ВидыСубконтоТиповые.РаботникиОрганизаций;
	ВидСубконтоКонтрагенты          = ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты;
	ВидСубконтоСтатьиЗатрат		   	= ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат;
	ВидСубконтоПодразделения	   	= ПланыВидовХарактеристик.ВидыСубконтоТиповые.Подразделения;
	
	ПустойСчет = ПланыСчетов.Типовой.ПустаяСсылка();
	
	ВедетсяУчетПоСотрудникам = ОбщегоНазначения.ПолучитьПризнакВеденияУчетаПоСотрудникам();
	
	// запишем движения по текущему состоянию табличной части с начислениями
	// как при проведении
	НаборЗаписейОсновной = РегистрыРасчета.БУОсновныеНачисления.СоздатьНаборЗаписей();
	НаборЗаписейОсновной.Отбор.Регистратор.Значение = Ссылка;
	
	НаборЗаписейДополнительный = РегистрыРасчета.БУДополнительныеНачисления.СоздатьНаборЗаписей();
	НаборЗаписейДополнительный.Отбор.Регистратор.Значение = Ссылка;
	
	Записать();  // запишем документ
	
	ВыборкаПоДоходам = СформироватьЗапросПоДоходам().Выбрать();
	
	ПлохиеДанные = Ложь;
	
	Пока ВыборкаПоДоходам.Следующий() Цикл
		ПроверитьЗаполнениеСтрокиДохода(ВыборкаПоДоходам, ПлохиеДанные);
		ДобавитьСтрокуВДвиженияПоДоходам(ВыборкаПоДоходам, НаборЗаписейОсновной, НаборЗаписейДополнительный);
	КонецЦикла;
	
	Если ПлохиеДанные Тогда
		Возврат;
	КонецЕсли;
	
	ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
	ЗаполнятьНКпоИПНВНУ = ПланыСчетов.Налоговый.ИндивидуальныйПодоходныйНалог.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты) <> Неопределено;
	ЗаполнятьНКпоСНВНУ	= ПланыСчетов.Налоговый.ПрочиеНалоги.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты) <> Неопределено;


	// признаки наличия на счетах учета задолженности по налогам аналитики по налоговым комитетам,
	// в которые необходимо отчитываться 
	ЗаполнятьНКпоИПН 	= ПланыСчетов.Типовой.ИндивидуальныйПодоходныйНалог.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты) <> Неопределено;
	ЗаполнятьНКпоСН		= ПланыСчетов.Типовой.СоциальныйНалог.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты) <> Неопределено;

	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ИсчислениеНалоговСтруктурныхЕдиниц = глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц");
	Иначе
		ЗаполнятьНКпоИПН 	= Ложь;
		ЗаполнятьНКпоСН 	= Ложь;
		ЗаполнятьНКпоИПНВНУ = Ложь;
		ЗаполнятьНКпоСНВНУ 	= Ложь;
	КонецЕсли;

	// составим список физлиц, данные по которым необходимо отразить в документе
	Если МенеджерВТ = Неопределено Тогда
		// может быть вызвана из формы для заполнения табл. части ОтражениеВУчете по уже введенным БУОсновные/БУДополнительныеНачисления
		МенеджерВТ = ПодготовитьМенеджерВременныхТаблицСоСпискомФизЛиц();
	КонецЕсли;
	
    // создадим запрос и создадим все необходимые для него параметры
    Запрос = Новый Запрос;
    
    Если МенеджерВТ <> Неопределено Тогда
    	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
    Иначе
    	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
    КонецЕсли;

	// Параметры из шапки документа
	Запрос.УстановитьПараметр("ДокументСсылка", 					Ссылка);
	
	Запрос.УстановитьПараметр("парамОрганизация", 					Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", 			ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", 			СтруктурноеПодразделение);
	
	Запрос.УстановитьПараметр("парамНачалоМесяца", 					НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамКонецМесяца", 					КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПериодРегистрации", 			НачалоМесяца(ПериодРегистрации)); // для СП

	// ПланСчетов
	Запрос.УстановитьПараметр("парамПустойСчет", 					ПустойСчет);
	Запрос.УстановитьПараметр("парамСчетКтДляРезервов", 			СчетКтДляРезервов);
	Запрос.УстановитьПараметр("парамСчетДтДляПени", 				СчетДебетаДляПени);
	Запрос.УстановитьПараметр("парамСчетПрочиеРасходыНУ",			ПланыСчетов.Налоговый.ПрочиеРасходы);
	Запрос.УстановитьПараметр("парамСчетКтНУДляРезервов", 			ПланыСчетов.Налоговый.КраткосрочныеОценочныеОбязательстваПоВознаграждениямРаботникам); // 3430Н
	
	// СпособыОтраженияЗапрлатыВРеглУчете
	Запрос.УстановитьПараметр("парамСпособПоУмолчанию", 			СпособОтраженияПоУмолчанию);
	Запрос.УстановитьПараметр("парамПустойСпособБУ", 				Справочники.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамСпособНеОтражать", 				Справочники.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете);
	
	// ВидыСубконтоТиповые	                                                                             
	Запрос.УстановитьПараметр("парамВидСубконтоРаботникиОрганизаций", 	ВидСубконтоРаботникиОрганизаций);
	Запрос.УстановитьПараметр("парамВидСубконтоКонтрагенты", 			ВидСубконтоКонтрагенты);
	Запрос.УстановитьПараметр("парамВидСубконтоСтатьиЗатрат", 			ВидСубконтоСтатьиЗатрат);
	Запрос.УстановитьПараметр("парамВидСубконтоПодразделения", 			ВидСубконтоПодразделения);
	
	// Предопределенные статьи затрат
	Запрос.УстановитьПараметр("парамСтатьяЗатратСО", 				Справочники.СтатьиЗатрат.СоциальныеОтчисления);
	Запрос.УстановитьПараметр("парамСтатьяЗатратСН", 				Справочники.СтатьиЗатрат.СоциальныйНалог);
	Запрос.УстановитьПараметр("парамСтатьяЗатратОППВ", 				Справочники.СтатьиЗатрат.ОбязательныеПрофессиональныеПенсионныеВзносы);
	Запрос.УстановитьПараметр("парамСтатьяЗатратООСМС",				Справочники.СтатьиЗатрат.ОтчисленияОСМС);
	Запрос.УстановитьПараметр("парамСтатьяЗатратОПВР", 				Справочники.СтатьиЗатрат.ОбязательныеПенсионныеВзносыРаботодателя);

	
	
	// Предопределенные элементы справочника НалогиСборыОтчисления
	Запрос.УстановитьПараметр("парамНалогиСборыСоциальныйНалогИностранныеСпециалисты", Справочники.НалогиСборыОтчисления.СоциальныйНалогИностранныеСпециалисты);
	Запрос.УстановитьПараметр("парамНалогиСборыСоциальныйНалог", 	Справочники.НалогиСборыОтчисления.СоциальныйНалог);
	
	// ВидыДвиженияНакопления
	Запрос.УстановитьПараметр("парамВидДвиженияПриход", 			ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамВидДвиженияРасход", 			ВидДвиженияНакопления.Расход);

	// Прочие параметры
	Запрос.УстановитьПараметр("парамПустаяОрганизация", 			Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамПустоеПодразделение", 			Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("НачальнаяДата", 						'00010101');
	
	Запрос.УстановитьПараметр("парамВидСтрокиИсчисление", 			Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	
	Запрос.УстановитьПараметр("Уволен", 							Перечисления.ПричиныИзмененияСостояния.Увольнение);

	Запрос.УстановитьПараметр("парамВнутреннееСовместительство", 	Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);

	Запрос.УстановитьПараметр("парамНеОблагаетсяЦеликом", 			Справочники.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом);

	
	НачатьТранзакцию();
	
	НаборЗаписейОсновной.Записать();
	НаборЗаписейДополнительный.Записать();
	
	// Подготовим список счетов резервов по вознаграждениями работников, которые создавались без
	// формирования резерва на социальные отчисления и/или социальный налог, чтобы затраты по ним относились 
	// не на счет резерва, а на основной счет затрат работника.
	// Определяем по состоянию на текущий месяц, если в разные периоды СН и СО то включались в резерв,
	// то не включались, то надо оформлять такие случаи с помощью разных элементов справочника Резервы.
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	РазмерыОтчисленийВРезервы.СчетУчета,
	|	РазмерыОтчисленийВРезервы.Резерв,
	|	РазмерыОтчисленийВРезервы.РазмерСоциальногоНалога,
	|	РазмерыОтчисленийВРезервы.РазмерСоциальныхОтчислений,
	|	РазмерыОтчисленийВРезервы.РазмерПрофессиональныхПенсионныхВзносов,
	|	РазмерыОтчисленийВРезервы.РазмерПенсионныхВзносовРаботодателя,
	|	РазмерыОтчисленийВРезервы.РазмерОтчисленийОСМС
	|ИЗ
	|	РегистрСведений.РазмерыОтчисленийВРезервы.СрезПоследних(
	|			&парамКонецМесяца,
	|			Организация = &парамОрганизация) КАК РазмерыОтчисленийВРезервы
	|ГДЕ
	|	(РазмерыОтчисленийВРезервы.РазмерСоциальногоНалога = 0
	|			ИЛИ РазмерыОтчисленийВРезервы.РазмерСоциальныхОтчислений = 0
	|			ИЛИ РазмерыОтчисленийВРезервы.РазмерПрофессиональныхПенсионныхВзносов = 0
	|			ИЛИ РазмерыОтчисленийВРезервы.РазмерПенсионныхВзносовРаботодателя = 0
	|			ИЛИ РазмерыОтчисленийВРезервы.РазмерОтчисленийОСМС = 0)
	|";

	Выборка = Запрос.Выполнить().Выбрать();
	      
	МассивСчетаРезервовБезСН = Новый Массив();
	МассивСчетаРезервовБезСО = Новый Массив();
	МассивСчетаРезервовБезОППВ = Новый Массив();
	МассивСчетаРезервовБезООСМС = Новый Массив();
	МассивСчетаРезервовБезОПВР = Новый Массив();
	
	МассивРезервыБезСН = Новый Массив();
	МассивРезервыБезСО = Новый Массив();
	МассивРезервыБезОППВ = Новый Массив();
	МассивРезервыБезООСМС = Новый Массив();
	МассивРезервыБезОПВР = Новый Массив();
	
	Пока Выборка.Следующий() Цикл
	
		Если Выборка.РазмерСоциальногоНалога = 0 Тогда
			МассивСчетаРезервовБезСН.Добавить(Выборка.СчетУчета);
			МассивРезервыБезСН.Добавить(Выборка.Резерв);
		КонецЕсли;
	
		Если Выборка.РазмерСоциальныхОтчислений = 0 Тогда
			МассивСчетаРезервовБезСО.Добавить(Выборка.СчетУчета);
			МассивРезервыБезСО.Добавить(Выборка.Резерв);
		КонецЕсли;
		
		Если Выборка.РазмерПрофессиональныхПенсионныхВзносов = 0 Тогда
			МассивСчетаРезервовБезОППВ.Добавить(Выборка.СчетУчета);
			МассивРезервыБезОППВ.Добавить(Выборка.Резерв);
		КонецЕсли;
		
		Если Выборка.РазмерОтчисленийОСМС = 0 Тогда
			МассивСчетаРезервовБезООСМС.Добавить(Выборка.СчетУчета);
			МассивРезервыБезООСМС.Добавить(Выборка.Резерв);
		КонецЕсли;
		
		Если Выборка.РазмерПенсионныхВзносовРаботодателя = 0 Тогда
			МассивСчетаРезервовБезОПВР.Добавить(Выборка.СчетУчета);
			МассивРезервыБезОПВР.Добавить(Выборка.Резерв);
		КонецЕсли;		
		
	КонецЦикла; 
	
	Запрос.УстановитьПараметр("парамСчетаРезервовБезСН", МассивСчетаРезервовБезСН);
	Запрос.УстановитьПараметр("парамСчетаРезервовБезСО", МассивСчетаРезервовБезСО);
	Запрос.УстановитьПараметр("парамСчетаРезервовБезОППВ", МассивСчетаРезервовБезОППВ);
	Запрос.УстановитьПараметр("парамСчетаРезервовБезООСМС", МассивСчетаРезервовБезООСМС);
	Запрос.УстановитьПараметр("парамСчетаРезервовБезОПВР", МассивСчетаРезервовБезОПВР);
	
	Запрос.УстановитьПараметр("парамРезервыБезСН", МассивРезервыБезСН);
	Запрос.УстановитьПараметр("парамРезервыБезСО", МассивРезервыБезСО);
	Запрос.УстановитьПараметр("парамРезервыБезОППВ", МассивРезервыБезОППВ);
	Запрос.УстановитьПараметр("парамРезервыБезООСМС", МассивРезервыБезООСМС);
	Запрос.УстановитьПараметр("парамРезервыБезОПВР", МассивРезервыБезОПВР);
	
	#Область ОтражениеНачислений

	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение начислений

	// БУНачисления
	//	Поля:
	//		СчетДт
	//		СубконтоДт1
	//		СубконтоДт2
	//		СубконтоДт3
	//		СчетКт
	//		СубконтоКт1
	//		СубконтоКт2
	//		СубконтоКт3
	//		СчетДтНУ
	//		СчетКтНУ
	//		Результат
	// Объединение:
	// 

	БУНачисленияТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БУНачисления.ФизЛицо,
	|	БУНачисления.СчетДт,
	|	БУНачисления.СубконтоДт1,
	|	БУНачисления.СубконтоДт2,
	|	БУНачисления.СубконтоДт3,
	|	БУНачисления.СчетКт,
	|	БУНачисления.СубконтоКт1,
	|	БУНачисления.СубконтоКт2,
	|	БУНачисления.СубконтоКт3,
	// - НУ -
	|	БУНачисления.СчетДтНУ,
	|	БУНачисления.СубконтоДтНУ1,
	|	БУНачисления.СубконтоДтНУ2,
	|	БУНачисления.СубконтоДтНУ3,
	|	БУНачисления.СчетКтНУ,
	|	БУНачисления.СубконтоКтНУ1,
	|	БУНачисления.СубконтоКтНУ2,
	|	БУНачисления.СубконтоКтНУ3,
	// - НУ -
	|	БУНачисления.СтруктурноеПодразделение КАК СтруктурноеПодразделениеДт,
	|	БУНачисления.СтруктурноеПодразделениеОсновное КАК СтруктурноеПодразделениеКт,
	|	СоответствиеСчетовБУиНУДт.СчетНУ КАК СчетДтНУСоответствие,
	|	СоответствиеСчетовБУиНУКт.СчетНУ КАК СчетКтНУСоответствие,
	|	СУММА(БУНачисления.Результат) КАК Результат
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.СчетДт КАК СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1 КАК СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2 КАК СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3 КАК СубконтоДт3,
	|		БУОсновныеНачисления.СчетКт КАК СчетКт,
	|		БУОсновныеНачисления.СубконтоКт1 КАК СубконтоКт1,
	|		БУОсновныеНачисления.СубконтоКт2 КАК СубконтоКт2,
	|		БУОсновныеНачисления.СубконтоКт3 КАК СубконтоКт3,
	// - НУ -
	|		БУОсновныеНачисления.СчетДтНУ КАК СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|		БУОсновныеНачисления.СчетКтНУ КАК СчетКтНУ,
	|		БУОсновныеНачисления.СубконтоКтНУ1 КАК СубконтоКтНУ1,
	|		БУОсновныеНачисления.СубконтоКтНУ2 КАК СубконтоКтНУ2,
	|		БУОсновныеНачисления.СубконтоКтНУ3 КАК СубконтоКтНУ3,
	// - НУ -
	|															"+?(мОтображатьСтруктурныеПодразделения,"
	|		ВЫБОР КОГДА БУОсновныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУОсновныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КОНЕЦ","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|															"+?(мОтображатьСтруктурныеПодразделения,"
	|		ВЫБОР КОГДА БУОсновныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУОсновныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЕСТЬNULL(УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КОНЕЦ","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделениеОсновное,
	|		БУОсновныеНачисления.Результат КАК Результат
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления";

	Если МенеджерВТ <> Неопределено Тогда
	
	//БУНачисленияТекст = БУНачисленияТекст + "
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	//|			ПО БУОсновныеНачисления.ФизЛицо = ВЫБОР 
	//|														КОГДА СписокФизЛиц.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица
	//|															ТОГДА СписокФизЛиц.ФизЛицо
	//|														ИНАЧЕ СписокФизЛиц.ФизЛицо.ФизЛицо
	//|													КОНЕЦ";
	БУНачисленияТекст = БУНачисленияТекст + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО 	ВЫБОР
	|					КОГДА БУОсновныеНачисления.Сотрудник ССЫЛКА Справочник.Контрагенты 
	|						ТОГДА БУОсновныеНачисления.Сотрудник = СписокФизЛиц.ФизЛицо
	|					ИНАЧЕ БУОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|				КОНЕЦ
	|";
	
	КонецЕсли;
	
	Если мОтображатьСтруктурныеПодразделения Тогда
		БУНачисленияТекст = БУНачисленияТекст+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация) КАК УчетВзаиморасчетовПоСП
		|			ПО БУОсновныеНачисления.Сотрудник = УчетВзаиморасчетовПоСП.Сотрудник
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСППоОсновномуМестуРаботы
		|			ПО БУОсновныеНачисления.Сотрудник.ФизЛицо = УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	БУНачисленияТекст = БУНачисленияТекст + "
	|	ГДЕ 
	|		БУОсновныеНачисления.ПериодРегистрации = &парамНачалоМесяца И
	|		БУОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация И
	|		БУОсновныеНачисления.Результат <> 0 И
	|		(НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,
	|		БУДополнительныеНачисления.СубконтоДт2,
	|		БУДополнительныеНачисления.СубконтоДт3,
	|		БУДополнительныеНачисления.СчетКт,
	|		БУДополнительныеНачисления.СубконтоКт1,
	|		БУДополнительныеНачисления.СубконтоКт2,
	|		БУДополнительныеНачисления.СубконтоКт3,
	// - НУ -
	|		БУДополнительныеНачисления.СчетДтНУ КАК СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|		БУДополнительныеНачисления.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|		БУДополнительныеНачисления.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|		БУДополнительныеНачисления.СчетКтНУ КАК СчетКтНУ,
	|		БУДополнительныеНачисления.СубконтоКтНУ1 КАК СубконтоКтНУ1,
	|		БУДополнительныеНачисления.СубконтоКтНУ2 КАК СубконтоКтНУ2,
	|		БУДополнительныеНачисления.СубконтоКтНУ3 КАК СубконтоКтНУ3,
	// - НУ -
	|															"+?(мОтображатьСтруктурныеПодразделения,"
	|		ВЫБОР КОГДА БУДополнительныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУДополнительныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КОНЕЦ","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|															"+?(мОтображатьСтруктурныеПодразделения,"
	|		ВЫБОР КОГДА БУДополнительныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУДополнительныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЕСТЬNULL(УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КОНЕЦ","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделениеОсновное,
	|		БУДополнительныеНачисления.Результат
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	БУНачисленияТекст = БУНачисленияТекст + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО 	ВЫБОР
	|					КОГДА БУДополнительныеНачисления.Сотрудник ССЫЛКА Справочник.Контрагенты 
	|						ТОГДА БУДополнительныеНачисления.Сотрудник = СписокФизЛиц.ФизЛицо
	|					ИНАЧЕ БУДополнительныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо
	|				КОНЕЦ
	|";
	
	КонецЕсли;
	
	Если мОтображатьСтруктурныеПодразделения Тогда
		БУНачисленияТекст = БУНачисленияТекст+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация) КАК УчетВзаиморасчетовПоСП
		|			ПО БУДополнительныеНачисления.Сотрудник = УчетВзаиморасчетовПоСП.Сотрудник
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСППоОсновномуМестуРаботы
		|			ПО БУДополнительныеНачисления.Сотрудник.ФизЛицо = УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	БУНачисленияТекст = БУНачисленияТекст + "
	|	ГДЕ
	|		БУДополнительныеНачисления.ПериодРегистрации = &парамНачалоМесяца И
	|		БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация И
	|		БУДополнительныеНачисления.Результат <> 0 И
	|		(НЕ БУДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом)) КАК БУНачисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
	|					&парамКонецМесяца,
	|					СчетКоррБУ = &парамПустойСчет
	|					И СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	|					И СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	|					И СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	|					И ВидЗатратНУ = НЕОПРЕДЕЛЕНО) КАК СоответствиеСчетовБУиНУДт
	|		ПО БУНачисления.СчетДт = СоответствиеСчетовБУиНУДт.СчетБУ
	|			И СоответствиеСчетовБУиНУДт.Учитывается
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
	|					&парамКонецМесяца,
	|					СчетКоррБУ = &парамПустойСчет
	|					И СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	|					И СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	|					И СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	|					И ВидЗатратНУ = НЕОПРЕДЕЛЕНО) КАК СоответствиеСчетовБУиНУКт
	|		ПО БУНачисления.СчетКт = СоответствиеСчетовБУиНУКт.СчетБУ
	|			И СоответствиеСчетовБУиНУКт.Учитывается
    |
	|СГРУППИРОВАТЬ ПО
	|	БУНачисления.ФизЛицо,
	|	БУНачисления.СчетДт,
	|	БУНачисления.СубконтоДт1,
	|	БУНачисления.СубконтоДт2,
	|	БУНачисления.СубконтоДт3,
	|	БУНачисления.СчетКт,
	|	БУНачисления.СубконтоКт1,
	|	БУНачисления.СубконтоКт2,
	|	БУНачисления.СубконтоКт3,
	// - НУ -
	|	БУНачисления.СчетДтНУ,
	|	БУНачисления.СубконтоДтНУ1,
	|	БУНачисления.СубконтоДтНУ2,
	|	БУНачисления.СубконтоДтНУ3,
	|	БУНачисления.СчетКтНУ,
	|	БУНачисления.СубконтоКтНУ1,
	|	БУНачисления.СубконтоКтНУ2,
	|	БУНачисления.СубконтоКтНУ3,
	// - НУ -
	|	БУНачисления.СтруктурноеПодразделение,
	|	БУНачисления.СтруктурноеПодразделениеОсновное,
	|	СоответствиеСчетовБУиНУДт.СчетНУ,
	|	СоответствиеСчетовБУиНУКт.СчетНУ
	|";

	Запрос.Текст = БУНачисленияТекст;

	Выборка = Запрос.Выполнить().Выбрать();
	
	мПромежуточнаяТаблица.Очистить();
	Пока Выборка.Следующий() Цикл

		Строка = мПромежуточнаяТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, Выборка);
		Строка.Сумма = Выборка.Результат;

	КонецЦикла;
	
	// переносим в табличную часть документа
	ПеренестиОтражениеВУчетеИзПромежуточнойТаблицы();
	
	#КонецОбласти
	
	
	#Область ОтражениеУдержаний
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// Отражение удержаний

	// СведенияОбУдержанияхСрез
	//	Поля:
	//		ФизЛицо
	//		ВидРасчета
	//		Период
	// Описание:
 	// вспомогательная таблица для получения среза последних значений в регистре УдержанияРаботниковОрганизации
	//

	СведенияОбУдержанияхСрезТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
 	|	УдержанияРаботниковОрганизации.ФизЛицо КАК ФизЛицо,
 	|	УдержанияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|	МАКСИМУМ(ПлановыеУдержанияРаботниковОрганизаций.Период) КАК Период,
	|	УдержанияРаботниковОрганизации.ДокументОснование
	|
	|ПОМЕСТИТЬ ВТ_УдержанияРаботниковОрганизаций
	|ИЗ
 	|	РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации";

 	Если МенеджерВТ <> Неопределено Тогда
 	
 	СведенияОбУдержанияхСрезТекст = СведенияОбУдержанияхСрезТекст + "
 	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
 	|			ПО УдержанияРаботниковОрганизации.ФизЛицо = СписокФизЛиц.ФизЛицо";
 	
 	КонецЕсли;
 	
 	СведенияОбУдержанияхСрезТекст = СведенияОбУдержанияхСрезТекст + "
 	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержанияРаботниковОрганизаций
	|		ПО УдержанияРаботниковОрганизации.ФизЛицо = ПлановыеУдержанияРаботниковОрганизаций.ФизЛицо
	|			И УдержанияРаботниковОрганизации.ВидРасчета = ПлановыеУдержанияРаботниковОрганизаций.ВидРасчета
	|			И УдержанияРаботниковОрганизации.Организация = ПлановыеУдержанияРаботниковОрганизаций.Организация
	|			И ВЫБОР
	|				КОГДА НЕ (УдержанияРаботниковОрганизации.ДокументОснование.Ссылка ЕСТЬ NULL)
	|					ТОГДА УдержанияРаботниковОрганизации.ДокументОснование = ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|			И ПлановыеУдержанияРаботниковОрганизаций.Период <= УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|
	|ГДЕ
 	|	УдержанияРаботниковОрганизации.ОбособленноеПодразделение = &парамОрганизация И
 	|	УдержанияРаботниковОрганизации.ПериодРегистрации = &парамНачалоМесяца
	|
	|СГРУППИРОВАТЬ ПО
 	|	УдержанияРаботниковОрганизации.ФизЛицо,
 	|	УдержанияРаботниковОрганизации.ВидРасчета,
	|	УдержанияРаботниковОрганизации.ДокументОснование
 	|
 	|ИНДЕКСИРОВАТЬ ПО
 	|	УдержанияРаботниковОрганизации.ФизЛицо,
 	|	УдержанияРаботниковОрганизации.ВидРасчета,
 	|	УдержанияРаботниковОрганизации.ДокументОснование";

	Запрос.Текст = СведенияОбУдержанияхСрезТекст;
	Запрос.Выполнить();
	СведенияОбУдержанияхСрезТекст = "ВТ_УдержанияРаботниковОрганизаций";	
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТ_СведенияОбУдержанияхСрез";

	// ДанныеУчета
	//	Поля:
	//		ФизЛицо
	//		ДокументОснование
	//		СпособОтраженияВБухучете
	//		СчетДт
	//		СчетКт
	//		СубконтоДт1
	//		СубконтоДт2
	//		СубконтоДт3
	//		СубконтоКт1
	//		СубконтоКт2
	//		СубконтоКт3
	//		СчетДтНУ
	//		СчетКтНУ
	//		Результат
	// Описание:
	// таблица строится по регистру расчета удержаний с присоединением данных о бухучете
	//
	ДанныеУчетаТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УдержанияРаботниковОрганизации.ФизЛицо КАК ФизЛицо,
	|	УдержанияРаботниковОрганизации.ДокументОснование КАК ДокументОснование,
	|	УдержанияРаботниковОрганизации.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
	|   УдержанияРаботниковОрганизации.СчетДт,
	|	УдержанияРаботниковОрганизации.СчетКт,
	|	УдержанияРаботниковОрганизации.СубконтоДт1,
	|	УдержанияРаботниковОрганизации.СубконтоДт2,
	|	УдержанияРаботниковОрганизации.СубконтоДт3,
	|	УдержанияРаботниковОрганизации.СубконтоКт1,
	|	УдержанияРаботниковОрганизации.СубконтоКт2,
	|	УдержанияРаботниковОрганизации.СубконтоКт3,
	// - НУ -
	|   УдержанияРаботниковОрганизации.СчетДтНУ,
	|	УдержанияРаботниковОрганизации.СчетКтНУ,
	|	УдержанияРаботниковОрганизации.СубконтоДтНУ1,
	|	УдержанияРаботниковОрганизации.СубконтоДтНУ2,
	|	УдержанияРаботниковОрганизации.СубконтоДтНУ3,
	|	УдержанияРаботниковОрганизации.СубконтоКтНУ1,
	|	УдержанияРаботниковОрганизации.СубконтоКтНУ2,
	|	УдержанияРаботниковОрганизации.СубконтоКтНУ3,
	// - НУ -
	|	УдержанияРаботниковОрганизации.СтруктурноеПодразделение,
	|	УдержанияРаботниковОрганизации.Результат КАК Результат,
	|	СоответствиеСчетовБУиНУДт.СчетНУ КАК СчетДтНУСоответствие,
	|	СоответствиеСчетовБУиНУКт.СчетНУ КАК СчетКтНУСоответствие
 	|
 	|ПОМЕСТИТЬ ВТ_ДанныеУчетаУдержания
	|ИЗ
	|	(ВЫБРАТЬ
 	|		УдержанияРаботниковОрганизации.ФизЛицо КАК ФизЛицо,
 	|		УдержанияРаботниковОрганизации.ДокументОснование КАК ДокументОснование,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете
	|		КОНЕЦ КАК СпособОтраженияВБухучете,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СчетДт
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СчетДт
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СчетДт
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СчетДт
	|		КОНЕЦ КАК СчетДт,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СчетКт
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СчетКт
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СчетКт
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СчетКт
	|		КОНЕЦ КАК СчетКт,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СубконтоДт1
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СубконтоДт1
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт1
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт1
	|		КОНЕЦ КАК СубконтоДт1,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СубконтоДт2
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СубконтоДт2
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт2
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт2
	|		КОНЕЦ КАК СубконтоДт2,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СубконтоДт3
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СубконтоДт3
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДт3
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоДт3
	|		КОНЕЦ КАК СубконтоДт3,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СубконтоКт1
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СубконтоКт1
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт1
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт1
	|		КОНЕЦ КАК СубконтоКт1,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СубконтоКт2
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СубконтоКт2
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт2
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт2
	|		КОНЕЦ КАК СубконтоКт2,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СубконтоКт3
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СубконтоКт3
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКт3
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоКт3
	|		КОНЕЦ КАК СубконтоКт3,
	// - НУ - 
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СчетДтНУ
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СчетДтНУ
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СчетДтНУ
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СчетДтНУ
	|		КОНЕЦ КАК СчетДтНУ,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СчетКтНУ
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СчетКтНУ
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СчетКтНУ
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СчетКтНУ
	|		КОНЕЦ КАК СчетКтНУ,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ1
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СубконтоДтНУ1
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ1
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ1
	|		КОНЕЦ КАК СубконтоДтНУ1,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ2
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СубконтоДтНУ2
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ2
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ2
	|		КОНЕЦ КАК СубконтоДтНУ2,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СубконтоДтНУ3
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СубконтоДтНУ3
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоДтНУ3
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоДтНУ3
	|		КОНЕЦ КАК СубконтоДтНУ3,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ1
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СубконтоКтНУ1
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ1
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ1
	|		КОНЕЦ КАК СубконтоКтНУ1,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ2
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СубконтоКтНУ2
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ2
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ2
	|		КОНЕЦ КАК СубконтоКтНУ2,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.СпособОтраженияВБухучете.СубконтоКтНУ3
	|			КОГДА ВЫБОР
	|				КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|					ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения
	|				ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете
	|				КОНЕЦ <> &парамПустойСпособБУ
	|				ТОГДА ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|							И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения < УдержанияРаботниковОрганизации.БазовыйПериодКонец
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучетеЗавершения.СубконтоКтНУ3
	|					ИНАЧЕ ПлановыеУдержанияРаботниковОрганизаций.СпособОтраженияВБухучете.СубконтоКтНУ3
	|					КОНЕЦ
	|			КОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				ТОГДА УдержанияРаботниковОрганизации.ВидРасчета.СпособОтраженияВБухучете.СубконтоКтНУ3
	|		КОНЕЦ КАК СубконтоКтНУ3,
	// - НУ -
	|		                                 "+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|		УдержанияРаботниковОрганизации.Результат КАК Результат
	|	ИЗ
 	|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации";

 	Если МенеджерВТ <> Неопределено Тогда
 	
 	ДанныеУчетаТекст = ДанныеУчетаТекст + "
 	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
 	|		ПО УдержанияРаботниковОрганизации.ФизЛицо = СписокФизЛиц.ФизЛицо";
 	
 	КонецЕсли;
 	
	Если мОтображатьСтруктурныеПодразделения Тогда
		ДанныеУчетаТекст = ДанныеУчетаТекст+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,Организация=&парамГоловнаяОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСП
		|			ПО УдержанияРаботниковОрганизации.ФизЛицо = УчетВзаиморасчетовПоСП.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
 	ДанныеУчетаТекст = ДанныеУчетаТекст + "
 	|  	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ "+ СведенияОбУдержанияхСрезТекст +" КАК СведенияОбУдержанияхСрез
	|			ПО СведенияОбУдержанияхСрез.ФизЛицо = УдержанияРаботниковОрганизации.ФизЛицо 
	|				И СведенияОбУдержанияхСрез.ВидРасчета = УдержанияРаботниковОрганизации.ВидРасчета
	|				И СведенияОбУдержанияхСрез.ДокументОснование = УдержанияРаботниковОрганизации.ДокументОснование
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержанияРаботниковОрганизаций
 	|			ПО ПлановыеУдержанияРаботниковОрганизаций.ФизЛицо = СведенияОбУдержанияхСрез.ФизЛицо
	|				И ПлановыеУдержанияРаботниковОрганизаций.ВидРасчета = СведенияОбУдержанияхСрез.ВидРасчета
	|				И ПлановыеУдержанияРаботниковОрганизаций.Организация = &парамГоловнаяОрганизация
	|				И ВЫБОР
	|					КОГДА НЕ(СведенияОбУдержанияхСрез.ДокументОснование.Ссылка ЕСТЬ NULL)
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование = СведенияОбУдержанияхСрез.ДокументОснование
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|			И СведенияОбУдержанияхСрез.Период = ПлановыеУдержанияРаботниковОрганизаций.Период	
 	|			И (ВЫБОР
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <> &НачальнаяДата
	|						И ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения <= УдержанияРаботниковОрганизации.БазовыйПериодНачало
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.ДействиеЗавершения <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|					КОГДА ПлановыеУдержанияРаботниковОрганизаций.Период <= УдержанияРаботниковОрганизации.БазовыйПериодНачало
	|						ТОГДА ПлановыеУдержанияРаботниковОрганизаций.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ)
	|  	
	|	ГДЕ 
 	|		УдержанияРаботниковОрганизации.ОбособленноеПодразделение = &парамОрганизация И
 	|		УдержанияРаботниковОрганизации.ПериодРегистрации = &парамНачалоМесяца И
 	|		УдержанияРаботниковОрганизации.Результат <> 0) КАК УдержанияРаботниковОрганизации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
	|					&парамКонецМесяца,
	|					СчетКоррБУ = &парамПустойСчет
	|					И СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	|					И СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	|					И СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	|					И ВидЗатратНУ = НЕОПРЕДЕЛЕНО) КАК СоответствиеСчетовБУиНУДт
	|		ПО УдержанияРаботниковОрганизации.СчетДт = СоответствиеСчетовБУиНУДт.СчетБУ
	|			И СоответствиеСчетовБУиНУДт.Учитывается
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
	|					&парамКонецМесяца,
	|					СчетКоррБУ = &парамПустойСчет
	|					И СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	|					И СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	|					И СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	|					И ВидЗатратНУ = НЕОПРЕДЕЛЕНО) КАК СоответствиеСчетовБУиНУКт
	|		ПО УдержанияРаботниковОрганизации.СчетКт = СоответствиеСчетовБУиНУКт.СчетБУ
	|			И СоответствиеСчетовБУиНУКт.Учитывается
 	|";

	Запрос.Текст = ДанныеУчетаТекст;
	Запрос.Выполнить();
	ДанныеУчетаТекст = "ВТ_ДанныеУчетаУдержания";
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТ_ДанныеУчетаУдержания";

	// ОтражениеВБухучете
	//	Поля:
	//		СчетДт,
	//		СчетКт,
	//		СубконтоДт1,
	//		СубконтоДт2,
	//		СубконтоДт3,
	//		СубконтоКт1,
	//		СубконтоКт2,
	//		СубконтоКт3,
	//		СчетДтНУ,
	//		СчетКтНУ,
	//		Результат,
	//		Контрагент,
	//		ФизЛицо,
	//		НомерСубконтоРаботникиДт,
 	//		НомерСубконтоРаботникиКт,
 	//		НомерСубконтоКонтрагентыКт 	
	//

	ОтражениеВБухучетеТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеУчета.СчетДт,
	|	ДанныеУчета.СчетКт,
	|	ДанныеУчета.СубконтоДт1,
	|	ДанныеУчета.СубконтоДт2,
	|	ДанныеУчета.СубконтоДт3,
	|	ДанныеУчета.СубконтоКт1,
	|	ДанныеУчета.СубконтоКт2,
	|	ДанныеУчета.СубконтоКт3,
	// - НУ -
	|	ДанныеУчета.СчетДтНУ,
	|	ДанныеУчета.СчетКтНУ,
	|	ДанныеУчета.СубконтоДтНУ1,
	|	ДанныеУчета.СубконтоДтНУ2,
	|	ДанныеУчета.СубконтоДтНУ3,
	|	ДанныеУчета.СубконтоКтНУ1,
	|	ДанныеУчета.СубконтоКтНУ2,
	|	ДанныеУчета.СубконтоКтНУ3,
	// - НУ -
	|	ДанныеУчета.СтруктурноеПодразделение,
	|	ДанныеУчета.СчетДтНУСоответствие,
	|	ДанныеУчета.СчетКтНУСоответствие,
	|	ДанныеУчета.Результат,	
	|	ДанныеУчета.ДокументОснование.Получатель Как Контрагент,
	|	ДанныеУчета.ФизЛицо,
	// - НУ -
	|	ЕСТЬNULL(ВидыСубконтоСотрудникиРаботникиДтНУ.НомерСтроки, 0) КАК НомерСубконтоСотрудникиРаботникиДтНУ,
 	|	ЕСТЬNULL(ВидыСубконтоСотрудникиРаботникиКтНУ.НомерСтроки, 0) КАК НомерСубконтоСотрудникиРаботникиКтНУ,
	|	ЕСТЬNULL(ВидыСубконтоКонтрагентыКтНУ.НомерСтроки, 0) КАК НомерСубконтоКонтрагентыДтНУ,
 	|	ЕСТЬNULL(ВидыСубконтоКонтрагентыДтНУ.НомерСтроки, 0) КАК НомерСубконтоКонтрагентыКтНУ,
	// - НУ -
	|	ЕСТЬNULL(ВидыСубконтоСотрудникиРаботникиДт.НомерСтроки, 0) КАК НомерСубконтоСотрудникиРаботникиДт,
 	|	ЕСТЬNULL(ВидыСубконтоСотрудникиРаботникиКт.НомерСтроки, 0) КАК НомерСубконтоСотрудникиРаботникиКт,
 	|	ЕСТЬNULL(ВидыСубконтоКонтрагентыКт.НомерСтроки, 0) КАК НомерСубконтоКонтрагентыКт
	|ИЗ
	|	"+ ДанныеУчетаТекст +" КАК ДанныеУчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоСотрудникиРаботникиДт
	|		ПО (ДанныеУчета.СчетДт <> &парамПустойСчет) 
	|			И ДанныеУчета.СчетДт = ВидыСубконтоСотрудникиРаботникиДт.Ссылка 
	|			И (ВидыСубконтоСотрудникиРаботникиДт.ВидСубконто = &парамВидСубконтоРаботникиОрганизаций)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоСотрудникиРаботникиКт
	|		ПО (ДанныеУчета.СчетКт <> &парамПустойСчет) 
	|			И ДанныеУчета.СчетКт = ВидыСубконтоСотрудникиРаботникиКт.Ссылка 
	|			И (ВидыСубконтоСотрудникиРаботникиКт.ВидСубконто = &парамВидСубконтоРаботникиОрганизаций)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоКонтрагентыКт
	|		ПО (ДанныеУчета.СчетКт <> &парамПустойСчет) 
	|			И ДанныеУчета.СчетКт = ВидыСубконтоКонтрагентыКт.Ссылка 
	|			И (ВидыСубконтоКонтрагентыКт.ВидСубконто = &парамВидСубконтоКонтрагенты)
	// - НУ - 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоСотрудникиРаботникиДтНУ
	|		ПО (ДанныеУчета.СчетДтНУ <> &парамПустойСчет) 
	|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоСотрудникиРаботникиДтНУ.Ссылка 
	|			И (ВидыСубконтоСотрудникиРаботникиДт.ВидСубконто = &парамВидСубконтоРаботникиОрганизаций)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоСотрудникиРаботникиКтНУ
	|		ПО (ДанныеУчета.СчетКтНУ <> &парамПустойСчет) 
	|			И ДанныеУчета.СчетКтНУ = ВидыСубконтоСотрудникиРаботникиКт.Ссылка 
	|			И (ВидыСубконтоСотрудникиРаботникиКтНУ.ВидСубконто = &парамВидСубконтоРаботникиОрганизаций)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоКонтрагентыДтНУ
	|		ПО (ДанныеУчета.СчетДтНУ <> &парамПустойСчет) 
	|			И ДанныеУчета.СчетДтНУ = ВидыСубконтоКонтрагентыДтНУ.Ссылка 
	|			И (ВидыСубконтоКонтрагентыДтНУ.ВидСубконто = &парамВидСубконтоКонтрагенты)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоКонтрагентыКтНУ
	|		ПО (ДанныеУчета.СчетКтНУ <> &парамПустойСчет) 
	|			И ДанныеУчета.СчетКтНУ = ВидыСубконтоКонтрагентыКтНУ.Ссылка 
	|			И (ВидыСубконтоКонтрагентыКтНУ.ВидСубконто = &парамВидСубконтоКонтрагенты)
	// - НУ -
	|
	|ГДЕ
	|	ДанныеУчета.СпособОтраженияВБухучете <> &парамСпособНеОтражать
	|";

	Запрос.Текст = ОтражениеВБухучетеТекст;
	
	Выборка = Запрос.Выполнить().Выбрать();
    
	// переносим во временную таблицу, выполням автоподставновку субконто
    мПромежуточнаяТаблица.Очистить();
	Пока Выборка.Следующий() Цикл

		Строка = мПромежуточнаяТаблица.Добавить();
		Строка.ФизЛицо 			= Выборка.ФизЛицо;
		Строка.СчетДт 			= Выборка.СчетДт;
		Строка.СчетКт 			= Выборка.СчетКт;
		Строка.СчетДтНУ			= ?(Выборка.СчетДтНУ.Пустая(),Выборка.СчетДтНУСоответствие,Выборка.СчетДтНУ);
		Строка.СчетКтНУ 		= ?(Выборка.СчетКтНУ.Пустая(),Выборка.СчетКтНУСоответствие,Выборка.СчетКтНУ);
		Для Сч = 1 По 3 Цикл
			Если НЕ ЗначениеЗаполнено(Выборка["СубконтоДт"+Сч]) Тогда
				Если Выборка.НомерСубконтоСотрудникиРаботникиДт = Сч Тогда
					Строка["СубконтоДт"+Сч] = Выборка.ФизЛицо;
				КонецЕсли;
			Иначе
				Строка["СубконтоДт"+Сч] = Выборка["СубконтоДт"+Сч];
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Выборка["СубконтоДтНУ"+Сч]) Тогда
				Если Выборка.НомерСубконтоСотрудникиРаботникиДтНУ = Сч Тогда
					Строка["СубконтоДтНУ"+Сч] = Выборка.ФизЛицо;
				ИначеЕсли Выборка.НомерСубконтоКонтрагентыДтНУ = Сч Тогда
					Строка["СубконтоДтНУ"+Сч] = Выборка.Контрагент;
				КонецЕсли;
			Иначе
				Строка["СубконтоДтНУ"+Сч] = Выборка["СубконтоДтНУ"+Сч];
			КонецЕсли;
			
			
			//ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, Сч, Строка["СубконтоДт"+Сч], "СубконтоДтНУ");
			
			Если НЕ ЗначениеЗаполнено(Выборка["СубконтоКт"+Сч]) Тогда
				Если Выборка.НомерСубконтоКонтрагентыКт = Сч Тогда
					Строка["СубконтоКт"+Сч] = Выборка.Контрагент;
				ИначеЕсли Выборка.НомерСубконтоСотрудникиРаботникиКт = Сч Тогда
					Строка["СубконтоКт"+Сч] = Выборка.ФизЛицо;
				КонецЕсли;
			Иначе
				Строка["СубконтоКт"+Сч] = Выборка["СубконтоКт"+Сч];
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Выборка["СубконтоКтНУ"+Сч]) Тогда
				Если Выборка.НомерСубконтоСотрудникиРаботникиКтНУ = Сч Тогда
					Строка["СубконтоКтНУ"+Сч] = Выборка.ФизЛицо;
				ИначеЕсли Выборка.НомерСубконтоКонтрагентыКтНУ = Сч Тогда
					Строка["СубконтоКтНУ"+Сч] = Выборка.Контрагент;
				КонецЕсли;
			Иначе
				Строка["СубконтоКтНУ"+Сч] = Выборка["СубконтоКтНУ"+Сч];
			КонецЕсли;
			//ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетКт, Строка.СчетКтНУ, Сч, Строка["СубконтоКт"+Сч], "СубконтоКтНУ");
			
		КонецЦикла;		
		Строка.Сумма			= Выборка.Результат;
		Если мОтображатьСтруктурныеПодразделения Тогда
			// Поскольку список работников формируется по СП шапки, делаем вывод что это СП является основным местом работы сотрудника
			Строка.СтруктурноеПодразделениеДт	= Выборка.СтруктурноеПодразделение;
			Строка.СтруктурноеПодразделениеКт	= Выборка.СтруктурноеПодразделение;
		КонецЕсли;

	КонецЦикла;

	// переносим в табличную часть документа
	ПеренестиОтражениеВУчетеИзПромежуточнойТаблицы();
	
	#КонецОбласти
	
	#Область ОпределениеПодразделенияНаконецМесяца

	//////////////////////////////////////////////////////////////////////////////////////////////////
	// определение подразделения, в котором числится работник на конец месяца
	МестаРаботыТекст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФизическиеЛица.Ссылка КАК ФизЛицо,
	|	ЕСТЬNULL(РаботникиОрганизации.ПодразделениеОрганизации, ДоговорникиОрганизации.ПодразделениеОрганизации) КАК ПодразделениеОрганизации,
	|	УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СпособОтраженияВБухучете
	|
	|ПОМЕСТИТЬ ВТМестаРаботы
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	МестаРаботыТекст = МестаРаботыТекст + "
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|		ПО ФизическиеЛица.Ссылка = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	МестаРаботыТекст = МестаРаботыТекст + "
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|			РаботникиОрганизации.ПодразделениеОрганизации
	|		ИЗ 
	|			(ВЫБРАТЬ
	|				РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|				МАКСИМУМ(РаботникиОрганизации.Период) КАК Период
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|			ГДЕ
	|				РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
	|				И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|				И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство)
	|				И РаботникиОрганизации.Период <= &парамКонецМесяца
	|				И РаботникиОрганизации.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиОрганизации.Сотрудник.ФизЛицо) КАК ДатыПоследнихНазначений
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|				ПО ДатыПоследнихНазначений.ФизЛицо = РаботникиОрганизации.Сотрудник.ФизЛицо
	|					И ДатыПоследнихНазначений.Период = РаботникиОрганизации.Период
	|					И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
	|					И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|					И РаботникиОрганизации.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|					И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство)) КАК РаботникиОрганизации
	|		ПО ФизическиеЛица.Ссылка = РаботникиОрганизации.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							ДоговорникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|							МАКСИМУМ(ДоговорникиОрганизации.ПодразделениеОрганизации) КАК ПодразделениеОрганизации
	|						ИЗ
	|							РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
	|							ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|													ДоговорникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|													МАКСИМУМ(ДоговорникиОрганизации.ДатаНачала) КАК ДатаНачала
	|												ИЗ
	|													РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
	|												ГДЕ
	|													ДоговорникиОрганизации.Организация = &парамОрганизация
	|													И ДоговорникиОрганизации.ДатаНачала <= &парамКонецМесяца
	|												СГРУППИРОВАТЬ ПО
	|													ДоговорникиОрганизации.Сотрудник.ФизЛицо) КАК ДатыПоследнихДоговоров
	|								ПО ДатыПоследнихДоговоров.ФизЛицо = ДоговорникиОрганизации.Сотрудник.ФизЛицо
	|									И ДатыПоследнихДоговоров.ДатаНачала = ДоговорникиОрганизации.ДатаНачала
	|						ГДЕ
	|							ДоговорникиОрганизации.Организация = &парамОрганизация
	|						СГРУППИРОВАТЬ ПО
	|							ДоговорникиОрганизации.Сотрудник.ФизЛицо) КАК ДоговорникиОрганизации
	|		ПО ФизическиеЛица.Ссылка = ДоговорникиОрганизации.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.СрезПоследних(&парамКонецМесяца) КАК УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации
	|		ПО ЕСТЬNULL(РаботникиОрганизации.ПодразделениеОрганизации, ДоговорникиОрганизации.ПодразделениеОрганизации) = УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации.ПодразделениеОрганизации
	|
	|ГДЕ
	|	НЕ(РаботникиОрганизации.ФизЛицо ЕСТЬ NULL)
	|	ИЛИ НЕ (ДоговорникиОрганизации.ФизЛицо ЕСТЬ NULL)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическиеЛица.Ссылка
	|";

	Запрос.Текст = МестаРаботыТекст;
	Запрос.Выполнить();
	МестаРаботыТекст = "ВТМестаРаботы";
	
	#КонецОбласти

	#Область ОпределениеОсновногоСпособаОтражения
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// определение основного способа отражения зарплаты работника в бух.учете
	
	ОсновнойСпособОтраженияТекст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФизическиеЛица.Ссылка КАК ФизЛицо,
	| 	ВЫБОР 
	|		КОГДА НЕ(ОсновныеНачисления.СпособОтраженияВБухучете ЕСТЬ NULL) 
	|				И ОсновныеНачисления.ПериодДействияНачало >= НАЧАЛОПЕРИОДА(&парамКонецМесяца, МЕСЯЦ)
	|			ТОГДА ОсновныеНачисления.СпособОтраженияВБухучете
	| 		КОГДА НЕ(РеглУчетПлановыхНачислений.СпособОтраженияВБухучете ЕСТЬ NULL) 
	| 				И РеглУчетПлановыхНачислений.СпособОтраженияВБухучете <> &парамПустойСпособБУ 
	| 			ТОГДА РеглУчетПлановыхНачислений.СпособОтраженияВБухучете 
	|		КОГДА НЕ(УчетОсновногоЗаработка.СпособОтраженияВБухучете ЕСТЬ NULL)
	|				И УчетОсновногоЗаработка.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|			ТОГДА УчетОсновногоЗаработка.СпособОтраженияВБухучете
	| 		КОГДА НЕ(ПлановыеНачисления.ВидРасчета.СпособОтраженияВБухучете ЕСТЬ NULL) 
	| 				И ПлановыеНачисления.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ 
	| 			ТОГДА ПлановыеНачисления.ВидРасчета.СпособОтраженияВБухучете 
	|		КОГДА НЕ(ДоговорникиОрганизации.ВидРасчета.СпособОтраженияВБухучете ЕСТЬ NULL)
	|				И ДоговорникиОрганизации.ВидРасчета.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|			ТОГДА ДоговорникиОрганизации.ВидРасчета.СпособОтраженияВБухучете
	|		КОГДА НЕ(ОсновныеНачисления.СпособОтраженияВБухучете ЕСТЬ NULL)
	|			ТОГДА ОсновныеНачисления.СпособОтраженияВБухучете
	| 		ИНАЧЕ &парамСпособПоУмолчанию 
	| 	КОНЕЦ КАК СпособОтраженияВБухучете 
	|
	|ПОМЕСТИТЬ ВТОсновнойСпособОтражения
	|ИЗ 
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	ОсновнойСпособОтраженияТекст = ОсновнойСпособОтраженияТекст + "
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|		ПО ФизическиеЛица.Ссылка = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	ОсновнойСпособОтраженияТекст = ОсновнойСпособОтраженияТекст + "
	|
	| 	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ 
	| 		РеглУчетПлановыхНачислений.Сотрудник.ФизЛицо КАК ФизЛицо, 
	| 		МАКСИМУМ(РеглУчетПлановыхНачислений.СпособОтраженияВБухучете) КАК СпособОтраженияВБухучете
	| 	ИЗ 
	| 		(ВЫБРАТЬ 
	| 			РеглУчетПлановыхНачислений.Сотрудник.Физлицо КАК ФизЛицо, 
	| 			МАКСИМУМ(РеглУчетПлановыхНачислений.Период) КАК Период 
	| 		ИЗ 
	| 			РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачислений 
	| 		ГДЕ 
	| 			РеглУчетПлановыхНачислений.Организация = &парамГоловнаяОрганизация 
	| 			И (РеглУчетПлановыхНачислений.Сотрудник.Ссылка ЕСТЬ NULL ИЛИ РеглУчетПлановыхНачислений.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство) 
	| 			И РеглУчетПлановыхНачислений.ВидРасчета.ЗачетОтработанногоВремени 
	|			И РеглУчетПлановыхНачислений.ВидРасчета.ЗачетНормыВремени
	| 			И РеглУчетПлановыхНачислений.Период <= &парамКонецМесяца 
	| 		СГРУППИРОВАТЬ ПО 
	| 			РеглУчетПлановыхНачислений.Сотрудник.Физлицо) КАК ПоследниеДатыРеглУчетаПлановыхНачислений 
	| 
	| 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеглУчетПлановыхНачисленийРаботниковОрганизаций КАК РеглУчетПлановыхНачислений 
	| 		ПО ПоследниеДатыРеглУчетаПлановыхНачислений.ФизЛицо = РеглУчетПлановыхНачислений.Сотрудник.ФизЛицо 
	| 			И ПоследниеДатыРеглУчетаПлановыхНачислений.Период = РеглУчетПлановыхНачислений.Период 
	| 			И РеглУчетПлановыхНачислений.Организация = &парамГоловнаяОрганизация 
	| 			И (РеглУчетПлановыхНачислений.Сотрудник.Ссылка ЕСТЬ NULL ИЛИ РеглУчетПлановыхНачислений.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство) 
	| 			И РеглУчетПлановыхНачислений.ВидРасчета.ЗачетОтработанногоВремени 
	| 			И РеглУчетПлановыхНачислений.ВидРасчета.ЗачетНормыВремени 
	|
	|	СГРУППИРОВАТЬ ПО
	| 		РеглУчетПлановыхНачислений.Сотрудник.ФизЛицо) КАК РеглУчетПлановыхНачислений 
	|	ПО ФизическиеЛица.Ссылка = РеглУчетПлановыхНачислений.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		УчетОсновногоЗаработка.Сотрудник.ФизЛицо КАК ФизЛицо,
	|		МАКСИМУМ(УчетОсновногоЗаработка.СпособОтраженияВБухучете) КАК СпособОтраженияВБухучете
	|	ИЗ
	|		(ВЫБРАТЬ
	|			УчетОсновногоЗаработка.Сотрудник.ФизЛицо КАК ФизЛицо,
	|			МАКСИМУМ(УчетОсновногоЗаработка.Период) КАК Период
	|		ИЗ
	|			РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетОсновногоЗаработка
	|		ГДЕ
	|			УчетОсновногоЗаработка.Организация = &парамГоловнаяОрганизация
	|			И (УчетОсновногоЗаработка.Сотрудник.Ссылка ЕСТЬ NULL ИЛИ УчетОсновногоЗаработка.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство)
	|			И УчетОсновногоЗаработка.Период <= &парамКонецМесяца
	|		СГРУППИРОВАТЬ ПО
	|			УчетОсновногоЗаработка.Сотрудник.ФизЛицо) КАК ПоследниеДатыУчетаОсновногоЗаработка
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете КАК УчетОсновногоЗаработка
	|			ПО ПоследниеДатыУчетаОсновногоЗаработка.ФизЛицо = УчетОсновногоЗаработка.Сотрудник.ФизЛицо
	|				И ПоследниеДатыУчетаОсновногоЗаработка.Период = УчетОсновногоЗаработка.Период
	|				И УчетОсновногоЗаработка.Организация = &парамГоловнаяОрганизация
	|				И (УчетОсновногоЗаработка.Сотрудник.Ссылка ЕСТЬ NULL ИЛИ УчетОсновногоЗаработка.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство)
	|
	|	СГРУППИРОВАТЬ ПО
	|		УчетОсновногоЗаработка.Сотрудник.ФизЛицо) КАК УчетОсновногоЗаработка
	| 	ПО ФизическиеЛица.Ссылка = УчетОсновногоЗаработка.ФизЛицо
	| 
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ 
	| 		ПлановыеНачисления.Сотрудник.ФизЛицо КАК ФизЛицо, 
	| 		МАКСИМУМ(ПлановыеНачисления.ВидРасчета) КАК ВидРасчета
	| 	ИЗ 
	| 		(ВЫБРАТЬ 
	| 			ПлановыеНачисления.Сотрудник.ФизЛицо КАК ФизЛицо, 
	|			МАКСИМУМ(ПлановыеНачисления.Период) КАК Период 
	| 		ИЗ 
	| 			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления 
	| 		ГДЕ 
	| 			ПлановыеНачисления.Организация = &парамГоловнаяОрганизация 
	| 			И (ПлановыеНачисления.Сотрудник.Ссылка ЕСТЬ NULL ИЛИ ПлановыеНачисления.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство) 
	| 			И (ПлановыеНачисления.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО)
	|			И ПлановыеНачисления.ВидРасчета <> НЕОПРЕДЕЛЕНО
	| 			И ПлановыеНачисления.Период <= &парамКонецМесяца 
	| 		СГРУППИРОВАТЬ ПО 
	| 			ПлановыеНачисления.Сотрудник.ФизЛицо) КАК ПоследниеДатыПлановыхНачислений 
	| 
	| 		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления 
	| 			ПО ПоследниеДатыПлановыхНачислений.ФизЛицо = ПлановыеНачисления.Сотрудник.ФизЛицо 
	| 				И ПоследниеДатыПлановыхНачислений.Период = ПлановыеНачисления.Период 
	| 				И ПлановыеНачисления.Организация = &парамОрганизация 
	| 				И (ПлановыеНачисления.Сотрудник.Ссылка ЕСТЬ NULL ИЛИ ПлановыеНачисления.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство) 
	| 				И (ПлановыеНачисления.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО)
	|				И ПлановыеНачисления.ВидРасчета <> НЕОПРЕДЕЛЕНО
	|
	|	СГРУППИРОВАТЬ ПО
	| 		ПлановыеНачисления.Сотрудник.ФизЛицо) КАК ПлановыеНачисления 
	|	ПО ФизическиеЛица.Ссылка = ПлановыеНачисления.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		ДоговорникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|		МАКСИМУМ(ДоговорникиОрганизации.Сотрудник.ВидРасчета) КАК ВидРасчета
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ДоговорникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|			МАКСИМУМ(ДоговорникиОрганизации.ДатаНачала) КАК ДатаНачала
	|		ИЗ
	|			РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
	|		ГДЕ
	|			ДоговорникиОрганизации.Организация = &парамОрганизация
	|			И ДоговорникиОрганизации.ДатаНачала <= &парамКонецМесяца
	|			И ДоговорникиОрганизации.ДатаОкончания >= &парамНачалоМесяца
	|	
	|		СГРУППИРОВАТЬ ПО
	|			ДоговорникиОрганизации.Сотрудник.ФизЛицо) КАК ПоследниеДатыДоговоровСФизЛицам
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
	|			ПО ДоговорникиОрганизации.Сотрудник.ФизЛицо = ПоследниеДатыДоговоровСФизЛицам.ФизЛицо
	|				И ДоговорникиОрганизации.ДатаНачала = ПоследниеДатыДоговоровСФизЛицам.ДатаНачала
	|				И ДоговорникиОрганизации.Организация = &парамОрганизация
	|
	|	СГРУППИРОВАТЬ ПО
	|		ДоговорникиОрганизации.Сотрудник.ФизЛицо) КАК ДоговорникиОрганизации
	|	ПО ФизическиеЛица.Ссылка = ДоговорникиОрганизации.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|		ОсновныеНачисления.ФизЛицо,
	|		ОсновныеНачисления.ПериодДействияНачало,
	|		МАКСИМУМ(ОсновныеНачисления.СпособОтраженияВБухучете) КАК СпособОтраженияВБухучете
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ОсновныеНачисления.ФизЛицо,
	|			МАКСИМУМ(ОсновныеНачисления.ПериодДействияНачало) КАК ПериодДействияНачало
	|		ИЗ
	|			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|		ГДЕ
	|			ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
	|			И ОсновныеНачисления.ПериодДействияНачало <= &парамКонецМесяца
	|			И ОсновныеНачисления.ПериодРегистрации <= &парамКонецМесяца
	|			И ОсновныеНачисления.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|			И ОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени
	|			И ОсновныеНачисления.ВидРасчета.ЗачетНормыВремени
	|			И (ОсновныеНачисления.Сотрудник.Ссылка ЕСТЬ NULL ИЛИ ОсновныеНачисления.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство)
	|		СГРУППИРОВАТЬ ПО
	|			ОсновныеНачисления.ФизЛицо) КАК ПоследниеДатыОсновныхНачислений
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|			ПО ПоследниеДатыОсновныхНачислений.ФизЛицо = ОсновныеНачисления.ФизЛицо
	|				И ПоследниеДатыОсновныхНачислений.ПериодДействияНачало = ОсновныеНачисления.ПериодДействияНачало
	|				И ОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
	|				И ОсновныеНачисления.ПериодРегистрации <= &парамКонецМесяца
	|				И ОсновныеНачисления.СпособОтраженияВБухучете <> &парамПустойСпособБУ
	|				И ОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени
	|				И ОсновныеНачисления.ВидРасчета.ЗачетНормыВремени
	|				И (ОсновныеНачисления.Сотрудник.Ссылка ЕСТЬ NULL ИЛИ ОсновныеНачисления.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство)
	|
	|	СГРУППИРОВАТЬ ПО
	|		ОсновныеНачисления.ФизЛицо,
	|		ОсновныеНачисления.ПериодДействияНачало) КАК ОсновныеНачисления
	|	ПО ФизическиеЛица.Ссылка = ОсновныеНачисления.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическиеЛица.Ссылка
	|";

	Запрос.Текст = ОсновнойСпособОтраженияТекст;
	Запрос.Выполнить();
	ОсновнойСпособОтраженияТекст = "ВТОсновнойСпособОтражения";
	
	#КонецОбласти
	
	
	#Область ОтражениеОПВ

	//////////////////////////////////////////////////////////////////////////////////////////////////
	// Отражение пенсионных взносов
	
	ОПВИсчисленныйТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	ВЫБОР
	|		КОГДА ОПВРасчетыСФондами.ПодразделениеОрганизации <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА ОПВРасчетыСФондами.ПодразделениеОрганизации
	|		ИНАЧЕ МестаРаботы.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ОПВРасчетыСФондами.ВидПлатежа,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА &парамСчетДтДляПени
	|		ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|	КОНЕЦ КАК СчетДтДляПени,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ1, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ КАК СубконтоДтДляПени1,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ2, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ КАК СубконтоДтДляПени2,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ3, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ КАК СубконтоДтДляПени3,
	|	ЕСТЬNULL(ВидСубконтоВидыСтатьиЗатратДляПени.НомерСтроки, 0) КАК НомерСубконтоВидыСтатьиЗатратДляПени,
	|	ЕСТЬNULL(ВидСубконтоПодразделенияДляПени.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДляПени,"+?(мОтображатьСтруктурныеПодразделения,"
	|	ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|	СУММА(ОПВРасчетыСФондами.Взнос) КАК Взнос
	|ИЗ
	|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	ОПВИсчисленныйТекст = ОПВИсчисленныйТекст + "
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|		ПО ОПВРасчетыСФондами.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
 	
	Если мОтображатьСтруктурныеПодразделения Тогда
		ОПВИсчисленныйТекст = ОПВИсчисленныйТекст+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,Организация=&парамГоловнаяОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСП
		|			ПО ОПВРасчетыСФондами.ФизЛицо = УчетВзаиморасчетовПоСП.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	ОПВИсчисленныйТекст = ОПВИсчисленныйТекст + "
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + МестаРаботыТекст + " КАК МестаРаботы
	|		ПО ОПВРасчетыСФондами.ФизЛицо = МестаРаботы.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетПениОПВиСО КАК РасчетПениОПВиСО
	|		ПО ОПВРасчетыСФондами.Регистратор = РасчетПениОПВиСО.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидСубконтоВидыСтатьиЗатратДляПени
	|		ПО ВидСубконтоВидыСтатьиЗатратДляПени.Ссылка = (ВЫБОР
	|															КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|																ТОГДА &парамСчетДтДляПени
	|															ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|														КОНЕЦ)
	|		   И ВидСубконтоВидыСтатьиЗатратДляПени.ВидСубконто = &парамВидСубконтоСтатьиЗатрат
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидСубконтоПодразделенияДляПени
	|		ПО ВидСубконтоПодразделенияДляПени.Ссылка = (ВЫБОР
	|															КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|																ТОГДА &парамСчетДтДляПени
	|															ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|														КОНЕЦ)
	|		   И ВидСубконтоПодразделенияДляПени.ВидСубконто = &парамВидСубконтоПодразделения
	|
	|ГДЕ 
	|	ОПВРасчетыСФондами.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица И
	|	ОПВРасчетыСФондами.Период >= &парамНачалоМесяца И 
	|	ОПВРасчетыСФондами.Период <= &парамКонецМесяца И 
	|	ОПВРасчетыСФондами.Организация = &парамОрганизация И
	|	ОПВРасчетыСФондами.ВидДвижения = &парамВидДвиженияПриход И
	|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтрокиИсчисление И
	|	ОПВРасчетыСФондами.Взнос <> 0 И
	|	НЕ ОПВРасчетыСФондами.Регистратор ССЫЛКА Документ.ОтражениеНалоговойОтчетностиВРеглУчете  
	|
	|СГРУППИРОВАТЬ ПО
	|	ОПВРасчетыСФондами.ФизЛицо,
	|	ВЫБОР
	|		КОГДА ОПВРасчетыСФондами.ПодразделениеОрганизации <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА ОПВРасчетыСФондами.ПодразделениеОрганизации
	|		ИНАЧЕ МестаРаботы.ПодразделениеОрганизации
	|	КОНЕЦ,
	|	ОПВРасчетыСФондами.ВидПлатежа,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА &парамСчетДтДляПени
	|		ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ1, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ2, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ3, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВидСубконтоВидыСтатьиЗатратДляПени.НомерСтроки, 0),"+?(мОтображатьСтруктурныеПодразделения,"
	|	ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+",
	|	ЕСТЬNULL(ВидСубконтоПодразделенияДляПени.НомерСтроки, 0)
	|";

	Запрос.Текст = ОПВИсчисленныйТекст;
	
	СчетДебета = ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоОплатеТруда;
	СчетДебетаНУ = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СчетДебета), , , КонецМесяца(ПериодРегистрации));
	
	СчетДебетаДляПени = ПланыСчетов.Типовой.АдминистративныеРасходы;	
	СчетДебетаДляПениНУ = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СчетДебетаДляПени), , , КонецМесяца(ПериодРегистрации));
	
	СчетКредита = Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы.СчетУчетаРасчетовСКонтрагентомБУ;
	Если НЕ ЗначениеЗаполнено(СчетКредита) Тогда
		СчетКредита = ПланыСчетов.Типовой.ОбязательстваПоПенсионнымОтчислениям;
	КонецЕсли;
	СчетКредитаНУ = ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНУОПВ(СчетКредита,КонецМесяца(ПериодРегистрации));
	Если НЕ ЗначениеЗаполнено(СчетКредитаНУ) Тогда
		СчетКредитаНУ = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СчетКредита), , , КонецМесяца(ПериодРегистрации));
	КонецЕсли;
		
	СтатьяЗатратПеняПоОПВ = Справочники.СтатьиЗатрат.ПеняПоОПВ;

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Строка = ОтражениеВУчете.Добавить();
		Строка.ФизЛицо = Выборка.ФизЛицо;
		
		// Ставим на разные счета затрат в зависимости от вида платежа
		Если Выборка.ВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.Налог
			 Или Выборка.ВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.НалогАкт 
			 Или Выборка.ВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.НалогСам Тогда
			Строка.СчетДт 		 = СчетДебета;
			Если ВедетсяУчетПоСотрудникам Тогда
				Строка.СубконтоДт1 	= Выборка.Физлицо;
			КонецЕсли;
			Строка.СчетДтНУ 	 = СчетДебетаНУ;
			Если ВедетсяУчетПоСотрудникам Тогда
				ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетДебета, СчетДебетаНУ, 1, Выборка.ФизЛицо, "СубконтоДтНУ");
				Строка.СубконтоДтНУ1 	= Выборка.Физлицо;
			КонецЕсли;
		Иначе // Пеня по ОПВ
			Строка.СчетДт			= Выборка.СчетДтДляПени;
			Строка.СчетДтНУ 		= ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", Выборка.СчетДтДляПени), , , КонецМесяца(ПериодРегистрации));
			
			// Статья затрат
			Если Выборка.НомерСубконтоВидыСтатьиЗатратДляПени <> 0 Тогда
				Если ЗначениеЗаполнено(Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоВидыСтатьиЗатратДляПени]) Тогда
					Строка["СубконтоДт" + Выборка.НомерСубконтоВидыСтатьиЗатратДляПени] = Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоВидыСтатьиЗатратДляПени];
				Иначе
					Строка["СубконтоДт" + Выборка.НомерСубконтоВидыСтатьиЗатратДляПени] = СтатьяЗатратПеняПоОПВ;
				КонецЕсли;
			КонецЕсли;
			
			// Подразделение
			Если Выборка.НомерСубконтоПодразделенияДляПени <> 0 Тогда
				Если ЗначениеЗаполнено(Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени]) Тогда
					Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени] = Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени];
				Иначе 
					Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени]= Выборка.ПодразделениеОрганизации;
				КонецЕсли;
			КонецЕсли;
			
			// Заполним оставшиеся субконто
			Для Ном = 1 По 3 Цикл
				Если НЕ ЗначениеЗаполнено(Строка["СубконтоДт" + Ном]) Тогда
					Строка["СубконтоДт" + Ном] = Выборка["СубконтоДтДляПени" + Ном];
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Строка.СчетКт 		= СчетКредита;
		Строка.СубконтоКт1 	= Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы;
		Строка.СубконтоКт2 	= Выборка.ВидПлатежа;
		Если ВедетсяУчетПоСотрудникам Тогда
			Строка.СубконтоКт3	= Выборка.Физлицо;		
		КонецЕсли;
		
		Строка.СчетКтНУ 	= СчетКредитаНУ;
		ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетКредита, СчетКредитаНУ, 1, Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы, "СубконтоКтНУ");
		ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетКредита, СчетКредитаНУ, 2, Выборка.ВидПлатежа, "СубконтоКтНУ");
		Если ВедетсяУчетПоСотрудникам Тогда
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетКредита, СчетКредитаНУ, 3, Выборка.Физлицо, "СубконтоКтНУ");   		
		КонецЕсли;
		
		Строка.Сумма		= Выборка.Взнос;
		Если мОтображатьСтруктурныеПодразделения Тогда
			Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
			Строка.СтруктурноеПодразделениеКт = Выборка.СтруктурноеПодразделение;
		КонецЕсли;
	КонецЦикла;	
	
	#КонецОбласти
	
	#Область ОтражениеОПВПоКонтрагентам
	
		
		//////////////////////////////////////////////////////////////////////////////////////////////////
		// Отражение пенсионных взносов по контрагентам
		
		ОПВИсчисленныйТекст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОПВРасчетыСФондами.Регистратор КАК Регистратор,
			|	ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
			|	ОПВРасчетыСФондами.СтруктурнаяЕдиница,
			|	ОПВРасчетыСФондами.ВидПлатежа,
			|	СУММА(ОПВРасчетыСФондами.Взнос) КАК Взнос
			|ПОМЕСТИТЬ ВТ_ОПВРасчетыСФондами
			|ИЗ
			|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
			|
			|";
		
		Если МенеджерВТ <> Неопределено Тогда
		
		ОПВИсчисленныйТекст = ОПВИсчисленныйТекст + "
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
			|		ПО ОПВРасчетыСФондами.ФизЛицо = СписокФизЛиц.ФизЛицо";
		
		КонецЕсли;
		
		ОПВИсчисленныйТекст = ОПВИсчисленныйТекст + "
			|
			|ГДЕ
			|	ОПВРасчетыСФондами.Период >= &парамНачалоМесяца И 
			|	ОПВРасчетыСФондами.Период <= &парамКонецМесяца И 
			|	ОПВРасчетыСФондами.Организация = &парамОрганизация И 
			|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтрокиИсчисление И
			|   НЕ ОПВРасчетыСФондами.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.ПениСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.ПениАкт)) И
			|	ОПВРасчетыСФондами.Взнос <> 0 И
			|	ОПВРасчетыСФондами.НеОтражатьВРеглУчете = ЛОЖЬ И
			|	ОПВРасчетыСФондами.ФизЛицо ССЫЛКА Справочник.Контрагенты 
			|
			|СГРУППИРОВАТЬ ПО
			|	ОПВРасчетыСФондами.Регистратор,
			|	ОПВРасчетыСФондами.ФизЛицо,
			|	ОПВРасчетыСФондами.СтруктурнаяЕдиница,
			|	ОПВРасчетыСФондами.ВидПлатежа,
			|	ОПВРасчетыСФондами.ПодразделениеОрганизации
			|;
			|
			// Получим данные отражения доходов контрагентов, 
			// счета учета доходов используем как счета Дт для отражения подоходного налога
			|/////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	БУДополнительныеНачисления.Сотрудник КАК Контрагент,
			|	БУДополнительныеНачисления.ФизЛицо,
			|	БУДополнительныеНачисления.ВидРасчета.ВидДохода КАК ВидДохода,
			|	БУДополнительныеНачисления.СчетКт КАК СчетДт,
			|	БУДополнительныеНачисления.СубконтоКт1 КАК СубконтоДт1,
			|	БУДополнительныеНачисления.СубконтоКт2 КАК СубконтоДт2,
			|	БУДополнительныеНачисления.СубконтоКт3 КАК СубконтоДт3,
			// - НУ - начало
			|	БУДополнительныеНачисления.СчетКтНУ КАК СчетДтНУ,
			|	БУДополнительныеНачисления.СубконтоКтНУ1 КАК СубконтоДтНУ1,
			|	БУДополнительныеНачисления.СубконтоКтНУ2 КАК СубконтоДтНУ2,
			|	БУДополнительныеНачисления.СубконтоКтНУ3 КАК СубконтоДтНУ3,
			// - НУ - конец
			// -КУФИБ-
			|		ВЫБОР КОГДА БУДополнительныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУДополнительныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ КАК СтруктурноеПодразделение,
			// -КУФИБ-
			|	СУММА(БУДополнительныеНачисления.Результат) КАК Результат
			|ПОМЕСТИТЬ ВТ_БУДоходыКонтрагентовОПВ
			|ИЗ
			|	РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
			|";
		
		Если МенеджерВТ <> Неопределено Тогда
		
		ОПВИсчисленныйТекст = ОПВИсчисленныйТекст + "
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
			|		ПО БУДополнительныеНачисления.Сотрудник = СписокФизЛиц.ФизЛицо";
		
		КонецЕсли;
		
		ОПВИсчисленныйТекст = ОПВИсчисленныйТекст + "
			|ГДЕ
			|	БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|	И БУДополнительныеНачисления.ПериодРегистрации = &парамНачалоМесяца
			|	И БУДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВ <> &парамНеОблагаетсяЦеликом
			|	И НЕ БУДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом
			|	И БУДополнительныеНачисления.Сотрудник ССЫЛКА Справочник.Контрагенты
			|
			|СГРУППИРОВАТЬ ПО
			|	БУДополнительныеНачисления.Сотрудник,
			|	БУДополнительныеНачисления.ФизЛицо,
			|	БУДополнительныеНачисления.ВидРасчета.ВидДохода,
			// -КУФИБ-
			|		ВЫБОР КОГДА БУДополнительныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУДополнительныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ,
			// -КУФИБ-
			// - НУ - начало
			|	БУДополнительныеНачисления.СчетКтНУ,
			|	БУДополнительныеНачисления.СубконтоКтНУ1,
			|	БУДополнительныеНачисления.СубконтоКтНУ2,
			|	БУДополнительныеНачисления.СубконтоКтНУ3,
			// - НУ - конец
			|	БУДополнительныеНачисления.СчетКт,
			|	БУДополнительныеНачисления.СубконтоКт1,
			|	БУДополнительныеНачисления.СубконтоКт2,
			|	БУДополнительныеНачисления.СубконтоКт3
			|ОБЪЕДИНИТЬ ВСЕ
			|ВЫБРАТЬ 
			|	БУОсновныеНачисления.Сотрудник КАК Контрагент,
			|	БУОсновныеНачисления.ФизЛицо,
			|	БУОсновныеНачисления.ВидРасчета.ВидДохода КАК ВидДохода,
			|	БУОсновныеНачисления.СчетКт КАК СчетДт,
			|	БУОсновныеНачисления.СубконтоКт1 КАК СубконтоДт1,
			|	БУОсновныеНачисления.СубконтоКт2 КАК СубконтоДт2,
			|	БУОсновныеНачисления.СубконтоКт3 КАК СубконтоДт3,
			// - НУ - начало
			|	БУОсновныеНачисления.СчетКтНУ КАК СчетДтНУ,
			|	БУОсновныеНачисления.СубконтоКтНУ1 КАК СубконтоДтНУ1,
			|	БУОсновныеНачисления.СубконтоКтНУ2 КАК СубконтоДтНУ2,
			|	БУОсновныеНачисления.СубконтоКтНУ3 КАК СубконтоДтНУ3,
			// - НУ - конец
			// -КУФИБ-
			|		ВЫБОР КОГДА БУОсновныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУОсновныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ КАК СтруктурноеПодразделение,
			// -КУФИБ-
			|	СУММА(БУОсновныеНачисления.Результат) КАК Результат
			|ИЗ
			|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
			|";
		
		Если МенеджерВТ <> Неопределено Тогда
		
		ОПВИсчисленныйТекст = ОПВИсчисленныйТекст + "
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
			|		ПО БУОсновныеНачисления.Сотрудник = СписокФизЛиц.ФизЛицо";
		
		КонецЕсли;
		
		ОПВИсчисленныйТекст = ОПВИсчисленныйТекст + "
			|ГДЕ
			|	БУОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
			|	И БУОсновныеНачисления.ПериодРегистрации = &парамНачалоМесяца
			|	И БУОсновныеНачисления.ВидРасчета.ОблагаетсяОПВ <> &парамНеОблагаетсяЦеликом
			|	И НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом
			|	И БУОсновныеНачисления.Сотрудник ССЫЛКА Справочник.Контрагенты
			|
			|СГРУППИРОВАТЬ ПО
			|	БУОсновныеНачисления.Сотрудник,
			|	БУОсновныеНачисления.ФизЛицо,
			|	БУОсновныеНачисления.ВидРасчета.ВидДохода,
			// -КУФИБ-
			|		ВЫБОР КОГДА БУОсновныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУОсновныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ,
			// -КУФИБ-
			// - НУ - начало
			|	БУОсновныеНачисления.СчетКтНУ,
			|	БУОсновныеНачисления.СубконтоКтНУ1,
			|	БУОсновныеНачисления.СубконтоКтНУ2,
			|	БУОсновныеНачисления.СубконтоКтНУ3,
			// - НУ - конец
			|	БУОсновныеНачисления.СчетКт,
			|	БУОсновныеНачисления.СубконтоКт1,
			|	БУОсновныеНачисления.СубконтоКт2,
			|	БУОсновныеНачисления.СубконтоКт3
			|;
			|
			// Распределим исчисленный ОПВ по данным отражения начислений 
			|/////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОПВРасчетыСФондами.ФизЛицо КАК Контрагент,
			|	ОПВРасчетыСФондами.ФизЛицо.ФизЛицо КАК ФизЛицо,
			|	ОПВРасчетыСФондами.СтруктурнаяЕдиница,
			|	ОПВРасчетыСФондами.ВидПлатежа,
			|	ВЫБОР
			|		КОГДА ГражданствоФизЛиц.Страна ЕСТЬ NULL 
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Казахстан)
			|		ИНАЧЕ ГражданствоФизЛиц.Страна
			|	КОНЕЦ КАК Страна, 
			|	БУДоходыКонтрагентов.СчетДт,
			|	БУДоходыКонтрагентов.СубконтоДт1,
			|	БУДоходыКонтрагентов.СубконтоДт2,
			|	БУДоходыКонтрагентов.СубконтоДт3,
			// - НУ - начало
			|	БУДоходыКонтрагентов.СчетДтНУ,
			|	БУДоходыКонтрагентов.СубконтоДтНУ1,
			|	БУДоходыКонтрагентов.СубконтоДтНУ2,
			|	БУДоходыКонтрагентов.СубконтоДтНУ3,
			// - НУ - конец
			// -КУФИБ-
			|	БУДоходыКонтрагентов.СтруктурноеПодразделение,
			// -КУФИБ-
			|	СУММА(ВЫБОР
			|			КОГДА ЕСТЬNULL(БУСуммаНачислений.Результат, 0) <> 0
			|				ТОГДА ВЫРАЗИТЬ(ОПВРасчетыСФондами.Взнос * ЕСТЬNULL(БУДоходыКонтрагентов.Результат, 0) / БУСуммаНачислений.Результат КАК ЧИСЛО(15, 2))
			|			ИНАЧЕ ОПВРасчетыСФондами.Взнос
			|		КОНЕЦ) КАК СуммаПроводки
			|ИЗ
			|	ВТ_ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БУДоходыКонтрагентовОПВ КАК БУДоходыКонтрагентов
			|		ПО ОПВРасчетыСФондами.ФизЛицо = БУДоходыКонтрагентов.Контрагент
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			БУДоходыКонтрагентов.Контрагент КАК Контрагент,
			|			СУММА(БУДоходыКонтрагентов.Результат) КАК Результат
			|		ИЗ
			|			ВТ_БУДоходыКонтрагентовОПВ КАК БУДоходыКонтрагентов
			|		
			|		СГРУППИРОВАТЬ ПО
			|			БУДоходыКонтрагентов.Контрагент) КАК БУСуммаНачислений
			|		ПО ОПВРасчетыСФондами.ФизЛицо = БУСуммаНачислений.Контрагент
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонецМесяца) КАК ГражданствоФизЛиц
			|		ПО ОПВРасчетыСФондами.ФизЛицо.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
			|
			|
			|СГРУППИРОВАТЬ ПО
			|	ОПВРасчетыСФондами.ФизЛицо,
			|	ОПВРасчетыСФондами.ФизЛицо.ФизЛицо,
			|	ОПВРасчетыСФондами.ВидПлатежа,
			|	ОПВРасчетыСФондами.СтруктурнаяЕдиница,
			|	ВЫБОР
			|		КОГДА ГражданствоФизЛиц.Страна ЕСТЬ NULL 
			|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Казахстан)
			|		ИНАЧЕ ГражданствоФизЛиц.Страна
			|	КОНЕЦ, 
			|	БУДоходыКонтрагентов.СчетДт,
			// -КУФИБ-
			|	БУДоходыКонтрагентов.СтруктурноеПодразделение,
			// -КУФИБ-
			// - НУ - начало
			|	БУДоходыКонтрагентов.СчетДтНУ,
			|	БУДоходыКонтрагентов.СубконтоДтНУ1,
			|	БУДоходыКонтрагентов.СубконтоДтНУ2,
			|	БУДоходыКонтрагентов.СубконтоДтНУ3,
			// - НУ - конец
			|	БУДоходыКонтрагентов.СубконтоДт1,
			|	БУДоходыКонтрагентов.СубконтоДт2,
			|	БУДоходыКонтрагентов.СубконтоДт3";
		
		
		Запрос.Текст = ОПВИсчисленныйТекст;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		//СчетДебетаПоУмолчанию = ПланыСчетов.Типовой.ПрочаяКраткосрочнаяКредиторскаяЗадолженность; //-=-=
		//-=-=
		СчетДебетаПоУмолчанию = ПланыСчетов.Типовой.ПрочаяКраткосрочнаяКредиторскаяЗадолженностьСоб;
		//-=-=
		СубконтоКредита1 = Перечисления.ВидыПлатежейВБюджетИФонды.Налог;
		СчетДебетаНУПоУмолчанию = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СчетДебетаПоУмолчанию), , , КонецМесяца(ПериодРегистрации));

		СчетКредита = Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы.СчетУчетаРасчетовСКонтрагентомБУ;
				
		Если НЕ ЗначениеЗаполнено(СчетКредита) Тогда
			СчетКредита = ПланыСчетов.Типовой.ОбязательстваПоПенсионнымОтчислениям;
		КонецЕсли;
		СчетКредитаНУ = ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНУОПВ(СчетКредита,КонецМесяца(ПериодРегистрации));
		Если НЕ ЗначениеЗаполнено(СчетКредитаНУ) Тогда
			СчетКредитаНУ = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СчетКредита), , , КонецМесяца(ПериодРегистрации));
		КонецЕсли;
		
		Пока Выборка.Следующий() Цикл
			
			Строка = ОтражениеВУчете.Добавить();
			Строка.ФизЛицо = Выборка.ФизЛицо;
			
				 
			Строка.СчетДт 		= ?(ЗначениеЗаполнено(Выборка.СчетДт), Выборка.СчетДт, СчетДебетаПоУмолчанию);
			Строка.СубконтоДт1 	= ?(ЗначениеЗаполнено(Выборка.СубконтоДт1), Выборка.СубконтоДт1, Выборка.Контрагент);
			Строка.СубконтоДт2 	= ?(ЗначениеЗаполнено(Выборка.СубконтоДт2), Выборка.СубконтоДт2, ОбщегоНазначения.ДоступныйДоговорКонтрагента(Выборка.Контрагент["ОсновнойДоговорКонтрагента"]));
			СчетДебетаНУ = ?(ЗначениеЗаполнено(Выборка.СчетДтНУ), Выборка.СчетДтНУ, СчетДебетаНУПоУмолчанию);
			Строка.СчетДтНУ 	= СчетДебетаНУ;
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, ?(ЗначениеЗаполнено(Выборка.СчетДт), Выборка.СчетДт, СчетДебетаПоУмолчанию), СчетДебетаНУ, 1, Выборка.Контрагент, "СубконтоДтНУ");
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, ?(ЗначениеЗаполнено(Выборка.СчетДт), Выборка.СчетДт, СчетДебетаПоУмолчанию), СчетДебетаНУ, 2, ОбщегоНазначения.ДоступныйДоговорКонтрагента(Выборка.Контрагент["ОсновнойДоговорКонтрагента"]), "СубконтоДтНУ");
			
			Строка.СчетКт 		= СчетКредита;
			
			Строка.СубконтоКт1 	= Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы;
			Строка.СубконтоКт2 	= Выборка.ВидПлатежа;
			Строка.СубконтоКт3	= Выборка.Физлицо;
			
			Строка.СчетКтНУ 	= СчетКредитаНУ;
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетКредита, СчетКредитаНУ, 1, Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы, "СубконтоКтНУ");
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетКредита, СчетКредитаНУ, 2, Выборка.ВидПлатежа, "СубконтоКтНУ");
			Если ВедетсяУчетПоСотрудникам Тогда
				ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетКредита, СчетКредитаНУ, 3, Выборка.Физлицо, "СубконтоКтНУ");   		
			КонецЕсли;
						
			Строка.Сумма		= Выборка.СуммаПроводки;
			
			Если мОтображатьСтруктурныеПодразделения Тогда
				Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
				Строка.СтруктурноеПодразделениеКт = СтруктурноеПодразделение;
			КонецЕсли;
		Если мОтображатьСтруктурныеПодразделения Тогда
			Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
			Строка.СтруктурноеПодразделениеКт = Выборка.СтруктурноеПодразделение;
		КонецЕсли;
			
		КонецЦикла;	
		
		/////////////////////////////////////////////	
		//Отражение пени ОПВ по контрагентам
		
		ОПВИсчисленныеТекст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОПВРасчетыСФондами.ФизЛицо КАК Контрагент,
			|	ОПВРасчетыСФондами.ФизЛицо.ФизЛицо КАК ФизЛицо,
			|	ОПВРасчетыСФондами.СтруктурнаяЕдиница,
			|	ОПВРасчетыСФондами.ПодразделениеОрганизации,
			|	ОПВРасчетыСФондами.ВидПлатежа,
			|	ОПВРасчетыСФондами.Регистратор,
			|	СУММА(ОПВРасчетыСФондами.Взнос) КАК Взнос
			|ПОМЕСТИТЬ ВТ_ОПВРасчетыСФондамиПоКонтрагентам
			|ИЗ
			|	РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
			|
			|";
		
		Если МенеджерВТ <> Неопределено Тогда
		
		ОПВИсчисленныеТекст = ОПВИсчисленныеТекст + "
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
			|		ПО ОПВРасчетыСФондами.ФизЛицо = СписокФизЛиц.ФизЛицо";
		
		КонецЕсли;
		
		ОПВИсчисленныеТекст = ОПВИсчисленныеТекст + "
			|
			|ГДЕ
			|	ОПВРасчетыСФондами.Период >= &парамНачалоМесяца И 
			|	ОПВРасчетыСФондами.Период <= &парамКонецМесяца И 
			|	ОПВРасчетыСФондами.Организация = &парамОрганизация И 
			|	ОПВРасчетыСФондами.ВидСтроки = &парамВидСтрокиИсчисление И
			|   ОПВРасчетыСФондами.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.ПениСам), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.ПениАкт)) И
			|	ОПВРасчетыСФондами.Взнос <> 0 И
			|	ОПВРасчетыСФондами.НеОтражатьВРеглУчете = Ложь И
			|	ОПВРасчетыСФондами.ФизЛицо ССЫЛКА Справочник.Контрагенты 
			|
			|СГРУППИРОВАТЬ ПО
			|	ОПВРасчетыСФондами.ФизЛицо,
			|	ОПВРасчетыСФондами.СтруктурнаяЕдиница,
			|	ОПВРасчетыСФондами.ПодразделениеОрганизации,
			|	ОПВРасчетыСФондами.ВидПлатежа,
			|	ОПВРасчетыСФондами.Регистратор
			|;
			|/////////////////////////////////////////
			|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОПВРасчетыСФондами.ФизЛицо,
			|	ОПВРасчетыСФондами.ВидПлатежа,
			|	ВЫБОР
			|		КОГДА ОПВРасчетыСФондами.ПодразделениеОрганизации <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|			ТОГДА ОПВРасчетыСФондами.ПодразделениеОрганизации
			|		ИНАЧЕ МестаРаботы.ПодразделениеОрганизации
			|	КОНЕЦ КАК ПодразделениеОрганизации,
			|	ВЫБОР
			|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
			|			ТОГДА &парамСчетДтДляПени
			|		ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
			|	КОНЕЦ КАК СчетДтДляПени,
			|	ВЫБОР
			|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ1, НЕОПРЕДЕЛЕНО)  
			|	КОНЕЦ КАК СубконтоДтДляПени1,
			|	ВЫБОР
			|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ2, НЕОПРЕДЕЛЕНО)  
			|	КОНЕЦ КАК СубконтоДтДляПени2,
			|	ВЫБОР
			|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ3, НЕОПРЕДЕЛЕНО)  
			|	КОНЕЦ КАК СубконтоДтДляПени3,
			|	ЕСТЬNULL(ВидСубконтоВидыСтатьиЗатратДляПени.НомерСтроки, 0) КАК НомерСубконтоВидыСтатьиЗатратДляПени,
			|	ЕСТЬNULL(ВидСубконтоПодразделенияДляПени.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДляПени,
			|	СУММА(ОПВРасчетыСФондами.Взнос) КАК Взнос	
			|ИЗ
			|	ВТ_ОПВРасчетыСФондамиПоКонтрагентам КАК ОПВРасчетыСФондами";
		
		Если МенеджерВТ <> Неопределено Тогда
		
		ОПВИсчисленныеТекст = ОПВИсчисленныеТекст + "
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
			|		ПО ОПВРасчетыСФондами.Контрагент = СписокФизЛиц.ФизЛицо";
		
		КонецЕсли;
		
		ОПВИсчисленныеТекст = ОПВИсчисленныеТекст + "
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ " + МестаРаботыТекст + " КАК МестаРаботы
			|		ПО ОПВРасчетыСФондами.ФизЛицо = МестаРаботы.ФизЛицо
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетПениОПВиСО КАК РасчетПениОПВиСО
			|		ПО ОПВРасчетыСФондами.Регистратор = РасчетПениОПВиСО.Ссылка
			|
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидСубконтоВидыСтатьиЗатратДляПени
			|		ПО ВидСубконтоВидыСтатьиЗатратДляПени.Ссылка = (ВЫБОР
			|															КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
			|																ТОГДА &парамСчетДтДляПени
			|															ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
			|														КОНЕЦ)
			|		   И ВидСубконтоВидыСтатьиЗатратДляПени.ВидСубконто = &парамВидСубконтоСтатьиЗатрат
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидСубконтоПодразделенияДляПени
			|		ПО ВидСубконтоПодразделенияДляПени.Ссылка = (ВЫБОР
			|															КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
			|																ТОГДА &парамСчетДтДляПени
			|															ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
			|														КОНЕЦ)
			|		   И ВидСубконтоПодразделенияДляПени.ВидСубконто = &парамВидСубконтоПодразделения
			|
			|
			|СГРУППИРОВАТЬ ПО
			|	ОПВРасчетыСФондами.ФизЛицо,
			|	ОПВРасчетыСФондами.ВидПлатежа,
			|	ВЫБОР
			|		КОГДА ОПВРасчетыСФондами.ПодразделениеОрганизации <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|			ТОГДА ОПВРасчетыСФондами.ПодразделениеОрганизации
			|		ИНАЧЕ МестаРаботы.ПодразделениеОрганизации
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
			|			ТОГДА &парамСчетДтДляПени
			|		ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ1, НЕОПРЕДЕЛЕНО)  
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ2, НЕОПРЕДЕЛЕНО)  
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ3, НЕОПРЕДЕЛЕНО)  
			|	КОНЕЦ,
			|	ЕСТЬNULL(ВидСубконтоВидыСтатьиЗатратДляПени.НомерСтроки, 0),
			|	ЕСТЬNULL(ВидСубконтоПодразделенияДляПени.НомерСтроки, 0)
			|";

		Запрос.Текст = ОПВИсчисленныеТекст;
		
		СчетКредита = Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы.СчетУчетаРасчетовСКонтрагентомБУ;
		
		//СчетДебета = ПланыСчетов.Типовой.ПрочаяКраткосрочнаяКредиторскаяЗадолженность; //-=-=
		//-=-=
		СчетДебета = ПланыСчетов.Типовой.ПрочаяКраткосрочнаяКредиторскаяЗадолженностьСоб;
		//-=-=
		Если НЕ ЗначениеЗаполнено(СчетКредита) Тогда
			СчетКредита = ПланыСчетов.Типовой.ОбязательстваПоПенсионнымОтчислениям;
		КонецЕсли;

		СтатьяЗатратПеняПоОПВ = Справочники.СтатьиЗатрат.ПеняПоОПВ;

		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Строка = ОтражениеВУчете.Добавить();
			Строка.ФизЛицо = Выборка.ФизЛицо;

			Строка.СчетДт			= ?(ЗначениеЗаполнено(Выборка.СчетДтДляПени), Выборка.СчетДтДляПени, СчетДебетаДляПени);
			
			// Статья затрат
			Если Выборка.НомерСубконтоВидыСтатьиЗатратДляПени <> 0 Тогда
				Если ЗначениеЗаполнено(Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоВидыСтатьиЗатратДляПени]) Тогда
					Строка["СубконтоДт" + Выборка.НомерСубконтоВидыСтатьиЗатратДляПени] = Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоВидыСтатьиЗатратДляПени];
				Иначе
					Строка["СубконтоДт" + Выборка.НомерСубконтоВидыСтатьиЗатратДляПени] = СтатьяЗатратПеняПоОПВ;
				КонецЕсли;
			КонецЕсли;
			
		
			// Подразделение
			Если Выборка.НомерСубконтоПодразделенияДляПени <> 0 Тогда
				Если ЗначениеЗаполнено(Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени]) Тогда
					Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени] = Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени];
				Иначе 
					Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени]= Выборка.ПодразделениеОрганизации;
				КонецЕсли;
			КонецЕсли;
			
			// Заполним оставшиеся субконто
			Для Ном = 1 По 3 Цикл
				Если НЕ ЗначениеЗаполнено(Строка["СубконтоДт" + Ном]) Тогда
					Строка["СубконтоДт" + Ном] = Выборка["СубконтоДтДляПени" + Ном];
				КонецЕсли;
			КонецЦикла;
			
			Строка.СчетКт 		= СчетКредита;
			
			Строка.СубконтоКт1 	= Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы;
			Строка.СубконтоКт2	= Выборка.ВидПлатежа;
			Строка.СубконтоКт3 	= Выборка.ФизЛицо;
			
			Строка.ФизЛицо      = Выборка.ФизЛицо;
			Строка.Сумма		= Выборка.Взнос;
			
			Если мОтображатьСтруктурныеПодразделения Тогда
				Строка.СтруктурноеПодразделениеДт = СтруктурноеПодразделение;
				Строка.СтруктурноеПодразделениеКт = СтруктурноеПодразделение;
			КонецЕсли;
			
		КонецЦикла;	
		
	
	#КонецОбласти
	
	#Область ОтражениеИПНПоРаботникам
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение подоходного налога по работникам
	
	// ИПНИсчисленный
	// Поля:
	//		Физлицо
	//		Налог
	// Описание:
	// Содержит ИПН исчисленный для заданной организации в заданном периоде регистрации
	
	ИПНИсчисленныйТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИПНРасчетыСБюджетом.ФизЛицо,
	|	ИПНРасчетыСБюджетом.СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА ГражданствоФизЛиц.Страна ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Казахстан)
	|		ИНАЧЕ ГражданствоФизЛиц.Страна
	|	КОНЕЦ КАК Страна,"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|	СУММА(ИПНРасчетыСБюджетом.Налог) КАК Налог
	|ИЗ
	|	РегистрНакопления.ИПНРасчетыСБюджетом КАК ИПНРасчетыСБюджетом
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонецМесяца) КАК ГражданствоФизЛиц
	|		ПО ИПНРасчетыСБюджетом.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
	|";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	ИПНИсчисленныйТекст = ИПНИсчисленныйТекст + "
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|		ПО ИПНРасчетыСБюджетом.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	Если мОтображатьСтруктурныеПодразделения Тогда
		ИПНИсчисленныйТекст = ИПНИсчисленныйТекст+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,Организация=&парамГоловнаяОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСП
		|			ПО ИПНРасчетыСБюджетом.ФизЛицо = УчетВзаиморасчетовПоСП.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	ИПНИсчисленныйТекст = ИПНИсчисленныйТекст + "
	|
	|ГДЕ 
	|	ИПНРасчетыСБюджетом.Период >= &парамНачалоМесяца И 
	|	ИПНРасчетыСБюджетом.Период <= &парамКонецМесяца И 
	|	ИПНРасчетыСБюджетом.Организация = &парамОрганизация И 
	|	ИПНРасчетыСБюджетом.ВидДвижения = &парамВидДвиженияПриход И
	|	ИПНРасчетыСБюджетом.ВидСтроки = &парамВидСтрокиИсчисление И
	|	ИПНРасчетыСБюджетом.Налог <> 0 И
	|	ИПНРасчетыСБюджетом.НеОтражатьВРеглУчете = ЛОЖЬ И
	|	ИПНРасчетыСБюджетом.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица И
	|	НЕ ИПНРасчетыСБюджетом.Регистратор ССЫЛКА Документ.ОтражениеНалоговойОтчетностиВРеглУчете  
	|
	|СГРУППИРОВАТЬ ПО
	|	ИПНРасчетыСБюджетом.ФизЛицо,
	|	ИПНРасчетыСБюджетом.СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА ГражданствоФизЛиц.Страна ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Казахстан)
	|		ИНАЧЕ ГражданствоФизЛиц.Страна
	|	КОНЕЦ,"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+"
	|";
	
	Запрос.Текст = ИПНИсчисленныйТекст;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СчетДебета = ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоОплатеТруда;
	СчетДебетаНУ = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СчетДебета), , , КонецМесяца(ПериодРегистрации));
	
	СубконтоКредита2 = Перечисления.ВидыПлатежейВБюджетИФонды.Налог;
	
	Пока Выборка.Следующий() Цикл
		Если ПериодРегистрации >= Дата(2015, 07, 01) Тогда
			СчетКредита = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог.СчетУчетаРасчетовСКонтрагентомБУ;
		Иначе
			Если Выборка.Страна = Справочники.КлассификаторСтранМира.Казахстан Тогда
				СчетКредита = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог.СчетУчетаРасчетовСКонтрагентомБУ;
			Иначе 
				СчетКредита = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалогИностранныеГраждане.СчетУчетаРасчетовСКонтрагентомБУ;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СчетКредита) Тогда
			СчетКредита = ПланыСчетов.Типовой.ИндивидуальныйПодоходныйНалог;
		КонецЕсли;
		СчетКредитаНУ =  ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНУИПН(СчетКредита, КонецМесяца(ПериодРегистрации), Выборка.Страна);
		
		Строка = ОтражениеВУчете.Добавить();
		//Строка.ФизЛицо 		= Выборка.ФизЛицо;
		//Строка.СчетДт 		= СчетДебета;
		//Если ВедетсяУчетПоСотрудникам Тогда
		//	Строка.СубконтоДт1 	= Выборка.Физлицо;		
		//КонецЕсли; //-=-=
		
		//-=-=
		СчетДебетаКонтр = ПланыСчетов[мИмяПланаСчетов].КраткосрочнаяЗадолженностьПоставщикамИПодрядчикам;
	
		Если ТипЗнч(Выборка.ФизЛицо) = ТипЗнч(Справочники.Контрагенты.ПустаяСсылка()) Тогда
			Строка.ФизЛицо 		= Выборка.ФизЛицо.ФизЛицо;
			Строка.СчетДт 		= СчетДебетаКонтр;
			Строка.СубконтоДт1 	= Выборка.Физлицо;
			Строка.СубконтоДт2 	= Выборка.Физлицо.ОсновнойДоговорКонтрагента;
			Строка.СубконтоДт3 	= Справочники.ТипыОпераций.НайтиПоНаименованию("Услуги по договору возмездного оказания услуг");
		Иначе
			Строка.ФизЛицо 		= Выборка.ФизЛицо;
			Строка.СчетДт 		= СчетДебета;
			Если ВедетсяУчетПоСотрудникам Тогда
				Строка.СубконтоДт1 	= Выборка.Физлицо;		
			КонецЕсли;
		КонецЕсли;
		//-=-=
		
		Строка.СчетДтНУ 	= СчетДебетаНУ;
		Если ВедетсяУчетПоСотрудникам Тогда
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетДебета, СчетДебетаНУ, 1, Выборка.Физлицо, "СубконтоДтНУ");
		КонецЕсли;
		
		Если ПериодРегистрации >= Дата(2015, 07, 01) Тогда
			СубконтоКредита1 = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог;
		Иначе
			Если Выборка.Страна = Справочники.КлассификаторСтранМира.Казахстан Тогда
				СубконтоКредита1 = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог;
			Иначе
				СубконтоКредита1 = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалогИностранныеГраждане;
			КонецЕсли;
		КонецЕсли;
		Если ЗаполнятьНКпоИПН ИЛИ ЗаполнятьНКпоИПНВНУ Тогда
			НалоговыйКомитетВСтроке = ПроцедурыНалоговогоУчета.ПолучитьНалоговыйКомитетСтруктурнойЕдиницы(Выборка.СтруктурнаяЕдиница, 
																										Организация,
																										ИсчислениеНалоговСтруктурныхЕдиниц,
																										Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
		КонецЕсли;	
		
		Строка.СчетКт 		= СчетКредита;
		Строка.СубконтоКт1	= СубконтоКредита1;
		Строка.СубконтоКт2 	= СубконтоКредита2;
		Если ЗаполнятьНКпоИПН Тогда
			// узнаем налоговый комитет структурной единицы
			Строка.СубконтоКт3 = НалоговыйКомитетВСтроке;
		КонецЕсли;
		
		Строка.СчетКтНУ 	= СчетКредитаНУ;
		ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетКредита, СчетКредитаНУ, 1, СубконтоКредита1, "СубконтоКтНУ");
		ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетКредита, СчетКредитаНУ, 2, СубконтоКредита2, "СубконтоКтНУ");
		Если ЗаполнятьНКпоИПНВНУ Тогда
			// узнаем налоговый комитет структурной единицы
			Строка.СубконтоКтНУ3 = НалоговыйКомитетВСтроке;			
		КонецЕсли;
		
		Если мОтображатьСтруктурныеПодразделения Тогда
			Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
			Строка.СтруктурноеПодразделениеКт = Выборка.СтруктурноеПодразделение;
		КонецЕсли;
		
		Строка.Сумма		= Выборка.Налог;
	КонецЦикла;	
	
	#КонецОбласти
	
	#Область ОтражениеИПНПоКонтрагентам
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение подоходного налога по контрагентам

	ИПНИсчисленныйТекст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИПНИсчисленный.ФизЛицо КАК Контрагент,
		|	ИПНИсчисленный.СтруктурнаяЕдиница,
		|	ИПНИсчисленный.ВидДохода,
		|	СУММА(ИПНИсчисленный.Налог) КАК Налог
		|ПОМЕСТИТЬ ВТ_ИПНИсчисленный
		|ИЗ
		|	РегистрНакопления.ИПНИсчисленный КАК ИПНИсчисленный
		|
		|";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	ИПНИсчисленныйТекст = ИПНИсчисленныйТекст + "
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
		|		ПО ИПНИсчисленный.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	ИПНИсчисленныйТекст = ИПНИсчисленныйТекст + "
		|
		|ГДЕ
		|	ИПНИсчисленный.Период >= &парамНачалоМесяца И 
		|	ИПНИсчисленный.Период <= &парамКонецМесяца И 
		|	ИПНИсчисленный.Организация = &парамОрганизация И 
		|	ИПНИсчисленный.ВидСтроки = &парамВидСтрокиИсчисление И
		|	ИПНИсчисленный.Налог <> 0 И
		|	ИПНИсчисленный.НеОтражатьВРеглУчете = ЛОЖЬ И
		|	ИПНИсчисленный.ФизЛицо ССЫЛКА Справочник.Контрагенты 
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПНИсчисленный.ФизЛицо,
		|	ИПНИсчисленный.СтруктурнаяЕдиница,
		|	ИПНИсчисленный.ВидДохода
		|;
		|
		// Получим данные отражения доходов контрагентов, 
		// счета учета доходов используем как счета Дт для отражения подоходного налога
		|/////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	БУДополнительныеНачисления.Сотрудник КАК Контрагент,
		|	БУДополнительныеНачисления.ФизЛицо,
		|	БУДополнительныеНачисления.ВидРасчета.ВидДохода КАК ВидДохода,
		|	БУДополнительныеНачисления.СчетКт КАК СчетДт,
		|	БУДополнительныеНачисления.СубконтоКт1 КАК СубконтоДт1,
		|	БУДополнительныеНачисления.СубконтоКт2 КАК СубконтоДт2,
		|	БУДополнительныеНачисления.СубконтоКт3 КАК СубконтоДт3,
		// - НУ - начало
		|	БУДополнительныеНачисления.СчетКтНУ КАК СчетДтНУ,
		|	БУДополнительныеНачисления.СубконтоКтНУ1 КАК СубконтоДтНУ1,
		|	БУДополнительныеНачисления.СубконтоКтНУ2 КАК СубконтоДтНУ2,
		|	БУДополнительныеНачисления.СубконтоКтНУ3 КАК СубконтоДтНУ3,
		// - НУ - конец
	// -КУФИБ-
	|		ВЫБОР КОГДА БУДополнительныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУДополнительныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ КАК СтруктурноеПодразделение,
	// -КУФИБ-
		|	СУММА(БУДополнительныеНачисления.Результат) КАК Результат
		|ПОМЕСТИТЬ ВТ_БУДоходыКонтрагентов
		|ИЗ
		|	РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
		|";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	ИПНИсчисленныйТекст = ИПНИсчисленныйТекст + "
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
		|		ПО БУДополнительныеНачисления.Сотрудник = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	ИПНИсчисленныйТекст = ИПНИсчисленныйТекст + "
		|ГДЕ
		|	БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И БУДополнительныеНачисления.ПериодРегистрации = &парамНачалоМесяца
		|	И БУДополнительныеНачисления.ВидРасчета.ОблагаетсяИПН <> &парамНеОблагаетсяЦеликом
		|	И НЕ БУДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом
		|	И БУДополнительныеНачисления.Сотрудник ССЫЛКА Справочник.Контрагенты
		|
		|СГРУППИРОВАТЬ ПО
		|	БУДополнительныеНачисления.Сотрудник,
		|	БУДополнительныеНачисления.ФизЛицо,
		|	БУДополнительныеНачисления.ВидРасчета.ВидДохода,
		|	БУДополнительныеНачисления.СчетКт,
		|	БУДополнительныеНачисления.СубконтоКт1,
		|	БУДополнительныеНачисления.СубконтоКт2,
		|	БУДополнительныеНачисления.СубконтоКт3,
	// -КУФИБ-
	|		ВЫБОР КОГДА БУДополнительныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУДополнительныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ,
	// -КУФИБ-
		// - НУ - начало
		|	БУДополнительныеНачисления.СчетКтНУ,
		|	БУДополнительныеНачисления.СубконтоКтНУ1,
		|	БУДополнительныеНачисления.СубконтоКтНУ2,
		|	БУДополнительныеНачисления.СубконтоКтНУ3
		// - НУ - конец
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ 
		|	БУОсновныеНачисления.Сотрудник КАК Контрагент,
		|	БУОсновныеНачисления.ФизЛицо,
		|	БУОсновныеНачисления.ВидРасчета.ВидДохода КАК ВидДохода,
		|	БУОсновныеНачисления.СчетКт КАК СчетДт,
		|	БУОсновныеНачисления.СубконтоКт1 КАК СубконтоДт1,
		|	БУОсновныеНачисления.СубконтоКт2 КАК СубконтоДт2,
		|	БУОсновныеНачисления.СубконтоКт3 КАК СубконтоДт3,
		// - НУ - начало
		|	БУОсновныеНачисления.СчетКтНУ КАК СчетДтНУ,
		|	БУОсновныеНачисления.СубконтоКтНУ1 КАК СубконтоДтНУ1,
		|	БУОсновныеНачисления.СубконтоКтНУ2 КАК СубконтоДтНУ2,
		|	БУОсновныеНачисления.СубконтоКтНУ3 КАК СубконтоДтНУ3,
		// - НУ - конец
	// -КУФИБ-
	|		ВЫБОР КОГДА БУОсновныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУОсновныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ КАК СтруктурноеПодразделение,
	// -КУФИБ-
		|	СУММА(БУОсновныеНачисления.Результат) КАК Результат
		|ИЗ
		|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
		|";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	ИПНИсчисленныйТекст = ИПНИсчисленныйТекст + "
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
		|		ПО БУОсновныеНачисления.Сотрудник = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	ИПНИсчисленныйТекст = ИПНИсчисленныйТекст + "
		|ГДЕ
		|	БУОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И БУОсновныеНачисления.ПериодРегистрации = &парамНачалоМесяца
		|	И БУОсновныеНачисления.ВидРасчета.ОблагаетсяИПН <> &парамНеОблагаетсяЦеликом
		|	И НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом
		|	И БУОсновныеНачисления.Сотрудник ССЫЛКА Справочник.Контрагенты
		|
		|СГРУППИРОВАТЬ ПО
		|	БУОсновныеНачисления.Сотрудник,
		|	БУОсновныеНачисления.ФизЛицо,
		|	БУОсновныеНачисления.ВидРасчета.ВидДохода,
		|	БУОсновныеНачисления.СчетКт,
		|	БУОсновныеНачисления.СубконтоКт1,
		|	БУОсновныеНачисления.СубконтоКт2,
		|	БУОсновныеНачисления.СубконтоКт3,
	// -КУФИБ-
	|		ВЫБОР КОГДА БУОсновныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУОсновныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ,
	// -КУФИБ-
		// - НУ - начало
		|	БУОсновныеНачисления.СчетКтНУ,
		|	БУОсновныеНачисления.СубконтоКтНУ1,
		|	БУОсновныеНачисления.СубконтоКтНУ2,
		|	БУОсновныеНачисления.СубконтоКтНУ3
		// - НУ - конец
		|;
		|
		// Распределим исчисленный ИПН по данным отражения начислений 
		|/////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИПНИсчисленный.Контрагент,
		|	ИПНИсчисленный.Контрагент.ФизЛицо КАК ФизЛицо,
		|	ИПНИсчисленный.СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА ГражданствоФизЛиц.Страна ЕСТЬ NULL 
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Казахстан)
		|		ИНАЧЕ ГражданствоФизЛиц.Страна
		|	КОНЕЦ КАК Страна, 
		|	БУДоходыКонтрагентов.СчетДт,
		|	БУДоходыКонтрагентов.СубконтоДт1,
		|	БУДоходыКонтрагентов.СубконтоДт2,
		|	БУДоходыКонтрагентов.СубконтоДт3,
		// - НУ - начало
		|	БУДоходыКонтрагентов.СчетДтНУ,
		|	БУДоходыКонтрагентов.СубконтоДтНУ1,
		|	БУДоходыКонтрагентов.СубконтоДтНУ2,
		|	БУДоходыКонтрагентов.СубконтоДтНУ3,
		// - НУ - конец
	// -КУФИБ-
		|	БУДоходыКонтрагентов.СтруктурноеПодразделение,
	// -КУФИБ-
		|	СУММА(ВЫБОР
		|			КОГДА ЕСТЬNULL(БУСуммаНачислений.Результат, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ(ИПНИсчисленный.Налог * ЕСТЬNULL(БУДоходыКонтрагентов.Результат, 0) / БУСуммаНачислений.Результат КАК ЧИСЛО(15, 2))
		|			ИНАЧЕ ИПНИсчисленный.Налог
		|		КОНЕЦ) КАК СуммаПроводки
		|ИЗ
		|	ВТ_ИПНИсчисленный КАК ИПНИсчисленный
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БУДоходыКонтрагентов КАК БУДоходыКонтрагентов
		|		ПО ИПНИсчисленный.Контрагент = БУДоходыКонтрагентов.Контрагент
		|			И ИПНИсчисленный.ВидДохода = БУДоходыКонтрагентов.ВидДохода
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			БУДоходыКонтрагентов.Контрагент КАК Контрагент,
		|			БУДоходыКонтрагентов.ВидДохода КАК ВидДохода,
		|			СУММА(БУДоходыКонтрагентов.Результат) КАК Результат
		|		ИЗ
		|			ВТ_БУДоходыКонтрагентов КАК БУДоходыКонтрагентов
		|		
		|		СГРУППИРОВАТЬ ПО
		|			БУДоходыКонтрагентов.Контрагент,
		|			БУДоходыКонтрагентов.ВидДохода) КАК БУСуммаНачислений
		|		ПО ИПНИсчисленный.Контрагент = БУСуммаНачислений.Контрагент
		|			И ИПНИсчисленный.ВидДохода = БУСуммаНачислений.ВидДохода
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонецМесяца) КАК ГражданствоФизЛиц
		|		ПО ИПНИсчисленный.Контрагент.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
		|
		|СГРУППИРОВАТЬ ПО
		|	ИПНИсчисленный.Контрагент,
		|	ИПНИсчисленный.Контрагент.ФизЛицо,
		|	ИПНИсчисленный.СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА ГражданствоФизЛиц.Страна ЕСТЬ NULL 
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Казахстан)
		|		ИНАЧЕ ГражданствоФизЛиц.Страна
		|	КОНЕЦ, 
	// -КУФИБ-
		|	БУДоходыКонтрагентов.СтруктурноеПодразделение,
	// -КУФИБ-
		// - НУ - начало
		|	БУДоходыКонтрагентов.СчетДтНУ,
		|	БУДоходыКонтрагентов.СубконтоДтНУ1,
		|	БУДоходыКонтрагентов.СубконтоДтНУ2,
		|	БУДоходыКонтрагентов.СубконтоДтНУ3,
		// - НУ - конец
		|	БУДоходыКонтрагентов.СчетДт,
		|	БУДоходыКонтрагентов.СубконтоДт1,
		|	БУДоходыКонтрагентов.СубконтоДт2,
		|	БУДоходыКонтрагентов.СубконтоДт3";
	
	
	Запрос.Текст = ИПНИсчисленныйТекст;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	//СчетДебетаПоУмолчанию = ПланыСчетов.Типовой.ПрочаяКраткосрочнаяКредиторскаяЗадолженность; //-=-=
	//-=-=
	СчетДебетаПоУмолчанию = ПланыСчетов.Типовой.ПрочаяКраткосрочнаяКредиторскаяЗадолженностьСоб;
	//-=-=
	СчетДебетаНУПоУмолчанию = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СчетДебетаПоУмолчанию), , , КонецМесяца(ПериодРегистрации));
	СубконтоКредита2 = Перечисления.ВидыПлатежейВБюджетИФонды.Налог;
	
	Пока Выборка.Следующий() Цикл

		Если ПериодРегистрации >= Дата(2015, 07, 01) Тогда
			СчетКредита = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог.СчетУчетаРасчетовСКонтрагентомБУ;
		Иначе
			Если Выборка.Страна = Справочники.КлассификаторСтранМира.Казахстан Тогда
				СчетКредита = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог.СчетУчетаРасчетовСКонтрагентомБУ;
			Иначе 
				СчетКредита = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалогИностранныеГраждане.СчетУчетаРасчетовСКонтрагентомБУ;
			КонецЕсли;	
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СчетКредита) Тогда
			СчетКредита = ПланыСчетов.Типовой.ИндивидуальныйПодоходныйНалог;
		КонецЕсли;
		СчетКредитаНУ =  ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНУИПН(СчетКредита, КонецМесяца(ПериодРегистрации), Выборка.Страна);
		
		Если ПериодРегистрации >= Дата(2015, 07, 01) Тогда
			СубконтоКредита1 = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог;
		Иначе
			Если Выборка.Страна = Справочники.КлассификаторСтранМира.Казахстан Тогда
				СубконтоКредита1 = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог;
			Иначе
				СубконтоКредита1 = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалогИностранныеГраждане;
			КонецЕсли;
		КонецЕсли;
	
		Строка = ОтражениеВУчете.Добавить();
		Строка.ФизЛицо 		= Выборка.ФизЛицо;
		Строка.СчетДт 		= ?(ЗначениеЗаполнено(Выборка.СчетДт), Выборка.СчетДт, СчетДебетаПоУмолчанию);
		Строка.СубконтоДт1 	= ?(ЗначениеЗаполнено(Выборка.СубконтоДт1), Выборка.СубконтоДт1, Выборка.Контрагент);
		Строка.СубконтоДт2 	= ?(ЗначениеЗаполнено(Выборка.СубконтоДт2), Выборка.СубконтоДт2, ОбщегоНазначения.ДоступныйДоговорКонтрагента(Выборка.Контрагент["ОсновнойДоговорКонтрагента"]));
		//-=-=
		Строка.СубконтоДт3 	= Справочники.ТипыОпераций.НайтиПоНаименованию("Услуги по договору возмездного оказания услуг");
		//-=-=
		Строка.СчетКт 		= СчетКредита;
		Строка.СубконтоКт1	= СубконтоКредита1;
		Строка.СубконтоКт2 	= СубконтоКредита2;
		
		СчетДебетаНУ = ?(ЗначениеЗаполнено(Выборка.СчетДтНУ), Выборка.СчетДтНУ, СчетДебетаНУПоУмолчанию);
		Строка.СчетДтНУ 	= СчетДебетаНУ;
		ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, ?(ЗначениеЗаполнено(Выборка.СчетДт), Выборка.СчетДт, СчетДебетаПоУмолчанию), СчетДебетаНУ, 1, Выборка.Контрагент, "СубконтоДтНУ");
		ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, ?(ЗначениеЗаполнено(Выборка.СчетДт), Выборка.СчетДт, СчетДебетаПоУмолчанию), СчетДебетаНУ, 2, ОбщегоНазначения.ДоступныйДоговорКонтрагента(Выборка.Контрагент["ОсновнойДоговорКонтрагента"]), "СубконтоДтНУ");
		Строка.СчетКтНУ 	= СчетКредитаНУ;
		ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетКредита, СчетКредитаНУ, 1, СубконтоКредита1, "СубконтоКтНУ");
		ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетКредита, СчетКредитаНУ, 2, СубконтоКредита2, "СубконтоКтНУ");
		Если ЗаполнятьНКпоИПН ИЛИ ЗаполнятьНКпоИПНВНУ Тогда
			НалоговыйКомитетВСтроке = ПроцедурыНалоговогоУчета.ПолучитьНалоговыйКомитетСтруктурнойЕдиницы(Выборка.СтруктурнаяЕдиница, 
																										Организация,
																										ИсчислениеНалоговСтруктурныхЕдиниц,
																										Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
		КонецЕсли;
		Если ЗаполнятьНКпоИПНВНУ Тогда
			// узнаем налоговый комитет структурной единицы
			Строка.СубконтоКтНУ3 = НалоговыйКомитетВСтроке;			
		КонецЕсли;
		
		Если ЗаполнятьНКпоИПН Тогда
			// узнаем налоговый комитет структурной единицы
			Строка.СубконтоКт3 = НалоговыйКомитетВСтроке;
		КонецЕсли;
		
		Строка.Сумма		= Выборка.СуммаПроводки;
		Если мОтображатьСтруктурныеПодразделения Тогда
			Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
			Строка.СтруктурноеПодразделениеКт = Выборка.СтруктурноеПодразделение;
		КонецЕсли;
	КонецЦикла;	
	
	#КонецОбласти
	
	#Область ОтражениеВОСМСПоКонтрагентам
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение ВОСМС по контрагентам

	ВОСМСИсчисленныеТекст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВОСМСИсчисленные.ФизЛицо КАК Контрагент,
		|	ВОСМСИсчисленные.СтруктурнаяЕдиница,
		|	ВОСМСИсчисленные.ВидДохода,
		|	ВОСМСИсчисленные.ВидПлатежа,
		|	ВОСМСИсчисленные.ПодразделениеОрганизации,
		|	СУММА(ВОСМСИсчисленные.Взнос) КАК Взнос
		|ПОМЕСТИТЬ ВТ_ВОСМСИсчисленные
		|ИЗ
		|	РегистрНакопления.ВОСМСИсчисленные КАК ВОСМСИсчисленные
		|
		|";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	ВОСМСИсчисленныеТекст = ВОСМСИсчисленныеТекст + "
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
		|		ПО ВОСМСИсчисленные.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	ВОСМСИсчисленныеТекст = ВОСМСИсчисленныеТекст + "
		|
		|ГДЕ
		|	ВОСМСИсчисленные.Период >= &парамНачалоМесяца И 
		|	ВОСМСИсчисленные.Период <= &парамКонецМесяца И 
		|	ВОСМСИсчисленные.Организация = &парамОрганизация И 
		|	ВОСМСИсчисленные.ВидСтроки = &парамВидСтрокиИсчисление И
		|	ВОСМСИсчисленные.Взнос <> 0 И
		|	ВОСМСИсчисленные.НеОтражатьВРеглУчете = Ложь И
		|	ВОСМСИсчисленные.ФизЛицо ССЫЛКА Справочник.Контрагенты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВОСМСИсчисленные.ФизЛицо,
		|	ВОСМСИсчисленные.СтруктурнаяЕдиница,
		|	ВОСМСИсчисленные.ВидПлатежа,
		|	ВОСМСИсчисленные.ПодразделениеОрганизации,
		|	ВОСМСИсчисленные.ВидДохода
		|;
		|
		// Получим данные отражения доходов контрагентов, 
		// счета учета доходов используем как счета Дт для отражения ВОСМС
		|/////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	БУДополнительныеНачисления.Сотрудник КАК Контрагент,
		|	БУДополнительныеНачисления.ФизЛицо,
		|	БУДополнительныеНачисления.ВидРасчета.ВидДохода КАК ВидДохода,
		|	БУДополнительныеНачисления.СчетКт КАК СчетДт,
		|	БУДополнительныеНачисления.СубконтоКт1 КАК СубконтоДт1,
		|	БУДополнительныеНачисления.СубконтоКт2 КАК СубконтоДт2,
		|	БУДополнительныеНачисления.СубконтоКт3 КАК СубконтоДт3,
		// - НУ - начало
		|	БУДополнительныеНачисления.СчетКтНУ КАК СчетДтНУ,
		|	БУДополнительныеНачисления.СубконтоКтНУ1 КАК СубконтоДтНУ1,
		|	БУДополнительныеНачисления.СубконтоКтНУ2 КАК СубконтоДтНУ2,
		|	БУДополнительныеНачисления.СубконтоКтНУ3 КАК СубконтоДтНУ3,
		// - НУ - конец
	// -КУФИБ-
	|		ВЫБОР КОГДА БУДополнительныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУДополнительныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ КАК СтруктурноеПодразделение,
	// -КУФИБ-
		|	СУММА(БУДополнительныеНачисления.Результат) КАК Результат
		|ПОМЕСТИТЬ ВТ_БУДоходыКонтрагентовВОСМС
		|ИЗ
		|	РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления
		|";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	ВОСМСИсчисленныеТекст = ВОСМСИсчисленныеТекст + "
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
		|		ПО БУДополнительныеНачисления.Сотрудник = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	ВОСМСИсчисленныеТекст = ВОСМСИсчисленныеТекст + "
		|ГДЕ
		|	БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И БУДополнительныеНачисления.ПериодРегистрации = &парамНачалоМесяца
		|	И БУДополнительныеНачисления.ВидРасчета.ОблагаетсяВОСМС <> &парамНеОблагаетсяЦеликом
		|	И НЕ БУДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом
		|	И БУДополнительныеНачисления.Сотрудник ССЫЛКА Справочник.Контрагенты
		|
		|СГРУППИРОВАТЬ ПО
		|	БУДополнительныеНачисления.Сотрудник,
		|	БУДополнительныеНачисления.ФизЛицо,
		|	БУДополнительныеНачисления.ВидРасчета.ВидДохода,
		// - НУ - начало
		|	БУДополнительныеНачисления.СчетКтНУ,
		|	БУДополнительныеНачисления.СубконтоКтНУ1,
		|	БУДополнительныеНачисления.СубконтоКтНУ2,
		|	БУДополнительныеНачисления.СубконтоКтНУ3,
		// - НУ - конец
	// -КУФИБ-
	|		ВЫБОР КОГДА БУДополнительныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУДополнительныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ,
	// -КУФИБ-
		|	БУДополнительныеНачисления.СчетКт,
		|	БУДополнительныеНачисления.СубконтоКт1,
		|	БУДополнительныеНачисления.СубконтоКт2,
		|	БУДополнительныеНачисления.СубконтоКт3
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ 
		|	БУОсновныеНачисления.Сотрудник КАК Контрагент,
		|	БУОсновныеНачисления.ФизЛицо,
		|	БУОсновныеНачисления.ВидРасчета.ВидДохода КАК ВидДохода,
		|	БУОсновныеНачисления.СчетКт КАК СчетДт,
		|	БУОсновныеНачисления.СубконтоКт1 КАК СубконтоДт1,
		|	БУОсновныеНачисления.СубконтоКт2 КАК СубконтоДт2,
		|	БУОсновныеНачисления.СубконтоКт3 КАК СубконтоДт3,
		// - НУ - начало
		|	БУОсновныеНачисления.СчетКтНУ КАК СчетДтНУ,
		|	БУОсновныеНачисления.СубконтоКтНУ1 КАК СубконтоДтНУ1,
		|	БУОсновныеНачисления.СубконтоКтНУ2 КАК СубконтоДтНУ2,
		|	БУОсновныеНачисления.СубконтоКтНУ3 КАК СубконтоДтНУ3,
		// - НУ - конец
	// -КУФИБ-
	|		ВЫБОР КОГДА БУОсновныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУОсновныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ КАК СтруктурноеПодразделение,
	// -КУФИБ-
		|	СУММА(БУОсновныеНачисления.Результат) КАК Результат
		|ИЗ
		|	РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления
		|";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	ВОСМСИсчисленныеТекст = ВОСМСИсчисленныеТекст + "
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
		|		ПО БУОсновныеНачисления.Сотрудник = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	ВОСМСИсчисленныеТекст = ВОСМСИсчисленныеТекст + "
		|ГДЕ
		|	БУОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация
		|	И БУОсновныеНачисления.ПериодРегистрации = &парамНачалоМесяца
		|	И БУОсновныеНачисления.ВидРасчета.ОблагаетсяВОСМС <> &парамНеОблагаетсяЦеликом
		|	И НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом
		|	И БУОсновныеНачисления.Сотрудник ССЫЛКА Справочник.Контрагенты
		|
		|СГРУППИРОВАТЬ ПО
		|	БУОсновныеНачисления.Сотрудник,
		|	БУОсновныеНачисления.ФизЛицо,
		|	БУОсновныеНачисления.ВидРасчета.ВидДохода,
		// - НУ - начало
		|	БУОсновныеНачисления.СчетКтНУ,
		|	БУОсновныеНачисления.СубконтоКтНУ1,
		|	БУОсновныеНачисления.СубконтоКтНУ2,
		|	БУОсновныеНачисления.СубконтоКтНУ3,
		// - НУ - конец
	// -КУФИБ-
	|		ВЫБОР КОГДА БУОсновныеНачисления.Регистратор ССЫЛКА Документ.РегистрацияПрочихДоходовВЦеляхНалогообложения ТОГДА БУОсновныеНачисления.Регистратор.СтруктурноеПодразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ,
	// -КУФИБ-
		|	БУОсновныеНачисления.СчетКт,
		|	БУОсновныеНачисления.СубконтоКт1,
		|	БУОсновныеНачисления.СубконтоКт2,
		|	БУОсновныеНачисления.СубконтоКт3
		|;
		|
		// Распределим исчисленный ВОСМС по данным отражения начислений 
		|/////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВОСМСИсчисленные.Контрагент,
		|	ВОСМСИсчисленные.ВидПлатежа,
		|	ВОСМСИсчисленные.ПодразделениеОрганизации,
		|	ВОСМСИсчисленные.Контрагент.ФизЛицо КАК ФизЛицо,
		|	ВОСМСИсчисленные.СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА ГражданствоФизЛиц.Страна ЕСТЬ NULL 
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Казахстан)
		|		ИНАЧЕ ГражданствоФизЛиц.Страна
		|	КОНЕЦ КАК Страна, 
		|	БУДоходыКонтрагентов.СчетДт,
		|	БУДоходыКонтрагентов.СубконтоДт1,
		|	БУДоходыКонтрагентов.СубконтоДт2,
		|	БУДоходыКонтрагентов.СубконтоДт3,
		// -НУ- начало
		|	БУДоходыКонтрагентов.СчетДтНУ,
		|	БУДоходыКонтрагентов.СубконтоДтНУ1,
		|	БУДоходыКонтрагентов.СубконтоДтНУ2,
		|	БУДоходыКонтрагентов.СубконтоДтНУ3,
		// -НУ- конец
	// -КУФИБ-
		|	БУДоходыКонтрагентов.СтруктурноеПодразделение,
	// -КУФИБ-
		|	СУММА(ВЫБОР
		|			КОГДА ЕСТЬNULL(БУСуммаНачислений.Результат, 0) <> 0
		|				ТОГДА ВЫРАЗИТЬ(ВОСМСИсчисленные.Взнос * ЕСТЬNULL(БУДоходыКонтрагентов.Результат, 0) / БУСуммаНачислений.Результат КАК ЧИСЛО(15, 2))
		|			ИНАЧЕ ВОСМСИсчисленные.Взнос
		|		КОНЕЦ) КАК СуммаПроводки,
		|	ЕСТЬNULL(ВидСубконтоСтатьиЗатратДляПени.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДляПени,
		|	ЕСТЬNULL(ВидСубконтоПодразделенияДляПени.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДляПени
		|ИЗ
		|	ВТ_ВОСМСИсчисленные КАК ВОСМСИсчисленные
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БУДоходыКонтрагентовВОСМС КАК БУДоходыКонтрагентов
		|		ПО ВОСМСИсчисленные.Контрагент = БУДоходыКонтрагентов.Контрагент
		|			И ВОСМСИсчисленные.ВидДохода = БУДоходыКонтрагентов.ВидДохода
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			БУДоходыКонтрагентов.Контрагент КАК Контрагент,
		|			БУДоходыКонтрагентов.ВидДохода КАК ВидДохода,
		|			СУММА(БУДоходыКонтрагентов.Результат) КАК Результат
		|		ИЗ
		|			ВТ_БУДоходыКонтрагентовВОСМС КАК БУДоходыКонтрагентов
		|		
		|		СГРУППИРОВАТЬ ПО
		|			БУДоходыКонтрагентов.Контрагент,
		|			БУДоходыКонтрагентов.ВидДохода) КАК БУСуммаНачислений
		|		ПО ВОСМСИсчисленные.Контрагент = БУСуммаНачислений.Контрагент
		|			И ВОСМСИсчисленные.ВидДохода = БУСуммаНачислений.ВидДохода
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонецМесяца) КАК ГражданствоФизЛиц
		|		ПО ВОСМСИсчисленные.Контрагент.ФизЛицо = ГражданствоФизЛиц.ФизЛицо
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидСубконтоСтатьиЗатратДляПени
		|		ПО ВидСубконтоСтатьиЗатратДляПени.Ссылка = &парамСчетДтДляПени
		|		   И ВидСубконтоСтатьиЗатратДляПени.ВидСубконто = &парамВидСубконтоСтатьиЗатрат
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидСубконтоПодразделенияДляПени
		|		ПО ВидСубконтоПодразделенияДляПени.Ссылка = &парамСчетДтДляПени
		|		   И ВидСубконтоПодразделенияДляПени.ВидСубконто = &парамВидСубконтоПодразделения
		|
		|
		|СГРУППИРОВАТЬ ПО
		|	ВОСМСИсчисленные.Контрагент,
		|	ВОСМСИсчисленные.ВидПлатежа,
		|	ВОСМСИсчисленные.ПодразделениеОрганизации,
		|	ВОСМСИсчисленные.Контрагент.ФизЛицо,
		|	ВОСМСИсчисленные.СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА ГражданствоФизЛиц.Страна ЕСТЬ NULL 
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Казахстан)
		|		ИНАЧЕ ГражданствоФизЛиц.Страна
		|	КОНЕЦ, 
		// -НУ- начало
		|	БУДоходыКонтрагентов.СчетДтНУ,
		|	БУДоходыКонтрагентов.СубконтоДтНУ1,
		|	БУДоходыКонтрагентов.СубконтоДтНУ2,
		|	БУДоходыКонтрагентов.СубконтоДтНУ3,
		// -НУ- конец
	// -КУФИБ-
		|	БУДоходыКонтрагентов.СтруктурноеПодразделение,
	// -КУФИБ-
		|	БУДоходыКонтрагентов.СчетДт,
		|	БУДоходыКонтрагентов.СубконтоДт1,
		|	БУДоходыКонтрагентов.СубконтоДт2,
		|	БУДоходыКонтрагентов.СубконтоДт3,
		|	ЕСТЬNULL(ВидСубконтоСтатьиЗатратДляПени.НомерСтроки, 0),
		|	ЕСТЬNULL(ВидСубконтоПодразделенияДляПени.НомерСтроки, 0)
		|";
	
	
	Запрос.Текст = ВОСМСИсчисленныеТекст;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	//СчетДебетаПоУмолчанию = ПланыСчетов.Типовой.ПрочаяКраткосрочнаяКредиторскаяЗадолженность; //-=-=
	//-=-=
	СчетДебетаПоУмолчанию = ПланыСчетов.Типовой.ПрочаяКраткосрочнаяКредиторскаяЗадолженностьСоб;
	//-=-=
	
	СчетДебетаНУПоУмолчаниюДляПодстановки = ПланыСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаработУслугПрав;	//3310Н
	СчетДебетаНУПоУмолчанию = ПроцедурыБухгалтерскогоУчета.ЗаполнитьСчетНалоговогоУчетаПоУмолчанию(СчетДебетаПоУмолчанию, КонецМесяца(ПериодРегистрации), СчетДебетаНУПоУмолчаниюДляПодстановки);
	
	СтатьяЗатратПеняПоВОСМС = Справочники.СтатьиЗатрат.ПеняПоВОСМС;	
	ВидНалогаСбораОтчисленияВОСМС = Справочники.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование;

	СубконтоКредита1 = Перечисления.ВидыПлатежейВБюджетИФонды.Налог;
	
	Пока Выборка.Следующий() Цикл

		Строка = ОтражениеВУчете.Добавить();
		Строка.ФизЛицо 		= Выборка.ФизЛицо;
		
		// В зависимости от вида платежа (Налог/Взнос или пеня) ставим на разные счета затрат
		Если Выборка.ВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.Налог
			ИЛИ Выборка.ВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.НалогАкт
			ИЛИ Выборка.ВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.НалогСам Тогда
			//Строка.ВидРасчета	= ВидНалогаСбораОтчисленияВОСМС;
			
			Строка.СчетДт 		= ?(ЗначениеЗаполнено(Выборка.СчетДт), Выборка.СчетДт, СчетДебетаПоУмолчанию);
			Строка.СубконтоДт1 	= ?(ЗначениеЗаполнено(Выборка.СубконтоДт1), Выборка.СубконтоДт1, Выборка.Контрагент);
			Строка.СубконтоДт2 	= ?(ЗначениеЗаполнено(Выборка.СубконтоДт2), Выборка.СубконтоДт2, ОбщегоНазначения.ДоступныйДоговорКонтрагента(Выборка.Контрагент["ОсновнойДоговорКонтрагента"]));
			
			Строка.СчетДтНУ		= ?(ЗначениеЗаполнено(Выборка.СчетДтНУ), Выборка.СчетДтНУ, СчетДебетаНУПоУмолчанию);
			Строка.СубконтоДтНУ1 	= ?(ЗначениеЗаполнено(Выборка.СубконтоДтНУ1), Выборка.СубконтоДтНУ1, Выборка.Контрагент);
			Строка.СубконтоДтНУ2 	= ?(ЗначениеЗаполнено(Выборка.СубконтоДтНУ2), Выборка.СубконтоДтНУ2, ОбщегоНазначения.ДоступныйДоговорКонтрагента(Выборка.Контрагент["ОсновнойДоговорКонтрагента"]));
		Иначе
			//Строка.ВидРасчета	= СтатьяЗатратПеняПоВОСМС;
			Строка.СчетДт	    = СчетДебетаДляПени;
			Если Выборка.НомерСубконтоСтатьиЗатратДляПени <> 0 Тогда
				Строка["СубконтоДт" + Выборка.НомерСубконтоСтатьиЗатратДляПени]	= СтатьяЗатратПеняПоВОСМС;
			КонецЕсли;
			Если Выборка.НомерСубконтоПодразделенияДляПени <> 0 Тогда
				Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени]= Выборка.ПодразделениеОрганизации;				
				//ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетДебетаДляПени, СчетДебетаДляПениНУ, Выборка.НомерСубконтоПодразделенияДляПени, Выборка.ПодразделениеОрганизации, "СубконтоДтНУ");
			КонецЕсли;
			
			Строка.СчетДтНУ = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", Строка.СчетДт), , , КонецМесяца(ПериодРегистрации));			
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 1, Строка.СубконтоДт1, "СубконтоДтНУ");
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 2, Строка.СубконтоДт2, "СубконтоДтНУ");
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 3, Строка.СубконтоДт3, "СубконтоДтНУ");
		КонецЕсли;			
		
		СчетКредита = Справочники.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование.СчетУчетаРасчетовСКонтрагентомБУ;
				
		Если НЕ ЗначениеЗаполнено(СчетКредита) Тогда
			СчетКредита = ПланыСчетов.Типовой.ОбязательстваПоВзносамОСМС;
		КонецЕсли;
	
		СчетКредитаНУ =  ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНУВОСМС(СчетКредита, КонецМесяца(ПериодРегистрации));
		
		СубконтоКт2 = Выборка.ФизЛицо;
		Строка.СчетКт 		= СчетКредита;
		Строка.СубконтоКт1	= СубконтоКредита1;
		Если ВедетсяУчетПоСотрудникам Тогда
			Строка.СубконтоКт2 	= Выборка.ФизЛицо;
		КонецЕсли;
		
		
		Строка.СчетКтНУ 	= СчетКредитаНУ;
		ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетКредита, СчетКредитаНУ, 1, СубконтоКредита1, "СубконтоКтНУ");
		ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетКредита, СчетКредитаНУ, 2, Выборка.ФизЛицо, "СубконтоКтНУ");
		
		Строка.Сумма		= Выборка.СуммаПроводки;
		
		Если мОтображатьСтруктурныеПодразделения Тогда 
			Строка.СтруктурноеПодразделениеДт	= Выборка.СтруктурноеПодразделение;
			Строка.СтруктурноеПодразделениеКт 	= Выборка.СтруктурноеПодразделение; // отражаем ИПН на СП взаиморасчетов с контрагентом
		КонецЕсли;
				
	КонецЦикла;	
	
	#КонецОбласти
	
	
	
	#Область ОтражениеВОСМСПоРаботникам
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// Отражение ВОСМС
	
	
	ВОСМСИсчисленныеТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВОСМСРасчетыСФондами.ФизЛицо,
	|	ВЫБОР
	|		КОГДА ВОСМСРасчетыСФондами.ПодразделениеОрганизации <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА ВОСМСРасчетыСФондами.ПодразделениеОрганизации
	|		ИНАЧЕ МестаРаботы.ПодразделениеОрганизации
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	ВОСМСРасчетыСФондами.ВидПлатежа,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА &парамСчетДтДляПени
	|		ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|	КОНЕЦ КАК СчетДтДляПени,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ1, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ КАК СубконтоДтДляПени1,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ2, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ КАК СубконтоДтДляПени2,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ3, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ КАК СубконтоДтДляПени3,
	|	ЕСТЬNULL(ВидСубконтоВидыСтатьиЗатратДляПени.НомерСтроки, 0) КАК НомерСубконтоВидыСтатьиЗатратДляПени,
	|	ЕСТЬNULL(ВидСубконтоПодразделенияДляПени.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДляПени,"+?(мОтображатьСтруктурныеПодразделения,"
	|	ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|	СУММА(ВОСМСРасчетыСФондами.Взнос) КАК Взнос	
	|ИЗ
	|	РегистрНакопления.ВОСМСРасчетыСФондами КАК ВОСМСРасчетыСФондами";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	ВОСМСИсчисленныеТекст = ВОСМСИсчисленныеТекст + "
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|		ПО ВОСМСРасчетыСФондами.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
 	
	Если мОтображатьСтруктурныеПодразделения Тогда
		ВОСМСИсчисленныеТекст = ВОСМСИсчисленныеТекст+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,Организация=&парамГоловнаяОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСП
		|			ПО ВОСМСРасчетыСФондами.ФизЛицо = УчетВзаиморасчетовПоСП.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	ВОСМСИсчисленныеТекст = ВОСМСИсчисленныеТекст + "
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + МестаРаботыТекст + " КАК МестаРаботы
	|		ПО ВОСМСРасчетыСФондами.ФизЛицо = МестаРаботы.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетПениОПВиСО КАК РасчетПениОПВиСО
	|		ПО ВОСМСРасчетыСФондами.Регистратор = РасчетПениОПВиСО.Ссылка

	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидСубконтоВидыСтатьиЗатратДляПени
	|		ПО ВидСубконтоВидыСтатьиЗатратДляПени.Ссылка = (ВЫБОР
	|															КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|																ТОГДА &парамСчетДтДляПени
	|															ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|														КОНЕЦ)
	|		   И ВидСубконтоВидыСтатьиЗатратДляПени.ВидСубконто = &парамВидСубконтоСтатьиЗатрат
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидСубконтоПодразделенияДляПени
	|		ПО ВидСубконтоПодразделенияДляПени.Ссылка = (ВЫБОР
	|															КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|																ТОГДА &парамСчетДтДляПени
	|															ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|														КОНЕЦ)
	|		   И ВидСубконтоПодразделенияДляПени.ВидСубконто = &парамВидСубконтоПодразделения
	|
	|ГДЕ
	|	ВОСМСРасчетыСФондами.Период >= &парамНачалоМесяца И 
	|	ВОСМСРасчетыСФондами.Период <= &парамКонецМесяца И 
	|	ВОСМСРасчетыСФондами.Организация = &парамОрганизация И 
	|	ВОСМСРасчетыСФондами.ВидДвижения = &парамВидДвиженияПриход И
	|	ВОСМСРасчетыСФондами.ВидСтроки = &парамВидСтрокиИсчисление И
	|	ВОСМСРасчетыСФондами.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица И 
	|	ВОСМСРасчетыСФондами.Взнос <> 0 И
	|	ВОСМСРасчетыСФондами.НеОтражатьВРеглУчете = Ложь И
	|	ВОСМСРасчетыСФондами.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица И
	|	НЕ ВОСМСРасчетыСФондами.Регистратор ССЫЛКА Документ.ОтражениеНалоговойОтчетностиВРеглУчете  
	|
	|
	|СГРУППИРОВАТЬ ПО
	|	ВОСМСРасчетыСФондами.ФизЛицо,
	|	ВЫБОР
	|		КОГДА ВОСМСРасчетыСФондами.ПодразделениеОрганизации <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ТОГДА ВОСМСРасчетыСФондами.ПодразделениеОрганизации
	|		ИНАЧЕ МестаРаботы.ПодразделениеОрганизации
	|	КОНЕЦ,
	|	ВОСМСРасчетыСФондами.ВидПлатежа,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА &парамСчетДтДляПени
	|		ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ1, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ2, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ3, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВидСубконтоВидыСтатьиЗатратДляПени.НомерСтроки, 0),"+?(мОтображатьСтруктурныеПодразделения,"
	|	ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+",
	|	ЕСТЬNULL(ВидСубконтоПодразделенияДляПени.НомерСтроки, 0)
	|";

	Запрос.Текст = ВОСМСИсчисленныеТекст;
	
	СчетКредита = Справочники.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование.СчетУчетаРасчетовСКонтрагентомБУ;
	
	СчетДебета = ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоОплатеТруда;
	Если НЕ ЗначениеЗаполнено(СчетКредита) Тогда
		СчетКредита = ПланыСчетов.Типовой.ОбязательстваПоВзносамОСМС;
	КонецЕсли;
	
	СчетДебетаНУПоУмолчанию = ПланыСчетов.Налоговый.ВзаиморасчетыСРаботниками;	
	СчетДебетаНУ = ПроцедурыБухгалтерскогоУчета.ЗаполнитьСчетНалоговогоУчетаПоУмолчанию(СчетДебета, КонецМесяца(ПериодРегистрации),СчетДебетаНУПоУмолчанию);
	
	СчетКредитаНУ = ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНУВОСМС(СчетКредита,КонецМесяца(ПериодРегистрации));

	СтатьяЗатратПеняПоВОСМС = Справочники.СтатьиЗатрат.ПеняПоВОСМС;

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Строка = ОтражениеВУчете.Добавить();
		Строка.ФизЛицо = Выборка.ФизЛицо;
		
		// Ставим на разные счета затрат в зависимости от вида платежа
		Если Выборка.ВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.Налог
			 Или Выборка.ВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.НалогАкт 
			 Или Выборка.ВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.НалогСам Тогда
			Строка.СчетДт 		= СчетДебета;
			Строка.СубконтоДт1 	= Выборка.Физлицо;
			Строка.СчетДтНУ 		= СчетДебетаНУ;
			Если ВедетсяУчетПоСотрудникам Тогда
				ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетДебета, СчетДебетаНУ, 1, Выборка.ФизЛицо, "СубконтоДтНУ");
				Строка.СубконтоДтНУ1 	= Выборка.Физлицо;
			КонецЕсли;
			
		Иначе // Пеня по ВОСМС
			
			Строка.СчетДт			= Выборка.СчетДтДляПени;
			Строка.СчетДтНУ 		= СчетДебетаДляПениНУ;
			
			// Статья затрат
			Если Выборка.НомерСубконтоВидыСтатьиЗатратДляПени <> 0 Тогда
				Если ЗначениеЗаполнено(Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоВидыСтатьиЗатратДляПени]) Тогда
					Строка["СубконтоДт" + Выборка.НомерСубконтоВидыСтатьиЗатратДляПени] = Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоВидыСтатьиЗатратДляПени];
					ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетДебетаДляПени, СчетДебетаДляПениНУ, Выборка.НомерСубконтоВидыСтатьиЗатратДляПени, Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоВидыСтатьиЗатратДляПени], "СубконтоДтНУ");
				Иначе
					Строка["СубконтоДт" + Выборка.НомерСубконтоВидыСтатьиЗатратДляПени] = СтатьяЗатратПеняПоВОСМС;
					ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетДебетаДляПени, СчетДебетаДляПениНУ, Выборка.НомерСубконтоВидыСтатьиЗатратДляПени, СтатьяЗатратПеняПоВОСМС, "СубконтоДтНУ");
				КонецЕсли;
			КонецЕсли;
			
			// Подразделение
			Если Выборка.НомерСубконтоПодразделенияДляПени <> 0 Тогда
				Если ЗначениеЗаполнено(Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени]) Тогда
					Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени] = Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени];
					ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетДебетаДляПени, СчетДебетаДляПениНУ, Выборка.НомерСубконтоПодразделенияДляПени, Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени], "СубконтоДтНУ");
				Иначе 
					Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени]= Выборка.ПодразделениеОрганизации;
					ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетДебетаДляПени, СчетДебетаДляПениНУ, Выборка.НомерСубконтоПодразделенияДляПени, Выборка.ПодразделениеОрганизации, "СубконтоДтНУ");
				КонецЕсли;
			КонецЕсли;
			
			
			// Заполним оставшиеся субконто
			Для Ном = 1 По 3 Цикл
				Если НЕ ЗначениеЗаполнено(Строка["СубконтоДт" + Ном]) Тогда
					Строка["СубконтоДт" + Ном] = Выборка["СубконтоДтДляПени" + Ном];
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		Строка.СчетКт 		= СчетКредита;
		
		Строка.СубконтоКт1 	= Выборка.ВидПлатежа;
		Строка.СубконтоКт2	= Выборка.Физлицо;
		
		Строка.СчетКтНУ 	= СчетКредитаНУ;
		ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетКредита, СчетКредитаНУ, 1, Выборка.ВидПлатежа, "СубконтоКтНУ");
		Если ВедетсяУчетПоСотрудникам Тогда
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, СчетКредита, СчетКредитаНУ, 2, Выборка.Физлицо, "СубконтоКтНУ");   		
		КонецЕсли;
					
		Строка.Сумма		= Выборка.Взнос;
		
		Если мОтображатьСтруктурныеПодразделения Тогда
			Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
			Строка.СтруктурноеПодразделениеКт = Выборка.СтруктурноеПодразделение;
		КонецЕсли;
		
	КонецЦикла;	

	#КонецОбласти
	
	#Область ОтражениеСО
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение социальных отчислений

   	// СОИсчисленный
	//	Поля:
	//		ФизЛицо
	//		ВидПлатежа
	//		Отчисление
	//	
	//	Описание:
	//	Исчисленные социальные отчисления по видам платежа

    СОИсчисленныйТекст = "
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	СОРасчетыСФондами.Регистратор КАК Регистратор,
    |	СОРасчетыСФондами.ФизЛицо КАК ФизЛицо,
    |	СОРасчетыСФондами.ВидПлатежа КАК ВидПлатежа,
    |	СУММА(СОРасчетыСФондами.Отчисление) КАК Отчисление
    |
    |ПОМЕСТИТЬ ВТ_СОИсчисленный
    |ИЗ
    |	РегистрНакопления.СОРасчетыСФондами КАК СОРасчетыСФондами";
    
    Если МенеджерВТ <> Неопределено Тогда
    
    СОИсчисленныйТекст = СОИсчисленныйТекст + "
    |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
    |		ПО СОРасчетыСФондами.ФизЛицо = СписокФизЛиц.ФизЛицо";
    
    КонецЕсли;
	
	СОИсчисленныйТекст = СОИсчисленныйТекст + "
	|
    |ГДЕ 
	|	СОРасчетыСФондами.Период >= &парамНачалоМесяца И 
	|	СОРасчетыСФондами.Период <= &парамКонецМесяца И 
	|	СОРасчетыСФондами.Организация = &парамОрганизация И 
	|	СОРасчетыСФондами.ВидДвижения = &парамВидДвиженияПриход И
	|	СОРасчетыСФондами.ВидСтроки = &парамВидСтрокиИсчисление И
	|	СОРасчетыСФондами.Отчисление <> 0 И
	|	НЕ СОРасчетыСФондами.Регистратор ССЫЛКА Документ.ОтражениеНалоговойОтчетностиВРеглУчете  
	|
	|СГРУППИРОВАТЬ ПО
	|   СОРасчетыСФондами.Регистратор,
	|	СОРасчетыСФондами.ФизЛицо,
	|   СОРасчетыСФондами.ВидПлатежа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
    |";
    
    Запрос.Текст = СОИсчисленныйТекст;
    Запрос.Выполнить();
    СОИсчисленныйТекст = "ВТ_СОИсчисленный";
    
   	// БУДоходыПоСчетам
	//	Поля:
	//		ФизЛицо
	//		СчетДт
	//		СубконтоДт1
	//		СубконтоДт2
	//		СубконтоДт3
	//		Результат
	//	
	//	Описание:
	//	Данные отражения начислений в бухучете

    БУДоходыПоСчетам = "
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	БУНачисления.ФизЛицо,
    |	БУНачисления.СчетДт,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
    |		ИНАЧЕ БУНачисления.СубконтоДт1
    |	КОНЕЦ КАК СубконтоДт1,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
    |		ИНАЧЕ БУНачисления.СубконтоДт2
    |	КОНЕЦ КАК СубконтоДт2,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
    |		ИНАЧЕ БУНачисления.СубконтоДт3
    |	КОНЕЦ КАК СубконтоДт3,
	// - НУ -
    |	БУНачисления.СчетДтНУ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ1
    |	КОНЕЦ КАК СубконтоДтНУ1,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ2
    |	КОНЕЦ КАК СубконтоДтНУ2,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ3
    |	КОНЕЦ КАК СубконтоДтНУ3,
	// - НУ -
    |	БУНачисления.СтруктурноеПодразделение,
    |	БУНачисления.СтруктурноеПодразделениеОсновное,
	|	СУММА(БУНачисления.Результат) КАК Результат
	|
	|ПОМЕСТИТЬ ВТ_БУДоходыПоСчетамСО
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1,		    
	|		БУОсновныеНачисления.СубконтоДт2,		    
	|		БУОсновныеНачисления.СубконтоДт3,		    
	// - НУ -
	|		БУОсновныеНачисления.СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1,		    
	|		БУОсновныеНачисления.СубконтоДтНУ2,		    
	|		БУОсновныеНачисления.СубконтоДтНУ3,		    
	// - НУ -                                 
	|											"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|															"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделениеОсновное,
	|		БУОсновныеНачисления.Результат
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО БУОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	Если мОтображатьСтруктурныеПодразделения Тогда
		БУДоходыПоСчетам = БУДоходыПоСчетам+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация) КАК УчетВзаиморасчетовПоСП
		|			ПО БУОсновныеНачисления.Сотрудник = УчетВзаиморасчетовПоСП.Сотрудник
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСППоОсновномуМестуРаботы
		|			ПО БУОсновныеНачисления.Сотрудник.ФизЛицо = УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|	ГДЕ
	|		БУОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация И
	|		БУОсновныеНачисления.ПериодРегистрации = &парамНачалоМесяца И
	|		БУОсновныеНачисления.ВидРасчета.ОблагаетсяСО <> &парамНеОблагаетсяЦеликом И
	|		(НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,		    
	|		БУДополнительныеНачисления.СубконтоДт2,		    
	|		БУДополнительныеНачисления.СубконтоДт3,		    
	// - НУ -
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,		    
	|		БУДополнительныеНачисления.СубконтоДтНУ2,		    
	|		БУДополнительныеНачисления.СубконтоДтНУ3,		    
	// - НУ -
	|											"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|															"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделениеОсновное,
	|		БУДополнительныеНачисления.Результат
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО БУДополнительныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	Если мОтображатьСтруктурныеПодразделения Тогда
		БУДоходыПоСчетам = БУДоходыПоСчетам+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация) КАК УчетВзаиморасчетовПоСП
		|			ПО БУДополнительныеНачисления.Сотрудник = УчетВзаиморасчетовПоСП.Сотрудник
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСППоОсновномуМестуРаботы
		|			ПО БУДополнительныеНачисления.Сотрудник.ФизЛицо = УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|	ГДЕ
	|		БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация И
	|		БУДополнительныеНачисления.ПериодРегистрации = &парамНачалоМесяца И
	|		БУДополнительныеНачисления.ВидРасчета.ОблагаетсяСО <> &парамНеОблагаетсяЦеликом И
	|		(НЕ БУДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом)) КАК БУНачисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт1
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт1.Ссылка
	|		   И ВидыСубконтоДт1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт2
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт2.Ссылка
	|		   И ВидыСубконтоДт2.НомерСтроки = 2
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт3
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт3.Ссылка
	|		   И ВидыСубконтоДт3.НомерСтроки = 3
	// - НУ -
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ1
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ1.Ссылка
	|		   И ВидыСубконтоДтНУ1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ2
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ2.Ссылка
	|		   И ВидыСубконтоДтНУ2.НомерСтроки = 2
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ3
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ3.Ссылка
	|		   И ВидыСубконтоДтНУ3.НомерСтроки = 3
	// - НУ -
	|
	|СГРУППИРОВАТЬ ПО
    |	БУНачисления.ФизЛицо,
    |	БУНачисления.СчетДт,
	// - НУ -
    |	БУНачисления.СчетДтНУ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ1
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ2
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ3
    |	КОНЕЦ,
	// - НУ -
    |	БУНачисления.СтруктурноеПодразделение,
    |	БУНачисления.СтруктурноеПодразделениеОсновное,
	|	ВЫБОР 
    |		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
    |		ИНАЧЕ БУНачисления.СубконтоДт1
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
    |		ИНАЧЕ БУНачисления.СубконтоДт2
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
    |		ИНАЧЕ БУНачисления.СубконтоДт3
    |	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
    |";

	Запрос.Текст = БУДоходыПоСчетам;
	Запрос.Выполнить();
	БУДоходыПоСчетам = "ВТ_БУДоходыПоСчетамСО";

	// сначала определим счет, на который будем относить затраты по социальным отчислениям и распределим пропорционально сумме начислений,
	// а потом на основании счета подставим значения некоторых субконто по умолчанию
	РаспределениеСОПоСчетамЗатрат = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СОРасчетыСФондами.ФизЛицо,
	|	СОРасчетыСФондами.ВидПлатежа,
	|	СОРасчетыСФондами.Регистратор,
	|	СОРасчетыСФондами.Отчисление,
	|	ВЫБОР 
	|		КОГДА БУСуммаНачислений.Результат <> 0 
	|			ТОГДА ВЫРАЗИТЬ(СОРасчетыСФондами.Отчисление * БУНачисления.Результат / БУСуммаНачислений.Результат КАК ЧИСЛО(15, 2)) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаПроводки,
	|	ВЫБОР
	|		КОГДА НЕ(БУНачисления.СчетДт ЕСТЬ NULL) 
	|				И НЕ(БУНачисления.СчетДт В (&парамСчетаРезервовБезСО) И БУНачисления.СубконтоДт1 В (&парамРезервыБезСО))
	|			ТОГДА БУНачисления.СчетДт
	|		КОГДА ОсновнойСпособОтражения.СпособОтраженияВБухучете = &парамСпособПоУмолчанию // особых в ФЛ + ВР не нашли - проверим по подразделению
	|					И НЕ (МестаРаботы.СпособОтраженияВБухучете ЕСТЬ NULL)
	|			ТОГДА МестаРаботы.СпособОтраженияВБухучете.СчетДт
	|		ИНАЧЕ ОсновнойСпособОтражения.СпособОтраженияВБухучете.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	БУНачисления.СчетДт КАК СчетДтОплатаТруда,
	|	БУНачисления.СубконтоДт1,
	|	БУНачисления.СубконтоДт2,
	|	БУНачисления.СубконтоДт3,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА &парамСчетДтДляПени
	|		ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|	КОНЕЦ КАК СчетДтДляПени,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ1, НЕОПРЕДЕЛЕНО) 
	|	КОНЕЦ КАК СубконтоДтДляПени1,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ2, НЕОПРЕДЕЛЕНО) 
	|	КОНЕЦ КАК СубконтоДтДляПени2,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ3, НЕОПРЕДЕЛЕНО) 
	|	КОНЕЦ КАК СубконтоДтДляПени3,
	// - НУ - 
	|	ВЫБОР
	|		КОГДА НЕ(БУНачисления.СчетДтНУ ЕСТЬ NULL) 
	|				И НЕ(БУНачисления.СубконтоДтНУ1 В (&парамРезервыБезСО))
	|			ТОГДА БУНачисления.СчетДтНУ
	|		КОГДА ОсновнойСпособОтражения.СпособОтраженияВБухучете = &парамСпособПоУмолчанию // особых в ФЛ + ВР не нашли - проверим по подразделению
	|					И НЕ (МестаРаботы.СпособОтраженияВБухучете ЕСТЬ NULL)
	|			ТОГДА МестаРаботы.СпособОтраженияВБухучете.СчетДтНУ
	|		ИНАЧЕ ОсновнойСпособОтражения.СпособОтраженияВБухучете.СчетДтНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	БУНачисления.СубконтоДтНУ1,
	|	БУНачисления.СубконтоДтНУ2,
	|	БУНачисления.СубконтоДтНУ3,
	// - НУ -
	|	БУНачисления.СтруктурноеПодразделение,
	|	БУНачисления.СтруктурноеПодразделениеОсновное,
	|	МестаРаботы.ПодразделениеОрганизации,
	|	МестаРаботы.СпособОтраженияВБухучете КАК СпособОтраженияВБухучетеДляПодразделения,
	|	ОсновнойСпособОтражения.СпособОтраженияВБухучете КАК ОсновнойСпособОтраженияВБухучете,
	|	ЕСТЬNULL(ВидыСубконтоПодразделенияДляПени.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДляПени,
	|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДляПени.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДляПени
	|
	|ПОМЕСТИТЬ ВТ_СОПоСчетамЗатрат
	|ИЗ	
	|	" + СОИсчисленныйТекст + " КАК СОРасчетыСФондами
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетПениОПВиСО КАК РасчетПениОПВиСО
	|		ПО СОРасчетыСФондами.Регистратор = РасчетПениОПВиСО.Ссылка 
	|
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + БУДоходыПоСчетам + " КАК БУНачисления
	|		ПО СОРасчетыСФондами.ФизЛицо = БУНачисления.ФизЛицо 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							БУНачисления.ФизЛицо,
	|							СУММА(БУНачисления.Результат) КАК Результат
	|						ИЗ
	|							" + БУДоходыПоСчетам + " КАК БУНачисления
	|						СГРУППИРОВАТЬ ПО
	|							БУНачисления.ФизЛицо) КАК БУСуммаНачислений
	|		ПО СОРасчетыСФондами.ФизЛицо = БУСуммаНачислений.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОсновнойСпособОтраженияТекст + " КАК ОсновнойСпособОтражения
	|		ПО СОРасчетыСФондами.ФизЛицо = ОсновнойСпособОтражения.ФизЛицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + МестаРаботыТекст + " КАК МестаРаботы
	|		ПО СОРасчетыСФондами.ФизЛицо = МестаРаботы.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоПодразделенияДляПени
	|		ПО ВидыСубконтоПодразделенияДляПени.Ссылка = (ВЫБОР
	|															КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|																ТОГДА &парамСчетДтДляПени
	|															ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|														КОНЕЦ)
	|		   И ВидыСубконтоПодразделенияДляПени.ВидСубконто = &парамВидСубконтоПодразделения
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДляПени
	|		ПО ВидыСубконтоСтатьиЗатратДляПени.Ссылка = (ВЫБОР
	|															КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|																ТОГДА &парамСчетДтДляПени
	|															ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|														КОНЕЦ)
	|		   И ВидыСубконтоСтатьиЗатратДляПени.ВидСубконто = &парамВидСубконтоСтатьиЗатрат
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт
	|";

	Запрос.Текст = РаспределениеСОПоСчетамЗатрат;
	Запрос.Выполнить();
	РаспределениеСОПоСчетамЗатрат = "ВТ_СОПоСчетамЗатрат";

	// Распределяем социальные отчисления по счетам затрат пропорционально сумме начислений,
	// с которых брались эти отчисления
	РаспределениеСОПоСчетамЗатрат = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеУчета.ФизЛицо,
	|	ДанныеУчета.ВидПлатежа,
	|	ДанныеУчета.Регистратор,
	|	ДанныеУчета.Отчисление,
	|	ДанныеУчета.СуммаПроводки,
	|	ДанныеУчета.СчетДт,
	|	ДанныеУчета.СчетДтНУ КАК СчетДтНУ,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт1 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезСО) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезСО))
	|			ТОГДА ДанныеУчета.СубконтоДт1
	|		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
	|		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт1
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт1
	|	КОНЕЦ КАК СубконтоДт1,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт2 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезСО) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезСО))
	|			ТОГДА ДанныеУчета.СубконтоДт2
	|		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
	|		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт2
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт2
	|	КОНЕЦ КАК СубконтоДт2,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт3 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезСО) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезСО))
	|			ТОГДА ДанныеУчета.СубконтоДт3
	|		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
	|		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт3
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	ДанныеУчета.СчетДтДляПени,
	|	ДанныеУчета.СубконтоДтДляПени1,
	|	ДанныеУчета.СубконтоДтДляПени2,
	|	ДанныеУчета.СубконтоДтДляПени3,
	// - НУ - 
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ1 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СубконтоДтНУ1 В (&парамРезервыБезСО))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ1
	|		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
	|		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ1
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ1
	|	КОНЕЦ КАК СубконтоДтНУ1,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ2 ЕСТЬ NULL)
	|				И НЕ (ДанныеУчета.СубконтоДтНУ1 В (&парамРезервыБезСО))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ2
	|		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
	|		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ2
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ2
	|	КОНЕЦ КАК СубконтоДтНУ2,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ3 ЕСТЬ NULL)
	|				И НЕ (ДанныеУчета.СубконтоДтНУ1 В (&парамРезервыБезСО))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ3
	|		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСО
	|		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ3
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ3
	|	КОНЕЦ КАК СубконтоДтНУ3,
	// - НУ -
    |	ДанныеУчета.СтруктурноеПодразделение,
    |	ДанныеУчета.СтруктурноеПодразделениеОсновное,
	|
    |	ДанныеУчета.ПодразделениеОрганизации,
	|   ЕСТЬNULL(ВидыСубконтоВидыСтатьиЗатратДляПени.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДляПени,
	|   ЕСТЬNULL(ВидыСубконтоПодразделенияДляПени.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДляПени
	|ИЗ	
	|	" + РаспределениеСОПоСчетамЗатрат + " КАК ДанныеУчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт1
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт1.Ссылка
	|		   И ВидыСубконтоДт1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт2
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт2.Ссылка
	|		   И ВидыСубконтоДт2.НомерСтроки = 2
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт3
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт3.Ссылка
	|		   И ВидыСубконтоДт3.НомерСтроки = 3
	// - НУ -
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ1
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДт1.Ссылка
	|		   И ВидыСубконтоДт1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ2
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДтНУ2.Ссылка
	|		   И ВидыСубконтоДтНУ2.НомерСтроки = 2
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ3
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДтНУ3.Ссылка
	|		   И ВидыСубконтоДтНУ3.НомерСтроки = 3
	// - НУ -
	|
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоВидыСтатьиЗатратДляПени
	|		ПО ВидыСубконтоВидыСтатьиЗатратДляПени.Ссылка = &парамСчетДтДляПени
	|		   И ВидыСубконтоВидыСтатьиЗатратДляПени.ВидСубконто = &парамВидСубконтоСтатьиЗатрат
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоПодразделенияДляПени
	|		ПО ВидыСубконтоПодразделенияДляПени.Ссылка = &парамСчетДтДляПени
	|		   И ВидыСубконтоПодразделенияДляПени.ВидСубконто = &парамВидСубконтоПодразделения
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
	|					&парамКонецМесяца,
	|					СчетКоррБУ = &парамПустойСчет
	|					И СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	|					И СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	|					И СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	|					И ВидЗатратНУ = НЕОПРЕДЕЛЕНО) КАК СоответствиеСчетовБУиНУДт
	|		ПО ДанныеУчета.СчетДт = СоответствиеСчетовБУиНУДт.СчетБУ
	|			И СоответствиеСчетовБУиНУДт.Учитывается	
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеУчета.Физлицо,
	|	ДанныеУчета.ВидПлатежа,
	|	ДанныеУчета.Регистратор
	|";

	Запрос.Текст = РаспределениеСОПоСчетамЗатрат;

	СчетКредита = Справочники.НалогиСборыОтчисления.ОбязательныеСоциальныеОтчисления.СчетУчетаРасчетовСКонтрагентомБУ;
	Если НЕ ЗначениеЗаполнено(СчетКредита) Тогда
		СчетКредита 		= ПланыСчетов.Типовой.ОбязательстваПоСоциальномуСтрахованию;
	КонецЕсли;
	СчетКредитаНУ = ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНУСО(СчетКредита, КонецМесяца(ПериодРегистрации));
	Если НЕ ЗначениеЗаполнено(СчетКредитаНУ) Тогда
		СчетКредитаНУ = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СчетКредита), , , КонецМесяца(ПериодРегистрации));
	КонецЕсли;
	
	//СчетДебетаДляПени 	= ПланыСчетов.Типовой.АдминистративныеРасходы; //-=-=
	//-=-=
	СчетДебетаДляПени 	= ПланыСчетов.Типовой.АдминистративныеРасходыЦА;
	//-=-=
	СчетДебетаДляПениНУ	= ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СчетДебетаДляПени), , , КонецМесяца(ПериодРегистрации));
		
	СтатьяЗатратПеняПоСО = Справочники.СтатьиЗатрат.ПеняПоСО;	
	
	Выборка = Запрос.Выполнить().Выбрать();
	мПромежуточнаяТаблица.Очистить();

	ЕстьДанные = Выборка.Следующий();
	Пока ЕстьДанные Цикл
		ТекущееФизЛицо = Выборка.ФизЛицо;
		ТекущийВидПлатежа = Выборка.ВидПлатежа;
		ТекущийРегистратор 	= Выборка.Регистратор;
		СуммаКРаспределению = Выборка.Отчисление;
		РаспределеннаяСумма = 0;
		
		Пока ЕстьДанные 
		   И Выборка.ФизЛицо = ТекущееФизЛицо 
		   И Выборка.ВидПлатежа = ТекущийВидПлатежа
		   И Выборка.Регистратор = ТекущийРегистратор Цикл
		   
			Строка = мПромежуточнаяТаблица.Добавить();
			Строка.ФизЛицо = ТекущееФизЛицо;
			
			// В зависимости от вида платежа (Налог/Взнос или пеня) ставим на разные счета затрат
			Если ТекущийВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.Налог
				 Или ТекущийВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.НалогАкт
				 Или ТекущийВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.НалогСам Тогда
				//Строка.СчетДт 		= Выборка.СчетДт; //-=-=
				//-=-=
				Если Лев(Выборка.СчетДт.Код,3) = "721" Тогда
					Если Выборка.СчетДт.Код = "7215" Тогда
						Строка.СчетДт 		= Выборка.СчетДт;
					Иначе
						Строка.СчетДт 		= ПланыСчетов.Типовой.РасходыПоСОиСН;
					КонецЕсли;
				Иначе
					Строка.СчетДт 		= Выборка.СчетДт;
				КонецЕсли;
				//-=-=
				Строка.СчетДтНУ 	= Выборка.СчетДтНУ;
				Строка.СубконтоДт1 	= Выборка.СубконтоДт1;
				Строка.СубконтоДт2 	= Выборка.СубконтоДт2;
				Строка.СубконтоДт3 	= Выборка.СубконтоДт3;
			Иначе // Пеня по СО
				Строка.СчетДт	    = Выборка.СчетДтДляПени;
				Строка.СчетДтНУ	    = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", Выборка.СчетДтДляПени), , , КонецМесяца(ПериодРегистрации));
				// Статья затрат
				Если Выборка.НомерСубконтоСтатьиЗатратДляПени <> 0 Тогда
					Если ЗначениеЗаполнено(Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоСтатьиЗатратДляПени]) Тогда
						Строка["СубконтоДт" + Выборка.НомерСубконтоСтатьиЗатратДляПени] = Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоСтатьиЗатратДляПени];
					Иначе 
						Строка["СубконтоДт" + Выборка.НомерСубконтоСтатьиЗатратДляПени]	= СтатьяЗатратПеняПоСО;
					КонецЕсли;
				КонецЕсли;
				
				// Подразделение организации
				Если Выборка.НомерСубконтоПодразделенияДляПени <> 0 Тогда
					Если ЗначениеЗаполнено(Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени]) Тогда
						Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени] = Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени];
					Иначе 
						Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени]= Выборка.ПодразделениеОрганизации;
					КонецЕсли;
				КонецЕсли;
				
				// Заполним оставшиеся субконто
				Для Ном = 1 по 3 Цикл
					Если НЕ ЗначениеЗаполнено(Строка["СубконтоДт" + Ном]) Тогда 
						Строка["СубконтоДт" + Ном] = Выборка["СубконтоДтДляПени" + Ном];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;			
			
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 1, Строка.СубконтоДт1, "СубконтоДтНУ");
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 2, Строка.СубконтоДт2, "СубконтоДтНУ");
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 3, Строка.СубконтоДт3, "СубконтоДтНУ");
			
			Строка.СчетКт 		= СчетКредита;
			Строка.СубконтоКт1 	= Выборка.ВидПлатежа;
			Если ВедетсяУчетПоСотрудникам Тогда
				Строка.СубконтоКт2	= Выборка.Физлицо;
			КонецЕсли;
			
			Строка.СчетКтНУ 	= СчетКредитаНУ;
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетКт, Строка.СчетКтНУ, 1, Строка.СубконтоКт1, "СубконтоКтНУ");
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетКт, Строка.СчетКтНУ, 2, Строка.СубконтоКт2, "СубконтоКтНУ");
			
			Строка.Сумма		= Выборка.СуммаПроводки;
			Если мОтображатьСтруктурныеПодразделения Тогда
				Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
				Строка.СтруктурноеПодразделениеКт = Выборка.СтруктурноеПодразделениеОсновное;
			КонецЕсли;
			РаспределеннаяСумма = РаспределеннаяСумма + Выборка.СуммаПроводки;
			
			ЕстьДанные = Выборка.Следующий();
		КонецЦикла;
		
		// Остаток на последнюю строку по работнику
		Если СуммаКРаспределению <> РаспределеннаяСумма Тогда
			Строка.Сумма = Строка.Сумма + (СуммаКРаспределению - РаспределеннаяСумма);
		КонецЕсли;
	КонецЦикла;	

	// переносим в табличную часть документа
	ПеренестиОтражениеВУчетеИзПромежуточнойТаблицы();

	#КонецОбласти
	
	
	#Область ОтражениеСН
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение исчисленного СН

	// ФизлицаИностранныеСпециалисты
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	сисок физлиц-иностранных специалистов
	ФизлицаИностранныеСпециалистыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&парамКонецМесяца) КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.ИностранныйСпециалист)";

	Запрос.Текст = ФизлицаИностранныеСпециалистыТекст;

	// СНИсчисленный
	//	Поля:
	//		ФизЛицо
	//		Налог
	//	
	//	Описание:
	//	Исчисленный социальный налог

    СНИсчисленныйТекст = "
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	СНИсчисленный.ФизЛицо КАК ФизЛицо,
    |	СНИсчисленный.СтруктурнаяЕдиница,
    |	СУММА(СНИсчисленный.Налог) КАК Налог
    |
    |ПОМЕСТИТЬ ВТ_СНИсчисленный
    |ИЗ
    |	РегистрНакопления.СНИсчисленный КАК СНИсчисленный";
    
    Если МенеджерВТ <> Неопределено Тогда
    
    СНИсчисленныйТекст = СНИсчисленныйТекст + "
    |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
    |		ПО СНИсчисленный.ФизЛицо = СписокФизЛиц.ФизЛицо";
    
    КонецЕсли;
    
	СНИсчисленныйТекст = СНИсчисленныйТекст + "
	|
    |ГДЕ
	|	СНИсчисленный.Период >= &парамНачалоМесяца И 
	|	СНИсчисленный.Период <= &парамКонецМесяца И 
	|	СНИсчисленный.Организация = &парамОрганизация И
	|	СНИсчисленный.Налог <> 0 И
	|	СНИсчисленный.НеОтражатьВРеглУчете = ЛОЖЬ И
	|	НЕ СНИсчисленный.Регистратор ССЫЛКА Документ.ОтражениеНалоговойОтчетностиВРеглУчете  
	|
	|СГРУППИРОВАТЬ ПО
	|   СНИсчисленный.ФизЛицо,
	|	СНИсчисленный.СтруктурнаяЕдиница
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
    |";
    
    Запрос.Текст = СНИсчисленныйТекст;
    Запрос.Выполнить();
    СНИсчисленныйТекст = "ВТ_СНИсчисленный";
    
   	// БУДоходыПоСчетам
	//	Поля:
	//		ФизЛицо
	//		СчетДт
	//		СубконтоДт1
	//		СубконтоДт2
	//		СубконтоДт3
	//		Результат
	//	
	//	Описание:
	//	Данные отражения начислений в бухучете
	
    БУДоходыПоСчетам = "
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	БУНачисления.ФизЛицо,
    |	БУНачисления.СчетДт,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
    |		ИНАЧЕ БУНачисления.СубконтоДт1
    |	КОНЕЦ КАК СубконтоДт1,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
    |		ИНАЧЕ БУНачисления.СубконтоДт2
    |	КОНЕЦ КАК СубконтоДт2,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
    |		ИНАЧЕ БУНачисления.СубконтоДт3
    |	КОНЕЦ КАК СубконтоДт3,
	// - НУ -
    |	БУНачисления.СчетДтНУ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ1
    |	КОНЕЦ КАК СубконтоДтНУ1,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ2
    |	КОНЕЦ КАК СубконтоДтНУ2,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ3
    |	КОНЕЦ КАК СубконтоДтНУ3,
	// - НУ -
	|	БУНачисления.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	БУНачисления.СтруктурноеПодразделениеОсновное КАК СтруктурноеПодразделениеОсновное,
	|	СУММА(БУНачисления.Результат) КАК Результат
	|
	|ПОМЕСТИТЬ ВТ_БУДоходыПоСчетамСН
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1,		    
	|		БУОсновныеНачисления.СубконтоДт2,		    
	|		БУОсновныеНачисления.СубконтоДт3,		    
	// - НУ -
	|		БУОсновныеНачисления.СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1,		    
	|		БУОсновныеНачисления.СубконтоДтНУ2,		    
	|		БУОсновныеНачисления.СубконтоДтНУ3,		    
	// - НУ -
	|											"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|															"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделениеОсновное,
	|		БУОсновныеНачисления.Результат
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО БУОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
 	
	Если мОтображатьСтруктурныеПодразделения Тогда
		БУДоходыПоСчетам = БУДоходыПоСчетам+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация) КАК УчетВзаиморасчетовПоСП
		|			ПО БУОсновныеНачисления.Сотрудник = УчетВзаиморасчетовПоСП.Сотрудник
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСППоОсновномуМестуРаботы
		|			ПО БУОсновныеНачисления.Сотрудник.ФизЛицо = УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|	ГДЕ
	|		БУОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация И
	|		БУОсновныеНачисления.ПериодРегистрации = &парамНачалоМесяца И
	|		БУОсновныеНачисления.ВидРасчета.ОблагаетсяСН <> &парамНеОблагаетсяЦеликом И
	|		(НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,		    
	|		БУДополнительныеНачисления.СубконтоДт2,		    
	|		БУДополнительныеНачисления.СубконтоДт3,		    
	// - НУ -
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,		    
	|		БУДополнительныеНачисления.СубконтоДтНУ2,		    
	|		БУДополнительныеНачисления.СубконтоДтНУ3,		    
	// - НУ -
	|											"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|															"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделениеОсновное,
	|		БУДополнительныеНачисления.Результат
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО БУДополнительныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
 	
	Если мОтображатьСтруктурныеПодразделения Тогда
		БУДоходыПоСчетам = БУДоходыПоСчетам+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация) КАК УчетВзаиморасчетовПоСП
		|			ПО БУДополнительныеНачисления.Сотрудник = УчетВзаиморасчетовПоСП.Сотрудник
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСППоОсновномуМестуРаботы
		|			ПО БУДополнительныеНачисления.Сотрудник.ФизЛицо = УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|	ГДЕ
	|		БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация И
	|		БУДополнительныеНачисления.ПериодРегистрации = &парамНачалоМесяца И
	|		БУДополнительныеНачисления.ВидРасчета.ОблагаетсяСН <> &парамНеОблагаетсяЦеликом И
	|		(НЕ БУДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом)) КАК БУНачисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт1
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт1.Ссылка
	|		   И ВидыСубконтоДт1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт2
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт2.Ссылка
	|		   И ВидыСубконтоДт2.НомерСтроки = 2
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт3
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт3.Ссылка
	|		   И ВидыСубконтоДт3.НомерСтроки = 3
	// - НУ -
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ1
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ1.Ссылка
	|		   И ВидыСубконтоДтНУ1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ2
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ2.Ссылка
	|		   И ВидыСубконтоДтНУ2.НомерСтроки = 2
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ3
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ3.Ссылка
	|		   И ВидыСубконтоДтНУ3.НомерСтроки = 3
	|
	// - НУ -
	|
	|СГРУППИРОВАТЬ ПО
    |	БУНачисления.ФизЛицо,
	// - НУ -
    |	БУНачисления.СчетДтНУ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ1
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ2
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ3
    |	КОНЕЦ,
	// - НУ -
	|	БУНачисления.СтруктурноеПодразделение,
	|	БУНачисления.СтруктурноеПодразделениеОсновное,
	|	БУНачисления.СчетДт,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
    |		ИНАЧЕ БУНачисления.СубконтоДт1
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
    |		ИНАЧЕ БУНачисления.СубконтоДт2
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
    |		ИНАЧЕ БУНачисления.СубконтоДт3
    |	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
    |";

	Запрос.Текст = БУДоходыПоСчетам;
	Запрос.Выполнить();
	БУДоходыПоСчетам = "ВТ_БУДоходыПоСчетамСН";

	// сначала определим счет, на который будем относить затраты по социальному налогу и распределим пропорционально сумме начислений,
	// а потом на основании счета подставим значения некоторых субконто по умолчанию
	РаспределениеСНПоСчетамЗатрат = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СНИсчисленный.ФизЛицо,
	|	СНИсчисленный.СтруктурнаяЕдиница,
	|	СНИсчисленный.Налог,
	|	ВЫБОР 
	|		КОГДА БУСуммаНачислений.Результат <> 0 
	|			ТОГДА ВЫРАЗИТЬ(СНИсчисленный.Налог * БУНачисления.Результат / БУСуммаНачислений.Результат КАК ЧИСЛО(15, 2)) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаПроводки,
	|	ВЫБОР
	|		КОГДА НЕ(БУНачисления.СчетДт ЕСТЬ NULL)
	|				И НЕ(БУНачисления.СчетДт В (&парамСчетаРезервовБезСН) И БУНачисления.СубконтоДт1 В (&парамРезервыБезСН))
	|			ТОГДА БУНачисления.СчетДт
	|		КОГДА ОсновнойСпособОтражения.СпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (МестаРаботы.СпособОтраженияВБухучете ЕСТЬ NULL)
	|			ТОГДА МестаРаботы.СпособОтраженияВБухучете.СчетДт
	|		ИНАЧЕ ОсновнойСпособОтражения.СпособОтраженияВБухучете.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	БУНачисления.СчетДт КАК СчетДтОплатаТруда,
	|	БУНачисления.СубконтоДт1,
	|	БУНачисления.СубконтоДт2,
	|	БУНачисления.СубконтоДт3,
	// - НУ - 
	|	ВЫБОР
	|		КОГДА НЕ(БУНачисления.СчетДтНУ ЕСТЬ NULL)
	|				И НЕ(БУНачисления.СубконтоДтНУ1 В (&парамРезервыБезСН))
	|			ТОГДА БУНачисления.СчетДтНУ
	|		КОГДА ОсновнойСпособОтражения.СпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (МестаРаботы.СпособОтраженияВБухучете ЕСТЬ NULL)
	|			ТОГДА МестаРаботы.СпособОтраженияВБухучете.СчетДтНУ
	|		ИНАЧЕ ОсновнойСпособОтражения.СпособОтраженияВБухучете.СчетДтНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	БУНачисления.СубконтоДтНУ1,
	|	БУНачисления.СубконтоДтНУ2,
	|	БУНачисления.СубконтоДтНУ3,
	// - НУ -
	|	БУНачисления.СтруктурноеПодразделение,
	|	БУНачисления.СтруктурноеПодразделениеОсновное," + ?(ПериодРегистрации >= Дата(2015, 07, 01), "
	|	&парамНалогиСборыСоциальныйНалог КАК СубконтоКт1,", "
	|	ВЫБОР 
	|		КОГДА ИностранныеСпециалисты.ФизЛицо ЕСТЬ NULL ТОГДА &парамНалогиСборыСоциальныйНалог 
	|		ИНАЧЕ &парамНалогиСборыСоциальныйНалогИностранныеСпециалисты 
	|	КОНЕЦ КАК СубконтоКт1,") + "
	|	МестаРаботы.ПодразделениеОрганизации,
	|	МестаРаботы.СпособОтраженияВБухучете КАК СпособОтраженияВБухучетеДляПодразделения,
	|	ОсновнойСпособОтражения.СпособОтраженияВБухучете КАК ОсновнойСпособОтраженияВБухучете
	|
	|ПОМЕСТИТЬ ВТ_СНПоСчетамЗатрат
	|ИЗ	
	|	" + СНИсчисленныйТекст + " КАК СНИсчисленный
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + БУДоходыПоСчетам + " КАК БУНачисления
	|		ПО СНИсчисленный.ФизЛицо = БУНачисления.ФизЛицо 
	|			И (ВЫБОР 
	|				КОГДА СНИсчисленный.СтруктурнаяЕдиница ССЫЛКА Справочник.Организации
	|					ТОГДА БУНачисления.СтруктурноеПодразделениеОсновное = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				ИНАЧЕ  СНИсчисленный.СтруктурнаяЕдиница = БУНачисления.СтруктурноеПодразделениеОсновное
	|			КОНЕЦ)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							БУНачисления.ФизЛицо,
	|							БУНачисления.СтруктурноеПодразделениеОсновное,
	|							СУММА(БУНачисления.Результат) КАК Результат
	|						ИЗ
	|							" + БУДоходыПоСчетам + " КАК БУНачисления
	|						СГРУППИРОВАТЬ ПО
	|								БУНачисления.ФизЛицо,
	|								БУНачисления.СтруктурноеПодразделениеОсновное) КАК БУСуммаНачислений
	|		ПО СНИсчисленный.ФизЛицо = БУСуммаНачислений.ФизЛицо
	|			И (ВЫБОР 
	|				КОГДА СНИсчисленный.СтруктурнаяЕдиница ССЫЛКА Справочник.Организации
	|					ТОГДА БУСуммаНачислений.СтруктурноеПодразделениеОсновное = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|				ИНАЧЕ  СНИсчисленный.СтруктурнаяЕдиница = БУСуммаНачислений.СтруктурноеПодразделениеОсновное
	|			КОНЕЦ)
	|   " + ?(ПериодРегистрации >= Дата(2015, 07, 01), "", "
	|	// иностранные специалисты
	|	ЛЕВОЕ СОЕДИНЕНИЕ (" + ФизлицаИностранныеСпециалистыТекст + ") КАК ИностранныеСпециалисты
	|		ПО ИностранныеСпециалисты.ФизЛицо = СНИсчисленный.ФизЛицо") + "
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОсновнойСпособОтраженияТекст + " КАК ОсновнойСпособОтражения
	|		ПО СНИсчисленный.ФизЛицо = ОсновнойСпособОтражения.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + МестаРаботыТекст + " КАК МестаРаботы
	|		ПО СНИсчисленный.ФизЛицо = МестаРаботы.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт
	|";
	
	Запрос.Текст = РаспределениеСНПоСчетамЗатрат;
	Запрос.Выполнить();
	РаспределениеСНПоСчетамЗатрат = "ВТ_СНПоСчетамЗатрат";

	// Распределяем социальный налог по счетам затрат пропорционально сумме начислений,
	// с которых брался этот налог
	РаспределениеСНПоСчетамЗатрат = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеУчета.ФизЛицо,
	|	ДанныеУчета.СтруктурнаяЕдиница,
	|	ДанныеУчета.Налог,
	|	ДанныеУчета.СуммаПроводки,
	|	ДанныеУчета.СчетДт,
	|	ДанныеУчета.СчетДтНУ КАК СчетДтНУ,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт1 ЕСТЬ NULL) 
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезСН) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезСН))
	|			ТОГДА ДанныеУчета.СубконтоДт1
	|		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
	|		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт1
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт1
	|	КОНЕЦ КАК СубконтоДт1,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт2 ЕСТЬ NULL) 
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезСН) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезСН))
	|			ТОГДА ДанныеУчета.СубконтоДт2
	|		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
	|		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт2
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт2
	|	КОНЕЦ КАК СубконтоДт2,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт3 ЕСТЬ NULL) 
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезСН) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезСН))
	|			ТОГДА ДанныеУчета.СубконтоДт3
	|		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
	|		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт3
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДт3,
	|
	// - НУ -
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ1 ЕСТЬ NULL) 
	|				И НЕ(ДанныеУчета.СубконтоДтНУ1 В (&парамРезервыБезСН))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ1
	|		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
	|		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ1
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ1
	|	КОНЕЦ КАК СубконтоДтНУ1,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ2 ЕСТЬ NULL) 
	|				 И НЕ(ДанныеУчета.СубконтоДтНУ1 В (&парамРезервыБезСН))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ2
	|		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
	|		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ2
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ2
	|	КОНЕЦ КАК СубконтоДтНУ2,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ3 ЕСТЬ NULL) 
	|				И НЕ(ДанныеУчета.СубконтоДт1 В (&парамРезервыБезСН))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ3
	|		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратСН
	|		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ3
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ3
	|	КОНЕЦ КАК СубконтоДтНУ3,
	|
	// - НУ -
	|	ДанныеУчета.СтруктурноеПодразделение,
	|	ДанныеУчета.СтруктурноеПодразделениеОсновное,
	|	ДанныеУчета.СубконтоКт1
	|ИЗ	
	|	" + РаспределениеСНПоСчетамЗатрат + " КАК ДанныеУчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт1
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт1.Ссылка
	|		   И ВидыСубконтоДт1.НомерСтроки = 1 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт2
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт2.Ссылка
	|		   И ВидыСубконтоДт2.НомерСтроки = 2
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт3
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт3.Ссылка
	|		   И ВидыСубконтоДт3.НомерСтроки = 3
	// - НУ -
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ1
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДтНУ1.Ссылка
	|		   И ВидыСубконтоДтНУ1.НомерСтроки = 1 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ2
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДтНУ2.Ссылка
	|		   И ВидыСубконтоДтНУ2.НомерСтроки = 2
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ3
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДтНУ3.Ссылка
	|		   И ВидыСубконтоДтНУ3.НомерСтроки = 3
	|
	// - НУ -
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
	|					&парамКонецМесяца,
	|					СчетКоррБУ = &парамПустойСчет
	|					И СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	|					И СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	|					И СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	|					И ВидЗатратНУ = НЕОПРЕДЕЛЕНО) КАК СоответствиеСчетовБУиНУДт
	|		ПО ДанныеУчета.СчетДт = СоответствиеСчетовБУиНУДт.СчетБУ
	|		   И СоответствиеСчетовБУиНУДт.Учитывается
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеУчета.ФизЛицо
	|";

	Запрос.Текст = РаспределениеСНПоСчетамЗатрат;

	СчетКредита = Справочники.НалогиСборыОтчисления.СоциальныйНалог.СчетУчетаРасчетовСКонтрагентомБУ;
	Если НЕ ЗначениеЗаполнено(СчетКредита) Тогда
		СчетКредита = ПланыСчетов.Типовой.СоциальныйНалог;
	КонецЕсли;
	СчетКредитаНУ = ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНУСН(СчетКредита, КонецМесяца(ПериодРегистрации));
	Если НЕ ЗначениеЗаполнено(СчетКредитаНУ) Тогда
		СчетКредитаНУ = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СчетКредита), , , КонецМесяца(ПериодРегистрации));
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	мПромежуточнаяТаблица.Очистить();
	
	СубконтоКредита2 = Перечисления.ВидыПлатежейВБюджетИФонды.Налог;

	ЕстьДанные = Выборка.Следующий();
	Пока ЕстьДанные Цикл
		ТекущееФизЛицо = Выборка.ФизЛицо;
		ТекущаяСтруктурнаяЕдиница = Выборка.СтруктурнаяЕдиница;
		СуммаКРаспределению = Выборка.Налог;
		РаспределеннаяСумма = 0;
		
		Пока ЕстьДанные И Выборка.ФизЛицо = ТекущееФизЛицо
			И Выборка.СтруктурнаяЕдиница = ТекущаяСтруктурнаяЕдиница Цикл
			Строка = мПромежуточнаяТаблица.Добавить();
			Строка.ФизЛицо 		= Выборка.ФизЛицо;
			//Строка.СчетДт 		= Выборка.СчетДт; //-=-=
			//-=-=						
			Если Лев(Выборка.СчетДт.Код,3) = "721" Тогда
				Если Выборка.СчетДт.Код = "7215" Тогда
					Строка.СчетДт 		= Выборка.СчетДт;
				Иначе
					Строка.СчетДт 		= ПланыСчетов.Типовой.РасходыПоСОиСН;
				КонецЕсли;
			Иначе
				Строка.СчетДт 		= Выборка.СчетДт;
			КонецЕсли;
			//-=-=
			Строка.СубконтоДт1 	= Выборка.СубконтоДт1;
			Строка.СубконтоДт2 	= Выборка.СубконтоДт2;
			Строка.СубконтоДт3 	= Выборка.СубконтоДт3;
			
			Строка.СчетДтНУ 	= Выборка.СчетДтНУ;
			Строка.СубконтоДтНУ1 	= Выборка.СубконтоДтНУ1;
			Строка.СубконтоДтНУ2 	= Выборка.СубконтоДтНУ2;
			Строка.СубконтоДтНУ3 	= Выборка.СубконтоДтНУ3;
			
			Строка.СчетКт 		= СчетКредита;
			Строка.СубконтоКт1	= Выборка.СубконтоКт1;
			Строка.СубконтоКт2 	= СубконтоКредита2;
			Если ЗаполнятьНКпоСН  ИЛИ ЗаполнятьНКпоСНВНУ Тогда
				НалоговыйКомитетВСтроке = ПроцедурыНалоговогоУчета.ПолучитьНалоговыйКомитетСтруктурнойЕдиницы(Выборка.СтруктурнаяЕдиница,
																											Организация,
																											ИсчислениеНалоговСтруктурныхЕдиниц,
																											Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
			КонецЕсли;	
			Если ЗаполнятьНКпоСН Тогда
				Строка.СубконтоКт3 = НалоговыйКомитетВСтроке;
			КонецЕсли;
			
			Строка.СчетКтНУ 	= СчетКредитаНУ;			
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетКт, Строка.СчетКтНУ, 1, Строка.СубконтоКт1, "СубконтоКтНУ");
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетКт, Строка.СчетКтНУ, 2, Строка.СубконтоКт2, "СубконтоКтНУ");
			Если ЗаполнятьНКпоСНВНУ Тогда
				Строка.СубконтоКтНУ3 = НалоговыйКомитетВСтроке;
			КонецЕсли;
			
			Строка.Сумма		= Выборка.СуммаПроводки;
			Если мОтображатьСтруктурныеПодразделения Тогда
				Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
				Строка.СтруктурноеПодразделениеКт = Выборка.СтруктурноеПодразделениеОсновное;
			КонецЕсли;
			РаспределеннаяСумма = РаспределеннаяСумма + Выборка.СуммаПроводки;
			
			ЕстьДанные = Выборка.Следующий();
		КонецЦикла;
		
		// Остаток на последнюю строку по работнику
		Если СуммаКРаспределению <> РаспределеннаяСумма Тогда
			Строка.Сумма = Строка.Сумма + (СуммаКРаспределению - РаспределеннаяСумма);
		КонецЕсли;
	КонецЦикла;	
	
	// переносим в табличную часть документа
	ПеренестиОтражениеВУчетеИзПромежуточнойТаблицы();
	
	#КонецОбласти
	
	#Область ОтражениеОППВ
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение обязательных профессиональных пенсионных взносов

   	// ОППВИсчисленный
	//	Поля:
	//		ФизЛицо
	//		ВидПлатежа
	//		Взнос
	//	
	//	Описание:
	//	Исчисленные профессиональные пенсионные взносы по видам платежа

    ОППВИсчисленныйТекст = "
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	ОППВРасчетыСФондами.Регистратор КАК Регистратор,
	|	ОППВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
    |	ОППВРасчетыСФондами.ВидПлатежа КАК ВидПлатежа,"+?(мОтображатьСтруктурныеПодразделения,"
	|	ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
    |	СУММА(ОППВРасчетыСФондами.Взнос) КАК Взнос
    |
    |ПОМЕСТИТЬ ВТ_ОППВИсчисленный
    |ИЗ
    |	РегистрНакопления.ОППВРасчетыСФондами КАК ОППВРасчетыСФондами";
    
    Если МенеджерВТ <> Неопределено Тогда
    
    ОППВИсчисленныйТекст = ОППВИсчисленныйТекст + "
    |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
    |		ПО ОППВРасчетыСФондами.ФизЛицо = СписокФизЛиц.ФизЛицо";
    
    КонецЕсли;
 	
	Если мОтображатьСтруктурныеПодразделения Тогда
		ОППВИсчисленныйТекст = ОППВИсчисленныйТекст+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,Организация=&парамГоловнаяОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСП
		|			ПО ОППВРасчетыСФондами.ФизЛицо = УчетВзаиморасчетовПоСП.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
    
	ОППВИсчисленныйТекст = ОППВИсчисленныйТекст + "
	|
    |ГДЕ
	|	ОППВРасчетыСФондами.Период >= &парамНачалоМесяца И 
	|	ОППВРасчетыСФондами.Период <= &парамКонецМесяца И 
	|	ОППВРасчетыСФондами.Организация = &парамОрганизация И 
	|	ОППВРасчетыСФондами.ВидДвижения = &парамВидДвиженияПриход И
	|	ОППВРасчетыСФондами.ВидСтроки = &парамВидСтрокиИсчисление И
	|	ОППВРасчетыСФондами.Взнос <> 0 И
	|	НЕ ОППВРасчетыСФондами.Регистратор ССЫЛКА Документ.ОтражениеНалоговойОтчетностиВРеглУчете  
	|
	|СГРУППИРОВАТЬ ПО
	|   ОППВРасчетыСФондами.Регистратор,
	|	ОППВРасчетыСФондами.ФизЛицо,"+?(мОтображатьСтруктурныеПодразделения,"
	|	ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+",
	|   ОППВРасчетыСФондами.ВидПлатежа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
    |";
    
    Запрос.Текст = ОППВИсчисленныйТекст;
    Запрос.Выполнить();
    ОППВИсчисленныйТекст = "ВТ_ОППВИсчисленный";
    
   	// БУДоходыПоСчетам
	//	Поля:
	//		ФизЛицо
	//		СчетДт
	//		СубконтоДт1
	//		СубконтоДт2
	//		СубконтоДт3
	//		Результат
	//	
	//	Описание:
	//	Данные отражения начислений в бухучете

    БУДоходыПоСчетам = "
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	БУНачисления.ФизЛицо,
    |	БУНачисления.СчетДт,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
    |		ИНАЧЕ БУНачисления.СубконтоДт1
    |	КОНЕЦ КАК СубконтоДт1,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
    |		ИНАЧЕ БУНачисления.СубконтоДт2
    |	КОНЕЦ КАК СубконтоДт2,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
    |		ИНАЧЕ БУНачисления.СубконтоДт3
    |	КОНЕЦ КАК СубконтоДт3,
	// - НУ -
    |	БУНачисления.СчетДтНУ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ1
    |	КОНЕЦ КАК СубконтоДтНУ1,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ2
    |	КОНЕЦ КАК СубконтоДтНУ2,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ3
    |	КОНЕЦ КАК СубконтоДтНУ3,
	// - НУ -
    |	БУНачисления.СтруктурноеПодразделение,
    |	БУНачисления.СтруктурноеПодразделениеОсновное,
	|	СУММА(БУНачисления.Результат) КАК Результат
	|
	|ПОМЕСТИТЬ ВТ_БУДоходыПоСчетамОППВ
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1,		    
	|		БУОсновныеНачисления.СубконтоДт2,		    
	|		БУОсновныеНачисления.СубконтоДт3,		    
	// - НУ -
	|		БУОсновныеНачисления.СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1,		    
	|		БУОсновныеНачисления.СубконтоДтНУ2,		    
	|		БУОсновныеНачисления.СубконтоДтНУ3,		    
	// - НУ -                                 
	|											"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|															"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделениеОсновное,
	|		БУОсновныеНачисления.Результат
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО БУОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	Если мОтображатьСтруктурныеПодразделения Тогда
		БУДоходыПоСчетам = БУДоходыПоСчетам+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация) КАК УчетВзаиморасчетовПоСП
		|			ПО БУОсновныеНачисления.Сотрудник = УчетВзаиморасчетовПоСП.Сотрудник
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСППоОсновномуМестуРаботы
		|			ПО БУОсновныеНачисления.Сотрудник.ФизЛицо = УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|	ГДЕ
	|		БУОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация И
	|		БУОсновныеНачисления.ПериодРегистрации = &парамНачалоМесяца И
	|		БУОсновныеНачисления.ВидРасчета.ОблагаетсяОППВ <> &парамНеОблагаетсяЦеликом И
	|		(НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,		    
	|		БУДополнительныеНачисления.СубконтоДт2,		    
	|		БУДополнительныеНачисления.СубконтоДт3,		    
	// - НУ -
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,		    
	|		БУДополнительныеНачисления.СубконтоДтНУ2,		    
	|		БУДополнительныеНачисления.СубконтоДтНУ3,		    
	// - НУ -
	|											"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|															"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделениеОсновное,
	|		БУДополнительныеНачисления.Результат
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО БУДополнительныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	Если мОтображатьСтруктурныеПодразделения Тогда
		БУДоходыПоСчетам = БУДоходыПоСчетам+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация) КАК УчетВзаиморасчетовПоСП
		|			ПО БУДополнительныеНачисления.Сотрудник = УчетВзаиморасчетовПоСП.Сотрудник
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСППоОсновномуМестуРаботы
		|			ПО БУДополнительныеНачисления.Сотрудник.ФизЛицо = УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|	ГДЕ
	|		БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация И
	|		БУДополнительныеНачисления.ПериодРегистрации = &парамНачалоМесяца И
	|		БУДополнительныеНачисления.ВидРасчета.ОблагаетсяОППВ <> &парамНеОблагаетсяЦеликом И
	|		(НЕ БУДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом)) КАК БУНачисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт1
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт1.Ссылка
	|		   И ВидыСубконтоДт1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт2
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт2.Ссылка
	|		   И ВидыСубконтоДт2.НомерСтроки = 2
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт3
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт3.Ссылка
	|		   И ВидыСубконтоДт3.НомерСтроки = 3
	// - НУ -
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ1
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ1.Ссылка
	|		   И ВидыСубконтоДтНУ1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ2
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ2.Ссылка
	|		   И ВидыСубконтоДтНУ2.НомерСтроки = 2
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ3
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ3.Ссылка
	|		   И ВидыСубконтоДтНУ3.НомерСтроки = 3
	// - НУ -
	|
	|
	|СГРУППИРОВАТЬ ПО
    |	БУНачисления.ФизЛицо,
    |	БУНачисления.СчетДт,
	// - НУ -
    |	БУНачисления.СчетДтНУ,
	|ВЫБОР 
	|	КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
	|	ИНАЧЕ БУНачисления.СубконтоДтНУ1
	|КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
	|	ИНАЧЕ БУНачисления.СубконтоДтНУ2
	|КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
	|	ИНАЧЕ БУНачисления.СубконтоДтНУ3
	|КОНЕЦ,
	// - НУ -
    |	БУНачисления.СтруктурноеПодразделение,
    |	БУНачисления.СтруктурноеПодразделениеОсновное,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
    |		ИНАЧЕ БУНачисления.СубконтоДт1
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
    |		ИНАЧЕ БУНачисления.СубконтоДт2
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
    |		ИНАЧЕ БУНачисления.СубконтоДт3
    |	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
    |";

	Запрос.Текст = БУДоходыПоСчетам;
	Запрос.Выполнить();
	БУДоходыПоСчетам = "ВТ_БУДоходыПоСчетамОППВ";

	// сначала определим счет, на который будем относить затраты по обязательным профессиональным пенсионным взносам и 
	// распределим пропорционально сумме начислений, а потом на основании счета подставим значения некоторых субконто по умолчанию
	РаспределениеОППВПоСчетамЗатрат = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОППВРасчетыСФондами.ФизЛицо,
	|	ОППВРасчетыСФондами.ВидПлатежа,
	|	ОППВРасчетыСФондами.Взнос,
	|	ОППВРасчетыСФондами.Регистратор,
	|	ВЫБОР 
	|		КОГДА БУСуммаНачислений.Результат <> 0 
	|			ТОГДА ВЫРАЗИТЬ(ОППВРасчетыСФондами.Взнос * БУНачисления.Результат / БУСуммаНачислений.Результат КАК ЧИСЛО(15, 2)) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаПроводки,
	|	ВЫБОР
	|		КОГДА НЕ(БУНачисления.СчетДт ЕСТЬ NULL) 
	|				И НЕ(БУНачисления.СчетДт В (&парамСчетаРезервовБезОППВ) И БУНачисления.СубконтоДт1 В (&парамРезервыБезОППВ))
	|			ТОГДА БУНачисления.СчетДт
	|		КОГДА ОсновнойСпособОтражения.СпособОтраженияВБухучете = &парамСпособПоУмолчанию // особых в ФЛ + ВР не нашли - проверим по подразделению
	|					И НЕ (МестаРаботы.СпособОтраженияВБухучете ЕСТЬ NULL)
	|			ТОГДА МестаРаботы.СпособОтраженияВБухучете.СчетДт
	|		ИНАЧЕ ОсновнойСпособОтражения.СпособОтраженияВБухучете.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	БУНачисления.СчетДт КАК СчетДтОплатаТруда,
	|	БУНачисления.СубконтоДт1,
	|	БУНачисления.СубконтоДт2,
	|	БУНачисления.СубконтоДт3,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА &парамСчетДтДляПени
	|		ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|	КОНЕЦ КАК СчетДтДляПени,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ1, НЕОПРЕДЕЛЕНО) 
	|	КОНЕЦ КАК СубконтоДтДляПени1,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ2, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ КАК СубконтоДтДляПени2,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ3, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ КАК СубконтоДтДляПени3,
	// - НУ - 
	|	ВЫБОР
	|		КОГДА НЕ(БУНачисления.СчетДтНУ ЕСТЬ NULL) 
	|				И НЕ(БУНачисления.СубконтоДтНУ1 В (&парамРезервыБезСО))
	|			ТОГДА БУНачисления.СчетДтНУ
	|		КОГДА ОсновнойСпособОтражения.СпособОтраженияВБухучете = &парамСпособПоУмолчанию // особых в ФЛ + ВР не нашли - проверим по подразделению
	|					И НЕ (МестаРаботы.СпособОтраженияВБухучете ЕСТЬ NULL)
	|			ТОГДА МестаРаботы.СпособОтраженияВБухучете.СчетДтНУ
	|		ИНАЧЕ ОсновнойСпособОтражения.СпособОтраженияВБухучете.СчетДтНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	БУНачисления.СубконтоДтНУ1,
	|	БУНачисления.СубконтоДтНУ2,
	|	БУНачисления.СубконтоДтНУ3,
	// - НУ -
	|	БУНачисления.СтруктурноеПодразделение,
	|	БУНачисления.СтруктурноеПодразделениеОсновное,
    |	МестаРаботы.ПодразделениеОрганизации,
   	|	МестаРаботы.СпособОтраженияВБухучете КАК СпособОтраженияВБухучетеДляПодразделения,
	|	ОсновнойСпособОтражения.СпособОтраженияВБухучете КАК ОсновнойСпособОтраженияВБухучете,
	|	ЕСТЬNULL(ВидыСубконтоПодразделенияДляПени.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДляПени,
	|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДляПени.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДляПени
	|
	|ПОМЕСТИТЬ ВТ_ОППВПоСчетамЗатрат
	|ИЗ	
	|	" + ОППВИсчисленныйТекст + " КАК ОППВРасчетыСФондами
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетПениОПВиСО КАК РасчетПениОПВиСО
	|		ПО ОППВРасчетыСФондами.Регистратор = РасчетПениОПВиСО.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + БУДоходыПоСчетам + " КАК БУНачисления
	|		ПО ОППВРасчетыСФондами.ФизЛицо = БУНачисления.ФизЛицо 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							БУНачисления.ФизЛицо,
	|							СУММА(БУНачисления.Результат) КАК Результат
	|						ИЗ
	|							" + БУДоходыПоСчетам + " КАК БУНачисления
	|						СГРУППИРОВАТЬ ПО
	|							БУНачисления.ФизЛицо) КАК БУСуммаНачислений
	|		ПО ОППВРасчетыСФондами.ФизЛицо = БУСуммаНачислений.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОсновнойСпособОтраженияТекст + " КАК ОсновнойСпособОтражения
	|		ПО ОППВРасчетыСФондами.ФизЛицо = ОсновнойСпособОтражения.ФизЛицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + МестаРаботыТекст + " КАК МестаРаботы
	|		ПО ОППВРасчетыСФондами.ФизЛицо = МестаРаботы.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоПодразделенияДляПени
	|		ПО ВидыСубконтоПодразделенияДляПени.Ссылка = (ВЫБОР
	|															КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|																ТОГДА &парамСчетДтДляПени
	|															ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|														КОНЕЦ)
	|		   И ВидыСубконтоПодразделенияДляПени.ВидСубконто = &парамВидСубконтоПодразделения
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДляПени
	|		ПО ВидыСубконтоСтатьиЗатратДляПени.Ссылка = (ВЫБОР
	|															КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|																ТОГДА &парамСчетДтДляПени
	|															ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|														КОНЕЦ)
	|		   И ВидыСубконтоСтатьиЗатратДляПени.ВидСубконто = &парамВидСубконтоСтатьиЗатрат
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт	
	|";
	
	Запрос.Текст = РаспределениеОППВПоСчетамЗатрат;
	Запрос.Выполнить();
	РаспределениеОППВПоСчетамЗатрат = "ВТ_ОППВПоСчетамЗатрат";


	// Распределяем обязательные профессиональные пенсионные взносы по счетам затрат 
	// пропорционально сумме начислений, с которых брались эти взносы
	РаспределениеОППВПоСчетамЗатрат = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеУчета.ФизЛицо,
	|	ДанныеУчета.ВидПлатежа,
	|	ДанныеУчета.Взнос,
	|	ДанныеУчета.Регистратор,
	|	ДанныеУчета.СуммаПроводки,
	|	ДанныеУчета.СчетДт,
	|	ДанныеУчета.СчетДтНУ КАК СчетДтНУ,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт1 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезОППВ) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезОППВ))
	|			ТОГДА ДанныеУчета.СубконтоДт1
	|		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ	
	|		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт1
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт1
	|	КОНЕЦ КАК СубконтоДт1,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт2 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезОППВ) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезОППВ))
	|			ТОГДА ДанныеУчета.СубконтоДт2
	|		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
	|		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт2
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт2
	|	КОНЕЦ КАК СубконтоДт2,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт3 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезОППВ) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезОППВ))
	|			ТОГДА ДанныеУчета.СубконтоДт3
	|		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
	|		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт3
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	ДанныеУчета.СчетДтДляПени,
	|	ДанныеУчета.СубконтоДтДляПени1,
	|	ДанныеУчета.СубконтоДтДляПени2,
	|	ДанныеУчета.СубконтоДтДляПени3,
	|
	|
	// - НУ - 
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ1 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СубконтоДтНУ1 В (&парамСчетаРезервовБезОППВ))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ1
	|		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
	|		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ1
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ1
	|	КОНЕЦ КАК СубконтоДтНУ1,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ2 ЕСТЬ NULL)
	|				И НЕ (ДанныеУчета.СубконтоДтНУ1 В (&парамСчетаРезервовБезОППВ))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ2
	|		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
	|		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ2
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ2
	|	КОНЕЦ КАК СубконтоДтНУ2,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ3 ЕСТЬ NULL)
	|				И НЕ (ДанныеУчета.СубконтоДтНУ1 В (&парамСчетаРезервовБезОППВ))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ3
	|		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОППВ
	|		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ3
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ3
	|	КОНЕЦ КАК СубконтоДтНУ3,
	// - НУ -
    |	ДанныеУчета.СтруктурноеПодразделение,
    |	ДанныеУчета.СтруктурноеПодразделениеОсновное,
	|	ДанныеУчета.ПодразделениеОрганизации,
	|	ДанныеУчета.НомерСубконтоПодразделенияДляПени,
	|	ДанныеУчета.НомерСубконтоСтатьиЗатратДляПени
	|	
	|
	|ИЗ
	|	" + РаспределениеОППВПоСчетамЗатрат + " КАК ДанныеУчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт1
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт1.Ссылка
	|		   И ВидыСубконтоДт1.НомерСтроки = 1 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт2
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт2.Ссылка
	|		   И ВидыСубконтоДт2.НомерСтроки = 2
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт3
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт3.Ссылка
	|		   И ВидыСубконтоДт3.НомерСтроки = 3
	|
	// - НУ -
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ1
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДт1.Ссылка
	|		   И ВидыСубконтоДт1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ2
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДтНУ2.Ссылка
	|		   И ВидыСубконтоДтНУ2.НомерСтроки = 2
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ3
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДтНУ3.Ссылка
	|		   И ВидыСубконтоДтНУ3.НомерСтроки = 3
	// - НУ -
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
	|					&парамКонецМесяца,
	|					СчетКоррБУ = &парамПустойСчет
	|					И СубконтоБУ1 = НЕОПРЕДЕЛЕНО
	|					И СубконтоБУ2 = НЕОПРЕДЕЛЕНО
	|					И СубконтоБУ3 = НЕОПРЕДЕЛЕНО
	|					И ВидЗатратНУ = НЕОПРЕДЕЛЕНО) КАК СоответствиеСчетовБУиНУДт
	|		ПО ДанныеУчета.СчетДт = СоответствиеСчетовБУиНУДт.СчетБУ
	|			И СоответствиеСчетовБУиНУДт.Учитывается	
	|
	|	
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеУчета.Физлицо,
	|	ДанныеУчета.ВидПлатежа
	|";
	
	Запрос.Текст = РаспределениеОППВПоСчетамЗатрат;
	
	СчетКредита = Справочники.НалогиСборыОтчисления.ОбязательныеПрофессиональныеПенсионныеВзносы.СчетУчетаРасчетовСКонтрагентомБУ;
	Если НЕ ЗначениеЗаполнено(СчетКредита) Тогда
		СчетКредита 		= ПланыСчетов.Типовой.ОбязательстваПоПенсионнымОтчислениям;
	КонецЕсли;
	СчетКредитаНУ = ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНУОППВ(СчетКредита, КонецМесяца(ПериодРегистрации));
	Если НЕ ЗначениеЗаполнено(СчетКредита) Тогда
		СчетКредитаНУ = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СчетКредита), , , КонецМесяца(ПериодРегистрации));
	КонецЕсли;
	
	СчетДебетаДляПени 	= ПланыСчетов.Типовой.АдминистративныеРасходы;
	СчетДебетаДляПениНУ	= ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", СчетДебетаДляПени), , , КонецМесяца(ПериодРегистрации));
		

	СтатьяЗатратПеняПоОППВ = Справочники.СтатьиЗатрат.ПеняПоОППВ;	
	
	Выборка = Запрос.Выполнить().Выбрать();
	мПромежуточнаяТаблица.Очистить();

	ЕстьДанные = Выборка.Следующий();
	Пока ЕстьДанные Цикл
		ТекущееФизЛицо = Выборка.ФизЛицо;
		ТекущийРегистратор 	= Выборка.Регистратор;
		ТекущийВидПлатежа 	= Выборка.ВидПлатежа;
		СуммаКРаспределению = Выборка.Взнос;
		РаспределеннаяСумма = 0;
		
		Пока ЕстьДанные 
		   И Выборка.ФизЛицо = ТекущееФизЛицо 
		   И Выборка.ВидПлатежа = ТекущийВидПлатежа
		   И Выборка.Регистратор =  ТекущийРегистратор Цикл
			
			Строка = мПромежуточнаяТаблица.Добавить();
			Строка.ФизЛицо = ТекущееФизЛицо;
			
			// В зависимости от вида платежа (Налог/Взнос или пеня) ставим на разные счета затрат
			Если ТекущийВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.Налог
				 Или ТекущийВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.НалогАкт
				 Или ТекущийВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.НалогСам Тогда
				Строка.СчетДт 		= Выборка.СчетДт;
				Строка.СчетДтНУ 	= Выборка.СчетДтНУ;
				Строка.СубконтоДт1 	= Выборка.СубконтоДт1;
				Строка.СубконтоДт2 	= Выборка.СубконтоДт2;
				Строка.СубконтоДт3 	= Выборка.СубконтоДт3;
			Иначе // Пеня по ОППВ
				Строка.СчетДт	    = Выборка.СчетДтДляПени;
				Строка.СчетДтНУ	    = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", Выборка.СчетДтДляПени), , , КонецМесяца(ПериодРегистрации));
				// Статья затрат
				Если Выборка.НомерСубконтоСтатьиЗатратДляПени <> 0 Тогда
					Если ЗначениеЗаполнено(Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоСтатьиЗатратДляПени]) Тогда
						Строка["СубконтоДт" + Выборка.НомерСубконтоСтатьиЗатратДляПени]	= Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоСтатьиЗатратДляПени];
					Иначе 
						Строка["СубконтоДт" + Выборка.НомерСубконтоСтатьиЗатратДляПени]	= СтатьяЗатратПеняПоОППВ;
					КонецЕсли;
				КонецЕсли;
				
				// Подразделение организаций
				Если Выборка.НомерСубконтоПодразделенияДляПени <> 0 Тогда
					Если ЗначениеЗаполнено(Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени]) Тогда
						Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени] = Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени];
					Иначе 
						Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени] = Выборка.ПодразделениеОрганизации;
					КонецЕсли;
				КонецЕсли;
				
				// Заполним оставшиеся субконто
				Для Ном = 1 по 3 Цикл
					Если НЕ ЗначениеЗаполнено(Строка["СубконтоДт" + Ном]) Тогда
						Строка["СубконтоДт" + Ном] = Выборка["СубконтоДтДляПени" + Ном];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;			
			
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 1, Строка.СубконтоДт1, "СубконтоДтНУ");
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 2, Строка.СубконтоДт2, "СубконтоДтНУ");
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 3, Строка.СубконтоДт3, "СубконтоДтНУ");
			
			Строка.СчетКт 		= СчетКредита;
			Строка.СубконтоКт1 	= Справочники.НалогиСборыОтчисления.ОбязательныеПрофессиональныеПенсионныеВзносы;
			Строка.СубконтоКт2 	= Выборка.ВидПлатежа;
			Если ВедетсяУчетПоСотрудникам Тогда
				Строка.СубконтоКт3	= Выборка.Физлицо;
			КонецЕсли;
			
			Строка.СчетКтНУ 	= СчетКредитаНУ;
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетКт, Строка.СчетКтНУ, 1, Строка.СубконтоКт1, "СубконтоКтНУ");
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетКт, Строка.СчетКтНУ, 2, Строка.СубконтоКт2, "СубконтоКтНУ");
			
			Строка.Сумма		= Выборка.СуммаПроводки;
			Если мОтображатьСтруктурныеПодразделения Тогда
				Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
				Строка.СтруктурноеПодразделениеКт = Выборка.СтруктурноеПодразделениеОсновное;
			КонецЕсли;
			РаспределеннаяСумма = РаспределеннаяСумма + Выборка.СуммаПроводки;
			
			ЕстьДанные = Выборка.Следующий();
		КонецЦикла;
		
		// Остаток на последнюю строку по работнику
		Если СуммаКРаспределению <> РаспределеннаяСумма Тогда
			Строка.Сумма = Строка.Сумма + (СуммаКРаспределению - РаспределеннаяСумма);
		КонецЕсли;
	КонецЦикла;	

	// переносим в табличную часть документа
	ПеренестиОтражениеВУчетеИзПромежуточнойТаблицы();

	#КонецОбласти
	
	#Область ОтражениеООСМС
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение ООСМС

   	// ООСМСИсчисленный
	//	Поля:
	//		ФизЛицо
	//		ВидПлатежа
	//		Отчисление
	//	
	//	Описание:
	//	Исчисленные социальные отчисления по видам платежа

    ООСМСИсчисленныйТекст = "
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	ООСМСРасчетыСФондами.Регистратор КАК Регистратор,
    |	ООСМСРасчетыСФондами.ФизЛицо КАК ФизЛицо,
    |	ООСМСРасчетыСФондами.ВидПлатежа КАК ВидПлатежа,
    |	СУММА(ООСМСРасчетыСФондами.Отчисление) КАК Отчисление
    |
    |ПОМЕСТИТЬ ВТ_ООСМСИсчисленный
    |ИЗ
    |	РегистрНакопления.ООСМСРасчетыСФондами КАК ООСМСРасчетыСФондами";
    
    Если МенеджерВТ <> Неопределено Тогда
    
    ООСМСИсчисленныйТекст = ООСМСИсчисленныйТекст + "
    |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
    |		ПО ООСМСРасчетыСФондами.ФизЛицо = СписокФизЛиц.ФизЛицо";
    
    КонецЕсли;
    
	ООСМСИсчисленныйТекст = ООСМСИсчисленныйТекст + "
	|
    |ГДЕ
	|	ООСМСРасчетыСФондами.Период >= &парамНачалоМесяца И 
	|	ООСМСРасчетыСФондами.Период <= &парамКонецМесяца И 
	|	ООСМСРасчетыСФондами.Организация = &парамОрганизация И 
	|	ООСМСРасчетыСФондами.ВидДвижения = &парамВидДвиженияПриход И
	|	ООСМСРасчетыСФондами.ВидСтроки = &парамВидСтрокиИсчисление И
	|	ООСМСРасчетыСФондами.Отчисление <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|   ООСМСРасчетыСФондами.Регистратор,
	|	ООСМСРасчетыСФондами.ФизЛицо,
	|   ООСМСРасчетыСФондами.ВидПлатежа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
    |";
    
    Запрос.Текст = ООСМСИсчисленныйТекст;
    Запрос.Выполнить();
    ООСМСИсчисленныйТекст = "ВТ_ООСМСИсчисленный";
    
   	// БУДоходыПоСчетам
	//	Поля:
	//		ФизЛицо
	//		СчетДт
	//		СубконтоДт1
	//		СубконтоДт2
	//		СубконтоДт3
	//		Результат
	//	
	//	Описание:
	//	Данные отражения начислений в бухучете

    БУДоходыПоСчетам = "
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	БУНачисления.ФизЛицо,
    |	БУНачисления.СчетДт,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
    |		ИНАЧЕ БУНачисления.СубконтоДт1
    |	КОНЕЦ КАК СубконтоДт1,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
    |		ИНАЧЕ БУНачисления.СубконтоДт2
    |	КОНЕЦ КАК СубконтоДт2,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
    |		ИНАЧЕ БУНачисления.СубконтоДт3
    |	КОНЕЦ КАК СубконтоДт3,
	// - НУ -
    |	БУНачисления.СчетДтНУ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ1
    |	КОНЕЦ КАК СубконтоДтНУ1,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ2
    |	КОНЕЦ КАК СубконтоДтНУ2,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ3
    |	КОНЕЦ КАК СубконтоДтНУ3,
	// - НУ -
    |	БУНачисления.СтруктурноеПодразделение,
    |	БУНачисления.СтруктурноеПодразделениеОсновное,
	|	СУММА(БУНачисления.Результат) КАК Результат
	|
	|ПОМЕСТИТЬ ВТ_БУДоходыПоСчетамООСМС
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1,		    
	|		БУОсновныеНачисления.СубконтоДт2,		    
	|		БУОсновныеНачисления.СубконтоДт3,		    
	// - НУ -
	|		БУОсновныеНачисления.СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1,		    
	|		БУОсновныеНачисления.СубконтоДтНУ2,		    
	|		БУОсновныеНачисления.СубконтоДтНУ3,		    
	// - НУ -                                 
	|											"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|															"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделениеОсновное,
	|		БУОсновныеНачисления.Результат
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО БУОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	Если мОтображатьСтруктурныеПодразделения Тогда
		БУДоходыПоСчетам = БУДоходыПоСчетам+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация) КАК УчетВзаиморасчетовПоСП
		|			ПО БУОсновныеНачисления.Сотрудник = УчетВзаиморасчетовПоСП.Сотрудник
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСППоОсновномуМестуРаботы
		|			ПО БУОсновныеНачисления.Сотрудник.ФизЛицо = УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|	ГДЕ
	|		БУОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация И
	|		БУОсновныеНачисления.ПериодРегистрации = &парамНачалоМесяца И
	|		БУОсновныеНачисления.ВидРасчета.ОблагаетсяООСМС <> &парамНеОблагаетсяЦеликом И
	|		(НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,		    
	|		БУДополнительныеНачисления.СубконтоДт2,		    
	|		БУДополнительныеНачисления.СубконтоДт3,		    
	// - НУ -
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,		    
	|		БУДополнительныеНачисления.СубконтоДтНУ2,		    
	|		БУДополнительныеНачисления.СубконтоДтНУ3,		    
	// - НУ -
	|											"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|															"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделениеОсновное,
	|		БУДополнительныеНачисления.Результат
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО БУДополнительныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	Если мОтображатьСтруктурныеПодразделения Тогда
		БУДоходыПоСчетам = БУДоходыПоСчетам+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация) КАК УчетВзаиморасчетовПоСП
		|			ПО БУДополнительныеНачисления.Сотрудник = УчетВзаиморасчетовПоСП.Сотрудник
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСППоОсновномуМестуРаботы
		|			ПО БУДополнительныеНачисления.Сотрудник.ФизЛицо = УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|	ГДЕ
	|		БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация И
	|		БУДополнительныеНачисления.ПериодРегистрации = &парамНачалоМесяца И
	|		БУДополнительныеНачисления.ВидРасчета.ОблагаетсяООСМС <> &парамНеОблагаетсяЦеликом И
	|		(НЕ БУДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом)) КАК БУНачисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт1
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт1.Ссылка
	|		   И ВидыСубконтоДт1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт2
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт2.Ссылка
	|		   И ВидыСубконтоДт2.НомерСтроки = 2
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт3
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт3.Ссылка
	|		   И ВидыСубконтоДт3.НомерСтроки = 3
	// - НУ -
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ1
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ1.Ссылка
	|		   И ВидыСубконтоДтНУ1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ2
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ2.Ссылка
	|		   И ВидыСубконтоДтНУ2.НомерСтроки = 2
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ3
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ3.Ссылка
	|		   И ВидыСубконтоДтНУ3.НомерСтроки = 3
	// - НУ -
	|
	|СГРУППИРОВАТЬ ПО
    |	БУНачисления.ФизЛицо,
	// - НУ -
    |	БУНачисления.СчетДтНУ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ1
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ2
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ3
    |	КОНЕЦ,
	// - НУ -
    |	БУНачисления.СтруктурноеПодразделение,
    |	БУНачисления.СтруктурноеПодразделениеОсновное,
    |	БУНачисления.СчетДт,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
    |		ИНАЧЕ БУНачисления.СубконтоДт1
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
    |		ИНАЧЕ БУНачисления.СубконтоДт2
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
    |		ИНАЧЕ БУНачисления.СубконтоДт3
    |	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
    |";

	Запрос.Текст = БУДоходыПоСчетам;
	Запрос.Выполнить();
	БУДоходыПоСчетам = "ВТ_БУДоходыПоСчетамООСМС";

	// сначала определим счет, на который будем относить затраты по отчислениям ОСМС и распределим пропорционально сумме начислений,
	// а потом на основании счета подставим значения некоторых субконто по умолчанию
	РаспределениеООСМСПоСчетамЗатрат = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ООСМСРасчетыСФондами.ФизЛицо,
	|	ООСМСРасчетыСФондами.ВидПлатежа,
	|	ООСМСРасчетыСФондами.Регистратор,
	|	ООСМСРасчетыСФондами.Отчисление,
	|	ВЫБОР 
	|		КОГДА БУСуммаНачислений.Результат <> 0 
	|			ТОГДА ВЫРАЗИТЬ(ООСМСРасчетыСФондами.Отчисление * БУНачисления.Результат / БУСуммаНачислений.Результат КАК ЧИСЛО(15, 2)) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаПроводки,
	|	ВЫБОР
	|		КОГДА НЕ(БУНачисления.СчетДт ЕСТЬ NULL) 
	|				И НЕ(БУНачисления.СчетДт В (&парамСчетаРезервовБезООСМС) И БУНачисления.СубконтоДт1 В (&парамРезервыБезООСМС))
	|			ТОГДА БУНачисления.СчетДт
	|		КОГДА ОсновнойСпособОтражения.СпособОтраженияВБухучете = &парамСпособПоУмолчанию // особых в ФЛ + ВР не нашли - проверим по подразделению
	|					И НЕ (МестаРаботы.СпособОтраженияВБухучете ЕСТЬ NULL)
	|			ТОГДА МестаРаботы.СпособОтраженияВБухучете.СчетДт
	|		ИНАЧЕ ОсновнойСпособОтражения.СпособОтраженияВБухучете.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	БУНачисления.СчетДт КАК СчетДтОплатаТруда,
	|	БУНачисления.СубконтоДт1,
	|	БУНачисления.СубконтоДт2,
	|	БУНачисления.СубконтоДт3,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА &парамСчетДтДляПени
	|		ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|	КОНЕЦ КАК СчетДтДляПени,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ1, НЕОПРЕДЕЛЕНО) 
	|	КОНЕЦ КАК СубконтоДтДляПени1,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ2, НЕОПРЕДЕЛЕНО) 
	|	КОНЕЦ КАК СубконтоДтДляПени2,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ3, НЕОПРЕДЕЛЕНО) 
	|	КОНЕЦ КАК СубконтоДтДляПени3,
 	// - НУ - 
	|	ВЫБОР
	|		КОГДА НЕ(БУНачисления.СчетДтНУ ЕСТЬ NULL) 
	|			ТОГДА БУНачисления.СчетДтНУ
	|		КОГДА ОсновнойСпособОтражения.СпособОтраженияВБухучете = &парамСпособПоУмолчанию // особых в ФЛ + ВР не нашли - проверим по подразделению
	|					И НЕ (МестаРаботы.СпособОтраженияВБухучете ЕСТЬ NULL)
	|			ТОГДА МестаРаботы.СпособОтраженияВБухучете.СчетДтНУ
	|		ИНАЧЕ ОсновнойСпособОтражения.СпособОтраженияВБухучете.СчетДтНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	БУНачисления.СубконтоДтНУ1,
	|	БУНачисления.СубконтоДтНУ2,
	|	БУНачисления.СубконтоДтНУ3,
	// - НУ -
	|	БУНачисления.СтруктурноеПодразделение,
	|	БУНачисления.СтруктурноеПодразделениеОсновное,
   |	МестаРаботы.ПодразделениеОрганизации,
   	|	МестаРаботы.СпособОтраженияВБухучете КАК СпособОтраженияВБухучетеДляПодразделения,
	|	ОсновнойСпособОтражения.СпособОтраженияВБухучете КАК ОсновнойСпособОтраженияВБухучете,
	|	ЕСТЬNULL(ВидыСубконтоПодразделенияДляПени.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДляПени,
	|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДляПени.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДляПени
	|
	|ПОМЕСТИТЬ ВТ_ООСМСПоСчетамЗатрат
	|ИЗ	
	|	" + ООСМСИсчисленныйТекст + " КАК ООСМСРасчетыСФондами
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетПениОПВиСО КАК РасчетПениОПВиСО
	|		ПО ООСМСРасчетыСФондами.Регистратор = РасчетПениОПВиСО.Ссылка 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + БУДоходыПоСчетам + " КАК БУНачисления
	|		ПО ООСМСРасчетыСФондами.ФизЛицо = БУНачисления.ФизЛицо 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							БУНачисления.ФизЛицо,
	|							СУММА(БУНачисления.Результат) КАК Результат
	|						ИЗ
	|							" + БУДоходыПоСчетам + " КАК БУНачисления
	|						СГРУППИРОВАТЬ ПО
	|							БУНачисления.ФизЛицо) КАК БУСуммаНачислений
	|		ПО ООСМСРасчетыСФондами.ФизЛицо = БУСуммаНачислений.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОсновнойСпособОтраженияТекст + " КАК ОсновнойСпособОтражения
	|		ПО ООСМСРасчетыСФондами.ФизЛицо = ОсновнойСпособОтражения.ФизЛицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + МестаРаботыТекст + " КАК МестаРаботы
	|		ПО ООСМСРасчетыСФондами.ФизЛицо = МестаРаботы.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоПодразделенияДляПени
	|		ПО ВидыСубконтоПодразделенияДляПени.Ссылка = (ВЫБОР
	|															КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|																ТОГДА &парамСчетДтДляПени
	|															ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|														КОНЕЦ)
	|		   И ВидыСубконтоПодразделенияДляПени.ВидСубконто = &парамВидСубконтоПодразделения
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДляПени
	|		ПО ВидыСубконтоСтатьиЗатратДляПени.Ссылка = (ВЫБОР
	|															КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|																ТОГДА &парамСчетДтДляПени
	|															ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|														КОНЕЦ)
	|		   И ВидыСубконтоСтатьиЗатратДляПени.ВидСубконто = &парамВидСубконтоСтатьиЗатрат
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт	
	|";
	
	Запрос.Текст = РаспределениеООСМСПоСчетамЗатрат;
	Запрос.Выполнить();
	РаспределениеООСМСПоСчетамЗатрат = "ВТ_ООСМСПоСчетамЗатрат";

	// Распределяем отчисления  ОСМС по счетам затрат пропорционально сумме начислений,
	// с которых брались эти отчисления
	РаспределениеООСМСПоСчетамЗатрат = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеУчета.ФизЛицо,
	|	ДанныеУчета.ВидПлатежа,
	|	ДанныеУчета.Регистратор,
	|	ДанныеУчета.Отчисление,
	|	ДанныеУчета.СуммаПроводки,
	|	ДанныеУчета.СчетДт,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт1 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезООСМС) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезООСМС))
	|			ТОГДА ДанныеУчета.СубконтоДт1
	|		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС	
	|		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт1
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт1
	|	КОНЕЦ КАК СубконтоДт1,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт2 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезООСМС) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезООСМС))
	|			ТОГДА ДанныеУчета.СубконтоДт2
	|		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
	|		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт2
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт2
	|	КОНЕЦ КАК СубконтоДт2,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт3 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезООСМС) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезООСМС))
	|			ТОГДА ДанныеУчета.СубконтоДт3
	|		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
	|		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт3
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДт3,
	// - НУ - 
	|	ДанныеУчета.СчетДтНУ КАК СчетДтНУ,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ1 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СубконтоДтНУ1 В (&парамРезервыБезООСМС))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ1
	|		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
	|		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ1
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ1
	|	КОНЕЦ КАК СубконтоДтНУ1,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ2 ЕСТЬ NULL)
	|				И НЕ (ДанныеУчета.СубконтоДтНУ1 В (&парамРезервыБезООСМС))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ2
	|		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
	|		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ2
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ2
	|	КОНЕЦ КАК СубконтоДтНУ2,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ3 ЕСТЬ NULL)
	|				И НЕ (ДанныеУчета.СубконтоДтНУ1 В (&парамРезервыБезООСМС))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ3
	|		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
	|		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ3
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ3
	|	КОНЕЦ КАК СубконтоДтНУ3,
	// - НУ -
    |	ДанныеУчета.СтруктурноеПодразделение,
    |	ДанныеУчета.СтруктурноеПодразделениеОсновное,
	|
	|
	|	ДанныеУчета.СчетДтДляПени,
	|	ДанныеУчета.СубконтоДтДляПени1,
	|	ДанныеУчета.СубконтоДтДляПени2,
	|	ДанныеУчета.СубконтоДтДляПени3,
	|
	|	ДанныеУчета.ПодразделениеОрганизации,
	|	ДанныеУчета.НомерСубконтоПодразделенияДляПени,
	|	ДанныеУчета.НомерСубконтоСтатьиЗатратДляПени
	|
	|ИЗ
	|	" + РаспределениеООСМСПоСчетамЗатрат + " КАК ДанныеУчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт1
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт1.Ссылка
	|		   И ВидыСубконтоДт1.НомерСтроки = 1 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт2
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт2.Ссылка
	|		   И ВидыСубконтоДт2.НомерСтроки = 2
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт3
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт3.Ссылка
	|		   И ВидыСубконтоДт3.НомерСтроки = 3
	// - НУ -
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ1
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДт1.Ссылка
	|		   И ВидыСубконтоДт1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ2
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДтНУ2.Ссылка
	|		   И ВидыСубконтоДтНУ2.НомерСтроки = 2
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ3
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДтНУ3.Ссылка
	|		   И ВидыСубконтоДтНУ3.НомерСтроки = 3
	// - НУ -
	|
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеУчета.Физлицо,
	|	ДанныеУчета.ВидПлатежа,
	|	ДанныеУчета.Регистратор
	|";
	
	Запрос.Текст = РаспределениеООСМСПоСчетамЗатрат;
	
	СчетКредита = Справочники.НалогиСборыОтчисления.ОтчисленияОбязательноеСоциальноеМедицинскоеСтрахование.СчетУчетаРасчетовСКонтрагентомБУ;
	
	Если НЕ ЗначениеЗаполнено(СчетКредита) Тогда
		СчетКредита 		= ПланыСчетов.Типовой.ОбязательстваПоОтчислениямОСМС;
	КонецЕсли;
	
	СчетКредитаНУ = ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНУООСМС(СчетКредита, КонецМесяца(ПериодРегистрации));

	СтатьяЗатратПеняПоООСМС = Справочники.СтатьиЗатрат.ПеняПоООСМС;	
	
	Выборка = Запрос.Выполнить().Выбрать();
	мПромежуточнаяТаблица.Очистить();

	ЕстьДанные = Выборка.Следующий();
	Пока ЕстьДанные Цикл
		ТекущееФизЛицо = Выборка.ФизЛицо;
		ТекущийВидПлатежа = Выборка.ВидПлатежа;
		ТекущийРегистратор 	= Выборка.Регистратор;
		СуммаКРаспределению = Выборка.Отчисление;
		РаспределеннаяСумма = 0;
		
		Пока ЕстьДанные 
		   И Выборка.ФизЛицо = ТекущееФизЛицо 
		   И Выборка.ВидПлатежа = ТекущийВидПлатежа
		   И Выборка.Регистратор = ТекущийРегистратор Цикл
			
			Строка = мПромежуточнаяТаблица.Добавить();
			Строка.ФизЛицо = ТекущееФизЛицо;
			
			// В зависимости от вида платежа (Налог/Взнос или пеня) ставим на разные счета затрат
			Если ТекущийВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.Налог
				 Или ТекущийВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.НалогАкт
				 Или ТекущийВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.НалогСам Тогда
				Строка.СчетДт 		= Выборка.СчетДт;
				Строка.СубконтоДт1 	= Выборка.СубконтоДт1;
				Строка.СубконтоДт2 	= Выборка.СубконтоДт2;
				Строка.СубконтоДт3 	= Выборка.СубконтоДт3;
				Если мОтображатьСтруктурныеПодразделения Тогда
					Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
					//Строка.СтруктурноеПодразделениеКт = Выборка.СтруктурноеПодразделениеОсновное;
				КонецЕсли;
				
				Строка.СчетДтНУ = Выборка.СчетДтНУ;
				Строка.СубконтоДтНУ1 = Выборка.СубконтоДтНУ1;
				Строка.СубконтоДтНУ2 = Выборка.СубконтоДтНУ2;
				Строка.СубконтоДтНУ3 = Выборка.СубконтоДтНУ3;
				
			Иначе // Пеня по ООСМС
				
				Строка.СчетДт	    = Выборка.СчетДтДляПени;
				
				// Статья затрат
				Если Выборка.НомерСубконтоСтатьиЗатратДляПени <> 0 Тогда
					Если ЗначениеЗаполнено(Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоСтатьиЗатратДляПени]) Тогда
						Строка["СубконтоДт" + Выборка.НомерСубконтоСтатьиЗатратДляПени] = Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоСтатьиЗатратДляПени];
					Иначе 
						Строка["СубконтоДт" + Выборка.НомерСубконтоСтатьиЗатратДляПени]	= СтатьяЗатратПеняПоООСМС;
					КонецЕсли;
				КонецЕсли;
				
				// Подразделение организации
				Если Выборка.НомерСубконтоПодразделенияДляПени <> 0 Тогда
					Если ЗначениеЗаполнено(Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени]) Тогда
						Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени] = Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени];
					Иначе 
						Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени]= Выборка.ПодразделениеОрганизации;
					КонецЕсли;
				КонецЕсли;
				
				
				// Заполним оставшиеся субконто
				Для Ном = 1 по 3 Цикл
					Если НЕ ЗначениеЗаполнено(Строка["СубконтоДт" + Ном]) Тогда 
						Строка["СубконтоДт" + Ном] = Выборка["СубконтоДтДляПени" + Ном];
					КонецЕсли;
				КонецЦикла;

				Строка.СчетДтНУ = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", Строка.СчетДт), , , КонецМесяца(ПериодРегистрации));			
				ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 1, Строка.СубконтоДт1, "СубконтоДтНУ");
				ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 2, Строка.СубконтоДт2, "СубконтоДтНУ");
				ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 3, Строка.СубконтоДт3, "СубконтоДтНУ");
				
				Если мОтображатьСтруктурныеПодразделения Тогда
					Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
				КонецЕсли;
				
			КонецЕсли;			
			
			Строка.СчетКт 		= СчетКредита;
			Строка.СубконтоКт1 	= Выборка.ВидПлатежа;
			Строка.СубконтоКт2	= Выборка.Физлицо;
			
			Строка.СчетКтНУ = СчетКредитаНУ;
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетКт, Строка.СчетКтНУ, 1, Строка.СубконтоКт1, "СубконтоКтНУ");
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетКт, Строка.СчетКтНУ, 2, Строка.СубконтоКт2, "СубконтоКтНУ");
			
			Строка.Сумма		= Выборка.СуммаПроводки;
			
			Если мОтображатьСтруктурныеПодразделения Тогда
				Строка.СтруктурноеПодразделениеКт = Выборка.СтруктурноеПодразделениеОсновное;
			КонецЕсли;

			РаспределеннаяСумма = РаспределеннаяСумма + Выборка.СуммаПроводки;
			
			ЕстьДанные = Выборка.Следующий();
		КонецЦикла;
		
		// Остаток на последнюю строку по работнику
		Если СуммаКРаспределению <> РаспределеннаяСумма Тогда
			Строка.Сумма = Строка.Сумма + (СуммаКРаспределению - РаспределеннаяСумма);
		КонецЕсли;
	КонецЦикла;	

	// переносим в табличную часть документа
	ПеренестиОтражениеВУчетеИзПромежуточнойТаблицы();
	
	#КонецОбласти
	
	#Область ОтражениеОПВР
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение обязательных пенсионных взносов работодателя

   	// ОПВРИсчисленный
	//	Поля:
	//		ФизЛицо
	//		ВидПлатежа
	//		Взнос
	//	
	//	Описание:
	//	Исчисленные пенсионные взносы работодателя по видам платежа

    ОПВРИсчисленныйТекст = "
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	ОПВРРасчетыСФондами.Регистратор КАК Регистратор,
	|	ОПВРРасчетыСФондами.ФизЛицо КАК ФизЛицо,
    |	ОПВРРасчетыСФондами.ВидПлатежа КАК ВидПлатежа,
    |	СУММА(ОПВРРасчетыСФондами.Взнос) КАК Взнос
    |
    |ПОМЕСТИТЬ ВТ_ОПВРИсчисленный
    |ИЗ
    |	РегистрНакопления.ОПВРРасчетыСФондами КАК ОПВРРасчетыСФондами";
    
    Если МенеджерВТ <> Неопределено Тогда
    
    ОПВРИсчисленныйТекст = ОПВРИсчисленныйТекст + "
    |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
    |		ПО ОПВРРасчетыСФондами.ФизЛицо = СписокФизЛиц.ФизЛицо";
    
    КонецЕсли;
    
	ОПВРИсчисленныйТекст = ОПВРИсчисленныйТекст + "
	|
    |ГДЕ
	|	ОПВРРасчетыСФондами.Период >= &парамНачалоМесяца И 
	|	ОПВРРасчетыСФондами.Период <= &парамКонецМесяца И 
	|	ОПВРРасчетыСФондами.Организация = &парамОрганизация И 
	|	ОПВРРасчетыСФондами.ВидДвижения = &парамВидДвиженияПриход И
	|	ОПВРРасчетыСФондами.ВидСтроки = &парамВидСтрокиИсчисление И
	|	ОПВРРасчетыСФондами.Взнос <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|   ОПВРРасчетыСФондами.Регистратор,
	|	ОПВРРасчетыСФондами.ФизЛицо,
	|   ОПВРРасчетыСФондами.ВидПлатежа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
    |";
    
    Запрос.Текст = ОПВРИсчисленныйТекст;
    Запрос.Выполнить();
    ОПВРИсчисленныйТекст = "ВТ_ОПВРИсчисленный";
    
   	// БУДоходыПоСчетам
	//	Поля:
	//		ФизЛицо
	//		СчетДт
	//		СубконтоДт1
	//		СубконтоДт2
	//		СубконтоДт3
	//		Результат
	//	
	//	Описание:
	//	Данные отражения начислений в бухучете

    БУДоходыПоСчетам = "
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	БУНачисления.ФизЛицо,
	//|	БУНачисления.СтруктурноеПодразделениеДт,
    |	БУНачисления.СчетДт,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР
    |		ИНАЧЕ БУНачисления.СубконтоДт1
    |	КОНЕЦ КАК СубконтоДт1,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР
    |		ИНАЧЕ БУНачисления.СубконтоДт2
    |	КОНЕЦ КАК СубконтоДт2,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР
    |		ИНАЧЕ БУНачисления.СубконтоДт3
    |	КОНЕЦ КАК СубконтоДт3,
	// - НУ -
    |	БУНачисления.СчетДтНУ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ1
    |	КОНЕЦ КАК СубконтоДтНУ1,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ2
    |	КОНЕЦ КАК СубконтоДтНУ2,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ3
    |	КОНЕЦ КАК СубконтоДтНУ3,
	// - НУ -
    |	БУНачисления.СтруктурноеПодразделение,
    |	БУНачисления.СтруктурноеПодразделениеОсновное,
	|	СУММА(БУНачисления.Результат) КАК Результат
	|
	|ПОМЕСТИТЬ ВТ_БУДоходыПоСчетамОПВР
	|ИЗ
	|	(ВЫБРАТЬ
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1,		    
	|		БУОсновныеНачисления.СубконтоДт2,		    
	|		БУОсновныеНачисления.СубконтоДт3,
	// - НУ -
	|		БУОсновныеНачисления.СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1,		    
	|		БУОсновныеНачисления.СубконтоДтНУ2,		    
	|		БУОсновныеНачисления.СубконтоДтНУ3,		    
	// - НУ -                                 
	|											"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|															"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделениеОсновное,
	|		БУОсновныеНачисления.Результат
	|	ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО БУОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	Если мОтображатьСтруктурныеПодразделения Тогда
		БУДоходыПоСчетам = БУДоходыПоСчетам+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация) КАК УчетВзаиморасчетовПоСП
		|			ПО БУОсновныеНачисления.Сотрудник = УчетВзаиморасчетовПоСП.Сотрудник
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСППоОсновномуМестуРаботы
		|			ПО БУОсновныеНачисления.Сотрудник.ФизЛицо = УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
		
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|	ГДЕ
	|		БУОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация И
	|		БУОсновныеНачисления.ПериодРегистрации = &парамНачалоМесяца И
	|		БУОсновныеНачисления.ВидРасчета.ОблагаетсяОПВР <> &парамНеОблагаетсяЦеликом И
	|		(НЕ БУОсновныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		БУДополнительныеНачисления.ФизЛицо,
	//|		БУДополнительныеНачисления.СтруктурноеПодразделениеДт,
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,		    
	|		БУДополнительныеНачисления.СубконтоДт2,		    
	|		БУДополнительныеНачисления.СубконтоДт3,
	// - НУ -
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,		    
	|		БУДополнительныеНачисления.СубконтоДтНУ2,		    
	|		БУДополнительныеНачисления.СубконтоДтНУ3,		    
	// - НУ -
	|											"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|															"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделениеОсновное,
	|		БУДополнительныеНачисления.Результат
	|	ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО БУДополнительныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	
	Если мОтображатьСтруктурныеПодразделения Тогда
		БУДоходыПоСчетам = БУДоходыПоСчетам+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация) КАК УчетВзаиморасчетовПоСП
		|			ПО БУДополнительныеНачисления.Сотрудник = УчетВзаиморасчетовПоСП.Сотрудник
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСППоОсновномуМестуРаботы
		|			ПО БУДополнительныеНачисления.Сотрудник.ФизЛицо = УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСППоОсновномуМестуРаботы.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
		
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|	ГДЕ
	|		БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация И
	|		БУДополнительныеНачисления.ПериодРегистрации = &парамНачалоМесяца И
	|		БУДополнительныеНачисления.ВидРасчета.ОблагаетсяОПВР <> &парамНеОблагаетсяЦеликом И
	|		(НЕ БУДополнительныеНачисления.ВидРасчета.ЯвляетсяПрочимДоходом)) КАК БУНачисления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт1
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт1.Ссылка
	|		   И ВидыСубконтоДт1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт2
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт2.Ссылка
	|		   И ВидыСубконтоДт2.НомерСтроки = 2
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт3
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт3.Ссылка
	|		   И ВидыСубконтоДт3.НомерСтроки = 3
	// - НУ -
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ1
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ1.Ссылка
	|		   И ВидыСубконтоДтНУ1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ2
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ2.Ссылка
	|		   И ВидыСубконтоДтНУ2.НомерСтроки = 2
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ3
	|		ПО БУНачисления.СчетДтНУ = ВидыСубконтоДтНУ3.Ссылка
	|		   И ВидыСубконтоДтНУ3.НомерСтроки = 3
	// - НУ -
	|
	|СГРУППИРОВАТЬ ПО
    |	БУНачисления.ФизЛицо,
	// - НУ -
    |	БУНачисления.СчетДтНУ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ1
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ2
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР
    |		ИНАЧЕ БУНачисления.СубконтоДтНУ3
    |	КОНЕЦ,
	// - НУ -
    |	БУНачисления.СтруктурноеПодразделение,
    |	БУНачисления.СтруктурноеПодразделениеОсновное,
    |	БУНачисления.СчетДт,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР
    |		ИНАЧЕ БУНачисления.СубконтоДт1
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР
    |		ИНАЧЕ БУНачисления.СубконтоДт2
    |	КОНЕЦ,
    |	ВЫБОР 
    |		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР
    |		ИНАЧЕ БУНачисления.СубконтоДт3
    |	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
    |";

	Запрос.Текст = БУДоходыПоСчетам;
	Запрос.Выполнить();
	БУДоходыПоСчетам = "ВТ_БУДоходыПоСчетамОПВР";

	// сначала определим счет, на который будем относить затраты по обязательным пенсионным взносам работодателя и 
	// распределим пропорционально сумме начислений, а потом на основании счета подставим значения некоторых субконто по умолчанию
	РаспределениеОПВРПоСчетамЗатрат = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОПВРРасчетыСФондами.ФизЛицо,
	|	ОПВРРасчетыСФондами.ВидПлатежа,
	|	ОПВРРасчетыСФондами.Взнос,
	|	ОПВРРасчетыСФондами.Регистратор,
	|	ВЫБОР 
	|		КОГДА БУСуммаНачислений.Результат <> 0 
	|			ТОГДА ВЫРАЗИТЬ(ОПВРРасчетыСФондами.Взнос * БУНачисления.Результат / БУСуммаНачислений.Результат КАК ЧИСЛО(15, 2)) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаПроводки,
	|	ВЫБОР
	|		КОГДА НЕ(БУНачисления.СчетДт ЕСТЬ NULL) 
	|				И НЕ(БУНачисления.СчетДт В (&парамСчетаРезервовБезОПВР) И БУНачисления.СубконтоДт1 В (&парамРезервыБезОПВР))
	|			ТОГДА БУНачисления.СчетДт
	|		КОГДА ОсновнойСпособОтражения.СпособОтраженияВБухучете = &парамСпособПоУмолчанию // особых в ФЛ + ВР не нашли - проверим по подразделению
	|					И НЕ (МестаРаботы.СпособОтраженияВБухучете ЕСТЬ NULL)
	|			ТОГДА МестаРаботы.СпособОтраженияВБухучете.СчетДт
	|		ИНАЧЕ ОсновнойСпособОтражения.СпособОтраженияВБухучете.СчетДт
	|	КОНЕЦ КАК СчетДт,
	|	БУНачисления.СчетДт КАК СчетДтОплатаТруда,
	|	БУНачисления.СубконтоДт1,
	|	БУНачисления.СубконтоДт2,
	|	БУНачисления.СубконтоДт3,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА &парамСчетДтДляПени
	|		ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|	КОНЕЦ КАК СчетДтДляПени,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ1, НЕОПРЕДЕЛЕНО) 
	|	КОНЕЦ КАК СубконтоДтДляПени1,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ2, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ КАК СубконтоДтДляПени2,
	|	ВЫБОР
	|		КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(РасчетПениОПВиСО.СубконтоЗатратБУ3, НЕОПРЕДЕЛЕНО)  
	|	КОНЕЦ КАК СубконтоДтДляПени3,
 	// - НУ - 
	|	ВЫБОР
	|		КОГДА НЕ(БУНачисления.СчетДтНУ ЕСТЬ NULL) 
	|			ТОГДА БУНачисления.СчетДтНУ
	|		КОГДА ОсновнойСпособОтражения.СпособОтраженияВБухучете = &парамСпособПоУмолчанию // особых в ФЛ + ВР не нашли - проверим по подразделению
	|					И НЕ (МестаРаботы.СпособОтраженияВБухучете ЕСТЬ NULL)
	|			ТОГДА МестаРаботы.СпособОтраженияВБухучете.СчетДтНУ
	|		ИНАЧЕ ОсновнойСпособОтражения.СпособОтраженияВБухучете.СчетДтНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	БУНачисления.СубконтоДтНУ1,
	|	БУНачисления.СубконтоДтНУ2,
	|	БУНачисления.СубконтоДтНУ3,
	// - НУ -
	|	БУНачисления.СтруктурноеПодразделение,
	|	БУНачисления.СтруктурноеПодразделениеОсновное,
	|
    |	МестаРаботы.ПодразделениеОрганизации,
   	|	МестаРаботы.СпособОтраженияВБухучете КАК СпособОтраженияВБухучетеДляПодразделения,
	|	ОсновнойСпособОтражения.СпособОтраженияВБухучете КАК ОсновнойСпособОтраженияВБухучете,
	|	ЕСТЬNULL(ВидыСубконтоПодразделенияДляПени.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДляПени,
	|	ЕСТЬNULL(ВидыСубконтоСтатьиЗатратДляПени.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатратДляПени
	|
	|ПОМЕСТИТЬ ВТ_ОПВРПоСчетамЗатрат
	|ИЗ	
	|	" + ОПВРИсчисленныйТекст + " КАК ОПВРРасчетыСФондами
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетПениОПВиСО КАК РасчетПениОПВиСО
	|		ПО ОПВРРасчетыСФондами.Регистратор = РасчетПениОПВиСО.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + БУДоходыПоСчетам + " КАК БУНачисления
	|		ПО ОПВРРасчетыСФондами.ФизЛицо = БУНачисления.ФизЛицо 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							БУНачисления.ФизЛицо,
	|							СУММА(БУНачисления.Результат) КАК Результат
	|						ИЗ
	|							" + БУДоходыПоСчетам + " КАК БУНачисления
	|						СГРУППИРОВАТЬ ПО
	|							БУНачисления.ФизЛицо) КАК БУСуммаНачислений
	|		ПО ОПВРРасчетыСФондами.ФизЛицо = БУСуммаНачислений.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + ОсновнойСпособОтраженияТекст + " КАК ОсновнойСпособОтражения
	|		ПО ОПВРРасчетыСФондами.ФизЛицо = ОсновнойСпособОтражения.ФизЛицо
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ " + МестаРаботыТекст + " КАК МестаРаботы
	|		ПО ОПВРРасчетыСФондами.ФизЛицо = МестаРаботы.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоПодразделенияДляПени
	|		ПО ВидыСубконтоПодразделенияДляПени.Ссылка = (ВЫБОР
	|															КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|																ТОГДА &парамСчетДтДляПени
	|															ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|														КОНЕЦ)
	|		   И ВидыСубконтоПодразделенияДляПени.ВидСубконто = &парамВидСубконтоПодразделения
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоСтатьиЗатратДляПени
	|		ПО ВидыСубконтоСтатьиЗатратДляПени.Ссылка = (ВЫБОР
	|															КОГДА РасчетПениОПВиСО.СчетЗатратБУ ЕСТЬ NULL ИЛИ РасчетПениОПВиСО.СчетЗатратБУ = ЗНАЧЕНИЕ(ПланСчетов.Типовой.ПустаяСсылка)
	|																ТОГДА &парамСчетДтДляПени
	|															ИНАЧЕ РасчетПениОПВиСО.СчетЗатратБУ
	|														КОНЕЦ)
	|		   И ВидыСубконтоСтатьиЗатратДляПени.ВидСубконто = &парамВидСубконтоСтатьиЗатрат
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетДт	
	|";
	
	Запрос.Текст = РаспределениеОПВРПоСчетамЗатрат;
	Запрос.Выполнить();
	РаспределениеОПВРПоСчетамЗатрат = "ВТ_ОПВРПоСчетамЗатрат";
	
	// Распределяем обязательные пенсионные взносы работодателя по счетам затрат 
	// пропорционально сумме начислений, с которых брались эти взносы
	РаспределениеОПВРПоСчетамЗатрат = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеУчета.ФизЛицо,
	|	ДанныеУчета.ВидПлатежа,
	|	ДанныеУчета.Взнос,
	|	ДанныеУчета.Регистратор,
	|	ДанныеУчета.СуммаПроводки,
	|	ДанныеУчета.СчетДт,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт1 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезОПВР) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезОПВР))
	|			ТОГДА ДанныеУчета.СубконтоДт1
	|		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР	
	|		КОГДА ВидыСубконтоДт1.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт1
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт1
	|	КОНЕЦ КАК СубконтоДт1,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт2 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезОПВР) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезОПВР))
	|			ТОГДА ДанныеУчета.СубконтоДт2
	|		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР
	|		КОГДА ВидыСубконтоДт2.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт2
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт2
	|	КОНЕЦ КАК СубконтоДт2,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДт3 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СчетДтОплатаТруда В (&парамСчетаРезервовБезОПВР) И ДанныеУчета.СубконтоДт1 В (&парамРезервыБезОПВР))
	|			ТОГДА ДанныеУчета.СубконтоДт3
	|		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратОПВР
	|		КОГДА ВидыСубконтоДт3.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДт3
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДт3,
	// - НУ - 
	|	ДанныеУчета.СчетДтНУ КАК СчетДтНУ,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ1 ЕСТЬ NULL)
	|				И НЕ(ДанныеУчета.СубконтоДтНУ1 В (&парамРезервыБезООСМС))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ1
	|		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
	|		КОГДА ВидыСубконтоДтНУ1.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ1
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ1
	|	КОНЕЦ КАК СубконтоДтНУ1,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ2 ЕСТЬ NULL)
	|				И НЕ (ДанныеУчета.СубконтоДтНУ1 В (&парамРезервыБезООСМС))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ2
	|		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
	|		КОГДА ВидыСубконтоДтНУ2.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ2
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ2
	|	КОНЕЦ КАК СубконтоДтНУ2,
	|
	|	ВЫБОР
	|		КОГДА НЕ(ДанныеУчета.СубконтоДтНУ3 ЕСТЬ NULL)
	|				И НЕ (ДанныеУчета.СубконтоДтНУ1 В (&парамРезервыБезООСМС))
	|			ТОГДА ДанныеУчета.СубконтоДтНУ3
	|		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоСтатьиЗатрат ТОГДА &парамСтатьяЗатратООСМС
	|		КОГДА ВидыСубконтоДтНУ3.ВидСубконто = &парамВидСубконтоПодразделения ТОГДА ДанныеУчета.ПодразделениеОрганизации
	|		КОГДА ДанныеУчета.ОсновнойСпособОтраженияВБухучете = &парамСпособПоУмолчанию
	|					И НЕ (ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения ЕСТЬ NULL)
	|			ТОГДА ДанныеУчета.СпособОтраженияВБухучетеДляПодразделения.СубконтоДтНУ3
	|		ИНАЧЕ ДанныеУчета.ОсновнойСпособОтраженияВБухучете.СубконтоДтНУ3
	|	КОНЕЦ КАК СубконтоДтНУ3,
	// - НУ -
    |	ДанныеУчета.СтруктурноеПодразделение,
    |	ДанныеУчета.СтруктурноеПодразделениеОсновное,
	|
	|	ДанныеУчета.СчетДтДляПени,
	|	ДанныеУчета.СубконтоДтДляПени1,
	|	ДанныеУчета.СубконтоДтДляПени2,
	|	ДанныеУчета.СубконтоДтДляПени3,
	|
	|	ДанныеУчета.ПодразделениеОрганизации,
	|	ДанныеУчета.НомерСубконтоПодразделенияДляПени,
	|	ДанныеУчета.НомерСубконтоСтатьиЗатратДляПени
	|
	|ИЗ
	|	" + РаспределениеОПВРПоСчетамЗатрат + " КАК ДанныеУчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт1
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт1.Ссылка
	|		   И ВидыСубконтоДт1.НомерСтроки = 1 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт2
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт2.Ссылка
	|		   И ВидыСубконтоДт2.НомерСтроки = 2
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт3
	|		ПО ДанныеУчета.СчетДт = ВидыСубконтоДт3.Ссылка
	|		   И ВидыСубконтоДт3.НомерСтроки = 3
	// - НУ -
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ1
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДт1.Ссылка
	|		   И ВидыСубконтоДт1.НомерСтроки = 1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ2
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДтНУ2.Ссылка
	|		   И ВидыСубконтоДтНУ2.НомерСтроки = 2
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоДтНУ3
	|		ПО ДанныеУчета.СчетДтНУ = ВидыСубконтоДтНУ3.Ссылка
	|		   И ВидыСубконтоДтНУ3.НомерСтроки = 3
	// - НУ -
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеУчета.Физлицо,
	|	ДанныеУчета.ВидПлатежа
	|";
	
	Запрос.Текст = РаспределениеОПВРПоСчетамЗатрат;
	
	СчетКредита = Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносыРаботодателя.СчетУчетаРасчетовСКонтрагентомБУ;
	
	Если НЕ ЗначениеЗаполнено(СчетКредита) Тогда
		СчетКредита 		= ПланыСчетов.Типовой.ОбязательстваПоПенсионнымОтчислениям;
	КонецЕсли;
	
	СчетКредитаНУ = ПроцедурыНалоговогоУчета.ПолучитьСчетУчетаНУОПВР(СчетКредита, КонецМесяца(ПериодРегистрации));
	
	СтатьяЗатратПеняПоОПВР = Справочники.СтатьиЗатрат.ПеняПоОПВР;	
	
	Выборка = Запрос.Выполнить().Выбрать();
	мПромежуточнаяТаблица.Очистить();

	ЕстьДанные = Выборка.Следующий();
	Пока ЕстьДанные Цикл
		ТекущееФизЛицо = Выборка.ФизЛицо;
		ТекущийРегистратор 	= Выборка.Регистратор;
		ТекущийВидПлатежа 	= Выборка.ВидПлатежа;
		СуммаКРаспределению = Выборка.Взнос;
		РаспределеннаяСумма = 0;
		
		Пока ЕстьДанные 
		   И Выборка.ФизЛицо = ТекущееФизЛицо 
		   И Выборка.ВидПлатежа = ТекущийВидПлатежа
		   И Выборка.Регистратор =  ТекущийРегистратор Цикл
			
			Строка = мПромежуточнаяТаблица.Добавить();
			Строка.ФизЛицо = ТекущееФизЛицо;
			
			// В зависимости от вида платежа (Налог/Взнос или пеня) ставим на разные счета затрат
			Если ТекущийВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.Налог
				 Или ТекущийВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.НалогАкт
				 Или ТекущийВидПлатежа = Перечисления.ВидыПлатежейВБюджетИФонды.НалогСам Тогда
				Строка.СчетДт 		= Выборка.СчетДт;
				Строка.СубконтоДт1 	= Выборка.СубконтоДт1;
				Строка.СубконтоДт2 	= Выборка.СубконтоДт2;
				Строка.СубконтоДт3 	= Выборка.СубконтоДт3;
				
				Если мОтображатьСтруктурныеПодразделения Тогда
					Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
				КонецЕсли;
				
				Строка.СчетДтНУ = Выборка.СчетДтНУ;
				Строка.СубконтоДтНУ1 = Выборка.СубконтоДтНУ1;
				Строка.СубконтоДтНУ2 = Выборка.СубконтоДтНУ2;
				Строка.СубконтоДтНУ3 = Выборка.СубконтоДтНУ3;
				
			Иначе // Пеня по ОПВР
				
				Строка.СчетДт	    = Выборка.СчетДтДляПени;
				
				// Статья затрат
				Если Выборка.НомерСубконтоСтатьиЗатратДляПени <> 0 Тогда
					Если ЗначениеЗаполнено(Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоСтатьиЗатратДляПени]) Тогда
						Строка["СубконтоДт" + Выборка.НомерСубконтоСтатьиЗатратДляПени]	= Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоСтатьиЗатратДляПени];
					Иначе 
						Строка["СубконтоДт" + Выборка.НомерСубконтоСтатьиЗатратДляПени]	= СтатьяЗатратПеняПоОПВР;
					КонецЕсли;
				КонецЕсли;
				
				// Подразделение организаций
				Если Выборка.НомерСубконтоПодразделенияДляПени <> 0 Тогда
					Если ЗначениеЗаполнено(Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени]) Тогда
						Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени] = Выборка["СубконтоДтДляПени" + Выборка.НомерСубконтоПодразделенияДляПени];
					Иначе 
						Строка["СубконтоДт" + Выборка.НомерСубконтоПодразделенияДляПени] = Выборка.ПодразделениеОрганизации;
					КонецЕсли;
				КонецЕсли;
				
				// Заполним оставшиеся субконто
				Для Ном = 1 по 3 Цикл
					Если НЕ ЗначениеЗаполнено(Строка["СубконтоДт" + Ном]) Тогда
						Строка["СубконтоДт" + Ном] = Выборка["СубконтоДтДляПени" + Ном];
					КонецЕсли;
				КонецЦикла;
				
				Строка.СчетДтНУ = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", Строка.СчетДт), , , КонецМесяца(ПериодРегистрации));			
				ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 1, Строка.СубконтоДт1, "СубконтоДтНУ");
				ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 2, Строка.СубконтоДт2, "СубконтоДтНУ");
				ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 3, Строка.СубконтоДт3, "СубконтоДтНУ");
				
				Если мОтображатьСтруктурныеПодразделения Тогда
					Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
				КонецЕсли;
				
			КонецЕсли;			
			
			Строка.СчетКт 		= СчетКредита;
			Строка.СубконтоКт1 	= Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносыРаботодателя;
			Строка.СубконтоКт2 	= Выборка.ВидПлатежа;
			Строка.СубконтоКт3	= Выборка.Физлицо;
			
			Строка.СчетКтНУ = СчетКредитаНУ;
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетКт, Строка.СчетКтНУ, 1, Строка.СубконтоКт1, "СубконтоКтНУ");
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетКт, Строка.СчетКтНУ, 2, Строка.СубконтоКт2, "СубконтоКтНУ");
			ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетКт, Строка.СчетКтНУ, 3, Строка.СубконтоКт3, "СубконтоКтНУ");
			
			Если мОтображатьСтруктурныеПодразделения Тогда
				Строка.СтруктурноеПодразделениеКт = Выборка.СтруктурноеПодразделение;
				Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделениеОсновное;
			КонецЕсли;
			
			Строка.Сумма		= Выборка.СуммаПроводки;
			РаспределеннаяСумма = РаспределеннаяСумма + Выборка.СуммаПроводки;
			
			ЕстьДанные = Выборка.Следующий();
		КонецЦикла;
		
		// Остаток на последнюю строку по работнику
		Если СуммаКРаспределению <> РаспределеннаяСумма Тогда
			Строка.Сумма = Строка.Сумма + (СуммаКРаспределению - РаспределеннаяСумма);
		КонецЕсли;
	КонецЦикла;	

	// переносим в табличную часть документа
	ПеренестиОтражениеВУчетеИзПромежуточнойТаблицы();
	
	#КонецОбласти
	
	#Область РезервыПоВознаграждениямРаботников
	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// резервы по вознаграждения работникам
	
 	Запрос.УстановитьПараметр("парамВедениеУчетаВременныхРазницБалансовымМетодом", мВедениеУчетаВременныхРазницБалансовымМетодом);
	
	БУДоходыПоСчетам = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|		БУОсновныеНачисления.Сотрудник,
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.ВидРасчета,
	|		БУОсновныеНачисления.СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3,
	|		БУОсновныеНачисления.СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3,
	|											"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|		СУММА(БУОсновныеНачисления.Результат) КАК Сумма
	|
	|ПОМЕСТИТЬ ВТ_БУДоходыПоСчетамРезервы
	|ИЗ
	|		РегистрРасчета.БУОсновныеНачисления КАК БУОсновныеНачисления";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО БУОсновныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
 	
	Если мОтображатьСтруктурныеПодразделения Тогда
		БУДоходыПоСчетам = БУДоходыПоСчетам+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация) КАК УчетВзаиморасчетовПоСП
		|			ПО БУОсновныеНачисления.Сотрудник = УчетВзаиморасчетовПоСП.Сотрудник
		|				И НЕ (УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|ГДЕ
	|		БУОсновныеНачисления.ОбособленноеПодразделение = &парамОрганизация И
	|		БУОсновныеНачисления.ПериодРегистрации = &парамНачалоМесяца
	|
	|СГРУППИРОВАТЬ ПО
	|		БУОсновныеНачисления.Сотрудник,
	|		БУОсновныеНачисления.ФизЛицо,
	|		БУОсновныеНачисления.ВидРасчета,
	|		БУОсновныеНачисления.СчетДт,
	|		БУОсновныеНачисления.СубконтоДт1,
	|		БУОсновныеНачисления.СубконтоДт2,
	|		БУОсновныеНачисления.СубконтоДт3,
	|		БУОсновныеНачисления.СчетДтНУ,
	|		БУОсновныеНачисления.СубконтоДтНУ1,
	|		БУОсновныеНачисления.СубконтоДтНУ2,
	|		БУОсновныеНачисления.СубконтоДтНУ3,"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|		БУДополнительныеНачисления.Сотрудник,
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.ВидРасчета,
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,
	|		БУДополнительныеНачисления.СубконтоДт2,
	|		БУДополнительныеНачисления.СубконтоДт3,
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,
	|		БУДополнительныеНачисления.СубконтоДтНУ2,
	|		БУДополнительныеНачисления.СубконтоДтНУ3,
	|											"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|		СУММА(БУДополнительныеНачисления.Результат) КАК Сумма
	|ИЗ
	|		РегистрРасчета.БУДополнительныеНачисления КАК БУДополнительныеНачисления";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|			ПО БУДополнительныеНачисления.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
 	
	Если мОтображатьСтруктурныеПодразделения Тогда
		БУДоходыПоСчетам = БУДоходыПоСчетам+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,ОбособленноеПодразделение=&парамОрганизация) КАК УчетВзаиморасчетовПоСП
		|			ПО БУДополнительныеНачисления.Сотрудник = УчетВзаиморасчетовПоСП.Сотрудник
		|				И НЕ (УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	БУДоходыПоСчетам = БУДоходыПоСчетам + "
	|ГДЕ
	|		БУДополнительныеНачисления.ОбособленноеПодразделение = &парамОрганизация И
	|		БУДополнительныеНачисления.ПериодРегистрации = &парамНачалоМесяца
	|
	|СГРУППИРОВАТЬ ПО
	|		БУДополнительныеНачисления.Сотрудник,
	|		БУДополнительныеНачисления.ФизЛицо,
	|		БУДополнительныеНачисления.ВидРасчета,
	|		БУДополнительныеНачисления.СчетДт,
	|		БУДополнительныеНачисления.СубконтоДт1,
	|		БУДополнительныеНачисления.СубконтоДт2,
	|		БУДополнительныеНачисления.СубконтоДт3,
	|		БУДополнительныеНачисления.СчетДтНУ,
	|		БУДополнительныеНачисления.СубконтоДтНУ1,
	|		БУДополнительныеНачисления.СубконтоДтНУ2,
	|		БУДополнительныеНачисления.СубконтоДтНУ3,"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+"
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета
 	|";
	
	Запрос.Текст = БУДоходыПоСчетам;
	Запрос.Выполнить();
	БУДоходыПоСчетам = "ВТ_БУДоходыПоСчетамРезервы";
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БУНачисления.СчетДт,
	|	БУНачисления.ФизЛицо,
	|	БУНачисления.СубконтоДт1,
	|	БУНачисления.СубконтоДт2,
	|	БУНачисления.СубконтоДт3,
	|	ВЫБОР
	|		КОГДА &парамВедениеУчетаВременныхРазницБалансовымМетодом И НЕ Резервы.ПринятиеКВычетуПоНалоговомуУчету 
	|			ТОГДА &парамСчетПрочиеРасходыНУ
	|		ИНАЧЕ БУНачисления.СчетДтНУ
	|	КОНЕЦ КАК СчетДтНУ,
	|	ВЫБОР
	|		КОГДА &парамВедениеУчетаВременныхРазницБалансовымМетодом И НЕ Резервы.ПринятиеКВычетуПоНалоговомуУчету
	|			ТОГДА Резервы.СтатьяЗатрат
	|		ИНАЧЕ	 
	|			ВЫБОР
	|				КОГДА ВидыСубконтоБУДт1.ВидСубконто = ВидыСубконтоНУДт1.ВидСубконто
	|					ТОГДА БУНачисления.СубконтоДт1
	|				КОГДА ВидыСубконтоБУДт2.ВидСубконто = ВидыСубконтоНУДт1.ВидСубконто
	|					ТОГДА БУНачисления.СубконтоДт2
	|				КОГДА ВидыСубконтоБУДт3.ВидСубконто = ВидыСубконтоНУДт1.ВидСубконто
	|					ТОГДА БУНачисления.СубконтоДт3
	|			КОНЕЦ
	|	КОНЕЦ КАК СубконтоДтНУ1,
	|	ВЫБОР
	|		КОГДА ВидыСубконтоБУДт1.ВидСубконто = ВидыСубконтоНУДт2.ВидСубконто
	|			ТОГДА БУНачисления.СубконтоДт1
	|		КОГДА ВидыСубконтоБУДт2.ВидСубконто = ВидыСубконтоНУДт2.ВидСубконто
	|			ТОГДА БУНачисления.СубконтоДт2
	|		КОГДА ВидыСубконтоБУДт3.ВидСубконто = ВидыСубконтоНУДт2.ВидСубконто
	|			ТОГДА БУНачисления.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДтНУ2,
	|	ВЫБОР
	|		КОГДА ВидыСубконтоБУДт1.ВидСубконто = ВидыСубконтоНУДт3.ВидСубконто
	|			ТОГДА БУНачисления.СубконтоДт1
	|		КОГДА ВидыСубконтоБУДт2.ВидСубконто = ВидыСубконтоНУДт3.ВидСубконто
	|			ТОГДА БУНачисления.СубконтоДт2
	|		КОГДА ВидыСубконтоБУДт3.ВидСубконто = ВидыСубконтоНУДт3.ВидСубконто
	|			ТОГДА БУНачисления.СубконтоДт3
	|	КОНЕЦ КАК СубконтоДтНУ3,
	|	БУНачисления.СтруктурноеПодразделение,
	|	СУММА(БУНачисления.Сумма) КАК Сумма,
	|	РазмерыОтчисленийВРезервы.Резерв,
	|	РазмерыОтчисленийВРезервы.Размер,
	|	РазмерыОтчисленийВРезервы.РазмерСоциальногоНалога,
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер, Ложь) 
	|			ТОГДА РазмерыОтчисленийВРезервы.РазмерСоциальныхОтчислений
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РазмерСоциальныхОтчислений,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности, Значение(Перечисление.ОтношениеКИнвалидности.ПустаяСсылка)) 
	|								<> Значение(Перечисление.ОтношениеКИнвалидности.Инвалид) 
	|				И НЕ ЕСТЬNULL(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер, Ложь)    
	|	    	ТОГДА РазмерыОтчисленийВРезервы.РазмерОтчисленийОСМС
	|	    ИНАЧЕ 0
	|	КОНЕЦ КАК РазмерОтчисленийОСМС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(РаботникиОрганизации.ИсчислятьОППВ, ЛОЖЬ) 
	|			ТОГДА РазмерыОтчисленийВРезервы.РазмерПрофессиональныхПенсионныхВзносов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РазмерПрофессиональныхПенсионныхВзносов,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности, Значение(Перечисление.ОтношениеКИнвалидности.ПустаяСсылка)) 
	|								<> Значение(Перечисление.ОтношениеКИнвалидности.Инвалид) 
	|				И НЕ ЕСТЬNULL(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер, Ложь)    
	|	    	ТОГДА РазмерыОтчисленийВРезервы.РазмерПенсионныхВзносовРаботодателя
	|	    ИНАЧЕ 0
	|	КОНЕЦ КАК РазмерПенсионныхВзносовРаботодателя,
	|	ВЫБОР
	|		КОГДА РазмерыОтчисленийВРезервы.СчетУчета = &парамПустойСчет
	|			ТОГДА &парамСчетКтДляРезервов // если не указан конкретный счет, то ставим на 3430
	|		ИНАЧЕ РазмерыОтчисленийВРезервы.СчетУчета
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА РазмерыОтчисленийВРезервы.СчетУчета = &парамПустойСчет
	|			ТОГДА &парамСчетКтНУДляРезервов // если не указан конкретный счет, то ставим на 3430
	|		ИНАЧЕ РазмерыОтчисленийВРезервы.СчетУчета.СчетНУ
	|	КОНЕЦ КАК СчетКтНУ,
	|	ЕСТЬNULL(ВидыСубконтоДт.НомерСтроки, 0) КАК НомерСубконтоСтатьиЗатрат
	|ИЗ
	|	" + БУДоходыПоСчетам + " КАК БУНачисления
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Резервы.БазовыеВидыРасчета КАК БазовыеВидыРасчета
	|		ПО БУНачисления.ВидРасчета = БазовыеВидыРасчета.ВидРасчета
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазмерыОтчисленийВРезервы.СрезПоследних(
	|				&парамНачалоМесяца,
	|				Организация = &парамОрганизация) КАК РазмерыОтчисленийВРезервы
	|		ПО БазовыеВидыРасчета.Ссылка = РазмерыОтчисленийВРезервы.Резерв
	|			И РазмерыОтчисленийВРезервы.Размер <> 0
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&парамКонецМесяца, 
	|				Организация = &парамГоловнаяОрганизация
	|				И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК РаботникиОрганизации
	|		ПО БУНачисления.Сотрудник = РаботникиОрганизации.Сотрудник
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(
	|				&парамКонецМесяца, Пенсионер) КАК СведенияОПенсионномОбеспеченииФизЛиц
	|		ПО БУНачисления.ФизЛицо = СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
	|				&парамКонецМесяца, (СрокДействияСправки = ДАТАВРЕМЯ(1,1,1)
	|					ИЛИ КОНЕЦПЕРИОДА(СрокДействияСправки, ДЕНЬ) >= &парамКонецМесяца)) КАК СведенияОбИнвалидностиФизлиц
	|		ПО БУНачисления.ФизЛицо = СведенияОбИнвалидностиФизлиц.ФизЛицо
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Резервы КАК Резервы
	|		ПО (РазмерыОтчисленийВРезервы.Резерв = Резервы.Ссылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоДт
	|		ПО БУНачисления.СчетДт = ВидыСубконтоДт.Ссылка
	|			И ВидыСубконтоДт.ВидСубконто = &парамВидСубконтоСтатьиЗатрат
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоБУДт1
	|		ПО БУНачисления.СчетДт = ВидыСубконтоБУДт1.Ссылка
	|			И (ВидыСубконтоБУДт1.НомерСтроки = 1)
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоБУДт2
	|		ПО БУНачисления.СчетДт = ВидыСубконтоБУДт2.Ссылка
	|			И (ВидыСубконтоБУДт2.НомерСтроки = 2)
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидыСубконтоБУДт3
	|		ПО БУНачисления.СчетДт = ВидыСубконтоБУДт3.Ссылка
	|			И (ВидыСубконтоБУДт3.НомерСтроки = 3)
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоНУДт1
	|		ПО (ВЫБОР
	|				КОГДА Резервы.ПринятиеКВычетуПоНалоговомуУчету
	|					ТОГДА БУНачисления.СчетДтНУ = ВидыСубконтоНУДт1.Ссылка
	|				ИНАЧЕ &парамСчетПрочиеРасходыНУ = ВидыСубконтоНУДт1.Ссылка
	|			КОНЕЦ)
	|			И (ВидыСубконтоНУДт1.НомерСтроки = 1)
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоНУДт2
	|		ПО (ВЫБОР
	|				КОГДА Резервы.ПринятиеКВычетуПоНалоговомуУчету
	|					ТОГДА БУНачисления.СчетДтНУ = ВидыСубконтоНУДт2.Ссылка
	|				ИНАЧЕ &парамСчетПрочиеРасходыНУ = ВидыСубконтоНУДт2.Ссылка
	|			КОНЕЦ)
	|			И (ВидыСубконтоНУДт2.НомерСтроки = 2)
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ВидыСубконтоНУДт3
	|		ПО (ВЫБОР
	|				КОГДА Резервы.ПринятиеКВычетуПоНалоговомуУчету
	|					ТОГДА БУНачисления.СчетДтНУ = ВидыСубконтоНУДт3.Ссылка
	|				ИНАЧЕ &парамСчетПрочиеРасходыНУ = ВидыСубконтоНУДт3.Ссылка
	|			КОНЕЦ)
	|			И (ВидыСубконтоНУДт3.НомерСтроки = 3)
	|
	|ГДЕ 
	|	БУНачисления.Сумма <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	БУНачисления.СчетДт,
	|	БУНачисления.ФизЛицо,
	|	БУНачисления.СубконтоДт1,
	|	БУНачисления.СубконтоДт2,
	|	БУНачисления.СубконтоДт3,
	|	БУНачисления.СтруктурноеПодразделение,
	|	РазмерыОтчисленийВРезервы.Резерв,
	|	РазмерыОтчисленийВРезервы.Размер,
	|	РазмерыОтчисленийВРезервы.РазмерСоциальногоНалога,
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер, Ложь) 
	|			ТОГДА РазмерыОтчисленийВРезервы.РазмерСоциальныхОтчислений
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности, Значение(Перечисление.ОтношениеКИнвалидности.ПустаяСсылка)) 
	|								<> Значение(Перечисление.ОтношениеКИнвалидности.Инвалид) 
	|				И НЕ ЕСТЬNULL(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер, Ложь)    
	|	    	ТОГДА РазмерыОтчисленийВРезервы.РазмерОтчисленийОСМС
	|	    ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(РаботникиОрганизации.ИсчислятьОППВ, ЛОЖЬ) 
	|			ТОГДА РазмерыОтчисленийВРезервы.РазмерПрофессиональныхПенсионныхВзносов
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности, Значение(Перечисление.ОтношениеКИнвалидности.ПустаяСсылка)) 
	|								<> Значение(Перечисление.ОтношениеКИнвалидности.Инвалид) 
	|				И НЕ ЕСТЬNULL(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер, Ложь)    
	|	    	ТОГДА РазмерыОтчисленийВРезервы.РазмерПенсионныхВзносовРаботодателя
	|	    ИНАЧЕ 0
	|	КОНЕЦ,
	|	Резервы.ПринятиеКВычетуПоНалоговомуУчету,
	|	Резервы.СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА &парамВедениеУчетаВременныхРазницБалансовымМетодом И НЕ Резервы.ПринятиеКВычетуПоНалоговомуУчету 
	|			ТОГДА &парамСчетПрочиеРасходыНУ
	|		ИНАЧЕ БУНачисления.СчетДтНУ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &парамВедениеУчетаВременныхРазницБалансовымМетодом И НЕ Резервы.ПринятиеКВычетуПоНалоговомуУчету
	|			ТОГДА Резервы.СтатьяЗатрат
	|		ИНАЧЕ	 
	|			ВЫБОР
	|				КОГДА ВидыСубконтоБУДт1.ВидСубконто = ВидыСубконтоНУДт1.ВидСубконто
	|					ТОГДА БУНачисления.СубконтоДт1
	|				КОГДА ВидыСубконтоБУДт2.ВидСубконто = ВидыСубконтоНУДт1.ВидСубконто
	|					ТОГДА БУНачисления.СубконтоДт2
	|				КОГДА ВидыСубконтоБУДт3.ВидСубконто = ВидыСубконтоНУДт1.ВидСубконто
	|					ТОГДА БУНачисления.СубконтоДт3
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВидыСубконтоБУДт1.ВидСубконто = ВидыСубконтоНУДт2.ВидСубконто
	|			ТОГДА БУНачисления.СубконтоДт1
	|		КОГДА ВидыСубконтоБУДт2.ВидСубконто = ВидыСубконтоНУДт2.ВидСубконто
	|			ТОГДА БУНачисления.СубконтоДт2
	|		КОГДА ВидыСубконтоБУДт3.ВидСубконто = ВидыСубконтоНУДт2.ВидСубконто
	|			ТОГДА БУНачисления.СубконтоДт3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВидыСубконтоБУДт1.ВидСубконто = ВидыСубконтоНУДт3.ВидСубконто
	|			ТОГДА БУНачисления.СубконтоДт1
	|		КОГДА ВидыСубконтоБУДт2.ВидСубконто = ВидыСубконтоНУДт3.ВидСубконто
	|			ТОГДА БУНачисления.СубконтоДт2
	|		КОГДА ВидыСубконтоБУДт3.ВидСубконто = ВидыСубконтоНУДт3.ВидСубконто
	|			ТОГДА БУНачисления.СубконтоДт3
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РазмерыОтчисленийВРезервы.СчетУчета = &парамПустойСчет
	|			ТОГДА &парамСчетКтДляРезервов // если не указан конкретный счет, то ставим на 3430
	|		ИНАЧЕ РазмерыОтчисленийВРезервы.СчетУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РазмерыОтчисленийВРезервы.СчетУчета = &парамПустойСчет
	|			ТОГДА &парамСчетКтНУДляРезервов // если не указан конкретный счет, то ставим на 3430Н
	|		ИНАЧЕ РазмерыОтчисленийВРезервы.СчетУчета.СчетНУ
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВидыСубконтоДт.НомерСтроки, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	БУНачисления.ФизЛицо
	|";

    Выборка = Запрос.Выполнить().Выбрать();
    мПромежуточнаяТаблица.Очистить();
    
    СтатьяЗатратСоциальныйНалог 				 = Справочники.СтатьиЗатрат.СоциальныйНалог;
    СтатьяЗатратСоциальныеОтчисления 			 = Справочники.СтатьиЗатрат.СоциальныеОтчисления;
    СтатьяЗатратПрофессиональныеПенсионныеВзносы = Справочники.СтатьиЗатрат.ОбязательныеПрофессиональныеПенсионныеВзносы;
	СтатьяЗатратООСМС							 = Справочники.СтатьиЗатрат.ОтчисленияОСМС;
	СтатьяЗатратПенсионныеВзносыРаботодателя	 = Справочники.СтатьиЗатрат.ОбязательныеПенсионныеВзносыРаботодателя;
   
    Пока Выборка.Следующий() Цикл
    	
    	СуммаРезерва = Выборка.Сумма * Выборка.Размер / 100;
    	
    	// строка самого резерва по вознаграждениям
    	Строка 			= мПромежуточнаяТаблица.Добавить();
    	
    	Строка.СчетДт 	= Выборка.СчетДт;
    	Для Н = 1 По 3 Цикл
    		Строка["СубконтоДт" + Н] = Выборка["СубконтоДт" + Н];
    	КонецЦикла;
    	
    	Строка.СчетКт		= Выборка.СчетКт;
    	Строка.СубконтоКт1  = Выборка.Резерв; 
    	Если ВедетсяУчетПоСотрудникам Тогда
    		Строка.СубконтоКт2  = Выборка.ФизЛицо;
		КонецЕсли;
		
		Если мВедениеУчетаВременныхРазницБалансовымМетодом Тогда
			
			//НУ
			Строка.СчетДтНу 	= Выборка.СчетДтНУ;
	    	Для Н = 1 По 3 Цикл
	    		Строка["СубконтоДтНУ" + Н] = Выборка["СубконтоДтНУ" + Н];
	    	КонецЦикла;

			Строка.СчетКтНУ		= Выборка.СчетКтНУ;
	    	Строка.СубконтоКтНУ1  = Выборка.Резерв; 
	    	Если ВедетсяУчетПоСотрудникам Тогда
	    		Строка.СубконтоКтНУ2  = Выборка.ФизЛицо;
			КонецЕсли;
			
		КонецЕсли;
    
    	Строка.Сумма 		= СуммаРезерва;
    	Строка.ФизЛицо 		= Выборка.ФизЛицо;
		Если мОтображатьСтруктурныеПодразделения Тогда
	 		Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
			Строка.СтруктурноеПодразделениеКт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		КонецЕсли;
   	
    	// резерв под социальный налог
    	Если Выборка.РазмерСоциальногоНалога <> 0 Тогда
    		
    		Строка			= мПромежуточнаяТаблица.Добавить();
    		
    		Строка.СчетДт 	= Выборка.СчетДт;
    		Для Н = 1 По 3 Цикл
    			Если Выборка.НомерСубконтоСтатьиЗатрат = Н Тогда // меняем зарплатную статью затрат на СН
    				Строка["СубконтоДт" + Н] = СтатьяЗатратСоциальныйНалог;
    			Иначе
    				Строка["СубконтоДт" + Н] = Выборка["СубконтоДт" + Н];
    			КонецЕсли;    		
    		КонецЦикла;
    		
    		Строка.СчетКт		= Выборка.СчетКт;
    		Строка.СубконтоКт1 	= Выборка.Резерв;
    		Если ВедетсяУчетПоСотрудникам Тогда
				Строка.СубконтоКт2 	= Выборка.ФизЛицо;
			КонецЕсли;
			
			Если мВедениеУчетаВременныхРазницБалансовымМетодом Тогда
				
				//НУ
				Строка.СчетДтНУ 	= Выборка.СчетДтНУ;
				Для Н = 1 По 3 Цикл
					Строка["СубконтоДтНУ" + Н] = Выборка["СубконтоДтНУ" + Н];
	    		КонецЦикла;
				
				Строка.СчетКтНУ		= Выборка.СчетКтНУ;
	    		Строка.СубконтоКтНУ1 	= Выборка.Резерв;
	    		Если ВедетсяУчетПоСотрудникам Тогда
					Строка.СубконтоКтНУ2 	= Выборка.ФизЛицо;
				КонецЕсли;

			КонецЕсли;
    	
    		Строка.Сумма 		= СуммаРезерва * Выборка.РазмерСоциальногоНалога / 100;
	    	Строка.ФизЛицо 		= Выборка.ФизЛицо;
			Если мОтображатьСтруктурныеПодразделения Тогда
	  			Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
				Строка.СтруктурноеПодразделениеКт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			КонецЕсли;
   	КонецЕсли;

    	// резерв под социальные отчисления
    	Если Выборка.РазмерСоциальныхОтчислений <> 0 Тогда
    		
    		Строка			= мПромежуточнаяТаблица.Добавить();
    		
    		Строка.СчетДт 	= Выборка.СчетДт;
    		Для Н = 1 По 3 Цикл
    			Если Выборка.НомерСубконтоСтатьиЗатрат = Н Тогда // меняем зарплатную статью затрат на СО
    				Строка["СубконтоДт" + Н] = СтатьяЗатратСоциальныеОтчисления;
    			Иначе
    				Строка["СубконтоДт" + Н] = Выборка["СубконтоДт" + Н];
    			КонецЕсли;    		
    		КонецЦикла;
    		
    		Строка.СчетКт		= Выборка.СчетКт;
    		Строка.СубконтоКт1 	= Выборка.Резерв;
    		Если ВедетсяУчетПоСотрудникам Тогда			
    			Строка.СубконтоКт2 	= Выборка.ФизЛицо;
			КонецЕсли;
			
			Если мВедениеУчетаВременныхРазницБалансовымМетодом Тогда
				
				//НУ
				Строка.СчетДтНУ 	= Выборка.СчетДтНУ;
	    		Для Н = 1 По 3 Цикл
					Строка["СубконтоДтНУ" + Н] = Выборка["СубконтоДтНУ" + Н];
	    		КонецЦикла;
				
				Строка.СчетКтНУ		= Выборка.СчетКтНУ;
	    		Строка.СубконтоКтНУ1 	= Выборка.Резерв;
	    		Если ВедетсяУчетПоСотрудникам Тогда			
	    			Строка.СубконтоКтНУ2 	= Выборка.ФизЛицо;
				КонецЕсли;
			КонецЕсли;
	
    		Строка.Сумма 		= СуммаРезерва * Выборка.РазмерСоциальныхОтчислений / 100;
	    	Строка.ФизЛицо 		= Выборка.ФизЛицо;
			Если мОтображатьСтруктурныеПодразделения Тогда
	  			Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
				Строка.СтруктурноеПодразделениеКт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			КонецЕсли;
   	КонецЕсли;
		
		// резерв под ООСМС
		Если Выборка.РазмерОтчисленийОСМС <> 0 Тогда
    		
    		Строка			= мПромежуточнаяТаблица.Добавить();
    		
    		Строка.СчетДт 	= Выборка.СчетДт;
    		Для Н = 1 По 3 Цикл
    			Если Выборка.НомерСубконтоСтатьиЗатрат = Н Тогда // меняем зарплатную статью затрат на ООСМС
    				Строка["СубконтоДт" + Н] = СтатьяЗатратООСМС;
    			Иначе
    				Строка["СубконтоДт" + Н] = Выборка["СубконтоДт" + Н];
    			КонецЕсли;    		
    		КонецЦикла;
    		
    		Строка.СчетКт		= Выборка.СчетКт;
    		Строка.СубконтоКт1 	= Выборка.Резерв;
	    	Строка.СубконтоКт2 	= Выборка.ФизЛицо;
    	
    		Строка.Сумма 		= СуммаРезерва * Выборка.РазмерОтчисленийОСМС / 100;
	    	Строка.ФизЛицо 		= Выборка.ФизЛицо;
			
			Если мВедениеУчетаВременныхРазницБалансовымМетодом Тогда
				
				//НУ
				Строка.СчетДтНУ 	= Выборка.СчетДтНУ;
	    		Для Н = 1 По 3 Цикл
					Строка["СубконтоДтНУ" + Н] = Выборка["СубконтоДтНУ" + Н];
	    		КонецЦикла;
				
				Строка.СчетКтНУ		= Выборка.СчетКтНУ;
	    		Строка.СубконтоКтНУ1 	= Выборка.Резерв;
	    		Если ВедетсяУчетПоСотрудникам Тогда			
	    			Строка.СубконтоКтНУ2 	= Выборка.ФизЛицо;
				КонецЕсли;
			КонецЕсли;
			
			Если мОтображатьСтруктурныеПодразделения Тогда
				Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
				Строка.СтруктурноеПодразделениеКт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			КонецЕсли;

    	КонецЕсли;

    	
     	// резерв под профессиональные пенсионные взносы
    	Если Выборка.РазмерПрофессиональныхПенсионныхВзносов <> 0 Тогда
    		
    		Строка			= мПромежуточнаяТаблица.Добавить();
    		
    		Строка.СчетДт 	= Выборка.СчетДт;
    		Для Н = 1 По 3 Цикл
    			Если Выборка.НомерСубконтоСтатьиЗатрат = Н Тогда // меняем зарплатную статью затрат на ОППВ
    				Строка["СубконтоДт" + Н] = СтатьяЗатратПрофессиональныеПенсионныеВзносы;
    			Иначе
    				Строка["СубконтоДт" + Н] = Выборка["СубконтоДт" + Н];
    			КонецЕсли;    		
    		КонецЦикла;
    		
    		Строка.СчетКт		= Выборка.СчетКт;
	    	Строка.СубконтоКт1 	= Выборка.Резерв;
    		Если ВедетсяУчетПоСотрудникам Тогда			
    			Строка.СубконтоКт2 	= Выборка.ФизЛицо;
			КонецЕсли;
    	
			Если мВедениеУчетаВременныхРазницБалансовымМетодом Тогда
				
				//НУ
				Строка.СчетДтНУ 	= Выборка.СчетДтНУ;
	    		Для Н = 1 По 3 Цикл
					Строка["СубконтоДтНУ" + Н] = Выборка["СубконтоДтНУ" + Н];
	    		КонецЦикла;
				
				Строка.СчетКтНУ		= Выборка.СчетКтНУ;
	    		Строка.СубконтоКтНУ1 	= Выборка.Резерв;
	    		Если ВедетсяУчетПоСотрудникам Тогда			
	    			Строка.СубконтоКтНУ2 	= Выборка.ФизЛицо;
				КонецЕсли;
			КонецЕсли;
			
			Если мОтображатьСтруктурныеПодразделения Тогда
				Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
				Строка.СтруктурноеПодразделениеКт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			КонецЕсли;
			
    		Строка.Сумма 		= СуммаРезерва * Выборка.РазмерПрофессиональныхПенсионныхВзносов / 100;
	    	Строка.ФизЛицо 		= Выборка.ФизЛицо;
    	КонецЕсли;
		
		// резерв под пенсионные взносы работодателя
    	Если Выборка.РазмерПенсионныхВзносовРаботодателя <> 0 Тогда
    		
    		Строка			= мПромежуточнаяТаблица.Добавить();
    		
    		Строка.СчетДт 	= Выборка.СчетДт;
    		Для Н = 1 По 3 Цикл
    			Если Выборка.НомерСубконтоСтатьиЗатрат = Н Тогда // меняем зарплатную статью затрат на ОПВР
    				Строка["СубконтоДт" + Н] = СтатьяЗатратПенсионныеВзносыРаботодателя;
    			Иначе
    				Строка["СубконтоДт" + Н] = Выборка["СубконтоДт" + Н];
    			КонецЕсли;    		
    		КонецЦикла;
    		
    		Строка.СчетКт		= Выборка.СчетКт;
	    	Строка.СубконтоКт1 	= Выборка.Резерв;
    		Если ВедетсяУчетПоСотрудникам Тогда			
    			Строка.СубконтоКт2 	= Выборка.ФизЛицо;
			КонецЕсли;
    	
			Если мВедениеУчетаВременныхРазницБалансовымМетодом Тогда
				
				//НУ
				Строка.СчетДтНУ 	= Выборка.СчетДтНУ;
	    		Для Н = 1 По 3 Цикл
					Строка["СубконтоДтНУ" + Н] = Выборка["СубконтоДтНУ" + Н];
	    		КонецЦикла;
				
				Строка.СчетКтНУ		= Выборка.СчетКтНУ;
	    		Строка.СубконтоКтНУ1 	= Выборка.Резерв;
	    		Если ВедетсяУчетПоСотрудникам Тогда			
	    			Строка.СубконтоКтНУ2 	= Выборка.ФизЛицо;
				КонецЕсли;
			КонецЕсли;
			
			Если мОтображатьСтруктурныеПодразделения Тогда
				Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
				Строка.СтруктурноеПодразделениеКт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			КонецЕсли;
			
    		Строка.Сумма 		= СуммаРезерва * Выборка.РазмерПенсионныхВзносовРаботодателя / 100;
	    	Строка.ФизЛицо 		= Выборка.ФизЛицо;
		КонецЕсли;
		
    КонецЦикла;
	
	// переносим в табличную часть документа
	ПеренестиОтражениеВУчетеИзПромежуточнойТаблицы();
	
	#КонецОбласти
	
	#Область ОтражениеПогашенияЗаймов
    
	//////////////////////////////////////////////////////////////////////////////////////////////////
	// отражение погашения займов
	ПогашениеЗаймовТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Погашение.ФизЛицо,"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)")+" КАК СтруктурноеПодразделение,
	|	СУММА(Погашение.ОсновнойДолг) КАК ОсновнойДолг
	|ИЗ
	|	РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК Погашение";
	
	Если МенеджерВТ <> Неопределено Тогда
	
	ПогашениеЗаймовТекст = ПогашениеЗаймовТекст + "
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛиц КАК СписокФизЛиц
	|		ПО Погашение.ФизЛицо = СписокФизЛиц.ФизЛицо";
	
	КонецЕсли;
	Если мОтображатьСтруктурныеПодразделения Тогда
		ПогашениеЗаймовТекст = ПогашениеЗаймовТекст+"
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамПериодРегистрации,Организация=&парамГоловнаяОрганизация И Сотрудник.ВидЗанятости<>ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК УчетВзаиморасчетовПоСП
		|			ПО Погашение.ФизЛицо = УчетВзаиморасчетовПоСП.Сотрудник.ФизЛицо
		|				И НЕ (УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<&парамПериодРегистрации И УчетВзаиморасчетовПоСП.Сотрудник.ДатаУвольнения<>ДАТАВРЕМЯ(1,1,1,0,0,0))";
	КонецЕсли;
	
	ПогашениеЗаймовТекст = ПогашениеЗаймовТекст + "
	|
	|ГДЕ 
	|	Погашение.Период > &парамНачалоМесяца И
	|	Погашение.Период <= &парамКонецМесяца И
	|	Погашение.Организация = &парамОрганизация И
	|	Погашение.УдержаноИзЗарплаты И
	|	Погашение.ВидДвижения = &парамВидДвиженияРасход И
	|	Погашение.ОсновнойДолг <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Погашение.ФизЛицо,"+?(мОтображатьСтруктурныеПодразделения,"
	|		ЕСТЬNULL(УчетВзаиморасчетовПоСП.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))","ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)");

	Запрос.Текст = ПогашениеЗаймовТекст;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Строка = ОтражениеВУчете.Добавить();
		Строка.ФизЛицо 		= Выборка.Физлицо;
		Строка.СчетДт 		= ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоОплатеТруда;
		Если ВедетсяУчетПоСотрудникам Тогда
			Строка.СубконтоДт1 	= Выборка.Физлицо;
		КонецЕсли;
		
		Строка.СчетДтНУ 	= ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", Строка.СчетДт), , , КонецМесяца(ПериодРегистрации));			
		ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетДт, Строка.СчетДтНУ, 1, Строка.СубконтоДт1, "СубконтоДтНУ");
			
		Строка.СчетКт 		= ПланыСчетов.Типовой.КраткосрочнаяЗадолженностьПоПредоставленнымРаботникамЗаймам;
		Если ВедетсяУчетПоСотрудникам Тогда
			Строка.СубконтоКт1 	= Выборка.Физлицо;
		КонецЕсли;
		
		Строка.СчетКтНУ 	= ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", Строка.СчетКт), , , КонецМесяца(ПериодРегистрации));;			
		ПроцедурыБухгалтерскогоУчета.ЗаменитьСубконтоНУВСтроке(Строка, Строка.СчетКт, Строка.СчетКтНУ, 1, Строка.СубконтоКт1, "СубконтоКтНУ");
			
		Строка.Сумма		= Выборка.ОсновнойДолг;
		
		Если мОтображатьСтруктурныеПодразделения Тогда
			Строка.СтруктурноеПодразделениеДт = Выборка.СтруктурноеПодразделение;
			Строка.СтруктурноеПодразделениеКт = Выборка.СтруктурноеПодразделение;
		КонецЕсли;
	КонецЦикла;
	
	#КонецОбласти
	
	// удалим временные наборы записей
	НаборЗаписейОсновной.Очистить();
	НаборЗаписейОсновной.Записать();
	НаборЗаписейДополнительный.Очистить();
	НаборЗаписейДополнительный.Записать();
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры  // АвтозаполнениеПроводок
 
// Процедура обрабатывает результат запроса по отражению начислений
//
Процедура ОбработатьДанныеУчетаНачислений(РезультатЗапроса, НаборЗаписей, ЭтоОсновныеНачисления)

	// пустая ссылка на счет - для проверок способов отражения в бухучете
	ПустойСчет = ПланыСчетов.Типовой.ПустаяСсылка();

	ТаблицаДляРаспределения = Новый ТаблицаЗначений;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ТаблицаДляРаспределения.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения);
	КонецЦикла;
	
	ДанныеУчета = РезультатЗапроса.Выбрать();
	
	// обработаем данные
	ТекущийРегистратор = Неопределено;
	ТекущийНомерСтрокиРегистра = 0;
	ТекущийРезультат = 0;
	
	Пока ДанныеУчета.Следующий() Цикл
		
		Если ТекущийРегистратор <> ДанныеУчета.Регистратор
				Или ТекущийНомерСтрокиРегистра <> ДанныеУчета.НомерСтрокиРегистра Тогда
			
			// распределяем Результат закончившейся строки начислений
			Если ТаблицаДляРаспределения.Количество() > 0 Тогда
				МассивСумм = ОбщегоНазначения.РаспределитьПропорционально(ТекущийРезультат, ТаблицаДляРаспределения.ВыгрузитьКолонку("ДоляСпособаОтражения"));
				Если МассивСумм <> Неопределено Тогда
					ТаблицаДляРаспределения.ЗагрузитьКолонку(МассивСумм, "Результат");
				КонецЕсли;
				Для Каждого СтрокаТЗ Из ТаблицаДляРаспределения Цикл
					СоздатьСтрокуДвижений(СтрокаТЗ, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
				КонецЦикла;
			КонецЕсли;
			
			ТекущийРегистратор 			= ДанныеУчета.Регистратор;
			ТекущийНомерСтрокиРегистра 	= ДанныеУчета.НомерСтрокиРегистра;
			ТекущийРезультат 			= ДанныеУчета.Результат;
			ТаблицаДляРаспределения.Очистить();
		КонецЕсли;
	
		// если необходимо распределить результат одной строки начислений по разным способам отражения,
		// то помещаем данные таких строк во вспомогательную таблицу, чтобы позже выполнить распределение
		Если ДанныеУчета.НеобходимостьРаспределения Тогда
			СтрокаТЗ = ТаблицаДляРаспределения.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЗ, ДанныеУчета);
		Иначе
			// сразу переносим в набор записей
			СоздатьСтрокуДвижений(ДанныеУчета, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
		КонецЕсли;
		
	КонецЦикла;
	
	// распределим результат последней строки начислений
	Если ТаблицаДляРаспределения.Количество() > 0 Тогда
		МассивСумм = ОбщегоНазначения.РаспределитьПропорционально(ТекущийРезультат, ТаблицаДляРаспределения.ВыгрузитьКолонку("ДоляСпособаОтражения"));
		Если МассивСумм <> Неопределено Тогда
			ТаблицаДляРаспределения.ЗагрузитьКолонку(МассивСумм, "Результат");
		КонецЕсли;
		Для Каждого СтрокаТЗ Из ТаблицаДляРаспределения Цикл
			СоздатьСтрокуДвижений(СтрокаТЗ, НаборЗаписей, ЭтоОсновныеНачисления, ПустойСчет);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры // ОбработатьДанныеУчетаНачислений()

Процедура Автозаполнение() Экспорт
	Если НЕ ЗначениеЗаполнено(мВедениеУчетаВременныхРазницБалансовымМетодом) Тогда
		мВедениеУчетаВременныхРазницБалансовымМетодом = ПроцедурыНалоговогоУчета.ПолучитьПризнакВеденияУчетаВременныхРазницБалансовымМетодом(Организация, Дата, мУчетнаяПолитикаПоБухгалтерскомуУчету);
	КонецЕсли;
	
	НачатьТранзакцию();
	
	НаборЗаписейОсновной = РегистрыРасчета.БУОсновныеНачисления.СоздатьНаборЗаписей();
	НаборЗаписейОсновной.Отбор.Регистратор.Значение = Ссылка;
	
	НаборЗаписейДополнительный = РегистрыРасчета.БУДополнительныеНачисления.СоздатьНаборЗаписей();
	НаборЗаписейДополнительный.Отбор.Регистратор.Значение = Ссылка;
	
	// сначала очищаем соответствующие движения
	НаборЗаписейОсновной.Записать();
	НаборЗаписейДополнительный.Записать();
    	
	// составим список физлиц, данные по которым необходимо отразить в документе
	МенеджерВТ = ПодготовитьМенеджерВременныхТаблицСоСпискомФизЛиц();
	
	РезультатЗапроса = ПолучитьДанныеУчета(Истина, МенеджерВТ);
	ОбработатьДанныеУчетаНачислений(РезультатЗапроса, НаборЗаписейОсновной, Истина);
	
	// при записи данных учета не затираем уже введенные движения
	НаборЗаписейОсновной.Записать(Ложь);
	
	НаборЗаписейОсновной.Прочитать();
	ОсновныеНачисления.Загрузить(НаборЗаписейОсновной.Выгрузить());
	
	РезультатЗапроса = ПолучитьДанныеУчета(Ложь, МенеджерВТ);
	ОбработатьДанныеУчетаНачислений(РезультатЗапроса, НаборЗаписейДополнительный, Ложь);
	
	// при записи данных учета не затираем уже введенные движения
	НаборЗаписейДополнительный.Записать(Ложь);
	
	НаборЗаписейДополнительный.Прочитать();
	ДополнительныеНачисления.Загрузить(НаборЗаписейДополнительный.Выгрузить());

	АвтозаполнениеПроводок(МенеджерВТ);
	
	НаборЗаписейОсновной.Очистить();
	НаборЗаписейОсновной.Записать();
	НаборЗаписейДополнительный.Очистить();
	НаборЗаписейДополнительный.Записать();
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры //  Автозаполнение

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция СформироватьЗапросПоДоходам()
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	""Основные"" КАК ТипСтроки,
	|	Основные.НомерСтроки,
	|	Основные.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	Основные.ВидРасчета,
	|	Основные.Сотрудник,
	|	Основные.ФизЛицо,
	|	Основные.СчетДт,
	|	Основные.СчетКт,
	|	Основные.СубконтоДт1,
	|	Основные.СубконтоДт2,
	|	Основные.СубконтоДт3,
	|	Основные.СубконтоКт1,
	|	Основные.СубконтоКт2,
	|	Основные.СубконтоКт3,
	// - НУ - 
	|	Основные.СчетДтНУ,
	|	Основные.СчетКтНУ,
	|	Основные.СубконтоДтНУ1,
	|	Основные.СубконтоДтНУ2,
	|	Основные.СубконтоДтНУ3,
	|	Основные.СубконтоКтНУ1,
	|	Основные.СубконтоКтНУ2,
	|	Основные.СубконтоКтНУ3,
	// - НУ -
	|	Основные.Результат,
	|	&парамОрганизация КАК ОбособленноеПодразделение,
	|	Основные.ПериодДействияНачало,
	|	Основные.ПериодДействияКонец,
	|	ВЫБОР
	|		КОГДА Основные.Сотрудник.Организация = &парамГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ОсновныеНачисления КАК Основные
	|
	|ГДЕ
	|	Основные.Ссылка = &парамРегистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Дополнительные"",
	|	Дополнительные.НомерСтроки,
	|	Дополнительные.ВидРасчета.СпособРасчета,
	|	Дополнительные.ВидРасчета,
	|	Дополнительные.Сотрудник,
	|	Дополнительные.ФизЛицо,
	|	Дополнительные.СчетДт,
	|	Дополнительные.СчетКт,
	|	Дополнительные.СубконтоДт1,
	|	Дополнительные.СубконтоДт2,
	|	Дополнительные.СубконтоДт3,
	|	Дополнительные.СубконтоКт1,
	|	Дополнительные.СубконтоКт2,
	|	Дополнительные.СубконтоКт3,
	// - НУ - 
	|	Дополнительные.СчетДтНУ,
	|	Дополнительные.СчетКтНУ,
	|	Дополнительные.СубконтоДтНУ1,
	|	Дополнительные.СубконтоДтНУ2,
	|	Дополнительные.СубконтоДтНУ3,
	|	Дополнительные.СубконтоКтНУ1,
	|	Дополнительные.СубконтоКтНУ2,
	|	Дополнительные.СубконтоКтНУ3,
	// - НУ -
	|	Дополнительные.Результат,
	|	&парамОрганизация КАК ОбособленноеПодразделение,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА Дополнительные.Сотрудник.Организация = &парамГоловнаяОрганизация
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ДополнительныеНачисления КАК Дополнительные
	|
	|ГДЕ
	|	Дополнительные.Ссылка = &парамРегистратор");
	
	Запрос.УстановитьПараметр("парамРегистратор", Ссылка);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	
	Возврат Запрос.Выполнить();
КонецФункции

Функция СформироватьЗапросПоОтражениюВУчете()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.НомерСтроки,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ФизЛицо,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ФизЛицо.Наименование КАК ФИОРаботника,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт.Наименование КАК НаименованиеСчетДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1,
	|	ДтВидСубконто1.ВидСубконто КАК ДтВидСубконто1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2,
	|	ДтВидСубконто2.ВидСубконто КАК ДтВидСубконто2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3,
	|	ДтВидСубконто3.ВидСубконто КАК ДтВидСубконто3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1,
	|	ДтВидСубконтоНУ1.ВидСубконто КАК ДтВидСубконтоНУ1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2,
	|	ДтВидСубконтоНУ2.ВидСубконто КАК ДтВидСубконтоНУ2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3,
	|	ДтВидСубконтоНУ3.ВидСубконто КАК ДтВидСубконтоНУ3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1,
	|	КтВидСубконто1.ВидСубконто КАК КтВидСубконто1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт2,
	|	КтВидСубконто2.ВидСубконто КАК КтВидСубконто2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт3,
	|	КтВидСубконто3.ВидСубконто КАК КтВидСубконто3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ1,
	|	КтВидСубконтоНУ1.ВидСубконто КАК КтВидСубконтоНУ1,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ2,
	|	КтВидСубконтоНУ2.ВидСубконто КАК КтВидСубконтоНУ2,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ3,
	|	КтВидСубконтоНУ3.ВидСубконто КАК КтВидСубконтоНУ3,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма,
	|	ВЫБОР КОГДА	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт В ИЕРАРХИИ (&СчетаУчетаОС) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК СчетДтСчетУчетаОС,
	|	ВЫБОР КОГДА	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт В ИЕРАРХИИ (&СчетаУчетаОС) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК СчетКтСчетУчетаОС,
	|	ВЫБОР
	|		КОГДА &парамВестиУчетПоСотрудникам
	|			ТОГДА ВЫБОР
	|				КОГДА ДтВидСубконто1.ВидСубконто = &парамРаботникиОрганизаций
	|						ИЛИ ДтВидСубконто2.ВидСубконто = &парамРаботникиОрганизаций
	|						ИЛИ ДтВидСубконто3.ВидСубконто = &парамРаботникиОрганизаций
	|						ИЛИ КтВидСубконто1.ВидСубконто = &парамРаботникиОрганизаций
	|						ИЛИ КтВидСубконто2.ВидСубконто = &парамРаботникиОрганизаций
	|						ИЛИ КтВидСубконто3.ВидСубконто = &парамРаботникиОрганизаций
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВключатьФИОРаботникаВСодержание,
	|	ВЫБОР
	|		КОГДА РанееПроведенныеРаботники.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УжеРанееОтражен,
	|	ВЫБОР
	|		КОГДА ВидСубконтоСчетаДт1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоТиповые.Резервы)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|		ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СтруктурноеПодразделениеДт
	|	КОНЕЦ КАК СтруктурноеПодразделениеДт,
//	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СтруктурноеПодразделениеДт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СтруктурноеПодразделениеКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ВидРасчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.НомерСтроки КАК НомерСтроки,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ФизЛицо КАК ФизЛицо,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт КАК СчетДт,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ КАК СчетДтНУ,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт1 КАК СубконтоДт1,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт2 КАК СубконтоДт2,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДт3 КАК СубконтоДт3,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ1 КАК СубконтоДтНУ1,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ2 КАК СубконтоДтНУ2,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоДтНУ3 КАК СубконтоДтНУ3,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт КАК СчетКт,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ КАК СчетКтНУ,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1 КАК СубконтоКт1,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт2 КАК СубконтоКт2,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт3 КАК СубконтоКт3,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ1 КАК СубконтоКтНУ1,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ2 КАК СубконтоКтНУ2,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКтНУ3 КАК СубконтоКтНУ3,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма КАК Сумма,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СтруктурноеПодразделениеДт КАК СтруктурноеПодразделениеДт,
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СтруктурноеПодразделениеКт КАК СтруктурноеПодразделениеКт,
	|		ВЫБОР
	|			КОГДА СубконтоРезервов.НомерСубконто = 1
	|				ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт1
	|			КОГДА СубконтоРезервов.НомерСубконто = 2
	|				ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт2
	|			КОГДА СубконтоРезервов.НомерСубконто = 3
	|				ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СубконтоКт3
	|			ИНАЧЕ NULL
	|		КОНЕЦ КАК ВидРасчета
	|	ИЗ
	|		Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТиповойВидыСубконто.Ссылка КАК Счет,
	|				ТиповойВидыСубконто.НомерСтроки КАК НомерСубконто
	|			ИЗ
	|				ПланСчетов.Типовой.ВидыСубконто КАК ТиповойВидыСубконто
	|			ГДЕ
	|				ТиповойВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоТиповые.Резервы)) КАК СубконтоРезервов
	|			ПО ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт = СубконтоРезервов.Счет
	|	ГДЕ
	|		ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка = &парамРегистратор
	|		И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма <> 0) КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ВидСубконтоСчетаДт1
	|		ПО (ВидСубконтоСчетаДт1.НомерСтроки = 1)
	|			И ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт = ВидСубконтоСчетаДт1.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ДтВидСубконто1
	|		ПО (ДтВидСубконто1.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт)
	|			И (ДтВидСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ДтВидСубконто2
	|		ПО (ДтВидСубконто2.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт)
	|			И (ДтВидСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК ДтВидСубконто3
	|		ПО (ДтВидСубконто3.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДт)
	|			И (ДтВидСубконто3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК КтВидСубконто1
	|		ПО (КтВидСубконто1.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт)
	|			И (КтВидСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК КтВидСубконто2
	|		ПО (КтВидСубконто2.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт)
	|			И (КтВидСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Типовой.ВидыСубконто КАК КтВидСубконто3
	|		ПО (КтВидСубконто3.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт)
	|			И (КтВидСубконто3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ДтВидСубконтоНУ1
	|		ПО (ДтВидСубконтоНУ1.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ)
	|			И (ДтВидСубконтоНУ1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ДтВидСубконтоНУ2
	|		ПО (ДтВидСубконтоНУ2.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ)
	|			И (ДтВидСубконтоНУ2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК ДтВидСубконтоНУ3
	|		ПО (ДтВидСубконтоНУ3.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетДтНУ)
	|			И (ДтВидСубконтоНУ3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК КтВидСубконтоНУ1
	|		ПО (КтВидСубконтоНУ1.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ)
	|			И (КтВидСубконтоНУ1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК КтВидСубконтоНУ2
	|		ПО (КтВидСубконтоНУ2.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ)
	|			И (КтВидСубконтоНУ2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Налоговый.ВидыСубконто КАК КтВидСубконтоНУ3
	|		ПО (КтВидСубконтоНУ3.Ссылка = ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКтНУ)
	|			И (КтВидСубконтоНУ3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ОтражениеЗарплатыВРеглУчете.ФизЛицо КАК ФизЛицо
	|		ИЗ
	|			Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчете
	|		ГДЕ
	|			ОтражениеЗарплатыВРеглУчете.Ссылка.Организация = &парамОрганизация
	|			И ОтражениеЗарплатыВРеглУчете.Ссылка.Проведен
	|			И ОтражениеЗарплатыВРеглУчете.Ссылка.ПериодРегистрации = &парамПериодРегистрации
	|			И ОтражениеЗарплатыВРеглУчете.Ссылка <> &парамРегистратор) КАК РанееПроведенныеРаботники
	|		ПО ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.ФизЛицо = РанееПроведенныеРаботники.ФизЛицо";
	
	СчетаУчетаОС = Новый СписокЗначений();
	СчетаУчетаОС.Добавить(ПланыСчетов.Типовой.ДолгосрочныеАктивыДляПродажи_);
	СчетаУчетаОС.Добавить(ПланыСчетов.Типовой.ДолгосрочныеАктивыДляПродажи);
	СчетаУчетаОС.Добавить(ПланыСчетов.Типовой.ГруппаНаВыбытиеДляПродажи);
	
	СчетаУчетаОС.Добавить(ПланыСчетов.Типовой.ИнвестицииВНедвижимость_);
	СчетаУчетаОС.Добавить(ПланыСчетов.Типовой.ИнвестицииВНедвижимость);
	СчетаУчетаОС.Добавить(ПланыСчетов.Типовой.АмортизацияИнвестицийВНедвижимость);
	СчетаУчетаОС.Добавить(ПланыСчетов.Типовой.УбытокОтОбесцененияИнвестицийВНедвижимость);
	СчетаУчетаОС.Добавить(ПланыСчетов.Типовой.ОсновныеСредства_);
	СчетаУчетаОС.Добавить(ПланыСчетов.Типовой.ОсновныеСредства);
	СчетаУчетаОС.Добавить(ПланыСчетов.Типовой.АмортизацияОсновныхСредств);
	СчетаУчетаОС.Добавить(ПланыСчетов.Типовой.УбытокОтОбесцененияОсновныхСредств);
	
	Запрос.УстановитьПараметр("СчетаУчетаОС", СчетаУчетаОС);
	
	ВедетсяУчетПоСотрудникам = ОбщегоНазначения.ПолучитьПризнакВеденияУчетаПоСотрудникам();
	Запрос.УстановитьПараметр("парамРегистратор", Ссылка);
	Запрос.УстановитьПараметр("парамРаботникиОрганизаций", ПланыВидовХарактеристик.ВидыСубконтоТиповые.РаботникиОрганизаций);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамВестиУчетПоСотрудникам", ВедетсяУчетПоСотрудникам);

	Возврат Запрос.Выполнить();
                                                             
КонецФункции

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении,
//	Заголовок				- Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(СтруктураШапкиДокумента.Организация) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не задана организация!", Отказ, Заголовок);
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(СтруктураШапкиДокумента.ПериодРегистрации) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не задан период за который выполняется отражение начислений в бухгалтерском учете!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения строки отражения документа.
//
Процедура ПроверитьЗаполнениеСтрокиОтраженияВУчете(ВыборкаПоДоходам, Отказ, Заголовок = "", СписокСчетовРезервов, ОрганизацияПлательщикНалогаНаПрибыль)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоДоходам.НомерСтроки) + """ табл. части ""Отражение в учете"": ";
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоДоходам.СчетДт) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "Не указан счет дебета!", Отказ, Заголовок);
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВыборкаПоДоходам.СчетКт) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "Не указан счет кредита!", Отказ, Заголовок);
	КонецЕсли;
	
	// проверим правильность отнесения данных сотрудника
	Для ДтКт = 1 По 2 Цикл
		Если ДтКт = 1 Тогда
			СтрокаДтКт = "Дт";
		Иначе
			СтрокаДтКт = "Кт";			
		КонецЕсли;
		Для СчСк = 1 По 3 Цикл
			Если ВыборкаПоДоходам[СтрокаДтКт+"ВидСубконто"+СчСк] = мВидСубконтоРаботникиОрганизаций Тогда
				Если НЕ ВыборкаПоДоходам["Счет" + СтрокаДтКт + "СчетУчетаОС"]
					 И ЗначениеЗаполнено(ВыборкаПоДоходам.ФизЛицо) 
	//			Если ЗначениеЗаполнено(ВыборкаПоДоходам["Субконто"+СтрокаДтКт+СчСк]) И ЗначениеЗаполнено(ВыборкаПоДоходам.ФизЛицо) 
					 И ВыборкаПоДоходам.ФизЛицо <> ВыборкаПоДоходам["Субконто"+СтрокаДтКт+СчСк] Тогда
//					ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "данные не соответствуют физлицу!", Отказ, Заголовок);
					ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "данные аналитики на счете " + СтрокаДтКт + " не соответствуют физлицу!", Отказ, Заголовок);
				КонецЕсли
			КонецЕсли;
		КонецЦикла;
		
		// проверим, влияет ли счет БУ на налогооблагаемый доход, тогда потребуем заполнение счета НУ
		СчетБУ = ВыборкаПоДоходам["Счет" + СтрокаДтКт];
		КорСчетБУ = ?(ДтКт = 1, ВыборкаПоДоходам["СчетКт"], ВыборкаПоДоходам["СчетДт"]);
		СчетВлияетНаНалогооблагаемыйДоход = мСоответствиеСчетаБУВлияющиеНаНалогооблагаемыйДоход[СчетБУ];
		Если СчетВлияетНаНалогооблагаемыйДоход = Неопределено Тогда
			СчетВлияетНаНалогооблагаемыйДоход = ПроцедурыНалоговогоУчета.ВлияетНаНалогооблагаемыйДоход(СчетБУ);
			мСоответствиеСчетаБУВлияющиеНаНалогооблагаемыйДоход.Вставить(СчетБУ, СчетВлияетНаНалогооблагаемыйДоход);
		КонецЕсли;
		
		Если (ОрганизацияПлательщикНалогаНаПрибыль И СчетВлияетНаНалогооблагаемыйДоход) Или мВедениеУчетаВременныхРазницБалансовымМетодом Тогда
			// исключим из проверки проводки по резервам отпусков, если не ведется учета временных разниц балансовым методом
			Если мВедениеУчетаВременныхРазницБалансовымМетодом Или СписокСчетовРезервов.НайтиПоЗначению(КорСчетБУ) = Неопределено Тогда
				Если Не ЗначениеЗаполнено(ВыборкаПоДоходам["Счет"+СтрокаДтКт+"НУ"]) Тогда
					ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "Не указан счет " + ?(ДтКт = 1, "дебета", "кредита") + " налогового учета!", ?(СчетВлияетНаНалогооблагаемыйДоход, Отказ, Истина), Заголовок);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;

	Если ВыборкаПоДоходам.УжеРанееОтражен Тогда
		Если ЗначениеЗаполнено(ВыборкаПоДоходам.ФизЛицо) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "по сотруднику уже формировали проводки по заработной плате за месяц!", Истина, Заголовок);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеСтрокиОтраженияВУчете()

Процедура ПроверитьЗаполнениеСтрокиДохода(ВыборкаПоДоходам, Отказ, Заголовок = "")
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоДоходам.НомерСтроки) +
	""" табл. части "+ВыборкаПоДоходам.ТипСтроки+": ";

	// Организация сотрудника должна совпадать с организацией документа
	Если ВыборкаПоДоходам.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "организация документа не соответствует организации, указанной в карточке сотрудника!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоДоходам.ВидРасчета.Пустая() Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "Не указан вид расчета!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ВыборкаПоДоходам.Сотрудник.ФизЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "Не указан работник!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоДоходам.СчетДт) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "Не указан счет дебета!", Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоДоходам.СчетКт) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "Не указан счет кредита!", Отказ, Заголовок);
	КонецЕсли;

	Если ВыборкаПоДоходам.ТипСтроки = "Основные" Тогда
		Если ВыборкаПоДоходам.ПериодДействияНачало = '00010101' Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "Не указана дата начала действия расчета!", Отказ, Заголовок);
		КонецЕсли;
		
		Если ВыборкаПоДоходам.ПериодДействияКонец = '00010101' Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "Не указана дата окончания действия расчета!", Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Добавляет движение в наборы записей БУОсновныеНачисления и БУДополнительныеНачисления
// Параметры:
//	ВыборкаПоДоходам - спозиционированнная выборка по данным документа
//	НаборЗаписейОсновные - набор записей типа БУОсновныеНачисления
//	НаборЗаписейДополнительные - набор записей типа БУДополнительныеНачисления
//
Процедура ДобавитьСтрокуВДвиженияПоДоходам(ВыборкаПоДоходам, НаборЗаписейОсновные, НаборЗаписейДополнительные)
	
	Если ВыборкаПоДоходам.ТипСтроки = "Основные" Тогда
		// ОсновныеНачисленияРаботниковОрганизации
		Строка = НаборЗаписейОсновные.Добавить();
		
		// свойства
		Строка.ПериодДействияНачало = ВыборкаПоДоходам.ПериодДействияНачало;
		Строка.ПериодДействияКонец  = ВыборкаПоДоходам.ПериодДействияКонец;
		
	Иначе
		
		Строка = НаборЗаписейДополнительные.Добавить();
		
	КонецЕсли;
	
	// свойства
	Строка.ВидРасчета = ВыборкаПоДоходам.ВидРасчета;
	Строка.ПериодРегистрации = ПериодРегистрации;
	
	// Измерения
	Строка.ФизЛицо = ВыборкаПоДоходам.ФизЛицо;
	Строка.Сотрудник = ВыборкаПоДоходам.Сотрудник;
	Строка.Организация = Организация;
	
	// ресурсы
	Строка.Результат = ВыборкаПоДоходам.Результат;
	
	// реквизиты
	Строка.СчетДт = ВыборкаПоДоходам.СчетДт;
	Строка.СчетКт = ВыборкаПоДоходам.СчетКт;
	Строка.СубконтоДт1 = ВыборкаПоДоходам.СубконтоДт1;
	Строка.СубконтоДт2 = ВыборкаПоДоходам.СубконтоДт2;
	Строка.СубконтоДт3 = ВыборкаПоДоходам.СубконтоДт3;
	Строка.СубконтоКт1 = ВыборкаПоДоходам.СубконтоКт1;
	Строка.СубконтоКт2 = ВыборкаПоДоходам.СубконтоКт2;
	Строка.СубконтоКт3 = ВыборкаПоДоходам.СубконтоКт3;
	
	// - НУ -
	Строка.СчетДтНУ = ВыборкаПоДоходам.СчетДтНУ;
	Строка.СчетКтНУ = ВыборкаПоДоходам.СчетКтНУ;
	Строка.СубконтоДтНУ1 = ВыборкаПоДоходам.СубконтоДтНУ1;
	Строка.СубконтоДтНУ2 = ВыборкаПоДоходам.СубконтоДтНУ2;
	Строка.СубконтоДтНУ3 = ВыборкаПоДоходам.СубконтоДтНУ3;
	Строка.СубконтоКтНУ1 = ВыборкаПоДоходам.СубконтоКтНУ1;
	Строка.СубконтоКтНУ2 = ВыборкаПоДоходам.СубконтоКтНУ2;
	Строка.СубконтоКтНУ3 = ВыборкаПоДоходам.СубконтоКтНУ3;
	// - НУ -
	
	Строка.ОбособленноеПодразделение = ВыборкаПоДоходам.ОбособленноеПодразделение;
	
КонецПроцедуры  // ДобавитьСтрокуВДвиженияПоДоходам

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);


	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект) Тогда
		Возврат
	КонецЕсли;

	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	// определим дату проводок
	Если СтруктураШапкиДокумента.Дата >= СтруктураШапкиДокумента.ПериодРегистрации
			И СтруктураШапкиДокумента.Дата <= КонецМесяца(СтруктураШапкиДокумента.ПериодРегистрации) Тогда
		ДатаПроводки = СтруктураШапкиДокумента.Дата;
	Иначе
		ДатаПроводки = КонецМесяца(СтруктураШапкиДокумента.ПериодРегистрации);
	КонецЕсли;
	СтруктураШапкиДокумента.Вставить("ДатаПроводки", ДатаПроводки);

	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);

	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	ВыборкаПоДоходам = СформироватьЗапросПоДоходам().Выбрать();
	
	Пока ВыборкаПоДоходам.Следующий() Цикл
		ПроверитьЗаполнениеСтрокиДохода(ВыборкаПоДоходам, Отказ, Заголовок);
		Если Не Отказ Тогда
			ДобавитьСтрокуВДвиженияПоДоходам(ВыборкаПоДоходам, Движения.БУОсновныеНачисления, Движения.БУДополнительныеНачисления);
		КонецЕсли;
	КонецЦикла;

	ОрганизацияПлательщикНалогаНаПрибыль = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаНалогаНаПрибыль(Организация, Дата, Неопределено);
	ВедетсяУчетПоСотрудникам = ОбщегоНазначения.ПолучитьПризнакВеденияУчетаПоСотрудникам();
	
	Если НЕ ЗначениеЗаполнено(мВедениеУчетаВременныхРазницБалансовымМетодом) Тогда
		мВедениеУчетаВременныхРазницБалансовымМетодом = ПроцедурыНалоговогоУчета.ПолучитьПризнакВеденияУчетаВременныхРазницБалансовымМетодом(Организация, Дата, мУчетнаяПолитикаПоБухгалтерскомуУчету);
	КонецЕсли;
	ВыборкаПоОтражениюВУчете = СформироватьЗапросПоОтражениюВУчете().Выбрать();
	
    // получим список счетов учета резервов по вознаграждениям работникам, 
    // чтобы потом их не учитывать при проверке заполненности счетов НУ
    МассивСчетовРезервов = Новый Массив;
    МассивСчетовРезервов.Добавить(ПланыСчетов.Типовой.КраткосрочныеОценочныеОбязательстваПоВознаграждениямРаботникам);
    МассивСчетовРезервов.Добавить(ПланыСчетов.Типовой.ДолгосрочныеОценочныеОбязательстваПоВознаграждениямРаботникам);
    СписокСчетовРезервов = ПроцедурыБухгалтерскогоУчета.ЗаполнитьСписокВыбораСчетов(МассивСчетовРезервов);
    
	Пока ВыборкаПоОтражениюВУчете.Следующий() Цикл

		ПроверитьЗаполнениеСтрокиОтраженияВУчете(ВыборкаПоОтражениюВУчете, Отказ, Заголовок, СписокСчетовРезервов, ОрганизацияПлательщикНалогаНаПрибыль);
		
	КонецЦикла;
	
	ВыборкаПоОтражениюВУчете.Сбросить();
	
	// добавляем движения по отражению в учете
	Если Не Отказ Тогда
		
		ТаблицаПоБУ = Новый ТаблицаЗначений;
		ТаблицаПоБУ.Колонки.Добавить("НомерСтроки");
		ТаблицаПоБУ.Колонки.Добавить("ВидРасчета");
		ТаблицаПоБУ.Колонки.Добавить("ВидРасчетаНаименование");
		ТаблицаПоБУ.Колонки.Добавить("СчетДт");			
		ТаблицаПоБУ.Колонки.Добавить("СубконтоДт1");
		ТаблицаПоБУ.Колонки.Добавить("ДтВидСубконто1");
		ТаблицаПоБУ.Колонки.Добавить("СубконтоДт2");
		ТаблицаПоБУ.Колонки.Добавить("ДтВидСубконто2");
		ТаблицаПоБУ.Колонки.Добавить("СубконтоДт3");
		ТаблицаПоБУ.Колонки.Добавить("ДтВидСубконто3");       
		ТаблицаПоБУ.Колонки.Добавить("СчетКт");
		ТаблицаПоБУ.Колонки.Добавить("СубконтоКт1");
		ТаблицаПоБУ.Колонки.Добавить("КтВидСубконто1");
		ТаблицаПоБУ.Колонки.Добавить("СубконтоКт2");
		ТаблицаПоБУ.Колонки.Добавить("КтВидСубконто2");
		ТаблицаПоБУ.Колонки.Добавить("СубконтоКт3");
		ТаблицаПоБУ.Колонки.Добавить("КтВидСубконто3");
		ТаблицаПоБУ.Колонки.Добавить("Сумма");
		ТаблицаПоБУ.Колонки.Добавить("ВключатьФИОРаботникаВСодержание");
		ТаблицаПоБУ.Колонки.Добавить("ВключатьВидРасчетаВСодержание");
		ТаблицаПоБУ.Колонки.Добавить("СтруктурноеПодразделениеДт");
		ТаблицаПоБУ.Колонки.Добавить("СтруктурноеПодразделениеКт");
		Если ВедетсяУчетПоСотрудникам Тогда
			ТаблицаПоБУ.Колонки.Добавить("ФизЛицо");
			ТаблицаПоБУ.Колонки.Добавить("ФИОРаботника");
		КонецЕсли;
															   
		ТаблицаПоНУ = Новый ТаблицаЗначений;
		ТаблицаПоНУ.Колонки.Добавить("НомерСтроки");
		ТаблицаПоНУ.Колонки.Добавить("ВидРасчета");
		ТаблицаПоНУ.Колонки.Добавить("ВидРасчетаНаименование");
		ТаблицаПоНУ.Колонки.Добавить("СчетДтНУ");
		ТаблицаПоНУ.Колонки.Добавить("СубконтоДтНУ1");
		ТаблицаПоНУ.Колонки.Добавить("ДтВидСубконтоНУ1");
		ТаблицаПоНУ.Колонки.Добавить("СубконтоДтНУ2");
		ТаблицаПоНУ.Колонки.Добавить("ДтВидСубконтоНУ2");
		ТаблицаПоНУ.Колонки.Добавить("СубконтоДтНУ3");
		ТаблицаПоНУ.Колонки.Добавить("ДтВидСубконтоНУ3");
		ТаблицаПоНУ.Колонки.Добавить("СчетКтНУ");
		ТаблицаПоНУ.Колонки.Добавить("СубконтоКтНУ1");
		ТаблицаПоНУ.Колонки.Добавить("КтВидСубконтоНУ1");
		ТаблицаПоНУ.Колонки.Добавить("СубконтоКтНУ2");
		ТаблицаПоНУ.Колонки.Добавить("КтВидСубконтоНУ2");
		ТаблицаПоНУ.Колонки.Добавить("СубконтоКтНУ3");
		ТаблицаПоНУ.Колонки.Добавить("КтВидСубконтоНУ3");
		ТаблицаПоНУ.Колонки.Добавить("Сумма");
		ТаблицаПоНУ.Колонки.Добавить("ВключатьФИОРаботникаВСодержание");
		ТаблицаПоНУ.Колонки.Добавить("ВключатьВидРасчетаВСодержание");
		ТаблицаПоНУ.Колонки.Добавить("СтруктурноеПодразделениеДт");
		ТаблицаПоНУ.Колонки.Добавить("СтруктурноеПодразделениеКт");
		ТаблицаПоНУ.Колонки.Добавить("ВидУчетаДт");
		ТаблицаПоНУ.Колонки.Добавить("ВидУчетаКт");
		ТаблицаПоНУ.Колонки.Добавить("ПризнакПроизводственногоСчета");		
		Если ВедетсяУчетПоСотрудникам Тогда
			ТаблицаПоНУ.Колонки.Добавить("ФизЛицо");
			ТаблицаПоНУ.Колонки.Добавить("ФИОРаботника");
		КонецЕсли;
		
		СписокПроизводственныхСчетов = Неопределено; // кэшируемый список производственных счетов 
		// перенесем данные в таблицы для дальнейшей группировки
		Пока ВыборкаПоОтражениюВУчете.Следующий() Цикл
			 СтрокаБУ = ТаблицаПоБУ.Добавить();
			 ЗаполнитьЗначенияСвойств(СтрокаБУ,ВыборкаПоОтражениюВУчете); 
			 СтрокаНУ = ТаблицаПоНУ.Добавить();
			 ЗаполнитьЗначенияСвойств(СтрокаНУ,ВыборкаПоОтражениюВУчете); 
			 Если мВедениеУчетаВременныхРазницБалансовымМетодом Тогда
			 // Отражаем сведения по затратам на ремонт производственных ОС
			 ПроцедурыНалоговогоУчета.ОтразитьРасходыНаРемонтПроизводственныхОС(Движения.Налоговый,
										Новый Структура("СчетБУ, СубконтоБУ1, СубконтоБУ2,СубконтоБУ3",
										ВыборкаПоОтражениюВУчете.СчетДт, ВыборкаПоОтражениюВУчете.СубконтоДт1, ВыборкаПоОтражениюВУчете.СубконтоДт2, ВыборкаПоОтражениюВУчете.СубконтоДт3),
										Новый Структура("СчетНУ, СубконтоНУ1, СубконтоНУ2,СубконтоНУ3",
										ВыборкаПоОтражениюВУчете.СчетДтНУ, ВыборкаПоОтражениюВУчете.СубконтоДтНУ1, ВыборкаПоОтражениюВУчете.СубконтоДтНУ2, ВыборкаПоОтражениюВУчете.СубконтоДтНУ3),
										СтруктураШапкиДокумента.ДатаПроводки, СтруктураШапкиДокумента.Организация,ВыборкаПоОтражениюВУчете.СтруктурноеПодразделениеДт, ВыборкаПоОтражениюВУчете.СтруктурноеПодразделениеКт,
										Справочники.ВидыУчетаНУ.НУ, ВыборкаПоОтражениюВУчете.Сумма, 0, Отказ, СписокПроизводственныхСчетов);
			 КонецЕсли;
		 КонецЦикла;
		 
		Если мВедениеУчетаВременныхРазницБалансовымМетодом Тогда
			ДополнитьПроводкиПоРезервамНУ(ТаблицаПоБУ, ТаблицаПоНУ);
		КонецЕсли;
				
		// Если отключено ведение учет по сотрудниками, то необходимо свернуть проводоки
		Если НЕ ВедетсяУчетПоСотрудникам Тогда
			СтрокаГруппировокКолонокБУ = "";
			Для Каждого КолонкаБУ Из ТаблицаПоБУ.Колонки Цикл
				Если КолонкаБУ.Имя = "Сумма" Или КолонкаБУ.Имя = "НомерСтроки" Тогда
					Продолжить;
				КонецЕсли;
				Если СтрокаГруппировокКолонокБУ = "" Тогда
					СтрокаГруппировокКолонокБУ = КолонкаБУ.Имя;
				Иначе
					СтрокаГруппировокКолонокБУ = СтрокаГруппировокКолонокБУ + ", " +  КолонкаБУ.Имя;
				КонецЕсли;				
			КонецЦикла;
			ТаблицаПоБУ.Свернуть(СтрокаГруппировокКолонокБУ,"Сумма");
		
			СтрокаГруппировокКолонокНУ = "";
			Для Каждого КолонкаНУ Из ТаблицаПоНУ.Колонки Цикл
				Если КолонкаНУ.Имя = "Сумма" Или КолонкаБУ.Имя = "НомерСтроки" Тогда
					Продолжить;
				КонецЕсли;
				Если СтрокаГруппировокКолонокНУ = "" Тогда
					СтрокаГруппировокКолонокНУ = КолонкаНУ.Имя;
				Иначе
					СтрокаГруппировокКолонокНУ = СтрокаГруппировокКолонокНУ + ", " +  КолонкаНУ.Имя;
				КонецЕсли;				
			КонецЦикла;
			ТаблицаПоНУ.Свернуть(СтрокаГруппировокКолонокНУ,"Сумма");
		КонецЕсли;
					
		Для Каждого СтрокаБУ Из ТаблицаПоБУ Цикл 
			ДобавитьСтрокуВДвиженияПоОтражениюВУчетеВБУ(СтруктураШапкиДокумента, СтрокаБУ, ОрганизацияПлательщикНалогаНаПрибыль);
		КонецЦикла;
		
		Для Каждого СтрокаНУ Из ТаблицаПоНУ Цикл 
			ДобавитьСтрокуВДвиженияПоОтражениюВУчетеВНУ(СтруктураШапкиДокумента, СтрокаНУ, ОрганизацияПлательщикНалогаНаПрибыль);
		КонецЦикла;
		
	КонецЕсли;  	
	
КонецПроцедуры // ОбработкаПроведения

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(ОсновныеНачисления);
	МассивТЧ.Добавить(ДополнительныеНачисления);

	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "ФизЛицо");
	
КонецПроцедуры

// Функция подготавливает менеджер временных таблиц со списком физлиц-работников,
// числящихся в указанном подразделении на начало месяц либо принятых в подразделение в течение месяца.
//
Процедура ПоверитьСписокФизЛиц()

	УсловиеНаПодразделение = "";
		
	Если ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		УсловиеНаПодразделение = "РаботникиОрганизации.ПодразделениеОрганизации В ИЕРАРХИИ (&парамПодразделение)";
	КонецЕсли;
		
	//Если мОтображатьСтруктурныеПодразделения Тогда
	//	Если УсловиеНаПодразделение <> "" Тогда	
	//		УсловиеНаПодразделение = УсловиеНаПодразделение + " И ";
	//	КонецЕсли;
	//	УсловиеНаПодразделение = УсловиеНаПодразделение + "ЕСТЬNULL(УчетПоСтруктурнымПодразделениям.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) = &парамСтруктурноеПодразделение";
	//КонецЕсли;
	

	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Запрос.УстановитьПараметр("парамНачалоМесяца", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамКонецМесяца", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Принят", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	Запрос.УстановитьПараметр("Уволен", Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("парамВнутреннееСовместительство", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	Запрос.УстановитьПараметр("парамПодразделение", ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("парамПриход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамИсчисление", Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Ежемесячно", Перечисления.ХарактерВыплатыПоДоговору.Ежемесячно);
	
	ТекстУчетПоСтруктурным = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                         |	УчетВзаиморасчетов.Сотрудник КАК Сотрудник,
	                         |	УчетВзаиморасчетов.СтруктурноеПодразделение
	                         |ПОМЕСТИТЬ УчетПоСтруктурнымПодразделениям
	                         |ИЗ
	                         |	РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&парамНачалоМесяца, ОбособленноеПодразделение = &парамОрганизация И Сотрудник.ВидЗанятости<>&парамВнутреннееСовместительство) КАК УчетВзаиморасчетов
	                         |
	                         |ИНДЕКСИРОВАТЬ ПО
	                         |	Сотрудник
							 |;";
							 
	ВТ_ОсновныеОрганизации = "ВЫБРАТЬ
			|	РаботникиОрганизации.Сотрудник,
			|	РаботникиОрганизации.ОбособленноеПодразделение
			|ПОМЕСТИТЬ ВТ_ОсновныеОрганизации
			|ИЗ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
			|						&парамНачалоМесяца, 
			|						Организация = &парамГоловнаяОрганизация И Сотрудник.ВидЗанятости<>&парамВнутреннееСовместительство) КАК РаботникиОрганизации
			|;
			|ВЫБРАТЬ
			|	РаботникиОрганизации.Период,
			|	РаботникиОрганизации.Сотрудник,
			|	РаботникиОрганизации.ОбособленноеПодразделение
			|ПОМЕСТИТЬ ВТ_ОсновныеОрганизацииДвижения
			|ИЗ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
			|ГДЕ	РаботникиОрганизации.Период > &парамНачалоМесяца
			|			И РаботникиОрганизации.Период <= &парамКонецМесяца
			|			И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
			|			И РаботникиОрганизации.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
			|;";
	
	//СписокРаботниковТекст
	//Описание:
	//	Выбирает список работников, отвечающих условиям отбора, числящихся на начало месяца и принятых за месяц,
	//  а также переведенных в середине месяца из других обособленных подразделений
	СписокРаботниковТекст = "
	|		// срез работников на начало месяца
	|		ВЫБРАТЬ
	|			РаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо,
	|			РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации
	|		ИЗ
	|			(ВЫБРАТЬ
	|				РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|				МАКСИМУМ(ВЫБОР
	|							КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Уволен
	|								ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
	|							ИНАЧЕ РаботникиОрганизации.Период
	|						КОНЕЦ) КАК Период
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|						&парамНачалоМесяца, 
	|						Организация = &парамГоловнаяОрганизация) КАК РаботникиОрганизации
//	|				ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеОрганизации КАК ВТ_ОсновныеОрганизации
//	|					ПО РаботникиОрганизации.Сотрудник.ФизЛицо = ВТ_ОсновныеОрганизации.Сотрудник.ФизЛицо
	|			ГДЕ
	|				РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|				И 
//	|				ВЫБОР 
//	|					КОГДА РаботникиОрганизации.ОбособленноеПодразделение = ЕСТЬNULL(ВТ_ОсновныеОрганизации.ОбособленноеПодразделение,ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
//	|						ТОГДА 
	|							РаботникиОрганизации.Сотрудник.ВидЗанятости<>&парамВнутреннееСовместительство
//	|					ИНАЧЕ ИСТИНА
//	|				КОНЕЦ
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиОрганизации.Сотрудник.ФизЛицо) КАК ДатыПоследнихНазначений
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
//	|					ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеОрганизации КАК ВТ_ОсновныеОрганизации
//	|						ПО РаботникиОрганизации.Сотрудник.ФизЛицо = ВТ_ОсновныеОрганизации.Сотрудник.ФизЛицо
	|				ПО ДатыПоследнихНазначений.ФизЛицо = РаботникиОрганизации.Сотрудник.ФизЛицо
	|					И ДатыПоследнихНазначений.Период = ВЫБОР
	|															КОГДА РаботникиОрганизации.ПричинаИзмененияСостояния = &Уволен
	|																ТОГДА ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1)
	|															ИНАЧЕ РаботникиОрганизации.Период
	|														КОНЕЦ
	|					И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
	|					И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|					И 
//	|					 ВЫБОР 
//	|						КОГДА РаботникиОрганизации.ОбособленноеПодразделение = ЕСТЬNULL(ВТ_ОсновныеОрганизации.ОбособленноеПодразделение,ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
//	|							ТОГДА 
	|								РаботникиОрганизации.Сотрудник.ВидЗанятости<>&парамВнутреннееСовместительство
//	|						ИНАЧЕ ИСТИНА
//	|					КОНЕЦ
	|		"+?(УсловиеНаПодразделение="","","ГДЕ ")+УсловиеНаПодразделение+"
	|		
	|		ОБЪЕДИНИТЬ
	|
	|		// движения работников за месяц
	|		ВЫБРАТЬ
	|			РаботникиОрганизации.Сотрудник.Физлицо  КАК ФизЛицо,
	|			РаботникиОрганизации.ПодразделениеОрганизации  КАК ПодразделениеОрганизации
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
 //	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеОрганизацииДвижения КАК ВТ_ОсновныеОрганизацииДвижения
//	|				ПО РаботникиОрганизации.Сотрудник.ФизЛицо = ВТ_ОсновныеОрганизацииДвижения.Сотрудник.ФизЛицо
 //	|					И РаботникиОрганизации.Период = ВТ_ОсновныеОрганизацииДвижения.Период
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|									ТекущееНазначение.Регистратор,
	|									ТекущееНазначение.НомерСтроки,
	|									МАКСИМУМ(ПредыдущееНазначение.Период) КАК ДатаПредыдущегоНазначения
	|								ИЗ
	|									РегистрСведений.РаботникиОрганизаций КАК ТекущееНазначение
	|									ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПредыдущееНазначение
	|										ПО ТекущееНазначение.Сотрудник = ПредыдущееНазначение.Сотрудник
	|											И ПредыдущееНазначение.Организация = &парамГоловнаяОрганизация
	|											И ПредыдущееНазначение.Период < ТекущееНазначение.Период
	|								ГДЕ
	|									ТекущееНазначение.Период > &парамНачалоМесяца
	|									И ТекущееНазначение.Период <= &парамКонецМесяца
	|									И ТекущееНазначение.Организация = &парамГоловнаяОрганизация
	|									И ТекущееНазначение.ОбособленноеПодразделение = &парамОрганизация
	|								СГРУППИРОВАТЬ ПО
	|									ТекущееНазначение.Регистратор,
	|									ТекущееНазначение.НомерСтроки) КАК ДатыПредыдущихНазначений
	|				ПО РаботникиОрганизации.Регистратор = ДатыПредыдущихНазначений.Регистратор
	|					И РаботникиОрганизации.НомерСтроки = ДатыПредыдущихНазначений.НомерСтроки
	|					
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПредыдущиеНазначения
	|				ПО РаботникиОрганизации.Сотрудник = ПредыдущиеНазначения.Сотрудник
	|					И ПредыдущиеНазначения.Организация = &парамГоловнаяОрганизация
	|					И ДатыПредыдущихНазначений.ДатаПредыдущегоНазначения = ПредыдущиеНазначения.Период
	|		
	|		ГДЕ
	|			РаботникиОрганизации.Период > &парамНачалоМесяца
	|			И РаботникиОрганизации.Период <= &парамКонецМесяца
	|			И РаботникиОрганизации.Организация = &парамГоловнаяОрганизация
	|			И 
//	|			ВЫБОР
//	|				КОГДА ЕСТЬNULL(ВТ_ОсновныеОрганизацииДвижения.ОбособленноеПодразделение,ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))=РаботникиОрганизации.ОбособленноеПодразделение
//	|					ТОГДА 
	|						РаботникиОрганизации.Сотрудник.ВидЗанятости <> &парамВнутреннееСовместительство
//	|				ИНАЧЕ ИСТИНА
//	|			КОНЕЦ
	|			И (РаботникиОрганизации.ПричинаИзмененияСостояния = &Принят
	|					ИЛИ РаботникиОрганизации.ОбособленноеПодразделение <> ПредыдущиеНазначения.ОбособленноеПодразделение)
	|			И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
	|			"+?(УсловиеНаПодразделение="","","И ")+УсловиеНаПодразделение+"	
	|";

	Запрос.Текст = СписокРаботниковТекст;

	//Запрос.Текст = ВТ_ОсновныеОрганизации + ?(мОтображатьСтруктурныеПодразделения,ТекстУчетПоСтруктурным,"")+"
	Запрос.Текст = ?(мОтображатьСтруктурныеПодразделения,ТекстУчетПоСтруктурным,"")+"
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	СписокФизЛиц.ФизЛицо,
	|	СписокФизЛиц.ПодразделениеОрганизации,
	|   ЕСТЬNULL(УчетПоСтруктурнымПодразделениям.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК СтруктурноеПодразделение
	|
	|ИЗ
	|	(" + СписокРаботниковТекст + ") КАК СписокФизЛиц 
	|
	|          ЛЕВОЕ СОЕДИНЕНИЕ УчетПоСтруктурнымПодразделениям КАК УчетПоСтруктурнымПодразделениям
	|              ПО СписокФизЛиц.ФизЛицо = УчетПоСтруктурнымПодразделениям.Сотрудник.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК УжеРанееОтражено
	|		ПО СписокФизЛиц.ФизЛицо = УжеРанееОтражено.ФизЛицо
	|			И УжеРанееОтражено.Ссылка.Организация = &парамОрганизация
	|			И УжеРанееОтражено.Ссылка.ПериодРегистрации = &парамНачалоМесяца
	|			И УжеРанееОтражено.Ссылка.Проведен
	|			И УжеРанееОтражено.Ссылка <> &ДокументСсылка
//	|"+?(мОтображатьСтруктурныеПодразделения,"
//	|			И УжеРанееОтражено.Ссылка.СтруктурноеПодразделение = &парамСтруктурноеПодразделение","")+"
	|
	|ГДЕ
	|	УжеРанееОтражено.ФизЛицо ЕСТЬ NULL // зарплату такого физлица еще не отражали в бух. учете
	|
	|";

	Результат = Запрос.Выполнить().Выбрать();

	ТекстСообщения = "";
	Пока Результат.Следующий() Цикл
		Если НЕ ПодразделениеСоответствуетСтруктурному(Результат.СтруктурноеПодразделение,Результат.ПодразделениеОрганизации) Тогда
			ТекстСообщения=ТекстСообщения+"
			|	- по сотруднику "+Результат.ФизЛицо+": неверно установлено структурное подразделение учета затрат, т.к. оно не соответствует основному подразделению сотрудника ("+Результат.ПодразделениеОрганизации+")";
		КонецЕсли;
	КонецЦикла;
	Если ТекстСообщения <>"" Тогда
	    Сообщить("При автоматическом заполнении документа "+?(ЭтоНовый(),?(Номер="","","№ "+Номер+" от "+Строка(Дата)),Строка(Ссылка))+" выявлены ошибки ввода сведений об отражении взаиморасчетов с сотрудниками по структурным подразделениям:
		|	"+ТекстСообщения,СтатусСообщения.Внимание);
	КонецЕсли;
КонецПроцедуры // ПодготовитьМенеджерВременныхТаблицСоСпискомФизЛиц()

Функция ПодразделениеСоответствуетСтруктурному(СП,Подразделение)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", СП);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПодразделенияОрганизаций.Ссылка
	               |ИЗ
	               |	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	               |ГДЕ
	               |	ПодразделенияОрганизаций.Владелец = &Организация
	               |	И ПодразделенияОрганизаций.Ссылка В ИЕРАРХИИ(&СтруктурноеПодразделение)";
				   
	СписокПодразделений = Новый СписокЗначений;
	СписокПодразделений.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	Возврат СписокПодразделений.НайтиПоЗначению(Подразделение)<>Неопределено;
КонецФункции


Процедура ДополнитьПроводкиПоРезервамНУ(ТаблицаПоБУ, ТаблицаПоНУ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамКонецМесяца", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	РазмерыОтчисленийВРезервыСрезПоследних.Резерв,
	               |	РазмерыОтчисленийВРезервыСрезПоследних.СчетУчета,
	               |	РазмерыОтчисленийВРезервыСрезПоследних.Резерв.ПринятиеКВычетуПоНалоговомуУчету КАК ПринятиеКВычетуПоНалоговомуУчету,
	               |	РазмерыОтчисленийВРезервыСрезПоследних.Резерв.СтатьяЗатрат КАК СтатьяЗатрат
	               |ИЗ
	               |	РегистрСведений.РазмерыОтчисленийВРезервы.СрезПоследних(
	               |			&парамКонецМесяца,
	               |			Организация = &парамОрганизация
	               |				И Резерв.ВидРезерва = ЗНАЧЕНИЕ(Перечисление.ВидыРезервов.ПоВознаграждениямРаботникам)) КАК РазмерыОтчисленийВРезервыСрезПоследних";
				   
	ТаблицаПоРезервам = Запрос.Выполнить().Выгрузить();
	
	ВидУчетаНУВР = Справочники.ВидыУчетаНУ.ВР;
	
	СписокСчетовПроизводства = Неопределено;
	СписокСчетовПроизводстваНУ = Неопределено;
	Для Каждого ДанныеРезерва Из ТаблицаПоРезервам Цикл
		Если НЕ ДанныеРезерва.ПринятиеКВычетуПоНалоговомуУчету Тогда
			
			// Создание резерва
			ПараметрыОтбора = Новый Структура("ВидРасчета", ДанныеРезерва.Резерв);
			СтрокиСозданиеРезерва = ТаблицаПоБУ.НайтиСтроки(ПараметрыОтбора);
			Для Каждого СтрокаРезерва Из СтрокиСозданиеРезерва Цикл
				
				СтрокаРезерваНУ = ТаблицаПоНУ.Найти(СтрокаРезерва.НомерСтроки, "НомерСтроки"); 
				Если СтрокаРезерваНУ = Неопределено Тогда
					Продолжить;
				КонецЕсли;
									
				//Для резерва установим ВидУчета ВР
				СтрокаРезерваНУ.ВидУчетаДт = ВидУчетаНУВР;
				СтрокаРезерваНУ.ВидУчетаКт = ВидУчетаНУВР;
				
				// Если счет производственный, то добавим служебную проводоку
				Если ПроцедурыБухгалтерскогоУчета.СчетЯвляетсяПроизводственным(СтрокаРезерва.СчетДт, СписокСчетовПроизводства) Тогда
					
					СчетНУПроизводственный = ПроцедурыБухгалтерскогоУчета.СчетЯвляетсяПроизводственнымНУ(СтрокаРезерваНУ.СчетДтНУ, СписокСчетовПроизводстваНУ);
					
					Если СчетНУПроизводственный Тогда
						
						ДанныеСчетДтНУ = Новый Структура("СчетДтНУ, СубконтоДтНУ1, ДтВидСубконтоНУ1, СубконтоДтНУ2, ДтВидСубконтоНУ2, СубконтоДтНУ3, ДтВидСубконтоНУ3",
															СтрокаРезерваНУ.СчетДтНУ, 	СтрокаРезерваНУ.СубконтоДтНУ1, СтрокаРезерваНУ.ДтВидСубконтоНУ1, 
																						СтрокаРезерваНУ.СубконтоДтНУ2, СтрокаРезерваНУ.ДтВидСубконтоНУ2, 
																						СтрокаРезерваНУ.СубконтоДтНУ3, СтрокаРезерваНУ.ДтВидСубконтоНУ3);
						
						
						СтрокаРезерваНУ.СчетДтНУ = ПланыСчетов.Налоговый.ПрочиеРасходы;
 					
						КоличествоСубконто = СтрокаРезерваНУ.СчетДтНУ.ВидыСубконто.Количество();
						Для Н = 1 По 3 Цикл
							Если Н <= КоличествоСубконто И СтрокаРезерваНУ.СчетДтНУ.ВидыСубконто[Н-1].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.СтатьиЗатрат")) Тогда
								СтрокаРезерваНУ["СубконтоДтНУ" + Н] = ДанныеРезерва.СтатьяЗатрат;
								СтрокаРезерваНУ["ДтВидСубконтоНУ" + Н] = ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат;
							Иначе 
								СтрокаРезерваНУ["СубконтоДтНУ" + Н] = Неопределено;
								СтрокаРезерваНУ["ДтВидСубконтоНУ" + Н] = Неопределено;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					
					СтрокаНУ = ТаблицаПоНУ.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаНУ,СтрокаРезерва);
					СтрокаНУ.НомерСтроки = Неопределено;
					СтрокаНУ.СтруктурноеПодразделениеКт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
					
					// Дт
					Если СчетНУПроизводственный Тогда
						ЗаполнитьЗначенияСвойств(СтрокаНУ, ДанныеСчетДтНУ); 
					Иначе 
						СтрокаНУ.СчетДтНУ = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", СтрокаРезерва.СчетДт), , , );
									
						
						КоличествоСубконто = СтрокаНУ.СчетДтНУ.ВидыСубконто.Количество();
						Для Н = 1 По КоличествоСубконто Цикл
							СтрокаНУ["СубконтоДтНУ" + Н] = СтрокаРезерва["СубконтоДт" + Н];
							СтрокаНУ["ДтВидСубконтоНУ" + Н] = СтрокаРезерва.СчетДт.ВидыСубконто[Н-1].ВидСубконто;
						КонецЦикла;
					КонецЕсли;
					
					//Кт
					СтрокаНУ.СчетКтНУ = ПланыСчетов.Налоговый.ПрочиеРасходы;
					КоличествоСубконто = СтрокаНУ.СчетКтНУ.ВидыСубконто.Количество();
					Для Н = 1 По КоличествоСубконто Цикл
						Если СтрокаНУ.СчетКтНУ.ВидыСубконто[Н-1].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.СтатьиЗатрат")) Тогда
							СтрокаНУ["СубконтоКтНУ" + Н] = ДанныеРезерва.СтатьяЗатрат;
							СтрокаНУ["КтВидСубконтоНУ" + Н] = ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат;
						Иначе 
							СтрокаНУ["СубконтоКтНУ" + Н] = Неопределено;
						КонецЕсли;
					КонецЦикла;

				КонецЕсли;				
			КонецЦикла;   		
			
			// Погашение резерва
			ПараметрыОтбора = Новый Структура("СчетДт, СубконтоДт1", ДанныеРезерва.СчетУчета, ДанныеРезерва.Резерв);
			СтрокиПогашенияРезерва = ТаблицаПоБУ.НайтиСтроки(ПараметрыОтбора);
			Для Каждого СтрокаРезерва Из СтрокиПогашенияРезерва Цикл
				СтрокаНУ = ТаблицаПоНУ.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНУ,СтрокаРезерва);
				СтрокаНУ.СтруктурноеПодразделениеДт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
				СтрокаНУ.СтруктурноеПодразделениеКт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
				
				// Установим вид учета НУ
				СтрокаНУ.ВидУчетаДт = ВидУчетаНУВР;
				СтрокаНУ.ВидУчетаКт = ВидУчетаНУВР;
				
				// Дт
				СтрокаНУ.СчетДтНУ = ПланыСчетов.Налоговый.КраткосрочныеОценочныеОбязательстваПоВознаграждениямРаботникам;
				
				КоличествоСубконто = СтрокаНУ.СчетДтНУ.ВидыСубконто.Количество();
				Для Н = 1 По КоличествоСубконто Цикл
					Если СтрокаНУ.СчетДтНУ.ВидыСубконто[Н-1].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.Резервы")) Тогда
						СтрокаНУ["СубконтоДтНУ" + Н] = ДанныеРезерва.Резерв;
						СтрокаНУ["ДтВидСубконтоНУ" + Н] = ПланыВидовХарактеристик.ВидыСубконтоТиповые.Резервы;
					Иначе 
						СтрокаНУ["СубконтоДтНУ" + Н] = Неопределено;КонецЕсли;
				КонецЦикла;
					
				//Кт
				СтрокаНУ.СчетКтНУ = ПланыСчетов.Налоговый.ПрочиеРасходы;
				КоличествоСубконто = СтрокаНУ.СчетКтНУ.ВидыСубконто.Количество();
				Для Н = 1 По КоличествоСубконто Цикл
					Если СтрокаНУ.СчетКтНУ.ВидыСубконто[Н-1].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.СтатьиЗатрат")) Тогда
						СтрокаНУ["СубконтоКтНУ" + Н] = ДанныеРезерва.СтатьяЗатрат;
						СтрокаНУ["КтВидСубконтоНУ" + Н] = ПланыВидовХарактеристик.ВидыСубконтоТиповые.СтатьиЗатрат;
					Иначе 
						СтрокаНУ["СубконтоКтНУ" + Н] = Неопределено;
					КонецЕсли;
				КонецЦикла;

			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура формирует движение по регистру бухгалтерии.
//
Процедура ДобавитьСтрокуВДвиженияПоОтражениюВУчетеВБУ(СтруктураШапкиДокумента, ВыборкаПоДоходам, ОрганизацияПлательщикНалогаНаПрибыль)	
	// проводка по бухгалтерскому регистру
	Строка = Движения.Типовой.Добавить();	
	
	// Свойства
	Строка.Период 		= СтруктураШапкиДокумента.ДатаПроводки;
    
	// Измерения
	Строка.Организация  = СтруктураШапкиДокумента.Организация;	
	
	// бухучет
	Строка.СчетДт       = ВыборкаПоДоходам.СчетДт;
	Строка.СчетКт       = ВыборкаПоДоходам.СчетКт;
	Строка.СубконтоДт[ВыборкаПоДоходам.ДтВидСубконто1] = ВыборкаПоДоходам.СубконтоДт1;
	Строка.СубконтоДт[ВыборкаПоДоходам.ДтВидСубконто2] = ВыборкаПоДоходам.СубконтоДт2;
	Строка.СубконтоДт[ВыборкаПоДоходам.ДтВидСубконто3] = ВыборкаПоДоходам.СубконтоДт3;
	Строка.СубконтоКт[ВыборкаПоДоходам.КтВидСубконто1] = ВыборкаПоДоходам.СубконтоКт1;
	Строка.СубконтоКт[ВыборкаПоДоходам.КтВидСубконто2] = ВыборкаПоДоходам.СубконтоКт2;
	Строка.СубконтоКт[ВыборкаПоДоходам.КтВидСубконто3] = ВыборкаПоДоходам.СубконтоКт3;
	
	// ресурсы
	Строка.Сумма = ВыборкаПоДоходам.Сумма;
	
	Если Строка.СчетДт.Валютный Тогда
		Строка.ВалютаДт = мВалютаРеглУчета;
		Строка.ВалютнаяСуммаДт = Строка.Сумма;
	КонецЕсли;
	
	Если Строка.СчетКт.Валютный Тогда
		Строка.ВалютаКт = мВалютаРеглУчета;
		Строка.ВалютнаяСуммаКт = Строка.Сумма;
	КонецЕсли;
	
	// реквизиты
	СтрокаСодержания = "";
	Если ВыборкаПоДоходам.ВключатьФИОРаботникаВСодержание Тогда
		СтрокаСодержания = ВыборкаПоДоходам.ФИОРаботника;
	КонецЕсли;
	Если ЗначениеЗаполнено(ВыборкаПоДоходам.ВидРасчета)
			И (ВыборкаПоДоходам.ВключатьВидРасчетаВСодержание=Истина Или ПустаяСтрока(СтрокаСодержания)) Тогда
		Если СтрокаСодержания <> "" Тогда
			СтрокаСодержания = СтрокаСодержания + " (" + ВыборкаПоДоходам.ВидРасчетаНаименование + ")";
		Иначе
			СтрокаСодержания = ВыборкаПоДоходам.ВидРасчетаНаименование;
		КонецЕсли;
	КонецЕсли;
	Строка.Содержание  = СтрокаСодержания;	
	
	Если мОтображатьСтруктурныеПодразделения Тогда
		ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(
		      Строка, ВыборкаПоДоходам.СтруктурноеПодразделениеДт, ВыборкаПоДоходам.СтруктурноеПодразделениеКт);
	КонецЕсли;
	            		
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоОтражениюВУчетеВБУ()

// Процедура формирует движение по регистру бухгалтерии.
//
Процедура ДобавитьСтрокуВДвиженияПоОтражениюВУчетеВНУ(СтруктураШапкиДокумента, ВыборкаПоДоходам, ОрганизацияПлательщикНалогаНаПрибыль)	
	
	// Налоговый учет
	// проводка по налоговому регистру
	Если (ОрганизацияПлательщикНалогаНаПрибыль) и (ЗначениеЗаполнено(ВыборкаПоДоходам.СчетДтНУ)) или (ЗначениеЗаполнено(ВыборкаПоДоходам.СчетКтНУ)) Тогда
		СтрокаНУ = Движения.Налоговый.Добавить();
		СтрокаНУ.Период 	  = СтруктураШапкиДокумента.ДатаПроводки;
		СтрокаНУ.Организация  = СтруктураШапкиДокумента.Организация;
		СтрокаНУ.СчетДт  = ВыборкаПоДоходам.СчетДтНУ;
		СтрокаНУ.СчетКт  = ВыборкаПоДоходам.СчетКтНУ;
		СтрокаНУ.СубконтоДт[ВыборкаПоДоходам.ДтВидСубконтоНУ1] = ВыборкаПоДоходам.СубконтоДтНУ1;
		СтрокаНУ.СубконтоДт[ВыборкаПоДоходам.ДтВидСубконтоНУ2] = ВыборкаПоДоходам.СубконтоДтНУ2;
		СтрокаНУ.СубконтоДт[ВыборкаПоДоходам.ДтВидСубконтоНУ3] = ВыборкаПоДоходам.СубконтоДтНУ3;
		СтрокаНУ.СубконтоКт[ВыборкаПоДоходам.КтВидСубконтоНУ1] = ВыборкаПоДоходам.СубконтоКтНУ1;
		СтрокаНУ.СубконтоКт[ВыборкаПоДоходам.КтВидСубконтоНУ2] = ВыборкаПоДоходам.СубконтоКтНУ2;
		СтрокаНУ.СубконтоКт[ВыборкаПоДоходам.КтВидСубконтоНУ3] = ВыборкаПоДоходам.СубконтоКтНУ3;
		СтрокаНУ.Сумма = ВыборкаПоДоходам.Сумма;
		ПроцедурыНалоговогоУчета.ВидУчетаНУ(СтрокаНУ, Справочники.ВидыУчетаНУ.НУ);
		
		// Заполнем уже известные виды учета
		Если ЗначениеЗаполнено(ВыборкаПоДоходам.ВидУчетаДт) Тогда
			СтрокаНУ.ВидУчетаДт = ВыборкаПоДоходам.ВидУчетаДт;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаПоДоходам.ВидУчетаКт) Тогда
			СтрокаНУ.ВидУчетаКт = ВыборкаПоДоходам.ВидУчетаКт;
		КонецЕсли;
		
		СтрокаСодержания = "";
		Если ВыборкаПоДоходам.ВключатьФИОРаботникаВСодержание Тогда
			СтрокаСодержания = ВыборкаПоДоходам.ФИОРаботника;
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаПоДоходам.ВидРасчета)
				И (ВыборкаПоДоходам.ВключатьВидРасчетаВСодержание=Истина Или ПустаяСтрока(СтрокаСодержания)) Тогда
			Если СтрокаСодержания <> "" Тогда
				СтрокаСодержания = СтрокаСодержания + " (" + ВыборкаПоДоходам.ВидРасчетаНаименование + ")";
			Иначе
				СтрокаСодержания = ВыборкаПоДоходам.ВидРасчетаНаименование;
			КонецЕсли;
		КонецЕсли;
	
		СтрокаНУ.Содержание  = СтрокаСодержания;
		
		СтруктурноеПодразделениеДт = ?(ЗначениеЗаполнено(СтрокаНУ.СчетДт), ВыборкаПоДоходам.СтруктурноеПодразделениеДт, Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
		СтруктурноеПодразделениеКт = ?(ЗначениеЗаполнено(СтрокаНУ.СчетКт), ВыборкаПоДоходам.СтруктурноеПодразделениеКт, Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
		Если СтрокаНУ.СчетДт = ПланыСчетов.Налоговый.ПрочиеРасходы 
			И СтрокаНУ.СчетКт = ПланыСчетов.Налоговый.КраткосрочныеОценочныеОбязательстваПоВознаграждениямРаботникам Тогда 
			
			СтруктурноеПодразделениеДт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			
		КонецЕсли;
		Если мОтображатьСтруктурныеПодразделения Тогда
			ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(СтрокаНУ, СтруктурноеПодразделениеДт, СтруктурноеПодразделениеКт);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоОтражениюВУчетеВНУ()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

мВидСубконтоРаботникиОрганизаций = ПланыВидовХарактеристик.ВидыСубконтоТиповые.РаботникиОрганизаций;
мВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
мПоддержкаРаботыСоСтруктурнымиПодразделениями = глЗначениеПеременной("ПоддержкаРаботыСоСтруктурнымиПодразделениямиВЗарплате");
мСоответствиеСчетаБУВлияющиеНаНалогооблагаемыйДоход = Новый Соответствие;
мОтображатьСтруктурныеПодразделения = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделенийВЗарплате();

// фактически - создаем структуру промежуточной таблицы
мПромежуточнаяТаблица = ОтражениеВУчете.ВыгрузитьКолонки();
мСтрокаРеквизитовГруппировки = "";
КоллекцияРеквизитов = Метаданные().ТабличныеЧасти.ОтражениеВУчете.Реквизиты;
Для Каждого МетаРекв Из КоллекцияРеквизитов Цикл
	Если МетаРекв.Имя = "Сумма" Тогда
		Продолжить;
	КонецЕсли;
	Если НЕ ПустаяСтрока(мСтрокаРеквизитовГруппировки) Тогда
		мСтрокаРеквизитовГруппировки = мСтрокаРеквизитовГруппировки + ", ";
	КонецЕсли;
	мСтрокаРеквизитовГруппировки = мСтрокаРеквизитовГруппировки + МетаРекв.Имя;
КонецЦикла;
