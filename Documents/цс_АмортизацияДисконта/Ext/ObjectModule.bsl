////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
	
	// Процедура осуществляет печать документа. Можно направить печать на 
	// экран или принтер, а также распечатать необходмое количество копий.
	//
	//  Название макета печати передается в качестве параметра,
	// по переданному названию находим имя макета в соответствии.
	//
	// Параметры:
	//  НазваниеМакета - строка, название макета.
	//
	Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
		
		Если ЭтоНовый() Тогда
			Предупреждение("Документ можно распечатать только после его записи");
			Возврат;
		КонецЕсли;
		
		Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
			Возврат;
		КонецЕсли;
		
		//так как нет печатных форм у документа, по умолчанию
		//ТабДокумент = Неопределено
		ТабДокумент = Неопределено;
		
		Если ТабДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли;  
		
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект));
		
	КонецПроцедуры // Печать
	
#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура();
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект,  ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ТекущийПользователь(), , ,  , , );		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияПоБУХ();
	
	ДвиженияПоРег();
КонецПроцедуры

Процедура ДвиженияПоБУХ()
	//
	Для Каждого Стр из ДокументыТЧ Цикл
		ПроводкиБУ = Движения.Типовой;
		ПроводкиНУ = Движения.Налоговый;
		
		Проводка = ПроводкиБУ.Добавить();
		
		Проводка.Период       = Дата;
		Проводка.Организация  = Организация;
		Проводка.Содержание   = "Амортизация дисконта";
		
		Если Стр.Док.ВидОперации = ПредопределенноеЗначение("Перечисление.ЦС_ВидыДисконтирования.Дебиторы") Тогда
			СтруктураРазнДат = ЦС_ОбщегоНазначенияСервер.РазобратьРазностьДат(Стр.ДоговорКонтрагента.ДатаОкончанияДействияДоговора, Дата);
			НаборЗаписей = РегистрыСведений.ЦС_УчетнаяПолитикаДисконтирования.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.ВидОперации.Установить(Стр.Док.ВидОперации);
			НаборЗаписей.Прочитать();
			Если СтруктураРазнДат.Лет >= 1 Тогда
				Проводка.СчетДт = НаборЗаписей[0].СчетУчетаДС;
			Иначе
				Проводка.СчетДт = НаборЗаписей[0].СчетУчетаКС;
			КонецЕсли;
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Контрагенты",Стр.Контрагент);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Договоры",  Стр.ДоговорКонтрагента);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ТипыОпераций", Стр.ДоговорКонтрагента.ТипОперации);	
		Иначе
			Проводка.СчетДт       = СчетБУК;
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СубконтоБУК1);				
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СубконтоБУК2);				
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, СубконтоБУК3);				
		КонецЕсли;
		
		ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(Проводка, СтруктурноеПодразделение, СтруктурноеПодразделение);
		
		Если Проводка.СчетДт.Валютный Тогда
			Проводка.ВалютаДт        = ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ВалютаРегУчета();
			Проводка.ВалютнаяСуммаДт = Стр.Сумма;
		КонецЕсли;
		
		Проводка.Сумма = Стр.Сумма;
		
		Если Стр.Док.ВидОперации = ПредопределенноеЗначение("Перечисление.ЦС_ВидыДисконтирования.Дебиторы") Тогда
			Проводка.СчетКт       = СчетБУ;
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, СубконтоБУ1);				
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, СубконтоБУ2);				
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, СубконтоБУ3);				
		Иначе
			СтруктураРазнДат = ЦС_ОбщегоНазначенияСервер.РазобратьРазностьДат(Стр.ДоговорКонтрагента.ДатаОкончанияДействияДоговора, Дата);
			НаборЗаписей = РегистрыСведений.ЦС_УчетнаяПолитикаДисконтирования.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.ВидОперации.Установить(Стр.Док.ВидОперации);
			НаборЗаписей.Прочитать();
			
			Если СтруктураРазнДат.Лет >= 1 Тогда
				Проводка.СчетКт = НаборЗаписей[0].СчетУчетаДС;
			Иначе
				Проводка.СчетКт = НаборЗаписей[0].СчетУчетаКС;
			КонецЕсли;
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",Стр.Контрагент);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры", Стр.ДоговорКонтрагента);	
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ТипыОпераций", Стр.ДоговорКонтрагента.ТипОперации);	
		КонецЕсли;
		
		Если Проводка.СчетКт.Валютный Тогда
			Проводка.ВалютаКт        = ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ВалютаРегУчета();
			Проводка.ВалютнаяСуммаКт = Стр.Сумма;
		КонецЕсли;
		
		Если УчитыватьКПН Тогда
			ПроводкаНУ = ПроводкиНУ.Добавить();
			ПроводкаНУ.Период = Дата;
			ПроводкаНУ.Организация = Организация;
			ПроводкаНУ.Содержание = "Амортизация дисконта";
			
			ПроводкаНУ.СчетДт = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", Проводка.СчетДт), , , );
			ПроводкаНУ.СчетКт = ПроцедурыБухгалтерскогоУчета.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", Проводка.СчетКт), , , );
			
			Если Стр.Док.ВидОперации = ПредопределенноеЗначение("Перечисление.ЦС_ВидыДисконтирования.Дебиторы") Тогда
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт,ПроводкаНУ.СубконтоДт,"Контрагенты",Стр.Док.Контрагент);
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт,ПроводкаНУ.СубконтоДт,"Договоры",  Стр.Док.ДоговорКонтрагента);
			Иначе
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, 1, СубконтоБУК1);				
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, 2, СубконтоБУК2);				
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, 3, СубконтоБУК3);				

			КонецЕсли;
			
			Если Стр.Док.ВидОперации = ПредопределенноеЗначение("Перечисление.ЦС_ВидыДисконтирования.Дебиторы") Тогда
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, 1, СубконтоБУ1);				
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, 2, СубконтоБУ2);				
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, 3, СубконтоБУ3);				
			Иначе
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт,ПроводкаНУ.СубконтоКт,"Контрагенты",Стр.Док.Контрагент);
				ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(ПроводкаНУ.СчетКт,ПроводкаНУ.СубконтоКт,"Договоры",  Стр.Док.ДоговорКонтрагента);	
			КонецЕсли;
			
			ПроцедурыНалоговогоУчета.ВидУчетаНУ(ПроводкаНУ, ВидУчетаНУ);										
			
			ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(ПроводкаНУ, СтруктурноеПодразделение, СтруктурноеПодразделение);				
			ПроводкаНУ.Сумма = Стр.Сумма;
		КонецЕсли;

	КонецЦикла;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ДвиженияПоРег()
	Для Каждого Стр Из ДокументыТЧ Цикл
		НовоеДвиж = Движения.ЦС_Дисконтирование.Добавить();
		НовоеДвиж.Период = КонецМесяца(Дата);
		НовоеДвиж.Организация = Организация;
		НовоеДвиж.ВидДвижения = ВидДвиженияНакопления.Расход;
		НовоеДвиж.Контрагент = Стр.Контрагент;
		НовоеДвиж.ДоговорКонтрагента = Стр.ДоговорКонтрагента;
		НовоеДвиж.Сумма = Стр.Сумма;
	КонецЦикла;
	
КонецПроцедуры
