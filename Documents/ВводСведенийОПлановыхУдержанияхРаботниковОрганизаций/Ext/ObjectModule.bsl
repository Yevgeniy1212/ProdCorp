Перем мСписокРасчетовПоИсполнительнымЛистам Экспорт;

Перем СоответствиеВалютныеСпособыРасчета;

Перем мВалютаРегламентированногоУчета Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ РАБОТЫ ФОРМ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	Запрос.Текст = "
	|Выбрать 
	|	Дата, 
	|	Организация,
	|	ВЫБОР 
	|		КОГДА Организация.ГоловнаяОрганизация = &парамПустаяОрганизация 
	|			ТОГДА Организация 
	|		ИНАЧЕ Организация.ГоловнаяОрганизация 
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	| 	Ссылка 
	|Из 
	|	Документ." + Метаданные().Имя + "
	|Где 
	|	Ссылка = &ДокументСсылка
	|";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "РаботникиОрганизации" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса. В запросе данные документа дополняются значениями
//  проверяемых параметров из связанного с
//
Функция СформироватьЗапросПоРаботникиОрганизации(Режим)

	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ИсполнительныйЛист", ПланыВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммой);
	Запрос.УстановитьПараметр("МассивСпоcобовРасчетаНеТребующихВалюты",ПроведениеРасчетов.ПолучитьСписокСпособовРасчетаНеТребующихУказанияВалюты());
	Запрос.УстановитьПараметр("ВалютаРегУчета", мВалютаРегламентированногоУчета);

	Запрос.УстановитьПараметр("ВсеИсполнительныеЛисты", мСписокРасчетовПоИсполнительнымЛистам);

	УчетнаяПолитикаПоПерсоналуОрганизации = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация];	

    // Описание текста запроса:
	//
    // 1. Выборка "Удержания": 
	//		Выборка строк ТЧ Удержания. Проверка наличия строк-дублей.  
	// 2. Выборка "СуществующиеДвижения": 
	//		Проверяем на наличие существующих конфликтных движений в регистре сведений. 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТЧУдержания.НомерСтроки КАК НомерСтроки,
	|	ТЧУдержания.ВидРасчета,
	|	МАКСИМУМ(Показатели.НомерСтроки) КАК КоличествоПоказателей,
	|	Показатели1.Показатель.Наименование КАК Показатель1Наименование,
	|	Показатели2.Показатель.Наименование КАК Показатель2Наименование,
	|	Показатели3.Показатель.Наименование КАК Показатель3Наименование,
	|	Показатели4.Показатель.Наименование КАК Показатель4Наименование,
	|	Показатели5.Показатель.Наименование КАК Показатель5Наименование,
	|	Показатели6.Показатель.Наименование КАК Показатель6Наименование,
	|	Показатели1.Показатель.ТипПоказателя КАК Показатель1ТипПоказателя,
	|	Показатели2.Показатель.ТипПоказателя КАК Показатель2ТипПоказателя,
	|	Показатели3.Показатель.ТипПоказателя КАК Показатель3ТипПоказателя,
	|	Показатели4.Показатель.ТипПоказателя КАК Показатель4ТипПоказателя,
	|	Показатели5.Показатель.ТипПоказателя КАК Показатель5ТипПоказателя,
	|	Показатели6.Показатель.ТипПоказателя КАК Показатель6ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения КАК Показатель1ВозможностьИзменения,
	|	Показатели2.Показатель.ВозможностьИзменения КАК Показатель2ВозможностьИзменения,
	|	Показатели3.Показатель.ВозможностьИзменения КАК Показатель3ВозможностьИзменения,
	|	Показатели4.Показатель.ВозможностьИзменения КАК Показатель4ВозможностьИзменения,
	|	Показатели5.Показатель.ВозможностьИзменения КАК Показатель5ВозможностьИзменения,
	|	Показатели6.Показатель.ВозможностьИзменения КАК Показатель6ВозможностьИзменения,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.Предопределенный КАК Показатель1Предопределенный,
	|	Показатели2.Показатель.Предопределенный КАК Показатель2Предопределенный,
	|	Показатели3.Показатель.Предопределенный КАК Показатель3Предопределенный,
	|	Показатели4.Показатель.Предопределенный КАК Показатель4Предопределенный,
	|	Показатели5.Показатель.Предопределенный КАК Показатель5Предопределенный,
	|	Показатели6.Показатель.Предопределенный КАК Показатель6Предопределенный
	|ПОМЕСТИТЬ ВТ_Показатели
	|ИЗ
	|	Документ.ВводСведенийОПлановыхУдержанияхРаботниковОрганизаций.Удержания КАК ТЧУдержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
	|		ПО ТЧУдержания.ВидРасчета = Показатели.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели1
	|		ПО ТЧУдержания.ВидРасчета = Показатели1.Ссылка
	|			И (Показатели1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели2
	|		ПО ТЧУдержания.ВидРасчета = Показатели2.Ссылка
	|			И (Показатели2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели3
	|		ПО ТЧУдержания.ВидРасчета = Показатели3.Ссылка
	|			И (Показатели3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели4
	|		ПО ТЧУдержания.ВидРасчета = Показатели4.Ссылка
	|			И (Показатели4.НомерСтроки = 4)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели5
	|		ПО ТЧУдержания.ВидРасчета = Показатели5.Ссылка
	|			И (Показатели5.НомерСтроки = 5)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели6
	|		ПО ТЧУдержания.ВидРасчета = Показатели6.Ссылка
	|			И (Показатели6.НомерСтроки = 6)
	|ГДЕ
	|	ТЧУдержания.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Показатели1.Показатель.Наименование,
	|	Показатели2.Показатель.Наименование,
	|	Показатели3.Показатель.Наименование,
	|	Показатели4.Показатель.Наименование,
	|	Показатели5.Показатель.Наименование,
	|	Показатели6.Показатель.Наименование,
	|	Показатели1.Показатель.ТипПоказателя,
	|	Показатели2.Показатель.ТипПоказателя,
	|	Показатели3.Показатель.ТипПоказателя,
	|	Показатели4.Показатель.ТипПоказателя,
	|	Показатели5.Показатель.ТипПоказателя,
	|	Показатели6.Показатель.ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения,
	|	Показатели2.Показатель.ВозможностьИзменения,
	|	Показатели3.Показатель.ВозможностьИзменения,
	|	Показатели4.Показатель.ВозможностьИзменения,
	|	Показатели5.Показатель.ВозможностьИзменения,
	|	Показатели6.Показатель.ВозможностьИзменения,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях,
	|	ТЧУдержания.НомерСтроки,
	|	ТЧУдержания.ВидРасчета,
	|	Показатели1.Показатель.Предопределенный,
	|	Показатели2.Показатель.Предопределенный,
	|	Показатели3.Показатель.Предопределенный,
	|	Показатели4.Показатель.Предопределенный,
	|	Показатели5.Показатель.Предопределенный,
	|	Показатели6.Показатель.Предопределенный
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + "
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Удержания.НомерСтроки,
	|	Удержания.ФизЛицо,
	|	Удержания.ФизЛицо.Наименование,
	|	Удержания.ВидРасчета,
	|	Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	ВЫБОР
	|		КОГДА Удержания.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПроизвольнаяФормулаРасчета,
	|	ЕСТЬNULL(Показатели.КоличествоПоказателей, 0) КАК КоличествоПоказателей,
	|	Удержания.Действие,
	|	Удержания.ДатаДействия,
	|	Удержания.ДатаДействияКонец,
	|	Удержания.Показатель1,
	|	Удержания.Показатель2,
	|	Удержания.Показатель3,
	|	Удержания.Показатель4,	
	|	Удержания.Показатель5,
	|	Удержания.Показатель6,	
	|	Удержания.ДокументОснование,
	|	Удержания.СпособОтраженияВБухучете,
	|	ВЫБОР
	|		КОГДА Удержания.ВидРасчета.СпособРасчета В (&ВсеИсполнительныеЛисты)
	|				И (НЕ Удержания.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ДокументОснованиеУказанВерно,
	|	ВЫБОР
	|		КОГДА Удержания.ВидРасчета.СпособРасчета В (&МассивСпоcобовРасчетаНеТребующихВалюты)
	|				ИЛИ Удержания.ВидРасчета = &ИсполнительныйЛист
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ТребуетВалюту,
	|	Показатели.Показатель1Наименование КАК Показатель1Наименование,
	|	Показатели.Показатель2Наименование КАК Показатель2Наименование,
	|	Показатели.Показатель3Наименование КАК Показатель3Наименование,
	|	Показатели.Показатель4Наименование КАК Показатель4Наименование,
	|	Показатели.Показатель5Наименование КАК Показатель5Наименование,
	|	Показатели.Показатель6Наименование КАК Показатель6Наименование,
	|	Показатели.Показатель1ТипПоказателя КАК Показатель1ТипПоказателя,
	|	Показатели.Показатель2ТипПоказателя КАК Показатель2ТипПоказателя,
	|	Показатели.Показатель3ТипПоказателя КАК Показатель3ТипПоказателя,
	|	Показатели.Показатель4ТипПоказателя КАК Показатель4ТипПоказателя,
	|	Показатели.Показатель5ТипПоказателя КАК Показатель5ТипПоказателя,
	|	Показатели.Показатель6ТипПоказателя КАК Показатель6ТипПоказателя,
	|	Показатели.Показатель1ВозможностьИзменения КАК Показатель1ВозможностьИзменения,
	|	Показатели.Показатель2ВозможностьИзменения КАК Показатель2ВозможностьИзменения,
	|	Показатели.Показатель3ВозможностьИзменения КАК Показатель3ВозможностьИзменения,
	|	Показатели.Показатель4ВозможностьИзменения КАК Показатель4ВозможностьИзменения,
	|	Показатели.Показатель5ВозможностьИзменения КАК Показатель5ВозможностьИзменения,
	|	Показатели.Показатель6ВозможностьИзменения КАК Показатель6ВозможностьИзменения,
	|	Показатели.Показатель1ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель2ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель3ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель4ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель5ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель6ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели.Показатель1Предопределенный КАК Показатель1Предопределенный,
	|	Показатели.Показатель2Предопределенный КАК Показатель2Предопределенный,
	|	Показатели.Показатель3Предопределенный КАК Показатель3Предопределенный,
	|	Показатели.Показатель4Предопределенный КАК Показатель4Предопределенный,
	|	Показатели.Показатель5Предопределенный КАК Показатель5Предопределенный,
	|	Показатели.Показатель6Предопределенный КАК Показатель6Предопределенный,";
	Если Не УчетнаяПолитикаПоПерсоналуОрганизации.ИспользуютсяНачисленияВВалюте Тогда
		ТекстЗапроса = ТекстЗапроса + "
	|	&ВалютаРегУчета КАК Валюта1,
	|	&ВалютаРегУчета КАК Валюта2,
	|	&ВалютаРегУчета КАК Валюта3,
	|	&ВалютаРегУчета КАК Валюта4,
	|	&ВалютаРегУчета КАК Валюта5,
	|	&ВалютаРегУчета КАК Валюта6";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
	|	Удержания.Валюта1,
	|	Удержания.Валюта2,
	|	Удержания.Валюта3,
	|	Удержания.Валюта4,
	|	Удержания.Валюта5,
	|	Удержания.Валюта6";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + ", 
	|	Удержания.КонфликтныйНомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТЧУдержания.НомерСтроки КАК НомерСтроки,
	|		ТЧУдержания.ФизЛицо КАК ФизЛицо,
	|		ТЧУдержания.ВидРасчета КАК ВидРасчета,
	|		ТЧУдержания.Действие КАК Действие,
	|		ТЧУдержания.ДатаДействия КАК ДатаДействия,
	|		ТЧУдержания.ДатаДействияКонец КАК ДатаДействияКонец,
	|		ТЧУдержания.Показатель1 КАК Показатель1,
	|		ТЧУдержания.Показатель2 КАК Показатель2,
	|		ТЧУдержания.Показатель3 КАК Показатель3,
	|		ТЧУдержания.Показатель4 КАК Показатель4,
	|		ТЧУдержания.Показатель5 КАК Показатель5,
	|		ТЧУдержания.Показатель6 КАК Показатель6,
	|		ТЧУдержания.Валюта1 КАК Валюта1,
	|		ТЧУдержания.Валюта2 КАК Валюта2,
	|		ТЧУдержания.Валюта3 КАК Валюта3,
	|		ТЧУдержания.Валюта4 КАК Валюта4,
	|		ТЧУдержания.Валюта5 КАК Валюта5,
	|		ТЧУдержания.Валюта6 КАК Валюта6,
	|		МИНИМУМ(ПовторяющиесяСтроки.НомерСтроки) КАК КонфликтныйНомерСтроки,
	|		ТЧУдержания.ДокументОснование КАК ДокументОснование,
	|		ТЧУдержания.СпособОтраженияВБухучете КАК СпособОтраженияВБухучете,
	|		ТЧУдержания.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ВводСведенийОПлановыхУдержанияхРаботниковОрганизаций.Удержания КАК ТЧУдержания
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводСведенийОПлановыхУдержанияхРаботниковОрганизаций.Удержания КАК ПовторяющиесяСтроки
	|			ПО ТЧУдержания.ФизЛицо = ПовторяющиесяСтроки.ФизЛицо
	|				И ТЧУдержания.Ссылка = ПовторяющиесяСтроки.Ссылка
	|				И ТЧУдержания.НомерСтроки < ПовторяющиесяСтроки.НомерСтроки
	|				И ТЧУдержания.ВидРасчета = ПовторяющиесяСтроки.ВидРасчета
	|				И ТЧУдержания.ДатаДействия = ПовторяющиесяСтроки.ДатаДействия
	|				И ТЧУдержания.ДокументОснование = ПовторяющиесяСтроки.ДокументОснование
	|	ГДЕ
	|		ТЧУдержания.Ссылка = &ДокументСсылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТЧУдержания.НомерСтроки,
	|		ТЧУдержания.ФизЛицо,
	|		ТЧУдержания.ВидРасчета,
	|		ТЧУдержания.Действие,
	|		ТЧУдержания.ДатаДействия,
	|		ТЧУдержания.ДатаДействияКонец,
	|		ТЧУдержания.Показатель1,
	|		ТЧУдержания.Показатель2,
	|		ТЧУдержания.Показатель3,
	|		ТЧУдержания.Показатель4,
	|		ТЧУдержания.Показатель5,
	|		ТЧУдержания.Показатель6,
	|		ТЧУдержания.Валюта1,
	|		ТЧУдержания.Валюта2,
	|		ТЧУдержания.Валюта3,
	|		ТЧУдержания.Валюта4,
	|		ТЧУдержания.Валюта5,
	|		ТЧУдержания.Валюта6,
	|		ТЧУдержания.ДокументОснование,
	|		ТЧУдержания.СпособОтраженияВБухучете,
	|		ТЧУдержания.Ссылка) КАК Удержания
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Показатели КАК Показатели
	|		ПО Удержания.НомерСтроки = Показатели.НомерСтроки
	|";			   
	
	Запрос.Текст = ТекстЗапроса;

	
	Возврат Запрос.Выполнить();

КонецФункции

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не указана организация, в которой работает работник!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "Удержания" документа.
// Если какой-то из реквизтов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса
//  Отказ 						- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеСтрокиУдержания(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок, УчетнаяПолитикаПоПерсоналуОрганизации)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Удержания"": ";
	
	// ФизЛицо
    ЕстьФизЛицо = ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо);
	Если НЕ ЕстьФизЛицо Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;

	// Вид расчета
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указано удержание!", Отказ, Заголовок);
	КонецЕсли;
	
	// Действие
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Действие) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указано действие с удержанием!", Отказ, Заголовок);
	ИначеЕсли ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.НеИзменять Тогда	
	
		// ДатаДействия
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаДействия) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указана дата действия удержания!", Отказ, Заголовок);
		КонецЕсли;
		
		// Одинаковые строки
		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.КонфликтныйНомерСтроки) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке  + "по сотруднику " + ВыборкаПоСтрокамДокумента.ФизЛицоНаименование + " обнаружено повторное назначение того же удержания в строке №" + ВыборкаПоСтрокамДокумента.КонфликтныйНомерСтроки + "!", Отказ, Заголовок);
		КонецЕсли;
		
		Если ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда	
		
			ПроведениеРасчетов.ПроверкаПоказателейВПлановыхНачислениях(ВыборкаПоСтрокамДокумента, СтрокаНачалаСообщенияОбОшибке, Ложь, Отказ, Заголовок, Истина, СоответствиеВалютныеСпособыРасчета);
	
		КонецЕсли;
		
		// Основание
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументОснование) Тогда
				
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указано основание удержания!", Отказ, Заголовок);

		ИначеЕсли Не ВыборкаПоСтрокамДокумента.ДокументОснованиеУказанВерно Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "в основании указан недопустимый документ (требуется Исполнительный лист)!", Отказ, Заголовок);
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаботникаОрганизации()

// Создает и заполняет структуру, содержащую имена регистров сведений 
//  по которым надо проводить документ
//
// Параметры: 
//  СтруктураПроведенияПоРегистрамСведений - структура, содержащая имена регистров сведений 
//                                           по которым надо проводить документ
//
// Возвращаемое значение:
//  Нет.
//
Процедура ЗаполнитьСтруктуруПроведенияПоРегистрамСведений(ВыборкаПоШапкеДокумента, СтруктураПроведенияПоРегистрамСведений)

	СтруктураПроведенияПоРегистрамСведений = Новый Структура();
	СтруктураПроведенияПоРегистрамСведений.Вставить("ПлановыеУдержанияРаботниковОрганизаций");

КонецПроцедуры // ЗаполнитьСтруктуруПроведенияПоРегистрамСведений

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                - выборка из результата запроса по шапке документа,
//  СтруктураПроведенияПоРегистрамСведений - структура, содержащая имена регистров 
//                                           сведений по которым надо проводить документ,
//  СтруктураПараметров                    - структура параметров проведения,
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации, 
		  СтруктураПроведенияПоРегистрамСведений, СтруктураПараметров = "")

	// Если документ нужно проводить по регистру, то для него есть ключ в структуре
	ИмяРегистра = "ПлановыеУдержанияРаботниковОрганизаций";
	Если СтруктураПроведенияПоРегистрамСведений.Свойство(ИмяРегистра) Тогда

		Если ВыборкаПоРаботникиОрганизации.Действие <> Перечисления.ВидыДействияСНачислением.НеИзменять тогда
			
			Движение = Движения[ИмяРегистра].Добавить();
			
			// Свойства
			Движение.Период                     = ВыборкаПоРаботникиОрганизации.ДатаДействия;
			
			// Измерения
			Движение.ФизЛицо                    = ВыборкаПоРаботникиОрганизации.ФизЛицо;
			Движение.ВидРасчета                 = ВыборкаПоРаботникиОрганизации.ВидРасчета;
			Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
			Движение.ДокументОснование			= ВыборкаПоРаботникиОрганизации.ДокументОснование;
			
			// Ресурсы
			Движение.Действие						= ВыборкаПоРаботникиОрганизации.Действие;
			Если ВыборкаПоРаботникиОрганизации.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
				Движение.Показатель1				= ВыборкаПоРаботникиОрганизации.Показатель1;
				Движение.Показатель2				= ВыборкаПоРаботникиОрганизации.Показатель2;
				Движение.Показатель3				= ВыборкаПоРаботникиОрганизации.Показатель3;
				Движение.Показатель4				= ВыборкаПоРаботникиОрганизации.Показатель4;
				Движение.Показатель5				= ВыборкаПоРаботникиОрганизации.Показатель5;
				Движение.Показатель6				= ВыборкаПоРаботникиОрганизации.Показатель6;
				Движение.Валюта1					= ВыборкаПоРаботникиОрганизации.Валюта1;
				Движение.Валюта2					= ВыборкаПоРаботникиОрганизации.Валюта2;
				Движение.Валюта3					= ВыборкаПоРаботникиОрганизации.Валюта3;
				Движение.Валюта4					= ВыборкаПоРаботникиОрганизации.Валюта4;
				Движение.Валюта5					= ВыборкаПоРаботникиОрганизации.Валюта5;
				Движение.Валюта6					= ВыборкаПоРаботникиОрганизации.Валюта6;
				Движение.СпособОтраженияВБухучете	= ВыборкаПоРаботникиОрганизации.СпособОтраженияВБухучете;
			КонецЕсли; 
            Если ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.ДатаДействияКонец) Тогда 
    			Движение.ПериодЗавершения   = ВыборкаПоРаботникиОрганизации.ДатаДействияКонец;
    			Движение.ДействиеЗавершения	= Перечисления.ВидыДействияСНачислением.Прекратить;
                // не заполняются
                //СпособОтраженияВБухучетеЗавершения
                //РазмерЗавершения
                //ВалютаЗавершения
            КонецЕсли; 
			
		КонецЕсли;

	КонецЕсли; 
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамСведений()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	//структура, содержащая имена регистров сведений по которым надо проводить документ
	Перем СтруктураПроведенияПоРегистрамСведений;

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект) Тогда
		Возврат
	КонецЕсли;

	СоответствиеВалютныеСпособыРасчета = ПроведениеРасчетов.ПолучитьСоответствиеСпособовРасчетаТребующихВалюту();
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		УчетнаяПолитикаПоПерсоналуОрганизации = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[ВыборкаПоШапкеДокумента.Организация];

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда

			// Создадим и заполним структуры, содержащие имена регистров, по которым в зависимости от типа учета
			// проводится документ. В дальнейшем будем считать, что если для регистра не создан ключ в структуре,
			// то проводить по нему не надо.
			ЗаполнитьСтруктуруПроведенияПоРегистрамСведений(ВыборкаПоШапкеДокумента, СтруктураПроведенияПоРегистрамСведений);

			// получим реквизиты табличной части
			РезультатЗапросаПоРаботники = СформироватьЗапросПоРаботникиОрганизации(Режим);
			ВыборкаПоРаботникиОрганизации = РезультатЗапросаПоРаботники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиУдержания(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации, Отказ, Заголовок, УчетнаяПолитикаПоПерсоналуОрганизации);

				Если НЕ Отказ Тогда

					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации, СтруктураПроведенияПоРегистрамСведений);
					
				КонецЕсли;

			КонецЦикла;
			
		КонецЕсли; 

	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(Удержания);

	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "ФизЛицо");
	
	Если Ссылка.Пустая() Тогда
		СcылкаОбъекта = Документы.ВводСведенийОПлановыхУдержанияхРаботниковОрганизаций.ПолучитьСсылку();
		УстановитьСсылкуНового(СcылкаОбъекта);
	Иначе
		СcылкаОбъекта = Ссылка;
	КонецЕсли;
	
	ТипИсполнительныйЛист = Тип("ДокументСсылка.ИсполнительныйЛист");
	
	// Для каждого удержания (не исполнительного листа) в поле "Основание", для незаполненого 
	// значения подставим ссылку на документ
	Для каждого СтрокаТЧ Из Удержания Цикл
	
		Если мСписокРасчетовПоИсполнительнымЛистам.НайтиПоЗначению(СтрокаТЧ.ВидРасчета.СпособРасчета) = Неопределено Тогда
			Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ДокументОснование)
				ИЛИ (ТипЗнч(СтрокаТЧ.ДокументОснование) <> ТипИсполнительныйЛист 
						И СтрокаТЧ.ДокументОснование.Удержания.Количество() = 0 
						И НЕ ЗначениеЗаполнено(СтрокаТЧ.ДокументОснование.Дата)) Тогда
				СтрокаТЧ.ДокументОснование = СcылкаОбъекта
			КонецЕсли;			
		КонецЕсли;
	
	КонецЦикла; 
	
КонецПроцедуры

мСписокРасчетовПоИсполнительнымЛистам = Новый СписокЗначений;
мСписокРасчетовПоИсполнительнымЛистам.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПочтовыйСбор);
мСписокРасчетовПоИсполнительнымЛистам.Добавить(Перечисления.СпособыРасчетаОплатыТруда.УдержаниеФиксированнойСуммой);
мСписокРасчетовПоИсполнительнымЛистам.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентом);
мСписокРасчетовПоИсполнительнымЛистам.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентомДоПредела);
мСписокРасчетовПоИсполнительнымЛистам.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистФиксСуммойДоПредела);

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();