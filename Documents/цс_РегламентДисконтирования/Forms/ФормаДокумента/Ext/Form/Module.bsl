&НаКлиенте
//Хранит настройку пользователя "Открывать настройку движений"
Перем ОткрыватьНастройкуДвижений;


&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)	
	Объект.СтруктурноеПодразделение = Неопределено;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НеИзменять = Ложь;
	Док = РеквизитФормыВЗначение("Объект");

	ЦС_ОбщегоНазначенияСервер.ЗаполнитьРеквизитыПриСозданииНаСервере(ЭтаФорма,Объект);
	
	Элементы.Организация.ТолькоПросмотр = Не УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ТекущийПользователь(), "УчетПоВсемОрганизациям");
	
	Если ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ПолучитьПризнакОтображенияСтруктурныхПодразделений() Тогда
		Элементы.СтруктурноеПодразделение.Видимость = Истина;
	КонецЕсли;
	
	НастройкаПравДоступа.УстановитьДоступностьФормыДляРедактирования(Док, ЭтаФорма);
	
	УстановитьВидимость();

КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = Новый Структура("Организация, ОргИзменять", Объект.Организация,Элементы.Организация.ТолькоПросмотр);
	ВыбранныйЭлем = ОткрытьФормуМодально("ОбщаяФорма.ЦС_ФормаВыбораСтрукЕдУпр", СтруктураПараметров);

	Если ВыбранныйЭлем <> Неопределено Тогда
		Объект.СтруктурноеПодразделение	= ВыбранныйЭлем.СтруктурноеПодразделение;
		Если Объект.Организация <> ВыбранныйЭлем.организация Тогда
			 Объект.Организация = ВыбранныйЭлем.организация
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОткрыватьНастройкуДвижений = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ТекущийПользователь(), "ПоказыватьДвиженияПриПроведении");	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФормаПослеЗаписи(Объект.Проведен,ОткрыватьНастройкуДвижений,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента.ДатаНачалаДействияДоговора) и ЗначениеЗаполнено(Объект.ДоговорКонтрагента.ДатаОкончанияДействияДоговора) Тогда
		ДоговорКонтрагентаПриИзмененииНаСервере(Объект.ДоговорКонтрагента.ДатаНачалаДействияДоговора,Объект.ДоговорКонтрагента.ДатаОкончанияДействияДоговора);
	Иначе
		СП = Новый СообщениеПользователю;
		СП.Текст = "Заполните даты начала и окончания действия Договора!";
		СП.Сообщить();
	КонецЕсли;
КонецПроцедуры

Процедура ДоговорКонтрагентаПриИзмененииНаСервере(ДатаНач, ДатаКон)
	//СтруктураРазнДат = ЦС_ОбщегоНазначенияСервер.РазобратьРазностьДат(ДатаКон, ДатаНач);
	//Если СтруктураРазнДат.Дней>=15 Тогда
	//	
	//КонецЕсли;
	
	//Если ЗначениеЗаполнено(Объект.СтавкаДисконта) Тогда
	//	Объект.СуммаДокумента = Окр(Объект.СрокДисконта,3,1)*Объект.СтавкаДисконта/100*Объект.ДоговорКонтрагента.СуммаДоговора/100;
	//Иначе
	//	СП = Новый СообщениеПользователю;
	//	СП.Текст = "Заполните Договор контрагента и Ставку дисконта!";
	//	СП.Сообщить();
	//КонецЕсли;
		
КонецПроцедуры
		
&НаКлиенте
Процедура СчетЗатратПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета("БУ");                                                                                                                             

	Если Объект.СубконтоБУ1 = Неопределено Тогда
		Элементы.СубконтоБУ1.Доступность = Ложь;
	Иначе
		Элементы.СубконтоБУ1.Доступность = Истина;
	КонецЕсли;
	
	Если Объект.СубконтоБУ2 = Неопределено Тогда
		Элементы.СубконтоБУ2.Доступность = Ложь;
	Иначе
		Элементы.СубконтоБУ2.Доступность = Истина;
	КонецЕсли;
	
	Если Объект.СубконтоБУ3 = Неопределено Тогда
		Элементы.СубконтоБУ3.Доступность = Ложь;
	Иначе
		Элементы.СубконтоБУ3.Доступность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеСчета(ДтКт)
	
	//ТекущиеДанные = Объект.СчетБУ;
	
	ПоляФормы = Новый Структура("Субконто1, Субконто2, Субконто3",
	"Субконто"+ДтКт+"1", "Субконто"+ДтКт+"2", "Субконто"+ДтКт+"3");
	
	ТекущиеДанные = Новый Структура("Субконто1, Субконто2, Субконто3",
	"Субконто"+ДтКт+"1", "Субконто"+ДтКт+"2", "Субконто"+ДтКт+"3");
	СчетДтКт = "Счет"+ДтКт;
	ТекущиеДанные.Вставить(СчетДтКт, Объект["Счет"+ДтКт]);
	
	ЦС_ОбщегоНазначенияБПКлиентСервер.ПриВыбореСчета(ТекущиеДанные["Счет"+ДтКт], ЭтаФорма, ПоляФормы, Неопределено, Истина);
	
	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3",
	"Субконто"+ДтКт+"1", "Субконто"+ДтКт+"2", "Субконто"+ДтКт+"3");
	
	ТекущиеДанные.Вставить("Субконто"+ДтКт+"1",Неопределено);
	ТекущиеДанные.Вставить("Субконто"+ДтКт+"2",Неопределено);
	ТекущиеДанные.Вставить("Субконто"+ДтКт+"3",Неопределено);
	ЦС_ОбщегоНазначенияБПКлиентСервер.ПриИзмененииСчета(ТекущиеДанные["Счет"+ДтКт], ТекущиеДанные, ПоляОбъекта);
	
	СвойстваСчета = ЦС_ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьСвойстваСчета(ТекущиеДанные["Счет"+ДтКт]);
	ЗаполнитьЗначенияСвойств(Объект, ТекущиеДанные);
	
КонецПроцедуры 
 
Процедура СчетЗатратПриИзмененииНаСервере()
	СчетБУ   = Объект.СчетЗатрат;
	
	ПроцедурыБухгалтерскогоУчета.ПриВыбореСчетаВТабличномПоле(СчетБУ,
	Объект.СубконтоБУ1, Элементы.СубконтоБУ1,
	Объект.СубконтоБУ2, Элементы.СубконтоБУ2,
	Объект.СубконтоБУ3, Элементы.СубконтоБУ3);
	
КонецПроцедуры

&НаСервере
// Процедура устанавливает видимость закладок. 
//
// Параметры:
//  Нет.
//
Процедура УстановитьВидимость()
	
	Элементы.УчитыватьКПН.Видимость = ЭтаФорма.ОрганизацияПлательщикНалогаНаПрибыль;
	Элементы.ВидУчетаНУ.Видимость 	= Объект.УчитыватьКПН;

КонецПроцедуры // УстановитьВидимость()


&НаКлиенте
Процедура УчитыватьКПНПриИзменении(Элемент)
	УчитыватьКПНПриИзмененииНаСервере();
	
КонецПроцедуры

Процедура УчитыватьКПНПриИзмененииНаСервере()
	ПроцедурыНалоговогоУчета.ЗаполнитьВидУчетаНУ(Объект.УчитыватьКПН, Объект.ВидУчетаНУ);	
	УстановитьВидимость();
КонецПроцедуры


&НаКлиенте
// Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)
	
	ОсновныеДействияФормыНастройкаНаСервере();
    	
КонецПроцедуры

&НаСервере
// Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройкаНаСервере()
	
	//Док = РеквизитФормыВЗначение("Объект");
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Параметры.Ключ.Пустая(),Объект.Ссылка, Ложь);
	//ЗначениеВРеквизитФормы(Док,"Объект");
	   	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДокументы(Команда)
	Если Объект.ДокументыТЧ.Количество()>0 Тогда
		ТекстВопроса = "Перед заполнением табличная часть будет очищена.Продолжить ?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		Объект.ДокументыТЧ.Очистить();
	КонецЕсли;

	ЗаполнитьДокументыНаСервере();
КонецПроцедуры

Процедура ЗаполнитьДокументыНаСервере()
	Док = РеквизитФормыВЗначение("Объект");
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ЦС_ВидыОперацийРегламентаДисконт.Перенос") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦС_СписокДисконтирования.Контрагент,
		|	ЦС_СписокДисконтирования.Договор КАК ДоговорКонтрагента,
		|	ЦС_СписокДисконтирования.Договор.ДатаОкончанияДействияДоговора КАК ДатаОкончания,
		|	ЕСТЬNULL(ЦС_ДисконтированиеОстатки.СуммаОстаток, 0) КАК СуммаОстаток
		|ИЗ
		|	РегистрСведений.ЦС_СписокДисконтирования КАК ЦС_СписокДисконтирования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЦС_Дисконтирование.Остатки(&КонПериода, Организация = &Организация) КАК ЦС_ДисконтированиеОстатки
		|		ПО ЦС_СписокДисконтирования.Контрагент = ЦС_ДисконтированиеОстатки.Контрагент
		|			И ЦС_СписокДисконтирования.Договор = ЦС_ДисконтированиеОстатки.ДоговорКонтрагента
		|ГДЕ
		|	ЦС_СписокДисконтирования.Организация = &Организация
		|	И ЦС_СписокДисконтирования.ДатаПереноса МЕЖДУ &НачПериода И &КонПериода
		|	";
		
		Запрос.УстановитьПараметр("НачПериода", НачалоМесяца(Объект.Дата));
		Запрос.УстановитьПараметр("КонПериода", КонецМесяца(Объект.Дата));
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		
		Результат = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НовСтр = Док.ДокументыТЧ.Добавить();
			НовСтр.Контрагент = ВыборкаДетальныеЗаписи.Контрагент;
			НовСтр.ДоговорКонтрагента = ВыборкаДетальныеЗаписи.ДоговорКонтрагента;
			НовСтр.ДатаОкончания = ВыборкаДетальныеЗаписи.Дата;
			НовСтр.Сумма = ВыборкаДетальныеЗаписи.СуммаОстаток;
		КонецЦикла;
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЦС_СписокДисконтирования.Контрагент,
		               |	ЦС_СписокДисконтирования.Договор,
		               |	ЦС_СписокДисконтирования.Договор.ДатаОкончанияДействияДоговора КАК ДатаОкончания,
		               |	ЕСТЬNULL(ЦС_ДисконтированиеОстатки.СуммаОстаток, 0) КАК СуммаОсталосьСписать,
		               |	ЦС_СписокДисконтирования.Сумма КАК СуммаОстаток
		               |ИЗ
		               |	РегистрСведений.ЦС_СписокДисконтирования КАК ЦС_СписокДисконтирования
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЦС_Дисконтирование.Остатки(&КонПериода, Организация = &Организация) КАК ЦС_ДисконтированиеОстатки
		               |		ПО ЦС_СписокДисконтирования.Контрагент = ЦС_ДисконтированиеОстатки.Контрагент
		               |			И ЦС_СписокДисконтирования.Договор = ЦС_ДисконтированиеОстатки.ДоговорКонтрагента
		               |			И ЦС_СписокДисконтирования.Организация = ЦС_ДисконтированиеОстатки.Организация
		               |ГДЕ
		               |	ЦС_СписокДисконтирования.Договор.ДатаОкончанияДействияДоговора МЕЖДУ &НачПериода И &КонПериода";
		Запрос.УстановитьПараметр();
		
		Результат = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.СуммаОсталосьСписать = 0 Тогда
				НовСтр = Док.ДокументыТЧ.Добавить();
				НовСтр.Контрагент = ВыборкаДетальныеЗаписи.Контрагент;
				НовСтр.ДоговорКонтрагента = ВыборкаДетальныеЗаписи.ДоговорКонтрагента;
				НовСтр.ДатаОкончания = ВыборкаДетальныеЗаписи.Дата;
				НовСтр.Сумма = ВыборкаДетальныеЗаписи.СуммаОстаток;
			Иначе
				СП = Новый СообщениеПользователю;
				СП.Текст = "У Контрагента " +  ВыборкаДетальныеЗаписи.Контрагент +" кончился срок договора " + ВыборкаДетальныеЗаписи.ДоговорКонтрагента + ", но остаток дисконтирования не равен 0!
				 |Сумма остатка " + ВыборкаДетальныеЗаписи.СуммаОстаток;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;

	ЗначениеВРеквизитФормы(Док,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура СчетБУКПриИзменении(Элемент)
	ОбработатьИзменениеСчета("БУК");

	Если Объект.СубконтоБУК1 = Неопределено Тогда
		Элементы.СубконтоБУК1.Доступность = Ложь;
	Иначе
		Элементы.СубконтоБУК1.Доступность = Истина;
	КонецЕсли;
	
	Если Объект.СубконтоБУК2 = Неопределено Тогда
		Элементы.СубконтоБУК2.Доступность = Ложь;
	Иначе
		Элементы.СубконтоБУК2.Доступность = Истина;
	КонецЕсли;
	
	Если Объект.СубконтоБУК3 = Неопределено Тогда
		Элементы.СубконтоБУК3.Доступность = Ложь;
	Иначе
		Элементы.СубконтоБУК3.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры
