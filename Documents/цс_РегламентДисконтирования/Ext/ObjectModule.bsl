////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
	
	// Процедура осуществляет печать документа. Можно направить печать на 
	// экран или принтер, а также распечатать необходмое количество копий.
	//
	//  Название макета печати передается в качестве параметра,
	// по переданному названию находим имя макета в соответствии.
	//
	// Параметры:
	//  НазваниеМакета - строка, название макета.
	//
	Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
		
		Если ЭтоНовый() Тогда
			Предупреждение("Документ можно распечатать только после его записи");
			Возврат;
		КонецЕсли;
		
		Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
			Возврат;
		КонецЕсли;
		
		//так как нет печатных форм у документа, по умолчанию
		//ТабДокумент = Неопределено
		ТабДокумент = Неопределено;
		
		Если ТабДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли;  
		
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект));
		
	КонецПроцедуры // Печать
	
#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура();
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект,  ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ТекущийПользователь(), , ,  , , );		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияПоБУХ();
	
	ДвиженияПоРег();
КонецПроцедуры

Процедура ДвиженияПоБУХ()
	Если ВидОперации = ПредопределенноеЗначение("Перечисление.ЦС_ВидыОперацийРегламентаДисконт.Перенос")Тогда
		
		Для Каждого Стр из ДокументыТЧ Цикл
			ПроводкиБУ = Движения.Типовой;
			ПроводкиНУ = Движения.Налоговый;
			
			Проводка = ПроводкиБУ.Добавить();
			
			Проводка.Период       = Дата;
			Проводка.Организация  = Организация;
			Проводка.Содержание   = "Перенос дисконта";
			
			//Если Стр.Док.ВидОперации = ПредопределенноеЗначение("Перечисление.ЦС_ВидыДисконтирования.Дебиторы") Тогда
			НаборЗаписей = РегистрыСведений.ЦС_УчетнаяПолитикаДисконтирования.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.ВидОперации.Установить(Стр.Док.ВидОперации);
			НаборЗаписей.Прочитать();
			Проводка.СчетДт = НаборЗаписей[0].СчетУчетаДС;
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Контрагенты",Стр.Контрагент);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Договоры",  Стр.ДоговорКонтрагента);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ТипыОпераций", Стр.ДоговорКонтрагента.ТипОперации);	
			//Иначе
			//	Проводка.СчетДт       = СчетБУК;
			//	ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СубконтоБУК1);				
			//	ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СубконтоБУК2);				
			//	ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, СубконтоБУК3);				
			//КонецЕсли;
			
			ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(Проводка, СтруктурноеПодразделение, СтруктурноеПодразделение);
			
			Если Проводка.СчетДт.Валютный Тогда
				Проводка.ВалютаДт        = ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ВалютаРегУчета();
				Проводка.ВалютнаяСуммаДт = Стр.Сумма;
			КонецЕсли;
			
			Проводка.Сумма = Стр.Сумма;
			
			//Если Стр.Док.ВидОперации = ПредопределенноеЗначение("Перечисление.ЦС_ВидыДисконтирования.Дебиторы") Тогда
			//	Проводка.СчетКт       = СчетБУ;
			//	ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, СубконтоБУ1);				
			//	ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, СубконтоБУ2);				
			//	ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, СубконтоБУ3);				
			//Иначе
			//	СтруктураРазнДат = ЦС_ОбщегоНазначенияСервер.РазобратьРазностьДат(Стр.ДоговорКонтрагента.ДатаОкончанияДействияДоговора, Дата);
			НаборЗаписей = РегистрыСведений.ЦС_УчетнаяПолитикаДисконтирования.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.ВидОперации.Установить(Стр.Док.ВидОперации);
			НаборЗаписей.Прочитать();
			
			//Если СтруктураРазнДат.Лет >= 1 Тогда
			//	Проводка.СчетКт = НаборЗаписей[0].СчетУчетаДС;
			//Иначе
			Проводка.СчетКт = НаборЗаписей[0].СчетУчетаКС;
			//КонецЕсли;
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",Стр.Контрагент);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры", Стр.ДоговорКонтрагента);	
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ТипыОпераций", Стр.ДоговорКонтрагента.ТипОперации);	
			//КонецЕсли;
			
			Если Проводка.СчетКт.Валютный Тогда
				Проводка.ВалютаКт        = ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ВалютаРегУчета();
				Проводка.ВалютнаяСуммаКт = Стр.Сумма;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Каждого Стр из ДокументыТЧ Цикл
			ПроводкиБУ = Движения.Типовой;
			ПроводкиНУ = Движения.Налоговый;
			
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период       = Дата;
			Проводка.Организация  = Организация;
			Проводка.Содержание   = "Перенос дисконта";
			
			НаборЗаписей = РегистрыСведений.ЦС_УчетнаяПолитикаДисконтирования.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.ВидОперации.Установить(Стр.Док.ВидОперации);
			НаборЗаписей.Прочитать();
			Проводка.СчетДт = НаборЗаписей[0].СчетУчетаКС;
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Контрагенты",Стр.Контрагент);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Договоры",  Стр.ДоговорКонтрагента);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ТипыОпераций", Стр.ДоговорКонтрагента.ТипОперации);	
			
			ПроцедурыБухгалтерскогоУчета.УстановитьПодразделенияПроводки(Проводка, СтруктурноеПодразделение, СтруктурноеПодразделение);
			Если Проводка.СчетДт.Валютный Тогда
				Проводка.ВалютаДт        = ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ВалютаРегУчета();
				Проводка.ВалютнаяСуммаДт = Стр.Сумма;
			КонецЕсли;
			
			Проводка.Сумма = Стр.Сумма;
			
			НаборЗаписей = РегистрыСведений.ЦС_УчетнаяПолитикаДисконтирования.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.ВидОперации.Установить(Стр.Док.ВидОперации);
			НаборЗаписей.Прочитать();
			
			Проводка.СчетКт = НаборЗаписей[0].СчетСписанияКС;
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",Стр.Контрагент);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры", Стр.ДоговорКонтрагента);	
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"ТипыОпераций", Стр.ДоговорКонтрагента.ТипОперации);	
			
			Если Проводка.СчетКт.Валютный Тогда
				Проводка.ВалютаКт        = ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ВалютаРегУчета();
				Проводка.ВалютнаяСуммаКт = Стр.Сумма;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

Процедура ДвиженияПоРег()
	//Для Каждого Стр Из ДокументыТЧ Цикл
	//	НовоеДвиж = Движения.ЦС_Дисконтирование.Добавить();
	//	НовоеДвиж.Период = КонецМесяца(Дата);
	//	НовоеДвиж.Организация = Организация;
	//	НовоеДвиж.ВидДвижения = ВидДвиженияНакопления.Расход;
	//	НовоеДвиж.Контрагент = Стр.Контрагент;
	//	НовоеДвиж.ДоговорКонтрагента = Стр.ДоговорКонтрагента;
	//	НовоеДвиж.Сумма = Стр.Сумма;
	//КонецЦикла;
	//
КонецПроцедуры
