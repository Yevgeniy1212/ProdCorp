////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мВалютаРегламентированногоУчета Экспорт;

Перем мОтображатьСтруктурныеПодразделения Экспорт;

#Если Клиент Тогда

// Формирует табличный документ с формой инвентаризационной описи ИНВ-4
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма ИНВ-4.
//
Функция ПечатьИНВ6()
	
    ТабДокумент = Новый ТабличныйДокумент;
	
	ИтогиФактическоеНаличие = Новый Соответствие;
	ИтогиПоДаннымУчета 		= Новый Соответствие;
	ИтогиИзлишки 			= Новый Соответствие;
	ИтогиНедостача 			= Новый Соответствие;
	
	// Варианты заголовков разделов с подписями печатной формы	
	ЗаголовокРазделаКомиссии = Новый Структура();
	ЗаголовокРазделаКомиссии.Вставить("ПредседательКомиссии", "Председатель комиссии");
	ЗаголовокРазделаКомиссии.Вставить("ЧленыКомиссии"		, "Члены комиссии");
    
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата"  , Дата);

	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ИнвентаризацияДенежныхСредств.Номер КАК НомерДокумента,
	               |	ИнвентаризацияДенежныхСредств.Дата КАК ДатаДокумента,
	               |	ИнвентаризацияДенежныхСредств.Организация,
	               |	ИнвентаризацияДенежныхСредств.СтруктурноеПодразделение,
	               |	ИнвентаризацияДенежныхСредств.Касса,
	               |	ИнвентаризацияДенежныхСредств.Ответственный.ФизЛицо КАК МОЛ,
	               |	ИнвентаризацияДенежныхСредств.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
	               |	ИнвентаризацияДенежныхСредств.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	               |	ИнвентаризацияДенежныхСредств.ДокументОснованиеВид КАК ДокументОснованиеВид,
	               |	ИнвентаризацияДенежныхСредств.ДокументОснованиеДата КАК ДокументОснованиеДата,
	               |	ИнвентаризацияДенежныхСредств.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
	               |	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо КАК ОтветственноеЛицо
	               |ИЗ
	               |	Документ.ИнвентаризацияДенежныхСредств КАК ИнвентаризацияДенежныхСредств
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&Дата, ) КАК ОтветственныеЛицаОрганизацийСрезПоследних
	               |		ПО ИнвентаризацияДенежныхСредств.Касса = ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница
	               |ГДЕ
	               |	ИнвентаризацияДенежныхСредств.Ссылка = &Ссылка";
	
 	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	//запрос по табличной части Инвентаризационная комиссия
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияДенежныхСредств.ФизЛицо КАК ФизЛицо,
	|	ИнвентаризацияДенежныхСредств.Председатель КАК Председатель
	|ИЗ
	|	Документ.ИнвентаризацияДенежныхСредств.ИнвентаризационнаяКомиссия КАК ИнвентаризацияДенежныхСредств
	|ГДЕ
	|	ИнвентаризацияДенежныхСредств.Ссылка = &Ссылка";
	
	ТаблицаИнвентаризационнаяКомиссия = Запрос.Выполнить().Выгрузить();

	//запрос по табличной части  ДС
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст  = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	МИНИМУМ(ИнвентаризацияДенежныхСредств.НомерСтроки) КАК Номер,
					|	СУММА(ИнвентаризацияДенежныхСредств.СуммаУчет) КАК СуммаУчет,
					|	СУММА(ИнвентаризацияДенежныхСредств.Сумма) КАК СуммаФакт,
					|	ИнвентаризацияДенежныхСредств.Валюта КАК Валюта,
					|	ИнвентаризацияДенежныхСредств.СчетУчетаБУ КАК СчетУчетаБУ,
					|	СУММА(ВЫБОР
					|			КОГДА ИнвентаризацияДенежныхСредств.Сумма - ИнвентаризацияДенежныхСредств.СуммаУчет > 0
					|				ТОГДА ИнвентаризацияДенежныхСредств.Сумма - ИнвентаризацияДенежныхСредств.СуммаУчет
					|			ИНАЧЕ 0
					|		КОНЕЦ) КАК Излишек,
					|	СУММА(ВЫБОР
					|			КОГДА ИнвентаризацияДенежныхСредств.Сумма - ИнвентаризацияДенежныхСредств.СуммаУчет < 0
					|				ТОГДА ИнвентаризацияДенежныхСредств.СуммаУчет - ИнвентаризацияДенежныхСредств.Сумма
					|			ИНАЧЕ 0
					|		КОНЕЦ) КАК Недостача
					|ИЗ
					|	Документ.ИнвентаризацияДенежныхСредств.ДенежныеСредства КАК ИнвентаризацияДенежныхСредств
					|ГДЕ
					|	ИнвентаризацияДенежныхСредств.Ссылка = &Ссылка
					|
					|СГРУППИРОВАТЬ ПО
					|	ИнвентаризацияДенежныхСредств.Валюта,
					|	ИнвентаризацияДенежныхСредств.СчетУчетаБУ
					|
					|УПОРЯДОЧИТЬ ПО
					|	Номер
					|ИТОГИ
					|	СУММА(СуммаУчет),
					|	СУММА(СуммаФакт),
					|	СУММА(Излишек),
					|	СУММА(Недостача)
					|ПО
					|	Валюта";
				 
	РезультатДенежныеСредства = Запрос.Выполнить();
	
	ВыборкаСтрокДенежныеСредства  = РезультатДенежныеСредства.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СтруктурнаяЕдиницаОрганизация = ОбщегоНазначения.ПолучитьСтруктурнуюЕдиницу(Шапка.Организация, Шапка.СтруктурноеПодразделение);
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.ПолеСверху		   = 0;
	ТабДокумент.ПолеСлева		   = 0;
	ТабДокумент.ПолеСнизу  		   = 0;
	ТабДокумент.ПолеСправа 		   = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

    ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияДенежныхСредств_ИНВ10";
	Макет      					    = ПолучитьМакет("Инв6");
    
	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	СведенияОбОрганизации = ОбщегоНазначения.СведенияОЮрФизЛице(СтруктурнаяЕдиницаОрганизация, Шапка.ДатаДокумента);
	
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
	ОбластьМакета.Параметры.ОрганизацияРНН_БИН		 = ОбщегоНазначения.ОписаниеОрганизации(СведенияОбОрганизации, "БИН_ИИН,", Ложь, Шапка.ДатаДокумента, "ru");
	ОбластьМакета.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект, глСписокПрефиксовУзлов);
	// выведем  данные приказа об инвентаризации
	ДокОснованиеДата 									= Формат(Шапка.ДокументОснованиеДата, "ДФ=""дд ММММ гггг 'года'""");
	ОбластьМакета.Параметры.ДокументОснованиеДата       = ?(ЗначениеЗаполнено(ДокОснованиеДата), ДокОснованиеДата, "«____»_______________20____года");
	ОбластьМакета.Параметры.ДокументОснованиеНомер		= ?(ЗначениеЗаполнено(Шапка.ДокументОснованиеНомер), Шапка.ДокументОснованиеНомер, "________");
	ОбластьМакета.Параметры.ДатаОкончанияИнвентаризации = Формат(Шапка.ДатаОкончанияИнвентаризации,"ДФ=""дд ММММ гггг 'года'""");
	
	Если ВидОперации = Перечисления.ВидыОперацийИнвентаризацияДенежныхСредств.ПоКассе Тогда 
		ОбластьМакета.Параметры.МестоНохождения = "в кассе: """ + Шапка.Касса + """";
	КонецЕсли;
	
	// заполним МОЛ
	ОтветственноеЛицо					 = ?(ЗначениеЗаполнено(Шапка.Касса), Шапка.ОтветственноеЛицо, Шапка.МОЛ);
	ДанныМОЛ 							 = ПроцедурыУправленияПерсоналом.ДанныеФизЛица(Организация, ОтветственноеЛицо, Дата);
	ОбластьМакета.Параметры.МОЛ			 = ДанныМОЛ.Представление;
	ОбластьМакета.Параметры.ДолжностьМОЛ = ДанныМОЛ.Должность;
			
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	ОбластьМакетаСтрокаВТенге  = Макет.ПолучитьОбласть("СтрокаТенге");
	ОбластьМакетаСтрокаВВалюте = Макет.ПолучитьОбласть("СтрокаВВалюте");
	ОбластьИтоговПоСтранице    = Макет.ПолучитьОбласть("Итоги");
	
	
	ПолеВИностраннойВалюте = Ложь;
	
	
	Если НЕ ВыборкаСтрокДенежныеСредства.НайтиСледующий(Новый Структура("Валюта", мВалютаРегламентированногоУчета)) Тогда
		
		ТабДокумент.Вывести(ОбластьМакетаСтрокаВТенге);
		
	Иначе 
		
		// Посчитаем общую сумму в тенге и выведем в строку счета учета
		СтрокаСчетовУчета = "";
		ИтогоСуммаФакт 	  = 0;
		ИтогоСуммаУчет	  = 0;
		
		ВыборкаСтрокВТенге = ВыборкаСтрокДенежныеСредства.Выбрать();
		Пока ВыборкаСтрокВТенге.Следующий() Цикл 
			СтрокаСчетовУчета = СтрокаСчетовУчета + СокрЛП(ВыборкаСтрокВТенге.СчетУчетаБУ) + ", ";
			ИтогоСуммаФакт    = ИтогоСуммаФакт 	  + ВыборкаСтрокВТенге.СуммаФакт;
			ИтогоСуммаУчет 	  = ИтогоСуммаУчет    + ВыборкаСтрокВТенге.СуммаУчет;
		КонецЦикла;
		
		// обрежем последние 2 символа (", ")
		СтрокаСчетовУчета = Лев(СтрокаСчетовУчета, СтрДлина(СтрокаСчетовУчета) - 2);
		
		ОбластьМакетаСтрокаВТенге.Параметры.СубСчетТенге = СтрокаСчетовУчета;
		ОбластьМакетаСтрокаВТенге.Параметры.ПоФактуТенге = ИтогоСуммаФакт;
		ОбластьМакетаСтрокаВТенге.Параметры.ПоУчетуТенге = ИтогоСуммаУчет;
			
		Разница = ИтогоСуммаФакт - ИтогоСуммаУчет;
			
		Если Разница < 0 Тогда 
			
			ОбластьМакетаСтрокаВТенге.Параметры.Недостача = Разница * -1;
				
		ИначеЕсли Разница > 0 Тогда 
				
			ОбластьМакетаСтрокаВТенге.Параметры.Излишки = Разница;
				
		КонецЕсли;
			
		ТабДокумент.Вывести(ОбластьМакетаСтрокаВТенге);
		
	КонецЕсли; 	
	
	
	НомерПП = 2;
	ВыборкаСтрокДенежныеСредства.Сбросить();
	Пока ВыборкаСтрокДенежныеСредства.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокДенежныеСредства.Валюта) Тогда
			Сообщить("В одной из строк не заполнено значение валюты - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
				
		
		Если ВыборкаСтрокДенежныеСредства.Валюта <> мВалютаРегламентированногоУчета Тогда 
									
			ПолеВИностраннойВалюте = Истина;
			
			// Посчитаем общую сумму в валюте и выведем в строку счета учета
			СтрокаСчетовУчета = "";
			ИтогоСуммаФакт 	  = 0;
			ИтогоСуммаУчет	  = 0;
			
			ВыборкаСтрокВВалюте = ВыборкаСтрокДенежныеСредства.Выбрать();
			Пока ВыборкаСтрокВВалюте.Следующий() Цикл 
				СтрокаСчетовУчета = СтрокаСчетовУчета + СокрЛП(ВыборкаСтрокВВалюте.СчетУчетаБУ) + ", ";
				ИтогоСуммаФакт 	  = ИтогоСуммаФакт 	  + ВыборкаСтрокВВалюте.СуммаФакт;
				ИтогоСуммаУчет 	  = ИтогоСуммаУчет 	  + ВыборкаСтрокВВалюте.СуммаУчет;
			КонецЦикла;
			
			// обрежем последние 2 символа (", ")
			СтрокаСчетовУчета = Лев(СтрокаСчетовУчета, СтрДлина(СтрокаСчетовУчета) - 2);

			ОбластьМакетаСтрокаВВалюте.Параметры.СубСчетВалюта = СтрокаСчетовУчета;
			ОбластьМакетаСтрокаВВалюте.Параметры.ПоФактуВалюта = ИтогоСуммаФакт;
			ОбластьМакетаСтрокаВВалюте.Параметры.ПоУчетуВалюта = ИтогоСуммаУчет;
			ОбластьМакетаСтрокаВВалюте.Параметры.Валюта 	   = ВыборкаСтрокДенежныеСредства.Валюта.НаименованиеПолное;
			ОбластьМакетаСтрокаВВалюте.Параметры.НомерПП 	   = НомерПП;
			
			Разница = ИтогоСуммаФакт - ИтогоСуммаУчет;
			
			Если Разница < 0 Тогда 
				
				ОбластьМакетаСтрокаВВалюте.Параметры.Недостача = Разница * -1;
				ОбластьМакетаСтрокаВВалюте.Параметры.Излишки   = 0;
				
			ИначеЕсли Разница > 0 Тогда 
				
				ОбластьМакетаСтрокаВВалюте.Параметры.Излишки   = Разница;
				ОбластьМакетаСтрокаВВалюте.Параметры.Недостача = 0;
				
			КонецЕсли;
			
			Если НомерПП = 2 Тогда
				ОбластьМакетаСтрокаВВалюте.Параметры.Описание = "Наличные денежные средства и эквиваленты денежных средств в иностранной валюте";
			Иначе
				ОбластьМакетаСтрокаВВалюте.Параметры.Описание = "";
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакетаСтрокаВВалюте);
			НомерПП = НомерПП + 1;
			
		КонецЕсли;
					
	КонецЦикла; 
	
	Если Не ПолеВИностраннойВалюте Тогда
		ОбластьМакетаСтрокаВВалюте.Параметры.НомерПП  = НомерПП;
		ОбластьМакетаСтрокаВВалюте.Параметры.Описание = "Наличные денежные средства и эквиваленты денежных средств в иностранной валюте";
		ТабДокумент.Вывести(ОбластьМакетаСтрокаВВалюте);
		
		НомерПП = НомерПП + 1;
	КонецЕсли;
	
	ОбластьПустыхСтрока = Макет.ПолучитьОбласть("СтрокаПустые");
	
	Для Счетчик = 1 По 6 Цикл
		ОбластьПустыхСтрока.Параметры["НомерПП" + Счетчик] = НомерПП;
		НомерПП = НомерПП + 1;
	КонецЦикла;		
	
	ТабДокумент.Вывести(ОбластьПустыхСтрока);                               
	ОбластьИтогов = Макет.ПолучитьОбласть("Итоги");
	
	ИтогоПоФакту   = "";
	ИтогоПоУчету   = "";
	ИтогоИзлишки   = "";
	ИтогоНедостача = "";

	ВыборкаСтрокДенежныеСредства.Сбросить();
	Пока ВыборкаСтрокДенежныеСредства.Следующий() Цикл 
		Если Не ИтогоПоФакту = "" Тогда
			ИтогоПоФакту   = ИтогоПоФакту + Символы.ПС;
			ИтогоПоУчету   = ИтогоПоУчету + Символы.ПС;
			ИтогоИзлишки   = ИтогоИзлишки + Символы.ПС;
			ИтогоНедостача = ИтогоНедостача + Символы.ПС;
		КонецЕсли;
		
		ИтогоПоФакту = ИтогоПоФакту + ОбщегоНазначения.ФорматСумм(ВыборкаСтрокДенежныеСредства.СуммаФакт, ВыборкаСтрокДенежныеСредства.Валюта);
		ИтогоПоУчету = ИтогоПоУчету + ОбщегоНазначения.ФорматСумм(ВыборкаСтрокДенежныеСредства.СуммаУчет, ВыборкаСтрокДенежныеСредства.Валюта);
		
		Разница = ВыборкаСтрокДенежныеСредства.СуммаФакт - ВыборкаСтрокДенежныеСредства.СуммаУчет;
		
		Если Разница < 0 Тогда 
			
			ИтогоИзлишки   = ИтогоИзлишки 	+ ОбщегоНазначения.ФорматСумм(0, ВыборкаСтрокДенежныеСредства.Валюта);
			ИтогоНедостача = ИтогоНедостача + ОбщегоНазначения.ФорматСумм(Разница * -1, ВыборкаСтрокДенежныеСредства.Валюта);
			
		ИначеЕсли Разница > 0 Тогда 
			
			ИтогоИзлишки   = ИтогоИзлишки 	+ ОбщегоНазначения.ФорматСумм(Разница, ВыборкаСтрокДенежныеСредства.Валюта);
			ИтогоНедостача = ИтогоНедостача + ОбщегоНазначения.ФорматСумм(0, ВыборкаСтрокДенежныеСредства.Валюта);
			
		Иначе 
			
			ИтогоИзлишки   = ИтогоИзлишки 	+ ОбщегоНазначения.ФорматСумм(0, ВыборкаСтрокДенежныеСредства.Валюта);
			ИтогоНедостача = ИтогоНедостача + ОбщегоНазначения.ФорматСумм(0, ВыборкаСтрокДенежныеСредства.Валюта);
			
		КонецЕсли;

	КонецЦикла;	
	
	ОбластьИтогов.Параметры.ИтогоПоФакту   = ИтогоПоФакту;
	ОбластьИтогов.Параметры.ИтогоПоУчету   = ИтогоПоУчету;
	ОбластьИтогов.Параметры.ИтогоИзлишки   = ИтогоИзлишки;
	ОбластьИтогов.Параметры.ИтогоНедостача = ИтогоНедостача;
	
	ТабДокумент.Вывести(ОбластьИтогов);

    	
	ОбластьМакетаКоммисия = Макет.ПолучитьОбласть("Комиссия");
	// Выведем подпись председателя инвентаризационной комиссии
	ПредседательКомиссии = ТаблицаИнвентаризационнаяКомиссия.Найти(Истина, "Председатель");
	
	Если НЕ (ПредседательКомиссии = Неопределено) Тогда
		
		ДанныеПредседателя = ПроцедурыУправленияПерсоналом.ДанныеФизЛица(Шапка.Организация, ПредседательКомиссии.ФизЛицо, Шапка.ДатаДокумента);
			
		ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
		ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = ДанныеПредседателя.Должность;
		ОбластьМакетаКоммисия.Параметры.ФИОКомиссии       = ДанныеПредседателя.Представление;
		
	Иначе
		
		ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
		ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = "";
		ОбластьМакетаКоммисия.Параметры.ФИОКомиссии       = "";
		
	КонецЕсли;
		
	ТабДокумент.Вывести(ОбластьМакетаКоммисия);
	
	// Выведем подписи членов комиссии
	ВыводитьЗаголовок = Истина;
	
	// Сформируем список членов комиссии
	СписокЧленовКомиссии = Новый Массив();
	
	Для Каждого Строка Из ТаблицаИнвентаризационнаяКомиссия Цикл
		Если НЕ Строка.Председатель Тогда
			СписокЧленовКомиссии.Добавить(Строка.ФизЛицо);
		КонецЕсли;
	КонецЦикла;
	
	ДанныеЧленовКомиссии = ПроцедурыУправленияПерсоналом.ДанныеФизЛиц(Шапка.Организация, СписокЧленовКомиссии, Шапка.ДатаДокумента);
	
	// Сначала выведем членов комиссии из выборки
	Для Каждого ЧленКомиссии Из ДанныеЧленовКомиссии Цикл
		
		ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ?(ВыводитьЗаголовок, 
		                                               ЗаголовокРазделаКомиссии.ЧленыКомиссии + ":",
													   "");
		ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = ЧленКомиссии.Должность;
		ОбластьМакетаКоммисия.Параметры.ФИОКомиссии       = ЧленКомиссии.Представление;
		
		ТабДокумент.Вывести(ОбластьМакетаКоммисия);
		
		ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
		
	КонецЦикла;
	
	// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
	Если ДанныеЧленовКомиссии.Количество() < 3 Тогда
		
		Для Итератор = (ДанныеЧленовКомиссии.Количество() + 1) По 3 Цикл
			
			ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ?(ВыводитьЗаголовок, 
			                                               ЗаголовокРазделаКомиссии.ЧленыКомиссии,
														   "");
			ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = "";
			ОбластьМакетаКоммисия.Параметры.ФИОКомиссии		  = "";
			
			ТабДокумент.Вывести(ОбластьМакетаКоммисия);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
	
	КонецЕсли;
	
	//выводим подвал	
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОписи");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	//Оборотная сторона
	ОбластьМакета = Макет.ПолучитьОбласть("Оборотнаясторона");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакетаКоммисия = Макет.ПолучитьОбласть("Комиссия1");
	// Выведем подпись председателя инвентаризационной комиссии
	ПредседательКомиссии = ТаблицаИнвентаризационнаяКомиссия.Найти(Истина, "Председатель");
	
	Если НЕ (ПредседательКомиссии = Неопределено) Тогда
		
		ДанныеПредседателя = ПроцедурыУправленияПерсоналом.ДанныеФизЛица(Шапка.Организация, ПредседательКомиссии.ФизЛицо, Шапка.ДатаДокумента);
			
		ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
		ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = ДанныеПредседателя.Должность;
		ОбластьМакетаКоммисия.Параметры.ФИОКомиссии       = ДанныеПредседателя.Представление;
		
	Иначе
		
		ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ЗаголовокРазделаКомиссии.ПредседательКомиссии;
		ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = "";
		ОбластьМакетаКоммисия.Параметры.ФИОКомиссии       = "";
		
	КонецЕсли;
		
	ТабДокумент.Вывести(ОбластьМакетаКоммисия);
	
	// Выведем подписи членов комиссии
	ВыводитьЗаголовок = Истина;
	
	// Сформируем список членов комиссии
	СписокЧленовКомиссии = Новый Массив();
	
	Для Каждого Строка Из ТаблицаИнвентаризационнаяКомиссия Цикл
		Если НЕ Строка.Председатель Тогда
			СписокЧленовКомиссии.Добавить(Строка.ФизЛицо);
		КонецЕсли;
	КонецЦикла;
	
	ДанныеЧленовКомиссии = ПроцедурыУправленияПерсоналом.ДанныеФизЛиц(Шапка.Организация, СписокЧленовКомиссии, Шапка.ДатаДокумента);
	
	// Сначала выведем членов комиссии из выборки
	Для Каждого ЧленКомиссии Из ДанныеЧленовКомиссии Цикл
		
		ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ?(ВыводитьЗаголовок, 
		                                               ЗаголовокРазделаКомиссии.ЧленыКомиссии,
													   "");
		ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = ЧленКомиссии.Должность;
		ОбластьМакетаКоммисия.Параметры.ФИОКомиссии       = ЧленКомиссии.Представление;
		
		ТабДокумент.Вывести(ОбластьМакетаКоммисия);
		
		ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
		
	КонецЦикла;
	
	// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
	Если ДанныеЧленовКомиссии.Количество() < 3 Тогда
				
		Для Итератор = (ДанныеЧленовКомиссии.Количество() + 1) По 3 Цикл
			
			ОбластьМакетаКоммисия.Параметры.ЗаголовокКомиссии = ?(ВыводитьЗаголовок, 
			                                               ЗаголовокРазделаКомиссии.ЧленыКомиссии,
														   "");
			ОбластьМакетаКоммисия.Параметры.ДолжностьКомиссии = "";
			ОбластьМакетаКоммисия.Параметры.ФИОКомиссии 	  = "";
			
			ТабДокумент.Вывести(ОбластьМакетаКоммисия);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
	
	КонецЕсли;
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьИНВ4()


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

 // Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	КонецЕсли;
	
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ИмяМакета = "ИНВ6" тогда
		ТабДокумент = ПечатьИНВ6();
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Ссылка);

КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ИНВ6","ИНВ-6 (Акт инвентаризации денежных средств)");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Заполняет документ по остаткам на складе
// 
Процедура ЗаполнитьПоОстаткамВКассе() Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Касса",        Касса);
	Запрос.УстановитьПараметр("КонецПериода", Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СчетКассы", 	  ПланыСчетов.Типовой.ДенежныеСредстваВКассе);
	
	ТекстЗапросаИнвентаризация = "ВЫБРАТЬ
	                             |	ТиповойОстатки.СуммаОстаток КАК Сумма,
	                             |	ТиповойОстатки.Счет КАК Счет,
	                             |	ТиповойОстатки.Валюта
	                             |ИЗ
	                             |	РегистрБухгалтерии.Типовой.Остатки(&КонецПериода, Счет В ИЕРАРХИИ (&СчетКассы), , Субконто1 В ИЕРАРХИИ (&Касса)) КАК ТиповойОстатки";
	
	Запрос.Текст = ТекстЗапросаИнвентаризация;

	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
		
	Для Каждого СтрокаТаблицы Из ТаблицаОстатков Цикл
		
		СтрокаТабличнойЧасти = ДенежныеСредства.Добавить();

		СтрокаТабличнойЧасти.Валюта      = СтрокаТаблицы.Валюта;
		СтрокаТабличнойЧасти.Сумма       = СтрокаТаблицы.Сумма;
		СтрокаТабличнойЧасти.СуммаУчет   = СтрокаТаблицы.Сумма;
		СтрокаТабличнойЧасти.СчетУчетаБУ = СтрокаТаблицы.Счет;
			
	КонецЦикла; 

КонецПроцедуры // ЗаполнитьПоОстаткамВКассе()

// Заполняет документ по остаткам на складе
// 
Процедура ЗаполнитьПоОстаткамОрганизации() Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КонецПериода", Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СчетКассы", ПланыСчетов.Типовой.ДенежныеСредстваВКассе);
	Запрос.УстановитьПараметр("Организация", Организация);  
	
	Если мОтображатьСтруктурныеПодразделения Тогда
		Запрос.УстановитьПараметр("СтруктурноеПодразделение", СтруктурноеПодразделение);
		УсловиеСтруктурноеПодразделение = " И СтруктурноеПодразделение = &СтруктурноеПодразделение ";
	Иначе
		УсловиеСтруктурноеПодразделение = "";
	КонецЕсли;
	
	ТекстЗапросаИнвентаризация = "ВЫБРАТЬ
	                             |	СУММА(ТиповойОстатки.СуммаОстаток) КАК Сумма,
	                             |	ТиповойОстатки.Счет КАК Счет,
	                             |	ТиповойОстатки.Валюта КАК Валюта
	                             |ИЗ
	                             |	РегистрБухгалтерии.Типовой.Остатки(&КонецПериода, Счет В ИЕРАРХИИ (&СчетКассы), , Организация = &Организация" + УсловиеСтруктурноеПодразделение + ") КАК ТиповойОстатки
	                             |СГРУППИРОВАТЬ ПО
	                             |	ТиповойОстатки.Счет,
	                             |	ТиповойОстатки.Валюта
	                             |";
	
	Запрос.Текст = ТекстЗапросаИнвентаризация;

	Результат   = Запрос.Выполнить().Выбрать();
		
	Пока Результат.Следующий() Цикл
		
		СтрокаТабличнойЧасти = ДенежныеСредства.Добавить();

		СтрокаТабличнойЧасти.Валюта     	= Результат.Валюта;
		СтрокаТабличнойЧасти.Сумма      	= Результат.Сумма;
		СтрокаТабличнойЧасти.СуммаУчет      = Результат.Сумма;
		СтрокаТабличнойЧасти.СчетУчетаБУ    = Результат.Счет;
			
	КонецЦикла;

КонецПроцедуры // ЗаполнитьПоОстаткамОрганизации()

Процедура ЗаполнитьПоОстаткам() Экспорт
	Если ВидОперации = Перечисления.ВидыОперацийИнвентаризацияДенежныхСредств.ПоКассе ТОгда
		
		Если ЗначениеЗаполнено(Касса) Тогда 
			ЗаполнитьПоОстаткамВКассе();
		Иначе 
			#Если Клиент тогда
				Сообщить("Не заполнено значение реквизита ""Касса"", заполнение табличной части невозможно", СтатусСообщения.Внимание);
			#КонецЕсли
		КонецЕсли;
		
	Иначе
		ЗаполнитьПоОстаткамОрганизации();
	КонецЕсли;
Конецпроцедуры // ЗаполнитьПоОстаткам()

// Процедура перезаполняет учетные количества в документе
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Процедура ПерезаполнитьУчетныеКоличества() Экспорт

	# Если Клиент Тогда

		Если ДенежныеСредства.Количество() > 0 Тогда
			ТекстВопроса = "Перезаполнить учетные суммы?";
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, Метаданные().Синоним);
			Если Ответ <> КодВозвратаДиалога.Да Тогда
				Возврат;
			КонецЕсли; 
		Иначе
			Возврат;
		КонецЕсли;
        		
	#КонецЕсли

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Касса",           Касса);
	Запрос.УстановитьПараметр("КонецПериода", Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СчетКассы", ПланыСчетов.Типовой.ДенежныеСредстваВКассе);
	Запрос.УстановитьПараметр("Организация", Организация);  
	
	Если мОтображатьСтруктурныеПодразделения Тогда
		Запрос.УстановитьПараметр("СтруктурноеПодразделение", СтруктурноеПодразделение);
		УсловиеСтруктурноеПодразделение = " И СтруктурноеПодразделение = &СтруктурноеПодразделение ";
	Иначе
		УсловиеСтруктурноеПодразделение = "";
	КонецЕсли;

	
	ТекстЗапросаИнвентаризация = "ВЫБРАТЬ
	                             |	ТиповойОстатки.СуммаОстаток КАК Сумма,
	                             |	ТиповойОстатки.Счет КАК Счет,
	                             |	ТиповойОстатки.Валюта
	                             |ИЗ
	                             |	РегистрБухгалтерии.Типовой.Остатки(&КонецПериода, Счет В ИЕРАРХИИ (&СчетКассы), , Субконто1 В ИЕРАРХИИ (&Касса)) КАК ТиповойОстатки";
								 
	
	ТекстЗапросаИнвентаризацияПоОрганизации = "ВЫБРАТЬ
	                             |	СУММА(ТиповойОстатки.СуммаОстаток) КАК Сумма,
	                             |	ТиповойОстатки.Счет КАК Счет,
	                             |	ТиповойОстатки.Валюта КАК Валюта
	                             |ИЗ
	                             |	РегистрБухгалтерии.Типовой.Остатки(&КонецПериода, Счет В ИЕРАРХИИ (&СчетКассы), , Организация = &Организация" + УсловиеСтруктурноеПодразделение + ") КАК ТиповойОстатки
	                             |СГРУППИРОВАТЬ ПО
	                             |	ТиповойОстатки.Счет,
	                             |	ТиповойОстатки.Валюта";
	
	 Если ВидОперации = Перечисления.ВидыОперацийИнвентаризацияДенежныхСредств.ПоКассе Тогда
		 Запрос.Текст = ТекстЗапросаИнвентаризация;
		 Результат   = Запрос.Выполнить().Выбрать();
	 Иначе     		 
		 Запрос.Текст = ТекстЗапросаИнвентаризацияПоОрганизации;
		 Результат   = Запрос.Выполнить().Выбрать();
	 КонецЕсли; 
	
	Для Каждого СтрокаТЧ Из ДенежныеСредства Цикл
		СтрокаТЧ.СуммаУчет = 0;
	КонецЦикла;
	    
	Пока Результат.Следующий() Цикл

		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Валюта", Результат.Валюта);
		СтруктураПоиска.Вставить("СчетУчетаБУ", Результат.Счет);
		
		ТаблицаСтрок = ДенежныеСредства.НайтиСтроки(СтруктураПоиска);
		
		Если (ТаблицаСтрок.Количество() > 0) Тогда		
			ТаблицаСтрок[0].СуммаУчет = Результат.Сумма;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // ПерезаполнитьУчетныеКоличества()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
мОтображатьСтруктурныеПодразделения = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделений();