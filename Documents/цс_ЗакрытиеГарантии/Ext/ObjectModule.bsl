////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
	
	// Процедура осуществляет печать документа. Можно направить печать на 
	// экран или принтер, а также распечатать необходмое количество копий.
	//
	//  Название макета печати передается в качестве параметра,
	// по переданному названию находим имя макета в соответствии.
	//
	// Параметры:
	//  НазваниеМакета - строка, название макета.
	//
	Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
		
		Если ЭтоНовый() Тогда
			Предупреждение("Документ можно распечатать только после его записи");
			Возврат;
		КонецЕсли;
		
		Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
			Возврат;
		КонецЕсли;
		
		//так как нет печатных форм у документа, по умолчанию
		//ТабДокумент = Неопределено
		ТабДокумент = Неопределено;
		
		Если ТабДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли;  
		
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект));
		
	КонецПроцедуры // Печать
	
#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура();
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект,  ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ТекущийПользователь(), , ,  , , );		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияПоБУХ();
	
КонецПроцедуры

Процедура ДвиженияПоБУХ()
	
	СчетУчетаДоп = ПолучитьДопСчетУчета(СчетГарантии);
	ПроводкиБУ = Движения.Типовой;
	ДатаДока = Дата;
	
	Для Каждого Стр из РасчетнаяТаблица Цикл
		
		
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = ДатаДока;
		Проводка.Организация = Организация;
		
		Проводка.СчетКт 	 = СчетГарантии;
		ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.Счеткт, Проводка.Субконтокт, 1, Стр.Контрагент);
		ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.Счеткт, Проводка.Субконтокт, 2, Стр.ДоговорКонтрагента);
		ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.Счеткт, Проводка.Субконтокт, 3, Стр.ТипыОперации);			
		ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.Счеткт, Проводка.Субконтокт, 4, Стр.Гарантия);			
		Проводка.Содержание = "Регистрация залогового обеспечения";
		
		Если Стр.СуммаГарантии <> 0 Тогда
			Проводка.Сумма = Стр.СуммаГарантии;
		Иначе
			Проводка.Сумма = Стр.СуммаОст;
		КонецЕсли;
		
		
		Если СчетУчетаДоп  <> Неопределено Тогда
			Проводка = ПроводкиБУ.Добавить();
			
			Проводка.Период      = ДатаДока;
			Проводка.Организация = Организация;
			
			Проводка.СчетДт 	 = СчетУчетаДоп;
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.Счетдт, Проводка.Субконтодт, 1, Стр.Контрагент);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.Счетдт, Проводка.Субконтодт, 2, Стр.ДоговорКонтрагента);
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.Счетдт, Проводка.Субконтодт, 3, Стр.ТипыОперации);			
			ПроцедурыБухгалтерскогоУчета.УстановитьСубконто(Проводка.Счетдт, Проводка.Субконтодт, 4, Стр.Гарантия);			
			Проводка.Содержание = "Регистрация залогового обеспечения";
			
			Если Стр.СуммаГарантии <> 0 Тогда
				Проводка.Сумма = Стр.СуммаГарантии;
			Иначе
				Проводка.Сумма = Стр.СуммаОст;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	Движения.Типовой.Записывать = Истина; 	
КонецПроцедуры


функция ПолучитьДопСчетУчета(Счетучета)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СчетУчета",СчетУчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	зм_СоответствиеСчетовУчетаДопСчетамУчета.СчетУчетаДоп
	|ИЗ
	|	РегистрСведений.зм_СоответствиеСчетовУчетаДопСчетамУчета КАК зм_СоответствиеСчетовУчетаДопСчетамУчета
	|ГДЕ
	|	зм_СоответствиеСчетовУчетаДопСчетамУчета.СчетУчета = &СчетУчета
	|";
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.СчетУчетаДоп;
	Иначе
		Возврат НЕОПРЕДЕЛЕНО;
	КонецЕсли;	
	
КонецФункции

