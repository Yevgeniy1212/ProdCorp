&НаКлиенте
//Хранит настройку пользователя "Открывать настройку движений"
Перем ОткрыватьНастройкуДвижений;


&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)	
	Объект.СтруктурноеПодразделение = Неопределено;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НеИзменять = Ложь;
	Док = РеквизитФормыВЗначение("Объект");
	
	//ЦС_ОбщегоНазначенияСервер.ЗаполнитьРеквизитыПриСозданииНаСервере(ЭтаФорма,Объект);
	
	
	Элементы.Организация.ТолькоПросмотр = Не УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ТекущийПользователь(), "УчетПоВсемОрганизациям");
	
	Если ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ПолучитьПризнакОтображенияСтруктурныхПодразделений() Тогда
		Элементы.СтруктурноеПодразделение.Видимость = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = Новый Структура("Организация, ОргИзменять", Объект.Организация,Элементы.Организация.ТолькоПросмотр);
	ВыбранныйЭлем = ОткрытьФормуМодально("ОбщаяФорма.ЦС_ФормаВыбораСтрукЕдУпр", СтруктураПараметров);

	Если ВыбранныйЭлем <> Неопределено Тогда
		Объект.СтруктурноеПодразделение	= ВыбранныйЭлем.СтруктурноеПодразделение;
		Если Объект.Организация <> ВыбранныйЭлем.организация Тогда
			 Объект.Организация = ВыбранныйЭлем.организация
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОткрыватьНастройкуДвижений = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ЦС_ОбщегоНазначенияКлиентСерверПовтИсп.ТекущийПользователь(), "ПоказыватьДвиженияПриПроведении");	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФормаПослеЗаписи(Объект.Проведен,ОткрыватьНастройкуДвижений,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
// Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)
	
	ОсновныеДействияФормыНастройкаНаСервере();
    	
КонецПроцедуры

&НаСервере
// Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройкаНаСервере()
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Параметры.Ключ.Пустая(),Объект.Ссылка, Ложь);	   	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицу(Команда)
	если не ПроверитьЗаполнение() тогда
		Возврат
	КонецЕсли;
	
	Если Объект.РасчетнаяТаблица.Количество()>0 Тогда
		ТекстВопроса = "Перед заполнением табличная часть будет очищена.Продолжить ?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		Объект.РасчетнаяТаблица.Очистить();
	КонецЕсли;
	ЗаполнитьТаблицуНаСервере(Объект.Дата,Объект.Ссылка);
КонецПроцедуры

Процедура ЗаполнитьТаблицуНаСервере(Дата,Ссылка = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТиповойОстатки.Субконто1 КАК Контрагент,
	|	ТиповойОстатки.Субконто2 КАК ДоговорКонтрагента,
	|	ТиповойОстатки.Субконто3 КАК ТипыОперации,
	|	ТиповойОстатки.Субконто4 КАК Гарантия,
	|	ТиповойОстатки.СуммаОстаток КАК СуммаОст
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	РегистрБухгалтерии.Типовой.Остатки(
	|			&ДатаДок,
	|			счет = &СчетГарантий,
	|			,
	|			Организация = &Организация
	|				И Субконто3 = &ТипОперации) КАК ТиповойОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Контрагент,
	|	ВТ.ДоговорКонтрагента,
	|	ВТ.Гарантия,
	|	ВТ.ТипыОперации,
	|	ВТ.СуммаОст
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Типовой.Остатки(
	|				&ДатаДок,
	|				Счет = &СчетБУ,
	|				&ВидыСубконто,
	|				ИСТИНА
	|					И Субконто3 = &ТипОперации) КАК ТиповойОстатки
	|		ПО ВТ.Контрагент = ТиповойОстатки.Субконто1
	|			И ВТ.ДоговорКонтрагента = ТиповойОстатки.Субконто2
	|			И ВТ.ТипыОперации = ТиповойОстатки.Субконто3
	|ГДЕ
	|	ЕСТЬNULL(ТиповойОстатки.СуммаОстаток, 0) <= 0";
	
	Период = Дата;
	
	Если Ссылка <> Неопределено тогда
		Если Ссылка.Проведен тогда
			Период = Ссылка.МоментВремени();			
		КонецЕсли;
	КонецЕсли;
	
	
	ВидыСубконто = новый Массив;
	ВидыСубконто.Добавить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоТиповые.Контрагенты"));
	ВидыСубконто.Добавить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоТиповые.Договоры"));
	ВидыСубконто.Добавить(ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоТиповые.ТипыОпераций"));
	Запрос.УстановитьПараметр("ДатаДок"		, Период);
	Запрос.УстановитьПараметр("Организация"	, Объект.Организация);
	Запрос.УстановитьПараметр("СчетБУ"		, Объект.СчетБУ);
	Запрос.УстановитьПараметр("СчетГарантий", Объект.СчетГарантии);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	Запрос.УстановитьПараметр("ТипОперации"	, Объект.ТипОперации);
	Запрос.УстановитьПараметр("Регистратор"	, Объект.Ссылка);
	
	Если объект.ТипОперации.Пустая() тогда
		Запрос.Текст = СтрЗаменить(запрос.Текст, "И Субконто3 = &ТипОперации", " ");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НовСтр = Объект.РасчетнаяТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуКонцомДня(Команда)
	
	Если Объект.РасчетнаяТаблица.Количество()>0 Тогда
		ТекстВопроса = "Перед заполнением табличная часть будет очищена.Продолжить ?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		Объект.РасчетнаяТаблица.Очистить();
	КонецЕсли;
	ЗаполнитьТаблицуНаСервере(Новый граница(Объект.Дата,ВидГраницы.Включая));

КонецПроцедуры

//&НаКлиенте
//Процедура УдалитьСтрокиСУдовлетворяющейГарантией(Команда)
//	
//	МассивУдаляемыхСтрок = Новый массив;
//	
//	Для Каждого СтрокаТЧ Из Объект.РасчетнаяТаблица Цикл
//		Если СтрокаТЧ.ЗарегистрированаГарантия >= СтрокаТЧ.СуммаОст 
//			И СтрокаТЧ.СуммаОст > 0 тогда
//			МассивУдаляемыхСтрок.Добавить(СтрокаТЧ);
//		КонецЕсли;
//	КонецЦикла;
//	
//	Для Каждого УдаляемаяСтрока из МассивУдаляемыхСтрок Цикл
//		объект.РасчетнаяТаблица.Удалить(УдаляемаяСтрока);	
//	КонецЦикла;
//	
//КонецПроцедуры

&НаКлиенте
Процедура РасчетнаяТаблицаПриИзменении(Элемент)
	РассчитатьСуммуДокумента(ЭтаФорма);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьСуммуДокумента(Форма)
	Объект = Форма.Объект;
	//Объект.СуммаДокумента = Объект.РасчетнаяТаблица.Итог("")
КонецПроцедуры


