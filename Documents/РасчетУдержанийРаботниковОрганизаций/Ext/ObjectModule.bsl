////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
//

Перем мПоддержкаРаботыСоСтруктурнымиПодразделениями Экспорт;

Перем мВалютаРегламентированногоУчета;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Выполняет формирование таблицы значений для загрузки ее в табличную часть Удержания
// Параметры:
// 	ВыборкаУдержания - выборка результатат запроса
//
// Возвращаемое значение:
//  таблица значений
//
Функция СформироватьТаблицуУдержаний(ВыборкаУдержаний)
	
	ТЗУдержания = Новый ТаблицаЗначений();
	ТЗУдержания.Колонки.Добавить("Физлицо");
	ТЗУдержания.Колонки.Добавить("ВидРасчета");
	ТЗУдержания.Колонки.Добавить("СпособРасчета");
	ТЗУдержания.Колонки.Добавить("Показатель1");
	ТЗУдержания.Колонки.Добавить("Показатель2");
	ТЗУдержания.Колонки.Добавить("Показатель3");
	ТЗУдержания.Колонки.Добавить("Показатель4");
	ТЗУдержания.Колонки.Добавить("Показатель5");
	ТЗУдержания.Колонки.Добавить("Показатель6");
	ТЗУдержания.Колонки.Добавить("ДатаНачала", ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	ТЗУдержания.Колонки.Добавить("ДатаОкончания", ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	ТЗУдержания.Колонки.Добавить("ДокументОснование");
	ТЗУдержания.Колонки.Добавить("Авторасчет");

	Пока ВыборкаУдержаний.Следующий() Цикл
		
		Для СчПоказателей = 1 По 6 Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаУдержаний["КурсВалюты" + СчПоказателей]) Тогда
				Сообщить("Для расчетного периода не задан курс валюты " + ВыборкаУдержаний["Валюта" + СчПоказателей] + "!", СтатусСообщения.Важное);
				ТЗУдержания.Очистить();
				Возврат ТЗУдержания;
			КонецЕсли;
		КонецЦикла;
		
		НоваяСтрока = ТЗУдержания.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаУдержаний);
		НоваяСтрока.Авторасчет = Истина;
		
	КонецЦикла;

	Возврат ТЗУдержания;
	
КонецФункции // СформироватьТаблицуУдержаний()

// Процедура подготавливает движения регистра начислений и доходов для 
// выполнения расчета удержаний за первую половину месяца
//
Процедура СформироватьДвиженияДляРасчетаПервойПоловиныМесяца(Налогоплательщик, НаборИПНИсчисленный, НаборИПНРасчетыСБюджетом, НаборОПВРасчетыСФондами, НаборВОСМСРасчетыСФондами, ФизЛицо = Неопределено)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("парамФизЛицо", ФизЛицо);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	СписокФизЛицТекст = "
	|ВЫБРАТЬ
	|	СтрокиТЧ.ФизЛицо
	|ИЗ
	|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныйИПН КАК СтрокиТЧ
	|ГДЕ
	|	СтрокиТЧ.Ссылка = &ДокументСсылка
	|	" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
	|
	|ОБЪЕДИНИТЬ // выбираем не повторяющиеся строки (разных физлиц)
	|
	|ВЫБРАТЬ
	|	СтрокиТЧ.ФизЛицо
	|ИЗ
	|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныйОПВ КАК СтрокиТЧ
	|ГДЕ
	|	СтрокиТЧ.Ссылка = &ДокументСсылка
	|	" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ
	|	СтрокиТЧ.ФизЛицо
	|ИЗ
	|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныеВзносыОСМС КАК СтрокиТЧ
	|ГДЕ
	|	СтрокиТЧ.Ссылка = &ДокументСсылка
	|	" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СтрокиТЧ.ФизЛицо
	|ИЗ
	|	Документ.РасчетУдержанийРаботниковОрганизаций.Удержания КАК СтрокиТЧ
	|ГДЕ
	|	СтрокиТЧ.Ссылка = &ДокументСсылка
	|	" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СтрокиТЧ.ФизЛицо
	|ИЗ
	|	Документ.РасчетУдержанийРаботниковОрганизаций.ПогашениеЗаймов КАК СтрокиТЧ
	|ГДЕ
	|	СтрокиТЧ.Ссылка = &ДокументСсылка
	|	" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СтрокиТЧ.ФизЛицо
	|ИЗ
	|	Документ.РасчетУдержанийРаботниковОрганизаций.НалоговыеВычеты КАК СтрокиТЧ
	|ГДЕ
	|	СтрокиТЧ.Ссылка = &ДокументСсылка
	|	" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
	|";
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетПервойПоловиныМесяца.ФизЛицо,
	|	РасчетПервойПоловиныМесяца.Сотрудник,
	|	РасчетПервойПоловиныМесяца.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	РасчетПервойПоловиныМесяца.ВидРасчета,
	|	РасчетПервойПоловиныМесяца.ДатаНачала,
	|	РасчетПервойПоловиныМесяца.ДатаОкончания,
	|	РасчетПервойПоловиныМесяца.ГрафикРаботы,
	|	РасчетПервойПоловиныМесяца.ВидУчетаВремени,
	|	РасчетПервойПоловиныМесяца.ДокументОснование,
	|	РасчетПервойПоловиныМесяца.ВидРасчета.ВидДохода КАК ВидДохода,
	|	РасчетПервойПоловиныМесяца.ВидРасчета.ОблагаетсяИПН КАК ОблагаетсяИПН,
	|	РасчетПервойПоловиныМесяца.ВидРасчета.ОблагаетсяОПВ КАК ОблагаетсяОПВ,
	|	РасчетПервойПоловиныМесяца.ВидРасчета.ОблагаетсяВОСМС КАК ОблагаетсяВОСМС,
	|	ЕСТЬNULL(УчетНалогообложенияПоВидамДоходов.УчитыватьИПН, ИСТИНА) КАК УчитыватьИПН,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьОПВ ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьОПВ
	|		КОГДА ЕСТЬNULL(РасчетПервойПоловиныМесяца.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьОПВ,
	|	ВЫБОР
	|		КОГДА НЕ (УчетНалогообложенияПоВидамДоходов.УчитыватьВОСМС ЕСТЬ NULL)
	|			ТОГДА УчетНалогообложенияПоВидамДоходов.УчитыватьВОСМС
	|		КОГДА ЕСТЬNULL(СтавкиОСМСПоНалогоплательщику.СтавкаВзносы, ЕСТЬNULL(СтавкиОСМС.СтавкаВзносы,0)) > 0 И ЕСТЬNULL(РасчетПервойПоловиныМесяца.ВидРасчета.ВидДохода, ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)) = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьВОСМС,
	|	РасчетПервойПоловиныМесяца.СуммаВзаиморасчетов,
	|	РасчетПервойПоловиныМесяца.НормаДнейПоПятидневке,
	|	РасчетПервойПоловиныМесяца.ПримененныйВычет,
	|	РасчетПервойПоловиныМесяца.ПримененнаяЛьгота,
	|	РасчетПервойПоловиныМесяца.РазрешенныйВычет
	|ИЗ
	|	РегистрНакопления.РасчетПервойПоловиныМесяца КАК РасчетПервойПоловиныМесяца
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (" + СписокФизЛицТекст + ") КАК СписокФизЛиц
	|   	ПО РасчетПервойПоловиныМесяца.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетНалогообложенияПоВидамДоходов.СрезПоследних(&ПериодРегистрации, ) КАК УчетНалогообложенияПоВидамДоходов
	|		ПО РасчетПервойПоловиныМесяца.ВидРасчета.ВидДохода = УчетНалогообложенияПоВидамДоходов.ВидДохода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахОСМС.СрезПоследних(&ПериодРегистрации, Налогоплательщик = &Организация) КАК СтавкиОСМСПоНалогоплательщику
	|		ПО РасчетПервойПоловиныМесяца.ВидРасчета.ВидДохода = СтавкиОСМСПоНалогоплательщику.ВидДохода
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахОСМС.СрезПоследних(&ПериодРегистрации, Налогоплательщик = &парамПустаяОрганизация) КАК СтавкиОСМС
	|		ПО РасчетПервойПоловиныМесяца.ВидРасчета.ВидДохода = СтавкиОСМС.ВидДохода
	|ГДЕ
	|	РасчетПервойПоловиныМесяца.Организация = &Организация
	|	И РасчетПервойПоловиныМесяца.Период МЕЖДУ &ПериодРегистрации И КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ)
	|";

	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипОсновныеНачисления = Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций");
	ТипДополнительныеНачисления = Тип("ПланВидовРасчетаСсылка.ДополнительныеНачисленияОрганизаций");
	
	НалогиСборыОтчисленияИПН = Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог;
	НалогиСборыОтчисленияОПВ = Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы;
	НалогиСборыОтчисленияВОСМС = Справочники.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование;
	
	Пока Выборка.Следующий() Цикл
	
		ТипВидаРасчета = ТипЗнч(Выборка.ВидРасчета);
	
		Если ТипВидаРасчета = ТипОсновныеНачисления 
		 ИЛИ ТипВидаРасчета = ТипДополнительныеНачисления Тогда
		
		    //////////////////////////////////
			// регистр расчета
			
			Если ТипЗнч(Выборка.ВидРасчета) = ТипОсновныеНачисления Тогда
				Движение = Движения.ОсновныеНачисленияРаботниковОрганизаций.Добавить();
				
				Движение.ПериодРегистрации		= ПериодРегистрации;
				Движение.ПериодДействияНачало 	= Выборка.ДатаНачала;
				Движение.ПериодДействияКонец 	= КонецДня(Выборка.ДатаОкончания);
				
				// Ресурсы - для корректного расчета вычетов запишим НормуДнейПоПятидневке
				Движение.НормаДнейПоПятидневке 	= Выборка.НормаДнейПоПятидневке;
				
				// Реквизиты
				Движение.ГрафикРаботы			= Выборка.ГрафикРаботы;
				Движение.ВидУчетаВремени		= Выборка.ВидУчетаВремени;
				
			ИначеЕсли ТипЗнч(Выборка.ВидРасчета) = ТипДополнительныеНачисления Тогда
				Движение = Движения.ДополнительныеНачисленияРаботниковОрганизаций.Добавить();
				
				Движение.ПериодРегистрации		= ?(Выборка.ДатаНачала > КонецМесяца(ПериодРегистрации), ПериодРегистрации, Макс(ПериодРегистрации, Выборка.ДатаНачала));
				Движение.БазовыйПериодНачало	= Выборка.ДатаНачала;
				Движение.БазовыйПериодКонец		= КонецДня(Выборка.ДатаОкончания);
				
				// Реквизиты
				Движение.ДокументОснование		= Выборка.ДокументОснование;
				
			КонецЕсли;
		

			Движение.ВидРасчета 	= Выборка.ВидРасчета;
			
			// Измерение
			Движение.ФизЛицо		= Выборка.ФизЛицо;
			Движение.Организация	= Выборка.ГоловнаяОрганизация;
			
			// Ресурсы - для расчетов удержаний нужна только сумма начисления, поэтому записываем только Результат
			Движение.Результат		= Выборка.СуммаВзаиморасчетов;
			
			// Реквизиты
			Движение.ОбособленноеПодразделение	= Организация;
			Движение.Сотрудник		= Выборка.Сотрудник;
			
			//////////////////////////////////
			// ИПНСведенияОДоходах
			Если Выборка.УчитыватьИПН Тогда
				
				Движение = Движения.ИПНСведенияОДоходах.мТаблицаДвижений.Добавить();
				
				// Свойства
				Движение.Период  = ПериодРегистрации;
				
				// Измерения
				Движение.ФизЛицо 				= Выборка.ФизЛицо;
				Движение.СтруктурнаяЕдиница 	= Организация; // во временном расчета структурная единица не важна, т.к. данные определяются в целом по налогоплательщику
				Движение.ПериодРегистрации 		= ПериодРегистрации;
				Движение.Организация	 		= Организация;
				Движение.Налогоплательщик 		= Налогоплательщик;
				Движение.СпособНалогообложения 	= Выборка.ОблагаетсяИПН;
				Движение.ВидРасчета			 	= Выборка.ВидРасчета;
				Движение.ВидДохода			 	= Выборка.ВидДохода;
				
				// Ресурсы
				Движение.СуммаДохода			= Выборка.СуммаВзаиморасчетов;
			
			КонецЕсли;
			
			//////////////////////////////////
			// ОПВСведенияОДоходах

			Если Выборка.УчитыватьОПВ Тогда
				
				Движение = Движения.ОПВСведенияОДоходах.мТаблицаДвижений.Добавить();
				
				// Свойства
				Движение.Период = ПериодРегистрации;
				
				// Измерения
				Движение.ФизЛицо			= Выборка.ФизЛицо;
				Движение.СтруктурнаяЕдиница = Организация;
				Движение.ПериодРегистрации	= ПериодРегистрации;
				Движение.Организация		= Организация;
				Движение.Налогоплательщик	= Налогоплательщик;
				Движение.СпособНалогообложения	= Выборка.ОблагаетсяОПВ;
				Движение.ВидРасчета			= Выборка.ВидРасчета;
				
				// Ресурсы
				Движение.СуммаДохода		= Выборка.СуммаВзаиморасчетов;
				
			КонецЕсли;
			
			//////////////////////////////////
			// ВОСМССведенияОДоходах

			Если Выборка.УчитыватьВОСМС Тогда
				
				Движение = Движения.ВОСМССведенияОДоходах.мТаблицаДвижений.Добавить();
				
				// Свойства
				Движение.Период = ПериодРегистрации;
				
				// Измерения
				Движение.ФизЛицо			= Выборка.ФизЛицо;
				Движение.СтруктурнаяЕдиница = Организация;
				Движение.ПериодРегистрации	= ПериодРегистрации;
				Движение.Организация		= Организация;
				Движение.Налогоплательщик	= Налогоплательщик;
				Движение.СпособНалогообложения	= Выборка.ОблагаетсяВОСМС;
				Движение.ВидРасчета			= Выборка.ВидРасчета;
				Движение.ВидДохода				= Выборка.ВидДохода;
				
				// Ресурсы
				Движение.СуммаДохода		= Выборка.СуммаВзаиморасчетов;
				
			КонецЕсли;
			
		ИначеЕсли Выборка.ВидРасчета = НалогиСборыОтчисленияИПН Тогда
		
			// формируем движения по регистру ИПНРасчетыСБюджетом, т.к.
			// в стандартной процедуре расчета ИПН происходит вычет ранее начисленного за месяца налога,
			// но поскольку это расчет первой половины месяца, то его данных нет в ИПНРасчетыСБюджетом,
			// и стандартная процедура расчета их не отнимет, поэтому создает записи самостоятельно.
			
			Движение = НаборИПНРасчетыСБюджетом.Добавить();
			
			// Свойства
			Движение.Период 		= КонецМесяца(ПериодРегистрации);
			Движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
			
			// Измерение
			Движение.ФизЛицо        		= Выборка.ФизЛицо;
			Движение.СтруктурнаяЕдиница 	= Организация;
			Движение.МесяцНалоговогоПериода = ПериодРегистрации;
			Движение.Организация			= Организация;
			Движение.Налогоплательщик		= Налогоплательщик;
			
			// Ресурсы
			Движение.Налог					= - Выборка.СуммаВзаиморасчетов;
			
			// Реквизиты
			Движение.ВидСтроки				= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление;
			
			// Добавим сведения о льготах и вычетах
			Движение = Движения.ИПНСведенияОДоходах.мТаблицаДвижений.Добавить();
				
			// Свойства
			Движение.Период = ПериодРегистрации;
			
			// Измерения
			Движение.ФизЛицо			= Выборка.ФизЛицо;
			Движение.СтруктурнаяЕдиница = Организация;
			Движение.ПериодРегистрации	= ПериодРегистрации;
			Движение.Организация		= Организация;
			Движение.Налогоплательщик	= Налогоплательщик;
			Движение.СпособНалогообложения	= Справочники.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом;

			Движение.ПримененныйВычет	= Выборка.ПримененныйВычет;
			Движение.ПримененнаяЛьгота	= Выборка.ПримененнаяЛьгота;
			Движение.РазрешенныйВычет	= Выборка.РазрешенныйВычет;
			
			// формируем движения по регистру ИПНИсчисленный
			Движение = НаборИПНИсчисленный.Добавить();
			
			// Свойства
			Движение.Период 				= КонецМесяца(ПериодРегистрации);
			
			// Измерение
			Движение.ФизЛицо        		= Выборка.ФизЛицо;
			Движение.СтруктурнаяЕдиница 	= Организация;
			Движение.МесяцНалоговогоПериода = ПериодРегистрации;
			Движение.Организация			= Организация;
			Движение.Налогоплательщик		= Налогоплательщик;
			Движение.ВидДохода				= Выборка.ВидДохода;
			
			// Ресурсы
			Движение.Налог					= - Выборка.СуммаВзаиморасчетов;
			
			// Реквизиты
			Движение.ВидСтроки				= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление;
			
			// Добавим сведения о льготах и вычетах
			Движение = Движения.ИПНСведенияОДоходах.мТаблицаДвижений.Добавить();
				
			// Свойства
			Движение.Период = ПериодРегистрации;
			
			// Измерения
			Движение.ФизЛицо			= Выборка.ФизЛицо;
			Движение.СтруктурнаяЕдиница = Организация;
			Движение.ПериодРегистрации	= ПериодРегистрации;
			Движение.Организация		= Организация;
			Движение.Налогоплательщик	= Налогоплательщик;
			Движение.СпособНалогообложения	= Справочники.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом;

			Движение.ПримененныйВычет	= Выборка.ПримененныйВычет;
			Движение.ПримененнаяЛьгота	= Выборка.ПримененнаяЛьгота;
			Движение.РазрешенныйВычет	= Выборка.РазрешенныйВычет;
			
		ИначеЕсли Выборка.ВидРасчета = НалогиСборыОтчисленияОПВ Тогда
		
			// тоже самое для ОПВРасчетыСФондами
			
			Движение = НаборОПВРасчетыСФондами.Добавить();
			
			// Свойства
			Движение.Период			= КонецМесяца(ПериодРегистрации);
			Движение.ВидДвижения	= ВидДвиженияНакопления.Приход;
			
			// Измерения
			Движение.ФизЛицо				= Выборка.ФизЛицо;
			Движение.СтруктурнаяЕдиница		= Организация;
			Движение.МесяцНалоговогоПериода	= ПериодРегистрации;
			Движение.ВидПлатежа				= Перечисления.ВидыПлатежейВБюджетИФонды.Налог;
			Движение.Организация			= Организация;
			Движение.Налогоплательщик		= Налогоплательщик;
			
			// Ресурсы
			Движение.Взнос					= - Выборка.СуммаВзаиморасчетов;
			
			// Реквизиты
			Движение.ВидСтроки				= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление;
			
		ИначеЕсли Выборка.ВидРасчета = НалогиСборыОтчисленияВОСМС Тогда
		
			// тоже самое для ВОСМСРасчетыСФондами
			
			Движение = НаборВОСМСРасчетыСФондами.Добавить();
			
			// Свойства
			Движение.Период			= КонецМесяца(ПериодРегистрации);
			Движение.ВидДвижения	= ВидДвиженияНакопления.Приход;
			
			// Измерения
			Движение.ФизЛицо				= Выборка.ФизЛицо;
			Движение.СтруктурнаяЕдиница		= Организация;
			Движение.МесяцНалоговогоПериода	= ПериодРегистрации;
			Движение.ВидПлатежа				= Перечисления.ВидыПлатежейВБюджетИФонды.Налог;
			Движение.Организация			= Организация;
			Движение.Налогоплательщик		= Налогоплательщик;
			
			// Ресурсы
			Движение.Взнос					= - Выборка.СуммаВзаиморасчетов;
			
			// Реквизиты
			Движение.ВидСтроки				= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // СформироватьДвиженияПоНачисленияДляРасчетаПервойПоловиныМесяца()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет автоматическое заполнение документа по данным документа и переданным параметрам
// 
// Параметры: 
//  нет
//
// Возвращаемое значение:
//  Логическое - удалось ли выполнить автоматическое заполнение документа
//
Функция Автозаполнение(ПостроительЗапроса = Неопределено, СписокФизЛиц = Неопределено) Экспорт

	ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
	ЭтоРасчетПервойПоловиныМесяца = (ПериодНачисления = Перечисления.ПериодНачисленияЗарплаты.ПерваяПоловинаТекущегоМесяца);
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	СписокРаботниковТекст = "";
	
	ПустоеПодразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	ПустойОтветственный = Справочники.Пользователи.ПустаяСсылка();
	СписокГруппИнвалидности = Новый СписокЗначений;
	СписокГруппИнвалидности.Добавить("I");
	СписокГруппИнвалидности.Добавить("II");
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Организация,
																		Организация,
																		глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц"),
																		Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	Иначе
		Налогоплательщик = Организация;
	КонецЕсли;
	
	Если ПодразделениеОрганизации = ПустоеПодразделение И Ответственный = ПустойОтветственный Тогда
		ПоВсемПодразделениямОрганизации = Истина;
		УсловиеНаПодразделение = "СписокФизЛиц.ПодразделениеОрганизации.Владелец = &парамОрганизация";
	ИначеЕсли ПодразделениеОрганизации = ПустоеПодразделение Тогда
		Если глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация].РасчетЗарплатыОрганизацииПоОтветственным Тогда
			ПоВсемПодразделениямОрганизации = Ложь;
			УсловиеНаПодразделение = "СписокФизЛиц.ПодразделениеОрганизации В ИЕРАРХИИ (ВЫБРАТЬ РАЗЛИЧНЫЕ Расчетчики.ПодразделениеОрганизации ИЗ РегистрСведений.РасчетчикиЗарплатыОрганизаций.СрезПоследних(&парамНачало) Расчетчики ГДЕ Расчетчики.Пользователь = &парамПользователь)";
		Иначе
			ПоВсемПодразделениямОрганизации = Истина;
			УсловиеНаПодразделение = "СписокФизЛиц.ПодразделениеОрганизации.Владелец = &парамОрганизация";
		КонецЕсли;
	Иначе
		ПоВсемПодразделениямОрганизации = Ложь;
		УсловиеНаПодразделение = "СписокФизЛиц.ПодразделениеОрганизации В ИЕРАРХИИ (&парамПодразделение)";
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ВидРасчета) Тогда
		УсловиеНаВидРасчета = "ПлановыеУдержания.ВидРасчета = &парамВидРасчета";
	Иначе
		УсловиеНаВидРасчета = "";
	КонецЕсли;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("парамНачало" , ПериодРегистрации);
	Запрос.УстановитьПараметр("парамКонец" , КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОрганизация" , Организация);
	Запрос.УстановитьПараметр("парамГоловнаяОрганизация" , ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("парамПользователь" , Ответственный);
	Запрос.УстановитьПараметр("парамПодразделение" , ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("парамДатаВалютногоУчета" , НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("парамПустаяВалюта" , Справочники.Валюты.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамВалютаРегламентУчета" , мВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("Год", Год(ПериодРегистрации));
	Запрос.УстановитьПараметр("Уволен", Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("Принят", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	Запрос.УстановитьПараметр("парамПриход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("парамИсчисление", Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
	Запрос.УстановитьПараметр("парамНалогВзнос", Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
	Запрос.УстановитьПараметр("парамВнутреннееСовместительство", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
	Запрос.УстановитьПараметр("парамИнвалид", Перечисления.ОтношениеКИнвалидности.Инвалид);
	Запрос.УстановитьПараметр("парамСписокГруппИнвалидности",  СписокГруппИнвалидности);
	Запрос.УстановитьПараметр("парамПустаяДата", '00010101');
	Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("парамДействиеПрекратить", Перечисления.ВидыДействияСНачислением.Прекратить);
	Запрос.УстановитьПараметр("парамРегистратор", Ссылка);
	Запрос.УстановитьПараметр("парамВидРасчета", ВидРасчета);
	Запрос.УстановитьПараметр("ТипыПоказателейБезВалюты", ПроведениеРасчетов.ПолучитьСписокТиповПоказателейСхемМотивацииНеТребующихУказанияВалюты());
	Запрос.УстановитьПараметр("ВидПоказателяИндивидуальный", Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный);
	Запрос.УстановитьПараметр("ПустойПоказатель", Справочники.ПоказателиСхемМотивации.ПустаяСсылка());
	Запрос.УстановитьПараметр("парамСписокУпрСпособовРасчета", ПроведениеРасчетов.ПолучитьСписокВариантовУпрНачислений());
	Запрос.УстановитьПараметр("парамСписокСпособовРасчетовФиксированнойСуммой", ПроведениеРасчетов.ПолучитьСписокСпособовРасчетовФиксированнойСуммой());
	Запрос.УстановитьПараметр("парамНалогоплательщик", Налогоплательщик);
	Запрос.УстановитьПараметр("парамСписокФизЛиц", СписокФизЛиц);
	Запрос.УстановитьПараметр("парамИндивидуальныйПредприниматель", Налогоплательщик.ИндивидуальныйПредприниматель);
	
	РасчетДляИП = (Налогоплательщик.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо);
	
	// узнаем учетную политику по налоговому учету
	ОрганизацияЯвляетсяПлательщикомСН = ПроцедурыНалоговогоУчета.ПолучитьПризнакПлательщикаСоциальногоНалога(Организация, ПериодРегистрации);
	
	// При автозаполнении будем исключать физлицо, если организация является ИП на основе СНР
	ИсключитьДанныеИП = (РасчетДляИП И НЕ ОрганизацияЯвляетсяПлательщикомСН);

	// Проверим ответственного - является ли он расчетчиком вообще и для заданного 
	// подразделения (если оно задано)
	Если Ответственный <> ПустойОтветственный Тогда
		Если глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации")[Организация].РасчетЗарплатыОрганизацииПоОтветственным Тогда
			Если ПодразделениеОрганизации = ПустоеПодразделение Тогда
				Запрос.Текст = 
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	Расчетчики.ПодразделениеОрганизации
				|ИЗ
				|	РегистрСведений.РасчетчикиЗарплатыОрганизаций.СрезПоследних(&парамНачало) КАК Расчетчики
				|
				|ГДЕ
				|	Расчетчики.Пользователь = &парамПользователь";
				Если Запрос.Выполнить().Пустой() Тогда
					Сообщить("Ответственный за этот документ не является расчетчиком ни одного из подразделений организации");
					Возврат  Ложь;
				КонецЕсли;
			Иначе
				Запрос.Текст = 
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	Подразделения.Ссылка
				|ИЗ
				|	Справочник.ПодразделенияОрганизаций КАК Подразделения
				|
				|ГДЕ
				|	Подразделения.Ссылка В ИЕРАРХИИ(&парамПодразделение) И
				|	(Подразделения.Ссылка В ИЕРАРХИИ (ВЫБРАТЬ РАЗЛИЧНЫЕ 	Расчетчики.ПодразделениеОрганизации ИЗ РегистрСведений.РасчетчикиЗарплатыОрганизаций.СрезПоследних(&парамНачало) КАК Расчетчики ГДЕ 	Расчетчики.Пользователь = &парамПользователь ))";
				Если Запрос.Выполнить().Пустой() Тогда
					Сообщить("Ответственный за этот документ не является расчетчиком для выбранного подразделения");
					Возврат  Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
			
	//СписокРаботниковТекст
	//Описание:
	//	Выбирает список работников, отвечающих условиям отбора, числящихся на начало месяца и принятых за месяц,
	//  а также переведенных в середине месяца из других обособленных подразделений
	Если ПостроительЗапроса = Неопределено Тогда
	
		СписокРаботниковТекст = "
		|		// срез работников на начало месяца
		|		ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|			СписокФизЛиц.Сотрудник.Физлицо КАК Физлицо
		|
		|		ПОМЕСТИТЬ ВТ_СписокРаботников
		|		ИЗ
		|			РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|						&парамНачало, 
		|						Организация = &парамГоловнаяОрганизация 
		|						" + ?(СписокФизЛиц <> Неопределено, "И Сотрудник.ФизЛицо В (&парамСписокФизЛиц)", "") + ") КАК СписокФизЛиц
		|		
		|		ГДЕ 
		|			СписокФизЛиц.ПричинаИзмененияСостояния <> &Уволен 
		|			И СписокФизЛиц.Организация = &парамГоловнаяОрганизация
		|			И СписокФизЛиц.ОбособленноеПодразделение = &парамОрганизация
		|			И СписокФизЛиц.ПричинаИзмененияСостояния <> &Уволен
		|			"+?(ПоВсемПодразделениямОрганизации, "", " И "+ УсловиеНаПодразделение)+"
		|		
		|		ОБЪЕДИНИТЬ
		|
		|		// движения работников за месяц
		|		ВЫБРАТЬ
		|			СписокФизЛиц.Сотрудник.Физлицо
		|		ИЗ
		|			РегистрСведений.РаботникиОрганизаций КАК СписокФизЛиц
		|
		|           ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|									ТекущееНазначение.Регистратор,
		|									ТекущееНазначение.НомерСтроки,
		|									МАКСИМУМ(ПредыдущееНазначение.Период) КАК ДатаПредыдущегоНазначения
		|								ИЗ
		|									РегистрСведений.РаботникиОрганизаций КАК ТекущееНазначение
		|									ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПредыдущееНазначение
		|										ПО ТекущееНазначение.Сотрудник = ПредыдущееНазначение.Сотрудник
		|											И ПредыдущееНазначение.Организация = &парамГоловнаяОрганизация
		|											И ПредыдущееНазначение.Период < ТекущееНазначение.Период
		|								ГДЕ
		|									ТекущееНазначение.Период > &парамНачало
		|									И ТекущееНазначение.Период <= &парамКонец
		|									И ТекущееНазначение.Организация = &парамГоловнаяОрганизация
		|									И ТекущееНазначение.ОбособленноеПодразделение = &парамОрганизация
		|									" + ?(СписокФизЛиц <> Неопределено, "И ТекущееНазначение.Сотрудник.ФизЛицо В (&парамСписокФизЛиц)", "") + "
		|								СГРУППИРОВАТЬ ПО
		|									ТекущееНазначение.Регистратор,
		|									ТекущееНазначение.НомерСтроки) КАК ДатыПредыдущихНазначений
		|				ПО СписокФизЛиц.Регистратор = ДатыПредыдущихНазначений.Регистратор
		|					И СписокФизЛиц.НомерСтроки = ДатыПредыдущихНазначений.НомерСтроки
		|	
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПредыдущиеНазначения
		|				ПО СписокФизЛиц.Сотрудник = ПредыдущиеНазначения.Сотрудник
		|					И ПредыдущиеНазначения.Организация = &парамГоловнаяОрганизация
		|					И ДатыПредыдущихНазначений.ДатаПредыдущегоНазначения = ПредыдущиеНазначения.Период 
		|		
		|		ГДЕ
		|			СписокФизЛиц.Период > &парамНачало
		|			И СписокФизЛиц.Период <= &парамКонец
		|			И СписокФизЛиц.Организация = &парамГоловнаяОрганизация
		|			И (СписокФизЛиц.ПричинаИзмененияСостояния = &Принят
		|					ИЛИ СписокФизЛиц.ОбособленноеПодразделение <> ПредыдущиеНазначения.ОбособленноеПодразделение) 
		|			И СписокФизЛиц.ОбособленноеПодразделение = &парамОрганизация
		|			" + ?(ПоВсемПодразделениямОрганизации, "", " И "+ УсловиеНаПодразделение) + "
		|			" + ?(СписокФизЛиц <> Неопределено, "И СписокФизЛиц.Сотрудник.ФизЛицо В (&парамСписокФизЛиц)", "") + "
		|
		|		ОБЪЕДИНИТЬ
		|
		|		ВЫБРАТЬ
		|			СписокФизЛиц.Сотрудник.Физлицо
		|		ИЗ
		|			РегистрСведений.ДоговорникиОрганизаций КАК СписокФизЛиц
		|
		|		ГДЕ
		|			СписокФизЛиц.ДатаОкончания >= &парамНачало
		|			И СписокФизЛиц.ДатаНачала <= &парамКонец
		|			И СписокФизЛиц.Организация = &парамГоловнаяОрганизация
		|			И СписокФизЛиц.ОбособленноеПодразделение = &парамОрганизация
		|			" + ?(ПоВсемПодразделениямОрганизации, "", " И " + УсловиеНаПодразделение) + "
		|			" + ?(СписокФизЛиц <> Неопределено, "И СписокФизЛиц.Сотрудник.ФизЛицо В (&парамСписокФизЛиц)", "") + "
		|
		|		ИНДЕКСИРОВАТЬ ПО
		|			ФизЛицо
		|";
	
		Запрос.Текст = СписокРаботниковТекст;
		Запрос.Выполнить();
		
	Иначе //Если ПостроительЗапроса <> Неопределено Тогда

		// Установим параметры запроса
		ПостроительЗапроса.Параметры.Вставить("парамНачало" , ПериодРегистрации);
		ПостроительЗапроса.Параметры.Вставить("парамКонец" , КонецМесяца(ПериодРегистрации));
		ПостроительЗапроса.Параметры.Вставить("парамОрганизация" , Организация);
		ПостроительЗапроса.Параметры.Вставить("парамГоловнаяОрганизация" , ГоловнаяОрганизация);
		ПостроительЗапроса.Параметры.Вставить("парамПользователь" , Ответственный);
		ПостроительЗапроса.Параметры.Вставить("парамПодразделение" , ПодразделениеОрганизации);
		ПостроительЗапроса.Параметры.Вставить("парамДатаВалютногоУчета" , НачалоМесяца(ПериодРегистрации));
		ПостроительЗапроса.Параметры.Вставить("парамПустаяВалюта" , Справочники.Валюты.ПустаяСсылка());
		ПостроительЗапроса.Параметры.Вставить("парамВалютаРегламентУчета" , мВалютаРегламентированногоУчета);
		ПостроительЗапроса.Параметры.Вставить("Год", Год(ПериодРегистрации));
		ПостроительЗапроса.Параметры.Вставить("Уволен", Перечисления.ПричиныИзмененияСостояния.Увольнение);
		ПостроительЗапроса.Параметры.Вставить("Принят", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
		ПостроительЗапроса.Параметры.Вставить("парамПриход", ВидДвиженияНакопления.Приход);
		ПостроительЗапроса.Параметры.Вставить("парамИсчисление", Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление);
		ПостроительЗапроса.Параметры.Вставить("парамНалогВзнос", Перечисления.ВидыПлатежейВБюджетИФонды.Налог);
		ПостроительЗапроса.Параметры.Вставить("парамВнутреннееСовместительство", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
		ПостроительЗапроса.Параметры.Вставить("парамИнвалид", Перечисления.ОтношениеКИнвалидности.Инвалид);
		ПостроительЗапроса.Параметры.Вставить("парамСписокГруппИнвалидности",  СписокГруппИнвалидности);
		ПостроительЗапроса.Параметры.Вставить("парамПустаяДата", '00010101');
		ПостроительЗапроса.Параметры.Вставить("Расход", ВидДвиженияНакопления.Расход);
		ПостроительЗапроса.Параметры.Вставить("парамДействиеПрекратить", Перечисления.ВидыДействияСНачислением.Прекратить);
		ПостроительЗапроса.Параметры.Вставить("парамРегистратор", Ссылка);
		ПостроительЗапроса.Параметры.Вставить("парамВидРасчета", ВидРасчета);
		ПостроительЗапроса.Параметры.Вставить("ТипыПоказателейБезВалюты", ПроведениеРасчетов.ПолучитьСписокТиповПоказателейСхемМотивацииНеТребующихУказанияВалюты());
		ПостроительЗапроса.Параметры.Вставить("ВидПоказателяИндивидуальный", Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный);
		ПостроительЗапроса.Параметры.Вставить("ПустойПоказатель", Справочники.ПоказателиСхемМотивации.ПустаяСсылка());
		ПостроительЗапроса.Параметры.Вставить("парамСписокУпрСпособовРасчета", ПроведениеРасчетов.ПолучитьСписокВариантовУпрНачислений());
		ПостроительЗапроса.Параметры.Вставить("парамСписокСпособовРасчетовФиксированнойСуммой", ПроведениеРасчетов.ПолучитьСписокСпособовРасчетовФиксированнойСуммой());
		ПостроительЗапроса.Параметры.Вставить("парамНалогоплательщик", Налогоплательщик);
		ПостроительЗапроса.Параметры.Вставить("парамСписокФизЛиц", СписокФизЛиц);
		ПостроительЗапроса.Параметры.Вставить("парамИндивидуальныйПредприниматель", Налогоплательщик.ИндивидуальныйПредприниматель);
		
		ИсходныйТекстПостроителя = ПостроительЗапроса.Текст;
		ТекстЗапросаПоСпискуРаботников = СтрЗаменить(ИсходныйТекстПостроителя,"РАЗРЕШЕННЫЕ","");
		ТекстЗапросаПоСпискуРаботников = Лев(ТекстЗапросаПоСпискуРаботников, Найти(ТекстЗапросаПоСпискуРаботников,"УПОРЯДОЧИТЬ") - 1);
		
		//СписокРаботниковТекст
		//Описание:
		//	Выбирает список работников, отвечающих условиям отбора, числящихся на начало месяца и принятых за месяц.
		СписокРаботниковТекст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	Работники.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТ_СписокРаботников
		|ИЗ
		|	(" + ТекстЗапросаПоСпискуРаботников + ") КАК Работники
		|
		|" + ?(СписокФизЛиц <> Неопределено, "ГДЕ Работники.ФизЛицо В (&парамСписокФизЛиц)", "") + "
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
	
		// получаем из ПостроителяЗапроса сам объект Запрос, чтобы в дальнейшем его использовать,
		// и присоединяем к этому запросу 
		ПостроительЗапроса.Текст = СписокРаботниковТекст;
		Запрос = ПостроительЗапроса.ПолучитьЗапрос();
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Выполнить();
		
	КонецЕсли;
		
	// заполнение табличной части "Удержания"
	//Основной текст запроса
	УдержанияТекст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлановыеУдержания.ФизЛицо КАК ФизЛицо,
	|	ПлановыеУдержания.ВидРасчета КАК ВидРасчета,
	|	ПлановыеУдержания.ДокументОснование КАК ДокументОснование,
	|	
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> &парамПустаяДата
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало
	|			ТОГДА ПлановыеУдержания.Показатель1Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель1
	|	КОНЕЦ КАК Показатель1,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> &парамПустаяДата
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало
	|			ТОГДА ПлановыеУдержания.Валюта1Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта1
	|	КОНЕЦ КАК Валюта1,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> &парамПустаяДата
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало
	|			ТОГДА ПлановыеУдержания.Показатель2Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель2
	|	КОНЕЦ КАК Показатель2,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> &парамПустаяДата
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало
	|			ТОГДА ПлановыеУдержания.Валюта2Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта2
	|	КОНЕЦ КАК Валюта2,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> &парамПустаяДата
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало
	|			ТОГДА ПлановыеУдержания.Показатель3Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель3
	|	КОНЕЦ КАК Показатель3,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> &парамПустаяДата
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало
	|			ТОГДА ПлановыеУдержания.Валюта3Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта3
	|	КОНЕЦ КАК Валюта3,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> &парамПустаяДата
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало
	|			ТОГДА ПлановыеУдержания.Показатель4Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель4
	|	КОНЕЦ КАК Показатель4,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> &парамПустаяДата
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало
	|			ТОГДА ПлановыеУдержания.Валюта4Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта4
	|	КОНЕЦ КАК Валюта4,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> &парамПустаяДата
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало
	|			ТОГДА ПлановыеУдержания.Показатель5Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель5
	|	КОНЕЦ КАК Показатель5,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> &парамПустаяДата
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало
	|			ТОГДА ПлановыеУдержания.Валюта5Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта5
	|	КОНЕЦ КАК Валюта5,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> &парамПустаяДата
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало
	|			ТОГДА ПлановыеУдержания.Показатель6Завершения
	|		ИНАЧЕ ПлановыеУдержания.Показатель6
	|	КОНЕЦ КАК Показатель6,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> &парамПустаяДата
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало
	|			ТОГДА ПлановыеУдержания.Валюта6Завершения
	|		ИНАЧЕ ПлановыеУдержания.Валюта6
	|	КОНЕЦ КАК Валюта6,
	|
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> &парамПустаяДата
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало
	|			ТОГДА ПлановыеУдержания.ПериодЗавершения
	|		ИНАЧЕ ПлановыеУдержания.Период
	|	КОНЕЦ КАК Период
	|
	|ПОМЕСТИТЬ ВТ_ПлановыеУдержанияСрезПоследних
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
	|			&парамНачало,
	|			Организация = &парамГоловнаяОрганизация
	|			И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТ_СписокРаботников КАК СписокФизЛиц)) КАК ПлановыеУдержания
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.ПериодЗавершения <> &парамПустаяДата
	|				И ПлановыеУдержания.ПериодЗавершения < &парамНачало
	|			ТОГДА ПлановыеУдержания.ДействиеЗавершения
	|		ИНАЧЕ ПлановыеУдержания.Действие
	|	КОНЕЦ <> &парамДействиеПрекратить
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеУдержания.ФизЛицо,
	|	ПлановыеУдержания.ВидРасчета,
	|	ПлановыеУдержания.ДокументОснование,
	|
	|	ПлановыеУдержания.Показатель1,
	|	ПлановыеУдержания.Валюта1,
	|
	|	ПлановыеУдержания.Показатель2,
	|	ПлановыеУдержания.Валюта2,
	|
	|	ПлановыеУдержания.Показатель3,
	|	ПлановыеУдержания.Валюта3,
	|
	|	ПлановыеУдержания.Показатель4,
	|	ПлановыеУдержания.Валюта4,
	|
	|	ПлановыеУдержания.Показатель5,
	|	ПлановыеУдержания.Валюта5,
	|
	|	ПлановыеУдержания.Показатель6,
	|	ПлановыеУдержания.Валюта6,
	|
	|	ПлановыеУдержания.Период
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокРаботников КАК СписокФизЛиц
	|		ПО ПлановыеУдержания.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|ГДЕ
	|	ПлановыеУдержания.Организация = &парамГоловнаяОрганизация
	|	И ПлановыеУдержания.Период > &парамНачало
	|	И ПлановыеУдержания.Период <= &парамКонец
	|	И ПлановыеУдержания.Действие <> &парамДействиеПрекратить
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлановыеУдержания.ФизЛицо,
	|	ПлановыеУдержания.ВидРасчета,
	|	ПлановыеУдержания.ДокументОснование,
	|
	|	ПлановыеУдержания.Показатель1Завершения,
	|	ПлановыеУдержания.Валюта1Завершения,
	|
	|	ПлановыеУдержания.Показатель2Завершения,
	|	ПлановыеУдержания.Валюта2Завершения,
	|
	|	ПлановыеУдержания.Показатель3Завершения,
	|	ПлановыеУдержания.Валюта3Завершения,
	|
	|	ПлановыеУдержания.Показатель4Завершения,
	|	ПлановыеУдержания.Валюта4Завершения,
	|
	|	ПлановыеУдержания.Показатель5Завершения,
	|	ПлановыеУдержания.Валюта5Завершения,
	|
	|	ПлановыеУдержания.Показатель6Завершения,
	|	ПлановыеУдержания.Валюта6Завершения,
	|
	|	ПлановыеУдержания.ПериодЗавершения
    |ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписокРаботников КАК СписокФизЛиц
	|		ПО ПлановыеУдержания.ФизЛицо = СписокФизЛиц.ФизЛицо
	|
	|ГДЕ
	|	ПлановыеУдержания.Организация = &парамГоловнаяОрганизация
	|	И ПлановыеУдержания.ПериодЗавершения МЕЖДУ &парамНачало И &парамКонец
	|	И ПлановыеУдержания.ДействиеЗавершения <> &парамДействиеПрекратить
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидРасчета,
	|	ДокументОснование
	|;
	|	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлановыеУдержания.ФизЛицо,
	|	ПлановыеУдержания.ВидРасчета,
	|	ПлановыеУдержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|
	|	ПлановыеУдержания.Показатель1,
	|	ПлановыеУдержания.Валюта1,
	|
	|	ПлановыеУдержания.Показатель2,
	|	ПлановыеУдержания.Валюта2,
	|
	|	ПлановыеУдержания.Показатель3,
	|	ПлановыеУдержания.Валюта3,
	|
	|	ПлановыеУдержания.Показатель4,
	|	ПлановыеУдержания.Валюта4,
	|
	|	ПлановыеУдержания.Показатель5,
	|	ПлановыеУдержания.Валюта5,
	|
	|	ПлановыеУдержания.Показатель6,
	|	ПлановыеУдержания.Валюта6,
	|
	|	ПлановыеУдержания.ДокументОснование,
	|	ПлановыеУдержания.Период
	|
	|ПОМЕСТИТЬ ВТ_ПлановыеУдержания
	|ИЗ
	|	ВТ_ПлановыеУдержанияСрезПоследних КАК ПлановыеУдержания
	|";
	
	Если ЭтоРасчетПервойПоловиныМесяца Тогда
	УдержанияТекст = УдержанияТекст + "
	|
	|	// для предотвращения дублирования удержаний за один период регистрации
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетПервойПоловиныМесяца КАК РанееСделанныеУдержания
	|		ПО РанееСделанныеУдержания.Регистратор ССЫЛКА Документ.РасчетУдержанийРаботниковОрганизаций
	|			И РанееСделанныеУдержания.Регистратор <> &парамРегистратор
	|			И ВЫБОР
	|				КОГДА ПлановыеУдержания.ВидРасчета.СпособРасчета В (&парамСписокСпособовРасчетовФиксированнойСуммой)
	|					ТОГДА РанееСделанныеУдержания.Организация.ГоловнаяОрганизация = &парамГоловнаяОрганизация
	|				ИНАЧЕ РанееСделанныеУдержания.Организация = &парамОрганизация
	|			КОНЕЦ
	|			И РанееСделанныеУдержания.ФизЛицо = ПлановыеУдержания.ФизЛицо 
	|			И РанееСделанныеУдержания.Период МЕЖДУ &парамНачало И &парамКонец
	|			И РанееСделанныеУдержания.ВидРасчета = ПлановыеУдержания.ВидРасчета 
	|			И ВЫБОР
	|				КОГДА НЕ(РанееСделанныеУдержания.ДокументОснование.Ссылка ЕСТЬ NULL)
	|					ТОГДА РанееСделанныеУдержания.ДокументОснование = ПлановыеУдержания.ДокументОснование
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ";
	Иначе 
	УдержанияТекст = УдержанияТекст + "
	|
	|	// для предотвращения дублирования удержаний за один период регистрации
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.УдержанияРаботниковОрганизаций КАК РанееСделанныеУдержания
	|		ПО РанееСделанныеУдержания.Регистратор ССЫЛКА Документ.РасчетУдержанийРаботниковОрганизаций 
	|			И РанееСделанныеУдержания.Регистратор <> &парамРегистратор 
	|			И ВЫБОР
	|				КОГДА ПлановыеУдержания.ВидРасчета.СпособРасчета В (&парамСписокСпособовРасчетовФиксированнойСуммой)
	|					ТОГДА РанееСделанныеУдержания.Организация = &парамГоловнаяОрганизация
	|				ИНАЧЕ РанееСделанныеУдержания.ОбособленноеПодразделение = &парамОрганизация
	|			КОНЕЦ
	|			И РанееСделанныеУдержания.ФизЛицо = ПлановыеУдержания.ФизЛицо 
	|			И РанееСделанныеУдержания.ПериодРегистрации = &парамНачало 
	|			И РанееСделанныеУдержания.ВидРасчета = ПлановыеУдержания.ВидРасчета 
	|			И ВЫБОР
	|				КОГДА НЕ (РанееСделанныеУдержания.ДокументОснование.Ссылка ЕСТЬ NULL)
	|					ТОГДА РанееСделанныеУдержания.ДокументОснование = ПлановыеУдержания.ДокументОснование
	|				ИНАЧЕ ИСТИНА
	|			  КОНЕЦ";
	КонецЕсли;
	
	УдержанияТекст = УдержанияТекст + "
	|
	|ГДЕ
	|	РанееСделанныеУдержания.ФизЛицо ЕСТЬ NULL
	|	" + ?(УсловиеНаВидРасчета <> "", " И " + УсловиеНаВидРасчета, "") + "
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлановыеУдержания.ФизЛицо,
	|	ПлановыеУдержания.ВидРасчета,
	|	ПлановыеУдержания.ВидРасчета.СпособРасчета,
	|
	|	ПлановыеУдержания.Показатель1,
	|	ПлановыеУдержания.Валюта1,
	|
	|	ПлановыеУдержания.Показатель2,
	|	ПлановыеУдержания.Валюта2,
	|
	|	ПлановыеУдержания.Показатель3,
	|	ПлановыеУдержания.Валюта3,
	|
	|	ПлановыеУдержания.Показатель4,
	|	ПлановыеУдержания.Валюта4,
	|
	|	ПлановыеУдержания.Показатель5,
	|	ПлановыеУдержания.Валюта5,
	|
	|	ПлановыеУдержания.Показатель6,
	|	ПлановыеУдержания.Валюта6,
	|
	|	ПлановыеУдержания.ДокументОснование,
	|	ПлановыеУдержания.Период
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗначенияПоказателейСхемМотивации.Сотрудник.ФизЛицо КАК ФизЛицо,
	|	ЗначенияПоказателейСхемМотивации.Показатель,
	|	ЗначенияПоказателейСхемМотивации.Значение,
	|	ЗначенияПоказателейСхемМотивации.Валюта,
	|	ВЫБОР
	|		КОГДА ЗначенияПоказателейСхемМотивации.Валюта = &парамВалютаРегламентУчета
	|				ИЛИ ЗначенияПоказателейСхемМотивации.Валюта = &парамПустаяВалюта
	|				ИЛИ ЗначенияПоказателейСхемМотивации.Показатель.ТипПоказателя В (&ТипыПоказателейБезВалюты)
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ЗначенияПоказателейСхемМотивацииВалюта.Курс / ЗначенияПоказателейСхемМотивацииВалюта.Кратность, 0)
	|	КОНЕЦ КАК КурсВалюты
	|
	|ПОМЕСТИТЬ ВТ_ЗначенияПоказателейСхемМотивации
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейСхемМотивации.СрезПоследних(
	|						&парамНачало,
	|						Организация = &парамОрганизация) КАК ЗначенияПоказателейСхемМотивации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК ЗначенияПоказателейСхемМотивацииВалюта
	|		ПО ЗначенияПоказателейСхемМотивацииВалюта.Период = &парамДатаВалютногоУчета
	|			И ЗначенияПоказателейСхемМотивации.Валюта = ЗначенияПоказателейСхемМотивацииВалюта.Валюта
	|	
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Показатель,
	|	ФизЛицо
	|;
	| 
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПлановыеУдержания.ВидРасчета,
	|	МАКСИМУМ(Показатели.НомерСтроки) КАК КоличествоПоказателей,
	|	Показатели1.Показатель КАК Показатель1,
	|	Показатели2.Показатель КАК Показатель2,
	|	Показатели3.Показатель КАК Показатель3,
	|	Показатели4.Показатель КАК Показатель4,
	|	Показатели5.Показатель КАК Показатель5,
	|	Показатели6.Показатель КАК Показатель6
	|ПОМЕСТИТЬ ВТ_ПоказателиУдержаний
	|ИЗ
	|	ВТ_ПлановыеУдержания КАК ПлановыеУдержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
	|		ПО ПлановыеУдержания.ВидРасчета = Показатели.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели1
	|		ПО ПлановыеУдержания.ВидРасчета = Показатели1.Ссылка
	|			И (Показатели1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели2
	|		ПО ПлановыеУдержания.ВидРасчета = Показатели2.Ссылка
	|			И (Показатели2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели3
	|		ПО ПлановыеУдержания.ВидРасчета = Показатели3.Ссылка
	|			И (Показатели3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели4
	|		ПО ПлановыеУдержания.ВидРасчета = Показатели4.Ссылка
	|			И (Показатели4.НомерСтроки = 4)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели5
	|		ПО ПлановыеУдержания.ВидРасчета = Показатели5.Ссылка
	|			И (Показатели5.НомерСтроки = 5)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели6
	|		ПО ПлановыеУдержания.ВидРасчета = Показатели6.Ссылка
	|			И (Показатели6.НомерСтроки = 6)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлановыеУдержания.ВидРасчета,
	|	Показатели1.Показатель,
	|	Показатели2.Показатель,
	|	Показатели3.Показатель,
	|	Показатели4.Показатель,
	|	Показатели5.Показатель,
	|	Показатели6.Показатель
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПлановыеУдержания.ФизЛицо,
	|	ПлановыеУдержания.ВидРасчета,
	|	ПлановыеУдержания.СпособРасчета,
	|
	|
	|	// Показатель1
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель1 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации1.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации1.КурсВалюты
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА ПлановыеУдержания.Валюта1 = &парамВалютаРегламентУчета 
	|						ИЛИ ПлановыеУдержания.Валюта1 = &парамПустаяВалюта 
	|					ТОГДА 1 
	|				ИНАЧЕ ЕСТЬNULL(Валюты1.Курс, 0) / ЕСТЬNULL(Валюты1.Кратность, 1)
	|			КОНЕЦ 
	|	КОНЕЦ КАК КурсВалюты1,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель1 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации1.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации1.Валюта
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА ПлановыеУдержания.Валюта1 = &парамВалютаРегламентУчета 
	|						ИЛИ ПлановыеУдержания.Валюта1 = &парамПустаяВалюта 
	|					ТОГДА &парамВалютаРегламентУчета
	|				ИНАЧЕ ПлановыеУдержания.Валюта1
	|			КОНЕЦ 
	|	КОНЕЦ КАК Валюта1,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель1 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации1.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации1.Значение * ЗначенияПоказателейСхемМотивации1.КурсВалюты
	|		ИНАЧЕ ПлановыеУдержания.Показатель1 * ВЫБОР 
	|												КОГДА ПлановыеУдержания.Валюта1 = &парамВалютаРегламентУчета 
	|														ИЛИ ПлановыеУдержания.Валюта1 = &парамПустаяВалюта 
	|													ТОГДА 1 
	|												ИНАЧЕ ЕСТЬNULL(Валюты1.Курс, 0) / ЕСТЬNULL(Валюты1.Кратность, 1)
	|											КОНЕЦ 
	|	КОНЕЦ КАК Показатель1,
	|
	|
	|	// Показатель2
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель2 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации2.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации2.КурсВалюты
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА ПлановыеУдержания.Валюта2 = &парамВалютаРегламентУчета 
	|						ИЛИ ПлановыеУдержания.Валюта2 = &парамПустаяВалюта 
	|					ТОГДА 1 
	|				ИНАЧЕ ЕСТЬNULL(Валюты2.Курс, 0) / ЕСТЬNULL(Валюты2.Кратность, 1)
	|			КОНЕЦ 
	|	КОНЕЦ КАК КурсВалюты2,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель2 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации2.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации2.Валюта
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА ПлановыеУдержания.Валюта2 = &парамВалютаРегламентУчета 
	|						ИЛИ ПлановыеУдержания.Валюта2 = &парамПустаяВалюта 
	|					ТОГДА &парамВалютаРегламентУчета
	|				ИНАЧЕ ПлановыеУдержания.Валюта2
	|			КОНЕЦ 
	|	КОНЕЦ КАК Валюта2,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель2 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации2.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации2.Значение * ЗначенияПоказателейСхемМотивации2.КурсВалюты
	|		ИНАЧЕ ПлановыеУдержания.Показатель2 * ВЫБОР 
	|												КОГДА ПлановыеУдержания.Валюта2 = &парамВалютаРегламентУчета 
	|														ИЛИ ПлановыеУдержания.Валюта2 = &парамПустаяВалюта 
	|													ТОГДА 1 
	|												ИНАЧЕ ЕСТЬNULL(Валюты2.Курс, 0) / ЕСТЬNULL(Валюты2.Кратность, 1)
	|											КОНЕЦ 
	|	КОНЕЦ КАК Показатель2,
	|
	|
	|	// Показатель3
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель3 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации3.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации3.КурсВалюты
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА ПлановыеУдержания.Валюта3 = &парамВалютаРегламентУчета 
	|						ИЛИ ПлановыеУдержания.Валюта3 = &парамПустаяВалюта 
	|					ТОГДА 1 
	|				ИНАЧЕ ЕСТЬNULL(Валюты3.Курс, 0) / ЕСТЬNULL(Валюты3.Кратность, 1)
	|			КОНЕЦ 
	|	КОНЕЦ КАК КурсВалюты3,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель3 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации3.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации3.Валюта
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА ПлановыеУдержания.Валюта3 = &парамВалютаРегламентУчета 
	|						ИЛИ ПлановыеУдержания.Валюта3 = &парамПустаяВалюта 
	|					ТОГДА &парамВалютаРегламентУчета
	|				ИНАЧЕ ПлановыеУдержания.Валюта3
	|			КОНЕЦ 
	|	КОНЕЦ КАК Валюта3,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель3 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации3.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации3.Значение * ЗначенияПоказателейСхемМотивации3.КурсВалюты
	|		ИНАЧЕ ПлановыеУдержания.Показатель3 * ВЫБОР 
	|												КОГДА ПлановыеУдержания.Валюта3 = &парамВалютаРегламентУчета 
	|														ИЛИ ПлановыеУдержания.Валюта3 = &парамПустаяВалюта 
	|													ТОГДА 1 
	|												ИНАЧЕ ЕСТЬNULL(Валюты3.Курс, 0) / ЕСТЬNULL(Валюты3.Кратность, 1)
	|											КОНЕЦ 
	|	КОНЕЦ КАК Показатель3,
	|
	|
	|	// Показатель4
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель4 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации4.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации4.КурсВалюты
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА ПлановыеУдержания.Валюта4 = &парамВалютаРегламентУчета 
	|						ИЛИ ПлановыеУдержания.Валюта4 = &парамПустаяВалюта 
	|					ТОГДА 1 
	|				ИНАЧЕ ЕСТЬNULL(Валюты4.Курс, 0) / ЕСТЬNULL(Валюты4.Кратность, 1)
	|			КОНЕЦ 
	|	КОНЕЦ КАК КурсВалюты4,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель4 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации4.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации4.Валюта
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА ПлановыеУдержания.Валюта4 = &парамВалютаРегламентУчета 
	|						ИЛИ ПлановыеУдержания.Валюта4 = &парамПустаяВалюта 
	|					ТОГДА &парамВалютаРегламентУчета
	|				ИНАЧЕ ПлановыеУдержания.Валюта4
	|			КОНЕЦ 
	|	КОНЕЦ КАК Валюта4,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель4 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации4.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации4.Значение * ЗначенияПоказателейСхемМотивации4.КурсВалюты
	|		ИНАЧЕ ПлановыеУдержания.Показатель4 * ВЫБОР 
	|												КОГДА ПлановыеУдержания.Валюта4 = &парамВалютаРегламентУчета 
	|														ИЛИ ПлановыеУдержания.Валюта4 = &парамПустаяВалюта 
	|													ТОГДА 1 
	|												ИНАЧЕ ЕСТЬNULL(Валюты4.Курс, 0) / ЕСТЬNULL(Валюты4.Кратность, 1)
	|											КОНЕЦ 
	|	КОНЕЦ КАК Показатель4,
	|
	|
	|	// Показатель5
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель5 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации5.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации5.КурсВалюты
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА ПлановыеУдержания.Валюта5 = &парамВалютаРегламентУчета 
	|						ИЛИ ПлановыеУдержания.Валюта5 = &парамПустаяВалюта 
	|					ТОГДА 1 
	|				ИНАЧЕ ЕСТЬNULL(Валюты5.Курс, 0) / ЕСТЬNULL(Валюты5.Кратность, 1)
	|			КОНЕЦ 
	|	КОНЕЦ КАК КурсВалюты5,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель5 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации5.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации5.Валюта
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА ПлановыеУдержания.Валюта5 = &парамВалютаРегламентУчета 
	|						ИЛИ ПлановыеУдержания.Валюта5 = &парамПустаяВалюта 
	|					ТОГДА &парамВалютаРегламентУчета
	|				ИНАЧЕ ПлановыеУдержания.Валюта5
	|			КОНЕЦ 
	|	КОНЕЦ КАК Валюта5,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель5 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации5.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации5.Значение * ЗначенияПоказателейСхемМотивации5.КурсВалюты
	|		ИНАЧЕ ПлановыеУдержания.Показатель5 * ВЫБОР 
	|												КОГДА ПлановыеУдержания.Валюта5 = &парамВалютаРегламентУчета 
	|														ИЛИ ПлановыеУдержания.Валюта5 = &парамПустаяВалюта 
	|													ТОГДА 1 
	|												ИНАЧЕ ЕСТЬNULL(Валюты3.Курс, 0) / ЕСТЬNULL(Валюты5.Кратность, 1)
	|											КОНЕЦ 
	|	КОНЕЦ КАК Показатель5,
	|
	|
	|	// Показатель6
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель6 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации6.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации6.КурсВалюты
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА ПлановыеУдержания.Валюта6 = &парамВалютаРегламентУчета 
	|						ИЛИ ПлановыеУдержания.Валюта6 = &парамПустаяВалюта 
	|					ТОГДА 1 
	|				ИНАЧЕ ЕСТЬNULL(Валюты6.Курс, 0) / ЕСТЬNULL(Валюты6.Кратность, 1)
	|			КОНЕЦ 
	|	КОНЕЦ КАК КурсВалюты6,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель6 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации6.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации6.Валюта
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА ПлановыеУдержания.Валюта6 = &парамВалютаРегламентУчета 
	|						ИЛИ ПлановыеУдержания.Валюта6 = &парамПустаяВалюта 
	|					ТОГДА &парамВалютаРегламентУчета
	|				ИНАЧЕ ПлановыеУдержания.Валюта6
	|			КОНЕЦ 
	|	КОНЕЦ КАК Валюта6,
	|	ВЫБОР
	|		КОГДА ПлановыеУдержания.СпособРасчета В (&парамСписокУпрСпособовРасчета)
	|				И ПоказателиУдержаний.Показатель6 <> &ПустойПоказатель
	|				И НЕ (ЗначенияПоказателейСхемМотивации6.Значение ЕСТЬ NULL)
	|			ТОГДА ЗначенияПоказателейСхемМотивации6.Значение * ЗначенияПоказателейСхемМотивации6.КурсВалюты
	|		ИНАЧЕ ПлановыеУдержания.Показатель6 * ВЫБОР 
	|												КОГДА ПлановыеУдержания.Валюта6 = &парамВалютаРегламентУчета 
	|														ИЛИ ПлановыеУдержания.Валюта6 = &парамПустаяВалюта 
	|													ТОГДА 1 
	|												ИНАЧЕ ЕСТЬNULL(Валюты6.Курс, 0) / ЕСТЬNULL(Валюты6.Кратность, 1)
	|											КОНЕЦ 
	|	КОНЕЦ КАК Показатель6,
	|
	|
	|	&парамНачало КАК ДатаНачала,
	|	&парамКонец КАК ДатаОкончания,
	|	ИСТИНА КАК Авторасчет,
	|	
	|	ПлановыеУдержания.ДокументОснование
	|ИЗ
	|	ВТ_ПлановыеУдержания КАК ПлановыеУдержания
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоказателиУдержаний КАК ПоказателиУдержаний
	|		ПО ПлановыеУдержания.ВидРасчета = ПоказателиУдержаний.ВидРасчета
	|
	|	// показатели мотивации
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации1
	|		ПО ПоказателиУдержаний.Показатель1 = ЗначенияПоказателейСхемМотивации1.Показатель
	|			И ВЫБОР
	|				КОГДА ЗначенияПоказателейСхемМотивации1.Показатель.ВидПоказателя = &ВидПоказателяИндивидуальный
	|					ТОГДА ПлановыеУдержания.ФизЛицо = ЗначенияПоказателейСхемМотивации1.ФизЛицо
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации2
	|		ПО ПоказателиУдержаний.Показатель2 = ЗначенияПоказателейСхемМотивации2.Показатель
	|			И ВЫБОР
	|				КОГДА ЗначенияПоказателейСхемМотивации2.Показатель.ВидПоказателя = &ВидПоказателяИндивидуальный
	|					ТОГДА ПлановыеУдержания.ФизЛицо = ЗначенияПоказателейСхемМотивации2.ФизЛицо
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации3
	|		ПО ПоказателиУдержаний.Показатель3 = ЗначенияПоказателейСхемМотивации3.Показатель
	|			И ВЫБОР
	|				КОГДА ЗначенияПоказателейСхемМотивации3.Показатель.ВидПоказателя = &ВидПоказателяИндивидуальный
	|					ТОГДА ПлановыеУдержания.ФизЛицо = ЗначенияПоказателейСхемМотивации3.ФизЛицо
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации4
	|		ПО ПоказателиУдержаний.Показатель4 = ЗначенияПоказателейСхемМотивации4.Показатель
	|			И ВЫБОР
	|				КОГДА ЗначенияПоказателейСхемМотивации4.Показатель.ВидПоказателя = &ВидПоказателяИндивидуальный
	|					ТОГДА ПлановыеУдержания.ФизЛицо = ЗначенияПоказателейСхемМотивации4.ФизЛицо
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации5
	|		ПО ПоказателиУдержаний.Показатель5 = ЗначенияПоказателейСхемМотивации5.Показатель
	|			И ВЫБОР
	|				КОГДА ЗначенияПоказателейСхемМотивации5.Показатель.ВидПоказателя = &ВидПоказателяИндивидуальный
	|					ТОГДА ПлановыеУдержания.ФизЛицо = ЗначенияПоказателейСхемМотивации5.ФизЛицо
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации6
	|		ПО ПоказателиУдержаний.Показатель6 = ЗначенияПоказателейСхемМотивации6.Показатель
	|			И ВЫБОР
	|				КОГДА ЗначенияПоказателейСхемМотивации6.Показатель.ВидПоказателя = &ВидПоказателяИндивидуальный
	|					ТОГДА ПлановыеУдержания.ФизЛицо = ЗначенияПоказателейСхемМотивации6.ФизЛицо
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты1
	|		ПО Валюты1.Период = &парамДатаВалютногоУчета И Валюты1.Валюта = ПлановыеУдержания.Валюта1
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты2
	|		ПО Валюты2.Период = &парамДатаВалютногоУчета И Валюты2.Валюта = ПлановыеУдержания.Валюта2
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты3
	|		ПО Валюты3.Период = &парамДатаВалютногоУчета И Валюты3.Валюта = ПлановыеУдержания.Валюта3
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты4
	|		ПО Валюты4.Период = &парамДатаВалютногоУчета И Валюты4.Валюта = ПлановыеУдержания.Валюта4
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты5
	|		ПО Валюты5.Период = &парамДатаВалютногоУчета И Валюты5.Валюта = ПлановыеУдержания.Валюта5
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом Как Валюты6
	|		ПО Валюты6.Период = &парамДатаВалютногоУчета И Валюты6.Валюта = ПлановыеУдержания.Валюта6
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПлановыеУдержания.Физлицо.Наименование,
	|	ПлановыеУдержания.ДокументОснование,
	|	ПлановыеУдержания.ВидРасчета,
	|	ПлановыеУдержания.Период
	|";	

	
	Запрос.Текст = УдержанияТекст;
	ВыборкаУдержаний = Запрос.Выполнить().Выбрать();
	ТЗУдержания = СформироватьТаблицуУдержаний(ВыборкаУдержаний);
	
	// Удалим из таблицы удержаний удержания почтового сбора, если для соответствующего документа-основания нет удержаний алиментов.
	// Такое может быть, если удержание по ИЛ фикс. суммой и уже было удержано в текущем месяце в другой обособленной организации.
	ТЗУдержания.Индексы.Добавить("ДокументОснование");
	ТЗУдержания.Индексы.Добавить("СпособРасчета");
	
	СтруктураПоиска = Новый Структура("СпособРасчета");
	СтруктураПоиска.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПочтовыйСбор;
	НайденныеСтрокиПочтовогоСбора = ТЗУдержания.НайтиСтроки(СтруктураПоиска);
	
	МассивУдаляемыхСтрок = Новый Массив();
	
	СтруктураПоиска.Очистить();
	СтруктураПоиска.Вставить("ДокументОснование");
	Для Каждого СтрокаПочтовогоСбора Из НайденныеСтрокиПочтовогоСбора Цикл
		СтруктураПоиска.ДокументОснование = СтрокаПочтовогоСбора.ДокументОснование;
		НайденныеСтрокиДокумента = ТЗУдержания.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтрокиДокумента.Количество() = 1 Тогда // только одна строка с таким документом-основанием - сам почтовый сбор
			// запоминаем, что надо удалить такую строку из таблицы значений
			МассивУдаляемыхСтрок.Добавить(СтрокаПочтовогоСбора);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого УдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл
		ТЗУдержания.Удалить(УдаляемаяСтрока);
	КонецЦикла;	
	
	// переносим из таблицы значений в табличную часть документа
	Если СписокФизЛиц = Неопределено Тогда
		// если список физлиц не указан, то считаем что полностью перезаполняем, поэтому очистим
		Удержания.Очистить();
	КонецЕсли;
	
	// построчно, чтобы не затирать существующие строки, т.к. возможен режим подбора
	Для Каждого СтрокаТЗ Из ТЗУдержания Цикл
		НоваяСтрока = Удержания.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
	КонецЦикла;
	
	Если УсловиеНаВидРасчета <> "" Тогда
		// если стоит отбор по виду удержания, то больше ничего не заполняем
		Возврат  Истина;
	КонецЕсли;
	
	// заполнение табличной части "ПогашениеЗаймов"
	ПогашениеЗаймовТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПогашениеЗаймовРаботникамиОстатки.ФизЛицо КАК ФизЛицо,
	|	ПогашениеЗаймовРаботникамиОстатки.ФизЛицо.Наименование КАК ФизЛицоНаименование,
	|	ПогашениеЗаймовРаботникамиОстатки.ДоговорЗайма КАК ДоговорЗайма,
	|	ИСТИНА КАК Авторасчет
	|ИЗ
	|	РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций.Остатки(
	|					&парамКонец, 
	|					Физлицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТ_СписокРаботников КАК СписокФизЛиц) 
	|					И Организация = &парамОрганизация) КАК ПогашениеЗаймовРаботникамиОстатки";
	
	Если ЭтоРасчетПервойПоловиныМесяца Тогда
	ПогашениеЗаймовТекст = ПогашениеЗаймовТекст + "
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетПервойПоловиныМесяца КАК ПогашениеЗаймовРаботникамиОбороты
	|		ПО ПогашениеЗаймовРаботникамиОбороты.ФизЛицо = ПогашениеЗаймовРаботникамиОстатки.ФизЛицо 
	|			И ПогашениеЗаймовРаботникамиОбороты.ДокументОснование = ПогашениеЗаймовРаботникамиОстатки.ДоговорЗайма
	|			И (ПогашениеЗаймовРаботникамиОбороты.Период >= &парамНачало) 
	|			И (ПогашениеЗаймовРаботникамиОбороты.Период <= &парамКонец) 
	|			И ПогашениеЗаймовРаботникамиОбороты.Организация = &парамОрганизация";
	Иначе
	ПогашениеЗаймовТекст = ПогашениеЗаймовТекст + "
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК ПогашениеЗаймовРаботникамиОбороты
	|		ПО ПогашениеЗаймовРаботникамиОбороты.ФизЛицо = ПогашениеЗаймовРаботникамиОстатки.ФизЛицо 
	|			И ПогашениеЗаймовРаботникамиОстатки.ДоговорЗайма = ПогашениеЗаймовРаботникамиОстатки.ДоговорЗайма 
	|			И (ПогашениеЗаймовРаботникамиОбороты.Период >= &парамНачало) 
	|			И (ПогашениеЗаймовРаботникамиОбороты.Период <= &парамКонец) 
	|			И (ПогашениеЗаймовРаботникамиОбороты.ВидДвижения = &Расход)
	|			И (ПогашениеЗаймовРаботникамиОбороты.УдержаноИзЗарплаты)
	|			И ПогашениеЗаймовРаботникамиОбороты.Организация = &парамОрганизация";
	КонецЕсли;
	
	ПогашениеЗаймовТекст = ПогашениеЗаймовТекст + "
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОЗаймах КАК СведенияОЗаймах
	|		ПО ПогашениеЗаймовРаботникамиОстатки.ДоговорЗайма = СведенияОЗаймах.ДоговорЗайма
	|			И ПогашениеЗаймовРаботникамиОстатки.ФизЛицо = СведенияОЗаймах.ФизЛицо
	|
	|ГДЕ
	|	(ПогашениеЗаймовРаботникамиОбороты.ФизЛицо) ЕСТЬ NULL  
	|	И ПогашениеЗаймовРаботникамиОстатки.ОсновнойДолгОстаток <> 0
	|	И СведенияОЗаймах.НачалоПогашения <= &парамКонец
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицоНаименование";

	Запрос.Текст = ПогашениеЗаймовТекст;
	ТЗПогашениеЗаймов = Запрос.Выполнить().Выгрузить();
	
	Если СписокФизЛиц = Неопределено Тогда
		// если список физлиц не указан, то считаем что полностью перезаполняем, поэтому очистим
		ПогашениеЗаймов.Очистить();
	КонецЕсли;
	
	// переносим в табличную часть документа, не затирая существующие строки
	Для Каждого СтрокаТЗ Из ТЗПогашениеЗаймов Цикл
		НоваяСтрока = ПогашениеЗаймов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
	КонецЦикла;

	СписокРаботниковТекст = "ВТ_СписокРаботников";
	Если ПостроительЗапроса = Неопределено Тогда   	// список физлиц для налогов может отличаться от списка физлиц для прочих удержаний,
													// т.к. могут еще быть уволенные, по которым нет прочих удержаний, но есть какие-то
													// выплаты дохода, с которых нужно взять налог 
													// (например, мат.помощь пенсионерам-бывшим работникам)
		
		СписокРаботниковТекст = 
		"	// срез работников на начало месяца
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		СписокФизЛиц.Сотрудник.Физлицо КАК Физлицо
		|	ПОМЕСТИТЬ ВТ_СписокРаботниковДляНалогов
		|	ИЗ
		|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|						&парамНачало, 
		|						Организация = &парамГоловнаяОрганизация 
		|						" + ?(СписокФизЛиц <> Неопределено, " И Сотрудник.ФизЛицо В (&парамСписокФизЛиц)", "") + ") КАК СписокФизЛиц
		|	ГДЕ
		|		СписокФизЛиц.Организация = &парамГоловнаяОрганизация
		|		И СписокФизЛиц.ОбособленноеПодразделение = &парамОрганизация
		|		И СписокФизЛиц.ПричинаИзмененияСостояния <> &Уволен
		|	"+?(ПоВсемПодразделениямОрганизации, "", "И "+УсловиеНаПодразделение)+"
		|		
		|	ОБЪЕДИНИТЬ
		|
		|	// движения работников за месяц
		|	ВЫБРАТЬ
		|		СписокФизЛиц.Сотрудник.Физлицо
		|	ИЗ
		|		РегистрСведений.РаботникиОрганизаций КАК СписокФизЛиц
		|
		|       ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|								ТекущееНазначение.Регистратор,
		|								ТекущееНазначение.НомерСтроки,
		|								МАКСИМУМ(ПредыдущееНазначение.Период) КАК ДатаПредыдущегоНазначения
		|							ИЗ
		|								РегистрСведений.РаботникиОрганизаций КАК ТекущееНазначение
		|								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПредыдущееНазначение
		|									ПО ТекущееНазначение.Сотрудник = ПредыдущееНазначение.Сотрудник
		|										И ПредыдущееНазначение.Организация = &парамГоловнаяОрганизация
		|										И ПредыдущееНазначение.Период < ТекущееНазначение.Период
		|							ГДЕ
		|								ТекущееНазначение.Период > &парамНачало
		|								И ТекущееНазначение.Период <= &парамКонец
		|								И ТекущееНазначение.Организация = &парамГоловнаяОрганизация
		|								И ТекущееНазначение.ОбособленноеПодразделение = &парамОрганизация
		|								" + ?(СписокФизЛиц <> Неопределено, "И ТекущееНазначение.Сотрудник.ФизЛицо В (&парамСписокФизЛиц)", "") + "
		|							СГРУППИРОВАТЬ ПО
		|								ТекущееНазначение.Регистратор,
		|								ТекущееНазначение.НомерСтроки) КАК ДатыПредыдущихНазначений
		|			ПО СписокФизЛиц.Регистратор = ДатыПредыдущихНазначений.Регистратор
		|				И СписокФизЛиц.НомерСтроки = ДатыПредыдущихНазначений.НомерСтроки
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПредыдущиеНазначения
		|			ПО СписокФизЛиц.Сотрудник = ПредыдущиеНазначения.Сотрудник
		|				И ПредыдущиеНазначения.Организация = &парамГоловнаяОрганизация
		|				И ДатыПредыдущихНазначений.ДатаПредыдущегоНазначения = ПредыдущиеНазначения.Период 
		|		
		|	ГДЕ
		|		СписокФизЛиц.Период > &парамНачало
		|		И СписокФизЛиц.Период <= &парамКонец
		|		И СписокФизЛиц.Организация = &парамГоловнаяОрганизация
		|		И (СписокФизЛиц.ПричинаИзмененияСостояния = &Принят
		|				ИЛИ СписокФизЛиц.ОбособленноеПодразделение <> ПредыдущиеНазначения.ОбособленноеПодразделение)
		|		И СписокФизЛиц.ОбособленноеПодразделение = &парамОрганизация
		|	" + ?(ПоВсемПодразделениямОрганизации, "", "И  "+УсловиеНаПодразделение) + "
		|	" + ?(СписокФизЛиц <> Неопределено, "И СписокФизЛиц.Сотрудник.ФизЛицо В (&парамСписокФизЛиц)", "") + "
		|
		|	ОБЪЕДИНИТЬ
		|
		|	ВЫБРАТЬ
		|		СписокФизЛиц.Сотрудник.Физлицо
		|	ИЗ
		|		РегистрСведений.ДоговорникиОрганизаций КАК СписокФизЛиц
		|
		|	ГДЕ
		|		СписокФизЛиц.ДатаОкончания >= &парамНачало
		|		И СписокФизЛиц.ДатаНачала <= &парамКонец
		|		И СписокФизЛиц.Организация = &парамОрганизация
		|	" + ?(ПоВсемПодразделениямОрганизации, "", "И "+УсловиеНаПодразделение) + "
		|	" + ?(СписокФизЛиц <> Неопределено, "И СписокФизЛиц.Сотрудник.ФизЛицо В (&парамСписокФизЛиц)", "") + "
		|
		|	ИНДЕКСИРОВАТЬ ПО
		|		ФизЛицо
		|";
		
		Запрос.Текст = СписокРаботниковТекст;
		Запрос.Выполнить();
		СписокРаботниковТекст = "ВТ_СписокРаботниковДляНалогов";
		
	КонецЕсли;
		
	// Добавим еще и тех людей, которые не являются работниками, но в расчетном месяце имеют
	// зарегистрированные суммы в регистре ИПНСведенияОДоходах или ОПВСведенияОДоходах, и 
	// при этом по ним нет расчетов ИПН и ОПВ за период регистрации (например, акты закупа)
	Если НЕ ЭтоРасчетПервойПоловиныМесяца Тогда
		СписокРаботниковТекст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РаботникиОрганизации.ФизЛицо КАК ФизЛицо
		|
		|ПОМЕСТИТЬ ВТ_ОкончательныйСписокРаботниковДляНалогов
		|ИЗ
		|	" + СписокРаботниковТекст + " КАК РаботникиОрганизации
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ИПНСведенияОДоходах.ФизЛицо
		|ИЗ
		|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|				&парамКонец, 
		|				Организация = &парамГоловнаяОрганизация) КАК РаботникиОрганизации
		|		ПО ИПНСведенияОДоходах.ФизЛицо = РаботникиОрганизации.Сотрудник.ФизЛицо
		|			И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
		|           И (ВЫБОР 
		|				КОГДА (РаботникиОрганизации.ПричинаИзмененияСостояния = &Уволен
		|					И РаботникиОрганизации.Период > &парамНачало)
		|					ИЛИ РаботникиОрганизации.ПричинаИзмененияСостояния <> &Уволен
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ)
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							ДоговорникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо
		|						ИЗ
		|							РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
		|						ГДЕ
		|							ДоговорникиОрганизации.ДатаОкончания >= &парамНачало
		|							И ДоговорникиОрганизации.ДатаНачала <= &парамКонец
		|							И ДоговорникиОрганизации.Организация = &парамОрганизация) КАК ДоговорникиОрганизации
		|		ПО ИПНСведенияОДоходах.ФизЛицо = ДоговорникиОрганизации.ФизЛицо
		|
		|ГДЕ
		|	ИПНСведенияОДоходах.Организация = &парамОрганизация И
		|	ИПНСведенияОДоходах.ПериодРегистрации = &парамНачало И
		|	РаботникиОрганизации.Сотрудник ЕСТЬ NULL И
		|	ДоговорникиОрганизации.ФизЛицо ЕСТЬ NULL 
		|	" + ?(СписокФизЛиц <> Неопределено, " И ИПНСведенияОДоходах.ФизЛицо В (&парамСписокФизЛиц)", "") + "
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ОПВСведенияОДоходах.ФизЛицо
		|ИЗ
		|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|				&парамКонец, 
		|				Организация = &парамГоловнаяОрганизация) КАК РаботникиОрганизации
		|		ПО ОПВСведенияОДоходах.ФизЛицо = РаботникиОрганизации.Сотрудник.ФизЛицо
		|			И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
		|           И (ВЫБОР 
		|				КОГДА (РаботникиОрганизации.ПричинаИзмененияСостояния = &Уволен
		|					И РаботникиОрганизации.Период > &парамНачало)
		|					ИЛИ РаботникиОрганизации.ПричинаИзмененияСостояния <> &Уволен
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ)
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							ДоговорникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо
		|						ИЗ
		|							РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
		|						ГДЕ
		|							ДоговорникиОрганизации.ДатаОкончания >= &парамНачало И
		|							ДоговорникиОрганизации.ДатаНачала <= &парамКонец И
		|							ДоговорникиОрганизации.Организация = &парамОрганизация) КАК ДоговорникиОрганизации
		|		ПО ОПВСведенияОДоходах.ФизЛицо = ДоговорникиОрганизации.ФизЛицо
		|
		|ГДЕ
		|	ОПВСведенияОДоходах.Организация = &парамОрганизация И
		|	ОПВСведенияОДоходах.ПериодРегистрации = &парамНачало И
		|	РаботникиОрганизации.Сотрудник ЕСТЬ NULL И 
		|	ДоговорникиОрганизации.ФизЛицо ЕСТЬ NULL 
		|	" + ?(СписокФизЛиц <> Неопределено, " И ОПВСведенияОДоходах.ФизЛицо В (&парамСписокФизЛиц)", "") + "
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВОСМССведенияОДоходах.ФизЛицо
		|ИЗ
		|	РегистрНакопления.ВОСМССведенияОДоходах КАК ВОСМССведенияОДоходах
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|				&парамКонец, 
		|				Организация = &парамГоловнаяОрганизация) КАК РаботникиОрганизации
		|		ПО ВОСМССведенияОДоходах.ФизЛицо = РаботникиОрганизации.Сотрудник.ФизЛицо
		|			И РаботникиОрганизации.ОбособленноеПодразделение = &парамОрганизация
		|           И (ВЫБОР 
		|				КОГДА (РаботникиОрганизации.ПричинаИзмененияСостояния = &Уволен
		|					И РаботникиОрганизации.Период > &парамНачало)
		|					ИЛИ РаботникиОрганизации.ПричинаИзмененияСостояния <> &Уволен
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ)
		|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							ДоговорникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо
		|						ИЗ
		|							РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
		|						ГДЕ
		|							ДоговорникиОрганизации.ДатаОкончания >= &парамНачало И
		|							ДоговорникиОрганизации.ДатаНачала <= &парамКонец И
		|							ДоговорникиОрганизации.Организация = &парамОрганизация) КАК ДоговорникиОрганизации
		|		ПО ВОСМССведенияОДоходах.ФизЛицо = ДоговорникиОрганизации.ФизЛицо
		|
		|ГДЕ
		|	ВОСМССведенияОДоходах.Организация = &парамОрганизация И
		|	ВОСМССведенияОДоходах.ПериодРегистрации = &парамНачало И
		|	РаботникиОрганизации.Сотрудник ЕСТЬ NULL И 
		|	ДоговорникиОрганизации.ФизЛицо ЕСТЬ NULL 
		|	" + ?(СписокФизЛиц <> Неопределено, " И ВОСМССведенияОДоходах.ФизЛицо В (&парамСписокФизЛиц)", "") + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";	
		
		Запрос.Текст = СписокРаботниковТекст;
		Запрос.Выполнить();
		
		СписокРаботниковТекст = "ВТ_ОкончательныйСписокРаботниковДляНалогов";
	КонецЕсли;
	
	// заполнение табличной части "НалоговыеВычеты"
	ДатаКонтроля = '2018-01-01';
	Если ПериодРегистрации < ДатаКонтроля Тогда
		НалоговыеВычетыТекст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	ИПНПлановыеВычеты.ФизЛицо,
		|	&парамНачало КАК МесяцНалоговогоПериода,
		|	ИПНПлановыеВычеты.ВычетИПН,
		|	ИПНПлановыеВычеты.ДокументОснование,
		|	ИСТИНА КАК Авторасчет
		|ИЗ
		|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах // берем вычеты только по тем лицам, по которым был доход в месяце
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокРаботниковТекст + " КАК Работники
		|		ПО ИПНСведенияОДоходах.ФизЛицо = Работники.ФизЛицо
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПлановыеНалоговыеВычетыФизлиц.СрезПоследних(
		|			&парамКонец,
		|			Налогоплательщик = &парамНалогоплательщик
		|			И МесяцНалоговогоПериода МЕЖДУ &парамНачало И &парамКонец) КАК ИПНПлановыеВычеты
		|		ПО ИПНСведенияОДоходах.ФизЛицо = ИПНПлановыеВычеты.ФизЛицо
		|			И ИПНПлановыеВычеты.СуммаВычета <> 0
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИПНСведенияОДоходах КАК УжеУчтенныеВычеты
		|		ПО ИПНПлановыеВычеты.ФизЛицо = УжеУчтенныеВычеты.ФизЛицо
		|			И ИПНПлановыеВычеты.ВычетИПН = УжеУчтенныеВычеты.ВидРасчета
		|			И ИПНПлановыеВычеты.ДокументОснование = УжеУчтенныеВычеты.ДокументОснование
		|			И УжеУчтенныеВычеты.Налогоплательщик = &парамНалогоплательщик
		|			И УжеУчтенныеВычеты.ПериодРегистрации МЕЖДУ &парамНачало И &парамКонец
		|ГДЕ
		|	ИПНСведенияОДоходах.ПериодРегистрации = &парамНачало
		|	И ИПНСведенияОДоходах.Организация = &парамОрганизация
		|	И НЕ (ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН)
		|	И УжеУчтенныеВычеты.ФизЛицо ЕСТЬ NULL // только те вычеты, которые еще не были предоставлены в месяце
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИПНПлановыеВычеты.ФизЛицо.Наименование
		|";
		
		Запрос.Текст = НалоговыеВычетыТекст;
		ТЗНалоговыеВычеты = Запрос.Выполнить().Выгрузить();
		
		Если СписокФизЛиц = Неопределено Тогда
			// если список физлиц не указан, то считаем что полностью перезаполняем, поэтому очистим
			НалоговыеВычеты.Очистить();
		КонецЕсли;
		
		// переносим в табличную часть документа, не затирая существующие строки
		Для Каждого СтрокаТЗ Из ТЗНалоговыеВычеты Цикл
			НоваяСтрока = НалоговыеВычеты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
		КонецЦикла;
		
	КонецЕсли;
	
	// заполнение табличной части "ИсчисленныйИПН"
	Если ЭтоРасчетПервойПоловиныМесяца Тогда

		ИсчисленныйИПНТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	Работники.ФизЛицо,
		|	&парамНачало КАК МесяцНалоговогоПериода
		|ИЗ
		|	РегистрНакопления.РасчетПервойПоловиныМесяца КАК РасчетПервойПоловиныМесяца
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокРаботниковТекст + " КАК Работники
		|		ПО РасчетПервойПоловиныМесяца.ФизЛицо = Работники.ФизЛицо
		|
		|ГДЕ
		|	РасчетПервойПоловиныМесяца.Период МЕЖДУ &парамНачало И &парамКонец И
		|	РасчетПервойПоловиныМесяца.Организация = &парамОрганизация И
		|	(РасчетПервойПоловиныМесяца.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
		|		ИЛИ РасчетПервойПоловиныМесяца.ВидРасчета ССЫЛКА ПланВидовРасчета.ДополнительныеНачисленияОрганизаций)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Работники.ФизЛицо.Наименование
		|";

	Иначе

		ИсчисленныйИПНТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	Работники.ФизЛицо,
		|	&парамНачало КАК МесяцНалоговогоПериода
		|ИЗ
		|	РегистрНакопления.ИПНСведенияОДоходах КАК ИПНСведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокРаботниковТекст + " КАК Работники
		|		ПО ИПНСведенияОДоходах.ФизЛицо = Работники.ФизЛицо
		|
		|ГДЕ
		|	ИПНСведенияОДоходах.ПериодРегистрации = &парамНачало И
		|	ИПНСведенияОДоходах.Организация = &парамОрганизация И
		|	НЕ (ИПНСведенияОДоходах.ВидРасчета ССЫЛКА Справочник.ВычетыИПН)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Работники.ФизЛицо.Наименование
		|";
		
	КонецЕсли;
	
	Запрос.Текст = ИсчисленныйИПНТекст;
	ТЗИсчисленныйИПН = Запрос.Выполнить().Выгрузить();
	
	Если СписокФизЛиц = Неопределено Тогда
		// если список физлиц не указан, то считаем что полностью перезаполняем, поэтому очистим
		ИсчисленныйИПН.Очистить();
	КонецЕсли;
	
	// переносим в табличную часть документа, не затирая существующие строки
	Для Каждого СтрокаТЗ Из ТЗИсчисленныйИПН Цикл
		НоваяСтрока = ИсчисленныйИПН.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
	КонецЦикла;
	
	// заполнение табличной части "ИсчисленныйОПВ"
	
	// ФизлицаБезПраваНаПенсию
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц не имеющих право на пенсионное обеспечение
	ФизлицаБезПраваНаПенсиюТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГражданствоФизЛиц.ФизЛицо
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
	|				&парамКонец,
	|				" + ?(СписокФизЛиц <> Неопределено, "ФизЛицо В (&парамСписокФизЛиц)", "") + ") КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеИмеетПравоНаПенсию)";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(
	|				&парамКонец,
	|				" + ?(СписокФизЛиц <> Неопределено, "ФизЛицо В (&парамСписокФизЛиц)", "") + ") КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)";

	// ФизлицаИнвалидыБессрочно
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-инвалидов I и II группы, у которых инвалидность установлена бессрочно
	ФизлицаИнвалидыБессрочноТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОбИнвалидностиФизлиц.ФизЛицо
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(
	|				&парамКонец,
	|				" + ?(СписокФизЛиц <> Неопределено, "ФизЛицо В (&парамСписокФизЛиц)", "") + ") КАК СведенияОбИнвалидностиФизлиц
	|
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = &парамИнвалид И
	|	СведенияОбИнвалидностиФизлиц.ГруппаИнвалидности В (&парамСписокГруппИнвалидности) И
	|	СведенияОбИнвалидностиФизлиц.СрокДействияСправки = &парамПустаяДата
	|";

	Если ЭтоРасчетПервойПоловиныМесяца Тогда

		ИсчисленныйОПВТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	Работники.ФизЛицо,
		|	&парамНачало КАК МесяцНалоговогоПериода
		|ИЗ
		|	РегистрНакопления.РасчетПервойПоловиныМесяца КАК РасчетПервойПоловиныМесяца
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокРаботниковТекст + " КАК Работники
		|		ПО РасчетПервойПоловиныМесяца.ФизЛицо = Работники.ФизЛицо
		|
		|ГДЕ
		|	РасчетПервойПоловиныМесяца.Период МЕЖДУ &парамНачало И &парамКонец И
		|	РасчетПервойПоловиныМесяца.Организация = &парамОрганизация И
		|	РасчетПервойПоловиныМесяца.ФизЛицо НЕ В (" + ФизлицаПенсионерыТекст + ") И
		|	РасчетПервойПоловиныМесяца.ФизЛицо НЕ В (" + ФизлицаБезПраваНаПенсиюТекст + ") И
		|	РасчетПервойПоловиныМесяца.ФизЛицо НЕ В (" + ФизлицаИнвалидыБессрочноТекст + ") И
		|	(РасчетПервойПоловиныМесяца.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
		|		ИЛИ РасчетПервойПоловиныМесяца.ВидРасчета ССЫЛКА ПланВидовРасчета.ДополнительныеНачисленияОрганизаций)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Работники.ФизЛицо.Наименование
		|";

	Иначе
	
		ИсчисленныйОПВТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	Работники.ФизЛицо,
		|	&парамНачало КАК МесяцНалоговогоПериода
		|ИЗ
		|	РегистрНакопления.ОПВСведенияОДоходах КАК ОПВСведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокРаботниковТекст + " КАК Работники
		|		ПО ОПВСведенияОДоходах.ФизЛицо = Работники.ФизЛицо
		|
		|ГДЕ
		|	ОПВСведенияОДоходах.ПериодРегистрации = &парамНачало И
		|	ОПВСведенияОДоходах.Организация = &парамОрганизация И
		|	ОПВСведенияОДоходах.ФизЛицо НЕ В (" + ФизлицаПенсионерыТекст + ") И
		|	ОПВСведенияОДоходах.ФизЛицо НЕ В (" + ФизлицаБезПраваНаПенсиюТекст + ") И
		|	ОПВСведенияОДоходах.ФизЛицо НЕ В (" + ФизлицаИнвалидыБессрочноТекст + ")
		|
		|УПОРЯДОЧИТЬ ПО
		|	Работники.ФизЛицо.Наименование
		|";
	
	КонецЕсли;
	
	Запрос.Текст = ИсчисленныйОПВТекст;
	ТЗИсчисленныйОПВ = Запрос.Выполнить().Выгрузить();

	Если СписокФизЛиц = Неопределено Тогда
		// если список физлиц не указан, то считаем что полностью перезаполняем, поэтому очистим
		ИсчисленныйОПВ.Очистить();
	КонецЕсли;
	
	// переносим в табличную часть документа, не затирая существующие строки
	Для Каждого СтрокаТЗ Из ТЗИсчисленныйОПВ Цикл
		НоваяСтрока = ИсчисленныйОПВ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
	КонецЦикла;
	
	// заполнение табличной части "ИсчисленныеВзносыОСМС"
	
	// ФизлицаБезМедицинскогоСоциальногоСтрахования
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц не подлежащих социальному страхованию
	ФизлицаБезМедицинскогоСоциальногоСтрахования = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	ГражданствоФизЛиц.ФизЛицо
	|ИЗ
	|	РегистрСведений.ГражданствоФизЛиц.СрезПоследних(
	|				&парамКонец,
	|				" + ?(СписокФизЛиц <> Неопределено, "ФизЛицо В (&парамСписокФизЛиц)", "") + ") КАК ГражданствоФизЛиц
	|
	|ГДЕ
	|	(ГражданствоФизЛиц.НеПодлежитСоциальномуМедицинскомуСтрахованию)";
	
	// ФизлицаИнвалиды
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц-инвалидов
	ФизлицаИнвалидыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОбИнвалидностиФизлиц.ФизЛицо
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамКонец,
	|				" + ?(СписокФизЛиц <> Неопределено, "ФизЛицо В (&парамСписокФизЛиц)", "") + ") КАК СведенияОбИнвалидностиФизлиц
	|
	|ГДЕ
	|	СведенияОбИнвалидностиФизлиц.ОтношениеКИнвалидности = &парамИнвалид
	|	И (СведенияОбИнвалидностиФизлиц.СрокДействияСправки = ДАТАВРЕМЯ(1,1,1) ИЛИ КОНЕЦПЕРИОДА(СведенияОбИнвалидностиФизлиц.СрокДействияСправки, ДЕНЬ) >= &парамКонец)
	|";
	
	// ФизлицаУчастникиВОВ
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц участников и инвалидов ВОВ
	ФизлицаУчастникиВОВТекст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СведенияОФизлицахУчастникахВОВ.ФизЛицо
	|ИЗ
	|	РегистрСведений.СведенияОФизлицахУчастникахВОВ.СрезПоследних(&парамКонец,
	|				" + ?(СписокФизЛиц <> Неопределено, "ФизЛицо В (&парамСписокФизЛиц)", "") + ") КАК СведенияОФизлицахУчастникахВОВ
	|
	|ГДЕ
	|	СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.УчастникВОВ)
	|	ИЛИ СведенияОФизлицахУчастникахВОВ.Статус = ЗНАЧЕНИЕ(Перечисление.КатегорииФизлицУчастниковВОВ.ИнвалидВОВ)
	|";
	
	// ФизлицаПенсионеры
	//	Поля:
	//		Физлицо
	//
	//	Описание:
	//	список физлиц достигших пенсионный возраст
	ФизлицаПенсионерыТекст = "
    |ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	СведенияОПенсионномОбеспеченииФизЛиц.ФизЛицо
	|ИЗ
	|	РегистрСведений.СведенияОПенсионномОбеспеченииФизЛиц.СрезПоследних(
	|				&парамКонец,
	|				" + ?(СписокФизЛиц <> Неопределено, "ФизЛицо В (&парамСписокФизЛиц)", "") + ") КАК СведенияОПенсионномОбеспеченииФизЛиц
	|
	|ГДЕ
	|	(СведенияОПенсионномОбеспеченииФизЛиц.Пенсионер)";
	
	Если ЭтоРасчетПервойПоловиныМесяца Тогда

		ИсчисленныеВзносыОСМСТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	Работники.ФизЛицо КАК ФизЛицо,
		|	&парамНачало КАК МесяцНалоговогоПериода
		|ИЗ
		|	РегистрНакопления.РасчетПервойПоловиныМесяца КАК РасчетПервойПоловиныМесяца
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокРаботниковТекст + " КАК Работники
		|		ПО РасчетПервойПоловиныМесяца.ФизЛицо = Работники.ФизЛицо
		|
		|ГДЕ
		|	РасчетПервойПоловиныМесяца.Период МЕЖДУ &парамНачало И &парамКонец И
		|	РасчетПервойПоловиныМесяца.Организация = &парамОрганизация И
		|	РасчетПервойПоловиныМесяца.ФизЛицо НЕ В (" + ФизлицаБезМедицинскогоСоциальногоСтрахования + ") И
		|	РасчетПервойПоловиныМесяца.ФизЛицо НЕ В (" + ФизлицаИнвалидыТекст + ") И
		|	РасчетПервойПоловиныМесяца.ФизЛицо НЕ В (" + ФизлицаУчастникиВОВТекст + ") И
		|	РасчетПервойПоловиныМесяца.ФизЛицо НЕ В (" + ФизлицаПенсионерыТекст + ") И
		|	(РасчетПервойПоловиныМесяца.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
		|		ИЛИ РасчетПервойПоловиныМесяца.ВидРасчета ССЫЛКА ПланВидовРасчета.ДополнительныеНачисленияОрганизаций)
		|"+ ?(НЕ ИсключитьДанныеИП И ЗначениеЗаполнено(Налогоплательщик.ИндивидуальныйПредприниматель) И ПериодРегистрации >= Дата(2017,7,1), "        
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	&парамИндивидуальныйПредприниматель,
		|	&парамНачало", "") + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизЛицо
		|";

	Иначе
	
		ИсчисленныеВзносыОСМСТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	Работники.ФизЛицо КАК ФизЛицо,
		|	&парамНачало КАК МесяцНалоговогоПериода
		|ИЗ
		|	РегистрНакопления.ВОСМССведенияОДоходах КАК ВОСМССведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + СписокРаботниковТекст + " КАК Работники
		|		ПО ВОСМССведенияОДоходах.ФизЛицо = Работники.ФизЛицо
		|
		|ГДЕ
		|	ВОСМССведенияОДоходах.ПериодРегистрации = &парамНачало И
		|	ВОСМССведенияОДоходах.Организация = &парамОрганизация И
		|	ВОСМССведенияОДоходах.ФизЛицо НЕ В (" + ФизлицаБезМедицинскогоСоциальногоСтрахования + ") И
		|	ВОСМССведенияОДоходах.ФизЛицо НЕ В (" + ФизлицаИнвалидыТекст + ") И
		|	ВОСМССведенияОДоходах.ФизЛицо НЕ В (" + ФизлицаУчастникиВОВТекст + ") И
		|	ВОСМССведенияОДоходах.ФизЛицо НЕ В (" + ФизлицаПенсионерыТекст + ")
		|"+ ?(НЕ ИсключитьДанныеИП И ЗначениеЗаполнено(Налогоплательщик.ИндивидуальныйПредприниматель) И ПериодРегистрации >= Дата(2017,7,1), "        
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	&парамИндивидуальныйПредприниматель,
		|	&парамНачало", "") + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизЛицо
		|";
	
	КонецЕсли;
	
	Запрос.Текст = ИсчисленныеВзносыОСМСТекст;
	ТЗИсчисленныеВзносыОСМС = Запрос.Выполнить().Выгрузить();

	Если СписокФизЛиц = Неопределено Тогда
		// если список физлиц не указан, то считаем что полностью перезаполняем, поэтому очистим
		ИсчисленныеВзносыОСМС.Очистить();
	КонецЕсли;
	
	// переносим в табличную часть документа, не затирая существующие строки
	Для Каждого СтрокаТЗ Из ТЗИсчисленныеВзносыОСМС Цикл
		НоваяСтрока = ИсчисленныеВзносыОСМС.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
	КонецЦикла;
	
КонецФункции // Автозаполнение()

// Процедура рассчитывает налоги и взносы.
// 
Процедура РассчитатьНалогиИВзносы(НалоговыеВычетыРассчитаны = Ложь) Экспорт
	
	Если Не ПроцедурыУправленияПерсоналом.РегламентированныйКалендарьЗаполнен(НачалоМесяца(ПериодРегистрации), КонецМесяца(ПериодРегистрации), Истина) Тогда
		Возврат;
	КонецЕсли;

	Отказ = Ложь;
	
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект);
	
	ИсчислениеНалоговСтруктурныхЕдиниц = глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц");
	
	НачатьТранзакцию();
	
	//Очистим движения
	НаборОПВРасчетыСФондами = РегистрыНакопления.ОПВРасчетыСФондами.СоздатьНаборЗаписей();
	НаборОПВРасчетыСФондами.Отбор.Регистратор.Значение = Ссылка;
	НаборОПВРасчетыСФондами.Записать();// сначала удалим существующие движения
	
	//Очистим движения
	НаборВОСМСИсчисленные = РегистрыНакопления.ВОСМСИсчисленные.СоздатьНаборЗаписей();
	НаборВОСМСИсчисленные.Отбор.Регистратор.Значение = Ссылка;
	НаборВОСМСИсчисленные.Записать();// сначала удалим существующие движения
	
	//СведенияОбИсчисленииВычетовИПН
	НаборСведенияОбИсчисленииВычетовИПН = РегистрыНакопления.СведенияОбИсчисленииВычетовИПН.СоздатьНаборЗаписей();
	НаборСведенияОбИсчисленииВычетовИПН.Отбор.Регистратор.Значение = Ссылка;
	НаборСведенияОбИсчисленииВычетовИПН.Записать();
	
	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	// позиционируем выборку
	ВыборкаПоШапкеДокумента.Следующий();
	
	ДатаКонтроля = '2018-01-01';
	
	Если ПериодРегистрации < ДатаКонтроля И НЕ НалоговыеВычетыРассчитаны Тогда
	
		// удалим старые движения
		Движения.ИПНСведенияОДоходах.Очистить();
		Движения.ИПНСведенияОДоходах.мТаблицаДвижений = Движения.ИПНСведенияОДоходах.Выгрузить();
		
		ВыборкаПоСтрокамДокумента = СформироватьЗапросПоТабличнымЧастям(ВыборкаПоШапкеДокумента, Ложь, Истина, Ложь).Выбрать();
		Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл
			ПроверитьЗаполнениеСтроки(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок);
			Если Не Отказ Тогда
				Если ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "НалоговыеВычеты" Тогда
					ДобавитьСтрокуНалоговыеВычеты(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, ИсчислениеНалоговСтруктурныхЕдиниц);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ Отказ Тогда
			// запишем наборы в базу
			Движения.ИПНСведенияОДоходах.мТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
			Движения.ИПНСведенияОДоходах.Загрузить(Движения.ИПНСведенияОДоходах.мТаблицаДвижений);
			Движения.ИПНСведенияОДоходах.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат;
	КонецЕсли;
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ВыборкаПоШапкеДокумента.Организация, 
																		ВыборкаПоШапкеДокумента.Организация, 
																		ИсчислениеНалоговСтруктурныхЕдиниц, 
																		Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	Иначе
		Налогоплательщик = ВыборкаПоШапкеДокумента.Организация;
	КонецЕсли;
	
	// Получение результата ОПВ по ставке 10%
	// Составим текст запроса для выбора списка физлиц, по которым надо считать ОПВ
	СписокФизлицТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Работники.Физлицо КАК Физлицо
	|ИЗ
	|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныйОПВ КАК Работники
	|
	|ГДЕ
	|	Работники.Ссылка = &парамРегистратор";
	
	ДанныеОПВ = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаОПВ(Неопределено, ВыборкаПоШапкеДокумента.ПериодРегистрации, Налогоплательщик, ВыборкаПоШапкеДокумента.Ссылка, СписокФизлицТекст);
	Если ДанныеОПВ <> НеОпределено Тогда
		ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымОПВ(ИсчисленныйОПВ, ПериодРегистрации, НаборОПВРасчетыСФондами, ДанныеОПВ, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , , , Не ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
	КонецЕсли;

	НаборОПВРасчетыСФондами.Записать();
	
	// Составим текст запроса для выбора списка физлиц, по которым надо считать ОПВ
	СписокФизлицТекстВОСМС = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Работники.Физлицо КАК Физлицо
	|ИЗ
	|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныеВзносыОСМС КАК Работники
	|
	|ГДЕ
	|	Работники.Ссылка = &парамРегистратор";
	
	// Составим текст запроса для выбора списка физлиц, по которым надо считать ИПН
	СписокФизлицТекстИПН = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Работники.Физлицо КАК Физлицо
	|ИЗ
	|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныйИПН КАК Работники
	|
	|ГДЕ
	|	Работники.Ссылка = &парамРегистратор";
	
    ПроведениеРасчетов.ПроверитьПерерасчетИПНДоходОтНалоговогоАгентаДо2020(ЭтотОбъект);
    
	Если ПроведениеРасчетовПолныеПрава.ПрименятьКорректировкуПрочихНалоговВзносовОтчислений(ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ПериодРегистрации) Тогда
		
		ДополнительныеПараметрыЗапроса = Новый Структура;
		ДополнительныеПараметрыЗапроса.Вставить("ТолькоДоходОтНалоговогоАгента", Истина);
	
		ДанныеВОСМС = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаВОСМС(Неопределено, ВыборкаПоШапкеДокумента.ПериодРегистрации, Налогоплательщик, ВыборкаПоШапкеДокумента.Ссылка, СписокФизлицТекстВОСМС, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса);
		Если ДанныеВОСМС <> НеОпределено Тогда
			ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымВОСМС(ИсчисленныеВзносыОСМС, ПериодРегистрации, НаборВОСМСИсчисленные, ДанныеВОСМС, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , , , Не ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
		КонецЕсли;
		
		НаборВОСМСИсчисленные.Записать();
		
		// Расчет вычетов ИПН
		ДанныеВычетовИПН = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаВычетовИПН(ВыборкаПоШапкеДокумента.ПериодРегистрации,  Налогоплательщик, ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, ВыборкаПоШапкеДокумента.Ссылка, СписокФизлицТекстИПН);
		Если ДанныеВычетовИПН <> НеОпределено Тогда                                                                                                                                                                                                                                               
			ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымВычетовИПН(ВычетыИПН, ПериодРегистрации, НаборСведенияОбИсчисленииВычетовИПН, ДанныеВычетовИПН, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , , , , НЕ ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
			// Запишем расчитанные вычеты для расчета ИПН
			НаборСведенияОбИсчисленииВычетовИПН.Записать();
		КонецЕсли;
		
		НаборВОСМСИсчисленные.Очистить();
		НаборВОСМСИсчисленные.Записать();

		ДополнительныеПараметрыЗапроса.Удалить("ТолькоДоходОтНалоговогоАгента");
		// Расчет ИПН
		// получение результата ИПН по прогрессивной шкале ставок
		ДанныеИПН = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаИПН(Неопределено, ПериодРегистрации,  Налогоплательщик, ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, Ссылка, СписокФизлицТекстИПН);
		Если ДанныеИПН <> НеОпределено Тогда
			ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымИПН(ИсчисленныйИПН, ПериодРегистрации, Неопределено, ДанныеИПН, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , , , , Не ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
		КонецЕсли;

		ДанныеВОСМС = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаВОСМС(Неопределено, ВыборкаПоШапкеДокумента.ПериодРегистрации, Налогоплательщик, ВыборкаПоШапкеДокумента.Ссылка, СписокФизлицТекстВОСМС, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации);
		Если ДанныеВОСМС <> НеОпределено Тогда
			ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымВОСМС(ИсчисленныеВзносыОСМС, ПериодРегистрации, НаборВОСМСИсчисленные, ДанныеВОСМС, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , , , Не ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
		КонецЕсли;

		НаборВОСМСИсчисленные.Записать();
		
	Иначе
		ДанныеВОСМС = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаВОСМС(Неопределено, ВыборкаПоШапкеДокумента.ПериодРегистрации, Налогоплательщик, ВыборкаПоШапкеДокумента.Ссылка, СписокФизлицТекстВОСМС, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации);
		Если ДанныеВОСМС <> НеОпределено Тогда
			ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымВОСМС(ИсчисленныеВзносыОСМС, ПериодРегистрации, НаборВОСМСИсчисленные, ДанныеВОСМС, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , , , Не ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
		КонецЕсли;

		НаборВОСМСИсчисленные.Записать();

	   	// Расчет вычетов ИПН
		ДанныеВычетовИПН = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаВычетовИПН(ВыборкаПоШапкеДокумента.ПериодРегистрации,  Налогоплательщик, ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, ВыборкаПоШапкеДокумента.Ссылка, СписокФизлицТекстИПН);
		Если ДанныеВычетовИПН <> НеОпределено Тогда                                                                                                                                                                                                                                               
			ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымВычетовИПН(ВычетыИПН, ПериодРегистрации, НаборСведенияОбИсчисленииВычетовИПН, ДанныеВычетовИПН, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , , , , НЕ ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
			// Запишем расчитанные вычеты для расчета ИПН
			НаборСведенияОбИсчисленииВычетовИПН.Записать();
		КонецЕсли;
		
		// Расчет ИПН
		// получение результата ИПН по прогрессивной шкале ставок
		ДанныеИПН = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаИПН(Неопределено, ПериодРегистрации,  Налогоплательщик, ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, Ссылка, СписокФизлицТекстИПН);
		Если ДанныеИПН <> НеОпределено Тогда
			ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымИПН(ИсчисленныйИПН, ПериодРегистрации, Неопределено, ДанныеИПН, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , , , , Не ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
		КонецЕсли;
	КонецЕсли;
	
	// Удаляем движения
	НаборОПВРасчетыСФондами.Очистить();
	НаборОПВРасчетыСФондами.Записать();
	
	// Удаляем движения
	НаборВОСМСИсчисленные.Очистить();
	НаборВОСМСИсчисленные.Записать();
	
	Если НЕ НалоговыеВычетыРассчитаны Тогда
		Движения.ИПНСведенияОДоходах.Очистить();
		Движения.ИПНСведенияОДоходах.Записать();
	КонецЕсли;
	
	// Завершаем транзакцию
	ЗафиксироватьТранзакцию();	

КонецПроцедуры  // РассчитатьИПН

// Процедура рассчитывает проценты и сумму погашения займа.
// 
Процедура РассчитатьПогашениеЗаймов(Физлицо = Неопределено, КомментироватьРасчет = Ложь) Экспорт 
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("парамРегистратор",Ссылка);
	Запрос.УстановитьПараметр("парамВалютаРегламентУчета" , мВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("парамОрганизация" , Организация);
	Запрос.УстановитьПараметр("парамКонец",КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("ПоОкончанииСрока", Перечисления.ПорядокПогашенияЗайма.ПоОкончанииСрока);
	Запрос.УстановитьПараметр("парамФизЛицо", ФизЛицо);

	// ОстаткиЗаймов
	//
	ОстаткиЗаймовТекст = 
	"ВЫБРАТЬ
	|	ПогашениеЗаймов.ФизЛицо КАК ФизЛицо,
	|	ПогашениеЗаймов.ДоговорЗайма КАК ДоговорЗайма,
	|	СведенияОЗаймах.ПорядокПогашенияЗайма КАК ПорядокПогашенияЗайма,
	|	СведенияОЗаймах.НачалоПогашения КАК ДоговорЗаймаНачалоПогашения,
	|	СведенияОЗаймах.СрокПогашения КАК ДоговорЗаймаСрокПогашения,
	|	СведенияОЗаймах.СуммаЗайма * ВЫБОР 
	|		КОГДА СведенияОЗаймах.ВалютаДокумента = &парамВалютаРегламентУчета 
	|			ТОГДА 1 
	|		ИНАЧЕ СведенияОЗаймах.КурсДокумента / СведенияОЗаймах.КратностьДокумента 
	|	КОНЕЦ КАК СуммаЗайма,
	|	ПогашениеЗаймов.ОсновнойДолгОстаток КАК ОсновнойДолгОстаток
	|ИЗ
	|	РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций.Остатки(
	|				&парамКонец, 
	|				Организация = &парамОрганизация 
	|				И ФизЛицо В (ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|									Работники.ФизЛицо КАК Физлицо 
	|								ИЗ 
	|									Документ.РасчетУдержанийРаботниковОрганизаций.ПогашениеЗаймов КАК Работники 
	|								ГДЕ 
	|									Работники.Ссылка = &парамРегистратор
	|									" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
	|									И Работники.Авторасчет)) КАК ПогашениеЗаймов
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОЗаймах КАК СведенияОЗаймах
	|			ПО ПогашениеЗаймов.ДоговорЗайма = СведенияОЗаймах.ДоговорЗайма
	|				И ПогашениеЗаймов.ФизЛицо = СведенияОЗаймах.ФизЛицо
	|";
	
	Запрос.Текст = ОстаткиЗаймовТекст;
	
	// Основной текст запроса
	// 
	ПогашениеЗаймовТекст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетУдержанийРаботниковОрганизацийПогашениеЗаймов.НомерСтроки,
	|	РасчетУдержанийРаботниковОрганизацийПогашениеЗаймов.ФизЛицо,
	|	РасчетУдержанийРаботниковОрганизацийПогашениеЗаймов.ДоговорЗайма,
	|	ВЫБОР 
	|		КОГДА НЕ(ДанныеОПогашении.ПогашатьЗаймВЭтомМесяце) 
	|			ТОГДА 0 
	|		ИНАЧЕ ДанныеОПогашении.ПогашеноЗайма 
	|	КОНЕЦ КАК ПогашеноЗайма,
	|	ЕСТЬNULL(ДанныеОПогашении.СуммаЗайма, 0) КАК СуммаЗайма,
	|	ЕСТЬNULL(ДанныеОПогашении.ОсновнойДолгОстаток, 0) КАК ОсновнойДолгОстаток
	|ИЗ
	|	Документ.РасчетУдержанийРаботниковОрганизаций.ПогашениеЗаймов КАК РасчетУдержанийРаботниковОрганизацийПогашениеЗаймов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							ОстаткиЗаймов.ФизЛицо КАК ФизЛицо,
	|							ОстаткиЗаймов.ДоговорЗайма КАК ДоговорЗайма,
	|							ОстаткиЗаймов.СуммаЗайма,
	|							ОстаткиЗаймов.ОсновнойДолгОстаток,
	|							ВЫБОР 
	|								КОГДА ОстаткиЗаймов.ПорядокПогашенияЗайма = &ПоОкончанииСрока 
	|											И &парамКонец >= ДОБАВИТЬКДАТЕ(ОстаткиЗаймов.ДоговорЗаймаНачалоПогашения, МЕСЯЦ, ОстаткиЗаймов.ДоговорЗаймаСрокПогашения) 
	|										ИЛИ ОстаткиЗаймов.ПорядокПогашенияЗайма <> &ПоОкончанииСрока 
	|											И &парамКонец >= ОстаткиЗаймов.ДоговорЗаймаНачалоПогашения 
	|									ТОГДА ИСТИНА 
	|								ИНАЧЕ ЛОЖЬ 
	|							КОНЕЦ КАК ПогашатьЗаймВЭтомМесяце,
	|							ВЫБОР 
	|								КОГДА ОстаткиЗаймов.ПорядокПогашенияЗайма = &ПоОкончанииСрока 
	|											ИЛИ ОстаткиЗаймов.СуммаЗайма / ОстаткиЗаймов.ДоговорЗаймаСрокПогашения > ОстаткиЗаймов.ОсновнойДолгОстаток 
	|									ТОГДА ОстаткиЗаймов.ОсновнойДолгОстаток 
	|								ИНАЧЕ ОстаткиЗаймов.СуммаЗайма / ОстаткиЗаймов.ДоговорЗаймаСрокПогашения 
	|							КОНЕЦ КАК ПогашеноЗайма
	|						ИЗ
	|							(" + ОстаткиЗаймовТекст + ") КАК ОстаткиЗаймов) КАК ДанныеОПогашении
	|		ПО РасчетУдержанийРаботниковОрганизацийПогашениеЗаймов.ФизЛицо = ДанныеОПогашении.ФизЛицо 
	|			И РасчетУдержанийРаботниковОрганизацийПогашениеЗаймов.ДоговорЗайма = ДанныеОПогашении.ДоговорЗайма
	|
	|ГДЕ
	|	РасчетУдержанийРаботниковОрганизацийПогашениеЗаймов.Ссылка = &парамРегистратор
	|	" + ?(ФизЛицо <> Неопределено, "И РасчетУдержанийРаботниковОрганизацийПогашениеЗаймов.ФизЛицо В (&парамФизЛицо)", "") + "
	|	И РасчетУдержанийРаботниковОрганизацийПогашениеЗаймов.Авторасчет";
	
    Запрос.Текст = ПогашениеЗаймовТекст;
    Выборка = Запрос.Выполнить().Выбрать();
	
    Пока Выборка.Следующий() Цикл
    	СтрокаТЧ = ПогашениеЗаймов[Выборка.НомерСтроки - 1];
    	СтрокаТЧ.ПогашеноЗайма = Выборка.ПогашеноЗайма; 
    	
    	Если КомментироватьРасчет Тогда
    		КомментарийВидаРасчета = РаботаССообщениями.КомментарийРасчета("Расчет <B>%%</B>", , "Погашение займа", Выборка.ДоговорЗайма);
    		РаботаССообщениями.КомментарийРасчета("Сумма займа: " + Выборка.СуммаЗайма, КомментарийВидаРасчета);
    		РаботаССообщениями.КомментарийРасчета("Остаток займа до расчета: " + Выборка.ОсновнойДолгОстаток, КомментарийВидаРасчета);
    		РаботаССообщениями.КомментарийРасчета("Погашено займа: " + СтрокаТЧ.ПогашеноЗайма, КомментарийВидаРасчета);
    	КонецЕсли;
    	
    КонецЦикла;    
	
КонецПроцедуры
	
// Процедура рассчитывает ресурсы удержаний. 
// 
Процедура РассчитатьУдержания(ИПНиОПВРассчитаны = Ложь) Экспорт
	
	Отказ = Ложь;
	
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект);
	
	ИсчислениеНалоговСтруктурныхЕдиниц = глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц");
	
	НачатьТранзакцию();
	
	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	// позиционируем выборку
	ВыборкаПоШапкеДокумента.Следующий();

	//
	НаборУдержания = РегистрыРасчета.УдержанияРаботниковОрганизаций.СоздатьНаборЗаписей();
	НаборУдержания.Отбор.Регистратор.Значение = Ссылка;
	НаборУдержания.Записать();// сначала удалим существующие движения
	
	Если Не ИПНиОПВРассчитаны Тогда
		// сначала удалим существующие движения
		Движения.ИПНРасчетыСБюджетом.Очистить();
		Движения.ИПНРасчетыСБюджетом.Записать();
		
		Движения.ОПВРасчетыСФондами.Очистить();
		Движения.ОПВРасчетыСФондами.Записать();
		
		Движения.ВОСМСРасчетыСФондами.Очистить();
		Движения.ВОСМСРасчетыСФондами.Записать();
		
		// создадим таблицы со структурой регистра
		Движения.ИПНРасчетыСБюджетом.мТаблицаДвижений = Движения.ИПНРасчетыСБюджетом.ВыгрузитьКолонки();
		Движения.ОПВРасчетыСФондами.мТаблицаДвижений = Движения.ОПВРасчетыСФондами.ВыгрузитьКолонки();
		Движения.ВОСМСРасчетыСФондами.мТаблицаДвижений = Движения.ВОСМСРасчетыСФондами.ВыгрузитьКолонки();
		
		// сформируем и запишем движения ОПВ и ИПН по данным табличной части
		ВыборкаПоСтрокамДокумента = СформироватьЗапросПоТабличнымЧастям(ВыборкаПоШапкеДокумента, Истина, Ложь, Ложь).Выбрать();
		Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл 
			// проверим очередную строку табличной части
			ПроверитьЗаполнениеСтроки(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок);
			Если НЕ Отказ Тогда
				Если ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ИсчисленныйИПН" Тогда
					ДобавитьСтрокуИсчисленныйИПН(ВыборкаПоШапкеДокумента, 
													ВыборкаПоСтрокамДокумента, 
													ИсчислениеНалоговСтруктурныхЕдиниц,
													Ложь, 	 // сейчас формировать удержанный ИПН не будем, чтобы не тратить время
													Истина); // при расчете нет необходимости формировать сведения о доходах
				
				ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ИсчисленныйОПВ" Тогда
					ДобавитьСтрокуИсчисленныйОПВ(ВыборкаПоШапкеДокумента, 
													ВыборкаПоСтрокамДокумента, 
													ИсчислениеНалоговСтруктурныхЕдиниц,
													Ложь, 	 // сейчас формировать удержанный ИПН не будем, чтобы не тратить время
													Истина); // при расчете нет необходимости формировать сведения о доходах
				ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ИсчисленныеВзносыОСМС" Тогда
					ДобавитьСтрокуИсчисленныеВзносыОСМС(ВыборкаПоШапкеДокумента, 
													ВыборкаПоСтрокамДокумента, 
													ИсчислениеНалоговСтруктурныхЕдиниц,
													Ложь, 	 // сейчас формировать удержанный ВОСМС не будем, чтобы не тратить время
													Истина); // при расчете нет необходимости формировать сведения о доходах
	
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
		
		// запишем наборы в базу
		Движения.ИПНРасчетыСБюджетом.мТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
		Движения.ИПНРасчетыСБюджетом.Загрузить(Движения.ИПНРасчетыСБюджетом.мТаблицаДвижений);
		Движения.ИПНРасчетыСБюджетом.Записать();
		
		Движения.ОПВРасчетыСФондами.Загрузить(Движения.ОПВРасчетыСФондами.мТаблицаДвижений);
		Движения.ОПВРасчетыСФондами.мТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
		Движения.ОПВРасчетыСФондами.Записать();
		
		Движения.ВОСМСРасчетыСФондами.Загрузить(Движения.ВОСМСРасчетыСФондами.мТаблицаДвижений);
		Движения.ВОСМСРасчетыСФондами.мТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
		Движения.ВОСМСРасчетыСФондами.Записать();
	КонецЕсли;
	
	// сформируем движения удержаний по данным табличной части без записи (запись делается процедурой РассчитатьЗаписиРегистраРасчета)
	ВыборкаПоСтрокамДокумента = СформироватьЗапросПоТабличнымЧастям(ВыборкаПоШапкеДокумента, Ложь, Ложь, Истина).Выбрать();
	Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл 
		Если ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "Удержания" Тогда
			ПроверитьЗаполнениеСтроки(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок);
			Если НЕ Отказ Тогда
				ДобавитьСтрокуУдержаний(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, НаборУдержания);
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат;
	КонецЕсли; 

	ПроведениеРасчетов.РассчитатьЗаписиРегистраРасчета("УдержанияРаботниковОрганизаций", НаборУдержания, , ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ВыборкаПоШапкеДокумента.Организация, Удержания);
	
	// Удаляем движения
	НаборУдержания.Очистить();
	НаборУдержания.Записать();
	
	Если Не ИПНиОПВРассчитаны Тогда
		// Удаляем движения
		
		Движения.ИПНРасчетыСБюджетом.Очистить();
		Движения.ИПНРасчетыСБюджетом.Записать();
		
		Движения.ОПВРасчетыСФондами.Очистить();
		Движения.ОПВРасчетыСФондами.Записать();
		
		Движения.ВОСМСРасчетыСФондами.Очистить();
		Движения.ВОСМСРасчетыСФондами.Записать();
	КонецЕсли;
	
	// Завершаем транзакцию
	ЗафиксироватьТранзакцию();	

КонецПроцедуры // РассчитатьУдержания()

// Процедура рассчитывает жилищные, страховые налоговые вычеты.
//
Процедура РассчитатьНалоговыеВычеты(Физлицо = Неопределено, КомментироватьРасчет = Ложь, КомментарийВидаРасчета = Неопределено) Экспорт 
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	

	Запрос.УстановитьПараметр("парамРегистратор",Ссылка);
	Запрос.УстановитьПараметр("парамКонец", КонецМесяца(ПериодРегистрации));
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(Организация,
																		Организация,
																		глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц"),
																		Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	Иначе
		Налогоплательщик = Организация;
	КонецЕсли;

	Запрос.УстановитьПараметр("парамНалогоплательщик", Налогоплательщик);
	Запрос.УстановитьПараметр("парамФизЛицо", ФизЛицо);
	
	НалоговыеВычетыТекст = "
	|ВЫБРАТЬ
	|	СтрокиТЧ.НомерСтроки,
	|	СтрокиТЧ.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(СтрокиТЧ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	СтрокиТЧ.ВычетИПН,
	|	СтрокиТЧ.ДокументОснование
	|
	|ПОМЕСТИТЬ ВТНалоговыеВычеты
	|ИЗ
	|	Документ.РасчетУдержанийРаботниковОрганизаций.НалоговыеВычеты КАК СтрокиТЧ
	|ГДЕ
	|	СтрокиТЧ.Ссылка = &парамРегистратор
	|	И СтрокиТЧ.Авторасчет
	|	" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтрокиТЧ.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(СтрокиТЧ.МесяцНалоговогоПериода, МЕСЯЦ),
	|	СтрокиТЧ.ВычетИПН,
	|	СтрокиТЧ.ДокументОснование
	|";

	Запрос.Текст = НалоговыеВычетыТекст;
	Запрос.Выполнить();
	НалоговыеВычетыТекст = "ВТНалоговыеВычеты";
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтрокиТЧ.НомерСтроки,
	|	ИПНПлановыеВычеты.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ИПНПлановыеВычеты.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	ИПНПлановыеВычеты.ВычетИПН,
	|	ИПНПлановыеВычеты.ВычетИПН.Наименование КАК ВычетИПННаименование,
	|	ИПНПлановыеВычеты.ДокументОснование,
	|	ЕСТЬNULL(ИПНПлановыеВычеты.СуммаВычета, 0) КАК ПредоставляемыйВычет,
	|	ЕСТЬNULL(РанееПредоставленныеВычеты.СуммаВычета, 0) КАК УжеПредоставленоВычетов,
	|	ИПНПлановыеВычеты.СуммаВычета - ЕСТЬNULL(РанееПредоставленныеВычеты.СуммаВычета, 0) КАК СуммаВычета
	|ИЗ
	|	" + НалоговыеВычетыТекст + " КАК СтрокиТЧ
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИПНПлановыеНалоговыеВычетыФизЛиц.СрезПоследних(
	|				&парамКонец,
	|				Налогоплательщик = &парамНалогоплательщик
	|				" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + ") КАК ИПНПлановыеВычеты
	|		ПО СтрокиТЧ.ФизЛицо = ИПНПлановыеВычеты.ФизЛицо
	|			И СтрокиТЧ.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(ИПНПлановыеВычеты.МесяцНалоговогоПериода, МЕСЯЦ)
	|			И СтрокиТЧ.ВычетИПН = ИПНПлановыеВычеты.ВычетИПН
	|			И СтрокиТЧ.ДокументОснование = ИПНПлановыеВычеты.ДокументОснование
	|
	|	// вычтем ранее предоставленные вычеты по соответствующему документу-основанию
	|	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|							РанееПредоставленныеВычеты.ФизЛицо,
	|							НАЧАЛОПЕРИОДА(РанееПредоставленныеВычеты.Период, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|							РанееПредоставленныеВычеты.ВидРасчета КАК ВычетИПН,
	|							РанееПредоставленныеВычеты.ДокументОснование,
	|							СУММА(РанееПредоставленныеВычеты.СуммаВычета) КАК СуммаВычета
	|						ИЗ
	|							РегистрНакопления.ИПНСведенияОДоходах КАК РанееПредоставленныеВычеты
	|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + НалоговыеВычетыТекст + " КАК СтрокиТЧ
	|								ПО РанееПредоставленныеВычеты.ФизЛицо = СтрокиТЧ.ФизЛицо
	|									И РанееПредоставленныеВычеты.ВидРасчета = СтрокиТЧ.ВычетИПН
	|									И РанееПредоставленныеВычеты.ДокументОснование = СтрокиТЧ.ДокументОснование
	|									И РанееПредоставленныеВычеты.Период МЕЖДУ СтрокиТЧ.МесяцНалоговогоПериода И КОНЕЦПЕРИОДА(СтрокиТЧ.МесяцНалоговогоПериода, МЕСЯЦ)
	|						ГДЕ
	|							РанееПредоставленныеВычеты.Налогоплательщик = &парамНалогоплательщик
	|							" + ?(ФизЛицо <> Неопределено, "И РанееПредоставленныеВычеты.ФизЛицо В (&парамФизЛицо)", "") + "
	|						СГРУППИРОВАТЬ ПО
	|							РанееПредоставленныеВычеты.ФизЛицо,
	|							НАЧАЛОПЕРИОДА(РанееПредоставленныеВычеты.Период, МЕСЯЦ),
	|							РанееПредоставленныеВычеты.ВидРасчета,
	|							РанееПредоставленныеВычеты.ДокументОснование) КАК РанееПредоставленныеВычеты
	|		ПО СтрокиТЧ.ФизЛицо = РанееПредоставленныеВычеты.ФизЛицо
	|			И СтрокиТЧ.МесяцНалоговогоПериода = РанееПредоставленныеВычеты.МесяцНалоговогоПериода
	|			И СтрокиТЧ.ВычетИПН = РанееПредоставленныеВычеты.ВычетИПН
	|			И СтрокиТЧ.ДокументОснование = РанееПредоставленныеВычеты.ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИПНПлановыеВычеты.ФизЛицо.Наименование
	|";	

    Выборка = Запрос.Выполнить().Выбрать();
	
    Пока Выборка.Следующий() Цикл
    	СтрокаТЧ = НалоговыеВычеты[Выборка.НомерСтроки - 1];
    	СтрокаТЧ.СуммаВычета = Выборка.СуммаВычета; 
    	
    	Если КомментироватьРасчет Тогда
    		КомментарийВычета = РаботаССообщениями.КомментарийРасчета("Предоставлен вычет: %% " + Выборка.СуммаВычета, КомментарийВидаРасчета, НРег(Выборка.ВычетИПННаименование), Выборка.ДокументОснование, , , Формат(Выборка.МесяцНалоговогоПериода, "ДФ=ггггММдд")+"100"); // "100" - порядок сообщения для вычета
    		Если Выборка.УжеПредоставленоВычетов <> 0 Тогда
	    		РаботаССообщениями.КомментарийРасчета("Заявленный размер вычета: " + Выборка.ПредоставляемыйВычет, КомментарийВычета);
	    		РаботаССообщениями.КомментарийРасчета("Ранее предоставлен вычет в текущем периоде: " + Выборка.УжеПредоставленоВычетов, КомментарийВычета);
    		КонецЕсли;
    	КонецЕсли;
    	
    КонецЦикла;    
	
КонецПроцедуры // РассчитатьНалоговыеВычеты()

// Процедура рассчитывает все табличные части документа.
// 
Процедура Рассчитать(Физлицо = Неопределено, КомментироватьРасчет = Ложь) Экспорт
	
	Если Не ПроцедурыУправленияПерсоналом.РегламентированныйКалендарьЗаполнен(НачалоМесяца(ПериодРегистрации), КонецМесяца(ПериодРегистрации), Истина) Тогда
		Возврат;
	КонецЕсли;

	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект);

	Отказ = Ложь;
	
	Если ФизЛицо = Неопределено Тогда
		МассивИндексыСтрокУдержаний = Неопределено;
	Иначе
		МассивИндексыСтрокУдержаний = Новый Массив();
	КонецЕсли;
	
	// расчет связан с записью документа и его движений, поэтому выполняется в транзакции
	НачатьТранзакцию();
	
	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	// позиционируем выборку
	ВыборкаПоШапкеДокумента.Следующий();
	
	ЭтоРасчетПервойПоловиныМесяца = (ВыборкаПоШапкеДокумента.ПериодНачисления = Перечисления.ПериодНачисленияЗарплаты.ПерваяПоловинаТекущегоМесяца);
	
	ИсчислениеНалоговСтруктурныхЕдиниц = глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц");
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ВыборкаПоШапкеДокумента.Организация, 
																		ВыборкаПоШапкеДокумента.Организация, 
																		ИсчислениеНалоговСтруктурныхЕдиниц, 
																		Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	Иначе
		Налогоплательщик = ВыборкаПоШапкеДокумента.Организация;
	КонецЕсли;
	
	ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ);
	
	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат;
	КонецЕсли; 
	
	// Сначала удалим существующие движения
	// ИПНСведенияОДоходах
	Движения.ИПНСведенияОДоходах.Очистить();
	Движения.ИПНСведенияОДоходах.Записать();
	Движения.ИПНСведенияОДоходах.мТаблицаДвижений = Движения.ИПНСведенияОДоходах.ВыгрузитьКолонки();
	
	// ОПВСведенияОДоходах
	Движения.ОПВСведенияОДоходах.Очистить();
	Движения.ОПВСведенияОДоходах.Записать();
	Движения.ОПВСведенияОДоходах.мТаблицаДвижений = Движения.ОПВСведенияОДоходах.ВыгрузитьКолонки();
	
	// ВОСМССведенияОДоходах
	Движения.ВОСМССведенияОДоходах.Очистить();
	Движения.ВОСМССведенияОДоходах.Записать();
	Движения.ВОСМССведенияОДоходах.мТаблицаДвижений = Движения.ВОСМССведенияОДоходах.ВыгрузитьКолонки();
	
	Если ЭтоРасчетПервойПоловиныМесяца Тогда
		Движения.ОсновныеНачисленияРаботниковОрганизаций.Очистить();
		Движения.ОсновныеНачисленияРаботниковОрганизаций.Записать();
		
		Движения.ДополнительныеНачисленияРаботниковОрганизаций.Очистить();
		Движения.ДополнительныеНачисленияРаботниковОрганизаций.Записать();
	КонецЕсли;
		
	// УдержанияРаботниковОрганизаций
	НаборУдержания = РегистрыРасчета.УдержанияРаботниковОрганизаций.СоздатьНаборЗаписей();
	НаборУдержания.Отбор.Регистратор.Значение = Ссылка;
	НаборУдержания.Записать();
	
	// ИПНРасчетыСБюджетом
	НаборИПНРасчетыСБюджетом = РегистрыНакопления.ИПНРасчетыСБюджетом.СоздатьНаборЗаписей();
	НаборИПНРасчетыСБюджетом.Отбор.Регистратор.Значение = Ссылка;
	НаборИПНРасчетыСБюджетом.Записать();
	
	// ИПНИсчисленный
	НаборИПНИсчисленный = РегистрыНакопления.ИПНИсчисленный.СоздатьНаборЗаписей();
	НаборИПНИсчисленный.Отбор.Регистратор.Значение = Ссылка;
	НаборИПНИсчисленный.Записать();
	
	// ОПВРасчетыСФондами
	НаборОПВРасчетыСФондами = РегистрыНакопления.ОПВРасчетыСФондами.СоздатьНаборЗаписей();
	НаборОПВРасчетыСФондами.Отбор.Регистратор.Значение = Ссылка;
	НаборОПВРасчетыСФондами.Записать();
	
	// ВОСМСИсчисленные
	НаборВОСМСИсчисленные = РегистрыНакопления.ВОСМСИсчисленные.СоздатьНаборЗаписей();
	НаборВОСМСИсчисленные.Отбор.Регистратор.Значение = Ссылка;
	НаборВОСМСИсчисленные.Записать();
	
	//СведенияОбИсчисленииВычетовИПН
	НаборСведенияОбИсчисленииВычетовИПН = РегистрыНакопления.СведенияОбИсчисленииВычетовИПН.СоздатьНаборЗаписей();
	НаборСведенияОбИсчисленииВычетовИПН.Отбор.Регистратор.Значение = Ссылка;
	НаборСведенияОбИсчисленииВычетовИПН.Записать();
	
	// чтобы налоговые вычеты попали в ветку комментария ИПН - создадим ее уже сейчас
	Если КомментироватьРасчет Тогда
		КомментарийИПН = РаботаССообщениями.КомментарийРасчета("Расчет <B>Индивидуальный подоходный налог</B>", , , , , , -100); // ИПН сразу после ОПВ, потом уже все остальные удержания
	КонецЕсли;
	
	ДатаКонтроля = '2018-01-01';
	
	Если ПериодРегистрации < ДатаКонтроля Тогда
		// Рассчитаем налоговые вычеты
		РассчитатьНалоговыеВычеты(ФизЛицо, КомментироватьРасчет, КомментарийИПН);
		Записать(РежимЗаписиДокумента.Запись); // запишем документ в базу, чтобы обращаться в запросе к уже рассчитанным вычетам
		
		// Заполним записи в наборах записей регистров
		ВыборкаПоСтрокамДокумента = СформироватьЗапросПоТабличнымЧастям(ВыборкаПоШапкеДокумента, Истина, Истина, Ложь, ФизЛицо).Выбрать();
		Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл 
			ПроверитьЗаполнениеСтроки(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок);
			Если Не Отказ Тогда
				Если ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "Удержания" Тогда
					
					ДобавитьСтрокуУдержаний(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, НаборУдержания);
					
					Если НЕ (Физлицо = Неопределено)  Тогда
						МассивИндексыСтрокУдержаний.Добавить(ВыборкаПоСтрокамДокумента.НомерСтроки-1);
					КонецЕсли;
					
				КонецЕсли;
				Если ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "НалоговыеВычеты" Тогда
					ДобавитьСтрокуНалоговыеВычеты(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, ИсчислениеНалоговСтруктурныхЕдиниц);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		// запишем набор записей с налоговыми вычетами
		Движения.ИПНСведенияОДоходах.мТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
		Движения.ИПНСведенияОДоходах.Загрузить(Движения.ИПНСведенияОДоходах.мТаблицаДвижений);
		Движения.ИПНСведенияОДоходах.Записать();
	КонецЕсли;
	
	Если ЭтоРасчетПервойПоловиныМесяца Тогда
		
		СформироватьДвиженияДляРасчетаПервойПоловиныМесяца(Налогоплательщик, НаборИПНИсчисленный, НаборИПНРасчетыСБюджетом, НаборОПВРасчетыСФондами, НаборВОСМСИсчисленные, ФизЛицо);
		
		// запишем наборы
		НаборИПНРасчетыСБюджетом.Записать();
		НаборИПНИсчисленный.Записать();
		НаборОПВРасчетыСФондами.Записать();
		НаборВОСМСИсчисленные.Записать();
	КонецЕсли;
	
	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат;
	КонецЕсли; 
	
	// Заполним записи в наборах записей регистров
	ВыборкаПоСтрокамДокумента = СформироватьЗапросПоТабличнымЧастям(ВыборкаПоШапкеДокумента, Ложь, Ложь, Истина, ФизЛицо).Выбрать();
	Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл 
		ПроверитьЗаполнениеСтроки(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок);
		Если Не Отказ Тогда
			Если ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "Удержания" Тогда
				ДобавитьСтрокуУдержаний(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, НаборУдержания);
				Если НЕ (Физлицо = Неопределено)  Тогда
					МассивИндексыСтрокУдержаний.Добавить(ВыборкаПоСтрокамДокумента.НомерСтроки-1);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	// погашение займов
	РассчитатьПогашениеЗаймов(ФизЛицо, КомментироватьРасчет);
	Если ЭтоРасчетПервойПоловиныМесяца Тогда
		Движения.ОсновныеНачисленияРаботниковОрганизаций.Записать();
		Движения.ДополнительныеНачисленияРаботниковОрганизаций.Записать();
		
		Движения.ИПНСведенияОДоходах.мТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
		Движения.ИПНСведенияОДоходах.Загрузить(Движения.ИПНСведенияОДоходах.мТаблицаДвижений);
		Движения.ИПНСведенияОДоходах.Записать();
		
		Движения.ОПВСведенияОДоходах.мТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
		Движения.ОПВСведенияОДоходах.Загрузить(Движения.ОПВСведенияОДоходах.мТаблицаДвижений);
		Движения.ОПВСведенияОДоходах.Записать();	
		
		Движения.ВОСМССведенияОДоходах.мТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
		Движения.ВОСМССведенияОДоходах.Загрузить(Движения.ВОСМССведенияОДоходах.мТаблицаДвижений);
		Движения.ВОСМССведенияОДоходах.Записать();		
	КонецЕсли;
	
	// Получение результата ОПВ по ставке 10%
	// Составим текст запроса для выбора списка физлиц, по которым надо считать ОПВ
	СписокФизлицТекст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Работники.Физлицо КАК Физлицо
	|ИЗ
	|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныйОПВ КАК Работники
	|
	|ГДЕ
	|	Работники.Ссылка = &парамРегистратор
	|	" + ?(ФизЛицо <> Неопределено, "И Работники.ФизЛицо В (&парамФизЛицо)", "");
	
	ДополнительныеПараметрыЗапроса = Новый Структура();
	ДополнительныеПараметрыЗапроса.Вставить("парамФизЛицо", ФизЛицо);
	
	ДанныеОПВ = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаОПВ(Неопределено, ВыборкаПоШапкеДокумента.ПериодРегистрации, Налогоплательщик, ВыборкаПоШапкеДокумента.Ссылка, СписокФизлицТекст, ДополнительныеПараметрыЗапроса, ЭтоРасчетПервойПоловиныМесяца);
	Если ДанныеОПВ <> НеОпределено Тогда
		ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымОПВ(ИсчисленныйОПВ, ПериодРегистрации, НаборОПВРасчетыСФондами, ДанныеОПВ, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, ФизЛицо, Не ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
		// Запишем расчитанный ОПВ для расчета ОПВ и удержаний
		НаборОПВРасчетыСФондами.Записать();
	КонецЕсли;
	
	// Составим текст запроса для выбора списка физлиц, по которым надо считать ВОСМС
	СписокФизлицТекстВОСМС = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Работники.Физлицо КАК Физлицо
	|ИЗ
	|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныеВзносыОСМС КАК Работники
	|
	|ГДЕ
	|	Работники.Ссылка = &парамРегистратор
	|	" + ?(ФизЛицо <> Неопределено, "И Работники.ФизЛицо В (&парамФизЛицо)", "");
	
	ДополнительныеПараметрыЗапроса = Новый Структура();
	ДополнительныеПараметрыЗапроса.Вставить("парамФизЛицо", ФизЛицо);
	
	// Составим текст запроса для выбора списка физлиц, по которым надо считать ИПН
	СписокФизлицТекстИПН = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Работники.Физлицо КАК Физлицо
	|ИЗ
	|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныйИПН КАК Работники
	|
	|ГДЕ
	|	Работники.Ссылка = &парамРегистратор
	|	" + ?(ФизЛицо <> Неопределено, "И Работники.ФизЛицо В (&парамФизЛицо)", "");
	
    ПроведениеРасчетов.ПроверитьПерерасчетИПНДоходОтНалоговогоАгентаДо2020(ЭтотОбъект);
    
	Если ПроведениеРасчетовПолныеПрава.ПрименятьКорректировкуПрочихНалоговВзносовОтчислений(Налогоплательщик, ВыборкаПоШапкеДокумента.ПериодРегистрации) Тогда
		
		ДополнительныеПараметрыЗапроса.Вставить("ТолькоДоходОтНалоговогоАгента", Истина);
	
		ДанныеВОСМС = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаВОСМС(Неопределено, ВыборкаПоШапкеДокумента.ПериодРегистрации, Налогоплательщик, ВыборкаПоШапкеДокумента.Ссылка, СписокФизлицТекстВОСМС, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса);
		Если ДанныеВОСМС <> НеОпределено Тогда
			ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымВОСМС(ИсчисленныеВзносыОСМС, ПериодРегистрации, НаборВОСМСИсчисленные, ДанныеВОСМС, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , , , Не ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
		КонецЕсли;
		
		НаборВОСМСИсчисленные.Записать();
		
		ДанныеВычетовИПН = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаВычетовИПН(ВыборкаПоШапкеДокумента.ПериодРегистрации,  Налогоплательщик, ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, ВыборкаПоШапкеДокумента.Ссылка, СписокФизлицТекстИПН, ДополнительныеПараметрыЗапроса);
		Если ДанныеВычетовИПН <> НеОпределено Тогда
			ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымВычетовИПН(ВычетыИПН, ПериодРегистрации, НаборСведенияОбИсчисленииВычетовИПН, ДанныеВычетовИПН, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, КомментарийИПН, ФизЛицо, НЕ ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
			// Запишем расчитанные вычеты для расчета ИПН
			НаборСведенияОбИсчисленииВычетовИПН.Записать();
		КонецЕсли;
		
		НаборВОСМСИсчисленные.Очистить();
		НаборВОСМСИсчисленные.Записать();
		
		// Расчет ИПН
		
		// получение результата ИПН
		ДанныеИПН = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаИПН(Неопределено, ПериодРегистрации,  Налогоплательщик, ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, Ссылка, СписокФизлицТекстИПН, ДополнительныеПараметрыЗапроса);
		Если ДанныеИПН <> НеОпределено Тогда
			ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымИПН(ИсчисленныйИПН, ПериодРегистрации, НаборИПНРасчетыСБюджетом, ДанныеИПН, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, КомментарийИПН, ФизЛицо, НЕ ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
			// Запишем расчитанный ИПН для расчета удержаний
			НаборИПНРасчетыСБюджетом.Записать();
		КонецЕсли;
		
		ДополнительныеПараметрыЗапроса.Вставить("ИсчисленныйИПН", ИсчисленныйИПН.Выгрузить()); 
		
		ДополнительныеПараметрыЗапроса.Удалить("ТолькоДоходОтНалоговогоАгента");
		// получение результата ВОСМС 
		ДанныеВОСМС = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаВОСМС(Неопределено, ПериодРегистрации,  Налогоплательщик, Ссылка, СписокФизлицТекстВОСМС, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса);
		Если ДанныеВОСМС <> НеОпределено Тогда
			ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымВОСМС(ИсчисленныеВзносыОСМС, ПериодРегистрации, НаборВОСМСИсчисленные, ДанныеВОСМС, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, ФизЛицо, НЕ ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
		КонецЕсли;
		НаборВОСМСИсчисленные.Записать();

	Иначе
		
		// получение результата ВОСМС 
		ДанныеВОСМС = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаВОСМС(Неопределено, ПериодРегистрации,  Налогоплательщик, Ссылка, СписокФизлицТекстВОСМС, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, ДополнительныеПараметрыЗапроса);
		Если ДанныеВОСМС <> НеОпределено Тогда
			ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымВОСМС(ИсчисленныеВзносыОСМС, ПериодРегистрации, НаборВОСМСИсчисленные, ДанныеВОСМС, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, ФизЛицо, НЕ ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
		КонецЕсли;
		НаборВОСМСИсчисленные.Записать();

		ДанныеВычетовИПН = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаВычетовИПН(ВыборкаПоШапкеДокумента.ПериодРегистрации,  Налогоплательщик, ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, ВыборкаПоШапкеДокумента.Ссылка, СписокФизлицТекстИПН, ДополнительныеПараметрыЗапроса);
		Если ДанныеВычетовИПН <> НеОпределено Тогда
			ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымВычетовИПН(ВычетыИПН, ПериодРегистрации, НаборСведенияОбИсчисленииВычетовИПН, ДанныеВычетовИПН, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, КомментарийИПН, ФизЛицо, НЕ ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
			// Запишем расчитанные вычеты для расчета ИПН
			НаборСведенияОбИсчисленииВычетовИПН.Записать();
		КонецЕсли;
		
		// Расчет ИПН
		
		// получение результата ИПН
		ДанныеИПН = ПроведениеРасчетовПолныеПрава.ПолучитьДанныеДляРасчетаИПН(Неопределено, ПериодРегистрации,  Налогоплательщик, ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, Ссылка, СписокФизлицТекстИПН, ДополнительныеПараметрыЗапроса);
		Если ДанныеИПН <> НеОпределено Тогда
			ПроведениеРасчетов.ЗаполнитьНаборЗаписейПоДаннымИПН(ИсчисленныйИПН, ПериодРегистрации, НаборИПНРасчетыСБюджетом, ДанныеИПН, Налогоплательщик, ВыборкаПоШапкеДокумента.Организация, ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, , КомментироватьРасчет, КомментарийИПН, ФизЛицо, НЕ ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам);
			// Запишем расчитанный ИПН для расчета удержаний
			НаборИПНРасчетыСБюджетом.Записать();
		КонецЕсли;
		
		ДополнительныеПараметрыЗапроса.Вставить("ИсчисленныйИПН", ИсчисленныйИПН.Выгрузить()); 

	КонецЕсли;
	
	// удержания - в последнюю очередь
	ПроведениеРасчетов.РассчитатьЗаписиРегистраРасчета("УдержанияРаботниковОрганизаций", НаборУдержания, , ВыборкаПоШапкеДокумента.ГоловнаяОрганизация, глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ВыборкаПоШапкеДокумента.Организация, Удержания, , , МассивИндексыСтрокУдержаний, КомментироватьРасчет);
	
	// Удаляем движения
	Движения.ИПНСведенияОДоходах.Очистить();
	Движения.ИПНСведенияОДоходах.Записать();
	
	Движения.ОПВСведенияОДоходах.Очистить();
	Движения.ОПВСведенияОДоходах.Записать();
	
	Движения.ВОСМССведенияОДоходах.Очистить();
	Движения.ВОСМССведенияОДоходах.Записать();
	
	Движения.ОсновныеНачисленияРаботниковОрганизаций.Очистить();
	Движения.ОсновныеНачисленияРаботниковОрганизаций.Записать();

	Движения.ДополнительныеНачисленияРаботниковОрганизаций.Очистить();
	Движения.ДополнительныеНачисленияРаботниковОрганизаций.Записать();
	
	НаборУдержания.Очистить();
	НаборУдержания.Записать();
	
	НаборИПНРасчетыСБюджетом.Очистить();
	НаборИПНРасчетыСБюджетом.Записать();
	
	НаборОПВРасчетыСФондами.Очистить();
	НаборОПВРасчетыСФондами.Записать();
	
	НаборВОСМСИсчисленные.Очистить();
	НаборВОСМСИсчисленные.Записать();
	
	НаборСведенияОбИсчисленииВычетовИПН.Очистить();
	НаборСведенияОбИсчисленииВычетовИПН.Записать();

	// Завершаем транзакцию
	ЗафиксироватьТранзакцию();	
	
КонецПроцедуры  // Рассчитать()

#Если Клиент Тогда

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеПользователями.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;
	
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	//так как нет печатных форм у документа, по умолчанию
	ТабДокумент = Неопределено;
	
	Если ТабДокумент = Неопределено Тогда
		Возврат
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, РаботаСДиалогами.СформироватьЗаголовокДокумента(ЭтотОбъект));

КонецПроцедуры // Печать()

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура();

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа.
//
Функция СформироватьЗапросПоШапке()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);

	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДанныеДокумента.Дата,
		|	ДанныеДокумента.ПериодРегистрации,
		|	ДанныеДокумента.Организация,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА ДанныеДокумента.Организация
		|		ИНАЧЕ ДанныеДокумента.Организация.ГоловнаяОрганизация
		|	КОНЕЦ КАК ГоловнаяОрганизация,
		|	ДанныеДокумента.Ссылка,
		|	ДанныеДокумента.ПериодНачисления,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.ОтражениеПоПериодуРегистрации, ЛОЖЬ) КАК ОтражениеПоПериодуРегистрации,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ, ЛОЖЬ) КАК ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.УпрощенныйУчетИПНиОПВ, ЛОЖЬ) КАК УпрощенныйУчетИПНиОПВ,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.РаспределятьНалогиПоСтруктурнымЕдиницам, ЛОЖЬ) КАК РаспределятьНалогиПоСтруктурнымЕдиницам,
		|	ЕСТЬNULL(УчетнаяПолитикаНУ.РаспределятьНалогиПоПодразделениямОрганизаций, ЛОЖЬ) КАК РаспределятьНалогиПоПодразделениямОрганизаций
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет.СрезПоследних(&парамПериодРегистрации, Организация = &парамОрганизация) КАК УчетнаяПолитикаНУ
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по всем табличным частям  документа.
//
Функция СформироватьЗапросПоТабличнымЧастям(ВыборкаПоШапкеДокумента, ВыбиратьНалогиВзносы, ВыбиратьНалоговыеВычеты, ВыбиратьУдержания, ФизЛицо = Неопределено, ВыбиратьВычетыИПН = Ложь)
    МестоРаботыТекст="";
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("Организация", ВыборкаПоШапкеДокумента.Организация);
	Запрос.УстановитьПараметр("ПустаяДата", Дата('00010101'));
	Запрос.УстановитьПараметр("парамФизЛицо", ФизЛицо);

	СписокСпособыРасчетаИЛ = Новый СписокЗначений;
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.УдержаниеФиксированнойСуммой);
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистФиксСуммойДоПредела);
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентом);
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентомДоПредела);	
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателю);
	Запрос.УстановитьПараметр("СписокСпособыРасчетаИЛ", СписокСпособыРасчетаИЛ);

	ПолеПериод = ?(ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, "&ПериодРегистрации", "МесяцНалоговогоПериода");
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
	
		ПериодыФизЛицаТекст = "
		|ВЫБРАТЬ
		|	ФизЛицо,
		|	" + ПолеПериод + " КАК Период
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныйИПН 
		|ГДЕ
		|	Ссылка = &ДокументСсылка
		|	" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
		|
		|ОБЪЕДИНИТЬ // выбираем только различающиеся строки (без ВСЕ)
		|
		|ВЫБРАТЬ
		|	ФизЛицо,
		|	" + ПолеПериод + " КАК Период
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныйОПВ
		|ГДЕ
		|	Ссылка = &ДокументСсылка
		|	" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
		|
		|ОБЪЕДИНИТЬ 
		|
		|ВЫБРАТЬ
		|	ФизЛицо,
		|	" + ПолеПериод + " КАК Период
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныеВзносыОСМС
		|ГДЕ
		|	Ссылка = &ДокументСсылка
		|	" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
		|
		|ОБЪЕДИНИТЬ 
		|
		|ВЫБРАТЬ
		|	ФизЛицо,
		|	&ПериодРегистрации КАК Период
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций.Удержания
		|ГДЕ
		|	Ссылка = &ДокументСсылка
		|	" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
		|
		|ОБЪЕДИНИТЬ 
		|
		|ВЫБРАТЬ
		|	ФизЛицо,
		|	&ПериодРегистрации КАК Период
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций.ПогашениеЗаймов
		|ГДЕ
		|	Ссылка = &ДокументСсылка
		|	" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ФизЛицо,
		|	" + ПолеПериод + " КАК Период
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций.НалоговыеВычеты
		|ГДЕ
		|	Ссылка = &ДокументСсылка
		|	" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ФизЛицо,
		|	" + ПолеПериод + " КАК Период
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций.ВычетыИПН
		|ГДЕ
		|	Ссылка = &ДокументСсылка
		|	" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
		|";
		
		ПериодыФизЛицаТекст = 	"ВЫБРАТЬ РАЗРЕШЕННЫЕ * ПОМЕСТИТЬ ПериодыФизЛицаВТ ИЗ ("+ПериодыФизЛицаТекст+") КАК ЗапросПоПериодамДляВТ;" ;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = ПериодыФизЛицаТекст;
		Запрос.Выполнить();
		
		ПериодыФизЛицаТекстВТ = "ВЫБРАТЬ * ИЗ ПериодыФизЛицаВТ КАК ВложенныйЗапросПериодыФизЛицаИзВТ";
		МестоРаботыТекст = ПроведениеРасчетов.СформироватьТекстЗапросаСтруктурныеЕдиницы(ПериодыФизЛицаТекстВТ, ВыборкаПоШапкеДокумента.Организация, Запрос, Истина);
		МестоРаботыТекст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ *  
							|	ПОМЕСТИТЬ МестоРаботыВТ
							|	ИЗ ("+МестоРаботыТекст+") КАК МестаРабот;";
		МестоРаботыВТ="МестоРаботыВТ";
		
	КонецЕсли;

	Запрос.Текст = МестоРаботыТекст+ "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтрокиТЧ.ВидСтрокиЗапроса,
	|	СтрокиТЧ.НомерСтроки,
	|	СтрокиТЧ.Период,
	|	СтрокиТЧ.ФизЛицо,
	|	СтрокиТЧ.ЯвляетсяКонтрагентом,
	|	СтрокиТЧ.МесяцНалоговогоПериодаИлиВзаиморасчетов,
	|	СтрокиТЧ.ВидДохода,
	|	СтрокиТЧ.Налог КАК Налог,
	|	СтрокиТЧ.ПримененныйВычет КАК ПримененныйВычет,
	|	СтрокиТЧ.ПримененнаяЛьгота КАК ПримененнаяЛьгота,
	|	СтрокиТЧ.РазрешенныйВычет КАК РазрешенныйВычет,
	|	СтрокиТЧ.Взнос КАК Взнос,
	|	СтрокиТЧ.СуммаУдержания КАК СуммаУдержания,
	|	СтрокиТЧ.ОблагаемаяБаза КАК ОблагаемаяБаза,
	|	СтрокиТЧ.СуммаВыплаченногоДохода КАК СуммаВыплаченногоДохода,
	|	СтрокиТЧ.СуммаУдержанияИЛ КАК СуммаУдержанияИЛ,
	|	СтрокиТЧ.СуммаСборов КАК СуммаСборов,
	|	СтрокиТЧ.СуммаВычета КАК СуммаВычета,
	|	СтрокиТЧ.ДокументОснование,
	|	СтрокиТЧ.Получатель,
	|	СтрокиТЧ.ВидРасчета,
	|	СтрокиТЧ.ДатаНачала,
	|	СтрокиТЧ.ДатаОкончания,
	|	СтрокиТЧ.Показатель1,
	|	СтрокиТЧ.Показатель2,
	|	СтрокиТЧ.Показатель3,
	|	СтрокиТЧ.Показатель4,
	|	СтрокиТЧ.Показатель5,
	|	СтрокиТЧ.Показатель6,
	|	СтрокиТЧ.Результат,
	|	СтрокиТЧ.Сторно,
	|	СтрокиТЧ.Авторасчет";
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА НЕ (МестоРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестоРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ &Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации";
		
	Иначе 
		Запрос.Текст = Запрос.Текст + ",
		|	&Организация КАК СтруктурнаяЕдиница,
		|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК ПодразделениеОрганизации";
		
	КонецЕсли;
	
	ТекстЗапросаПоТабличнымЧастям = "";
	
	Если ВыбиратьНалогиВзносы Тогда
		
		ТекстЗапросаПоТабличнымЧастям = "
		|ВЫБРАТЬ
		|		""ИсчисленныйИПН"" КАК ВидСтрокиЗапроса,
		|		СтрокиИсчисленныйИПН.НомерСтроки,
		|		" + ПолеПериод + " КАК Период,
		|		СтрокиИсчисленныйИПН.ФизЛицо,
		|		ВЫБОР
		|			КОГДА СтрокиИсчисленныйИПН.ФизЛицо ССЫЛКА Справочник.Контрагенты
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ КАК ЯвляетсяКонтрагентом,
		|		СтрокиИсчисленныйИПН.МесяцНалоговогоПериода КАК МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|		СтрокиИсчисленныйИПН.ВидДохода,
		|		СтрокиИсчисленныйИПН.Налог,
		|		СтрокиИсчисленныйИПН.ПримененныйВычет,
		|		СтрокиИсчисленныйИПН.ПримененнаяЛьгота,
		|		СтрокиИсчисленныйИПН.РазрешенныйВычет,
		|		0 КАК Взнос,
		|		СтрокиИсчисленныйИПН.Налог КАК СуммаУдержания,
		|		СтрокиИсчисленныйИПН.ОблагаемаяБаза КАК ОблагаемаяБаза,
		|		0 КАК СуммаВыплаченногоДохода,
		|		0 КАК СуммаУдержанияИЛ,
		|		0 КАК СуммаСборов,
		|		0 КАК СуммаВычета,
		|		NULL КАК ДокументОснование,
		|		NULL КАК Получатель,
		|		NULL КАК ВидРасчета,
		|		NULL КАК ДатаНачала,
		|		NULL КАК ДатаОкончания,
		|		NULL КАК Показатель1,
		|		NULL КАК Показатель2,
		|		NULL КАК Показатель3,
		|		NULL КАК Показатель4,
		|		NULL КАК Показатель5,
		|		NULL КАК Показатель6,
		|		NULL КАК Результат,
		|		NULL КАК Сторно,
		|		NULL КАК Авторасчет
		|	ИЗ
		|		Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныйИПН КАК СтрокиИсчисленныйИПН
		|	ГДЕ
		|		СтрокиИсчисленныйИПН.Ссылка = &ДокументСсылка
		|		" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		""ИсчисленныйОПВ"" КАК ВидСтрокаЗапроса,
		|		СтрокиИсчисленныйОПВ.НомерСтроки,
		|		" + ПолеПериод + " КАК Период,
		|		СтрокиИсчисленныйОПВ.ФизЛицо,
		|		ВЫБОР
		|			КОГДА СтрокиИсчисленныйОПВ.ФизЛицо ССЫЛКА Справочник.Контрагенты
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ КАК ЯвляетсяКонтрагентом,
		|		СтрокиИсчисленныйОПВ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|		NULL КАК ВидДохода,
		|		0 КАК Налог,
		|		0 КАК ПримененныйВычет,
		|		0 КАК ПримененнаяЛьгота,
		|		0 КАК РазрешенныйВычет,
		|		СтрокиИсчисленныйОПВ.Взнос,
		|		СтрокиИсчисленныйОПВ.Взнос КАК СуммаУдержания,
		|		СтрокиИсчисленныйОПВ.ОблагаемаяБаза КАК ОблагаемаяБаза,
		|		0 КАК СуммаВыплаченногоДохода,
		|		0 КАК СуммаУдержанияИЛ,
		|		0 КАК СуммаСборов,
		|		0 КАК СуммаВычета,
		|		NULL КАК ДокументОснование,
		|		NULL КАК Получатель,
		|		NULL КАК ВидРасчета,
		|		NULL КАК ДатаНачала,
		|		NULL КАК ДатаОкончания,
		|		NULL КАК Показатель1,
		|		NULL КАК Показатель2,
		|		NULL КАК Показатель3,
		|		NULL КАК Показатель4,
		|		NULL КАК Показатель5,
		|		NULL КАК Показатель6,
		|		NULL КАК Результат,
		|		NULL КАК Сторно,
		|		NULL КАК Авторасчет
		|	ИЗ
		|		Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныйОПВ КАК СтрокиИсчисленныйОПВ
		|	ГДЕ
		|		СтрокиИсчисленныйОПВ.Ссылка = &ДокументСсылка
		|		" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		""ИсчисленныеВзносыОСМС"" КАК ВидСтрокаЗапроса,
		|		СтрокиИсчисленныеВзносыОСМС.НомерСтроки,
		|		" + ПолеПериод + " КАК Период,
		|		СтрокиИсчисленныеВзносыОСМС.ФизЛицо,
		|		ВЫБОР
		|			КОГДА СтрокиИсчисленныеВзносыОСМС.ФизЛицо ССЫЛКА Справочник.Контрагенты
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ КАК ЯвляетсяКонтрагентом,
		|		СтрокиИсчисленныеВзносыОСМС.МесяцНалоговогоПериода КАК МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|		СтрокиИсчисленныеВзносыОСМС.ВидДохода КАК ВидДохода,
		|		0 КАК Налог,
		|		0 КАК ПримененныйВычет,
		|		0 КАК ПримененнаяЛьгота,
		|		0 КАК РазрешенныйВычет,
		|		СтрокиИсчисленныеВзносыОСМС.Взнос,
		|		СтрокиИсчисленныеВзносыОСМС.Взнос КАК СуммаУдержания,
		|		СтрокиИсчисленныеВзносыОСМС.ОблагаемаяБаза КАК ОблагаемаяБаза,
		|		0 КАК СуммаВыплаченногоДохода,
		|		0 КАК СуммаУдержанияИЛ,
		|		0 КАК СуммаСборов,
		|		0 КАК СуммаВычета,
		|		NULL КАК ДокументОснование,
		|		NULL КАК Получатель,
		|		NULL КАК ВидРасчета,
		|		NULL КАК ДатаНачала,
		|		NULL КАК ДатаОкончания,
		|		NULL КАК Показатель1,
		|		NULL КАК Показатель2,
		|		NULL КАК Показатель3,
		|		NULL КАК Показатель4,
		|		NULL КАК Показатель5,
		|		NULL КАК Показатель6,
		|		NULL КАК Результат,
		|		NULL КАК Сторно,
		|		NULL КАК Авторасчет
		|	ИЗ
		|		Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныеВзносыОСМС КАК СтрокиИсчисленныеВзносыОСМС
		|	ГДЕ
		|		СтрокиИсчисленныеВзносыОСМС.Ссылка = &ДокументСсылка
		|		" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "");
	
	КонецЕсли;	
	
	Если ВыбиратьНалоговыеВычеты Тогда
		
		Если НЕ ПустаяСтрока(ТекстЗапросаПоТабличнымЧастям) Тогда
			ТекстЗапросаПоТабличнымЧастям = ТекстЗапросаПоТабличнымЧастям + "
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
	
		ТекстЗапросаПоТабличнымЧастям = ТекстЗапросаПоТабличнымЧастям + " 
		|	ВЫБРАТЬ
		|		""НалоговыеВычеты"" КАК ВидСтрокиЗапроса,
		|		СтрокиНалоговыеВычеты.НомерСтроки,
		|		" + ПолеПериод + " КАК Период,
		|		СтрокиНалоговыеВычеты.ФизЛицо,
		|		ЛОЖЬ КАК ЯвляетсяКонтрагентом,
		|		СтрокиНалоговыеВычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|		ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя) КАК ВидДохода,
		|		0 КАК Налог,
		|		0 КАК ПримененныйВычет,
		|		0 КАК ПримененнаяЛьгота,
		|		0 КАК РазрешенныйВычет,
		|		0 КАК Взнос,
		|		0 КАК СуммаУдержания,
		|		0 КАК ОблагаемаяБаза,
		|		0 КАК СуммаВыплаченногоДохода,
		|		0 КАК СуммаУдержанияИЛ,
		|		0 КАК СуммаСборов,
		|		СтрокиНалоговыеВычеты.СуммаВычета,
		|		СтрокиНалоговыеВычеты.ДокументОснование,
		|		NULL КАК Получатель,
		|		СтрокиНалоговыеВычеты.ВычетИПН КАК ВидРасчета,
		|		NULL КАК ДатаНачала,
		|		NULL КАК ДатаОкончания,
		|		NULL КАК Показатель1,
		|		NULL КАК Показатель2,
		|		NULL КАК Показатель3,
		|		NULL КАК Показатель4,
		|		NULL КАК Показатель5,
		|		NULL КАК Показатель6,
		|		NULL КАК Результат,
		|		NULL КАК Сторно,
		|		NULL КАК Авторасчет
		|	ИЗ
		|		Документ.РасчетУдержанийРаботниковОрганизаций.НалоговыеВычеты КАК СтрокиНалоговыеВычеты
		|	ГДЕ
		|		СтрокиНалоговыеВычеты.Ссылка = &ДокументСсылка
		|		" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "");
		
	КонецЕсли;
	
	Если ВыбиратьУдержания Тогда
	
		Если НЕ ПустаяСтрока(ТекстЗапросаПоТабличнымЧастям) Тогда
			ТекстЗапросаПоТабличнымЧастям = ТекстЗапросаПоТабличнымЧастям + "
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
	
		ТекстЗапросаПоТабличнымЧастям = ТекстЗапросаПоТабличнымЧастям + "
		|	ВЫБРАТЬ
		|		""Удержания"" КАК ВидСтрокиЗапроса,
		|		СтрокиУдержания.НомерСтроки,
		|		&ПериодРегистрации КАК Период,
		|		СтрокиУдержания.ФизЛицо,
		|		ЛОЖЬ КАК ЯвляетсяКонтрагентом,
		|		&ПериодРегистрации КАК МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|		NULL КАК ВидДохода,
		|		0 КАК Налог,
		|		0 КАК ПримененныйВычет,
		|		0 КАК ПримененнаяЛьгота,
		|		0 КАК РазрешенныйВычет,
		|		0 КАК Взнос,
		|		СтрокиУдержания.Результат КАК СуммаУдержания,
		|		0 КАК ОблагаемаяБаза,
		|		" + ?(ВыборкаПоШапкеДокумента.ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ,"
		|		СтрокиУдержания.Результат", "
		|		ВЫБОР
		|			КОГДА (СтрокиУдержания.ДокументОснование.Ссылка ЕСТЬ NULL)
		|					ИЛИ (НЕ(СтрокиУдержания.ДокументОснование.Ссылка ЕСТЬ NULL) И НЕ(СтрокиУдержания.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист))
		|				ТОГДА СтрокиУдержания.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ") + " КАК СуммаВыплаченногоДохода,
		|		ВЫБОР
		|			КОГДА СтрокиУдержания.ВидРасчета.СпособРасчета В (&СписокСпособыРасчетаИЛ)
		|					ИЛИ СтрокиУдержания.ДокументОснование.СпособПеречисления = ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленияПоИсполнительномуЛисту.ЧерезКассу)
		|				ТОГДА СтрокиУдержания.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК СуммаУдержанияИЛ,
		|		ВЫБОР
		|			КОГДА НЕ(СтрокиУдержания.ВидРасчета.СпособРасчета В (&СписокСпособыРасчетаИЛ))
		|					И СтрокиУдержания.ДокументОснование.СпособПеречисления <> ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленияПоИсполнительномуЛисту.ЧерезКассу)
		|				ТОГДА СтрокиУдержания.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК СуммаСборов,
		|		0 КАК СуммаВычета,
		|		СтрокиУдержания.ДокументОснование,
		|		СтрокиУдержания.ДокументОснование.Получатель КАК Получатель,
		|		СтрокиУдержания.ВидРасчета,
		|		СтрокиУдержания.ДатаНачала,
		|		ВЫБОР 
		|			КОГДА СтрокиУдержания.ДатаОкончания <> &ПустаяДата 
		|				ТОГДА КОНЕЦПЕРИОДА(СтрокиУдержания.ДатаОкончания, ДЕНЬ) 
		|			ИНАЧЕ &ПустаяДата 
		|		КОНЕЦ КАК ДатаОкончания,
		|		СтрокиУдержания.Показатель1,
		|		СтрокиУдержания.Показатель2,
		|		СтрокиУдержания.Показатель3,
		|		СтрокиУдержания.Показатель4,
		|		СтрокиУдержания.Показатель5,
		|		СтрокиУдержания.Показатель6,
		|		СтрокиУдержания.Результат,
		|		СтрокиУдержания.Сторно,
		|		СтрокиУдержания.Авторасчет
		|	ИЗ
		|		Документ.РасчетУдержанийРаботниковОрганизаций.Удержания КАК СтрокиУдержания
		|	ГДЕ
		|		СтрокиУдержания.Ссылка = &ДокументСсылка
		|		" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "") + "
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		""ПогашениеЗаймов"" КАК ВидСтрокиЗапроса,
		|		СтрокиПогашениеЗайма.НомерСтроки,
		|		&ПериодРегистрации КАК Период,
		|		СтрокиПогашениеЗайма.ФизЛицо,
		|		ЛОЖЬ КАК ЯвляетсяКонтрагентом,
		|		&ПериодРегистрации КАК МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|		NULL КАК ВидДохода,
		|		0 КАК Налог,
		|		0 КАК ПримененныйВычет,
		|		0 КАК ПримененнаяЛьгота,
		|		0 КАК РазрешенныйВычет,
		|		0 КАК Взнос,
		|		СтрокиПогашениеЗайма.ПогашеноЗайма КАК СуммаУдержания,
		|		0 КАК ОблагаемаяБаза,
		|		СтрокиПогашениеЗайма.ПогашеноЗайма КАК СуммаВыплаченногоДохода,
		|		0 КАК СуммаУдержанияИЛ,
		|		0 КАК СуммаСборов,
		|		0 КАК СуммаВычета,
		|		СтрокиПогашениеЗайма.ДоговорЗайма КАК ДокументОснование,
		|		NULL КАК Получатель,
		|		NULL КАК ВидРасчета,
		|		NULL КАК ДатаНачала,
		|		NULL КАК ДатаОкончания,
		|		NULL КАК Показатель1,
		|		NULL КАК Показатель2,
		|		NULL КАК Показатель3,
		|		NULL КАК Показатель4,
		|		NULL КАК Показатель5,
		|		NULL КАК Показатель6,
		|		СтрокиПогашениеЗайма.ПогашеноЗайма КАК Результат,
		|		NULL КАК Сторно,
		|		NULL КАК Авторасчет
		|	ИЗ
		|		Документ.РасчетУдержанийРаботниковОрганизаций.ПогашениеЗаймов КАК СтрокиПогашениеЗайма
		|	ГДЕ
		|		СтрокиПогашениеЗайма.Ссылка = &ДокументСсылка
		|		" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "");
	
	КонецЕсли;
	
	Если ВыбиратьВычетыИПН Тогда
	
		Если НЕ ПустаяСтрока(ТекстЗапросаПоТабличнымЧастям) Тогда
			ТекстЗапросаПоТабличнымЧастям = ТекстЗапросаПоТабличнымЧастям + "
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
	
		ТекстЗапросаПоТабличнымЧастям = ТекстЗапросаПоТабличнымЧастям + "
		|	ВЫБРАТЬ
		|		""ВычетыИПН"" КАК ВидСтрокиЗапроса,
		|		СтрокиВычетыИПН.НомерСтроки,
		|		&ПериодРегистрации КАК Период,
		|		СтрокиВычетыИПН.ФизЛицо,
		|		ЛОЖЬ КАК ЯвляетсяКонтрагентом,
		|		СтрокиВычетыИПН.МесяцНалоговогоПериода КАК МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|		СтрокиВычетыИПН.ВидДохода КАК ВидДохода,
		|		0 КАК Налог,
		|		СтрокиВычетыИПН.ПримененныйВычет КАК ПримененныйВычет,
		|		0 КАК ПримененнаяЛьгота,
		|		СтрокиВычетыИПН.РазрешенныйВычет КАК РазрешенныйВычет,
		|		0 КАК Взнос,
		|		0 КАК СуммаУдержания,
		|		0 КАК ОблагаемаяБаза,
		|		0 КАК СуммаВыплаченногоДохода,
		|		0 КАК СуммаУдержанияИЛ,
		|		0 КАК СуммаСборов,
		|		0 КАК СуммаВычета,
		|		NULL КАК ДокументОснование,
		|		NULL КАК Получатель,
		|		СтрокиВычетыИПН.ВидВычета КАК ВидРасчета,
		|		NULL КАК ДатаНачала,
		|		NULL КАК ДатаОкончания,
		|		NULL КАК Показатель1,
		|		NULL КАК Показатель2,
		|		NULL КАК Показатель3,
		|		NULL КАК Показатель4,
		|		NULL КАК Показатель5,
		|		NULL КАК Показатель6,
		|		NULL КАК Результат,
		|		NULL КАК Сторно,
		|		NULL КАК Авторасчет
		|	ИЗ
		|		Документ.РасчетУдержанийРаботниковОрганизаций.ВычетыИПН КАК СтрокиВычетыИПН
		|	ГДЕ
		|		СтрокиВычетыИПН.Ссылка = &ДокументСсылка
		|		" + ?(ФизЛицо <> Неопределено, "И ФизЛицо В (&парамФизЛицо)", "");
	
	КонецЕсли;
	
	ТекстЗапросаПоТабличнымЧастям = "ВЫБРАТЬ *  
							|	ПОМЕСТИТЬ ТабЧастиВТ
							|	ИЗ ("+ТекстЗапросаПоТабличнымЧастям+") КАК ЗапросКТабЧастям;";
	ТекстЗапросаПоТабличнымЧастямВТ="ТабЧастиВТ";
	
	Запрос.Текст =ТекстЗапросаПоТабличнымЧастям+ Запрос.Текст + "
	|	
	|ИЗ
	|	" + ТекстЗапросаПоТабличнымЧастямВТ + " КАК СтрокиТЧ";
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Запрос.Текст = Запрос.Текст + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ " + МестоРаботыВТ + " КАК МестоРаботы
		|		ПО СтрокиТЧ.ФизЛицо = МестоРаботы.ФизЛицо 
		|			И СтрокиТЧ.Период = МестоРаботы.Период";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|УПОРЯДОЧИТЬ ПО
	|	ВидСтрокиЗапроса,
	|	НомерСтроки
	|";
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоТабличнымЧастям()

// Выполняет распределение результатов по структурым единицам и подразделениям
//
Функция РаспределитьРезультатыПоСтруктурнымЕдиницам(ВыборкаПоШапкеДокумента)
	
	РаспределятьНалогиПоПодразделениямОрганизаций = ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамСсылка", Ссылка);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("парамНачало", НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации));
	Запрос.УстановитьПараметр("парамОкончание", КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации));
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		ИсчислениеНалоговСтруктурныхЕдиниц = глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц");
		Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ВыборкаПоШапкеДокумента.Организация, 
																		ВыборкаПоШапкеДокумента.Организация, 
																		ИсчислениеНалоговСтруктурныхЕдиниц, 
																		Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	Иначе
		Налогоплательщик = ВыборкаПоШапкеДокумента.Организация;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("парамНалогоплательщик", Налогоплательщик);
	Запрос.УстановитьПараметр("парамПустаяДата", Дата(1,1,1));
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
	// ТАБЛИЧНЫЕ ЧАСТИ
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИсчисленныйОПВ.Ссылка,
		|	ИсчисленныйОПВ.НомерСтроки,
		|	ИсчисленныйОПВ.ФизЛицо,
		|	ИсчисленныйОПВ.Взнос,
		|	ИсчисленныйОПВ.МесяцНалоговогоПериода,
		|	ИсчисленныйОПВ.ОблагаемаяБаза,
		|	ИсчисленныйОПВ.Ссылка.Организация,
		|	ИсчисленныйОПВ.Ссылка.ПериодРегистрации
		|ПОМЕСТИТЬ ВТ_ТабличнаяЧастьОПВ
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныйОПВ КАК ИсчисленныйОПВ
		|ГДЕ
		|	ИсчисленныйОПВ.Ссылка = &парамСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИсчисленныйИПН.Ссылка,
		|	ИсчисленныйИПН.НомерСтроки,
		|	ИсчисленныйИПН.ФизЛицо,
		|	ИсчисленныйИПН.ВидДохода,
		|	ИсчисленныйИПН.Налог,
		|	ИсчисленныйИПН.ПримененныйВычет,
		|	ИсчисленныйИПН.ПримененнаяЛьгота,
		|	ИсчисленныйИПН.МесяцНалоговогоПериода,
		|	ИсчисленныйИПН.РазрешенныйВычет,
		|	ИсчисленныйИПН.ОблагаемаяБаза,
		|	ИсчисленныйИПН.Ссылка.Организация,
		|	ИсчисленныйИПН.Ссылка.ПериодРегистрации
		|ПОМЕСТИТЬ ВТ_ТабличнаяЧастьИПН
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныйИПН КАК ИсчисленныйИПН
		|ГДЕ
		|	ИсчисленныйИПН.Ссылка = &парамСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВычетыИПН.Ссылка,
		|	ВычетыИПН.НомерСтроки,
		|	ВычетыИПН.ФизЛицо,
		|	ВычетыИПН.ПримененныйВычет,
		|	ВычетыИПН.МесяцНалоговогоПериода,
		|	ВычетыИПН.РазрешенныйВычет,
		|	ВычетыИПН.ВидВычета,
		|	ВычетыИПН.ВидДохода,
		|	ВычетыИПН.Ссылка.Организация,
		|	ВычетыИПН.Ссылка.ПериодРегистрации
		|ПОМЕСТИТЬ ВТ_ТабличнаяЧастьВычетыИПН
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций.ВычетыИПН КАК ВычетыИПН
		|ГДЕ
		|	ВычетыИПН.Ссылка = &парамСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИсчисленныеВзносыОСМС.Ссылка,
		|	ИсчисленныеВзносыОСМС.НомерСтроки,
		|	ИсчисленныеВзносыОСМС.ФизЛицо,
		|	ИсчисленныеВзносыОСМС.ВидДохода,
		|	ИсчисленныеВзносыОСМС.Взнос,
		|	ИсчисленныеВзносыОСМС.МесяцНалоговогоПериода,
		|	ИсчисленныеВзносыОСМС.ОблагаемаяБаза,
		|	ИсчисленныеВзносыОСМС.Ссылка.Организация,
		|	ИсчисленныеВзносыОСМС.Ссылка.ПериодРегистрации
		|ПОМЕСТИТЬ ВТ_ТабличнаяЧастьВОСМС
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций.ИсчисленныеВзносыОСМС КАК ИсчисленныеВзносыОСМС
		|ГДЕ
		|	ИсчисленныеВзносыОСМС.Ссылка = &парамСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НалоговыеВычеты.Ссылка,
		|	НалоговыеВычеты.НомерСтроки,
		|	НалоговыеВычеты.ФизЛицо,
		|	НалоговыеВычеты.ВычетИПН,
		|	НалоговыеВычеты.ДокументОснование,
		|	НалоговыеВычеты.МесяцНалоговогоПериода,
		|	НалоговыеВычеты.СуммаВычета,
		|	НалоговыеВычеты.Авторасчет,
		|	НалоговыеВычеты.Ссылка.Организация,
		|	НалоговыеВычеты.Ссылка.ПериодРегистрации
		|ПОМЕСТИТЬ ВТ_ТабличнаяЧастьНалоговыеВычеты
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций.НалоговыеВычеты КАК НалоговыеВычеты
		|ГДЕ
		|	НалоговыеВычеты.Ссылка = &парамСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Удержания.Ссылка,
		|	Удержания.НомерСтроки,
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.Показатель1,
		|	Удержания.Показатель2,
		|	Удержания.Показатель3,
		|	Удержания.Показатель4,
		|	Удержания.Показатель5,
		|	Удержания.Показатель6,
		|	Удержания.ДатаНачала,
		|	Удержания.ДатаОкончания,
		|	Удержания.ДокументОснование,
		|	Удержания.Результат,
		|	Удержания.Сторно,
		|	Удержания.Авторасчет,
		|	Удержания.Ссылка.Организация,
		|	Удержания.Ссылка.ПериодРегистрации,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ БазовыеВидыРасчета.ВидРасчета) КАК КоличествоБазовыхРасчетов
		|ПОМЕСТИТЬ ВТ_ТабличнаяЧастьУдержания
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций.Удержания КАК Удержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК БазовыеВидыРасчета
		|		ПО Удержания.ВидРасчета = БазовыеВидыРасчета.Ссылка
		|ГДЕ
		|	Удержания.Ссылка = &парамСсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Удержания.Ссылка,
		|	Удержания.НомерСтроки,
		|	Удержания.ФизЛицо,
		|	Удержания.ВидРасчета,
		|	Удержания.Показатель1,
		|	Удержания.Показатель2,
		|	Удержания.Показатель3,
		|	Удержания.Показатель4,
		|	Удержания.Показатель5,
		|	Удержания.Показатель6,
		|	Удержания.ДатаНачала,
		|	Удержания.ДатаОкончания,
		|	Удержания.ДокументОснование,
		|	Удержания.Результат,
		|	Удержания.Сторно,
		|	Удержания.Авторасчет,
		|	Удержания.Ссылка.Организация,
		|	Удержания.Ссылка.ПериодРегистрации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПогашениеЗаймов.Ссылка,
		|	ПогашениеЗаймов.НомерСтроки,
		|	ПогашениеЗаймов.ФизЛицо,
		|	ПогашениеЗаймов.ДоговорЗайма,
		|	ПогашениеЗаймов.ПогашеноЗайма,
		|	ПогашениеЗаймов.Авторасчет,
		|	ПогашениеЗаймов.Ссылка.Организация,
		|	ПогашениеЗаймов.Ссылка.ПериодРегистрации
		|ПОМЕСТИТЬ ВТ_ТабличнаяЧастьПогашениеЗаймов
		|ИЗ
		|	Документ.РасчетУдержанийРаботниковОрганизаций.ПогашениеЗаймов КАК ПогашениеЗаймов
		|ГДЕ
		|	ПогашениеЗаймов.Ссылка = &парамСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧастьОПВ.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТ_СписокФизЛиц
		|ИЗ
		|	ВТ_ТабличнаяЧастьОПВ КАК ТабличнаяЧастьОПВ
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧастьИПН.ФизЛицо
		|ИЗ
		|	ВТ_ТабличнаяЧастьИПН КАК ТабличнаяЧастьИПН
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧастьНалоговыеВычеты.ФизЛицо
		|ИЗ
		|	ВТ_ТабличнаяЧастьНалоговыеВычеты КАК ТабличнаяЧастьНалоговыеВычеты
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧастьУдержания.ФизЛицо
		|ИЗ
		|	ВТ_ТабличнаяЧастьУдержания КАК ТабличнаяЧастьУдержания
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧастьВОСМС.ФизЛицо
		|ИЗ
		|	ВТ_ТабличнаяЧастьВОСМС КАК ТабличнаяЧастьВОСМС
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧастьПогашениеЗаймов.ФизЛицо
		|ИЗ
		|	ВТ_ТабличнаяЧастьПогашениеЗаймов КАК ТабличнаяЧастьПогашениеЗаймов
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧастьВычетыИПН.ФизЛицо
		|ИЗ
		|	ВТ_ТабличнаяЧастьВычетыИПН КАК ТабличнаяЧастьВычетыИПН";
		
		
	Запрос.Выполнить();
	СписокФизЛицТекст = "ВТ_СписокФизЛиц";
	
	ПолеПериод = ?(ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации, "ПериодРегистрации", "МесяцНалоговогоПериода");

	// Для корректного распределения в случае доначисления учтем все ранее начисленные суммы
	// (доначисление поддерживается только для ИПН и ОВП, поэтому учитываем только их)
	РанееИсчисленныеНалогиВзносыТекст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РанееИсчисленныйИПН.НомерСтроки,
		|	РанееИсчисленныйИПН.ФизЛицо,
		|	РанееИсчисленныйИПН.МесяцНалоговогоПериода,
		|	РанееИсчисленныйИПН.ПериодРегистрации,
		|	РанееИсчисленныйИПН.Организация,
		|	РанееИсчисленныйИПН.СтруктурнаяЕдиница," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	РанееИсчисленныйИПН.ПодразделениеОрганизации,", "") + "
		|	РанееИсчисленныйИПН.ВидДохода,
		|	СУММА(РанееИсчисленныйИПН.Налог) КАК Налог,
		|	СУММА(РанееИсчисленныйИПН.ОблагаемаяБаза) КАК ОблагаемаяБаза,
		|	СУММА(РанееИсчисленныйИПН.ПримененныйВычет) КАК ПримененныйВычет,
		|	СУММА(РанееИсчисленныйИПН.ПримененнаяЛьгота) КАК ПримененнаяЛьгота,
		|	СУММА(РанееИсчисленныйИПН.РазрешенныйВычет) КАК РазрешенныйВычет
		|ПОМЕСТИТЬ ВТ_РанееИсчисленныйИПН
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТабличнаяЧастьИПН.НомерСтроки КАК НомерСтроки,
		|		ИПНИсчисленный.ФизЛицо КАК ФизЛицо,
		|		ИПНИсчисленный.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|		ИПНИсчисленный.Период КАК ПериодРегистрации,
		|		ТабличнаяЧастьИПН.Организация КАК Организация,
		|		ИПНИсчисленный.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|		ИПНИсчисленный.ПодразделениеОрганизации КАК ПодразделениеОрганизации,", "") + "
		|		ИПНИсчисленный.ВидДохода КАК ВидДохода,
		|		ИПНИсчисленный.НалогОборот КАК Налог,
		|		0 КАК ОблагаемаяБаза,
		|		0 КАК ПримененныйВычет,
		|		0 КАК ПримененнаяЛьгота,
		|		0 КАК РазрешенныйВычет
		|	ИЗ
		|		РегистрНакопления.ИПНИсчисленный.Обороты(&парамНачало, &парамОкончание, Месяц, Налогоплательщик = &парамНалогоплательщик) КАК ИПНИсчисленный
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьИПН КАК ТабличнаяЧастьИПН
		|			ПО ИПНИсчисленный.ФизЛицо = ТабличнаяЧастьИПН.ФизЛицо
		|				И ИПНИсчисленный.ВидДохода = ТабличнаяЧастьИПН.ВидДохода
		|				И (НАЧАЛОПЕРИОДА(ИПНИсчисленный.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьИПН.ПериодРегистрации, МЕСЯЦ))
		|				И (НАЧАЛОПЕРИОДА(ИПНИсчисленный.МесяцНалоговогоПериода, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьИПН." + ПолеПериод + ", МЕСЯЦ))
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабличнаяЧастьИПН.НомерСтроки,
		|		ИПНСведенияОДоходах.ФизЛицо,
		|		ИПНСведенияОДоходах.Период,
		|		ИПНСведенияОДоходах.ПериодРегистрации,
		|		ТабличнаяЧастьИПН.Организация,
		|		ИПНСведенияОДоходах.СтруктурнаяЕдиница," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|		ИПНСведенияОДоходах.ПодразделениеОрганизации,", "") + "
		|		ИПНСведенияОДоходах.ВидДохода,
		|		0,
		|		ИПНСведенияОДоходах.ОблагаемаяБазаОборот,
		|		ИПНСведенияОДоходах.ПримененныйВычетОборот,
		|		ИПНСведенияОДоходах.ПримененнаяЛьготаОборот,
		|		ИПНСведенияОДоходах.РазрешенныйВычетОборот
		|	ИЗ
		|		РегистрНакопления.ИПНСведенияОДоходах.Обороты(
		|				,
		|				,
		|				Месяц,
		|				Налогоплательщик = &парамНалогоплательщик
		|					И ПериодРегистрации = &парамПериодРегистрации
		|					И СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом)) КАК ИПНСведенияОДоходах
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьИПН КАК ТабличнаяЧастьИПН
		|			ПО ИПНСведенияОДоходах.ФизЛицо = ТабличнаяЧастьИПН.ФизЛицо
		|				И ИПНСведенияОДоходах.ВидДохода = ТабличнаяЧастьИПН.ВидДохода
		|				И (НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьИПН.ПериодРегистрации, МЕСЯЦ))
		|				И (НАЧАЛОПЕРИОДА(ИПНСведенияОДоходах.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьИПН." + ПолеПериод + ", МЕСЯЦ))) КАК РанееИсчисленныйИПН
		|
		|СГРУППИРОВАТЬ ПО
		|	РанееИсчисленныйИПН.НомерСтроки,
		|	РанееИсчисленныйИПН.ФизЛицо,
		|	РанееИсчисленныйИПН.МесяцНалоговогоПериода,
		|	РанееИсчисленныйИПН.ПериодРегистрации,
		|	РанееИсчисленныйИПН.Организация,
		|	РанееИсчисленныйИПН.СтруктурнаяЕдиница," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	РанееИсчисленныйИПН.ПодразделениеОрганизации,", "") + "
		|	РанееИсчисленныйИПН.ВидДохода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РанееИсчисленныйОПВ.НомерСтроки,
		|	РанееИсчисленныйОПВ.ФизЛицо,
		|	РанееИсчисленныйОПВ.МесяцНалоговогоПериода,
		|	РанееИсчисленныйОПВ.ПериодРегистрации,
		|	РанееИсчисленныйОПВ.Организация,
		|	РанееИсчисленныйОПВ.СтруктурнаяЕдиница," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	РанееИсчисленныйОПВ.ПодразделениеОрганизации,", "") + "
		|	СУММА(РанееИсчисленныйОПВ.Взнос) КАК Взнос,
		|	СУММА(РанееИсчисленныйОПВ.ОблагаемаяБаза) КАК ОблагаемаяБаза
		|ПОМЕСТИТЬ ВТ_РанееИсчисленныйОПВ
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТабличнаяЧастьОПВ.НомерСтроки КАК НомерСтроки,
		|		ОПВРасчетыСФондами.ФизЛицо КАК ФизЛицо,
		|		ОПВРасчетыСФондами.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|		НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.Период, МЕСЯЦ) КАК ПериодРегистрации,
		|		ТабличнаяЧастьОПВ.Организация КАК Организация,
		|		ОПВРасчетыСФондами.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|		ОПВРасчетыСФондами.ПодразделениеОрганизации КАК ПодразделениеОрганизации,", "") + "
		|		ОПВРасчетыСФондами.Взнос КАК Взнос,
		|		0 КАК ОблагаемаяБаза
		|	ИЗ
		|		РегистрНакопления.ОПВРасчетыСФондами КАК ОПВРасчетыСФондами
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьОПВ КАК ТабличнаяЧастьОПВ
		|			ПО ОПВРасчетыСФондами.ФизЛицо = ТабличнаяЧастьОПВ.ФизЛицо
		|				И (НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьОПВ.ПериодРегистрации, МЕСЯЦ))
		|				И (НАЧАЛОПЕРИОДА(ОПВРасчетыСФондами.МесяцНалоговогоПериода, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьОПВ." + ПолеПериод + ", МЕСЯЦ))
		|				И ОПВРасчетыСФондами.Налогоплательщик = &парамНалогоплательщик 
		|				И ОПВРасчетыСФондами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				И ОПВРасчетыСФондами.ВидПлатежа = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВБюджетИФонды.Налог)
		|				И ОПВРасчетыСФондами.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.РасчетыСБюджетомФондамиВидСтроки.Исчисление)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабличнаяЧастьОПВ.НомерСтроки,
		|		ОПВСведенияОДоходах.ФизЛицо,
		|		ОПВСведенияОДоходах.Период,
		|		ОПВСведенияОДоходах.ПериодРегистрации,
		|		ТабличнаяЧастьОПВ.Организация,
		|		ОПВСведенияОДоходах.СтруктурнаяЕдиница," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|		ОПВСведенияОДоходах.ПодразделениеОрганизации,", "") + "
		|		0,
		|		ОПВСведенияОДоходах.ОблагаемаяБазаОборот
		|	ИЗ
		|		РегистрНакопления.ОПВСведенияОДоходах.Обороты(
		|				,
		|				,
		|				Месяц,
		|				Налогоплательщик = &парамНалогоплательщик
		|					И ПериодРегистрации = &парамПериодРегистрации
		|					И СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом)) КАК ОПВСведенияОДоходах
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьОПВ КАК ТабличнаяЧастьОПВ
		|			ПО ОПВСведенияОДоходах.ФизЛицо = ТабличнаяЧастьОПВ.ФизЛицо
		|				И (НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.ПериодРегистрации, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьОПВ.ПериодРегистрации, МЕСЯЦ))
		|				И (НАЧАЛОПЕРИОДА(ОПВСведенияОДоходах.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьОПВ." + ПолеПериод + ", МЕСЯЦ))) КАК РанееИсчисленныйОПВ
		|
		|СГРУППИРОВАТЬ ПО
		|	РанееИсчисленныйОПВ.НомерСтроки,
		|	РанееИсчисленныйОПВ.ФизЛицо,
		|	РанееИсчисленныйОПВ.МесяцНалоговогоПериода,
		|	РанееИсчисленныйОПВ.ПериодРегистрации,
		|	РанееИсчисленныйОПВ.Организация,
		|	РанееИсчисленныйОПВ.СтруктурнаяЕдиница" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	РанееИсчисленныйОПВ.ПодразделениеОрганизации", "") + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РанееИсчисленныеВзносыОСМС.НомерСтроки,
		|	РанееИсчисленныеВзносыОСМС.ФизЛицо,
		|	РанееИсчисленныеВзносыОСМС.МесяцНалоговогоПериода,
		|	РанееИсчисленныеВзносыОСМС.ПериодРегистрации,
		|	РанееИсчисленныеВзносыОСМС.Организация,
		|	РанееИсчисленныеВзносыОСМС.СтруктурнаяЕдиница," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	РанееИсчисленныеВзносыОСМС.ПодразделениеОрганизации,", "") + "
		|	РанееИсчисленныеВзносыОСМС.ВидДохода,
		|	СУММА(РанееИсчисленныеВзносыОСМС.Взнос) КАК Взнос,
		|	СУММА(РанееИсчисленныеВзносыОСМС.ОблагаемаяБаза) КАК ОблагаемаяБаза
		|ПОМЕСТИТЬ ВТ_РанееИсчисленныеВзносыОСМС
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТабличнаяЧастьВОСМС.НомерСтроки КАК НомерСтроки,
		|		ВОСМСИсчисленные.ФизЛицо КАК ФизЛицо,
		|		ВОСМСИсчисленные.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|		ВОСМСИсчисленные.Период КАК ПериодРегистрации,
		|		ТабличнаяЧастьВОСМС.Организация КАК Организация,
		|		ВОСМСИсчисленные.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|		ВОСМСИсчисленные.ПодразделениеОрганизации КАК ПодразделениеОрганизации,", "") + "
		|		ВОСМСИсчисленные.ВидДохода КАК ВидДохода,
		|		ВОСМСИсчисленные.ВзносОборот КАК Взнос,
		|		0 КАК ОблагаемаяБаза
		|	ИЗ
		|		РегистрНакопления.ВОСМСИсчисленные.Обороты(&парамНачало, &парамОкончание, Месяц, Налогоплательщик = &парамНалогоплательщик) КАК ВОСМСИсчисленные
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьВОСМС КАК ТабличнаяЧастьВОСМС
		|			ПО ВОСМСИсчисленные.ФизЛицо = ТабличнаяЧастьВОСМС.ФизЛицо
		|				И ВОСМСИсчисленные.ВидДохода = ТабличнаяЧастьВОСМС.ВидДохода
		|				И (НАЧАЛОПЕРИОДА(ВОСМСИсчисленные.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьВОСМС.ПериодРегистрации, МЕСЯЦ))
		|				И (НАЧАЛОПЕРИОДА(ВОСМСИсчисленные.МесяцНалоговогоПериода, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьВОСМС." + ПолеПериод + ", МЕСЯЦ))
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабличнаяЧастьВОСМС.НомерСтроки,
		|		ВОСМССведенияОДоходах.ФизЛицо,
		|		ВОСМССведенияОДоходах.Период,
		|		ВОСМССведенияОДоходах.ПериодРегистрации,
		|		ТабличнаяЧастьВОСМС.Организация,
		|		ВОСМССведенияОДоходах.СтруктурнаяЕдиница," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|		ВОСМССведенияОДоходах.ПодразделениеОрганизации,", "") + "
		|		ВОСМССведенияОДоходах.ВидДохода,
		|		0,
		|		ВОСМССведенияОДоходах.ОблагаемаяБазаОборот
		|	ИЗ
		|		РегистрНакопления.ВОСМССведенияОДоходах.Обороты(
		|				,
		|				,
		|				Месяц,
		|				Налогоплательщик = &парамНалогоплательщик
		|					И ПериодРегистрации = &парамПериодРегистрации
		|					И СпособНалогообложения = ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом)) КАК ВОСМССведенияОДоходах
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьВОСМС КАК ТабличнаяЧастьВОСМС
		|			ПО ВОСМССведенияОДоходах.ФизЛицо = ТабличнаяЧастьВОСМС.ФизЛицо
		|				И ВОСМССведенияОДоходах.ВидДохода = ТабличнаяЧастьВОСМС.ВидДохода
		|				И (НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.ПериодРегистрации, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьВОСМС.ПериодРегистрации, МЕСЯЦ))
		|				И (НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходах.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ТабличнаяЧастьВОСМС." + ПолеПериод + ", МЕСЯЦ))) КАК РанееИсчисленныеВзносыОСМС
		|
		|СГРУППИРОВАТЬ ПО
		|	РанееИсчисленныеВзносыОСМС.НомерСтроки,
		|	РанееИсчисленныеВзносыОСМС.ФизЛицо,
		|	РанееИсчисленныеВзносыОСМС.МесяцНалоговогоПериода,
		|	РанееИсчисленныеВзносыОСМС.ПериодРегистрации,
		|	РанееИсчисленныеВзносыОСМС.Организация,
		|	РанееИсчисленныеВзносыОСМС.СтруктурнаяЕдиница," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	РанееИсчисленныеВзносыОСМС.ПодразделениеОрганизации,", "") + "
		|	РанееИсчисленныеВзносыОСМС.ВидДохода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсчисленныйИПН.НомерСтроки,
		|	ИсчисленныйИПН.ФизЛицо,
		|	ИсчисленныйИПН.МесяцНалоговогоПериода,
		|	ИсчисленныйИПН.ВидДохода,
		|	ИсчисленныйИПН.ПериодРегистрации,
		|	ИсчисленныйИПН.Организация,
		|	СУММА(ИсчисленныйИПН.Налог) КАК Налог,
		|	СУММА(ИсчисленныйИПН.ОблагаемаяБаза) КАК ОблагаемаяБаза,
		|	СУММА(ИсчисленныйИПН.ПримененныйВычет) КАК ПримененныйВычет,
		|	СУММА(ИсчисленныйИПН.ПримененнаяЛьгота) КАК ПримененнаяЛьгота,
		|	СУММА(ИсчисленныйИПН.РазрешенныйВычет) КАК РазрешенныйВычет
		|ПОМЕСТИТЬ ВТ_ИсчисленныйИПН
		|ИЗ
		|	(ВЫБРАТЬ
		|		РанееИсчисленныйИПН.НомерСтроки КАК НомерСтроки,
		|		РанееИсчисленныйИПН.ФизЛицо КАК ФизЛицо,
		|		РанееИсчисленныйИПН.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|		РанееИсчисленныйИПН.ВидДохода КАК ВидДохода,
		|		РанееИсчисленныйИПН.ПериодРегистрации КАК ПериодРегистрации,
		|		РанееИсчисленныйИПН.Организация КАК Организация,
		|		РанееИсчисленныйИПН.Налог КАК Налог,
		|		РанееИсчисленныйИПН.ОблагаемаяБаза КАК ОблагаемаяБаза,
		|		РанееИсчисленныйИПН.ПримененныйВычет КАК ПримененныйВычет,
		|		РанееИсчисленныйИПН.ПримененнаяЛьгота КАК ПримененнаяЛьгота,
		|		РанееИсчисленныйИПН.РазрешенныйВычет КАК РазрешенныйВычет
		|	ИЗ
		|		ВТ_РанееИсчисленныйИПН КАК РанееИсчисленныйИПН
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабличнаяЧастьИПН.НомерСтроки,
		|		ТабличнаяЧастьИПН.ФизЛицо,
		|		ТабличнаяЧастьИПН.МесяцНалоговогоПериода,
		|		ТабличнаяЧастьИПН.ВидДохода,
		|		ТабличнаяЧастьИПН.ПериодРегистрации,
		|		ТабличнаяЧастьИПН.Организация,
		|		ТабличнаяЧастьИПН.Налог,
		|		ТабличнаяЧастьИПН.ОблагаемаяБаза,
		|		ТабличнаяЧастьИПН.ПримененныйВычет,
		|		ТабличнаяЧастьИПН.ПримененнаяЛьгота,
		|		ТабличнаяЧастьИПН.РазрешенныйВычет
		|	ИЗ
		|		ВТ_ТабличнаяЧастьИПН КАК ТабличнаяЧастьИПН) КАК ИсчисленныйИПН
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсчисленныйИПН.НомерСтроки,
		|	ИсчисленныйИПН.ФизЛицо,
		|	ИсчисленныйИПН.МесяцНалоговогоПериода,
		|	ИсчисленныйИПН.ВидДохода,
		|	ИсчисленныйИПН.ПериодРегистрации,
		|	ИсчисленныйИПН.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсчисленныйОПВ.НомерСтроки,
		|	ИсчисленныйОПВ.ФизЛицо,
		|	ИсчисленныйОПВ.МесяцНалоговогоПериода,
		|	ИсчисленныйОПВ.ПериодРегистрации,
		|	ИсчисленныйОПВ.Организация,
		|	СУММА(ИсчисленныйОПВ.Взнос) КАК Взнос,
		|	СУММА(ИсчисленныйОПВ.ОблагаемаяБаза) КАК ОблагаемаяБаза
		|ПОМЕСТИТЬ ВТ_ИсчисленныйОПВ
		|ИЗ
		|	(ВЫБРАТЬ
		|		РанееИсчисленныйОПВ.НомерСтроки КАК НомерСтроки,
		|		РанееИсчисленныйОПВ.ФизЛицо КАК ФизЛицо,
		|		РанееИсчисленныйОПВ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|		РанееИсчисленныйОПВ.ПериодРегистрации КАК ПериодРегистрации,
		|		РанееИсчисленныйОПВ.Организация КАК Организация,
		|		РанееИсчисленныйОПВ.Взнос КАК Взнос,
		|		РанееИсчисленныйОПВ.ОблагаемаяБаза КАК ОблагаемаяБаза
		|	ИЗ
		|		ВТ_РанееИсчисленныйОПВ КАК РанееИсчисленныйОПВ
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабличнаяЧастьОПВ.НомерСтроки,
		|		ТабличнаяЧастьОПВ.ФизЛицо,
		|		ТабличнаяЧастьОПВ.МесяцНалоговогоПериода,
		|		ТабличнаяЧастьОПВ.ПериодРегистрации,
		|		ТабличнаяЧастьОПВ.Организация,
		|		ТабличнаяЧастьОПВ.Взнос,
		|		ТабличнаяЧастьОПВ.ОблагаемаяБаза
		|	ИЗ
		|		ВТ_ТабличнаяЧастьОПВ КАК ТабличнаяЧастьОПВ) КАК ИсчисленныйОПВ
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсчисленныйОПВ.НомерСтроки,
		|	ИсчисленныйОПВ.ФизЛицо,
		|	ИсчисленныйОПВ.МесяцНалоговогоПериода,
		|	ИсчисленныйОПВ.ПериодРегистрации,
		|	ИсчисленныйОПВ.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсчисленныеВзносыОСМС.НомерСтроки,
		|	ИсчисленныеВзносыОСМС.ФизЛицо,
		|	ИсчисленныеВзносыОСМС.МесяцНалоговогоПериода,
		|	ИсчисленныеВзносыОСМС.ВидДохода,
		|	ИсчисленныеВзносыОСМС.ПериодРегистрации,
		|	ИсчисленныеВзносыОСМС.Организация,
		|	СУММА(ИсчисленныеВзносыОСМС.Взнос) КАК Взнос,
		|	СУММА(ИсчисленныеВзносыОСМС.ОблагаемаяБаза) КАК ОблагаемаяБаза
		|ПОМЕСТИТЬ ВТ_ИсчисленныеВзносыОСМС
		|ИЗ
		|	(ВЫБРАТЬ
		|		РанееИсчисленныеВзносыОСМС.НомерСтроки КАК НомерСтроки,
		|		РанееИсчисленныеВзносыОСМС.ФизЛицо КАК ФизЛицо,
		|		РанееИсчисленныеВзносыОСМС.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|		РанееИсчисленныеВзносыОСМС.ВидДохода КАК ВидДохода,
		|		РанееИсчисленныеВзносыОСМС.ПериодРегистрации КАК ПериодРегистрации,
		|		РанееИсчисленныеВзносыОСМС.Организация КАК Организация,
		|		РанееИсчисленныеВзносыОСМС.Взнос КАК Взнос,
		|		РанееИсчисленныеВзносыОСМС.ОблагаемаяБаза КАК ОблагаемаяБаза
		|	ИЗ
		|		ВТ_РанееИсчисленныеВзносыОСМС КАК РанееИсчисленныеВзносыОСМС
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабличнаяЧастьВОСМС.НомерСтроки,
		|		ТабличнаяЧастьВОСМС.ФизЛицо,
		|		ТабличнаяЧастьВОСМС.МесяцНалоговогоПериода,
		|		ТабличнаяЧастьВОСМС.ВидДохода,
		|		ТабличнаяЧастьВОСМС.ПериодРегистрации,
		|		ТабличнаяЧастьВОСМС.Организация,
		|		ТабличнаяЧастьВОСМС.Взнос,
		|		ТабличнаяЧастьВОСМС.ОблагаемаяБаза
		|	ИЗ
		|		ВТ_ТабличнаяЧастьВОСМС КАК ТабличнаяЧастьВОСМС) КАК ИсчисленныеВзносыОСМС
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсчисленныеВзносыОСМС.НомерСтроки,
		|	ИсчисленныеВзносыОСМС.ФизЛицо,
		|	ИсчисленныеВзносыОСМС.МесяцНалоговогоПериода,
		|	ИсчисленныеВзносыОСМС.ВидДохода,
		|	ИсчисленныеВзносыОСМС.ПериодРегистрации,
		|	ИсчисленныеВзносыОСМС.Организация
		|";
		
	Запрос.Текст = РанееИсчисленныеНалогиВзносыТекст;
	Запрос.Выполнить();
	
		
	ПериодыФизЛицаТекст = "
		|ВЫБРАТЬ
		|	ФизЛицо,
		|	" + ПолеПериод + " КАК Период
		|ИЗ
		|	ВТ_ТабличнаяЧастьИПН 
		|
		|ОБЪЕДИНИТЬ // выбираем только различающиеся строки (без ВСЕ)
		|
		|ВЫБРАТЬ
		|	ФизЛицо,
		|	" + ПолеПериод + " КАК Период
		|ИЗ
		|	ВТ_ТабличнаяЧастьОПВ
		|
		|ОБЪЕДИНИТЬ 
		|
		|ВЫБРАТЬ
		|	ФизЛицо,
		|	" + ПолеПериод + " КАК Период
		|ИЗ
		|	ВТ_ТабличнаяЧастьВОСМС
		|
		|ОБЪЕДИНИТЬ 
		|
		|ВЫБРАТЬ
		|	ФизЛицо,
		|	ПериодРегистрации КАК Период
		|ИЗ
		|	ВТ_ТабличнаяЧастьУдержания
		|
		|ОБЪЕДИНИТЬ 
		|
		|ВЫБРАТЬ
		|	ФизЛицо,
		|	ПериодРегистрации КАК Период
		|ИЗ
		|	ВТ_ТабличнаяЧастьПогашениеЗаймов
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ФизЛицо,
		|	" + ПолеПериод + " КАК Период
		|ИЗ
		|	ВТ_ТабличнаяЧастьНалоговыеВычеты
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ФизЛицо,
		|	" + ПолеПериод + " КАК Период
		|ИЗ
		|	ВТ_ТабличнаяЧастьВычетыИПН
		|";
		
	ПериодыФизЛицаТекст = 	"ВЫБРАТЬ РАЗРЕШЕННЫЕ * ПОМЕСТИТЬ ПериодыФизЛицаВТ ИЗ ("+ПериодыФизЛицаТекст+") КАК ЗапросПоПериодамДляВТ;" ;
	Запрос.Текст = ПериодыФизЛицаТекст;
	Запрос.Выполнить();
	
	// Для нераспределенных сумм - будем относить их на основное место работы
		
	ПериодыФизЛицаТекстВТ = "ВЫБРАТЬ * ИЗ ПериодыФизЛицаВТ КАК ВложенныйЗапросПериодыФизЛицаИзВТ";
	МестоРаботыТекст = ПроведениеРасчетов.СформироватьТекстЗапросаСтруктурныеЕдиницы(ПериодыФизЛицаТекстВТ, ВыборкаПоШапкеДокумента.Организация, Запрос, Истина);
	МестоРаботыТекст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ *  
						|	ПОМЕСТИТЬ МестоРаботыВТ
						|	ИЗ ("+МестоРаботыТекст+") КАК МестаРабот";
						
	Запрос.Текст = МестоРаботыТекст;
	Запрос.Выполнить();
	
	МестоРаботыВТ = "МестоРаботыВТ";

	ИПНСведенияОДоходахТекст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИПНСведенияОДоходахОбороты.ФизЛицо,
		|	ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница,
		|	ИПНСведенияОДоходахОбороты.ПериодРегистрации,
		|	ИПНСведенияОДоходахОбороты.Организация,
		|	ИПНСведенияОДоходахОбороты.Налогоплательщик,
		|	ИПНСведенияОДоходахОбороты.СпособНалогообложения,
		|	ИПНСведенияОДоходахОбороты.ВидРасчета,
		|	ИПНСведенияОДоходахОбороты.ВидДохода,
		|	ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации,
		|	ИПНСведенияОДоходахОбороты.Период,
		|	ИПНСведенияОДоходахОбороты.СуммаДоходаОборот КАК СуммаДохода,
		|	ИПНСведенияОДоходахОбороты.СуммаДоходаОборот - ИПНСведенияОДоходахОбороты.СуммаВычетаОборот КАК ОблагаемыйДоход
		|ПОМЕСТИТЬ ВТ_ИПНСведенияОДоходах
		|ИЗ
		|	РегистрНакопления.ИПНСведенияОДоходах.Обороты(
		|			,
		|			,
		|			Месяц,
		|			ПериодРегистрации = &парамПериодРегистрации
		|				И ФизЛицо В
		|					(ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")
		|				И Налогоплательщик = &парамНалогоплательщик
		|				И НЕ ВидРасчета ССЫЛКА Справочник.ВычетыИПН) КАК ИПНСведенияОДоходахОбороты";
	
	Запрос.Текст = ИПНСведенияОДоходахТекст;
	Запрос.Выполнить();
	ИПНСведенияОДоходахТекст = "ВТ_ИПНСведенияОДоходах";	
	
	
	// ИНДИВИДУАЛЬНЫЙ ПОДОХОДНЫЙ НАЛОГ
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТабличнаяЧастьИПН.НомерСтроки,
		|	ТабличнаяЧастьИПН.ФизЛицо КАК ФизЛицо,
		|	ТабличнаяЧастьИПН.ПериодРегистрации,
		|	ТабличнаяЧастьИПН.МесяцНалоговогоПериода,
		|	ТабличнаяЧастьИПН.ВидДохода,
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.Период ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.Период
		|		ИНАЧЕ ТабличнаяЧастьИПН.МесяцНалоговогоПериода
		|	КОНЕЦ КАК ПериодДоходов,
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьИПН.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьИПН.Организация
		|	КОНЕЦ КАК Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации
		|		КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации,", "") + "
		|	СУММА(ЕСТЬNULL(ИПНСведенияОДоходахОбороты.ОблагаемыйДоход, 0)) КАК ОблагаемыйДоход
		|ПОМЕСТИТЬ ВТ_СведенияОДоходахИПН
		|ИЗ
		|	ВТ_ИсчисленныйИПН КАК ТабличнаяЧастьИПН
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНСведенияОДоходахТекст + " КАК ИПНСведенияОДоходахОбороты
		|		ПО ТабличнаяЧастьИПН.ФизЛицо = ИПНСведенияОДоходахОбороты.ФизЛицо
		|			И ТабличнаяЧастьИПН.ВидДохода = ИПНСведенияОДоходахОбороты.ВидДохода
		|			И (НАЧАЛОПЕРИОДА(ТабличнаяЧастьИПН." + ПолеПериод + ", МЕСЯЦ) = НАЧАЛОПЕРИОДА(ИПНСведенияОДоходахОбороты.Период, МЕСЯЦ))
		|			И (НАЧАЛОПЕРИОДА(ТабличнаяЧастьИПН.ПериодРегистрации, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ИПНСведенияОДоходахОбороты.ПериодРегистрации, МЕСЯЦ))
		|			И ИПНСведенияОДоходахОбороты.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + МестоРаботыВТ + " КАК МестаРаботы
		|		ПО ТабличнаяЧастьИПН.ФизЛицо = МестаРаботы.ФизЛицо
		|			И ТабличнаяЧастьИПН." + ПолеПериод + " = МестаРаботы.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧастьИПН.НомерСтроки,
		|	ТабличнаяЧастьИПН.ФизЛицо,
		|	ТабличнаяЧастьИПН.ПериодРегистрации,
		|	ТабличнаяЧастьИПН.МесяцНалоговогоПериода,
		|	ТабличнаяЧастьИПН.ВидДохода,
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.Период ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.Период
		|		ИНАЧЕ ТабличнаяЧастьИПН.МесяцНалоговогоПериода
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьИПН.Организация
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьИПН.Организация
		|	КОНЕЦ" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации
		|		КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ", "") + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧастьИПН.НомерСтроки КАК НомерСтроки,
		|	ТабличнаяЧастьИПН.ФизЛицо КАК ФизЛицо,
		|	ТабличнаяЧастьИПН.Налог КАК Налог,
		|	ТабличнаяЧастьИПН.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	ТабличнаяЧастьИПН.ВидДохода КАК ВидДохода,
		|	ТабличнаяЧастьИПН.ОблагаемаяБаза КАК ОблагаемаяБаза,
		|	ТабличнаяЧастьИПН.ПримененныйВычет КАК ПримененныйВычет,
		|	ТабличнаяЧастьИПН.ПримененнаяЛьгота КАК ПримененнаяЛьгота,
		|	ТабличнаяЧастьИПН.РазрешенныйВычет КАК РазрешенныйВычет,
		|	СведенияОДоходахИПН.СтруктурнаяЕдиница,
		|	СведенияОДоходахИПН.Организация КАК Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	СведенияОДоходахИПН.ПодразделениеОрганизации,", "") + "
		|	СведенияОДоходахИПН.ОблагаемыйДоход,
		|	ОбщаяСуммаДоходов.ОблагаемыйДоход КАК ОблагаемыйДоходВсего,
		|	ЕСТЬNULL(ИндивидуальныйПорядокОкругления.ПорядокОкругления, ОбщийПорядокОкругления.ПорядокОкругления) КАК ПорядокОкругления,
		|	ЕСТЬNULL(ИндивидуальныйПорядокОкругления.МетодОкругления, ОбщийПорядокОкругления.МетодОкругления) КАК МетодОкругления
		|ИЗ
		|	ВТ_ИсчисленныйИПН КАК ТабличнаяЧастьИПН
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СведенияОДоходахИПН.НомерСтроки КАК НомерСтроки,
		|			СведенияОДоходахИПН.ФизЛицо КАК ФизЛицо,
		|			СведенияОДоходахИПН.ВидДохода КАК ВидДохода,
		|			СведенияОДоходахИПН.ПериодРегистрации КАК ПериодРегистрации,
		|			СведенияОДоходахИПН.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|			СведенияОДоходахИПН.ПериодДоходов КАК ПериодДоходов,
		|			СУММА(СведенияОДоходахИПН.ОблагаемыйДоход) КАК ОблагаемыйДоход
		|		ИЗ
		|			ВТ_СведенияОДоходахИПН КАК СведенияОДоходахИПН
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СведенияОДоходахИПН.НомерСтроки,
		|			СведенияОДоходахИПН.ФизЛицо,
		|			СведенияОДоходахИПН.ВидДохода,
		|			СведенияОДоходахИПН.ПериодРегистрации,
		|			СведенияОДоходахИПН.МесяцНалоговогоПериода,
		|			СведенияОДоходахИПН.ПериодДоходов) КАК ОбщаяСуммаДоходов
		|		ПО ТабличнаяЧастьИПН.НомерСтроки = ОбщаяСуммаДоходов.НомерСтроки
		|			И ТабличнаяЧастьИПН.ФизЛицо = ОбщаяСуммаДоходов.ФизЛицо
		|			И ТабличнаяЧастьИПН.ВидДохода = ОбщаяСуммаДоходов.ВидДохода
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОДоходахИПН КАК СведенияОДоходахИПН
		|		ПО ТабличнаяЧастьИПН.ФизЛицо = СведенияОДоходахИПН.ФизЛицо
		|			И ТабличнаяЧастьИПН.НомерСтроки = СведенияОДоходахИПН.НомерСтроки
		|			И ТабличнаяЧастьИПН.ВидДохода = СведенияОДоходахИПН.ВидДохода
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации, ВидРасчета = НЕОПРЕДЕЛЕНО) КАК ОбщийПорядокОкругления
		|		ПО (ИСТИНА)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации, ) КАК ИндивидуальныйПорядокОкругления
		|		ПО (ИндивидуальныйПорядокОкругления.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	ФизЛицо,
		|	МесяцНалоговогоПериода, 
		|	ВидДохода
		|ИТОГИ
		|	МАКСИМУМ(Налог),
		|	МАКСИМУМ(ОблагаемаяБаза),
		|	МАКСИМУМ(ПримененныйВычет),
		|	МАКСИМУМ(ПримененнаяЛьгота),
		|	МАКСИМУМ(РазрешенныйВычет),
		|	МАКСИМУМ(ПорядокОкругления),
		|	МАКСИМУМ(МетодОкругления)
		|ПО
		|	НомерСтроки";
	
	РезультатЗапросаИПН = Запрос.Выполнить();;
	
	// Ключевое поле
	КолонкаДляПоиска = "НомерСтроки";
	
	// Сформируем структуру таблицы для промежуточного хранения результатов распределения ОПВ
	ТаблицаРаспределенияИПН = Новый ТаблицаЗначений();
	МассивТипов = Новый Массив; 
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияИПН.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(10)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ТаблицаРаспределенияИПН.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ВидыДоходов"));
	ТаблицаРаспределенияИПН.Колонки.Добавить("ВидДохода", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияИПН.Колонки.Добавить("СтруктурнаяЕдиница", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияИПН.Колонки.Добавить("Организация", Новый ОписаниеТипов(МассивТипов));
	Если РаспределятьНалогиПоПодразделениямОрганизаций Тогда
		МассивТипов.Очистить();
		МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
		ТаблицаРаспределенияИПН.Колонки.Добавить("ПодразделениеОрганизации", Новый ОписаниеТипов(МассивТипов));
	КонецЕсли;
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Дата"));
	ТаблицаРаспределенияИПН.Колонки.Добавить("МесяцНалоговогоПериода", Новый ОписаниеТипов(МассивТипов, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияИПН.Колонки.Добавить("Налог", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));
	ТаблицаРаспределенияИПН.Колонки.Добавить("ОблагаемаяБаза", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));
 	ТаблицаРаспределенияИПН.Колонки.Добавить("ПримененныйВычет", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));
	ТаблицаРаспределенияИПН.Колонки.Добавить("ПримененнаяЛьгота", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));
	ТаблицаРаспределенияИПН.Колонки.Добавить("РазрешенныйВычет", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));

	// Распределяемые значения
	КолонкиДляРаспределения = Новый Массив;
	КолонкиДляРаспределения.Добавить("Налог");
	КолонкиДляРаспределения.Добавить("ОблагаемаяБаза");
	КолонкиДляРаспределения.Добавить("ПримененныйВычет");
	КолонкиДляРаспределения.Добавить("ПримененнаяЛьгота");
	КолонкиДляРаспределения.Добавить("РазрешенныйВычет");
	
	КолонкаКоэффициентов = "ОблагаемыйДоход";
	ПроведениеРасчетов.РаспределитьНалогиВзносыУдержанияПоСтруктурнымЕдиницам(ТаблицаРаспределенияИПН, РезультатЗапросаИПН, КолонкиДляРаспределения, КолонкаДляПоиска, КолонкаКоэффициентов);	
	
	ТаблицаРаспределенияИПН.Свернуть("НомерСтроки, ФизЛицо, СтруктурнаяЕдиница, Организация, " + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "ПодразделениеОрганизации, ", "") + "МесяцНалоговогоПериода, ВидДохода", 
									 "Налог, ОблагаемаяБаза, ПримененныйВычет, ПримененнаяЛьгота, РазрешенныйВычет");
	
	
	// НАЛОГОВЫЕ ВЫЧЕТЫ
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТабличнаяЧастьНалоговыеВычеты.НомерСтроки,
		|	ТабличнаяЧастьНалоговыеВычеты.ФизЛицо КАК ФизЛицо,
		|	ТабличнаяЧастьНалоговыеВычеты.ВычетИПН КАК ВычетИПН,
		|	ТабличнаяЧастьНалоговыеВычеты.ДокументОснование КАК ДокументОснование,
		|	ТабличнаяЧастьНалоговыеВычеты.ПериодРегистрации,
		|	ТабличнаяЧастьНалоговыеВычеты.МесяцНалоговогоПериода,
		|	ВЫБОР 
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.Период ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.Период
		|		ИНАЧЕ ТабличнаяЧастьНалоговыеВычеты.МесяцНалоговогоПериода
		|	КОНЕЦ КАК ПериодДоходов,
		|	ВЫБОР 
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьНалоговыеВычеты.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР 
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьНалоговыеВычеты.Организация
		|	КОНЕЦ КАК Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	ВЫБОР 
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации
		|		КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации,", "") + "
		|	СУММА(ЕСТЬNULL(ИПНСведенияОДоходахОбороты.ОблагаемыйДоход, 0)) КАК ОблагаемыйДоход
		|ПОМЕСТИТЬ ВТ_СведенияОДоходахНалоговыеВычеты
		|ИЗ
		|	ВТ_ТабличнаяЧастьНалоговыеВычеты КАК ТабличнаяЧастьНалоговыеВычеты
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНСведенияОДоходахТекст + " КАК ИПНСведенияОДоходахОбороты
		|		ПО ТабличнаяЧастьНалоговыеВычеты.ФизЛицо = ИПНСведенияОДоходахОбороты.ФизЛицо
		|			И (НАЧАЛОПЕРИОДА(ТабличнаяЧастьНалоговыеВычеты." + ПолеПериод + ", МЕСЯЦ) = НАЧАЛОПЕРИОДА(ИПНСведенияОДоходахОбороты.Период, МЕСЯЦ))
		|			И (НАЧАЛОПЕРИОДА(ТабличнаяЧастьНалоговыеВычеты.ПериодРегистрации, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ИПНСведенияОДоходахОбороты.ПериодРегистрации, МЕСЯЦ))
		|			И ИПНСведенияОДоходахОбороты.СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)
		|			И ИПНСведенияОДоходахОбороты.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + МестоРаботыВТ + " КАК МестаРаботы
		|		ПО ТабличнаяЧастьНалоговыеВычеты.ФизЛицо = МестаРаботы.ФизЛицо
		|			И ТабличнаяЧастьНалоговыеВычеты." + ПолеПериод + " = МестаРаботы.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧастьНалоговыеВычеты.НомерСтроки,
		|	ТабличнаяЧастьНалоговыеВычеты.ФизЛицо,
		|	ТабличнаяЧастьНалоговыеВычеты.ВычетИПН,
		|	ТабличнаяЧастьНалоговыеВычеты.ДокументОснование,
		|	ТабличнаяЧастьНалоговыеВычеты.ПериодРегистрации,
		|	ТабличнаяЧастьНалоговыеВычеты.МесяцНалоговогоПериода,
		|	ВЫБОР 
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.Период ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.Период
		|		ИНАЧЕ ТабличнаяЧастьНалоговыеВычеты.МесяцНалоговогоПериода
		|	КОНЕЦ,
		|	ВЫБОР 
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьНалоговыеВычеты.Организация
		|	КОНЕЦ,
		|	ВЫБОР 
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьНалоговыеВычеты.Организация
		|	КОНЕЦ" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ВЫБОР 
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации
		|		КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ", "") + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧастьНалоговыеВычеты.НомерСтроки КАК НомерСтроки,
		|	ТабличнаяЧастьНалоговыеВычеты.ФизЛицо КАК ФизЛицо,
		|	ТабличнаяЧастьНалоговыеВычеты.ВычетИПН КАК ВычетИПН,
		|	ТабличнаяЧастьНалоговыеВычеты.ДокументОснование КАК ДокументОснование,
		|	ТабличнаяЧастьНалоговыеВычеты.СуммаВычета КАК СуммаВычета,
		|	ТабличнаяЧастьНалоговыеВычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	СведенияОДоходахНалоговыеВычеты.СтруктурнаяЕдиница,
		|	СведенияОДоходахНалоговыеВычеты.Организация КАК Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	СведенияОДоходахНалоговыеВычеты.ПодразделениеОрганизации,", "") + "
		|	СведенияОДоходахНалоговыеВычеты.ОблагаемыйДоход,
		|	ОбщаяСуммаДоходов.ОблагаемыйДоход КАК ОблагаемыйДоходВсего,
		|	ЕСТЬNULL(ИндивидуальныйПорядокОкругления.ПорядокОкругления, ОбщийПорядокОкругления.ПорядокОкругления) КАК ПорядокОкругления,
		|	ЕСТЬNULL(ИндивидуальныйПорядокОкругления.МетодОкругления, ОбщийПорядокОкругления.МетодОкругления) КАК МетодОкругления
		|ИЗ
		|	ВТ_ТабличнаяЧастьНалоговыеВычеты КАК ТабличнаяЧастьНалоговыеВычеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СведенияОДоходахНалоговыеВычеты.НомерСтроки КАК НомерСтроки,
		|			СведенияОДоходахНалоговыеВычеты.ФизЛицо КАК ФизЛицо,
		|			СведенияОДоходахНалоговыеВычеты.ВычетИПН КАК ВычетИПН,
		|			СведенияОДоходахНалоговыеВычеты.ДокументОснование КАК ДокументОснование,
		|			СведенияОДоходахНалоговыеВычеты.ПериодРегистрации КАК ПериодРегистрации,
		|			СведенияОДоходахНалоговыеВычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|			СведенияОДоходахНалоговыеВычеты.ПериодДоходов КАК ПериодДоходов,
		|			СУММА(СведенияОДоходахНалоговыеВычеты.ОблагаемыйДоход) КАК ОблагаемыйДоход
		|		ИЗ
		|			ВТ_СведенияОДоходахНалоговыеВычеты КАК СведенияОДоходахНалоговыеВычеты
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СведенияОДоходахНалоговыеВычеты.НомерСтроки,
		|			СведенияОДоходахНалоговыеВычеты.ФизЛицо,
		|			СведенияОДоходахНалоговыеВычеты.ВычетИПН,
		|			СведенияОДоходахНалоговыеВычеты.ДокументОснование,
		|			СведенияОДоходахНалоговыеВычеты.ПериодРегистрации,
		|			СведенияОДоходахНалоговыеВычеты.МесяцНалоговогоПериода,
		|			СведенияОДоходахНалоговыеВычеты.ПериодДоходов) КАК ОбщаяСуммаДоходов
		|		ПО ТабличнаяЧастьНалоговыеВычеты.НомерСтроки = ОбщаяСуммаДоходов.НомерСтроки
		|			И ТабличнаяЧастьНалоговыеВычеты.ФизЛицо = ОбщаяСуммаДоходов.ФизЛицо
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОДоходахНалоговыеВычеты КАК СведенияОДоходахНалоговыеВычеты
		|		ПО ТабличнаяЧастьНалоговыеВычеты.ФизЛицо = СведенияОДоходахНалоговыеВычеты.ФизЛицо
		|			И ТабличнаяЧастьНалоговыеВычеты.НомерСтроки = СведенияОДоходахНалоговыеВычеты.НомерСтроки
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации, ВидРасчета = НЕОПРЕДЕЛЕНО) КАК ОбщийПорядокОкругления
		|		ПО (ИСТИНА)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации, ) КАК ИндивидуальныйПорядокОкругления
		|		ПО (ИндивидуальныйПорядокОкругления.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	ФизЛицо,
		|	МесяцНалоговогоПериода
		|ИТОГИ
		|	МАКСИМУМ(СуммаВычета),
		|	МАКСИМУМ(ПорядокОкругления),
		|	МАКСИМУМ(МетодОкругления)
		|ПО
		|	НомерСтроки";
	
	РезультатЗапросаНалоговыеВычеты = Запрос.Выполнить();;
	
	// Ключевое поле
	КолонкаДляПоиска = "НомерСтроки";
	
	// Сформируем структуру таблицы для промежуточного хранения результатов распределения ОПВ
	ТаблицаРаспределенияНалоговыхВычетов = Новый ТаблицаЗначений();
	МассивТипов = Новый Массив; 
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияНалоговыхВычетов.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(10)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	ТаблицаРаспределенияНалоговыхВычетов.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ВычетыИПН"));
	ТаблицаРаспределенияНалоговыхВычетов.Колонки.Добавить("ВычетИПН", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("ДокументСсылка.ИПНЗаявлениеНаПредоставлениеВычета"));
	ТаблицаРаспределенияНалоговыхВычетов.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияНалоговыхВычетов.Колонки.Добавить("СтруктурнаяЕдиница", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияНалоговыхВычетов.Колонки.Добавить("Организация", Новый ОписаниеТипов(МассивТипов));
	Если РаспределятьНалогиПоПодразделениямОрганизаций Тогда
		МассивТипов.Очистить();
		МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
		ТаблицаРаспределенияНалоговыхВычетов.Колонки.Добавить("ПодразделениеОрганизации", Новый ОписаниеТипов(МассивТипов));
	КонецЕсли;
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Дата"));
	ТаблицаРаспределенияНалоговыхВычетов.Колонки.Добавить("МесяцНалоговогоПериода", Новый ОписаниеТипов(МассивТипов, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияНалоговыхВычетов.Колонки.Добавить("СуммаВычета", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));

	// Распределяемые значения
	КолонкиДляРаспределения = Новый Массив;
	КолонкиДляРаспределения.Добавить("СуммаВычета");
	
	КолонкаКоэффициентов = "ОблагаемыйДоход";
	ПроведениеРасчетов.РаспределитьНалогиВзносыУдержанияПоСтруктурнымЕдиницам(ТаблицаРаспределенияНалоговыхВычетов, РезультатЗапросаНалоговыеВычеты, КолонкиДляРаспределения, КолонкаДляПоиска, КолонкаКоэффициентов);	
	
	ТаблицаРаспределенияНалоговыхВычетов.Свернуть("НомерСтроки, ФизЛицо, ВычетИПН, ДокументОснование, СтруктурнаяЕдиница, Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "ПодразделениеОрганизации, ", "") + "МесяцНалоговогоПериода", 
												  "СуммаВычета");
	
	// УДЕРЖАНИЯ ОРГАНИЗАЦИЙ
	
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	ТабличнаяЧастьУдержания.НомерСтроки,
		|	ТабличнаяЧастьУдержания.ФизЛицо,
		|	ТабличнаяЧастьУдержания.ВидРасчета,
		|	ТабличнаяЧастьУдержания.ДокументОснование,
		|	ТабличнаяЧастьУдержания.Результат,
		|	ТабличнаяЧастьУдержания.Организация,
		|	ТабличнаяЧастьУдержания.ПериодРегистрации,
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьУдержания.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьУдержания.Организация
		|	КОНЕЦ КАК Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации
		|		КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации,", "") + "
		|	СУММА(ЕСТЬNULL(ИПНСведенияОДоходахОбороты.СуммаДохода, 0)) КАК СуммаДохода
		|ПОМЕСТИТЬ ВТ_СведенияОДоходахУдержания
		|ИЗ
		|	ВТ_ТабличнаяЧастьУдержания КАК ТабличнаяЧастьУдержания
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНСведенияОДоходахТекст + " КАК ИПНСведенияОДоходахОбороты
		|		ПО ТабличнаяЧастьУдержания.ФизЛицо = ИПНСведенияОДоходахОбороты.ФизЛицо
		|			И (НАЧАЛОПЕРИОДА(ТабличнаяЧастьУдержания.ПериодРегистрации, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ИПНСведенияОДоходахОбороты.ПериодРегистрации, МЕСЯЦ))
 		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + МестоРаботыВТ + " КАК МестаРаботы
		|		ПО ТабличнаяЧастьУдержания.ФизЛицо = МестаРаботы.ФизЛицо
		|			И ТабличнаяЧастьУдержания.ПериодРегистрации = МестаРаботы.Период
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК БазовыеРасчетыУдержаний
		|			ПО ТабличнаяЧастьУдержания.ВидРасчета = БазовыеРасчетыУдержаний.Ссылка
		|				И (ВЫБОР 
		|					КОГДА ТабличнаяЧастьУдержания.КоличествоБазовыхРасчетов > 0 
		|						ТОГДА ИПНСведенияОДоходахОбороты.ВидРасчета = БазовыеРасчетыУдержаний.ВидРасчета
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ)
		|	
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧастьУдержания.НомерСтроки,
		|	ТабличнаяЧастьУдержания.ФизЛицо,
		|	ТабличнаяЧастьУдержания.ВидРасчета,
		|	ТабличнаяЧастьУдержания.ДокументОснование,
		|	ТабличнаяЧастьУдержания.Результат,
		|	ТабличнаяЧастьУдержания.Организация,
		|	ТабличнаяЧастьУдержания.ПериодРегистрации,
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьУдержания.Организация
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьУдержания.Организация
		|	КОНЕЦ" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации
		|		КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ", "") + "
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧастьУдержания.НомерСтроки КАК НомерСтроки,
		|	ТабличнаяЧастьУдержания.ФизЛицо КАК ФизЛицо,
		|	ТабличнаяЧастьУдержания.ВидРасчета КАК ВидРасчета,
		|	ТабличнаяЧастьУдержания.ДокументОснование КАК ДокументОснование,
		|	ТабличнаяЧастьУдержания.Результат КАК Результат,
		|	СведенияОДоходахУдержания.СтруктурнаяЕдиница,
		|	СведенияОДоходахУдержания.Организация КАК Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	СведенияОДоходахУдержания.ПодразделениеОрганизации,", "") + "
		|	СведенияОДоходахУдержания.СуммаДохода,
		|	ОбщаяСуммаДоходов.СуммаДохода КАК СуммаДоходаВсего,
		|	ОбщийПорядокОкругления.ПорядокОкругления КАК ПорядокОкругления,
		|	ОбщийПорядокОкругления.МетодОкругления КАК МетодОкругления
		|ИЗ
		|	ВТ_ТабличнаяЧастьУдержания КАК ТабличнаяЧастьУдержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СведенияОДоходахУдержания.НомерСтроки КАК НомерСтроки,
		|			СведенияОДоходахУдержания.ФизЛицо КАК ФизЛицо,
		|			СведенияОДоходахУдержания.ВидРасчета КАК ВидРасчета,
		|			СведенияОДоходахУдержания.ДокументОснование КАК ДокументОснование,
		|			СУММА(СведенияОДоходахУдержания.СуммаДохода) КАК СуммаДохода
		|		ИЗ
		|			ВТ_СведенияОДоходахУдержания КАК СведенияОДоходахУдержания
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СведенияОДоходахУдержания.НомерСтроки,
		|			СведенияОДоходахУдержания.ФизЛицо,
		|			СведенияОДоходахУдержания.ВидРасчета,
		|			СведенияОДоходахУдержания.ДокументОснование) КАК ОбщаяСуммаДоходов
		|		ПО ТабличнаяЧастьУдержания.НомерСтроки = ОбщаяСуммаДоходов.НомерСтроки
		|			И ТабличнаяЧастьУдержания.ФизЛицо = ОбщаяСуммаДоходов.ФизЛицо
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОДоходахУдержания КАК СведенияОДоходахУдержания
		|		ПО ТабличнаяЧастьУдержания.ФизЛицо = СведенияОДоходахУдержания.ФизЛицо
		|			И ТабличнаяЧастьУдержания.НомерСтроки = СведенияОДоходахУдержания.НомерСтроки
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации, ВидРасчета = НЕОПРЕДЕЛЕНО) КАК ОбщийПорядокОкругления
		|		ПО (ИСТИНА)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации, ) КАК ИндивидуальныйПорядокОкругления
		|		ПО ТабличнаяЧастьУдержания.ВидРасчета = ИндивидуальныйПорядокОкругления.ВидРасчета
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	ФизЛицо
		|ИТОГИ
		|	МАКСИМУМ(Результат),
		|	МАКСИМУМ(ПорядокОкругления),
		|	МАКСИМУМ(МетодОкругления)
		|ПО
		|	НомерСтроки";

	РезультатЗапросаУдержания = Запрос.Выполнить();;
	
	// Ключевое поле
	КолонкаДляПоиска = "НомерСтроки";
	
	// Сформируем структуру таблицы для промежуточного хранения результатов распределения ОПВ
	ТаблицаРаспределенияУдержаний = Новый ТаблицаЗначений();
	МассивТипов = Новый Массив; 
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(10)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("ДокументСсылка.ИсполнительныйЛист"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("ПланВидовРасчетаСсылка.УдержанияОрганизаций"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("ВидРасчета", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("СтруктурнаяЕдиница", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("Организация", Новый ОписаниеТипов(МассивТипов));
	Если РаспределятьНалогиПоПодразделениямОрганизаций Тогда
		МассивТипов.Очистить();
		МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
		ТаблицаРаспределенияУдержаний.Колонки.Добавить("ПодразделениеОрганизации", Новый ОписаниеТипов(МассивТипов));
	КонецЕсли;
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияУдержаний.Колонки.Добавить("Результат", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));

	// Распределяемые значения
	КолонкиДляРаспределения = Новый Массив;
	КолонкиДляРаспределения.Добавить("Результат");
	
	КолонкаКоэффициентов = "СуммаДохода";
	ПроведениеРасчетов.РаспределитьНалогиВзносыУдержанияПоСтруктурнымЕдиницам(ТаблицаРаспределенияУдержаний, РезультатЗапросаУдержания, КолонкиДляРаспределения, КолонкаДляПоиска, КолонкаКоэффициентов);	
	
	ТаблицаРаспределенияУдержаний.Свернуть("НомерСтроки, ФизЛицо, ДокументОснование, ВидРасчета, СтруктурнаяЕдиница, Организация" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ", ПодразделениеОрганизации", ""), 
										   "Результат");

	// ПОГАШЕНИЕ ЗАЙМОВ
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТабличнаяЧастьПогашениеЗаймов.НомерСтроки,
		|	ТабличнаяЧастьПогашениеЗаймов.ФизЛицо,
		|	ТабличнаяЧастьПогашениеЗаймов.ДоговорЗайма,
		|	ТабличнаяЧастьПогашениеЗаймов.ПогашеноЗайма,
		|	ТабличнаяЧастьПогашениеЗаймов.Организация,
		|	ТабличнаяЧастьПогашениеЗаймов.ПериодРегистрации,
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьПогашениеЗаймов.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьПогашениеЗаймов.Организация
		|	КОНЕЦ КАК Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации
		|		КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации,", "") + "
		|	СУММА(ЕСТЬNULL(ИПНСведенияОДоходахОбороты.СуммаДохода, 0)) КАК СуммаДохода
		|ПОМЕСТИТЬ ВТ_СведенияОДоходахПогашениеЗаймов
		|ИЗ
		|	ВТ_ТабличнаяЧастьПогашениеЗаймов КАК ТабличнаяЧастьПогашениеЗаймов
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + ИПНСведенияОДоходахТекст + " КАК ИПНСведенияОДоходахОбороты
		|		ПО ТабличнаяЧастьПогашениеЗаймов.ФизЛицо = ИПНСведенияОДоходахОбороты.ФизЛицо
		|			И (НАЧАЛОПЕРИОДА(ТабличнаяЧастьПогашениеЗаймов.ПериодРегистрации, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ИПНСведенияОДоходахОбороты.ПериодРегистрации, МЕСЯЦ))
 		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + МестоРаботыВТ + " КАК МестаРаботы
		|		ПО ТабличнаяЧастьПогашениеЗаймов.ФизЛицо = МестаРаботы.ФизЛицо
		|			И ТабличнаяЧастьПогашениеЗаймов.ПериодРегистрации = МестаРаботы.Период
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧастьПогашениеЗаймов.НомерСтроки,
		|	ТабличнаяЧастьПогашениеЗаймов.ФизЛицо,
		|	ТабличнаяЧастьПогашениеЗаймов.ДоговорЗайма,
		|	ТабличнаяЧастьПогашениеЗаймов.ПогашеноЗайма,
		|	ТабличнаяЧастьПогашениеЗаймов.Организация,
		|	ТабличнаяЧастьПогашениеЗаймов.ПериодРегистрации,
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьПогашениеЗаймов.Организация
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьПогашениеЗаймов.Организация
		|	КОНЕЦ" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ВЫБОР
		|		КОГДА НЕ (ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА ИПНСведенияОДоходахОбороты.ПодразделениеОрганизации
		|		КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ", "") + "
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧастьПогашениеЗаймов.НомерСтроки КАК НомерСтроки,
		|	ТабличнаяЧастьПогашениеЗаймов.ФизЛицо КАК ФизЛицо,
		|	ТабличнаяЧастьПогашениеЗаймов.ДоговорЗайма КАК ДоговорЗайма,
		|	ТабличнаяЧастьПогашениеЗаймов.ПогашеноЗайма КАК ПогашеноЗайма,
		|	СведенияОДоходахПогашениеЗаймов.СтруктурнаяЕдиница,
		|	СведенияОДоходахПогашениеЗаймов.Организация КАК Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	СведенияОДоходахПогашениеЗаймов.ПодразделениеОрганизации,", "") + "
		|	СведенияОДоходахПогашениеЗаймов.СуммаДохода,
		|	ОбщаяСуммаДоходов.СуммаДохода КАК СуммаДоходаВсего,
		|	ОбщийПорядокОкругления.ПорядокОкругления КАК ПорядокОкругления,
		|	ОбщийПорядокОкругления.МетодОкругления КАК МетодОкругления
		|ИЗ
		|	ВТ_ТабличнаяЧастьПогашениеЗаймов КАК ТабличнаяЧастьПогашениеЗаймов
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СведенияОДоходахПогашениеЗаймов.НомерСтроки КАК НомерСтроки,
		|			СведенияОДоходахПогашениеЗаймов.ФизЛицо КАК ФизЛицо,
		|			СведенияОДоходахПогашениеЗаймов.ДоговорЗайма КАК ДоговорЗайма,
		|			СУММА(СведенияОДоходахПогашениеЗаймов.СуммаДохода) КАК СуммаДохода
		|		ИЗ
		|			ВТ_СведенияОДоходахПогашениеЗаймов КАК СведенияОДоходахПогашениеЗаймов
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СведенияОДоходахПогашениеЗаймов.НомерСтроки,
		|			СведенияОДоходахПогашениеЗаймов.ФизЛицо,
		|			СведенияОДоходахПогашениеЗаймов.ДоговорЗайма) КАК ОбщаяСуммаДоходов
		|		ПО ТабличнаяЧастьПогашениеЗаймов.НомерСтроки = ОбщаяСуммаДоходов.НомерСтроки
		|			И ТабличнаяЧастьПогашениеЗаймов.ФизЛицо = ОбщаяСуммаДоходов.ФизЛицо
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОДоходахПогашениеЗаймов КАК СведенияОДоходахПогашениеЗаймов
		|		ПО ТабличнаяЧастьПогашениеЗаймов.ФизЛицо = СведенияОДоходахПогашениеЗаймов.ФизЛицо
		|			И ТабличнаяЧастьПогашениеЗаймов.НомерСтроки = СведенияОДоходахПогашениеЗаймов.НомерСтроки
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации, ВидРасчета = НЕОПРЕДЕЛЕНО) КАК ОбщийПорядокОкругления
		|		ПО (ИСТИНА)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	ФизЛицо
		|ИТОГИ
		|	МАКСИМУМ(ПогашеноЗайма),
		|	МАКСИМУМ(ПорядокОкругления),
		|	МАКСИМУМ(МетодОкругления)
		|ПО
		|	НомерСтроки";

	РезультатЗапросаПогашениеЗаймов = Запрос.Выполнить();;
	
	// Ключевое поле
	КолонкаДляПоиска = "НомерСтроки";
	
	// Сформируем структуру таблицы для промежуточного хранения результатов распределения ОПВ
	ТаблицаРаспределенияПогашениеЗаймов = Новый ТаблицаЗначений();
	МассивТипов = Новый Массив; 
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияПогашениеЗаймов.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(10)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	ТаблицаРаспределенияПогашениеЗаймов.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("ДокументСсылка.ДоговорЗаймаСРаботником"));
	ТаблицаРаспределенияПогашениеЗаймов.Колонки.Добавить("ДоговорЗайма", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияПогашениеЗаймов.Колонки.Добавить("СтруктурнаяЕдиница", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияПогашениеЗаймов.Колонки.Добавить("Организация", Новый ОписаниеТипов(МассивТипов));
	Если РаспределятьНалогиПоПодразделениямОрганизаций Тогда
		МассивТипов.Очистить();
		МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
		ТаблицаРаспределенияПогашениеЗаймов.Колонки.Добавить("ПодразделениеОрганизации", Новый ОписаниеТипов(МассивТипов));
	КонецЕсли;
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияПогашениеЗаймов.Колонки.Добавить("ПогашеноЗайма", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));

	// Распределяемые значения
	КолонкиДляРаспределения = Новый Массив;
	КолонкиДляРаспределения.Добавить("ПогашеноЗайма");
	
	КолонкаКоэффициентов = "СуммаДохода";
	ПроведениеРасчетов.РаспределитьНалогиВзносыУдержанияПоСтруктурнымЕдиницам(ТаблицаРаспределенияПогашениеЗаймов, РезультатЗапросаПогашениеЗаймов, КолонкиДляРаспределения, КолонкаДляПоиска, КолонкаКоэффициентов);	
	ТаблицаРаспределенияПогашениеЗаймов.Свернуть("НомерСтроки, ФизЛицо, ДоговорЗайма, СтруктурнаяЕдиница, Организация" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ", ПодразделениеОрганизации", ""), 
												 "ПогашеноЗайма");
	
	
	// ОБЯЗАТЕЛЬНЫЕ ПЕНСИОННЫЕ ВЗНОСЫ
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТабличнаяЧастьОПВ.НомерСтроки,
		|	ТабличнаяЧастьОПВ.ФизЛицо КАК ФизЛицо,
		|	ТабличнаяЧастьОПВ.ПериодРегистрации,
		|	ТабличнаяЧастьОПВ.МесяцНалоговогоПериода,
		|	ВЫБОР 
		|		КОГДА НЕ (ОПВСведенияОДоходахОбороты.Период ЕСТЬ NULL)
		|			ТОГДА ОПВСведенияОДоходахОбороты.Период
		|		ИНАЧЕ ТабличнаяЧастьОПВ.МесяцНалоговогоПериода
		|	КОНЕЦ КАК ПериодДоходов,
		|	ВЫБОР 
		|		КОГДА НЕ (ОПВСведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ОПВСведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьОПВ.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА НЕ (ОПВСведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ОПВСведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьОПВ.Организация
		|	КОНЕЦ КАК Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	ВЫБОР
		|		КОГДА НЕ (ОПВСведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА ОПВСведенияОДоходахОбороты.ПодразделениеОрганизации
		|		КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации,", "") + "
		|	СУММА(ЕСТЬNULL(ОПВСведенияОДоходахОбороты.СуммаДоходаОборот, 0) - ЕСТЬNULL(ОПВСведенияОДоходахОбороты.СуммаВычетаОборот, 0)) КАК ОблагаемыйДоход
		|ПОМЕСТИТЬ ВТ_СведенияОДоходахОПВ
		|ИЗ
		|	ВТ_ИсчисленныйОПВ КАК ТабличнаяЧастьОПВ
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОПВСведенияОДоходах.Обороты(
		|				,
		|				,
		|				Месяц,
		|				ПериодРегистрации = &парамПериодРегистрации
		|					И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")
		|					И Налогоплательщик = &парамНалогоплательщик
		|					И СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)) КАК ОПВСведенияОДоходахОбороты
		|		ПО ТабличнаяЧастьОПВ.ФизЛицо = ОПВСведенияОДоходахОбороты.ФизЛицо
		|			И (НАЧАЛОПЕРИОДА(ТабличнаяЧастьОПВ." + ПолеПериод + ", МЕСЯЦ) = НАЧАЛОПЕРИОДА(ОПВСведенияОДоходахОбороты.Период, МЕСЯЦ))
		|			И (НАЧАЛОПЕРИОДА(ТабличнаяЧастьОПВ.ПериодРегистрации, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ОПВСведенияОДоходахОбороты.ПериодРегистрации, МЕСЯЦ))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + МестоРаботыВТ + " КАК МестаРаботы
		|		ПО ТабличнаяЧастьОПВ.ФизЛицо = МестаРаботы.ФизЛицо
		|			И ТабличнаяЧастьОПВ." + ПолеПериод + " = МестаРаботы.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧастьОПВ.НомерСтроки,
		|	ТабличнаяЧастьОПВ.ФизЛицо,
		|	ТабличнаяЧастьОПВ.ПериодРегистрации,
		|	ТабличнаяЧастьОПВ.МесяцНалоговогоПериода,
		|	ВЫБОР 
		|		КОГДА НЕ (ОПВСведенияОДоходахОбороты.Период ЕСТЬ NULL)
		|			ТОГДА ОПВСведенияОДоходахОбороты.Период
		|		ИНАЧЕ ТабличнаяЧастьОПВ.МесяцНалоговогоПериода
		|	КОНЕЦ,
		|	ВЫБОР 
		|		КОГДА НЕ (ОПВСведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ОПВСведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьОПВ.Организация
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ (ОПВСведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ОПВСведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьОПВ.Организация
		|	КОНЕЦ" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ВЫБОР
		|		КОГДА НЕ (ОПВСведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА ОПВСведенияОДоходахОбороты.ПодразделениеОрганизации
		|		КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ", "") + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧастьОПВ.НомерСтроки КАК НомерСтроки,
		|	ТабличнаяЧастьОПВ.ФизЛицо КАК ФизЛицо,
		|	ТабличнаяЧастьОПВ.Взнос КАК Взнос,
		|	ТабличнаяЧастьОПВ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	ТабличнаяЧастьОПВ.ОблагаемаяБаза КАК ОблагаемаяБаза,
		|	СведенияОДоходахОПВ.СтруктурнаяЕдиница,
		|	СведенияОДоходахОПВ.Организация КАК Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	СведенияОДоходахОПВ.ПодразделениеОрганизации,", "") + "
		|	СведенияОДоходахОПВ.ОблагаемыйДоход,
		|	ОбщаяСуммаДоходов.ОблагаемыйДоход КАК ОблагаемыйДоходВсего,
		|	ЕСТЬNULL(ИндивидуальныйПорядокОкругления.ПорядокОкругления, ОбщийПорядокОкругления.ПорядокОкругления) КАК ПорядокОкругления,
		|	ЕСТЬNULL(ИндивидуальныйПорядокОкругления.МетодОкругления, ОбщийПорядокОкругления.МетодОкругления) КАК МетодОкругления
		|ИЗ
		|	ВТ_ИсчисленныйОПВ КАК ТабличнаяЧастьОПВ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СведенияОДоходахОПВ.НомерСтроки КАК НомерСтроки,
		|			СведенияОДоходахОПВ.ФизЛицо КАК ФизЛицо,
		|			СведенияОДоходахОПВ.ПериодРегистрации КАК ПериодРегистрации,
		|			СведенияОДоходахОПВ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|			СведенияОДоходахОПВ.ПериодДоходов КАК ПериодДоходов,
		|			СУММА(СведенияОДоходахОПВ.ОблагаемыйДоход) КАК ОблагаемыйДоход
		|		ИЗ
		|			ВТ_СведенияОДоходахОПВ КАК СведенияОДоходахОПВ
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СведенияОДоходахОПВ.НомерСтроки,
		|			СведенияОДоходахОПВ.ФизЛицо,
		|			СведенияОДоходахОПВ.ПериодРегистрации,
		|			СведенияОДоходахОПВ.МесяцНалоговогоПериода,
		|			СведенияОДоходахОПВ.ПериодДоходов) КАК ОбщаяСуммаДоходов
		|		ПО ТабличнаяЧастьОПВ.НомерСтроки = ОбщаяСуммаДоходов.НомерСтроки
		|			И ТабличнаяЧастьОПВ.ФизЛицо = ОбщаяСуммаДоходов.ФизЛицо
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОДоходахОПВ КАК СведенияОДоходахОПВ
		|		ПО ТабличнаяЧастьОПВ.ФизЛицо = СведенияОДоходахОПВ.ФизЛицо
		|			И ТабличнаяЧастьОПВ.НомерСтроки = СведенияОДоходахОПВ.НомерСтроки
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации, ВидРасчета = НЕОПРЕДЕЛЕНО) КАК ОбщийПорядокОкругления
		|		ПО (ИСТИНА)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации, ) КАК ИндивидуальныйПорядокОкругления
		|		ПО (ИндивидуальныйПорядокОкругления.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	ФизЛицо,
		|	МесяцНалоговогоПериода
		|ИТОГИ
		|	МАКСИМУМ(Взнос),
		|	МАКСИМУМ(ОблагаемаяБаза),
		|	МАКСИМУМ(ПорядокОкругления),
		|	МАКСИМУМ(МетодОкругления)
		|ПО
		|	НомерСтроки";
	
	РезультатЗапросаОПВ = Запрос.Выполнить();;
	
	// Ключевое поле
	КолонкаДляПоиска = "НомерСтроки";
	
	// Сформируем структуру таблицы для промежуточного хранения результатов распределения ОПВ
	ТаблицаРаспределенияОПВ = Новый ТаблицаЗначений();
	МассивТипов = Новый Массив; 
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияОПВ.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(10)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ТаблицаРаспределенияОПВ.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияОПВ.Колонки.Добавить("СтруктурнаяЕдиница", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияОПВ.Колонки.Добавить("Организация", Новый ОписаниеТипов(МассивТипов));
	Если РаспределятьНалогиПоПодразделениямОрганизаций Тогда
		МассивТипов.Очистить();
		МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
		ТаблицаРаспределенияОПВ.Колонки.Добавить("ПодразделениеОрганизации", Новый ОписаниеТипов(МассивТипов));
	КонецЕсли;
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Дата"));
	ТаблицаРаспределенияОПВ.Колонки.Добавить("МесяцНалоговогоПериода", Новый ОписаниеТипов(МассивТипов, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияОПВ.Колонки.Добавить("Взнос", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));
	ТаблицаРаспределенияОПВ.Колонки.Добавить("ОблагаемаяБаза", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));

	// Распределяемые значения
	КолонкиДляРаспределения = Новый Массив;
	КолонкиДляРаспределения.Добавить("Взнос");
	КолонкиДляРаспределения.Добавить("ОблагаемаяБаза");
	
	КолонкаКоэффициентов = "ОблагаемыйДоход";
	ПроведениеРасчетов.РаспределитьНалогиВзносыУдержанияПоСтруктурнымЕдиницам(ТаблицаРаспределенияОПВ, РезультатЗапросаОПВ, КолонкиДляРаспределения, КолонкаДляПоиска, КолонкаКоэффициентов);	
	
	ТаблицаРаспределенияОПВ.Свернуть("НомерСтроки, ФизЛицо, СтруктурнаяЕдиница, Организация, " + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "ПодразделениеОрганизации, ", "") + "МесяцНалоговогоПериода", 
									 "Взнос, ОблагаемаяБаза");
									 
	// ВЗНОСЫ ОСМС
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТабличнаяЧастьВОСМС.НомерСтроки,
		|	ТабличнаяЧастьВОСМС.ФизЛицо КАК ФизЛицо,
		|	ТабличнаяЧастьВОСМС.ПериодРегистрации,
		|	ТабличнаяЧастьВОСМС.ВидДохода,
		|	ТабличнаяЧастьВОСМС.МесяцНалоговогоПериода,
		|	ВЫБОР 
		|		КОГДА НЕ (ВОСМССведенияОДоходахОбороты.Период ЕСТЬ NULL)
		|			ТОГДА ВОСМССведенияОДоходахОбороты.Период
		|		ИНАЧЕ ТабличнаяЧастьВОСМС.МесяцНалоговогоПериода
		|	КОНЕЦ КАК ПериодДоходов,
		|	ВЫБОР 
		|		КОГДА НЕ (ВОСМССведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ВОСМССведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьВОСМС.Организация
		|	КОНЕЦ КАК СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА НЕ (ВОСМССведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ВОСМССведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьВОСМС.Организация
		|	КОНЕЦ КАК Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	ВЫБОР
		|		КОГДА НЕ (ВОСМССведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА ВОСМССведенияОДоходахОбороты.ПодразделениеОрганизации
		|		КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК ПодразделениеОрганизации,", "") + "
		|	СУММА(ЕСТЬNULL(ВОСМССведенияОДоходахОбороты.СуммаДоходаОборот, 0) - ЕСТЬNULL(ВОСМССведенияОДоходахОбороты.СуммаВычетаОборот, 0)) КАК ОблагаемыйДоход
		|ПОМЕСТИТЬ ВТ_СведенияОДоходахВОСМС
		|ИЗ
		|	ВТ_ИсчисленныеВзносыОСМС КАК ТабличнаяЧастьВОСМС
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВОСМССведенияОДоходах.Обороты(
		|				,
		|				,
		|				Месяц,
		|				ПериодРегистрации = &парамПериодРегистрации
		|					И ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ " + СписокФизЛицТекст + ")
		|					И Налогоплательщик = &парамНалогоплательщик
		|					И СпособНалогообложения <> ЗНАЧЕНИЕ(Справочник.СпособыНалогообложенияДоходов.НеОблагаетсяЦеликом)) КАК ВОСМССведенияОДоходахОбороты
		|		ПО ТабличнаяЧастьВОСМС.ФизЛицо = ВОСМССведенияОДоходахОбороты.ФизЛицо
		|			И ТабличнаяЧастьВОСМС.ВидДохода = ВОСМССведенияОДоходахОбороты.ВидДохода
		|			И (НАЧАЛОПЕРИОДА(ТабличнаяЧастьВОСМС." + ПолеПериод + ", МЕСЯЦ) = НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходахОбороты.Период, МЕСЯЦ))
		|			И (НАЧАЛОПЕРИОДА(ТабличнаяЧастьВОСМС.ПериодРегистрации, МЕСЯЦ) = НАЧАЛОПЕРИОДА(ВОСМССведенияОДоходахОбороты.ПериодРегистрации, МЕСЯЦ))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + МестоРаботыВТ + " КАК МестаРаботы
		|		ПО ТабличнаяЧастьВОСМС.ФизЛицо = МестаРаботы.ФизЛицо
		|			И ТабличнаяЧастьВОСМС." + ПолеПериод + " = МестаРаботы.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧастьВОСМС.НомерСтроки,
		|	ТабличнаяЧастьВОСМС.ВидДохода,
		|	ТабличнаяЧастьВОСМС.ФизЛицо,
		|	ТабличнаяЧастьВОСМС.ПериодРегистрации,
		|	ТабличнаяЧастьВОСМС.ВидДохода,
		|	ТабличнаяЧастьВОСМС.МесяцНалоговогоПериода,
		|	ВЫБОР 
		|		КОГДА НЕ (ВОСМССведенияОДоходахОбороты.Период ЕСТЬ NULL)
		|			ТОГДА ВОСМССведенияОДоходахОбороты.Период
		|		ИНАЧЕ ТабличнаяЧастьВОСМС.МесяцНалоговогоПериода
		|	КОНЕЦ,
		|	ВЫБОР 
		|		КОГДА НЕ (ВОСМССведенияОДоходахОбороты.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА ВОСМССведенияОДоходахОбороты.СтруктурнаяЕдиница
		|		КОГДА НЕ (МестаРаботы.СтруктурнаяЕдиница ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.СтруктурнаяЕдиница
		|		ИНАЧЕ ТабличнаяЧастьВОСМС.Организация
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ (ВОСМССведенияОДоходахОбороты.Организация ЕСТЬ NULL)
		|			ТОГДА ВОСМССведенияОДоходахОбороты.Организация
		|		ИНАЧЕ ТабличнаяЧастьВОСМС.Организация
		|	КОНЕЦ" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ВЫБОР
		|		КОГДА НЕ (ВОСМССведенияОДоходахОбороты.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА ВОСМССведенияОДоходахОбороты.ПодразделениеОрганизации
		|		КОГДА НЕ (МестаРаботы.ПодразделениеОрганизации ЕСТЬ NULL)
		|			ТОГДА МестаРаботы.ПодразделениеОрганизации
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|	КОНЕЦ", "") + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧастьВОСМС.НомерСтроки КАК НомерСтроки,
		|	ТабличнаяЧастьВОСМС.ФизЛицо КАК ФизЛицо,
		|	ТабличнаяЧастьВОСМС.ВидДохода КАК ВидДохода,
		|	ТабличнаяЧастьВОСМС.Взнос КАК Взнос,
		|	ТабличнаяЧастьВОСМС.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	ТабличнаяЧастьВОСМС.ОблагаемаяБаза КАК ОблагаемаяБаза,
		|	СведенияОДоходахВОСМС.СтруктурнаяЕдиница,
		|	СведенияОДоходахВОСМС.Организация КАК Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	СведенияОДоходахВОСМС.ПодразделениеОрганизации,", "") + "
		|	СведенияОДоходахВОСМС.ОблагаемыйДоход,
		|	ОбщаяСуммаДоходов.ОблагаемыйДоход КАК ОблагаемыйДоходВсего,
		|	ЕСТЬNULL(ИндивидуальныйПорядокОкругления.ПорядокОкругления, ОбщийПорядокОкругления.ПорядокОкругления) КАК ПорядокОкругления,
		|	ЕСТЬNULL(ИндивидуальныйПорядокОкругления.МетодОкругления, ОбщийПорядокОкругления.МетодОкругления) КАК МетодОкругления
		|ИЗ
		|	ВТ_ИсчисленныеВзносыОСМС КАК ТабличнаяЧастьВОСМС
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СведенияОДоходахВОСМС.НомерСтроки КАК НомерСтроки,
		|			СведенияОДоходахВОСМС.ФизЛицо КАК ФизЛицо,
		|			СведенияОДоходахВОСМС.ПериодРегистрации КАК ПериодРегистрации,
		|			СведенияОДоходахВОСМС.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|			СведенияОДоходахВОСМС.ПериодДоходов КАК ПериодДоходов,
		|			СведенияОДоходахВОСМС.ВидДохода КАК ВидДохода,
		|			СУММА(СведенияОДоходахВОСМС.ОблагаемыйДоход) КАК ОблагаемыйДоход
		|		ИЗ
		|			ВТ_СведенияОДоходахВОСМС КАК СведенияОДоходахВОСМС
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СведенияОДоходахВОСМС.НомерСтроки,
		|			СведенияОДоходахВОСМС.ФизЛицо,
		|			СведенияОДоходахВОСМС.ПериодРегистрации,
		|			СведенияОДоходахВОСМС.ВидДохода,
		|			СведенияОДоходахВОСМС.МесяцНалоговогоПериода,
		|			СведенияОДоходахВОСМС.ПериодДоходов) КАК ОбщаяСуммаДоходов
		|		ПО ТабличнаяЧастьВОСМС.НомерСтроки = ОбщаяСуммаДоходов.НомерСтроки
		|			И ТабличнаяЧастьВОСМС.ФизЛицо = ОбщаяСуммаДоходов.ФизЛицо
		|			И ТабличнаяЧастьВОСМС.ВидДохода = ОбщаяСуммаДоходов.ВидДохода
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОДоходахВОСМС КАК СведенияОДоходахВОСМС
		|		ПО ТабличнаяЧастьВОСМС.ФизЛицо = СведенияОДоходахВОСМС.ФизЛицо
		|			И ТабличнаяЧастьВОСМС.НомерСтроки = СведенияОДоходахВОСМС.НомерСтроки
		|			И ТабличнаяЧастьВОСМС.ВидДохода = СведенияОДоходахВОСМС.ВидДохода
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации, ВидРасчета = НЕОПРЕДЕЛЕНО) КАК ОбщийПорядокОкругления
		|		ПО (ИСТИНА)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации, ) КАК ИндивидуальныйПорядокОкругления
		|		ПО (ИндивидуальныйПорядокОкругления.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	ФизЛицо,
		|	МесяцНалоговогоПериода,
		|	ВидДохода
		|ИТОГИ
		|	МАКСИМУМ(Взнос),
		|	МАКСИМУМ(ОблагаемаяБаза),
		|	МАКСИМУМ(ПорядокОкругления),
		|	МАКСИМУМ(МетодОкругления)
		|ПО
		|	НомерСтроки";
	
	РезультатЗапросаВОСМС = Запрос.Выполнить();;
	
	// Ключевое поле
	КолонкаДляПоиска = "НомерСтроки";
	
	// Сформируем структуру таблицы для промежуточного хранения результатов распределения ВОСМС
	ТаблицаРаспределенияВОСМС = Новый ТаблицаЗначений();
	МассивТипов = Новый Массив; 
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияВОСМС.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(10)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ТаблицаРаспределенияВОСМС.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ВидыДоходов"));
	ТаблицаРаспределенияВОСМС.Колонки.Добавить("ВидДохода", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияВОСМС.Колонки.Добавить("СтруктурнаяЕдиница", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияВОСМС.Колонки.Добавить("Организация", Новый ОписаниеТипов(МассивТипов));
	Если РаспределятьНалогиПоПодразделениямОрганизаций Тогда
		МассивТипов.Очистить();
		МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
		ТаблицаРаспределенияВОСМС.Колонки.Добавить("ПодразделениеОрганизации", Новый ОписаниеТипов(МассивТипов));
	КонецЕсли;
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Дата"));
	ТаблицаРаспределенияВОСМС.Колонки.Добавить("МесяцНалоговогоПериода", Новый ОписаниеТипов(МассивТипов, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияВОСМС.Колонки.Добавить("Взнос", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));
	ТаблицаРаспределенияВОСМС.Колонки.Добавить("ОблагаемаяБаза", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));

	// Распределяемые значения
	КолонкиДляРаспределения = Новый Массив;
	КолонкиДляРаспределения.Добавить("Взнос");
	КолонкиДляРаспределения.Добавить("ОблагаемаяБаза");
	
	КолонкаКоэффициентов = "ОблагаемыйДоход";
	ПроведениеРасчетов.РаспределитьНалогиВзносыУдержанияПоСтруктурнымЕдиницам(ТаблицаРаспределенияВОСМС, РезультатЗапросаВОСМС, КолонкиДляРаспределения, КолонкаДляПоиска, КолонкаКоэффициентов);	
	
	ТаблицаРаспределенияВОСМС.Свернуть("НомерСтроки, ФизЛицо, СтруктурнаяЕдиница, Организация, ВидДохода, " + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "ПодразделениеОрганизации, ", "") + "МесяцНалоговогоПериода", 
									 "Взнос, ОблагаемаяБаза");

	// Вычеты ИПН
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОДоходахИПН.ФизЛицо КАК ФизЛицо,
	|	СведенияОДоходахИПН.ПериодРегистрации КАК ПериодРегистрации,
	|	СведенияОДоходахИПН.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	СведенияОДоходахИПН.ПериодДоходов КАК ПериодДоходов,
	|	СведенияОДоходахИПН.ВидДохода,
	|	СУММА(СведенияОДоходахИПН.ОблагаемыйДоход) КАК ОблагаемыйДоход
	|ПОМЕСТИТЬ ВТ__СведенияОДоходахИПН_ОбщаяСуммаДоходов
	|ИЗ
	|	ВТ_СведенияОДоходахИПН КАК СведенияОДоходахИПН
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходахИПН.ФизЛицо,
	|	СведенияОДоходахИПН.ПериодРегистрации,
	|	СведенияОДоходахИПН.МесяцНалоговогоПериода,
	|	СведенияОДоходахИПН.ПериодДоходов,
	|	СведенияОДоходахИПН.ВидДохода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо,
	|	ВидДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧастьВычетыИПН.НомерСтроки КАК НомерСтроки,
	|	ТабличнаяЧастьВычетыИПН.ФизЛицо КАК ФизЛицо,
	|	ТабличнаяЧастьВычетыИПН.ВидВычета КАК ВидВычета,
	|	ТабличнаяЧастьВычетыИПН.ВидДохода КАК ВидДохода,
	|	ТабличнаяЧастьВычетыИПН.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ТабличнаяЧастьВычетыИПН.РазрешенныйВычет КАК РазрешенныйВычет,
	|	ТабличнаяЧастьВычетыИПН.ПримененныйВычет КАК ПримененныйВычет,
	|	СведенияОДоходахИПН.СтруктурнаяЕдиница,
	|	СведенияОДоходахИПН.Организация КАК Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
	|	СведенияОДоходахИПН.ПодразделениеОрганизации,", "") + "
	|	СведенияОДоходахИПН.ОблагаемыйДоход,
	|	ОбщаяСуммаДоходов.ОблагаемыйДоход КАК ОблагаемыйДоход1,
	|	ЕСТЬNULL(ИндивидуальныйПорядокОкругления.ПорядокОкругления, ОбщийПорядокОкругления.ПорядокОкругления) КАК ПорядокОкругления,
	|	ЕСТЬNULL(ИндивидуальныйПорядокОкругления.МетодОкругления, ОбщийПорядокОкругления.МетодОкругления) КАК МетодОкругления
	|ИЗ
	|	ВТ_ТабличнаяЧастьВычетыИПН КАК ТабличнаяЧастьВычетыИПН
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ__СведенияОДоходахИПН_ОбщаяСуммаДоходов КАК ОбщаяСуммаДоходов
	|		ПО ТабличнаяЧастьВычетыИПН.ФизЛицо = ОбщаяСуммаДоходов.ФизЛицо
	|		И ТабличнаяЧастьВычетыИПН.ВидДохода = ОбщаяСуммаДоходов.ВидДохода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СведенияОДоходахИПН КАК СведенияОДоходахИПН
	|		ПО ТабличнаяЧастьВычетыИПН.ФизЛицо = СведенияОДоходахИПН.ФизЛицо
	|		И ТабличнаяЧастьВычетыИПН.ВидДохода = СведенияОДоходахИПН.ВидДохода
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации, ВидРасчета = НЕОПРЕДЕЛЕНО) КАК ОбщийПорядокОкругления
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОкругленияРезультатовРасчетаЗарплаты.СрезПоследних(&парамПериодРегистрации, ) КАК ИндивидуальныйПорядокОкругления
	|		ПО (ИндивидуальныйПорядокОкругления.ВидРасчета = ЗНАЧЕНИЕ(Справочник.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	ФизЛицо,
	|	МесяцНалоговогоПериода,
	|	ВидДохода
	|ИТОГИ
	|	МАКСИМУМ(РазрешенныйВычет),
	|	МАКСИМУМ(ПримененныйВычет),
	|	МАКСИМУМ(ПорядокОкругления),
	|	МАКСИМУМ(МетодОкругления)
	|ПО
	|	НомерСтроки";

	
	РезультатЗапросаВычетыИПН = Запрос.Выполнить();;
	
	// Ключевое поле
	КолонкаДляПоиска = "НомерСтроки";
	
	// Сформируем структуру таблицы для промежуточного хранения результатов распределения ОПВ
	ТаблицаРаспределенияВычетыИПН = Новый ТаблицаЗначений();
	МассивТипов = Новый Массив; 
	МассивТипов.Добавить(Тип("Число"));
	ТаблицаРаспределенияВычетыИПН.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(10)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ТаблицаРаспределенияВычетыИПН.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ВидыДоходов"));
	ТаблицаРаспределенияВычетыИПН.Колонки.Добавить("ВидДохода", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ВычетыИПН"));
	ТаблицаРаспределенияВычетыИПН.Колонки.Добавить("ВидВычета", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияВычетыИПН.Колонки.Добавить("СтруктурнаяЕдиница", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаРаспределенияВычетыИПН.Колонки.Добавить("Организация", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаРаспределенияВычетыИПН.Колонки.Добавить("ПодразделениеОрганизации", Новый ОписаниеТипов(МассивТипов));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Дата"));
	ТаблицаРаспределенияВычетыИПН.Колонки.Добавить("МесяцНалоговогоПериода", Новый ОписаниеТипов(МассивТипов, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Число"));
	 ТаблицаРаспределенияВычетыИПН.Колонки.Добавить("ПримененныйВычет", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));
	ТаблицаРаспределенияВычетыИПН.Колонки.Добавить("РазрешенныйВычет", Новый ОписаниеТипов(МассивТипов, , , Новый КвалификаторыЧисла(15,2)));

	// Распределяемые значения
	КолонкиДляРаспределения = Новый Массив;
	КолонкиДляРаспределения.Добавить("ПримененныйВычет");
	КолонкиДляРаспределения.Добавить("РазрешенныйВычет");
	
	КолонкаКоэффициентов = "ОблагаемыйДоход";
	ПроведениеРасчетов.РаспределитьНалогиВзносыУдержанияПоСтруктурнымЕдиницам(ТаблицаРаспределенияВычетыИПН, РезультатЗапросаВычетыИПН, КолонкиДляРаспределения, КолонкаДляПоиска, КолонкаКоэффициентов);
	
	ТаблицаРаспределенияВычетыИПН.Свернуть("НомерСтроки, ФизЛицо, ВидВычета, ВидДохода, СтруктурнаяЕдиница, Организация, ПодразделениеОрганизации, МесяцНалоговогоПериода", 
									 "ПримененныйВычет, РазрешенныйВычет");
	
	
	// ФИНАЛЬНЫЙ ЗАПРОС
	
	СписокСпособыРасчетаИЛ = Новый СписокЗначений;
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.УдержаниеФиксированнойСуммой);
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистФиксСуммойДоПредела);
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентом);
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентомДоПредела);
	СписокСпособыРасчетаИЛ.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячномуРасчетномуПоказателю);
	Запрос.УстановитьПараметр("СписокСпособыРасчетаИЛ", СписокСпособыРасчетаИЛ);
	
	Запрос.УстановитьПараметр("ТаблицаОПВ", ТаблицаРаспределенияОПВ);
	Запрос.УстановитьПараметр("ТаблицаВОСМС", ТаблицаРаспределенияВОСМС);
	Запрос.УстановитьПараметр("ТаблицаИПН", ТаблицаРаспределенияИПН);
	Запрос.УстановитьПараметр("ТаблицаНалоговыеВычеты", ТаблицаРаспределенияНалоговыхВычетов);
	Запрос.УстановитьПараметр("ТаблицаУдержания", ТаблицаРаспределенияУдержаний);
	Запрос.УстановитьПараметр("ТаблицаПогашениеЗаймов", ТаблицаРаспределенияПогашениеЗаймов);
	Запрос.УстановитьПараметр("ТаблицаВычетыИПН", ТаблицаРаспределенияВычетыИПН);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаОПВ.НомерСтроки,
		|	ТаблицаОПВ.ФизЛицо,
		|	ТаблицаОПВ.СтруктурнаяЕдиница,
		|	ТаблицаОПВ.Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	ТаблицаОПВ.ПодразделениеОрганизации,", "") + "
		|	ТаблицаОПВ.МесяцНалоговогоПериода,
		|	ТаблицаОПВ.Взнос,
		|	ТаблицаОПВ.ОблагаемаяБаза
		|ПОМЕСТИТЬ ВТ_ТаблицаОПВ
		|ИЗ
		|	&ТаблицаОПВ КАК ТаблицаОПВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаИПН.НомерСтроки,
		|	ТаблицаИПН.ФизЛицо,
		|	ТаблицаИПН.СтруктурнаяЕдиница,
		|	ТаблицаИПН.Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	ТаблицаИПН.ПодразделениеОрганизации,", "") + "
		|	ТаблицаИПН.ВидДохода,
		|	ТаблицаИПН.МесяцНалоговогоПериода,
		|	ТаблицаИПН.Налог,
		|	ТаблицаИПН.ОблагаемаяБаза,
		|	ТаблицаИПН.ПримененныйВычет,
		|	ТаблицаИПН.ПримененнаяЛьгота,
		|	ТаблицаИПН.РазрешенныйВычет
		|ПОМЕСТИТЬ ВТ_ТаблицаИПН
		|ИЗ
		|	&ТаблицаИПН КАК ТаблицаИПН
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаВОСМС.НомерСтроки,
		|	ТаблицаВОСМС.ФизЛицо,
		|	ТаблицаВОСМС.СтруктурнаяЕдиница,
		|	ТаблицаВОСМС.Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	ТаблицаВОСМС.ПодразделениеОрганизации,", "") + "
		|	ТаблицаВОСМС.МесяцНалоговогоПериода,
		|	ТаблицаВОСМС.Взнос,
		|	ТаблицаВОСМС.ВидДохода,
		|	ТаблицаВОСМС.ОблагаемаяБаза
		|ПОМЕСТИТЬ ВТ_ТаблицаВОСМС
		|ИЗ
		|	&ТаблицаВОСМС КАК ТаблицаВОСМС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНалоговыеВычеты.НомерСтроки,
		|	ТаблицаНалоговыеВычеты.ФизЛицо,
		|	ТаблицаНалоговыеВычеты.СтруктурнаяЕдиница,
		|	ТаблицаНалоговыеВычеты.Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	ТаблицаНалоговыеВычеты.ПодразделениеОрганизации,", "") + "
		|	ТаблицаНалоговыеВычеты.МесяцНалоговогоПериода,
		|	ТаблицаНалоговыеВычеты.ВычетИПН,
		|	ТаблицаНалоговыеВычеты.ДокументОснование,
		|	ТаблицаНалоговыеВычеты.СуммаВычета
		|ПОМЕСТИТЬ ВТ_ТаблицаНалоговыеВычеты
		|ИЗ
		|	&ТаблицаНалоговыеВычеты КАК ТаблицаНалоговыеВычеты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаУдержания.НомерСтроки,
		|	ТаблицаУдержания.ФизЛицо,
		|	ТаблицаУдержания.СтруктурнаяЕдиница,
		|	ТаблицаУдержания.Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	ТаблицаУдержания.ПодразделениеОрганизации,", "") + "
		|	ТаблицаУдержания.ВидРасчета,
		|	ТаблицаУдержания.ДокументОснование,
		|	ТаблицаУдержания.Результат
		|ПОМЕСТИТЬ ВТ_ТаблицаУдержаний
		|ИЗ
		|	&ТаблицаУдержания КАК ТаблицаУдержания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПогашениеЗаймов.НомерСтроки,
		|	ТаблицаПогашениеЗаймов.ФизЛицо,
		|	ТаблицаПогашениеЗаймов.СтруктурнаяЕдиница,
		|	ТаблицаПогашениеЗаймов.Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	ТаблицаПогашениеЗаймов.ПодразделениеОрганизации,", "") + "
		|	ТаблицаПогашениеЗаймов.ДоговорЗайма,
		|	ТаблицаПогашениеЗаймов.ПогашеноЗайма
		|ПОМЕСТИТЬ ВТ_ТаблицаПогашениеЗаймов
		|ИЗ
		|	&ТаблицаПогашениеЗаймов КАК ТаблицаПогашениеЗаймов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаВычетыИПН.НомерСтроки,
		|	ТаблицаВычетыИПН.ФизЛицо,
		|	ТаблицаВычетыИПН.МесяцНалоговогоПериода,
		|	ТаблицаВычетыИПН.СтруктурнаяЕдиница,
		|	ТаблицаВычетыИПН.Организация," + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|	ТаблицаВычетыИПН.ПодразделениеОрганизации,", "") + "
		|	ТаблицаВычетыИПН.ВидВычета,
		|	ТаблицаВычетыИПН.ВидДохода,
		|	ТаблицаВычетыИПН.ПримененныйВычет,
		|	ТаблицаВычетыИПН.РазрешенныйВычет
		|ПОМЕСТИТЬ ВТ_ТаблицаВычетыИПН
		|ИЗ
		|	&ТаблицаВычетыИПН КАК ТаблицаВычетыИПН
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	""ИсчисленныйИПН"" КАК ВидСтрокиЗапроса,
		|	ЕСТЬNULL(ТаблицаИПН.НомерСтроки, РанееИсчисленныйИПН.НомерСтроки) КАК НомерСтроки,
		|	ЕСТЬNULL(ИсчисленныйИПН." + ПолеПериод + ", РанееИсчисленныйИПН.МесяцНалоговогоПериода) КАК Период,
		|	ЕСТЬNULL(ТаблицаИПН.ФизЛицо, РанееИсчисленныйИПН.ФизЛицо) КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ТаблицаИПН.ФизЛицо, РанееИсчисленныйИПН.ФизЛицо) ССЫЛКА Справочник.Контрагенты
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЯвляетсяКонтрагентом,
		|	ЕСТЬNULL(ТаблицаИПН.МесяцНалоговогоПериода, РанееИсчисленныйИПН.МесяцНалоговогоПериода) КАК МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|	ЕСТЬNULL(ТаблицаИПН.ВидДохода, РанееИсчисленныйИПН.ВидДохода) КАК ВидДохода,
		|	(ЕСТЬNULL(ТаблицаИПН.Налог, 0) - ЕСТЬNULL(РанееИсчисленныйИПН.Налог, 0)) КАК Налог,
		|	(ЕСТЬNULL(ТаблицаИПН.ПримененныйВычет, 0) - ЕСТЬNULL(РанееИсчисленныйИПН.ПримененныйВычет, 0)) КАК ПримененныйВычет,
		|	(ЕСТЬNULL(ТаблицаИПН.ПримененнаяЛьгота, 0) - ЕСТЬNULL(РанееИсчисленныйИПН.ПримененнаяЛьгота, 0)) КАК ПримененнаяЛьгота,
		|	(ЕСТЬNULL(ТаблицаИПН.РазрешенныйВычет, 0) - ЕСТЬNULL(РанееИсчисленныйИПН.РазрешенныйВычет, 0)) КАК РазрешенныйВычет,
		|	0 КАК Взнос,
		|	(ЕСТЬNULL(ТаблицаИПН.Налог, 0) - ЕСТЬNULL(РанееИсчисленныйИПН.Налог, 0)) КАК СуммаУдержания,
		|	(ЕСТЬNULL(ТаблицаИПН.ОблагаемаяБаза, 0) - ЕСТЬNULL(РанееИсчисленныйИПН.ОблагаемаяБаза, 0)) КАК ОблагаемаяБаза,
		|	0 КАК СуммаВыплаченногоДохода,
		|	0 КАК СуммаУдержанияИЛ,
		|	0 КАК СуммаСборов,
		|	0 КАК СуммаВычета,
		|	NULL КАК ДокументОснование,
		|	NULL КАК Получатель,
		|	NULL КАК ВидРасчета,
		|	NULL КАК ДатаНачала,
		|	NULL КАК ДатаОкончания,
		|	NULL КАК Показатель1,
		|	NULL КАК Показатель2,
		|	NULL КАК Показатель3,
		|	NULL КАК Показатель4,
		|	NULL КАК Показатель5,
		|	NULL КАК Показатель6,
		|	NULL КАК Результат,
		|	NULL КАК Сторно,
		|	NULL КАК Авторасчет,
		|	ЕСТЬNULL(ТаблицаИПН.СтруктурнаяЕдиница, РанееИсчисленныйИПН.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиница" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ЕСТЬNULL(ТаблицаИПН.ПодразделениеОрганизации, РанееИсчисленныйИПН.ПодразделениеОрганизации) КАК ПодразделениеОрганизации", "") + "
		|ПОМЕСТИТЬ ВТ_ДанныеРаспределения
		|ИЗ
		|	ВТ_ТаблицаИПН КАК ТаблицаИПН
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьИПН КАК ИсчисленныйИПН
		|		ПО ТаблицаИПН.НомерСтроки = ИсчисленныйИПН.НомерСтроки
		|       	И ТаблицаИПН.ФизЛицо = ИсчисленныйИПН.ФизЛицо
		|       	И ТаблицаИПН.ВидДохода = ИсчисленныйИПН.ВидДохода
		|
		|	ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РанееИсчисленныйИПН КАК РанееИсчисленныйИПН
		|		ПО ТаблицаИПН.НомерСтроки =  РанееИсчисленныйИПН.НомерСтроки
		|			И ТаблицаИПН.СтруктурнаяЕдиница =  РанееИсчисленныйИПН.СтруктурнаяЕдиница" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|			И ТаблицаИПН.ПодразделениеОрганизации =  РанееИсчисленныйИПН.ПодразделениеОрганизации", "") + "
		|			И ТаблицаИПН.ВидДохода =  РанееИсчисленныйИПН.ВидДохода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""ИсчисленныйОПВ"" КАК ВидСтрокиЗапроса,
		|	ЕСТЬNULL(ТаблицаОПВ.НомерСтроки, РанееИсчисленныйОПВ.НомерСтроки) КАК НомерСтроки,
		|	ЕСТЬNULL(ИсчисленныйОПВ." + ПолеПериод + ", РанееИсчисленныйОПВ.МесяцНалоговогоПериода) КАК Период,
		|	ЕСТЬNULL(ТаблицаОПВ.ФизЛицо, РанееИсчисленныйОПВ.ФизЛицо) КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ТаблицаОПВ.ФизЛицо, РанееИсчисленныйОПВ.ФизЛицо) ССЫЛКА Справочник.Контрагенты
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЯвляетсяКонтрагентом, 
		|	ЕСТЬNULL(ТаблицаОПВ.МесяцНалоговогоПериода, РанееИсчисленныйОПВ.МесяцНалоговогоПериода) КАК МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|	NULL КАК ВидДохода,
		|	0 КАК Налог,
		|	0 КАК ПримененныйВычет,
		|	0 КАК ПримененнаяЛьгота,
		|	0 КАК РазрешенныйВычет,
		|	(ЕСТЬNULL(ТаблицаОПВ.Взнос, 0) - ЕСТЬNULL(РанееИсчисленныйОПВ.Взнос, 0)) КАК Взнос,
		|	(ЕСТЬNULL(ТаблицаОПВ.Взнос, 0) - ЕСТЬNULL(РанееИсчисленныйОПВ.Взнос, 0))  КАК СуммаУдержания,
		|	(ЕСТЬNULL(ТаблицаОПВ.ОблагаемаяБаза, 0) - ЕСТЬNULL(РанееИсчисленныйОПВ.ОблагаемаяБаза, 0)) КАК ОблагаемаяБаза,
		|	0 КАК СуммаВыплаченногоДохода,
		|	0 КАК СуммаУдержанияИЛ,
		|	0 КАК СуммаСборов,
		|	0 КАК СуммаВычета,
		|	NULL КАК ДокументОснование,
		|	NULL КАК Получатель,
		|	NULL КАК ВидРасчета,
		|	NULL КАК ДатаНачала,
		|	NULL КАК ДатаОкончания,
		|	NULL КАК Показатель1,
		|	NULL КАК Показатель2,
		|	NULL КАК Показатель3,
		|	NULL КАК Показатель4,
		|	NULL КАК Показатель5,
		|	NULL КАК Показатель6,
		|	NULL КАК Результат,
		|	NULL КАК Сторно,
		|	NULL КАК Авторасчет,
		|	ЕСТЬNULL(ТаблицаОПВ.СтруктурнаяЕдиница, РанееИсчисленныйОПВ.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиница" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ЕСТЬNULL(ТаблицаОПВ.ПодразделениеОрганизации, РанееИсчисленныйОПВ.ПодразделениеОрганизации) КАК ПодразделениеОрганизации", "") + "
		|ИЗ
		|	ВТ_ТаблицаОПВ КАК ТаблицаОПВ
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьОПВ КАК ИсчисленныйОПВ
		|		ПО ТаблицаОПВ.НомерСтроки = ИсчисленныйОПВ.НомерСтроки
		|       	И ТаблицаОПВ.ФизЛицо = ИсчисленныйОПВ.ФизЛицо
		|
		|	ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РанееИсчисленныйОПВ КАК РанееИсчисленныйОПВ
		|		ПО ТаблицаОПВ.НомерСтроки =  РанееИсчисленныйОПВ.НомерСтроки
		|			И ТаблицаОПВ.СтруктурнаяЕдиница =  РанееИсчисленныйОПВ.СтруктурнаяЕдиница" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|			И ТаблицаОПВ.ПодразделениеОрганизации =  РанееИсчисленныйОПВ.ПодразделениеОрганизации", "") + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""ИсчисленныеВзносыОСМС"" КАК ВидСтрокиЗапроса,
		|	ЕСТЬNULL(ТаблицаВОСМС.НомерСтроки, РанееИсчисленныеВзносыОСМС.НомерСтроки) КАК НомерСтроки,
		|	ЕСТЬNULL(ИсчисленныеВзносыОСМС." + ПолеПериод + ", РанееИсчисленныеВзносыОСМС.МесяцНалоговогоПериода) КАК Период,
		|	ЕСТЬNULL(ТаблицаВОСМС.ФизЛицо, РанееИсчисленныеВзносыОСМС.ФизЛицо) КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ТаблицаВОСМС.ФизЛицо, РанееИсчисленныеВзносыОСМС.ФизЛицо) ССЫЛКА Справочник.Контрагенты
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЯвляетсяКонтрагентом,
		|	ЕСТЬNULL(ТаблицаВОСМС.МесяцНалоговогоПериода, РанееИсчисленныеВзносыОСМС.МесяцНалоговогоПериода) КАК МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|	ТаблицаВОСМС.ВидДохода КАК ВидДохода,
		|	0 КАК Налог,
		|	0 КАК ПримененныйВычет,
		|	0 КАК ПримененнаяЛьгота,
		|	0 КАК РазрешенныйВычет,
		|	(ЕСТЬNULL(ТаблицаВОСМС.Взнос, 0) - ЕСТЬNULL(РанееИсчисленныеВзносыОСМС.Взнос, 0)) КАК Взнос,
		|	(ЕСТЬNULL(ТаблицаВОСМС.Взнос, 0) - ЕСТЬNULL(РанееИсчисленныеВзносыОСМС.Взнос, 0))  КАК СуммаУдержания,
		|	(ЕСТЬNULL(ТаблицаВОСМС.ОблагаемаяБаза, 0) - ЕСТЬNULL(РанееИсчисленныеВзносыОСМС.ОблагаемаяБаза, 0)) КАК ОблагаемаяБаза,
		|	0 КАК СуммаВыплаченногоДохода,
		|	0 КАК СуммаУдержанияИЛ,
		|	0 КАК СуммаСборов,
		|	0 КАК СуммаВычета,
		|	NULL КАК ДокументОснование,
		|	NULL КАК Получатель,
		|	NULL КАК ВидРасчета,
		|	NULL КАК ДатаНачала,
		|	NULL КАК ДатаОкончания,
		|	NULL КАК Показатель1,
		|	NULL КАК Показатель2,
		|	NULL КАК Показатель3,
		|	NULL КАК Показатель4,
		|	NULL КАК Показатель5,
		|	NULL КАК Показатель6,
		|	NULL КАК Результат,
		|	NULL КАК Сторно,
		|	NULL КАК Авторасчет,
		|	ЕСТЬNULL(ТаблицаВОСМС.СтруктурнаяЕдиница, РанееИсчисленныеВзносыОСМС.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиница" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ЕСТЬNULL(ТаблицаВОСМС.ПодразделениеОрганизации, РанееИсчисленныеВзносыОСМС.ПодразделениеОрганизации) КАК ПодразделениеОрганизации", "") + "
		|ИЗ
		|	ВТ_ТаблицаВОСМС КАК ТаблицаВОСМС
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьВОСМС КАК ИсчисленныеВзносыОСМС
		|		ПО ТаблицаВОСМС.НомерСтроки = ИсчисленныеВзносыОСМС.НомерСтроки
		|       	И ТаблицаВОСМС.ФизЛицо = ИсчисленныеВзносыОСМС.ФизЛицо
		|
		|	ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РанееИсчисленныеВзносыОСМС КАК РанееИсчисленныеВзносыОСМС
		|		ПО ТаблицаВОСМС.НомерСтроки =  РанееИсчисленныеВзносыОСМС.НомерСтроки
		|			И ТаблицаВОСМС.СтруктурнаяЕдиница =  РанееИсчисленныеВзносыОСМС.СтруктурнаяЕдиница" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, "
		|			И ТаблицаВОСМС.ПодразделениеОрганизации =  РанееИсчисленныеВзносыОСМС.ПодразделениеОрганизации", "") + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""НалоговыеВычеты"",
		|	ВТ_ТаблицаНалоговыеВычеты.НомерСтроки,
		|	НалоговыеВычеты." + ПолеПериод + " КАК Период,
		|	ВТ_ТаблицаНалоговыеВычеты.ФизЛицо,
		|	ЛОЖЬ КАК ЯвляетсяКонтрагентом,
		|	ВТ_ТаблицаНалоговыеВычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|	ЗНАЧЕНИЕ(Справочник.ВидыДоходов.ДоходыОтРаботодателя) КАК ВидДохода,
		|	0 КАК Налог,
		|	0 КАК ПримененныйВычет,
		|	0 КАК ПримененнаяЛьгота,
		|	0 КАК РазрешенныйВычет,
		|	0 КАК Взнос,
		|	0 КАК СуммаУдержания,
		|	0 КАК ОблагаемаяБаза,
		|	0 КАК СуммаВыплаченногоДохода,
		|	0 КАК СуммаУдержанияИЛ,
		|	0 КАК СуммаСборов,
		|	ВТ_ТаблицаНалоговыеВычеты.СуммаВычета,
		|	ВТ_ТаблицаНалоговыеВычеты.ДокументОснование,
		|	NULL КАК Получатель,
		|	ВТ_ТаблицаНалоговыеВычеты.ВычетИПН КАК ВидРасчета,
		|	NULL КАК ДатаНачала,
		|	NULL КАК ДатаОкончания,
		|	NULL КАК Показатель1,
		|	NULL КАК Показатель2,
		|	NULL КАК Показатель3,
		|	NULL КАК Показатель4,
		|	NULL КАК Показатель5,
		|	NULL КАК Показатель6,
		|	NULL КАК Результат,
		|	NULL КАК Сторно,
		|	NULL КАК Авторасчет,
		|	ВТ_ТаблицаНалоговыеВычеты.СтруктурнаяЕдиница" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ВТ_ТаблицаНалоговыеВычеты.ПодразделениеОрганизации", "") + "
		|ИЗ
		|	ВТ_ТаблицаНалоговыеВычеты КАК ВТ_ТаблицаНалоговыеВычеты
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьНалоговыеВычеты КАК НалоговыеВычеты
		|		ПО ВТ_ТаблицаНалоговыеВычеты.НомерСтроки = НалоговыеВычеты.НомерСтроки
		|       	И ВТ_ТаблицаНалоговыеВычеты.ФизЛицо = НалоговыеВычеты.ФизЛицо
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""Удержания"",
		|	ВТ_ТаблицаУдержаний.НомерСтроки,
		|	&парамПериодРегистрации КАК Период,
		|	ВТ_ТаблицаУдержаний.ФизЛицо,
		|	ЛОЖЬ КАК ЯвляетсяКонтрагентом,
		|	&парамПериодРегистрации КАК МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|	NULL КАК ВидДохода,
		|	0 КАК Налог,
		|	0 КАК ПримененныйВычет,
		|	0 КАК ПримененнаяЛьгота,
		|	0 КАК РазрешенныйВычет,
		|	0 КАК Взнос,
		|	ВТ_ТаблицаУдержаний.Результат КАК СуммаУдержания,
		|	0 КАК ОблагаемаяБаза,
		|	" + ?(ВыборкаПоШапкеДокумента.ЗасчитыватьВВыплаченныеДоходыУдержанияПоИЛ,"
		|		ВТ_ТаблицаУдержаний.Результат", "
		|		ВЫБОР
		|			КОГДА (ВТ_ТаблицаУдержаний.ДокументОснование.Ссылка ЕСТЬ NULL)
		|					ИЛИ (НЕ(ВТ_ТаблицаУдержаний.ДокументОснование.Ссылка ЕСТЬ NULL) И НЕ(ВТ_ТаблицаУдержаний.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист))
		|				ТОГДА ВТ_ТаблицаУдержаний.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ") + " КАК СуммаВыплаченногоДохода,		
		|		ВЫБОР
		|			КОГДА Удержания.ВидРасчета.СпособРасчета В (&СписокСпособыРасчетаИЛ)
		|					ИЛИ Удержания.ДокументОснование.СпособПеречисления = ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленияПоИсполнительномуЛисту.ЧерезКассу)
		|				ТОГДА ВТ_ТаблицаУдержаний.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК СуммаУдержанияИЛ,
		|		ВЫБОР
		|			КОГДА НЕ(Удержания.ВидРасчета.СпособРасчета В (&СписокСпособыРасчетаИЛ))
		|					И Удержания.ДокументОснование.СпособПеречисления <> ЗНАЧЕНИЕ(Перечисление.СпособыПеречисленияПоИсполнительномуЛисту.ЧерезКассу)
		|				ТОГДА ВТ_ТаблицаУдержаний.Результат
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК СуммаСборов,
		|	0 КАК СуммаВычета,
		|	Удержания.ДокументОснование КАК ДокументОснование,
		|	Удержания.ДокументОснование.Получатель КАК Получатель,
		|	ВТ_ТаблицаУдержаний.ВидРасчета,
		|	Удержания.ДатаНачала,
		|	ВЫБОР 
		|		КОГДА Удержания.ДатаОкончания <> &парамПустаяДата 
		|			ТОГДА КОНЕЦПЕРИОДА(Удержания.ДатаОкончания, ДЕНЬ) 
		|		ИНАЧЕ &парамПустаяДата 
		|	КОНЕЦ КАК ДатаОкончания,
		|	Удержания.Показатель1,
		|	Удержания.Показатель2,
		|	Удержания.Показатель3,
		|	Удержания.Показатель4,
		|	Удержания.Показатель5,
		|	Удержания.Показатель6,
		|	ВТ_ТаблицаУдержаний.Результат,
		|	Удержания.Сторно,
		|	Удержания.Авторасчет,
		|	ВТ_ТаблицаУдержаний.СтруктурнаяЕдиница" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ВТ_ТаблицаУдержаний.ПодразделениеОрганизации", "") + "
		|ИЗ
		|	ВТ_ТаблицаУдержаний КАК ВТ_ТаблицаУдержаний
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьУдержания КАК Удержания
		|		ПО ВТ_ТаблицаУдержаний.НомерСтроки = Удержания.НомерСтроки
		|       	И ВТ_ТаблицаУдержаний.ФизЛицо = Удержания.ФизЛицо
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""ПогашениеЗаймов"",
		|	ВТ_ТаблицаПогашениеЗаймов.НомерСтроки,
		|	&парамПериодРегистрации КАК Период,
		|	ВТ_ТаблицаПогашениеЗаймов.ФизЛицо,
		|	ЛОЖЬ КАК ЯвляетсяКонтрагентом,
		|	&парамПериодРегистрации КАК МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|	NULL КАК ВидДохода,
		|	0 КАК Налог,
		|	0 КАК ПримененныйВычет,
		|	0 КАК ПримененнаяЛьгота,
		|	0 КАК РазрешенныйВычет,
		|	0 КАК Взнос,
		|	ВТ_ТаблицаПогашениеЗаймов.ПогашеноЗайма КАК СуммаУдержания,
		|	0 КАК ОблагаемаяБаза,
		|	ВТ_ТаблицаПогашениеЗаймов.ПогашеноЗайма КАК СуммаВыплаченногоДохода,
		|	0 КАК СуммаУдержанияИЛ,
		|	0 КАК СуммаСборов,
		|	0 КАК СуммаВычета,
		|	ВТ_ТаблицаПогашениеЗаймов.ДоговорЗайма КАК ДокументОснование,
		|	NULL КАК Получатель,
		|	NULL КАК ВидРасчета,
		|	NULL КАК ДатаНачала,
		|	NULL КАК ДатаОкончания,
		|	NULL КАК Показатель1,
		|	NULL КАК Показатель2,
		|	NULL КАК Показатель3,
		|	NULL КАК Показатель4,
		|	NULL КАК Показатель5,
		|	NULL КАК Показатель6,
		|	ВТ_ТаблицаПогашениеЗаймов.ПогашеноЗайма КАК Результат,
		|	NULL КАК Сторно,
		|	NULL КАК Авторасчет,
		|	ВТ_ТаблицаПогашениеЗаймов.СтруктурнаяЕдиница" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ВТ_ТаблицаПогашениеЗаймов.ПодразделениеОрганизации", "") + "
		|ИЗ
		|	ВТ_ТаблицаПогашениеЗаймов КАК ВТ_ТаблицаПогашениеЗаймов
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""ВычетыИПН"",
		|	ВТ_ТаблицаВычетыИПН.НомерСтроки,
		|	ВычетыИПН." + ПолеПериод + " КАК Период,
		|	ВТ_ТаблицаВычетыИПН.ФизЛицо,
		|	ЛОЖЬ КАК ЯвляетсяКонтрагентом,
		|	ВТ_ТаблицаВычетыИПН.МесяцНалоговогоПериода КАК МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|	ВТ_ТаблицаВычетыИПН.ВидДохода КАК ВидДохода,
		|	0 КАК Налог,
		|	ВТ_ТаблицаВычетыИПН.ПримененныйВычет КАК ПримененныйВычет,
		|	0 КАК ПримененнаяЛьгота,
		|	ВТ_ТаблицаВычетыИПН.РазрешенныйВычет КАК РазрешенныйВычет,
		|	0 КАК Взнос,
		|	0 КАК СуммаУдержания,
		|	0 КАК ОблагаемаяБаза,
		|	0 КАК СуммаВыплаченногоДохода,
		|	0 КАК СуммаУдержанияИЛ,
		|	0 КАК СуммаСборов,
		|	0 КАК СуммаВычета,
		|	NULL КАК ДокументОснование,
		|	NULL КАК Получатель,
		|	ВТ_ТаблицаВычетыИПН.ВидВычета КАК ВидРасчета,
		|	NULL КАК ДатаНачала,
		|	NULL КАК ДатаОкончания,
		|	NULL КАК Показатель1,
		|	NULL КАК Показатель2,
		|	NULL КАК Показатель3,
		|	NULL КАК Показатель4,
		|	NULL КАК Показатель5,
		|	NULL КАК Показатель6,
		|	NULL КАК Результат,
		|	NULL КАК Сторно,
		|	NULL КАК Авторасчет,
		|	ВТ_ТаблицаВычетыИПН.СтруктурнаяЕдиница" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ВТ_ТаблицаВычетыИПН.ПодразделениеОрганизации", "") + "
		|ИЗ
		|	ВТ_ТаблицаВычетыИПН КАК ВТ_ТаблицаВычетыИПН
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьВычетыИПН КАК ВычетыИПН
		|		ПО ВТ_ТаблицаВычетыИПН.НомерСтроки = ВычетыИПН.НомерСтроки
		|			И ВТ_ТаблицаВычетыИПН.ФизЛицо = ВычетыИПН.ФизЛицо
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеРаспределения.ВидСтрокиЗапроса,
		|	ДанныеРаспределения.НомерСтроки,
		|	ДанныеРаспределения.Период,
		|	ДанныеРаспределения.ФизЛицо,
		|	ДанныеРаспределения.ЯвляетсяКонтрагентом КАК ЯвляетсяКонтрагентом,
		|	ДанныеРаспределения.МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|	ДанныеРаспределения.ВидДохода,
		|	СУММА(ДанныеРаспределения.Налог) КАК Налог,
		|	СУММА(ДанныеРаспределения.ПримененныйВычет) КАК ПримененныйВычет,
		|	СУММА(ДанныеРаспределения.ПримененнаяЛьгота) КАК ПримененнаяЛьгота,
		|	СУММА(ДанныеРаспределения.РазрешенныйВычет) КАК РазрешенныйВычет,
		|	СУММА(ДанныеРаспределения.Взнос) КАК Взнос,
		|	СУММА(ДанныеРаспределения.СуммаУдержания) КАК СуммаУдержания,
		|	СУММА(ДанныеРаспределения.ОблагаемаяБаза) КАК ОблагаемаяБаза,
		|	СУММА(ДанныеРаспределения.СуммаВыплаченногоДохода) КАК СуммаВыплаченногоДохода,
		|	СУММА(ДанныеРаспределения.СуммаУдержанияИЛ) КАК СуммаУдержанияИЛ,
		|	СУММА(ДанныеРаспределения.СуммаСборов) КАК СуммаСборов,
		|	СУММА(ДанныеРаспределения.СуммаВычета) КАК СуммаВычета,
		|	ДанныеРаспределения.ДокументОснование,
		|	ДанныеРаспределения.Получатель,
		|	ДанныеРаспределения.ВидРасчета,
		|	ДанныеРаспределения.ДатаНачала,
		|	ДанныеРаспределения.ДатаОкончания,
		|	ДанныеРаспределения.Показатель1,
		|	ДанныеРаспределения.Показатель2,
		|	ДанныеРаспределения.Показатель3,
		|	ДанныеРаспределения.Показатель4,
		|	ДанныеРаспределения.Показатель5,
		|	ДанныеРаспределения.Показатель6,
		|	ДанныеРаспределения.Результат,
		|	ДанныеРаспределения.Сторно,
		|	ДанныеРаспределения.Авторасчет,
		|	ДанныеРаспределения.СтруктурнаяЕдиница" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ДанныеРаспределения.ПодразделениеОрганизации", "") + "
		|ИЗ
		|	ВТ_ДанныеРаспределения КАК ДанныеРаспределения
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеРаспределения.ВидСтрокиЗапроса,
		|	ДанныеРаспределения.НомерСтроки,
		|	ДанныеРаспределения.Период,
		|	ДанныеРаспределения.ФизЛицо,
		|	ДанныеРаспределения.ЯвляетсяКонтрагентом,
		|	ДанныеРаспределения.МесяцНалоговогоПериодаИлиВзаиморасчетов,
		|	ДанныеРаспределения.ВидДохода,
		|	ДанныеРаспределения.ДокументОснование,
		|	ДанныеРаспределения.Получатель,
		|	ДанныеРаспределения.ВидРасчета,
		|	ДанныеРаспределения.ДатаНачала,
		|	ДанныеРаспределения.ДатаОкончания,
		|	ДанныеРаспределения.Показатель1,
		|	ДанныеРаспределения.Показатель2,
		|	ДанныеРаспределения.Показатель3,
		|	ДанныеРаспределения.Показатель4,
		|	ДанныеРаспределения.Показатель5,
		|	ДанныеРаспределения.Показатель6,
		|	ДанныеРаспределения.Результат,
		|	ДанныеРаспределения.Сторно,
		|	ДанныеРаспределения.Авторасчет,
		|	ДанныеРаспределения.СтруктурнаяЕдиница" + ?(РаспределятьНалогиПоПодразделениямОрганизаций, ",
		|	ДанныеРаспределения.ПодразделениеОрганизации", "");
			
	Возврат Запрос.Выполнить();
	
КонецФункции

// Проверяет правильность заполнения шапки документа.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ)

	//  Организация
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не указана организация, по которой начисляется зарплата!", Отказ);
	КонецЕсли;

	//  ПериодРегистрации
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодРегистрации) Тогда
		ОбщегоНазначения.ОшибкаПриПроведении("Не указан месяц расчета, по которой начисляется зарплата!", Отказ);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ  документа.
//
Процедура ПроверитьЗаполнениеСтроки(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок)

	Если ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ИсчисленныйИПН" Тогда

		СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
										""" табл. части ""ИПН"": ";
		
		// ФизЛицо
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не выбрано физическое лицо!", Отказ);
		КонецЕсли;

		// месяц налогового периода
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не задан месяц налогового периода!", Отказ);
		КонецЕсли;
	
	ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ИсчисленныйОПВ" Тогда

		СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
										""" табл. части ""Исчисленный ОПВ"": ";
		
		// ФизЛицо
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не выбрано физическое лицо!", Отказ);
		КонецЕсли;

		// месяц налогового периода
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не задан месяц налогового периода!", Отказ);
		КонецЕсли;
		
	ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ИсчисленныеВзносыОСМС" Тогда

		СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
										""" табл. части ""Исчисленные взносы ОСМС"": ";
		
		// ФизЛицо
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не выбрано физическое лицо!", Отказ);
		КонецЕсли;

		// месяц налогового периода
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не задан месяц налогового периода!", Отказ);
		КонецЕсли;
		
	ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "Удержания" Тогда

		СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
										""" табл. части ""Удержания"": ";
		
		// ФизЛицо
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не выбрано физическое лицо!", Отказ);
		КонецЕсли;

		// ВидРасчета
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указан вид расчета!", Отказ);
		КонецЕсли;

		// Дата начала
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаНачала) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала удержания!", Отказ);
		КонецЕсли;

		// Дата окончания
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаОкончания) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указана дата окончания удержания!", Отказ);
		КонецЕсли;

	ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ПогашениеЗаймов" Тогда

		СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
	 									""" табл. части ""Погашение займов"": ";
		
		// ФизЛицо
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не выбрано физическое лицо!", Отказ);
	 	КонецЕсли;
	 	// ДоговорЗайма
	 	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументОснование) Тогда
	 		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не задан договор займа, погашение которого выполняется!", Отказ);
		КонецЕсли;

	ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "НалоговыеВычеты" Тогда

		СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
										""" табл. части ""Прочие вычеты"": ";
		
		// ФизЛицо
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не выбрано физическое лицо!", Отказ);
		КонецЕсли;

		// месяц налогового периода
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не задан месяц налогового периода!", Отказ);
		КонецЕсли;

		// ВидРасчета
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указан вид вычета ИПН!", Отказ);
		КонецЕсли;

		// ДокументОснование
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументОснование) Тогда
			ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + "не указан документ-основание!", Отказ);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеСтроки()

// По строке выборок из результатов запроса по документу формируем движения по регистрам.
//
Процедура ДобавитьСтрокуУдержаний(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, НаборЗаписей)

	Движение = НаборЗаписей.Добавить();

	// Свойства
	Движение.ПериодРегистрации          = ВыборкаПоШапкеДокумента.ПериодРегистрации;
	Движение.БазовыйПериодНачало        = ВыборкаПоСтрокамДокумента.ДатаНачала;
	Движение.БазовыйПериодКонец		    = ВыборкаПоСтрокамДокумента.ДатаОкончания;
	Движение.ВидРасчета				    = ВыборкаПоСтрокамДокумента.ВидРасчета;
	Движение.Сторно				    	= ВыборкаПоСтрокамДокумента.Сторно;

	// Измерения
	Движение.ФизЛицо                    = ВыборкаПоСтрокамДокумента.ФизЛицо;
	Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	
	// Ресурсы
	Движение.Результат					= ВыборкаПоСтрокамДокумента.Результат;

	// Реквизиты
	Движение.Показатель1                = ВыборкаПоСтрокамДокумента.Показатель1;
	Движение.Показатель2                = ВыборкаПоСтрокамДокумента.Показатель2;
	Движение.Показатель3                = ВыборкаПоСтрокамДокумента.Показатель3;
	Движение.Показатель4                = ВыборкаПоСтрокамДокумента.Показатель4;
	Движение.Показатель5                = ВыборкаПоСтрокамДокумента.Показатель5;
	Движение.Показатель6                = ВыборкаПоСтрокамДокумента.Показатель6;
	Движение.ДокументОснование          = ВыборкаПоСтрокамДокумента.ДокументОснование;
	Движение.ОбособленноеПодразделение  = ВыборкаПоШапкеДокумента.Организация;
	Движение.Авторасчет			        = ВыборкаПоСтрокамДокумента.Авторасчет;
    Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
		Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
	КонецЕсли;

КонецПроцедуры // ДобавитьСтрокуУдержаний()

// По строке выборок из результатов запроса по документу формируем движения по регистрам ИПН.
//
Процедура ДобавитьСтрокуИсчисленныйИПН(ВыборкаПоШапкеДокумента, 
										ВыборкаПоСтрокамДокумента, 
										ИсчислениеНалоговСтруктурныхЕдиниц,
										УпрощенныйУчетИПНиОПВ,
										РежимРасчета = Ложь)

	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница,
																		ВыборкаПоШапкеДокумента.Организация,
																		ИсчислениеНалоговСтруктурныхЕдиниц,
																		Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	КонецЕсли;
	
	Если ВыборкаПоСтрокамДокумента.Налог <> 0 Тогда
		// ИПН расчеты с бюджетом
		Движение = Движения.ИПНРасчетыСБюджетом.мТаблицаДвижений.Добавить();

		// Свойства
		Движение.Период						= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		Движение.ВидДвижения				= ВидДвиженияНакопления.Приход;

		// Измерения
		Движение.ФизЛицо                    = ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница		= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.МесяцНалоговогоПериода     	= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		Иначе
			Движение.МесяцНалоговогоПериода     	= ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов;
		КонецЕсли;
		Движение.Организация				= ВыборкаПоШапкеДокумента.Организация;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда 
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;
		
		// Ресурсы
		Движение.Налог						= ВыборкаПоСтрокамДокумента.Налог;
		
		// Реквизиты 
		Движение.ВидСтроки					= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление;
		
		Если НЕ РежимРасчета Тогда
			
			// ИПН исчисленный
			Движение = Движения.ИПНИсчисленный.мТаблицаДвижений.Добавить();

			// Свойства
			Движение.Период						= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);

			// Измерения
			Движение.ФизЛицо                    = ВыборкаПоСтрокамДокумента.ФизЛицо;
			Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
				Движение.Налогоплательщик	= Налогоплательщик;
			Иначе
				Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
			КонецЕсли;
			Движение.СтруктурнаяЕдиница		= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
			Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
				Движение.МесяцНалоговогоПериода     	= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
			Иначе
				Движение.МесяцНалоговогоПериода     	= ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов;
			КонецЕсли;
			Движение.Организация				= ВыборкаПоШапкеДокумента.Организация;
			Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда 
				Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
			КонецЕсли;
	        Движение.ВидДохода					= ВыборкаПоСтрокамДокумента.ВидДохода;
			
			// Ресурсы
			Движение.Налог						= ВыборкаПоСтрокамДокумента.Налог;
			
			// Реквизиты 
			Движение.ВидСтроки					= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление;
			
		КонецЕсли;
				
		// сразу же, не дожидаясь выплаты, регистрируем факт удержания налога
		Если УпрощенныйУчетИПНиОПВ Тогда 
			
			Движение = Движения.ИПНРасчетыСБюджетом.мТаблицаДвижений.Добавить();

			// Свойства
			Движение.Период							= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
			Движение.ВидДвижения					= ВидДвиженияНакопления.Расход;

			// Измерения
			Движение.ФизЛицо                    	= ВыборкаПоСтрокамДокумента.ФизЛицо;
			Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
				Движение.Налогоплательщик	= Налогоплательщик;
			Иначе
				Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
			КонецЕсли;
			Движение.СтруктурнаяЕдиница		= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
			Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
				Движение.МесяцНалоговогоПериода     	= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
			Иначе
				Движение.МесяцНалоговогоПериода     	= ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов;
			КонецЕсли;
			Движение.Организация				= ВыборкаПоШапкеДокумента.Организация;
			Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда 
				Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
			КонецЕсли;

			// Ресурсы
			Движение.Налог						= ВыборкаПоСтрокамДокумента.Налог;
			
			// Реквизиты 
			Движение.ВидСтроки					= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Удержание;
			
		КонецЕсли;
	КонецЕсли;
	
	Если РежимРасчета Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыборкаПоСтрокамДокумента.ОблагаемаяБаза <> 0 
		ИЛИ ВыборкаПоСтрокамДокумента.ПримененныйВычет <> 0 
		ИЛИ ВыборкаПоСтрокамДокумента.ПримененнаяЛьгота <> 0
		ИЛИ ВыборкаПоСтрокамДокумента.РазрешенныйВычет <> 0 Тогда
		
		// ИПН сведения о доходах
		Движение = Движения.ИПНСведенияОДоходах.мТаблицаДвижений.Добавить();
		
		// Свойства
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.Период 				= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Иначе
			Движение.Период			 		= ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов;
		КонецЕсли;
		
		// Измерения
		Движение.ФизЛицо                    = ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик		= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик		= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница			= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		
		Движение.ПериодРегистрации 			= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		Движение.Организация				= ВыборкаПоШапкеДокумента.Организация;
        Движение.СпособНалогообложения      = Справочники.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда 
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;
        Движение.ВидДохода					= ВыборкаПоСтрокамДокумента.ВидДохода;
		
		// Ресурсы
		Движение.ОблагаемаяБаза				= ВыборкаПоСтрокамДокумента.ОблагаемаяБаза;
		Движение.ПримененныйВычет			= ВыборкаПоСтрокамДокумента.ПримененныйВычет;
		Движение.ПримененнаяЛьгота			= ВыборкаПоСтрокамДокумента.ПримененнаяЛьгота;
		Движение.РазрешенныйВычет			= ВыборкаПоСтрокамДокумента.РазрешенныйВычет;
		
	КонецЕсли;


КонецПроцедуры // ДобавитьСтрокуИсчисленныйИПН()

// По строке выборок из результатов запроса по документу формируем движения по регистрам вычетов по ИПН.
//
Процедура ДобавитьСтрокуНалоговыеВычеты(ВыборкаПоШапкеДокумента, 
										ВыборкаПоСтрокамДокумента, 
										ИсчислениеНалоговСтруктурныхЕдиниц)

	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница,
																		ВыборкаПоШапкеДокумента.Организация,
																		ИсчислениеНалоговСтруктурныхЕдиниц,
																		Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	КонецЕсли;

	Движение = Движения.ИПНСведенияОДоходах.мТаблицаДвижений.Добавить();

	// Свойства
	Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
		Движение.Период				= ВыборкаПоШапкеДокумента.ПериодРегистрации;
	Иначе
		Движение.Период				= ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов;
	КонецЕсли;

	// Измерения
	Движение.ФизЛицо                = ВыборкаПоСтрокамДокумента.ФизЛицо;
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Движение.Налогоплательщик	= Налогоплательщик;
	Иначе
		Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
	КонецЕсли;
	Движение.СтруктурнаяЕдиница		= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
	Движение.ПериодРегистрации     	= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Движение.Организация			= ВыборкаПоШапкеДокумента.Организация;
	Движение.СпособНалогообложения  = Справочники.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом;
	Движение.ВидРасчета				= ВыборкаПоСтрокамДокумента.ВидРасчета;
	Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
		Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
	КонецЕсли;
	Движение.ВидДохода				= ВыборкаПоСтрокамДокумента.ВидДохода;
	
	// Ресурсы
	Движение.СуммаДохода			= 0; // самого дохода нет, есть только вычет
	Движение.СуммаВычета			= ВыборкаПоСтрокамДокумента.СуммаВычета;
	
	// Реквизиты 
	Движение.ДокументОснование		= ВыборкаПоСтрокамДокумента.ДокументОснование;
	
КонецПроцедуры // ДобавитьСтрокуНалоговыеВычеты()

// По строке выборок из результатов запроса по документу формируем движения по регистрам ОПВ.
//
Процедура ДобавитьСтрокуИсчисленныйОПВ(ВыборкаПоШапкеДокумента, 
										ВыборкаПоСтрокамДокумента, 
										ИсчислениеНалоговСтруктурныхЕдиниц,
										УпрощенныйУчетИПНиОПВ,
										РежимРасчета = Ложь)
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница,
																		ВыборкаПоШапкеДокумента.Организация,
																		ИсчислениеНалоговСтруктурныхЕдиниц,
																		Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	КонецЕсли;
	
	Если ВыборкаПоСтрокамДокумента.Взнос <> 0 Тогда
		
		Движение = Движения.ОПВРасчетыСФондами.мТаблицаДвижений.Добавить();

		// Свойства
		Движение.Период						= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);

		// Измерения
		Движение.ФизЛицо                    = ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик 		= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик 		= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница			= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.МесяцНалоговогоПериода = НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		Иначе
			Движение.МесяцНалоговогоПериода = ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов;
		КонецЕсли;
		Движение.ВидПлатежа					= Перечисления.ВидыПлатежейВБюджетИФонды.Налог;
		Движение.Организация				= ВыборкаПоШапкеДокумента.Организация;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда 
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;
		
		// Ресурсы
		Движение.Взнос						= ВыборкаПоСтрокамДокумента.Взнос;
		
		// Реквизиты 
		Движение.ВидСтроки					= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление;

		Если УпрощенныйУчетИПНиОПВ Тогда

			// сразу же, не дожидаясь выплаты, регистрируем факт удержания взноса
			Движение = Движения.ОПВПодлежитПеречислениюВФонды.мТаблицаДвижений.Добавить();

			// Свойства
			Движение.Период						= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);

			// Измерения
			Движение.ФизЛицо                    = ВыборкаПоСтрокамДокумента.ФизЛицо;
			Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
				Движение.Налогоплательщик	= Налогоплательщик;
			Иначе
				Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
			КонецЕсли;
			Движение.СтруктурнаяЕдиница			= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
			Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
				Движение.МесяцНалоговогоПериода     = НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
			Иначе
				Движение.МесяцНалоговогоПериода     = ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов;
			КонецЕсли;
			Движение.МесяцВыплатыДоходов	= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
			Движение.Организация			= ВыборкаПоШапкеДокумента.Организация;
			Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда 
				Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
			КонецЕсли;

			// Ресурсы
			Движение.Взнос					= ВыборкаПоСтрокамДокумента.Взнос;
			
			// Реквизиты 
			Движение.ВидСтроки				= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Удержание;
			
		КонецЕсли;
	КонецЕсли;
	
	Если РежимРасчета Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыборкаПоСтрокамДокумента.ОблагаемаяБаза <> 0 Тогда
		
		Движение = Движения.ОПВСведенияОДоходах.мТаблицаДвижений.Добавить();
		
		// Свойства
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.Период			 		= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Иначе
			Движение.Период			 		= ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов;
		КонецЕсли;
		
		// Измерения
		Движение.ФизЛицо                    = ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик		= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик		= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница			= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации 			= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		Движение.Организация				= ВыборкаПоШапкеДокумента.Организация;
        Движение.СпособНалогообложения      = Справочники.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом;
	 	Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда 
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;

		// Ресурсы
		Движение.ОблагаемаяБаза				= ВыборкаПоСтрокамДокумента.ОблагаемаяБаза;
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуИсчисленныйОПВ()

// По строке выборок из результатов запроса по документу формируем движения по регистрам ВОСМС.
//
Процедура ДобавитьСтрокуИсчисленныеВзносыОСМС(ВыборкаПоШапкеДокумента, 
										ВыборкаПоСтрокамДокумента, 
										ИсчислениеНалоговСтруктурныхЕдиниц,
										УпрощенныйУчетИПНиОПВ,
										РежимРасчета = Ложь)
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница,
																		ВыборкаПоШапкеДокумента.Организация,
																		ИсчислениеНалоговСтруктурныхЕдиниц,
																		Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	КонецЕсли;
	
	Если ВыборкаПоСтрокамДокумента.Взнос <> 0 Тогда
		
		Движение = Движения.ВОСМСРасчетыСФондами.мТаблицаДвижений.Добавить();

		// Свойства
		Движение.Период						= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);

		// Измерения
		Движение.ФизЛицо                    = ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик 		= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик 		= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница			= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.МесяцНалоговогоПериода = НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		Иначе
			Движение.МесяцНалоговогоПериода = ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов;
		КонецЕсли;
		Движение.ВидПлатежа					= Перечисления.ВидыПлатежейВБюджетИФонды.Налог;
		Движение.Организация				= ВыборкаПоШапкеДокумента.Организация;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда 
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;
		
		// Ресурсы
		Движение.Взнос						= ВыборкаПоСтрокамДокумента.Взнос;
		
		// Реквизиты 
		Движение.ВидСтроки					= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление;

		Если НЕ РежимРасчета Тогда
			
			// ВОСМС исчисленный
			Движение = Движения.ВОСМСИсчисленные.мТаблицаДвижений.Добавить();

			// Свойства
			Движение.Период						= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);

			// Измерения
			Движение.ФизЛицо                    = ВыборкаПоСтрокамДокумента.ФизЛицо;
			Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
				Движение.Налогоплательщик	= Налогоплательщик;
			Иначе
				Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
			КонецЕсли;
			Движение.СтруктурнаяЕдиница		= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
			Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
				Движение.МесяцНалоговогоПериода     	= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
			Иначе
				Движение.МесяцНалоговогоПериода     	= ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов;
			КонецЕсли;
			Движение.Организация				= ВыборкаПоШапкеДокумента.Организация;
			Движение.ВидПлатежа					= Перечисления.ВидыПлатежейВБюджетИФонды.Налог;
			Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда 
				Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
			КонецЕсли;
	        Движение.ВидДохода					= ВыборкаПоСтрокамДокумента.ВидДохода;
			
			// Ресурсы
			Движение.Взнос						= ВыборкаПоСтрокамДокумента.Взнос;
			
			// Реквизиты 
			Движение.ВидСтроки					= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Исчисление;
			
		КонецЕсли;

		Если УпрощенныйУчетИПНиОПВ Тогда

			// сразу же, не дожидаясь выплаты, регистрируем факт удержания взноса
			Движение = Движения.ВОСМСПодлежитПеречислениюВФонды.мТаблицаДвижений.Добавить();

			// Свойства
			Движение.Период						= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);

			// Измерения
			Движение.ФизЛицо                    = ВыборкаПоСтрокамДокумента.ФизЛицо;
			Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
				Движение.Налогоплательщик	= Налогоплательщик;
			Иначе
				Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
			КонецЕсли;
			Движение.СтруктурнаяЕдиница			= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
			Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
				Движение.МесяцНалоговогоПериода     = НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
			Иначе
				Движение.МесяцНалоговогоПериода     = ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов;
			КонецЕсли;
			Движение.МесяцВыплатыДоходов	= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
			Движение.Организация			= ВыборкаПоШапкеДокумента.Организация;
			Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда 
				Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
			КонецЕсли;

			// Ресурсы
			Движение.Взнос					= ВыборкаПоСтрокамДокумента.Взнос;
			
			// Реквизиты 
			Движение.ВидСтроки				= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Удержание;
			
		КонецЕсли;
	КонецЕсли;
	
	Если РежимРасчета Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыборкаПоСтрокамДокумента.ОблагаемаяБаза <> 0 Тогда
		
		Движение = Движения.ВОСМССведенияОДоходах.мТаблицаДвижений.Добавить();
		
		// Свойства
		Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
			Движение.Период			 		= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Иначе
			Движение.Период			 		= ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов;
		КонецЕсли;
		
		// Измерения
		Движение.ФизЛицо                    = ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик		= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик		= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница			= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодРегистрации 			= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		Движение.Организация				= ВыборкаПоШапкеДокумента.Организация;
        Движение.СпособНалогообложения      = Справочники.СпособыНалогообложенияДоходов.ОблагаетсяЦеликом;
        Движение.ВидДохода					= ВыборкаПоСтрокамДокумента.ВидДохода;
	 	Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда 
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;

		// Ресурсы
		Движение.ОблагаемаяБаза				= ВыборкаПоСтрокамДокумента.ОблагаемаяБаза;
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуИсчисленныеВзносыОСМС()

// По строке выборки из результатов запроса о погашении займа формируем движения по регистрам.
//
Процедура ДобавитьСтрокуПогашениеЗайма(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента)
	
	// пошашено основного долга
	Если ВыборкаПоСтрокамДокумента.Результат <> 0 Тогда
		Движение = Движения.ПогашениеЗаймовРаботникамиОрганизаций.мТаблицаДвижений.Добавить();

		// Свойства
		Движение.Период						= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		Движение.ВидДвижения				= ВидДвиженияНакопления.Расход;

		// Измерения
		Движение.ФизЛицо                    = ВыборкаПоСтрокамДокумента.ФизЛицо;
		Движение.Организация				= ВыборкаПоШапкеДокумента.Организация;
	 	Движение.ДоговорЗайма				= ВыборкаПоСтрокамДокумента.ДокументОснование;

		// Ресурсы
		Движение.ОсновнойДолг				= ВыборкаПоСтрокамДокумента.Результат;
		
		// Реквизиты 
		Движение.УдержаноИзЗарплаты			= Истина;
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуПогашениеЗайма()

// По строке выборок из результатов запроса по документу формируем движения по регистрам взаиморасчетов с работниками.
//
Процедура ДобавитьСтрокуВзаиморасчеты(ВыборкаПоШапкеДокумента, 
										ВыборкаПоСтрокамДокумента, 
										ИсчислениеНалоговСтруктурныхЕдиниц)
	
	Если ВыборкаПоСтрокамДокумента.СуммаУдержания = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница,
																			ВыборкаПоШапкеДокумента.Организация,
																			ИсчислениеНалоговСтруктурныхЕдиниц,
																			Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	КонецЕсли;
																		
	Если ВыборкаПоСтрокамДокумента.ЯвляетсяКонтрагентом Тогда
		
		Движение = Движения.ВзаиморасчетыОрганизацийСКонтрагентамиФизЛицами.Добавить();	
			
		// Свойства
		Движение.ВидДвижения	  		= ВидДвиженияНакопления.Приход;
		Движение.Период			  		= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
				
		// Измерения
		Движение.Контрагент				= ВыборкаПоСтрокамДокумента.ФизЛицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница 	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодВзаиморасчетов 	= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		Движение.Организация			= ВыборкаПоШапкеДокумента.Организация;
				
		// Ресурсы
		Движение.СуммаВзаиморасчетов  	= - ВыборкаПоСтрокамДокумента.СуммаУдержания;
		
		
	Иначе 
		
		Движение = Движения.ВзаиморасчетыСРаботникамиОрганизаций.мТаблицаДвижений.Добавить();
	
		// Свойства
		Движение.Период 				= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		Движение.ВидДвижения			= ВидДвиженияНакопления.Приход;
		
		// Измерения 
		Движение.Физлицо 				= ВыборкаПоСтрокамДокумента.Физлицо;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница		= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.ПериодВзаиморасчетов 	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
		Движение.Организация 			= ВыборкаПоШапкеДокумента.Организация;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;
		
		// Ресурсы
		Движение.СуммаВзаиморасчетов 	= - ВыборкаПоСтрокамДокумента.СуммаУдержания;
		
		// Реквизиты
		Движение.ВидСтроки				= Перечисления.РасчетыСБюджетомФондамиВидСтроки.Удержание;
		
	КонецЕсли;
														
КонецПроцедуры // ДобавитьСтрокуВзаиморасчетыСРаботниками()

// По строке выборок из результатов запроса по документу формируем движения по регистрам взаиморасчетов с получателями по ИЛ.
//
Процедура ДобавитьСтрокуВзаиморасчетыСПолучателямиИЛ(ВыборкаПоШапкеДокумента, 
														ВыборкаПоСтрокамДокумента, 
														ИсчислениеНалоговСтруктурныхЕдиниц)

	Если ВыборкаПоСтрокамДокумента.СуммаУдержанияИЛ = 0 И ВыборкаПоСтрокамДокумента.СуммаСборов = 0 Тогда
		Возврат;
	КонецЕсли; 

	// сформируем движения ВзаиморасчетыОрганизацийСПолучателямиИЛ
	Если ТипЗнч(ВыборкаПоСтрокамДокумента.ДокументОснование) = Тип("ДокументСсылка.ИсполнительныйЛист")
			И ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДокументОснование) Тогда
			
		Движение = Движения.ВзаиморасчетыОрганизацийСПолучателямиИЛ.мТаблицаДвижений.Добавить();
		
		// свойства
		Движение.Период 				= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
		Движение.ВидДвижения			= ВидДвиженияНакопления.Приход;
		
		// измерения 
		Движение.Получатель				= ВыборкаПоСтрокамДокумента.Получатель;
		Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
			Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница, 
																			ВыборкаПоШапкеДокумента.Организация,
																			ИсчислениеНалоговСтруктурныхЕдиниц,
																			Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
			Движение.Налогоплательщик	= Налогоплательщик;
		Иначе
			Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
		КонецЕсли;
		Движение.СтруктурнаяЕдиница		= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
		Движение.Организация 			= ВыборкаПоШапкеДокумента.Организация;
		Движение.ДокументОснование		= ВыборкаПоСтрокамДокумента.ДокументОснование;
		Движение.ПериодВзаиморасчетов 	= ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов;
		Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
			Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
		КонецЕсли;
		
		// ресурсы
		Движение.СуммаВзаиморасчетов 	= ВыборкаПоСтрокамДокумента.СуммаУдержанияИЛ;
		Движение.СуммаСборов		 	= ВыборкаПоСтрокамДокумента.СуммаСборов;
		
	КонецЕсли;
													
КонецПроцедуры // ДобавитьСтрокуВзаиморасчетыСПолучателямиИЛ()

// По строке выборок из результатов запроса по документу формируем движения по регистру выплаченных доходов по НУ.
//
Процедура ДобавитьСтрокуВыплаченныеДоходыНУ(ВыборкаПоШапкеДокумента, 
												ВыборкаПоСтрокамДокумента, 
												ИсчислениеНалоговСтруктурныхЕдиниц)

	Если ВыборкаПоСтрокамДокумента.СуммаВыплаченногоДохода = 0 Тогда
		Возврат;
	КонецЕсли;

	Движение = Движения.ВыплаченныеДоходыРаботникамОрганизацийНУ.мТаблицаДвижений.Добавить();
	
	// свойства
	Движение.Период 				= КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
	
	// измерения 
	Движение.Физлицо 				= ВыборкаПоСтрокамДокумента.Физлицо;
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница,
																		ВыборкаПоШапкеДокумента.Организация,
																		ИсчислениеНалоговСтруктурныхЕдиниц,
																		Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
		Движение.Налогоплательщик	= Налогоплательщик;
	Иначе
		Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
	КонецЕсли;
	Движение.СтруктурнаяЕдиница 	= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
	Движение.МесяцНалоговогоПериода	= ВыборкаПоШапкеДокумента.ПериодРегистрации;
	Движение.Организация 			= ВыборкаПоШапкеДокумента.Организация;
	Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
		Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
	КонецЕсли;
	
	// ресурсы
	Движение.СуммаДохода 			= ВыборкаПоСтрокамДокумента.СуммаВыплаченногоДохода;
	
КонецПроцедуры // ДобавитьСтрокуВыплаченныеДоходыНУ()

// По выборке из результатов запроса по документу формируем движения по регистру
//
// Параметры: 
//  ВыборкаПоШапкеДокумента				- спозиционированная на определеной строке выборка 
//				  							  из результата запроса к документу 
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВРасчетПервойПоловиныМесяца(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента)
	
	Движение = Движения.РасчетПервойПоловиныМесяца.мТаблицаДвижений.Добавить();
	
	// Свойства
	Движение.Период = КонецМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
	
	// Измерения
	Движение.Физлицо 				= ВыборкаПоСтрокамДокумента.ФизЛицо;
	Движение.Организация 			= ВыборкаПоШапкеДокумента.Организация;
	Если ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ИсчисленныйИПН" Тогда
		Движение.ВидРасчета			= Справочники.НалогиСборыОтчисления.ИндивидуальныйПодоходныйНалог;
	ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ИсчисленныйОПВ" Тогда
		Движение.ВидРасчета			= Справочники.НалогиСборыОтчисления.ОбязательныеПенсионныеВзносы;
	ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ИсчисленныеВзносыОСМС" Тогда
		Движение.ВидРасчета			= Справочники.НалогиСборыОтчисления.ВзносыОбязательноеСоциальноеМедицинскоеСтрахование;
	Иначе
		Движение.ВидРасчета 			= ВыборкаПоСтрокамДокумента.ВидРасчета;
	КонецЕсли;
	
	// Ресурсы
	Движение.СуммаВзаиморасчетов	= - ВыборкаПоСтрокамДокумента.СуммаУдержания;
	
	// Реквизиты
	Движение.ДокументОснование		= ВыборкаПоСтрокамДокумента.ДокументОснование;
	Движение.ПримененныйВычет		= ВыборкаПоСтрокамДокумента.ПримененныйВычет;
	Движение.ПримененнаяЛьгота		= ВыборкаПоСтрокамДокумента.ПримененнаяЛьгота;
	Движение.РазрешенныйВычет		= ВыборкаПоСтрокамДокумента.РазрешенныйВычет;
	
КонецПроцедуры // ДобавитьСтрокуВРасчетПервойПоловиныМесяца()

// По строке выборок из результатов запроса по документу формируем движения по регистру вычетов ИПН.
//
Процедура ДобавитьСтрокуВычетыИПН(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, ИсчислениеНалоговСтруктурныхЕдиниц)

	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Налогоплательщик = ПроцедурыНалоговогоУчета.ПолучитьНалогоплательщикаСтруктурнойЕдиницы(ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница,
																		ВыборкаПоШапкеДокумента.Организация,
																		ИсчислениеНалоговСтруктурныхЕдиниц,
																		Перечисления.РазделыНалоговогоУчета.НалогиСЗаработнойПлаты);
	КонецЕсли;

	Движение = Движения.СведенияОбИсчисленииВычетовИПН.мТаблицаДвижений.Добавить();

	// Свойства
	Если ВыборкаПоШапкеДокумента.ОтражениеПоПериодуРегистрации Тогда
		Движение.Период				= ВыборкаПоШапкеДокумента.ПериодРегистрации;
	Иначе
		Движение.Период				= ВыборкаПоСтрокамДокумента.МесяцНалоговогоПериодаИлиВзаиморасчетов;
	КонецЕсли;

	// Измерения
	Движение.ФизическоеЛицо         = ВыборкаПоСтрокамДокумента.ФизЛицо;
	Если мПоддержкаРаботыСоСтруктурнымиПодразделениями Тогда
		Движение.Налогоплательщик	= Налогоплательщик;
	Иначе
		Движение.Налогоплательщик	= ВыборкаПоШапкеДокумента.Организация;
	КонецЕсли;
	Движение.СтруктурнаяЕдиница		= ВыборкаПоСтрокамДокумента.СтруктурнаяЕдиница;
	Движение.ПериодРегистрации     	= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Движение.Организация			= ВыборкаПоШапкеДокумента.Организация;
	Движение.ВидВычета				= ВыборкаПоСтрокамДокумента.ВидРасчета;
	Движение.ВидДохода				= ВыборкаПоСтрокамДокумента.ВидДохода;
	Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоПодразделениямОрганизаций Тогда
		Движение.ПодразделениеОрганизации = ВыборкаПоСтрокамДокумента.ПодразделениеОрганизации;
	КонецЕсли;

	// Ресурсы
	Движение.РазрешенныйВычет			= ВыборкаПоСтрокамДокумента.РазрешенныйВычет;
	Движение.ПримененныйВычет			= ВыборкаПоСтрокамДокумента.ПримененныйВычет;
	
	
КонецПроцедуры // ДобавитьСтрокуВычетыИПН()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(ИсчисленныйИПН);
	МассивТЧ.Добавить(ИсчисленныйОПВ);
	МассивТЧ.Добавить(ИсчисленныеВзносыОСМС);
	МассивТЧ.Добавить(Удержания);
	МассивТЧ.Добавить(ПогашениеЗаймов);
	МассивТЧ.Добавить(НалоговыеВычеты);

	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "ФизЛицо");
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ОбработкаПроведения".
//
Процедура ОбработкаПроведения(Отказ, Режим)

	// заголовок документа при проведении
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ЭтотОбъект);	
	
	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(РучнаяКорректировка,Отказ,Заголовок,ЭтотОбъект) Тогда
		Возврат
	КонецЕсли;

	// создадим таблицы движений по структуре совпадающие со структрой регистров накопления
	МассивНаборыЗаписей = Новый Массив();
	МассивНаборыЗаписей.Добавить(Движения.ВзаиморасчетыОрганизацийСПолучателямиИЛ);
	МассивНаборыЗаписей.Добавить(Движения.ВзаиморасчетыСРаботникамиОрганизаций);
	МассивНаборыЗаписей.Добавить(Движения.ВыплаченныеДоходыРаботникамОрганизацийНУ);
	МассивНаборыЗаписей.Добавить(Движения.ИПНСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ИПНРасчетыСБюджетом);
	МассивНаборыЗаписей.Добавить(Движения.ИПНИсчисленный);
	МассивНаборыЗаписей.Добавить(Движения.ОПВРасчетыСФондами);
	МассивНаборыЗаписей.Добавить(Движения.ОПВПодлежитПеречислениюВФонды);
	МассивНаборыЗаписей.Добавить(Движения.ОПВСведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ВОСМССведенияОДоходах);
	МассивНаборыЗаписей.Добавить(Движения.ВОСМСРасчетыСФондами);
	МассивНаборыЗаписей.Добавить(Движения.ВОСМСИсчисленные);
	МассивНаборыЗаписей.Добавить(Движения.ВОСМСПодлежитПеречислениюВФонды);
	МассивНаборыЗаписей.Добавить(Движения.ПогашениеЗаймовРаботникамиОрганизаций);
	МассивНаборыЗаписей.Добавить(Движения.РасчетПервойПоловиныМесяца);
	МассивНаборыЗаписей.Добавить(Движения.СведенияОбИсчисленииВычетовИПН);
	
	Для Каждого НаборЗаписей Из МассивНаборыЗаписей Цикл
		НаборЗаписей.мТаблицаДвижений = НаборЗаписей.ВыгрузитьКолонки();
	КонецЦикла;
	
	ИсчислениеНалоговСтруктурныхЕдиниц = глЗначениеПеременной("глИсчислениеНалоговСтруктурныхЕдиниц");
	
	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда
			
			ЭтоРасчетПервойПоловиныМесяца = (ВыборкаПоШапкеДокумента.ПериодНачисления = Перечисления.ПериодНачисленияЗарплаты.ПерваяПоловинаТекущегоМесяца);
			
			Если ВыборкаПоШапкеДокумента.РаспределятьНалогиПоСтруктурнымЕдиницам Тогда
				ВыборкаПоСтрокамДокумента = РаспределитьРезультатыПоСтруктурнымЕдиницам(ВыборкаПоШапкеДокумента).Выбрать();
			Иначе
				ВыборкаПоСтрокамДокумента = СформироватьЗапросПоТабличнымЧастям(ВыборкаПоШапкеДокумента, Истина, Истина, Истина,,Истина).Выбрать();
			КонецЕсли;
						
			Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл
			
				ПроверитьЗаполнениеСтроки(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок);
				
				Если Не Отказ Тогда
						
				    Если ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ИсчисленныйИПН" Тогда
				    	
				    	Если ЭтоРасчетПервойПоловиныМесяца Тогда
				    		ДобавитьСтрокуВРасчетПервойПоловиныМесяца(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);
				    	Иначе
							ДобавитьСтрокуИсчисленныйИПН(ВыборкаПоШапкеДокумента, 
															ВыборкаПоСтрокамДокумента, 
															ИсчислениеНалоговСтруктурныхЕдиниц,
															ВыборкаПоШапкеДокумента.УпрощенныйУчетИПНиОПВ);
						КонецЕсли;

				    ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ИсчисленныйОПВ" Тогда

				    	Если ЭтоРасчетПервойПоловиныМесяца Тогда
				    		ДобавитьСтрокуВРасчетПервойПоловиныМесяца(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);
				    	Иначе
							ДобавитьСтрокуИсчисленныйОПВ(ВыборкаПоШапкеДокумента, 
															ВыборкаПоСтрокамДокумента, 
															ИсчислениеНалоговСтруктурныхЕдиниц,
															ВыборкаПоШапкеДокумента.УпрощенныйУчетИПНиОПВ);
						КонецЕсли;
						
					ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ИсчисленныеВзносыОСМС" Тогда

				    	Если ЭтоРасчетПервойПоловиныМесяца Тогда
				    		ДобавитьСтрокуВРасчетПервойПоловиныМесяца(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);
				    	Иначе
							ДобавитьСтрокуИсчисленныеВзносыОСМС(ВыборкаПоШапкеДокумента, 
															ВыборкаПоСтрокамДокумента, 
															ИсчислениеНалоговСтруктурныхЕдиниц,
															ВыборкаПоШапкеДокумента.УпрощенныйУчетИПНиОПВ);
						КонецЕсли;

				    ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "Удержания" Тогда
				    
				    	Если ЭтоРасчетПервойПоловиныМесяца Тогда
				    		ДобавитьСтрокуВРасчетПервойПоловиныМесяца(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);
				    	Иначе
					    	ДобавитьСтрокуУдержаний(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Движения.УдержанияРаботниковОрганизаций);
					    
							ДобавитьСтрокуВзаиморасчетыСПолучателямиИЛ(ВыборкаПоШапкеДокумента, 
																			ВыборкаПоСтрокамДокумента, 
																			ИсчислениеНалоговСтруктурныхЕдиниц);
					    
							ДобавитьСтрокуВыплаченныеДоходыНУ(ВыборкаПоШапкеДокумента, 
																ВыборкаПоСтрокамДокумента, 
																ИсчислениеНалоговСтруктурныхЕдиниц);
						КонецЕсли;
					
					ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ПогашениеЗаймов" Тогда

				    	Если ЭтоРасчетПервойПоловиныМесяца Тогда
				    		ДобавитьСтрокуВРасчетПервойПоловиныМесяца(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);
				    	Иначе
							ДобавитьСтрокуПогашениеЗайма(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента);										
							
							ДобавитьСтрокуВыплаченныеДоходыНУ(ВыборкаПоШапкеДокумента, 
																ВыборкаПоСтрокамДокумента, 
																ИсчислениеНалоговСтруктурныхЕдиниц);
						КонецЕсли;
					
					ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "НалоговыеВычеты" Тогда
						
						Если Не ЭтоРасчетПервойПоловиныМесяца Тогда
							ДобавитьСтрокуНалоговыеВычеты(ВыборкаПоШапкеДокумента,
															ВыборкаПоСтрокамДокумента,
															ИсчислениеНалоговСтруктурныхЕдиниц);	
						КонецЕсли;									
															
						
					ИначеЕсли ВыборкаПоСтрокамДокумента.ВидСтрокиЗапроса = "ВычетыИПН" Тогда
						
						Если Не ЭтоРасчетПервойПоловиныМесяца Тогда
							ДобавитьСтрокуВычетыИПН(ВыборкаПоШапкеДокумента,
															ВыборкаПоСтрокамДокумента,
															ИсчислениеНалоговСтруктурныхЕдиниц);
						КонецЕсли;	
					КонецЕсли;
					
				    // движения по взаиморасчетами делаем для всех видов удержаний
				    Если Не ЭтоРасчетПервойПоловиныМесяца Тогда
						ДобавитьСтрокуВзаиморасчеты(ВыборкаПоШапкеДокумента, 
																	ВыборкаПоСтрокамДокумента, 
																	ИсчислениеНалоговСтруктурныхЕдиниц);
					КонецЕсли;
				    
				КонецЕсли;
			
			КонецЦикла;

			Если Не Отказ Тогда
				// свернем таблицы регистров накопления и запишем их в наборы записей
				Для Каждого НаборЗаписей Из МассивНаборыЗаписей Цикл
					ОбщегоНазначения.СвернутьТаблицуДвиженийРегистраНакопления(НаборЗаписей);
					НаборЗаписей.мТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");
					НаборЗаписей.Загрузить(НаборЗаписей.мТаблицаДвижений);
				Конеццикла;
			КонецЕсли;

		КонецЕсли; 

	КонецЕсли;

КонецПроцедуры // ОбработкаПроведения()

//////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ 

мПоддержкаРаботыСоСтруктурнымиПодразделениями = Константы.ПоддержкаРаботыСоСтруктурнымиПодразделениями.Получить();

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();