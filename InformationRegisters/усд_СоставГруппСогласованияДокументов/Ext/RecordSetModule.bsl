
Процедура ПриЗаписи(Отказ, Замещение)
	//Попытка
	//	УстановитьПривилегированныйРежим(Истина);
	//	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ВестиКалендарноеПланированиеБюджетногоПроцесса") Тогда
	//		Если ЭтотОбъект.Отбор.ГруппаСогласования.Использование Тогда
	//            НаборЗаписейИсполнителиЗадачБюджетирования = РегистрыСведений.фин_ИсполнителиЗадачБюджетногоПроцесса.СоздатьНаборЗаписей();
	//			НаборЗаписейИсполнителиЗадачБюджетирования.Отбор.Исполнитель.Установить(ЭтотОбъект.Отбор.ГруппаСогласования.Значение);
	//			НаборЗаписейИсполнителиЗадачБюджетирования.Прочитать();
	//			Если НаборЗаписейИсполнителиЗадачБюджетирования.Количество()>0 Тогда
	//				НаборЗаписейИсполнителиЗадачБюджетирования.Записать();
	//			КонецЕсли;
	//		Иначе	
	//			СтрокиФильтра = ЭтотОбъект.Выгрузить(,"ГруппаСогласования");
	//			СтрокиФильтра.Свернуть("ГруппаСогласования");
	//			МассивГрупп = СтрокиФильтра.ВыгрузитьКолонку("ГруппаСогласования");
	//			Для Каждого ГруппаСогласования Из МассивГрупп Цикл
	//	            НаборЗаписейИсполнителиЗадачБюджетирования = РегистрыСведений.фин_ИсполнителиЗадачБюджетногоПроцесса.СоздатьНаборЗаписей();
	//				НаборЗаписейИсполнителиЗадачБюджетирования.Отбор.Исполнитель.Установить(ГруппаСогласования);
	//				НаборЗаписейИсполнителиЗадачБюджетирования.Прочитать();
	//				Если НаборЗаписейИсполнителиЗадачБюджетирования.Количество()>0 Тогда
	//					НаборЗаписейИсполнителиЗадачБюджетирования.Записать();
	//				КонецЕсли;
	//			КонецЦикла;
	//		КонецЕсли;
	//	КонецЕсли;
	//Исключение
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось обновить сведения об адресации задач бюджетирования!
	//	|	"+ОписаниеОшибки());
	//КонецПопытки;
	//
	Если НЕ фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ФормироватьЗадачиПоИсполнителямСогласования") Тогда
		Возврат;
	КонецЕсли;
	
	
	МассивГрупп = Новый Массив;
	Если ЭтотОбъект.Количество()=0 Тогда
		Если ЭтотОбъект.Отбор.ГруппаСогласования.Использование Тогда
            МассивГрупп.Добавить(ЭтотОбъект.Отбор.ГруппаСогласования.Значение);
		КонецЕсли;
	Иначе
		СтрокиФильтра = ЭтотОбъект.Выгрузить(,"ГруппаСогласования");
		СтрокиФильтра.Свернуть("ГруппаСогласования");
		МассивГрупп = СтрокиФильтра.ВыгрузитьКолонку("ГруппаСогласования");
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПраваПодписиНаЭтапахМаршрутов.ВидДокументов,
		|	ПраваПодписиНаЭтапахМаршрутов.Маршрут,
		|	ПраваПодписиНаЭтапахМаршрутов.Пользователь,
		|	ПраваПодписиНаЭтапахМаршрутов.Этап
		|ИЗ
		|	РегистрСведений.усд_ПраваПодписиНаЭтапахМаршрутов КАК ПраваПодписиНаЭтапахМаршрутов
		|ГДЕ
		|	ПраваПодписиНаЭтапахМаршрутов.Пользователь В(&Пользователь)";

	Запрос.УстановитьПараметр("Пользователь", МассивГрупп);

	Изменившиеся = Запрос.Выполнить().Выгрузить();

	СтрокиФильтра = Изменившиеся.Скопировать();
	СтрокиФильтра.Свернуть("Маршрут,ВидДокументов,Этап");
	СтруктураОтбор = Новый Структура("Маршрут,ВидДокументов,Этап");
	СписокГрупп = Новый Массив;
	Выгрузка = Изменившиеся.Скопировать();
	Для Каждого СтрокаЗапись Из Выгрузка Цикл
		Если ЗначениеЗаполнено(СтрокаЗапись.Пользователь) И ТипЗнч(СтрокаЗапись.Пользователь)=Тип("СправочникСсылка.усд_ГруппыСогласованияДокументов") Тогда
			СписокГрупп.Добавить(СтрокаЗапись.Пользователь);
		КонецЕсли;
	КонецЦикла;
	Если СписокГрупп.Количество()>0 Тогда
		
		СоставГрупп = ЭтотОбъект.Выгрузить(,"ГруппаСогласования,Пользователь");
	КонецЕсли;
	Для Каждого СтрокаФильтра Из СтрокиФильтра Цикл
		ЗаполнитьЗначенияСвойств(СтруктураОтбор,СтрокаФильтра);
		НаборЗаписей = РегистрыСведений.усд_АдресацияЗадачНаЭтапахМаршрутов.СоздатьНаборЗаписей();
		Для Каждого ЭлементОтбора Из СтруктураОтбор Цикл
			НаборЗаписей.Отбор[ЭлементОтбора.Ключ].Установить(ЭлементОтбора.Значение);
		КонецЦикла;
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		СтрокиКДобавлению = Выгрузка.НайтиСтроки(СтруктураОтбор);
		ДобавленныеПользователи = Новый Массив;
		Для Каждого СтрокаДобавить Из СтрокиКДобавлению Цикл
			Если Не ЗначениеЗаполнено(СтрокаДобавить.Пользователь) Тогда
				Продолжить;
			КонецЕсли;
			Если ТипЗнч(СтрокаДобавить.Пользователь)=Тип("СправочникСсылка.Пользователи") Тогда
				Если ДобавленныеПользователи.Найти(СтрокаДобавить.Пользователь)=Неопределено Тогда
					НоваяСтрока = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураОтбор);
					НоваяСтрока.Пользователь = СтрокаДобавить.Пользователь;
					ДобавленныеПользователи.Добавить(СтрокаДобавить.Пользователь);
				КонецЕсли;
			Иначе
				СтрокиСоставГруппы = СоставГрупп.НайтиСтроки(Новый Структура("ГруппаСогласования",СтрокаДобавить.Пользователь));
				Для Каждого СтрокаСоставаГруппы Из СтрокиСоставГруппы Цикл
					Если Не ЗначениеЗаполнено(СтрокаСоставаГруппы.Пользователь) Тогда
						Продолжить;
					КонецЕсли;
					Если ДобавленныеПользователи.Найти(СтрокаСоставаГруппы.Пользователь)=Неопределено Тогда
						НоваяСтрока = НаборЗаписей.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураОтбор);
						НоваяСтрока.Пользователь = СтрокаСоставаГруппы.Пользователь;
						НоваяСтрока.ГруппаСогласования = СтрокаДобавить.Пользователь;
						ДобавленныеПользователи.Добавить(СтрокаСоставаГруппы.Пользователь);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При записи сведений о составе групп согласования ("+Строка(МассивГрупп)+") не удалось обновить сведения об адресации задач по согласованию!");
		КонецПопытки;
	КонецЦикла;
	
	
КонецПроцедуры


