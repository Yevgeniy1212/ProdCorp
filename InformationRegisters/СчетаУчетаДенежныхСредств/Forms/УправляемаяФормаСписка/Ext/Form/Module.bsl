//// Процедура - обработчик события "ОбработкаВыбора"
////
//&НаКлиенте
//Процедура СписокСчетУчетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
//	
//	СтандартнаяОбработка = ПроцедурыБухгалтерскогоУчета.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);

//КонецПроцедуры

//// Процедура - обработчик события "ОкончаниеВводаТекста"
////
//&НаКлиенте
//Процедура СписокСчетУчетаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
//	
//	ВыбранноеЗначение 	 = ПланыСчетов.Налоговый.НайтиПоКоду(Текст);
//	СтандартнаяОбработка = ПроцедурыБухгалтерскогоУчета.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);
//	
//КонецПроцедуры

//// Процедура - обработчик события "ОбработкаВыбора"
////
//&НаКлиенте
//Процедура СписокСчетУчетаНУОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
//	
//	СтандартнаяОбработка = ПроцедурыБухгалтерскогоУчета.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);
//	
//КонецПроцедуры

//// Процедура - обработчик события "ОкончаниеВводаТекста"
////
//&НаКлиенте
//Процедура СписокСчетУчетаНУОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
//	
//	ВыбранноеЗначение 	 = ПланыСчетов.Налоговый.НайтиПоКоду(Текст);
//	СтандартнаяОбработка = ПроцедурыБухгалтерскогоУчета.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);
//	
//КонецПроцедуры

////Процедура-обработчик изменения "ПриИзменении" табличного "РегистрСведенийСписок"
////
//&НаКлиенте
//Процедура СчетУчетаБУПриИзменении(Элемент)
//	ТекСтрока = Элементы.РегистрСведенийСписок.ТекущиеДанные;
//	УправлениеПроизводством.ЗаполнитьСчетНалоговогоУчетаВСтрокеТабличногоПоля(ТекСтрока,"СчетУчетаБУ", "СчетУчетаНУ", ТекущаяДата());
//КонецПроцедуры





