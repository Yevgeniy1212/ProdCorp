
&НаКлиенте
Процедура РазрезПредставлениеПриИзменении(Элемент)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.КомпоновщикНастроек.Настройки.Отбор, "Разрез", Разрез, ВидСравненияКомпоновкиДанных.Равно, , ЗначениеЗаполнено(Разрез));
КонецПроцедуры

&НаКлиенте
Процедура ИсходноеЗначение1ПриИзменении(Элемент)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.КомпоновщикНастроек.Настройки.Отбор, "ИсходноеЗначение", ИсходноеЗначение, ВидСравненияКомпоновкиДанных.Равно, , ЗначениеЗаполнено(ИсходноеЗначение));
КонецПроцедуры

&НаКлиенте
Процедура Соответствие1ПриИзменении(Элемент)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.КомпоновщикНастроек.Настройки.Отбор, "Соответствие", Соответствие, ВидСравненияКомпоновкиДанных.Равно, , ЗначениеЗаполнено(Соответствие));
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	фин_ПроцедурыМеханизмовБюджетирования.ЗаполнитьСписокРеквизитовБюджетирования(СписокВыбораРазрезов,Истина);
	СписокИсточников.Добавить("Справочники",				"Справочник");
	СписокИсточников.Добавить("Перечисления",				"Перечисление");
	СписокИсточников.Добавить("ПланыВидовХарактеристик",	"План видов характеристик");
	СписокИсточников.Добавить("ПланыСчетов",				"План счетов");
	СписокИсточников.Добавить("ПланыВидовРасчета",			"План видов расчета");
КонецПроцедуры

&НаКлиенте
Процедура ВидИсточникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка 	= Ложь;
	ДанныеВыбора 			= СписокИсточников;
КонецПроцедуры

&НаКлиенте
Процедура РазрезПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокВыбораРазрезов;
КонецПроцедуры

&НаКлиенте
Процедура ВидИсточникаПриИзменении(Элемент)
	Источник	= "";
	ЗаполнитьВидыИсточников();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидыИсточников()
	СписокВидовИсточников.Очистить();
	Если ВидИсточника <> "" Тогда
		КатегорияМетаданных = Метаданные[ВидИсточника];
		Для Каждого Объект Из КатегорияМетаданных Цикл
			СписокВидовИсточников.Добавить(Объект.Имя,Объект.Синоним);
		КонецЦикла;
		СписокВидовИсточников.СортироватьПоПредставлению();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИсточникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка 	= Ложь;
	ДанныеВыбора 			= СписокВидовИсточников;
КонецПроцедуры

&НаКлиенте
Процедура История(Команда)
	ОткрытьФорму("РегистрСведений.фин_НастройкаСоответствийДляИзмеренийБюджетирования.Форма.ФормаИстории");
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	ПараметрыФормы = Новый Структура;
	Если ЗначениеЗаполнено(ДатаДействия) Тогда
		ПараметрыФормы.Вставить("Период",ДатаДействия);
	КонецЕсли;
	Если ЗначениеЗаполнено(Разрез) Тогда
		ПараметрыФормы.Вставить("Разрез",Разрез);
	КонецЕсли;
	Если ЗначениеЗаполнено(ИсходноеЗначение) Тогда
		ПараметрыФормы.Вставить("ИсходноеЗначение",ИсходноеЗначение);
	КонецЕсли;
	Если ЗначениеЗаполнено(Соответствие) Тогда
		ПараметрыФормы.Вставить("Соответствие",Соответствие);
	КонецЕсли;
	Если ЗначениеЗаполнено(ВидИсточника) И ЗначениеЗаполнено(Источник) Тогда
		Попытка
			мВидИсточника = "Справочник";
			Если ВидИсточника = "Перечисления" Тогда
				мВидИсточника = "Перечисление";
			ИначеЕсли ВидИсточника = "ПланыВидовХарактеристик" Тогда
				мВидИсточника = "ПланВидовХарактеристик";
			ИначеЕсли ВидИсточника = "ПланыСчетов" Тогда
				мВидИсточника = "ПланСчетов";
			ИначеЕсли ВидИсточника = "ПланыВидовРасчета" Тогда
				мВидИсточника = "ПланВидовРасчета";
			КонецЕсли;
			ПараметрыФормы.Вставить("ТипЗначения",Новый ОписаниеТипов(мВидИсточника+"Ссылка."+Источник));
		Исключение
		КонецПопытки;
	КонецЕсли;
	ОткрытьФорму("РегистрСведений.фин_НастройкаСоответствийДляИзмеренийБюджетирования.ФормаЗаписи",ПараметрыФормы,Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура РазрезПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Разрез = ПредопределенноеЗначение("Перечисление.фин_ФактическиеПоказателиБюджетирования."+ВыбранноеЗначение);
	РазрезПредставление = СписокВыбораРазрезов.НайтиПоЗначению(ВыбранноеЗначение).Представление;
КонецПроцедуры
