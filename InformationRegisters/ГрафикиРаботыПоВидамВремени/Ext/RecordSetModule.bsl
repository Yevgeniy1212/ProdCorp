
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ПередЗаписью набора записей регистра сведений
Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ГрафикРаботы = Отбор.ГрафикРаботы.Значение;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ГрафикРаботы);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГрафикиРаботы.ГрафикПолногоРабочегоВремени,
	|	ГрафикиРаботы.СокращенноеРабочееВремя
	|ИЗ
	|	Справочник.ГрафикиРаботы КАК ГрафикиРаботы
	|ГДЕ
	|	ГрафикиРаботы.Ссылка = &Ссылка";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ГрафикПолногоРабочегоВремени = Выборка.ГрафикПолногоРабочегоВремени;
		ТребуетсяНормаДругогоГрафика = Выборка.СокращенноеРабочееВремя И Не ГрафикПолногоРабочегоВремени.Пустая();
	Иначе 
		ГрафикПолногоРабочегоВремени = Справочники.ГрафикиРаботы.ПустаяСсылка();
		ТребуетсяНормаДругогоГрафика = Ложь;
	КонецЕсли;
	
	СоответствиеМесяцев = Новый Соответствие;
	Для каждого ЗаписьНабора Из ЭтотОбъект Цикл
		ЗаписьНабора.Месяц = НачалоМесяца(ЗаписьНабора.Дата);
		Если Не ТребуетсяНормаДругогоГрафика Тогда
			Если ЗаписьНабора.ВидУчетаВремени = Перечисления.ВидыУчетаВремени.ПоДням Или ЗаписьНабора.ВидУчетаВремени = Перечисления.ВидыУчетаВремени.ПоЧасам Тогда
				ЗаписьНабора.ОсновноеЗначениеНорма = ЗаписьНабора.ОсновноеЗначение;
				ЗаписьНабора.ДополнительноеЗначениеНорма = ЗаписьНабора.ДополнительноеЗначение;
			КонецЕсли;
		Иначе 	
			СоответствиеМесяцев.Вставить(ЗаписьНабора.Месяц);
		КонецЕсли;
	КонецЦикла;
	
	Если ТребуетсяНормаДругогоГрафика Тогда
		
		МассивМесяцев = Новый Массив;
		Для каждого Элемент Из СоответствиеМесяцев Цикл
			МассивМесяцев.Добавить(Элемент.Ключ)
		КонецЦикла; 
		Запрос.УстановитьПараметр("МассивМесяцев", МассивМесяцев);
		Запрос.УстановитьПараметр("парамГрафикПолногоРабочегоВремени", ГрафикПолногоРабочегоВремени);
		Запрос.УстановитьПараметр("ПоДням", Перечисления.ВидыУчетаВремени.ПоДням);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГрафикиРаботыПоВидамВремени.Дата,
		|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма КАК НормаДней,
		|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма КАК НормаЧасов
		|ИЗ
		|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
		|ГДЕ
		|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы = &парамГрафикПолногоРабочегоВремени
		|	И ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = &ПоДням
		|	И НАЧАЛОПЕРИОДА(ГрафикиРаботыПоВидамВремени.Дата, МЕСЯЦ) В (&МассивМесяцев)";
		
		ДанныеНормыВремени = Запрос.Выполнить().Выгрузить();
		Для каждого ЗаписьНабора Из ЭтотОбъект Цикл
			НормаДней = 0;
			НормаЧасов = 0;	
			НайденнаяСтрока = ДанныеНормыВремени.Найти(ЗаписьНабора.Дата, "Дата");
			Если НайденнаяСтрока <> Неопределено Тогда
				НормаДней = НайденнаяСтрока.НормаДней;
				НормаЧасов = НайденнаяСтрока.НормаЧасов;
			КонецЕсли;
			Если ЗаписьНабора.ВидУчетаВремени = Перечисления.ВидыУчетаВремени.ПоДням Тогда 
				ЗаписьНабора.ОсновноеЗначениеНорма = НормаДней;
				ЗаписьНабора.ДополнительноеЗначениеНорма = НормаЧасов;
			ИначеЕсли ЗаписьНабора.ВидУчетаВремени = Перечисления.ВидыУчетаВремени.ПоЧасам Тогда	
				ЗаписьНабора.ОсновноеЗначениеНорма = НормаЧасов;      
				ЗаписьНабора.ДополнительноеЗначениеНорма = НормаДней;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры          

