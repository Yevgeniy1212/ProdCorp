
&НаСервере
Процедура ЗакрытьСессиюНаСервере(ПараметрыСессии, ПарольСохранен, Пароль = Неопределено)
	
	ПараметрыЭСФ = ЭСФСерверПовтИсп.ПолучитьПараметрыЭСФ();
	ВерсияИСЭСФ = ПараметрыЭСФ.ВерсияИСЭСФ;
	
	ДанныеПрофиляИСЭСФ = ЭСФСервер.ДанныеПрофиляИСЭСФ(ПараметрыСессии.Профиль);
	Если НЕ ПарольСохранен Тогда	
		ДанныеПрофиляИСЭСФ.ТекущийПарольАутентификации = Пароль;
	КонецЕсли;
	
	Если ПараметрыСессии.ИмяМодуля = "ESF" Тогда
		ЭСФСервер.ЗакрытьСессию(ДанныеПрофиляИСЭСФ, ПараметрыСессии.Идентификатор, ВерсияИСЭСФ, Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСессию(Команда)
	
	ДанныеСессии  = Элементы.Список.ТекущиеДанные;
	ПрофильИСЭСФ  = ДанныеСессии.ПрофильИСЭСФ;
	Идентификатор = ДанныеСессии.IDСессии;
	
	ПараметрыСессии = Новый Структура("Профиль, Идентификатор", ПрофильИСЭСФ, Идентификатор);
	ПараметрыСессии.Вставить("ИмяМодуля", ДанныеСессии.ИмяМодуля);
	
	Если ЗначениеЗаполнено(Идентификатор) Тогда
		
		ПарольСохранен = ПроверитьНаличиеПароля(ПрофильИСЭСФ);
		
		Если ПарольСохранен Тогда
			ЗакрытьСессиюНаСервере(ПараметрыСессии, ПарольСохранен);
		Иначе
				
			Пользователь = ПолучитьПользователяПоПрофилю(ПрофильИСЭСФ);
			ПользователиИСЭСФ = Новый Массив;      
			ПользователиИСЭСФ.Добавить(Пользователь);
			
			ПараметрыСессии.Вставить("Пользователь", Пользователь );
			
			ОбработчикОповщенияВыбораДанных = Новый ОписаниеОповещения("ОбработчикОповщенияЗакрытьФормуВводПароля", ЭтаФорма, ПараметрыСессии);
			
			ЭСФКлиент.ПаролиАутентификации(ОбработчикОповщенияВыбораДанных, ПользователиИСЭСФ);
		КонецЕсли;
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр(
			"ru = 'Выбранная сессия уже закрыта!'");
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТикет(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ОчиститьТикетНаСервере(ТекущиеДанные.ПрофильИСЭСФ, ТекущиеДанные.ИмяМодуля);
	
	ОповеститьОбИзменении(Элементы.Список.ТекущаяСтрока);
	
	Если ИспользоватьОткрытиеСессииСПодписью И Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		Элементы.ОчиститьТикет.Доступность = Элементы.Список.ТекущиеДанные.ТикетСессииСохранен;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТикетНаСервере(Знач ПрофильИСЭСФ, Знач ИмяМодуля)
	
	ЭСФСервер.СохранитьТикетСессии(ПрофильИСЭСФ, ИмяМодуля, Неопределено);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПользователяПоПрофилю(Профиль)
	
	Возврат Профиль.Владелец;
	
КонецФункции

&НаКлиенте
Процедура ОбработчикОповщенияЗакрытьФормуВводПароля(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда	
		
		ПарольАутентификации = Результат[ДополнительныеПараметры.Пользователь];
		
		ЗакрытьСессиюНаСервере(ДополнительныеПараметры, Ложь, ПарольАутентификации);
				
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПроверитьНаличиеПароля(ПрофильИСЭСФ)
	
	Если ЗначениеЗаполнено(ПрофильИСЭСФ.Владелец.ПарольАутентификации) Тогда
		ПарольСохранен = Истина;
	Иначе
		ПарольСохранен = Ложь;
	КонецЕсли;
		
	Возврат ПарольСохранен;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ЗакрытьСессию.Доступность = Ложь;
	Элементы.ОчиститьТикет.Доступность = Ложь;
	
	ИспользоватьОткрытиеСессииСПодписью = ЭСФВызовСервера.ИспользоватьОткрытиеСессииСПодписью();
	Элементы.ОчиститьТикет.Видимость = ИспользоватьОткрытиеСессииСПодписью;
	Элементы.ТикетСессииСохранен.Видимость = ИспользоватьОткрытиеСессииСПодписью
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Элементы.ЗакрытьСессию.Доступность = Элементы.Список.ТекущиеДанные <> Неопределено И (Элементы.Список.ТекущиеДанные.ИмяМодуля = "ESF" ИЛИ Элементы.Список.ТекущиеДанные.ИмяМодуля = "VS");
	
	Если ИспользоватьОткрытиеСессииСПодписью Тогда
		Элементы.ОчиститьТикет.Доступность = Элементы.Список.ТекущиеДанные <> Неопределено И Элементы.Список.ТекущиеДанные.ТикетСессииСохранен;
	КонецЕсли;
	
КонецПроцедуры
