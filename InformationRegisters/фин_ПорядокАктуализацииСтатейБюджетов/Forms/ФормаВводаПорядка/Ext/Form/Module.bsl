
&НаКлиенте
Процедура АктуализацияДефицитаПриИзменении(Элемент)
	Если НЕ АктуализацияДефицита=ПредопределенноеЗначение("Перечисление.фин_ПорядокАктуализацииСтатейБюджетов.ПеренестиНаДругуюСтатью") Тогда
		СтатьяДляПереносаДефицита=ПредопределенноеЗначение("Справочник.фин_СтатьиБюджета.ПустаяСсылка");
	КонецЕсли;
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура АктуализацияПрофицитаПриИзменении(Элемент)
	Если НЕ АктуализацияПрофицита=ПредопределенноеЗначение("Перечисление.фин_ПорядокАктуализацииСтатейБюджетов.ПеренестиНаДругуюСтатью") Тогда
		СтатьяДляПереносаПрофицита=ПредопределенноеЗначение("Справочник.фин_СтатьиБюджета.ПустаяСсылка");
	КонецЕсли;
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Адрес") Тогда
		ТаблицаОтбора = ПолучитьИзВременногоХранилища(Параметры.Адрес);
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	фин_СтатьиБюджета.Ссылка КАК Статья
			|ПОМЕСТИТЬ ВТ_Статьи
			|ИЗ
			|	Справочник.фин_СтатьиБюджета КАК фин_СтатьиБюджета
			|ГДЕ
			|	фин_СтатьиБюджета.Владелец = &Бюджет
			|	И фин_СтатьиБюджета.ЭтоГруппа = ЛОЖЬ
			|	И фин_СтатьиБюджета.ПометкаУдаления = ЛОЖЬ
			|	И ВЫБОР
			|			КОГДА &ИерархияСтатей
			|				ТОГДА фин_СтатьиБюджета.Ссылка В ИЕРАРХИИ (&Статьи)
			|			ИНАЧЕ фин_СтатьиБюджета.Ссылка В (&Статьи)
			|		КОНЕЦ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СценарииПланирования.Ссылка КАК Сценарий
			|ПОМЕСТИТЬ ВТ_Сценарии
			|ИЗ
			|	Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СценарииПланирования КАК СценарииПланирования
			|ГДЕ
			|	ВЫБОР
			|			КОГДА &ИерархияСценарий
			|				ТОГДА СценарииПланирования.Ссылка В ИЕРАРХИИ (&Сценарии)
			|			ИНАЧЕ СценарииПланирования.Ссылка В (&Сценарии)
			|		КОНЕЦ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Статьи.Статья,
			|	ВТ_Сценарии.Сценарий
			|ПОМЕСТИТЬ ВТ_Кортеж
			|ИЗ
			|	ВТ_Статьи КАК ВТ_Статьи
			|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Сценарии КАК ВТ_Сценарии
			|		ПО (ИСТИНА)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	фин_ПорядокАктуализацииСтатейБюджетов.АктуализацияДефицита,
			|	фин_ПорядокАктуализацииСтатейБюджетов.АктуализацияПрофицита,
			|	фин_ПорядокАктуализацииСтатейБюджетов.СтатьяДляПереносаДефицита,
			|	фин_ПорядокАктуализацииСтатейБюджетов.СтатьяДляПереносаПрофицита,
			|	фин_ПорядокАктуализацииСтатейБюджетов.АктуализацияДефицитаТолькоПриНаличииИсполнения,
			|	фин_ПорядокАктуализацииСтатейБюджетов.АктуализацияПрофицитаТолькоПриНаличииИсполнения
			|ИЗ
			|	ВТ_Кортеж КАК ВТ_Кортеж
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.фин_ПорядокАктуализацииСтатейБюджетов КАК фин_ПорядокАктуализацииСтатейБюджетов
			|		ПО ВТ_Кортеж.Статья = фин_ПорядокАктуализацииСтатейБюджетов.СтатьяБюджета
			|			И ВТ_Кортеж.Сценарий = фин_ПорядокАктуализацииСтатейБюджетов.ФормируемыйСценарий
			|ГДЕ
			|	фин_ПорядокАктуализацииСтатейБюджетов.Бюджет = &Бюджет";
		ИерархияСценарий = Ложь;
		ИерархияСтатей = Ложь;
		СценарииОтбора = Новый СписокЗначений;
		СтатьиОтбора = Новый СписокЗначений;
		
		СтрокиСтатья = ТаблицаОтбора.НайтиСтроки(Новый Структура("Поле","Статья"));
		Если СтрокиСтатья.Количество()>0 Тогда
			СтрокаТаблицы = СтрокиСтатья[0];
			ИерархияСтатей = СтрокаТаблицы.ВидСравнения = "ВИерархии";
			СтатьиОтбора.Добавить(СтрокаТаблицы.Значение);
		КонецЕсли;
		
		СтрокиПодразделение = ТаблицаОтбора.НайтиСтроки(Новый Структура("Поле","Сценарий"));
		Если СтрокиПодразделение.Количество()>0 Тогда
			СтрокаТаблицы = СтрокиПодразделение[0];
			ИерархияСценарий = СтрокаТаблицы.ВидСравнения = "ВИерархии";
			СценарииОтбора.Добавить(СтрокаТаблицы.Значение);
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Значение) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определен сценарий!");
				Возврат;
			КонецЕсли;
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определен сценарий!");
			Возврат;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Бюджет", Параметры.Бюджет);
		Бюджет = Параметры.Бюджет;
		Запрос.УстановитьПараметр("ИерархияСценарий", ИерархияСценарий);
		Запрос.УстановитьПараметр("ИерархияСтатей", ИерархияСтатей);
		Запрос.УстановитьПараметр("Сценарии", СценарииОтбора);
		Запрос.УстановитьПараметр("Статьи", СтатьиОтбора);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект,ВыборкаДетальныеЗаписи);
		КонецЕсли;
	КонецЕсли;
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	Форма.Элементы.СтатьяДляПереносаДефицита.Видимость = Форма.АктуализацияДефицита=ПредопределенноеЗначение("Перечисление.фин_ПорядокАктуализацииСтатейБюджетов.ПеренестиНаДругуюСтатью");
	Форма.Элементы.СтатьяДляПереносаПрофицита.Видимость = Форма.АктуализацияПрофицита=ПредопределенноеЗначение("Перечисление.фин_ПорядокАктуализацииСтатейБюджетов.ПеренестиНаДругуюСтатью");
КонецПроцедуры


&НаКлиенте
Процедура ОК(Команда)
	Закрыть(Новый Структура("АктуализацияДефицита,АктуализацияПрофицита,СтатьяДляПереносаДефицита,СтатьяДляПереносаПрофицита,АктуализацияДефицитаТолькоПриНаличииИсполнения,АктуализацияПрофицитаТолькоПриНаличииИсполнения",АктуализацияДефицита,АктуализацияПрофицита,СтатьяДляПереносаДефицита,СтатьяДляПереносаПрофицита,АктуализацияДефицитаТолькоПриНаличииИсполнения,АктуализацияПрофицитаТолькоПриНаличииИсполнения));
КонецПроцедуры
