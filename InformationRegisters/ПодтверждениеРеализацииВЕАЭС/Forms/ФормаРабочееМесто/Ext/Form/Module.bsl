
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	УстановитьЗначенияПоУмолчанию();
	ОбновитьДанныеФормы();
	
	Если НЕ ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ПодтверждениеРеализацииВЕАЭС) Тогда
		Элементы.ГруппаОформитьРезультатПодтверждения.Видимость = Ложь;
		Элементы.СписокУдалитьЗапись.Видимость = Ложь;
	КонецЕсли;
	
	Если Метаданные.Документы.СчетФактураВыданный.Реквизиты.Найти("СтруктурноеПодразделение") <> Неопределено Тогда
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, """"" КАК СтруктурноеПодразделение,", "СчетФактураВыданный.СтруктурноеПодразделение,");
	Иначе
		Элементы.СписокСтруктурноеПодразделение.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ПодтверждениеРеализацииВЕАЭС" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	
	НачалоПериода = НачалоДня(НачалоПериода);
	Если НачалоДня(НачалоПериода) > НачалоДня(КонецПериода) Тогда
		КонецПериода = КонецКвартала(КонецПериода);
	КонецЕсли;
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	
	КонецПериода = КонецДня(КонецПериода);
	Если НачалоДня(НачалоПериода) > НачалоДня(КонецПериода) Тогда
		НачалоПериода = НачалоКвартала(НачалоПериода);
	КонецЕсли;
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеОтборПриИзменении(Элемент)
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентОтборПриИзменении(Элемент)
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияОтборПриИзменении(Элемент)

	ОбновитьДанныеФормы();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ Список

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле = Элементы.СписокДокументРеализации Тогда
		ОткрытьТекущийДокументРеализации();
	Иначе
		ОткрытьТекущуюФормуЗаписи();
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение <> Неопределено Тогда 
		ЗаполнитьИзФормыРучногоВвода(ВыбранноеЗначение)
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ПараметрыВыбора = Новый Структура("НачалоПериода,КонецПериода", НачалоПериода, КонецПериода);
	РезультатВыбора = ОткрытьФормуМодально("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбора, Элементы.ВыбратьПериод);
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ЭтаФорма, РезультатВыбора, "НачалоПериода,КонецПериода");
	НачалоПериода = НачалоДня(НачалоПериода);
	КонецПериода = КонецДня(КонецПериода);
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвержденаСтавкаНДС(Команда)
	
	ТекущееСостояние = ПредопределенноеЗначение("Перечисление.СостоянияРеализацийВЕАЭС.ПодтвержденаРеализация");
	ПодтверждениеСтавкиНДС(ТекущееСостояние);
	
КонецПроцедуры

&НаКлиенте
Процедура НеПодтвержденаСтавкаНДС(Команда)
	
	ТекущееСостояние = ПредопределенноеЗначение("Перечисление.СостоянияРеализацийВЕАЭС.НеПодтвержденаРеализация");
	ПодтверждениеСтавкиНДС(ТекущееСостояние);
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидаетсяПодтверждение(Команда)
	
	ТекущееСостояние = ПредопределенноеЗначение("Перечисление.СостоянияРеализацийВЕАЭС.ОжидаетсяПодтверждение");
	ПодтверждениеСтавкиНДС(ТекущееСостояние);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуЗаписи(Команда)
	
	ОткрытьТекущуюФормуЗаписи();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументРеализации(Команда)
	
	ОткрытьТекущийДокументРеализации();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗапись(Команда)
	
	ТекущаяСтрока = Элементы.Список.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ТекущаяСтрока.ДоступноУдаление Тогда
		Предупреждение(НСтр("ru = 'Удаление выбранной строки недоступно'"));
		Возврат;
	КонецЕсли;
	
	УдалитьЗаписьНаСервере(ТекущаяСтрока);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// При изменении реквизитов

&НаСервере
Процедура ОбновитьДанныеФормы()
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, "НачалоПериода", НачалоДня(НачалоПериода));
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, "КонецПериода", ?(ЗначениеЗаполнено(КонецПериода), КонецДня(КонецПериода), КонецДня(Дата("20991231"))));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,"Состояние",
		Состояние, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Состояние));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Организация",
		Организация, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Организация));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Контрагент",
		Контрагент, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Контрагент));
		
	Элементы.СписокОрганизация.Видимость = НЕ ЗначениеЗаполнено(Организация);
	
КонецПроцедуры

// При регистрации подтверждения

&НаКлиенте
Процедура ПодтверждениеСтавкиНДС(ТекущееСостояние)

	СписокДокументов = Элементы.Список.ВыделенныеСтроки;
	
	Если СписокДокументов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СписокДокументов.Количество() = 1
		И ТекущееСостояние <> ПредопределенноеЗначение("Перечисление.СостоянияРеализацийВЕАЭС.ОжидаетсяПодтверждение") Тогда
		ОткрытьТекущуюФормуЗаписи(ТекущееСостояние);
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из СписокДокументов Цикл
		
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(Строка);
		
		ПараметрыПодтверждения = ПараметрыПодтвержденияСтавкиНДС();
		ПараметрыПодтверждения.ТекущееСостояние = ТекущееСостояние;
		ЗаполнитьЗначенияСвойств(ПараметрыПодтверждения, ДанныеСтроки);
		
		Если ТекущееСостояние = ПредопределенноеЗначение("Перечисление.СостоянияРеализацийВЕАЭС.ОжидаетсяПодтверждение") Тогда
			УдалитьЗаписьНаСервере(ДанныеСтроки);
		Иначе
			ПодтверждениеСтавкиНДССервер(ПараметрыПодтверждения);
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ПодтверждениеСтавкиНДССервер(ПараметрыПодтверждения)
	
	УстановитьПривилегированныйрежим(Истина);
	
	Регистратор           = ПараметрыПодтверждения.ДокументРеализации;
	ТекущееСостояние      = ПараметрыПодтверждения.ТекущееСостояние;
	ДатаПодтверждения     = ПараметрыПодтверждения.ДатаПодтверждения;
	НомерПодтверждения    = ПараметрыПодтверждения.НомерПодтверждения;
	Комментарий           = ПараметрыПодтверждения.Комментарий;
	
	НаборЗаписей = РегистрыСведений.ПодтверждениеРеализацииВЕАЭС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументРеализации.Значение = Регистратор;
	НаборЗаписей.Отбор.ДокументРеализации.Использование = Истина;
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), ПараметрыПодтверждения);
	КонецЕсли;
	
	ДатаПоУмолчанию = ?(ЗначениеЗаполнено(КонецПериода), КонецПериода, ТекущаяДата());
	Если ТекущееСостояние = Перечисления.СостоянияРеализацийВЕАЭС.ПодтвержденаРеализация Тогда
		ДатаПодтверждения = ?(ЗначениеЗаполнено(ДатаПодтверждения), ДатаПодтверждения, КонецДня(ДатаПоУмолчанию));
	ИначеЕсли ТекущееСостояние = Перечисления.СостоянияРеализацийВЕАЭС.НеПодтвержденаРеализация Тогда
		ДатаПодтверждения = ?(ЗначениеЗаполнено(ДатаПодтверждения), ДатаПодтверждения, КонецДня(ДатаПоУмолчанию));
	Иначе
		ДатаПодтверждения  = '00010101000000';
		НомерПодтверждения = "";
	КонецЕсли;
	
	Для Каждого СтрокаНабора Из НаборЗаписей Цикл
		
		Если СтрокаНабора.Состояние <> ТекущееСостояние Тогда
			СтрокаНабора.Состояние = ТекущееСостояние;
		КонецЕсли;
		
		Если СтрокаНабора.ДатаПодтверждения <> ДатаПодтверждения Тогда
			СтрокаНабора.ДатаПодтверждения = ДатаПодтверждения;
		КонецЕсли;
		
		Если СтрокаНабора.НомерПодтверждения <> НомерПодтверждения Тогда
			СтрокаНабора.НомерПодтверждения = НомерПодтверждения;
		КонецЕсли;
		
		Если СтрокаНабора.Комментарий <> Комментарий Тогда
			СтрокаНабора.Комментарий = Комментарий;
		КонецЕсли;
		
	КонецЦикла;
	
	НачатьТранзакцию();
	
	Попытка
		НаборЗаписей.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

// Прочее

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокСостояние.Имя);
	
	ОтборГруппаИ = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ОтборГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента = ОтборГруппаИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Состояние");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.СостоянияРеализацийВЕАЭС.ОжидаетсяПодтверждение;
	
	ОтборЭлемента = ОтборГруппаИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ДатаРеализации");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = Дата(2015, 01, 01);
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не требуется>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.СветлоСерый);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокДокументРеализации.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ЕстьПредупреждения");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Красный);
	
	//
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияПоУмолчанию()
	
	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ТекущийПользователь"), "ОсновнаяОрганизация");
	НачалоПериода = НачалоКвартала(ТекущаяДатаСеанса());
	КонецПериода = КонецКвартала(ТекущаяДатаСеанса());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзФормыРучногоВвода(ВыбранноеЗначение)
	
	ТекущаяСтрока = Элементы.Список.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если НЕ ВыбранноеЗначение.Свойство("УдалениеЗаписи") Тогда
		ПараметрыПодтверждения = ПараметрыПодтвержденияСтавкиНДС();
		ПараметрыПодтверждения.ТекущееСостояние   = ВыбранноеЗначение.Состояние;
		ПараметрыПодтверждения.ДокументРеализации = ТекущаяСтрока.ДокументРеализации;
		ПараметрыПодтверждения.ДатаПодтверждения  = ВыбранноеЗначение.ДатаПодтверждения;
		ПараметрыПодтверждения.НомерПодтверждения = ВыбранноеЗначение.НомерПодтверждения;
		ПараметрыПодтверждения.Комментарий        = ВыбранноеЗначение.Комментарий;
		
		ПодтверждениеСтавкиНДССервер(ПараметрыПодтверждения);
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТекущуюФормуЗаписи(ТекущееСостояние = Неопределено)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ПараметрыПодбора = Новый Структура();
	ПараметрыПодбора.Вставить("Документ",			ТекущиеДанные.ДокументРеализации);
	ПараметрыПодбора.Вставить("Состояние",			?(ТекущееСостояние = Неопределено, ТекущиеДанные.Состояние, ТекущееСостояние));
	ПараметрыПодбора.Вставить("ДатаПодтверждения",	ТекущиеДанные.ДатаПодтверждения);
	ПараметрыПодбора.Вставить("НомерПодтверждения",	ТекущиеДанные.НомерПодтверждения);
	ПараметрыПодбора.Вставить("ТекущийПериод",		?(ЗначениеЗаполнено(КонецПериода), КонецДня(КонецПериода), КонецДня(ТекущаяДата())));
	ПараметрыПодбора.Вставить("Комментарий",		ТекущиеДанные.Комментарий);
	Если ТекущееСостояние <> Неопределено Тогда
		ПараметрыПодбора.Вставить("Модифицированность", ТекущиеДанные.Состояние <> ТекущееСостояние);
	КонецЕсли;
	
	ОткрытьФормуМодально("РегистрСведений.ПодтверждениеРеализацииВЕАЭС.Форма.ФормаРучногоВвода", ПараметрыПодбора, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТекущийДокументРеализации()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ОткрытьЗначение(ТекущиеДанные.ДокументРеализации);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыПодтвержденияСтавкиНДС()
	
	ПараметрыПодтверждения = Новый Структура;
	ПараметрыПодтверждения.Вставить("ТекущееСостояние");
	ПараметрыПодтверждения.Вставить("ДокументРеализации");
	ПараметрыПодтверждения.Вставить("ДатаПодтверждения");
	ПараметрыПодтверждения.Вставить("НомерПодтверждения");
	ПараметрыПодтверждения.Вставить("Комментарий");
	
	Возврат ПараметрыПодтверждения;
	
КонецФункции

&НаСервере
Процедура УдалитьЗаписьНаСервере(ДанныеСтроки)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.ПодтверждениеРеализацииВЕАЭС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументРеализации.Значение = ДанныеСтроки.ДокументРеализации;
	НаборЗаписей.Отбор.ДокументРеализации.Использование = Истина;
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() > 0 Тогда
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры
