
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НадписьНастройкиКонтроля = "Настройки контроля";
	НадписьПредметКонтроля = "Предмет контроля";
	НадписьРазрезыКонтроля = "Разрезы контроля";
	УстановитьВидимость();
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	Элементы.РазрезыКонтроля.Видимость = Запись.ПрименятьКонтроль И Запись.ИспользованиеКонтролируемыхЗначений=Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриИсполнении;
	Элементы.ВидОтклоненияКонтролируемыхЗначений.Видимость = Запись.ПрименятьКонтроль И Запись.ИспользованиеКонтролируемыхЗначений=Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриИсполнении;
	Элементы.Отклонение.Видимость = Запись.ПрименятьКонтроль;
	Элементы.Отклонение.Заголовок = ?(Запись.ИспользованиеКонтролируемыхЗначений=Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриИсполнении,"Отклонение","Значение ограничения");
	Элементы.ВидКонтроля.Видимость = Запись.ПрименятьКонтроль;
	СписокРазрезов = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ВсеРазрезы();
	Для Каждого Разрез Из СписокРазрезов Цикл
		Элементы[Разрез].Видимость = Запись.ФинансовыйПоказатель.РазрезыУчета.НайтиСтроки(Новый Структура("Измерение",Перечисления.фин_ФактическиеПоказателиБюджетирования[Разрез])).Количество()<>0;
		Если Элементы[Разрез].Видимость Тогда
			Элементы[Разрез].Заголовок = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(Перечисления.фин_ФактическиеПоказателиБюджетирования[Разрез]);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ФинансовыйПоказательПриИзменении(Элемент)
	ПриИзмененииФинансовогоПоказателя();
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииФинансовогоПоказателя()
	СписокРазрезов = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ВсеРазрезы();
	Для Каждого Разрез Из СписокРазрезов Цикл
		Если Запись.ФинансовыйПоказатель.РазрезыУчета.НайтиСтроки(Новый Структура("Измерение",Перечисления.фин_ФактическиеПоказателиБюджетирования[Разрез])).Количество()=0 Тогда
			Запись[Разрез] = Ложь;
		КонецЕсли;
	КонецЦикла;
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеКонтролируемыхЗначенийПриИзменении(Элемент)
	Если Запись.ИспользованиеКонтролируемыхЗначений=ПредопределенноеЗначение("Перечисление.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриПланировании") Тогда
		Запись.ВидОтклоненияКонтролируемыхЗначений = ПредопределенноеЗначение("Перечисление.фин_ВидыОтклоненийКонтролируемыхЗначенийБюджетов.ПустаяСсылка");
	ИначеЕсли Запись.ВидОтклоненияКонтролируемыхЗначений.Пустая() Тогда
		Запись.ВидОтклоненияКонтролируемыхЗначений = ПредопределенноеЗначение("Перечисление.фин_ВидыОтклоненийКонтролируемыхЗначенийБюджетов.Относительное");
	КонецЕсли;
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПрименятьКонтрольПриИзменении(Элемент)
	ПриИзмененииПризнакаКонтроля();
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииПризнакаКонтроля()
	Если НЕ Запись.ПрименятьКонтроль Тогда
		Запись.Отклонение=0;
		Запись.ВидОтклоненияКонтролируемыхЗначений=Перечисления.фин_ВидыОтклоненийКонтролируемыхЗначенийБюджетов.ПустаяСсылка();
		СписокРазрезов = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ВсеРазрезы();
		Для Каждого Разрез Из СписокРазрезов Цикл
			Запись[Разрез]=Ложь;
		КонецЦикла;
	КонецЕсли;
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Запись.ИспользованиеКонтролируемыхЗначений=ПредопределенноеЗначение("Перечисление.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриИсполнении") И Запись.ВидОтклоненияКонтролируемыхЗначений = ПредопределенноеЗначение("Перечисление.фин_ВидыОтклоненийКонтролируемыхЗначенийБюджетов.ПустаяСсылка") Тогда
		Отказ = Истина;
		ПоказатьПредупреждение(,"Не указан вид отклонения!");
    КонецЕсли;
КонецПроцедуры
