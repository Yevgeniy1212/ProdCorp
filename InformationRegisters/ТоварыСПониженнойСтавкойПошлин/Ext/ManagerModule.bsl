#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция ЗаполнитьСписокПереченьИзъятий()  Экспорт	
	
	СписокТНВЭДПереченьИзъятий = Новый СписокЗначений;
	ПереченьИзъятий =  ПолучитьАктуальныйПереченьИзъятий();
	СписокТНВЭДПереченьИзъятий.ЗагрузитьЗначения(ПереченьИзъятий);
	
	Возврат СписокТНВЭДПереченьИзъятий;
	
КонецФункции

Функция ПолучитьМакетПереченьИзъятий() Экспорт
	
	Макет = Неопределено;
	Попытка
		Макет = ЭСФСерверПовтИсп.ОбработкаОбменЭСФ().ПолучитьМакет("ПереченьИзъятий");
	Исключение
	КонецПопытки;
	
	Возврат Макет;	
			
КонецФункции

Функция ПолучитьАктуальныйПереченьИзъятий()
	
	Результат = Новый Массив;
	Макет = Неопределено;
	Попытка
		Макет = ЭСФСерверПовтИсп.ОбработкаОбменЭСФ().ПолучитьМакет("ПереченьИзъятий");
	Исключение
	КонецПопытки;
	
	Если Макет = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	Возврат ОбщегоНазначения.ЗначениеИзСтрокиXML(Макет.ПолучитьТекст()).ВыгрузитьКолонку("КодТНВЭД");

КонецФункции

Процедура ЗаполнитьТоварыИзПеречняИзъятия(Дата,Очищать = Ложь)  Экспорт
	
	ПереченьИзъятий =  ПолучитьАктуальныйПереченьИзъятий();
	
	СписокТНВЭДПереченьИзъятий = Новый СписокЗначений();
	
	СписокТНВЭДПереченьИзъятий.ЗагрузитьЗначения(ПереченьИзъятий);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СписокКодов",СписокТНВЭДПереченьИзъятий);
	Запрос.УстановитьПараметр("ОчищатьДанные",Очищать);
	Запрос.УстановитьПараметр("Дата",Дата);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварыСПониженнойСтавкойПошлин.Товар,
	               |	ТоварыСПониженнойСтавкойПошлин.ВходитВПеречень
	               |ПОМЕСТИТЬ ВТ_ТоварыВРегистре
	               |ИЗ
	               |	РегистрСведений.ТоварыСПониженнойСтавкойПошлин.СрезПоследних(&Дата, ) КАК ТоварыСПониженнойСтавкойПошлин
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Номенклатура.Ссылка КАК Товар
	               |ПОМЕСТИТЬ ВТ_ТоварыВПеречне
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	Номенклатура.КодТНВЭД В(&СписокКодов)
	               |;" 
	               + ?(НЕ Очищать, "////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТоварыВПеречне.Товар,
	               |	ИСТИНА КАК ВходитВПеречень
	               |ИЗ
	               |	ВТ_ТоварыВПеречне КАК ВТ_ТоварыВПеречне
	               |ГДЕ
	               |	НЕ ВТ_ТоварыВПеречне.Товар В
	               |				(ВЫБРАТЬ
	               |					Т.Товар
	               |				ИЗ
	               |					ВТ_ТоварыВРегистре КАК Т)",
	               "////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТоварыВПеречне.Товар,
	               |	ИСТИНА КАК ВходитВПеречень
	               |ИЗ
	               |	ВТ_ТоварыВПеречне КАК ВТ_ТоварыВПеречне
	               |ГДЕ
	               |	НЕ ВТ_ТоварыВПеречне.Товар В
	               |				(ВЫБРАТЬ
	               |					Т.Товар
	               |				ИЗ
	               |					ВТ_ТоварыВРегистре КАК Т
	               |				ГДЕ
	               |					Т.ВходитВПеречень = ИСТИНА)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_ТоварыВРегистре.Товар,
	               |	ЛОЖЬ
	               |ИЗ
	               |	ВТ_ТоварыВРегистре КАК ВТ_ТоварыВРегистре
	               |ГДЕ
	               |	ВТ_ТоварыВРегистре.ВходитВПеречень = ИСТИНА
	               |	И НЕ ВТ_ТоварыВРегистре.Товар В
	               |				(ВЫБРАТЬ
	               |					Т.Товар
	               |				ИЗ
	               |					ВТ_ТоварыВПЕРЕЧНЕ КАК Т)");
	
	ТаблицаТоваров = Запрос.Выполнить().Выгрузить();
	НаборЗаписей = РегистрыСведений.ТоварыСПониженнойСтавкойПошлин.СоздатьНаборЗаписей();
	
	Для Каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		НаборЗаписей.Отбор.Товар.Установить(СтрокаТовара.Товар);
		НаборЗаписей.Отбор.Период.Установить(Дата);
		НаборЗаписей.Прочитать();
		СтрокаДвижения = НаборЗаписей.Добавить();
		СтрокаДвижения.Товар             = СтрокаТовара.Товар;
		СтрокаДвижения.ВходитВПеречень   = СтрокаТовара.ВходитВПеречень;
		СтрокаДвижения.Период            = Дата;
		
		НачатьТранзакцию();
		
		Попытка
			НаборЗаписей.Записать();
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		НаборЗаписей.Очистить();
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
