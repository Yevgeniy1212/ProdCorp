&НаКлиенте
Перем СписокСчетовПокупателя, СписокСчетовПоставщика, СчетВозвратаОтПокупателя,СписокСчетовВозвратаПоставщику, СписокСчетовВозвратаОтПокупателя;

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если (ЗначениеЗаполнено(Запись.СчетУчетаАвансовВыданных))
		  И (ПолучитьВид(Запись.СчетУчетаАвансовВыданных) = ВидСчета.Пассивный)
		  И (Запись.СчетУчетаАвансовВыданных<>Запись.СчетУчетаРасчетовСПоставщиком) Тогда
	
		Сообщить("В качестве счета авансов выданных должен выбираться активный счет!");
		Отказ = Истина;
	
	КонецЕсли;
	
	Если (ЗначениеЗаполнено(Запись.СчетУчетаАвансовПолученных))
		  И (ПолучитьВид(Запись.СчетУчетаАвансовПолученных) = ВидСчета.Активный)
		  И (Запись.СчетУчетаАвансовПолученных<>Запись.СчетУчетаРасчетовСПокупателем) Тогда
	
		Сообщить("В качестве счета авансов полученных должен выбираться пассивный счет!");
		Отказ = Истина;
	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьВид(Счет)
	Возврат Счет.Вид;
КонецФункции
	
&НаКлиенте
Процедура СчетУчетаРасчетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Элемент.Имя = "СчетУчетаРасчетовСПоставщиком" ИЛИ Элемент.Имя = "СчетУчетаАвансовПолученных" ТОгда
		УстановитьОтборОткрытьВыбор(Элемент,ВидСравнения.ВСписке,СписокСчетовПоставщика);
	ИначеЕсли Элемент.Имя = "СчетУчетаРасчетовСПокупателем" ИЛИ Элемент.Имя = "СчетУчетаАвансовВыданных" Тогда
		УстановитьОтборОткрытьВыбор(Элемент,ВидСравнения.ВСписке,СписокСчетовПокупателя);
	ИначеЕсли Элемент.Имя = "СчетУчетаРасчетовСПоставщикомПоВозвратам" Тогда
		УстановитьОтборОткрытьВыбор(Элемент,ВидСравнения.ВСписке,СписокСчетовВозвратаПоставщику);
	Иначе
		УстановитьОтборОткрытьВыбор(Элемент,ВидСравнения.ВСписке,СписокСчетовВозвратаОтПокупателя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборОткрытьВыбор(ВладелецФормы,ВидСравненияДляОтбора,ЗначениеОтбора)
	//ПараметрыФормы = Новый Структура("Отбор", Новый структура("Ссылка", ЗначениеОтбора);
	//ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
	//ОткрытьФорму("ПланСчетов.Типовой.ФормаВыбора",ПараметрыФормы,ВладелецФормы);
	ОткрытьФорму("ПланСчетов.Типовой.ФормаВыбора",,ВладелецФормы);
КонецПроцедуры

&НаСервере
Функция ПроверитьВыбран()
	//Возврат Запись.Выбран()
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
// если запись не считана, то установим значение организации по умолчанию из настроек пользователя
	//Если НЕ ПроверитьВыбран() Тогда 
		Если НЕ ЗначениеЗаполнено(Запись.Организация) Тогда 
			Запись.Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация");
		КонецЕсли;
	//КонецЕсли;
	 
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Запись.Договор) Тогда
		Если Запись.Договор.Владелец<>Запись.Контрагент Тогда
			Запись.Договор = ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоговорНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Запись.Контрагент) ТОгда
		СтандартнаяОбработка = Ложь;
		Предупреждение("Не выбран контрагент!");
		возврат;
	КонецЕсли;
	Если ЗначениеЗаполнено(Запись.Организация) Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура;
		СтруктураОтбора = Новый структура("Организация,Владелец", Запись.Организация,Запись.Контрагент);
		ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
		ФормаВыбораДоговора = ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаВыбора",ПараметрыФормы,Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Запись.Договор) Тогда
		Если Запись.Договор.Организация<>Запись.Контрагент Тогда
			Запись.Договор = ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Контрагент") Тогда
		Запись.Контрагент = Параметры.Контрагент;
	КонецЕсли;
	
	СписокСчетовОбщий = Новый СписокЗначений;
	СписокСчетовПокупателя = Новый СписокЗначений;
	СписокСчетовПоставщика = Новый СписокЗначений;
	СписокСчетовОбщий.ЗагрузитьЗначения(УправлениеВзаиморасчетами.ПолучитьСписокСчетовВзаиморасчетов().ВыгрузитьКолонку("Ссылка"));
	СписокСчетовВозвратаПоставщику = Новый СписокЗначений;
	СписокСчетовВозвратаПоставщику.Добавить(ПредопределенноеЗначение("ПланСчетов.Типовой.КраткосрочнаяЗадолженностьПоВозвратамТМЗПоставщикам"));
	СписокСчетовВозвратаПоставщику.Добавить(ПредопределенноеЗначение("ПланСчетов.Типовой.ДолгосрочнаяЗадолженностьПоВозвратамТМЗПоставщикам"));
	СписокСчетовВозвратаОтПокупателя = Новый СписокЗначений;
	СписокСчетовВозвратаОтПокупателя.Добавить(ПредопределенноеЗначение("ПланСчетов.Типовой.КраткосрочнаяЗадолженностьПоВозвратамРеализованныхГотовойПродукцииТоваровРаботУслуг"));
	СписокСчетовВозвратаОтПокупателя.Добавить(ПредопределенноеЗначение("ПланСчетов.Типовой.ДолгосрочнаяЗадолженностьПоВозвратамРеализованныхГотовойПродукцииТоваровРаботУслуг"));
	Для Каждого Счет Из СписокСчетовОбщий Цикл
		Если Не СписокСчетовВозвратаПоставщику.НайтиПоЗначению(Счет.Значение) = Неопределено 
			ИЛИ Не СписокСчетовВозвратаОтПокупателя.НайтиПоЗначению(Счет.Значение) = Неопределено Тогда
			продолжить;
		КонецЕсли;
		Если Счет.Значение.Вид = ВидСчета.Активный Тогда
			СписокСчетовПокупателя.Добавить(Счет.Значение);
		Иначе
			СписокСчетовПоставщика.Добавить(Счет.Значение);
		КонецЕсли; 
	КонецЦикла;
		
КонецПроцедуры
