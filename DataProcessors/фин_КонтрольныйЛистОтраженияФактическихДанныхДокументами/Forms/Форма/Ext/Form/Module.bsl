
&НаКлиенте
Процедура ДекорацияЗакрытьНажатие(Элемент)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура НадписьПроверкаНажатие(Элемент)
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	ВыполнитьПроверку();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПроверку()
	МассивУдалить = Новый Массив;
	Для Каждого РеквизитФормы Из ЭтотОбъект.ПолучитьРеквизиты() Цикл
		Если Найти(РеквизитФормы.Имя,"Таблица_")<>0 Тогда
			МассивУдалить.Добавить(РеквизитФормы.Имя);
			Если Элементы.Найти(РеквизитФормы.Имя) <>Неопределено Тогда
				Элементы.Удалить(Элементы[РеквизитФормы.Имя]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Попытка
		ИзменитьРеквизиты(,МассивУдалить);
	Исключение
	КонецПопытки;
	
	// список неотраженных документов
	
    Объект.НеотраженныеДокументы.Очистить();
	МассивРегистров = фин_ОбщегоНазначенияВызовСервераПовтИсп.РегистрыФактическихДанных();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК Документ
		|ИЗ
		|	Документ."+Объект.ВидДокументов.ПрограммныйИдентификатор+" КАК Документ";
		Для Каждого ИмяРегистра Из МассивРегистров Цикл
			Запрос.Текст =Запрос.Текст +"
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления."+ИмяРегистра+" КАК "+ИмяРегистра+"
			|		ПО Документ.Ссылка = "+ИмяРегистра+".Регистратор
			|			И (ВЫБОР
			|				КОГДА &Шаблон = ЗНАЧЕНИЕ(Справочник.фин_ПравилаОтраженияФактическихДанных.ПустаяСсылка)
			|					ТОГДА ИСТИНА
			|				ИНАЧЕ "+ИмяРегистра+".Схема = &Шаблон
			|			КОНЕЦ)
			|";
		КонецЦикла;
		Запрос.Текст =Запрос.Текст +"
		|ГДЕ
		|";
		Для Каждого ИмяРегистра Из МассивРегистров Цикл
			Запрос.Текст =Запрос.Текст +"
			|	"+ИмяРегистра+".НомерСтроки ЕСТЬ NULL 
			|	И ";
		КонецЦикла;
		Запрос.Текст =Запрос.Текст +"
		|	Документ.Проведен
		|	И Документ.Дата >= &ДатаНачала
		|	И Документ.Дата <= &ДатаОкончания";

	Запрос.УстановитьПараметр("ДатаНачала", 	Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 	Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Шаблон", 		Объект.Шаблон);

	Результат = Запрос.Выполнить();
    Объект.НеотраженныеДокументы.Загрузить(Результат.Выгрузить());

	// контрольная ведомость
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК Документ,
		|	ШаблоныОтраженияФактическихДанныхПоБюджетам.Ссылка КАК Шаблон
		|ПОМЕСТИТЬ ВТ_Кортеж
		|ИЗ
		|	Документ."+Объект.ВидДокументов.ПрограммныйИдентификатор+" КАК Документ,
		|	Справочник.фин_ПравилаОтраженияФактическихДанных КАК ШаблоныОтраженияФактическихДанныхПоБюджетам
		|ГДЕ
		|	Документ.Проведен
		|	И Документ.Дата >= &ДатаНачала
		|	И Документ.Дата <= &ДатаОкончания
		|	И (ШаблоныОтраженияФактическихДанныхПоБюджетам.Владелец = &Владелец ИЛИ ШаблоныОтраженияФактическихДанныхПоБюджетам.Владелец.Владелец = &Владелец ИЛи ШаблоныОтраженияФактическихДанныхПоБюджетам.Владелец.Владелец.Владелец = &Владелец)
		|	И НЕ ШаблоныОтраженияФактическихДанныхПоБюджетам.ПометкаУдаления
		|;
		|";
	Для Каждого ИмяРегистра Из МассивРегистров Цикл	
					Запрос.Текст = Запрос.Текст+?(МассивРегистров.Найти(ИмяРегистра)=0,"","
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|") +"

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Кортеж.Документ КАК Документ,
		|	ВТ_Кортеж.Шаблон,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ОборотыБюджетов.НомерСтроки ЕСТЬ NULL 
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК ПризнакОтражения
		|ИЗ
		|	ВТ_Кортеж КАК ВТ_Кортеж
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления."+ИмяРегистра+" КАК ОборотыБюджетов
		|		ПО ВТ_Кортеж.Документ = ОборотыБюджетов.Регистратор
		|			И ВТ_Кортеж.Шаблон = ОборотыБюджетов.Правило
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Кортеж.Документ,
		|	ВТ_Кортеж.Шаблон";
	КонецЦикла;	
	Запрос.Текст = 	Запрос.Текст +"
		|
		//|УПОРЯДОЧИТЬ ПО
		//|	ВТ_Кортеж.Документ.Дата
		|ИТОГИ
		|	СУММА(ПризнакОтражения)
		|ПО
		|	Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_Кортеж.Шаблон
		|ИЗ
		|	ВТ_Кортеж КАК ВТ_Кортеж";

	Запрос.УстановитьПараметр("ДатаНачала", 	Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 	Период.ДатаОкончания);
 	Запрос.УстановитьПараметр("Владелец", 		Объект.ВидДокументов);

	Результат = Запрос.ВыполнитьПакет();
	
	СписокТаблиц 		= Результат[2].Выгрузить();
 	ВыборкаДокументов 	= Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаРезультата = Новый ТаблицаЗначений;

	РеквизитТаблица 	= Новый РеквизитФормы("Таблица_Контроль",Новый ОписаниеТипов("ТаблицаЗначений"),,"Контрольная ведомость");
	МассивДобавить = Новый Массив;
	МассивДобавить.Добавить(РеквизитТаблица);
	ИзменитьРеквизиты(МассивДобавить);
	МассивДобавить = Новый Массив;
	РеквизитКолонка 	= Новый РеквизитФормы("Документ",Новый ОписаниеТипов("ДокументСсылка."+Объект.ВидДокументов.ПрограммныйИдентификатор),"Таблица_Контроль","Документ");
	ТаблицаРезультата.Колонки.Добавить("Документ",Новый ОписаниеТипов("ДокументСсылка."+Объект.ВидДокументов.ПрограммныйИдентификатор));
	МассивДобавить.Добавить(РеквизитКолонка);
	РеквизитКолонка 	= Новый РеквизитФормы("Отражен",Новый ОписаниеТипов("Булево"),"Таблица_Контроль","Отражен");
	ТаблицаРезультата.Колонки.Добавить("Отражен",Новый ОписаниеТипов("Булево"));
	МассивДобавить.Добавить(РеквизитКолонка);
	Для Каждого Таблица Из СписокТаблиц Цикл
		РеквизитКолонка 	= Новый РеквизитФормы("К"+Таблица.Шаблон.Код,Новый ОписаниеТипов("Булево"),"Таблица_Контроль",Таблица.Шаблон.Наименование);
		ТаблицаРезультата.Колонки.Добавить("К"+Таблица.Шаблон.Код,Новый ОписаниеТипов("Булево"));
		МассивДобавить.Добавить(РеквизитКолонка);
	КонецЦикла;
	ИзменитьРеквизиты(МассивДобавить);

	Пока ВыборкаДокументов.Следующий() Цикл
		НоваяСтрока = ТаблицаРезультата.Добавить();
		НоваяСтрока.Документ = ВыборкаДокументов.Документ;
		НоваяСтрока.Отражен = ?(ВыборкаДокументов.ПризнакОтражения>0,Истина,Ложь);
		ВложеннаяВыборка = ВыборкаДокументов.Выбрать();
		Пока ВложеннаяВыборка.Следующий() Цикл
			НоваяСтрока["К"+ВложеннаяВыборка.Шаблон.Код]=?(ВложеннаяВыборка.ПризнакОтражения>0,Истина,Ложь)
		КонецЦикла;
	КонецЦикла;
	
	ЭлементФормы = Элементы.Добавить("Таблица_Контроль",Тип("ТаблицаФормы"),Элементы.Страницы.ПодчиненныеЭлементы.КонтрольныйСписок);
	ЭлементФормы.ПутьКДанным = "Таблица_Контроль";
	Для Каждого Колонка Из ТаблицаРезультата.Колонки Цикл
		РеквизитКолонка 			= Элементы.Добавить("Таблица_Контроль"+Колонка.Имя,Тип("ПолеФормы"),ЭлементФормы);
		РеквизитКолонка.Вид			=?(Колонка.Имя="Документ",ВидПоляФормы.ПолеВвода,ВидПоляФормы.ПолеФлажка);
		РеквизитКолонка.ПутьКДанным	= "Таблица_Контроль"+"."+Колонка.Имя;
		РеквизитКолонка.ТолькоПросмотр = Истина;
	КонецЦикла;
	// перенесем данные в таблицу
	ЗначениеВРеквизитФормы(ТаблицаРезультата,"Таблица_Контроль");
	ЭлементФормы.ИзменятьСоставСтрок = Ложь;
	ЭлементФормы.КоманднаяПанель.Видимость = Ложь;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Период.Вариант=ВариантСтандартногоПериода.ЭтотГод;
КонецПроцедуры
