// Процедура инициирует редактирование записи.
//
// Параметры:
//  СтруктураЗаписи - Структура, НаборЗаписейРегистраСведений, МенеджерЗаписи, ЗаписьНабораЗаписей
//                    Данные для редактирования
//  Записывать      - Булево, Записывать данные в ИД при окончании редактирования
//  ФормаВладелец   - Форма, откуда вызывается редактирование
//  СтруктураПредустановленныхЗначений - Структура, данные для заполнения форма по умолчанию,
//                    могут отличаться от редактируемых, например при копировании
//
Функция РедактироватьЗапись(СтруктураЗаписи = Неопределено, Записывать = Ложь, ФормаВладелец = Неопределено, СтруктураПредустановленныхЗначений = Неопределено, ИдентификаторФормы) Экспорт
	ЗаписыватьВРегистр = Записывать;
	//Хранение переменных модуля в структуре с последующей записью во временное хранилище
	Переменные = Новый Структура;
	Переменные.Вставить("мФормаВладелец");
	Переменные.Вставить("мРедактируемаяЗапись");
	Переменные.Вставить("мОграниченныйСписокТиповОбъекта");
	Переменные.Вставить("мВозвратСтруктуры");
	
 	ДоступностьОбъекта = Истина;
	Переменные.мОграниченныйСписокТиповОбъекта = Ложь;
	Переменные.мФормаВладелец = ФормаВладелец;
	Переменные.мВозвратСтруктуры = Ложь;
	Если ТипЗнч(СтруктураЗаписи) = Тип("РегистрСведенийЗапись.КонтактнаяИнформация")
	 ИЛИ ТипЗнч(СтруктураЗаписи) = Тип("РегистрСведенийМенеджерЗаписи.КонтактнаяИнформация") Тогда
		Переменные.мРедактируемаяЗапись = СтруктураЗаписи;
		ЛокальнаяСтруктураЗаписи = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСтруктуруЗаписиРегистра(СтруктураЗаписи);
	ИначеЕсли ТипЗнч(СтруктураЗаписи) = Тип("РегистрСведенийНаборЗаписей.КонтактнаяИнформация") Тогда
	// Значит вводим нового
		ЛокальнаяСтруктураЗаписи = Новый Структура("Объект", СтруктураЗаписи.Отбор.Объект.Значение);
		Переменные.мРедактируемаяЗапись = СтруктураЗаписи;
	КонецЕсли;
	Если СтруктураПредустановленныхЗначений <> Неопределено Тогда
		ЛокальнаяСтруктураЗаписи = СтруктураПредустановленныхЗначений;
	КонецЕсли;
	переменные1 = переменные;
	ВозвращаемаяСтруктура = Новый Структура;
	ВозвращаемаяСтруктура.Вставить("Адрес");
	ВозвращаемаяСтруктура.Вставить("Меню");
	ВозвращаемаяСтруктура.Адрес = ПоместитьВоВременноеХранилище(Переменные1, ИдентификаторФормы);
	ЭтотОбъект.Адрес = ВозвращаемаяСтруктура.Адрес;
	Если НЕ ЗначениеЗаполнено(Тип) Тогда
		ВозвращаемаяСтруктура.Меню = Новый СписокЗначений();
		Для а = 0 По (куфиб_УправлениеКонтактнойИнформацией.ПолучитьОпределения("Перечисления.ТипыКонтактнойИнформации.Количество",)-1) Цикл
			ВозвращаемаяСтруктура.Меню.Добавить(куфиб_УправлениеКонтактнойИнформацией.ПолучитьОпределения("Перечисления.ТипыКонтактнойИнформации[а]",а),
												куфиб_УправлениеКонтактнойИнформацией.ПолучитьОпределения("Перечисления.ТипыКонтактнойИнформации[а]",а));
		КонецЦикла;
		Если ТипЗнч(ФормаВладелец) = Тип("УправляемаяФорма") Тогда
			Возврат ВозвращаемаяСтруктура;
		КонецЕсли;
	КонецЕсли;
	Возврат Истина;
КонецФункции
