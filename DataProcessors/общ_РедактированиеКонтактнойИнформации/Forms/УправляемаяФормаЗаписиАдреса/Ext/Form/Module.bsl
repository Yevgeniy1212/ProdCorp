&НаКлиенте
Перем мОбработкаТайпинга;
&НаКлиенте
Перем мТекстТайпинга;
&НаКлиенте
Перем мПоследнееЗначениеЭлементаТайпинга;
&НаКлиенте
Перем мСтруктураИзмерений Экспорт;
&НаКлиенте
Перем мПромежуточныйАдресЗаПределамиРК;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

//  Процедура формирует строковое представление адресных элементов -
// "родителей" переданого в переданных параментрах
//
// Параметры:
//  Элемент - элемент справочника Адресный классфикатор, для которого надо получить родителей.
//  Область - строка, куда будет помещено строковое представление "родительской" области.
//  Район - строка, куда будет помещено строковое представление "родительского" района.
//  НаселенныйПункт - строка, куда будет помещено строковое представление "родительского" населенного пункта.
//
&НаКлиенте
Процедура ЗаполнитьРодителей(Область, Район, Город, НаселенныйПункт, Элемент) Экспорт
	Если Элемент.ТипАдресногоЭлемента > 3 Тогда
		АдресныйЭлемент = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресногоЭлемента(Элемент.Код);
		Если АдресныйЭлемент.ТипАдресногоЭлемента = 4 Тогда
			НаселенныйПункт = куфиб_УправлениеКонтактнойИнформациейКлиент.ПолучитьНазвание(АдресныйЭлемент);
		Иначе
			НаселенныйПункт = "";
		КонецЕсли;
	КонецЕсли;
	Если Элемент.ТипАдресногоЭлемента > 2 Тогда
		АдресныйЭлемент = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресногоЭлемента(Элемент.Код);
		Если АдресныйЭлемент.ТипАдресногоЭлемента = 3 Тогда
			Город = куфиб_УправлениеКонтактнойИнформациейКлиент.ПолучитьНазвание(АдресныйЭлемент);
		Иначе
			Город = "";
		КонецЕсли;
	КонецЕсли;
	Если Элемент.ТипАдресногоЭлемента > 1 Тогда
		АдресныйЭлемент = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресногоЭлемента(Элемент.Код - Элемент.Код%куфиб_УправлениеКонтактнойИнформацией.МаскаРайона());
		Если АдресныйЭлемент.ТипАдресногоЭлемента = 2 Тогда
			Район = куфиб_УправлениеКонтактнойИнформациейКлиент.ПолучитьНазвание(АдресныйЭлемент);
		Иначе
			Район = "";
		КонецЕсли;
	КонецЕсли;
	АдресныйЭлемент = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресногоЭлемента(Элемент.Код - Элемент.Код%куфиб_УправлениеКонтактнойИнформацией.МаскаОБласти());
	Если АдресныйЭлемент.ТипАдресногоЭлемента = 1 Тогда
		Область  = куфиб_УправлениеКонтактнойИнформациейКлиент.ПолучитьНазвание(АдресныйЭлемент);
	Иначе
		Область = "";
	КонецЕсли;
//	Индекс = Элемент.Индекс;
КонецПроцедуры

// Процедура формирует строковое представление адреса.
&НаКлиенте
Процедура СформироватьПредставление()
	ОбъектФормы = Объект;
	Объект.Представление = куфиб_УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдреса(Объектформы, ПроизвольныйАдрес);
КонецПроцедуры

// Процедура обслуживает событие изменения типа адреса
// адрес на территории Республики Казахстан и Адрес за пределами РК.
// 
// Параметры
//  НЕТ
//
&НаКлиенте
Процедура ПриИзмененииТипаАдреса()
	Если ПроизвольныйАдрес Тогда
		//Элементы.ПанельАдреса.ТекущаяСтраница = Элементы.ПанельАдреса.Страницы.ПроизвольныйАдрес;
		Элементы.ПанельПроизвольныйАдрес.Видимость = Истина;
		Элементы.ПанельРегламентныйАдрес.Видимость = Ложь;
	Иначе
		//Элементы.ПанельАдреса.ТекущаяСтраница = Элементы.ПанельАдреса.Страницы.РегламентированныйАдрес;
		Элементы.ПанельПроизвольныйАдрес.Видимость = Ложь;
		Элементы.ПанельРегламентныйАдрес.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

// Процедура вызывается при открытии формы.
//
&НаКлиенте
Процедура ПриОткрытии()
	//Объект.ТолькоПросмотр     = НЕ Объект.ДоступностьОбъекта;
	ЭтаФорма.Элементы.ПанельРегламентныйАдрес.Видимость = Ложь;
	ЭтаФОрма.Элементы.ПанельПроизвольныйАдрес.Видимость = Ложь;
	ЭтаФорма.ТолькоПросмотр= Объект.ДоступностьОбъекта;
	Если Объект.Вид = Неопределено Тогда
		Объект.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ПустаяСсылка");
	КонецЕсли;
	//Если НЕ ЗначениеЗаполнено(Объект) И Объект.ДоступностьОбъекта Тогда
	Если Объект.ДоступностьОбъекта Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.Объект;
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Вид) Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.Вид;
	Иначе
		ЭтаФорма.ТекущийЭлемент = Элементы.Область;
	КонецЕсли;
	ОбъектДляПредставления = Объект;
	ПредставлениеАдреса = куфиб_УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдреса(ОбъектДляПредставления);
	ПроизвольныйАдрес = (ПредставлениеАдреса <> Объект.Представление)И(ПредставлениеАдреса <> "Республика Казахстан");
	ПриИзмененииТипаАдреса();
	
	Если ПолучитьПеременнуюМодуля("мВозвратСтруктуры") = Истина Тогда
		Элементы.ФормаОК.Доступность = Ложь;
	КонецЕсли;
	мПоследнееЗначениеЭлементаТайпинга = Объект.Вид;
КонецПроцедуры

&НаСервере
Функция ПолучитьПеременнуюМодуля(парам)
//	Переменные = ПолучитьИзВременногоХранилища(Объект.Адрес);
	//Если ВРег(парам) = ВРег("мВозвратСтруктуры") Тогда
	//	Возврат Переменные.мВозвратСтруктуры;
	//КонецЕсли;
	//Если ВРег(парам) = ВРег("МодульОбъект.ЗакрыватьФормуРедактирования()") Тогда
	//	МодульОбъект = РеквизитФормыВЗначение("Объект");
	//	Возврат МодульОбъект.ЗакрыватьФормуРедактирования();
	//КонецЕсли;
	//МодульОбъект = РеквизитФормыВЗначение("Объект");
	//Если ВРег(парам) = ВРег("мВозвратСтруктуры") Тогда
	//	Возврат МодульОбъект.мВозвратСтруктуры;
	//КонецЕсли;
	//Если ВРег(парам) = ВРег("МодульОбъект.ЗакрыватьФормуРедактирования()") Тогда
	//	Возврат МодульОбъект.МодульОбъект.ЗакрыватьФормуРедактирования();
	//КонецЕсли;
КонецФункции

// Процедура вызывается при ОбновлениеОтображения формы.
//
&НаКлиенте
Процедура ОбновлениеОтображения()
	
	ЭтаФорма.Элементы.Вид.ТолькоПросмотр = (Объект = Неопределено);

	куфиб_РаботаСДиалогами.ОбновлениеОтображенияВФормеПриТайпинге(ЭтаФорма, ЭтаФорма.Элементы.Вид, мОбработкаТайпинга, мТекстТайпинга);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
//

// Процедура - обработчик события "ПриИзменении" элемента формы "КазахстанскийАдрес".
//
&НаКлиенте
Процедура КазахстанскийАдресПриИзменении(Элемент)
	Представление 	= "";
	Объект.Поле1 			= "";
	Если ПроизвольныйАдрес Тогда
		ПриИзмененииТипаАдреса();
		Если Объект.Представление = "Республика Казахстан" Тогда
			Объект.Представление = мПромежуточныйАдресЗаПределамиРК;
			мПромежуточныйАдресЗаПределамиРК = "";
		Иначе
			СформироватьПредставление();
		КонецЕсли;
	Иначе
		мПромежуточныйАдресЗаПределамиРК = Объект.Представление;
		СформироватьПредставление();
		ПриИзмененииТипаАдреса();
	КонецЕсли;
КонецПроцедуры

// Процедура вызывается при очистке значения элемента формы Объект.
//
&НаКлиенте
Процедура ОбъектОчистка(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(Объект.Вид) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
		Объект.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ПустаяСсылка");
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Область".
//
&НаКлиенте
Процедура ОбластьПриИзменении(Элемент)
	
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Район".
//
&НаКлиенте
Процедура РайонПриИзменении(Элемент)
	
	
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Город".
//
&НаКлиенте
Процедура ГородПриИзменении(Элемент)
	
	
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "НаселенныйПункт".
//
&НаКлиенте
Процедура НаселенныйПунктПриИзменении(Элемент)
	
	
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Улица".
//
&НаКлиенте
Процедура УлицаПриИзменении(Элемент)
	
	
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Дом".
//
&НаКлиенте
Процедура ДомПриИзменении(Элемент)

	
	СформироватьПредставление();

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Корпус".
//
&НаКлиенте
Процедура КорпусПриИзменении(Элемент)

	
	СформироватьПредставление();

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Квартира".
//
&НаКлиенте
Процедура КвартираПриИзменении(Элемент)

	СформироватьПредставление();

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "Индекс".
//
&НаКлиенте
Процедура ИндексПриИзменении(Элемент)

	СформироватьПредставление();

КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода "Область".
//
&НаКлиенте
Процедура ОбластьНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокСокращений = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСписокСокращений(Объект.Поле2, 1);
	
	Если СписокСокращений <> Неопределено Тогда
		Сокращение = ВыбратьИзСписка(СписокСокращений,Элемент);
		Если Сокращение <> Неопределено Тогда
			Объект.Поле2 = СокрЛП(Объект.Поле2) + " " + СокрЛП(Сокращение.Значение);
		КонецЕсли;
	КонецЕсли;
	
	
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода "Район".
//
&НаКлиенте
Процедура РайонНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокСокращений = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСписокСокращений(Объект.Поле3, 2);
	
	Если СписокСокращений <> Неопределено Тогда
		Сокращение = ВыбратьИзСписка(СписокСокращений,Элемент);
		Если Сокращение <> Неопределено Тогда
			Объект.Поле3 = СокрЛП(Объект.Поле3) + " " + СокрЛП(Сокращение.Значение);
		КонецЕсли;
	КонецЕсли;
		
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода "Город".
//
&НаКлиенте
Процедура ГородНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокСокращений = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСписокСокращений(Объект.Поле4, 3);
	
	Если СписокСокращений <> Неопределено Тогда
		Сокращение = ВыбратьИзСписка(СписокСокращений,Элемент);
		Если Сокращение <> Неопределено Тогда
			Объект.Поле4 = СокрЛП(Объект.Поле4) + " " + СокрЛП(Сокращение.Значение);
		КонецЕсли;
	КонецЕсли;
	
	
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода "НаселенныйПункт".
//
&НаКлиенте
Процедура НаселенныйПунктНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокСокращений = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСписокСокращений(Объект.Поле5, 4);
	
	Если СписокСокращений <> Неопределено Тогда
		Сокращение = ВыбратьИзСписка(СписокСокращений,Элемент);
		Если Сокращение <> Неопределено Тогда
			Объект.Поле5 = СокрЛП(Объект.Поле5) + " " + СокрЛП(Сокращение.Значение);
		КонецЕсли;
	КонецЕсли;
	
	СформироватьПредставление();
	
КонецПроцедуры

// Процедура перехватывает момент начала выбора вида контактной информации.
//
// Параметры
//  Элемент - элемент формы, выбор значения которого должен произойти
//  СтандартнаяОбработка - булево, флаг стандартной обработки выбора.
&НаКлиенте
Процедура ВидНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Объект.Объект = Неопределено Тогда
		Сообщить("Выберите объект.");
		Возврат;
	КонецЕсли;
	
	КопияОбъект = Объект.Объект;
	Тип = Объект.Тип;
	ВидОбъектаКИ = куфиб_УправлениеКонтактнойИнформацией.ВидОбъектаКИ(КопияОбъект);
    //куфиб_УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Объект.Тип, куфиб_УправлениеКонтактнойИнформацией.ВидОбъектаКИ(КопияОбъект));
	куфиб_УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуВыбораВидаКИ(Истина,Элемент, Тип, ВидОбъектаКИ);
КонецПроцедуры

&НаКлиенте
Процедура ВидОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Элемент = ВыбранноеЗначение;
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "Область".
//
&НаКлиенте
Процедура ОбластьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
	ФормаВыбора = ПолучитьФорму("РегистрСведений.АдресныйКлассификатор.Форма.УправляемаяФормаВыбора",, Элемент);
	ФормаВыбора.НазваниеЭлемента = СокрЛП(Объект.Поле2);
	ФормаВыбора.ОтобратьТолькоОбласти();
	ФормаВыбора.Открыть();
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "Район".
//
&НаКлиенте
Процедура РайонНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
	ФормаВыбора = ПолучитьФорму("РегистрСведений.АдресныйКлассификатор.Форма.УправляемаяФормаВыбора",, Элемент);
	ФормаВыбора.НазваниеЭлемента = СокрЛП(Объект.Поле3);
	ФормаВыбора.УстановитьРодителя(Объект.Поле2, "", "", "");
	ФормаВыбора.ОтобратьТолькоРайоны();
	ФормаВыбора.Открыть();
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "Город".
//
&НаКлиенте
Процедура ГородНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
	ФормаВыбора = ПолучитьФорму("РегистрСведений.АдресныйКлассификатор.Форма.УправляемаяФормаВыбора",,Элемент);
	ФормаВыбора.НазваниеЭлемента = СокрЛП(Объект.Поле4);
	ФормаВыбора.УстановитьРодителя(Объект.Поле2, Объект.Поле3, "", "");
	ФормаВыбора.ОтобратьТолькоГорода();
	ФормаВыбора.Открыть();
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "НаселенныйПункт".
//
&НаКлиенте
Процедура НаселенныйПунктНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
	ФормаВыбора = ПолучитьФорму("РегистрСведений.АдресныйКлассификатор.Форма.УправляемаяФормаВыбора",, Элемент);
	ФормаВыбора.НазваниеЭлемента = СокрЛП(Объект.Поле5);
	ФормаВыбора.УстановитьРодителя(Объект.Поле2, Объект.Поле3, Объект.Поле4, "");
	ФормаВыбора.ОтобратьТолькоНаселенныеПункты();
	ФормаВыбора.Открыть();
КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ввода "Область".
//
&НаКлиенте
Процедура ОбластьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	//АдреснаяЗапись = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресногоЭлемента(ВыбранноеЗначение);
	АдреснаяЗапись = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресногоЭлемента(ПолучитьКодВыбранногоЗначения(ВыбранноеЗначение));
	Если СокрЛП(АдреснаяЗапись.Сокращение) <> "" Тогда
	Элемент.Значение = ?(Прав(СокрЛП(АдреснаяЗапись.Сокращение),1)= ".", СокрЛП(АдреснаяЗапись.Сокращение),
						   СокрЛП(АдреснаяЗапись.Сокращение) +  ".") + СокрЛП(АдреснаяЗапись.Наименование);
	КонецЕсли;
	ЗаполнитьРодителей(Объект.Поле2, Объект.Поле3, Объект.Поле4, Объект.Поле5, АдреснаяЗапись);
	СформироватьПредставление();


КонецПроцедуры

&НаСервере
Функция ПолучитьКодВыбранногоЗначения(ВыбранноеЗначение)
	Возврат ВыбранноеЗначение.код;
КонецФункции

// Процедура - обработчик события "ОбработкаВыбора" поля ввода "Район".
//
&НаКлиенте
Процедура РайонОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	АдреснаяЗапись = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресногоЭлемента(ПолучитьКодВыбранногоЗначения(ВыбранноеЗначение));
	Если СокрЛП(АдреснаяЗапись.Сокращение) <> "" Тогда
		Элемент = ?(Прав(СокрЛП(АдреснаяЗапись.Сокращение),1)= ".", СокрЛП(АдреснаяЗапись.Сокращение),
		СокрЛП(АдреснаяЗапись.Сокращение)+  ".") +  СокрЛП(АдреснаяЗапись.Наименование);
	КонецЕсли;						
	Объект.Поле1 = СокрЛП(АдреснаяЗапись.Индекс);
	ЗаполнитьРодителей(Объект.Поле2, Объект.Поле3, Объект.Поле4, Объект.Поле5,АдреснаяЗапись);
	СформироватьПредставление();

КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ввода "Город".
//
&НаКлиенте
Процедура ГородОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	АдреснаяЗапись = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресногоЭлемента(ПолучитьКодВыбранногоЗначения(ВыбранноеЗначение));
	Если СокрЛП(АдреснаяЗапись.Сокращение) <> "" Тогда
		Элемент = ?(Прав(СокрЛП(АдреснаяЗапись.Сокращение),1)= ".", СокрЛП(АдреснаяЗапись.Сокращение),
		СокрЛП(АдреснаяЗапись.Сокращение) +  ".") +  СокрЛП(АдреснаяЗапись.Наименование);
	КонецЕсли;
	Объект.Поле1 = СокрЛП(АдреснаяЗапись.Индекс);
	ЗаполнитьРодителей(Объект.Поле2, Объект.Поле3, Объект.Поле4, Объект.Поле5,АдреснаяЗапись);
	СформироватьПредставление();


КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ввода "НаселенныйПункт".
//
&НаКлиенте
Процедура НаселенныйПунктОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	АдреснаяЗапись = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресногоЭлемента(ПолучитьКодВыбранногоЗначения(ВыбранноеЗначение));
	Если СокрЛП(АдреснаяЗапись.Сокращение) <> "" Тогда 
		Элемент = ?(Прав(СокрЛП(АдреснаяЗапись.Сокращение),1)= ".", СокрЛП(АдреснаяЗапись.Сокращение),
		СокрЛП(АдреснаяЗапись.Сокращение)+  ".") +  СокрЛП(АдреснаяЗапись.Наименование);
	КонецЕсли;					   
	Объект.Поле1 = СокрЛП(АдреснаяЗапись.Индекс);
	ЗаполнитьРодителей(Объект.Поле2, Объект.Поле3, Объект.Поле4, Объект.Поле5,АдреснаяЗапись);
	СформироватьПредставление();

КонецПроцедуры

// Процедура перехватывает момент начала выбора Объекта.
//
// Параметры
//  Элемент - элемент формы, выбор значения которого должен произойти
//  СтандартнаяОбработка - булево, флаг стандартной обработки выбора.
&НаКлиенте
Процедура ОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = куфиб_УправлениеКонтактнойИнформациейКлиент.НачалоВыбораОбъектаКИ(ЭтаФорма, Элемент, глТекущийПользователь);
КонецПроцедуры

// Процедура обработчик события ОкончаниеВводаТекста элемента формы Вид.
//
&НаКлиенте
Процедура ВидОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	куфиб_РаботаСДиалогами.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", Объект.Тип, куфиб_УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Объект)), ЭтаФорма, Тип("СправочникСсылка.ВидыКонтактнойИнформации"), мОбработкаТайпинга, мТекстТайпинга, мПоследнееЗначениеЭлементаТайпинга);
	
КонецПроцедуры

// Процедура обработчик события ПриИзменении элемента формы Вид.
//
&НаКлиенте
Процедура ВидПриИзменении(Элемент)
	
	мПоследнееЗначениеЭлементаТайпинга = Элемент;
	
КонецПроцедуры

// Процедура обработчик события НачалоВыбора элемента формы Страна.
//
&НаКлиенте
Процедура СтранаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка= Ложь;
	ФормаВыбора=ОткрытьФорму("Справочник.КлассификаторСтранМира.ФормаВыбора",,Элемент);
КонецПроцедуры

// Процедура обработчик события ОбработкаВыбора элемента формы Страна.
//
&НаКлиенте
Процедура СтранаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Элемент = ВыбранноеЗначение;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ДЕЙСТВИЙ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ
//
&НаКлиенте
Процедура ОсновныеДействияФормыЗаписать(Кнопка)
	Сохранение(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Сохранение(Закрывать) 
	Если Объект.Представление <> "" И ЗначениеЗаполнено(Объект.Вид) Тогда
		ЭтаФорма.ЗакрыватьПриВыборе = Закрывать;
		ОповеститьОВыборе(куфиб_УправлениеКонтактнойИнформациейКлиент.СохранениеКИ(Объект, Параметры));
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеДействияФормыОК(Кнопка)
	Сохранение(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	//НашОбъект = РеквизитФормыВЗначение("Объект");
	Если Модифицированность И ПолучитьПеременнуюМодуля("мВозвратСтруктуры") <> Истина Тогда
		Отказ = ПолучитьПеременнуюМодуля("МодульОбъект.ЗакрыватьФормуРедактирования()");
		
	КонецЕсли; 
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ДЕЙСТВИЙ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ
//

&НаКлиенте
Процедура УлицаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ФормаВыбора = ПолучитьФорму("РегистрСведений.АдресныйКлассификатор.Форма.УправляемаяФормаВыбора",, Элемент);
	//ФормаВыбора = РегистрыСведений.АдресныйКлассификатор.ПолучитьФорму("ФормаВыбора", Элемент,);
	ФормаВыбора.НазваниеЭлемента = СокрЛП(Объект.Поле6);
	ФормаВыбора.УстановитьРодителя(Объект.Поле2, Объект.Поле3, Объект.Поле4, Объект.Поле5);
	ФормаВыбора.ОтобратьТолькоУлицы();
	ФормаВыбора.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура УлицаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокСокращений = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСписокСокращений(Объект.Поле6, 5);
	
	Если СписокСокращений <> Неопределено Тогда
		Сокращение = ВыбратьИзСписка(СписокСокращений,Элемент);
		Если Сокращение <> Неопределено Тогда
			Объект.Поле6 = СокрЛП(Объект.Поле6) + " " + СокрЛП(Сокращение.Значение);
		КонецЕсли;
	КонецЕсли;
	
	СформироватьПредставление();
	
КонецПроцедуры

&НаКлиенте
Процедура УлицаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	АдреснаяЗапись = куфиб_УправлениеКонтактнойИнформацией.ПолучитьСтруктуруАдресногоЭлемента(ПолучитьКодВыбранногоЗначения(ВыбранноеЗначение));
	Если СокрЛП(АдреснаяЗапись.Сокращение) <> "" Тогда
		Элемент = ?(Прав(СокрЛП(АдреснаяЗапись.Сокращение),1)= ".", СокрЛП(АдреснаяЗапись.Сокращение),
		СокрЛП(АдреснаяЗапись.Сокращение) +  ".") +  СокрЛП(АдреснаяЗапись.Наименование);
	КонецЕсли;
	Объект.Поле1 = СокрЛП(АдреснаяЗапись.Индекс);
	Объект.Поле6 = куфиб_УправлениеКонтактнойИнформацией.ПолучитьНазвание(АдреснаяЗапись);
	СформироватьПредставление();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	куфиб_УправлениеКонтактнойИнформацией.УстановкаПараметровОкна(Параметры, Объект, Элементы);
	//оформление
	оф_АдресЗаголовок = "Адрес";
КонецПроцедуры


мОбработкаТайпинга                 = Ложь;
мТекстТайпинга                     = "";
мПоследнееЗначениеЭлементаТайпинга = Неопределено;

мСтруктураИзмерений = Неопределено;

мПромежуточныйАдресЗаПределамиРК = "";
