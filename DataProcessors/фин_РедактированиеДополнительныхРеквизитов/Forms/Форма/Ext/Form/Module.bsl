
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Документ") Тогда
		Объект.ДокументОбъект = Параметры.Документ;
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	ИспользоватьДатуВводаВСистему = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ОтражатьФактическиеДанныеДатойВводаВСистему");
	Элементы.ДатаВводаДокументаВСистему.Видимость = ИспользоватьДатуВводаВСистему;
	Если ИспользоватьДатуВводаВСистему Тогда
		ДатаВводаДокументаВСистему = фин_РегистрацияФактическихДанныхПоБюджетированию.ДатаОтраженияДокументаВБюджетах(Объект.ДокументОбъект);
	КонецЕсли;
	ОбновитьДанные();
КонецПроцедуры

// процедура получает имеющиеся настройки
//
&НаСервере
Процедура ОбновитьДанные() Экспорт
	ИмяДокумента = СтрЗаменить(фин_РаботаСДополнительнымиРазрезамиБюджетирования.ОпределитьТаблицуПоТипу(ТипЗнч(Объект.ДокументОбъект)),"Документ.","");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыДокументов.Ссылка,
	|	ВидыДокументов.ИспользоватьДополнительныеРеквизиты,
	|	ВидыДокументов.РегистрироватьПервичныеДанныеПоБюджетированию
	|ИЗ
	|	Справочник.фин_ВидыДокументов КАК ВидыДокументов
	|ГДЕ
	|	ВидыДокументов.ПрограммныйИдентификатор = &ПрограммныйИдентификатор
	|	И (НЕ ВидыДокументов.ПометкаУдаления)";
	Запрос.УстановитьПараметр("ПрограммныйИдентификатор",ИмяДокумента);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ВидДокументов = Выборка.Ссылка;
		ОтражатьВБюджетах = Выборка.РегистрироватьПервичныеДанныеПоБюджетированию;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	фин_ПрименениеСхемОтраженияФактическихДанных.Схема КАК НаборШаблонов
		|ИЗ
		|	РегистрСведений.фин_ПрименениеСхемОтраженияФактическихДанных.СрезПоследних(&ДатаДокумента, ОбъектИнформационнойБазы = &ВидДокументов) КАК фин_ПрименениеСхемОтраженияФактическихДанных";
		Запрос.УстановитьПараметр("ДатаДокумента",Объект.ДокументОбъект.Дата);
		Запрос.УстановитьПараметр("ВидДокументов",ВидДокументов);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаШаблон = РезультатЗапроса.Выбрать();
		Если ВыборкаШаблон.Следующий() Тогда
			ИспользуемыйСпособ = ВыборкаШаблон.НаборШаблонов;
		Иначе	
			ИспользуемыйСпособ = "Не назначен";
		КонецЕсли;
		Элементы.ЗначенияРеквизитов.Доступность = Выборка.ИспользоватьДополнительныеРеквизиты;
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка",			Объект.ДокументОбъект);
		Запрос.УстановитьПараметр("ВидДокументов",	ВидДокументов);
		Если Метаданные.Документы[ИмяДокумента].ТабличныеЧасти.Найти("фин_ЗначенияДополнительныхРеквизитовБюджетирования") = Неопределено Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	ДополнительныеРеквизитыДокументовДляБюджетирования.РеквизитДокумента КАК РеквизитБюджетирования,
			               |	ДополнительныеРеквизитыДокументовДляБюджетирования.ОбязателенКЗаполнению КАК Обязательный,
			               |	ВЫБОР
			               |		КОГДА ДополнительныеРеквизитыДокументовДляБюджетирования.РеквизитДокумента.ПредставлениеДополнительногоРеквизита = """"
			               |			ТОГДА ДополнительныеРеквизитыДокументовДляБюджетирования.РеквизитДокумента.Наименование
			               |		ИНАЧЕ ДополнительныеРеквизитыДокументовДляБюджетирования.РеквизитДокумента.ПредставлениеДополнительногоРеквизита
			               |	КОНЕЦ КАК ПредставлениеРеквизита,
			               |	ЗначенияДополнительныхРеквизитовБюджетирования.ЗначениеРеквизита
			               |ИЗ
			               |	РегистрСведений.фин_ДополнительныеРеквизитыДокументовДляБюджетирования КАК ДополнительныеРеквизитыДокументовДляБюджетирования
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.фин_ЗначенияДополнительныхРеквизитовБюджетирования КАК ЗначенияДополнительныхРеквизитовБюджетирования
			               |		ПО ДополнительныеРеквизитыДокументовДляБюджетирования.РеквизитДокумента = ЗначенияДополнительныхРеквизитовБюджетирования.РеквизитБюджетирования
			               |			И (&Ссылка = ЗначенияДополнительныхРеквизитовБюджетирования.Документ)
			               |ГДЕ
			               |	ДополнительныеРеквизитыДокументовДляБюджетирования.ВидДокументов = &ВидДокументов";
			РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		Иначе
			Запрос.Текст = "ВЫБРАТЬ
			               |	ДополнительныеРеквизитыДокументовДляБюджетирования.РеквизитДокумента КАК РеквизитБюджетирования,
			               |	ДополнительныеРеквизитыДокументовДляБюджетирования.ОбязателенКЗаполнению КАК Обязательный,
			               |	ВЫБОР
			               |		КОГДА ДополнительныеРеквизитыДокументовДляБюджетирования.РеквизитДокумента.ПредставлениеДополнительногоРеквизита = """"
			               |			ТОГДА ДополнительныеРеквизитыДокументовДляБюджетирования.РеквизитДокумента.Наименование
			               |		ИНАЧЕ ДополнительныеРеквизитыДокументовДляБюджетирования.РеквизитДокумента.ПредставлениеДополнительногоРеквизита
			               |	КОНЕЦ КАК ПредставлениеРеквизита
			               |ИЗ
			               |	РегистрСведений.фин_ДополнительныеРеквизитыДокументовДляБюджетирования КАК ДополнительныеРеквизитыДокументовДляБюджетирования
			               |ГДЕ
			               |	ДополнительныеРеквизитыДокументовДляБюджетирования.ВидДокументов = &ВидДокументов";
			РезультатЗапроса = Запрос.Выполнить().Выгрузить();
			РезультатЗапроса.Колонки.Добавить("ЗначениеРеквизита",Метаданные.Обработки.фин_РедактированиеДополнительныхРеквизитов.ТабличныеЧасти.ЗначенияРеквизитов.Реквизиты.ЗначениеРеквизита.Тип);
			Для Каждого СтрокаРеквизитов Из РезультатЗапроса Цикл
				 СтрокиЗначения = Объект.ДокументОбъект.фин_ЗначенияДополнительныхРеквизитовБюджетирования.НайтиСтроки(Новый Структура("РеквизитБюджетирования",СтрокаРеквизитов.РеквизитБюджетирования));
				 Если СтрокиЗначения.Количество() > 0 Тогда
					  СтрокаРеквизитов.ЗначениеРеквизита = СтрокиЗначения[0].ЗначениеРеквизита;
				 КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
		Объект.ЗначенияРеквизитов.Загрузить(РезультатЗапроса);
		Для Каждого СтрокаЗначений Из Объект.ЗначенияРеквизитов Цикл
			Если СтрокаЗначений.ЗначениеРеквизита = Неопределено Тогда
			 	СтрокаЗначений.ЗначениеРеквизита = СтрокаЗначений.РеквизитБюджетирования.ТипЗначения.ПривестиЗначение(СтрокаЗначений.ЗначениеРеквизита);
			КонецЕсли;
		КонецЦикла;
	Иначе	
		ОтражатьВБюджетах = Ложь;
		ИспользуемыйСпособ = "Не назначен";
	КонецЕсли; 
КонецПроцедуры //ОбновитьДанные

&НаКлиенте
Процедура ДатаВводаДокументаВСистемуНажатие(Элемент, СтандартнаяОбработка)
	ОткрытьФорму("РегистрСведений.фин_ДатыВводаДокументовВСистему.ФормаСписка",Новый Структура("Отбор",Новый Структура("Документ",Объект.ДокументОбъект)),ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура СохранитьЗначенияДополнительныхРеквизитовНаСервере()
	НачатьТранзакцию();
	ИмяДокумента = СтрЗаменить(фин_РаботаСДополнительнымиРазрезамиБюджетирования.ОпределитьТаблицуПоТипу(ТипЗнч(Объект.ДокументОбъект)),"Документ.","");
	Если Метаданные.Документы[ИмяДокумента].ТабличныеЧасти.Найти("фин_ЗначенияДополнительныхРеквизитовБюджетирования")=Неопределено Тогда
		НаборЗаписей = РегистрыСведений.фин_ЗначенияДополнительныхРеквизитовБюджетирования.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(Объект.ДокументОбъект);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		Для Каждого СтрокаРеквизит Из Объект.ЗначенияРеквизитов Цикл
			Если Не ЗначениеЗаполнено(СтрокаРеквизит.ЗначениеРеквизита) Тогда
				Продолжить;
			КонецЕсли;
			Значение 							= НаборЗаписей.Добавить();
			Значение.Документ 					= Объект.ДокументОбъект;
			Значение.РеквизитБюджетирования 	= СтрокаРеквизит.РеквизитБюджетирования;
			Значение.ЗначениеРеквизита 			= СтрокаРеквизит.ЗначениеРеквизита;
		КонецЦикла;
		НаборЗаписей.Записать();
	Иначе
		ДокументОбъект = Объект.ДокументОбъект.ПолучитьОбъект();
		НаборРеквизитов = ДокументОбъект.фин_ЗначенияДополнительныхРеквизитовБюджетирования;
		НаборРеквизитов.Очистить();
		Для Каждого СтрокаРеквизит Из Объект.ЗначенияРеквизитов Цикл
			Если Не ЗначениеЗаполнено(СтрокаРеквизит.ЗначениеРеквизита) Тогда
				Продолжить;
			КонецЕсли;
			Значение 							= НаборРеквизитов.Добавить();
			Значение.РеквизитБюджетирования 	= СтрокаРеквизит.РеквизитБюджетирования;
			Значение.ЗначениеРеквизита 			= СтрокаРеквизит.ЗначениеРеквизита;
		КонецЦикла;
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось сохранить изменения: "+ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	ЗафиксироватьТранзакцию();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьЗначенияДополнительныхРеквизитов(Команда)
	СохранитьЗначенияДополнительныхРеквизитовНаСервере();
КонецПроцедуры
