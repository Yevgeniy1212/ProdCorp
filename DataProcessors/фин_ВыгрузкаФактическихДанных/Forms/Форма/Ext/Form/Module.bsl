#Область ОбработчикиСобытийформы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    Объект.ДатаКонца = ТекущаяДата();    
	Объект.Организация = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	ВалютаРегл = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета");
	СписокТЧ = Новый Массив;
	СписокТЧ.Добавить("БюджетныеОперации");
	НастроитьРазрезыБюджета(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПолучитьПолныйСписокРазрезов"),СписокТЧ);
	УстановитьВидимость();
	фин_БюджетированиеОбщегоНазначения.НастроитьОформлениеТабличногоПоля(Элементы.БюджетныеОперации);
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Автозаполнение(Команда)
	АвтозаполнениеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЭкспортВТабличныйДокумент(Команда)
	ЗаголовокФайла = "Фактические данные за период "+Формат(Объект.ДатаНачала,"ДФ=dd.MM.yyyy")+" - " + Формат(Объект.ДатаКонца,"ДФ=dd.MM.yyyy");
	ПараметрыФормы = Новый Структура("ДляЗагрузкиФактическихИПрогнозныхДанных,ЗаголовокФайла,АдресДанных",Истина,ЗаголовокФайла,АдресДанныхТЧ());
	ОткрытьФорму("Обработка.фин_ОбменТабличнымиДокументами.Форма",ПараметрыФормы,ЭтотОбъект,УникальныйИдентификатор);
КонецПроцедуры


#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ВспомогательныеПроцедурыИФункции

//Процедура УстановитьВидимость
//
&НаСервере
Процедура УстановитьВидимость()
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_БюджетированиеПоОрганизациям") Тогда 
	 	Элементы.Организация.Видимость = Истина;
	Иначе
	 	Элементы.Организация.Видимость = Ложь;
    КонецЕсли;
КонецПроцедуры //УстановитьВидимость

&НаСервере
Функция ПолучитьИмяРазреза(Значение)
	Возврат фин_ПроцедурыМеханизмовБюджетирования.ИмяРазреза(Значение)
КонецФункции

//настраивает дополнительные разрезы
//
&НаСервере
Процедура НастроитьРазрезыБюджета(ПереченьРазрезов,СписокТЧ)
	ОбработанныеРазрезы=Новый Массив;
	Для Каждого Разрез Из ПереченьРазрезов Цикл
		//ИмяРазреза = фин_ПроцедурыМеханизмовБюджетирования.ИмяРазреза(Разрез.Значение);
		ИмяРазреза = ПолучитьИмяРазреза(Разрез.Значение);
		СоответствиеРазрезовИзмерениям.Добавить(фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(Разрез.Значение),ИмяРазреза);
		Если Найти(ИмяРазреза,"Разрез")=0 Тогда
			Продолжить;
		КонецЕсли;
		НомерРазреза = Сред(ИмяРазреза,СтрДлина("Разрез")+1);
		ЭлементПВХ = фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(Разрез.Значение);
		ЭтотОбъект["ТипРазреза"+НомерРазреза]=ЭлементПВХ;
		Для Каждого ТЧ Из СписокТЧ Цикл
			Элементы["БюджетныеОперацииРазрез"+НомерРазреза].Видимость 	= Истина;
		КонецЦикла;
		Для Каждого ТЧ Из СписокТЧ Цикл
			Элементы["БюджетныеОперацииРазрез"+НомерРазреза].Заголовок = ?(СокрЛП(ЭлементПВХ.ПредставлениеДополнительногоРеквизита)="",Строка(ЭлементПВХ),ЭлементПВХ.ПредставлениеДополнительногоРеквизита);
			Элементы["БюджетныеОперацииРазрез"+НомерРазреза].ОграничениеТипа = ЭлементПВХ.ТипЗначения;
		КонецЦикла;
		ОбработанныеРазрезы.Добавить(ИмяРазреза);
	КонецЦикла;
	Для Инд=1 По 10 Цикл
		//Элементы["БюджетныеОперацииРазрез"+НомерРазреза]
		ИмяЭлемента = "Разрез"+Строка(Инд);
		Если ОбработанныеРазрезы.Найти(имяЭлемента)=Неопределено Тогда
			Для Каждого ТЧ Из СписокТЧ Цикл
				Элементы["БюджетныеОперации"+ИмяЭлемента].Видимость 			= Ложь;
				//Элементы["БюджетныеОперации"+ИмяЭлемента].ИзменятьВидимость 	= Ложь;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура АвтозаполнениеНаСервере()
	Объект.БюджетныеОперации.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_ОборотыБюджетовОбороты.ПериодПланирования КАК Период,
		|	фин_ОборотыБюджетовОбороты.ФинансовыйПоказатель,
		|	фин_ОборотыБюджетовОбороты.Проект,
		|	фин_ОборотыБюджетовОбороты.Контрагент,
		|	фин_ОборотыБюджетовОбороты.Номенклатура,
		|	фин_ОборотыБюджетовОбороты.Валюта,
		|	фин_ОборотыБюджетовОбороты.КоличествоОборот КАК Количество,
		|	фин_ОборотыБюджетовОбороты.ВалютнаяСуммаОборот КАК Сумма,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез1,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез2,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез3,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез4,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез5,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез6,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез7,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез8,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез9,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез10
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	РегистрНакопления.фин_ОборотыБюджетов.Обороты(
		|			,
		|			,
		|			,
		|			ПериодПланирования >= &ДатаНачала
		|				И ПериодПланирования <= &ДатаКонца
		|				И Сценарий = &ПустойСценарий
		|				И ВЫБОР
		|					КОГДА &БюджетированиеПоОрганизациям
		|						ТОГДА Организация = &Организация
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &УправленческоеПодразделение <> &ПустоеПодразделение
		|						ТОГДА УправленческоеПодразделение = &УправленческоеПодразделение
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ФинансовыйПоказатель <> &ПустойФинансовыйПоказатель
		|						ТОГДА ФинансовыйПоказатель = &ФинансовыйПоказатель
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК фин_ОборотыБюджетовОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.фин_КлассификаторНаборовДополнительныхРазрезов КАК фин_КлассификаторНаборовДополнительныхРазрезов
		|		ПО фин_ОборотыБюджетовОбороты.ДополнительныеРазрезы = фин_КлассификаторНаборовДополнительныхРазрезов.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	фин_ОборотыБюджетовОбороты.ПериодПланирования,
		|	фин_ОборотыБюджетовОбороты.ФинансовыйПоказатель,
		|	фин_ОборотыБюджетовОбороты.Проект,
		|	фин_ОборотыБюджетовОбороты.Контрагент,
		|	фин_ОборотыБюджетовОбороты.Номенклатура,
		|	фин_ОборотыБюджетовОбороты.Валюта,
		|	фин_ОборотыБюджетовОбороты.КоличествоОборот,
		|	фин_ОборотыБюджетовОбороты.ВалютнаяСуммаОборот,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез1,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез2,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез3,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез4,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез5,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез6,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез7,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез8,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез9,
		|	фин_КлассификаторНаборовДополнительныхРазрезов.Разрез10
		|ИЗ
		|	РегистрНакопления.фин_ФактическиеОборотыБюджетов.Обороты(
		|			,
		|			,
		|			,
		|			ПериодПланирования >= &ДатаНачала
		|				И ПериодПланирования <= &ДатаКонца
		|				И ВЫБОР
		|					КОГДА &БюджетированиеПоОрганизациям
		|						ТОГДА Организация = &Организация
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &УправленческоеПодразделение <> &ПустоеПодразделение
		|						ТОГДА УправленческоеПодразделение = &УправленческоеПодразделение
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ФинансовыйПоказатель <> &ПустойФинансовыйПоказатель
		|						ТОГДА ФинансовыйПоказатель = &ФинансовыйПоказатель
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК фин_ОборотыБюджетовОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.фин_КлассификаторНаборовДополнительныхРазрезов КАК фин_КлассификаторНаборовДополнительныхРазрезов
		|		ПО фин_ОборотыБюджетовОбороты.ДополнительныеРазрезы = фин_КлассификаторНаборовДополнительныхРазрезов.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Период,
		|	ВТ.ФинансовыйПоказатель,
		|	ВТ.Проект,
		|	ВТ.Контрагент,
		|	ВТ.Номенклатура,
		|	ВТ.Валюта,
		|	СУММА(ВТ.Количество) КАК Количество,
		|	СУММА(ВТ.Сумма) КАК Сумма,
		|	ВТ.Разрез1,
		|	ВТ.Разрез2,
		|	ВТ.Разрез3,
		|	ВТ.Разрез4,
		|	ВТ.Разрез5,
		|	ВТ.Разрез6,
		|	ВТ.Разрез7,
		|	ВТ.Разрез8,
		|	ВТ.Разрез9,
		|	ВТ.Разрез10
		|ИЗ
		|	ВТ КАК ВТ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ.Разрез5,
		|	ВТ.Разрез10,
		|	ВТ.Разрез4,
		|	ВТ.Разрез6,
		|	ВТ.Разрез1,
		|	ВТ.Разрез7,
		|	ВТ.Период,
		|	ВТ.ФинансовыйПоказатель,
		|	ВТ.Разрез8,
		|	ВТ.Валюта,
		|	ВТ.Контрагент,
		|	ВТ.Номенклатура,
		|	ВТ.Проект,
		|	ВТ.Разрез2,
		|	ВТ.Разрез3,
		|	ВТ.Разрез9";
	
	Запрос.УстановитьПараметр("БюджетированиеПоОрганизациям", фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_БюджетированиеПоОрганизациям"));
	Запрос.УстановитьПараметр("ДатаКонца", КонецДня(Объект.ДатаКонца));
	Запрос.УстановитьПараметр("ДатаНачала", Объект.ДатаНачала);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ПустоеПодразделение", фин_ОбщегоНазначенияВызовСервераПовтИсп.ПустоеЗначениеРазреза("УправленческоеПодразделение"));
	Запрос.УстановитьПараметр("ПустойСценарий", фин_ОбщегоНазначенияВызовСервераПовтИсп.ПустаяСсылкаСценарий());
	Запрос.УстановитьПараметр("ПустойФинансовыйПоказатель", Справочники.фин_ФинансовыеПоказатели.ПустаяСсылка());
	Запрос.УстановитьПараметр("УправленческоеПодразделение", Объект.УправленческоеПодразделение);
	Запрос.УстановитьПараметр("ФинансовыйПоказатель", Объект.ФинансовыйПоказатель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	
	Объект.БюджетныеОперации.Загрузить(РезультатЗапроса.Выгрузить());

КонецПроцедуры

&НаСервере
Функция АдресДанныхТЧ()
	ТаблицаЗначений = Объект.БюджетныеОперации.Выгрузить();
	ТаблицаЗначений.Колонки.Период.Имя 	= "ПериодПланирования";
	ТаблицаЗначений.Колонки.Сумма.Имя 	= "ВалютнаяСумма";
	ТаблицаЗначений.Колонки.Добавить("СуммаУпр",Новый ОписаниеТипов("Число"));
	ВалютаУправленческогоУчета = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
	Для Каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		Если СтрокаТаблицы.ВалютнаяСумма=0 ИЛИ СтрокаТаблицы.Валюта = ВалютаУправленческогоУчета Тогда
			СтрокаТаблицы.СуммаУпр = СтрокаТаблицы.ВалютнаяСумма;
		Иначе
	
			КурсСтаройВалюты 	= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(СтрокаТаблицы.Валюта,	СтрокаТаблицы.ПериодПланирования);
			КурсНовойВалюты 	= фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(ВалютаУправленческогоУчета,		СтрокаТаблицы.ПериодПланирования);
			
			СтарыйКурс			= КурсСтаройВалюты.Курс;
			СтараяКратность 	= КурсСтаройВалюты.Кратность;
			
			СтрокаТаблицы.СуммаУпр = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.ВалютнаяСумма,
													СтрокаТаблицы.Валюта,ВалютаУправленческогоУчета,
													СтарыйКурс,КурсНовойВалюты.Курс,
													СтараяКратность,КурсНовойВалюты.Кратность);
		КонецЕсли;
	КонецЦикла;
	АдресТЧ = ПоместитьВоВременноеХранилище(ТаблицаЗначений,УникальныйИдентификатор);
	Возврат АдресТЧ;
КонецФункции

#КонецОбласти
