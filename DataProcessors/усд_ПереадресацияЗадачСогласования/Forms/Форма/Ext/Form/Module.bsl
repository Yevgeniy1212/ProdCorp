////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	НадписьУтверждениеДокументов = "Утверждение документов";
	Если Параметры.Свойство("ПереченьДокументов") Тогда
		Для Каждого ЭлементПараметра Из Параметры.ПереченьДокументов Цикл
			НоваяСтрока = Объект.ПереадресуемыеЗадачи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ЭлементПараметра);
			НоваяСтрока.ТекущийИсполнитель = ЭлементПараметра.Исполнитель;
			НоваяСтрока.Пометка = Истина;
		КонецЦикла;
	Иначе
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Форма не предназначена для самостоятельной работы");
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура УстановитьИсполнителя(Команда)
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		
		РезультатВыбора = Справочники.Пользователи.ПолучитьФормуВыбора().ОткрытьМодально();
		ПослеЗакрытияФормыВыбораПользователя(РезультатВыбора,Неопределено);
	#Иначе
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияФормыВыбораПользователя", ЭтотОбъект);
		ПараметрыФормыВыбора = Новый Структура("РежимВыбора", Истина);
		ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормыВыбора, ЭтотОбъект, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	Для Каждого СтрокаТЧ Из Объект.ПереадресуемыеЗадачи Цикл
		СтрокаТЧ.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	Для Каждого СтрокаТЧ Из Объект.ПереадресуемыеЗадачи Цикл
		СтрокаТЧ.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Переадресовать(Команда)
	ВыполнитьПереадресацию();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ПослеЗакрытияФормыВыбораПользователя(РезультатВыбора, ДополнительныеПараметры) Экспорт 
	
	Если ЗначениеЗаполнено(РезультатВыбора) Тогда
		Для Каждого СтрокаТЧ Из Объект.ПереадресуемыеЗадачи Цикл
			Если СтрокаТЧ.Пометка Тогда
				СтрокаТЧ.НовыйИсполнитель = РезультатВыбора;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПереадресацию()
	Для Каждого СтрокаТЧ Из Объект.ПереадресуемыеЗадачи Цикл
		Если СтрокаТЧ.Пометка И ЗначениеЗаполнено(СтрокаТЧ.НовыйИсполнитель) Тогда
			НачатьТранзакцию();
			НаборЗаписей = РегистрыСведений.усд_АктивныеЭтапыРассмотренияДокументов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(СтрокаТЧ.Документ);
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество()=0 Тогда
				Продолжить;
			КонецЕсли;
			НаборЗаписей[НаборЗаписей.Количество()-1].ОтветственноеЛицо = СтрокаТЧ.НовыйИсполнитель;
			Попытка
				НаборЗаписей.Записать();
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось переадресовать документ "+Строка(СтрокаТЧ.Документ)+":
				|	"+ОписаниеОшибки());
			КонецПопытки;
			ЗакрытьЗадачи(СтрокаТЧ);
			фин_ЗащитаПривилегированныеПроцедуры.ФормироватьЗадачу(	НаборЗаписей[НаборЗаписей.Количество()-1].Документ,
																	СтрокаТЧ.НовыйИсполнитель,
																	НаборЗаписей[НаборЗаписей.Количество()-1].Этап,
																	НаборЗаписей[НаборЗаписей.Количество()-1].Статус, 
																	фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ТекущийПользователь"),
																	НаборЗаписей[НаборЗаписей.Количество()-1].ВидДокументов,
																	НаборЗаписей[НаборЗаписей.Количество()-1].Маршрут);
			СтрокаТЧ.НовыйИсполнитель = Справочники.Пользователи.ПустаяСсылка();
			СтрокаТЧ.ТекущийИсполнитель = СтрокаТЧ.НовыйИсполнитель;
			СтрокаТЧ.Пометка = Ложь;
			ЗафиксироватьТранзакцию();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
 
&НаСервере
Процедура ЗакрытьЗадачи(СтрокаТЧ)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	усд_ЗадачиСогласованияДокументов.Ссылка
		|ИЗ
		|	Задача.усд_ЗадачиСогласованияДокументов КАК усд_ЗадачиСогласованияДокументов
		|ГДЕ
		|	усд_ЗадачиСогласованияДокументов.Объект = &Объект
		|	И усд_ЗадачиСогласованияДокументов.ВидДокументов = &ВидДокументов
		|	И усд_ЗадачиСогласованияДокументов.Маршрут = &Маршрут
		|	И НЕ усд_ЗадачиСогласованияДокументов.ПометкаУдаления
		|	И усд_ЗадачиСогласованияДокументов.Этап = &Этап
		|	И НЕ усд_ЗадачиСогласованияДокументов.Выполнена
		|	И (усд_ЗадачиСогласованияДокументов.Исполнитель = &Исполнитель ИЛИ усд_ЗадачиСогласованияДокументов.Исполнитель = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))";

	Запрос.УстановитьПараметр("ВидДокументов", 	СтрокаТЧ.ВидДокументов);
	Запрос.УстановитьПараметр("Исполнитель", 	СтрокаТЧ.ТекущийИсполнитель);
	Запрос.УстановитьПараметр("Маршрут", 		СтрокаТЧ.Маршрут);
	Запрос.УстановитьПараметр("Объект", 		СтрокаТЧ.Документ);
	Запрос.УстановитьПараметр("Этап", 			СтрокаТЧ.Этап);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбъектЗадача = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ОбъектЗадача.Исполнитель = СтрокаТЧ.НовыйИсполнитель;
		Попытка
			ОбъектЗадача.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось переадресовать задачу "+Строка(ВыборкаДетальныеЗаписи.Ссылка)+" по причине:
			|	"+ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры
