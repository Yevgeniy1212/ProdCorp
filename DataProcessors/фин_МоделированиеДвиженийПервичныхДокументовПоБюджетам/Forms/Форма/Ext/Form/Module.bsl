
&НаКлиенте
Процедура ДекорацияЗакрытьНажатие(Элемент)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура НадписьПроверкаНажатие(Элемент)
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	ВыполнитьПроверку();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПроверку()
	ТаблицаПереданныхДвижений = Новый Структура;
	фин_ПроцедурыМеханизмовБюджетирования.ЗаполнитьПередаваемыеДвижения(Объект.Документ.ПолучитьОбъект(),ТаблицаПереданныхДвижений,объект.ВидДокументов,объект.ВидДокументов.ПрограммныйИдентификатор);
	
	Шаблон 		= Объект.Шаблон;
	Источник 	= Объект.Документ.ПолучитьОбъект();
	
	МассивУдалить = Новый Массив;
	Для Каждого РеквизитФормы Из ЭтотОбъект.ПолучитьРеквизиты() Цикл
		Если Найти(РеквизитФормы.Имя,"Таблица_")<>0 Тогда
			МассивУдалить.Добавить(РеквизитФормы.Имя);
			Если Элементы.Найти(РеквизитФормы.Имя) <>Неопределено Тогда
				Элементы.Удалить(Элементы[РеквизитФормы.Имя]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Попытка
		ИзменитьРеквизиты(,МассивУдалить);
	Исключение
	КонецПопытки;
	ИмяРегистра = фин_ОбщегоНазначенияВызовСервераПовтИсп.РегистрФактическихДанныхДляДокумента(Объект.ВидДокументов).ИмяРегистра;
	// таблица основных оборотов и контролируемых финансовых показателей
	МассивРегистров = Новый СписокЗначений;
	МассивРегистров.Добавить(ИмяРегистра,"Таблица_"+ИмяРегистра);
	МассивРегистров.Добавить("фин_КонтролируемыеФинансовыеПоказатели","Таблица_фин_КонтролируемыеФинансовыеПоказатели");
	Для Каждого Регистр Из МассивРегистров Цикл                                
		ИмяТаблицы = Регистр.Представление;
		РеквизитТаблица 	= Новый РеквизитФормы(ИмяТаблицы,Новый ОписаниеТипов("ТаблицаЗначений"),,"Обороты бюджетов");
		МассивДобавить = Новый Массив;
		МассивДобавить.Добавить(РеквизитТаблица);
		ИзменитьРеквизиты(МассивДобавить);
		МассивДобавить = Новый Массив;
		РеквизитКолонка 	= Новый РеквизитФормы("Период",Новый ОписаниеТипов("Дата"),ИмяТаблицы,"Период");
		МассивДобавить.Добавить(РеквизитКолонка);
		РеквизитКолонка 	= Новый РеквизитФормы("НомерСтроки",Новый ОписаниеТипов("Число"),ИмяТаблицы,"НомерСтроки");
		МассивДобавить.Добавить(РеквизитКолонка);
		Для Каждого Колонка Из Метаданные.РегистрыНакопления[Регистр.Значение].Измерения Цикл
			РеквизитКолонка 	= Новый РеквизитФормы(Колонка.Имя,Колонка.Тип,ИмяТаблицы,Колонка.Синоним);
			МассивДобавить.Добавить(РеквизитКолонка);
		КонецЦикла;
		Для Каждого Колонка Из Метаданные.РегистрыНакопления[Регистр.Значение].Ресурсы Цикл
			РеквизитКолонка 	= Новый РеквизитФормы(Колонка.Имя,Колонка.Тип,ИмяТаблицы,Колонка.Синоним);
			МассивДобавить.Добавить(РеквизитКолонка);
		КонецЦикла;
		Для Каждого Колонка Из Метаданные.РегистрыНакопления[Регистр.Значение].Реквизиты Цикл
			РеквизитКолонка 	= Новый РеквизитФормы(Колонка.Имя,Колонка.Тип,ИмяТаблицы,Колонка.Синоним);
			МассивДобавить.Добавить(РеквизитКолонка);
		КонецЦикла;
		ИзменитьРеквизиты(МассивДобавить);
	КонецЦикла;
	
	Объект.Бюджетирование.Очистить();
	
	//формируем движения
	СтруктураТаблицРезультат = Новый Структура;
	НачатьТранзакцию();
	Отказ = Ложь;
	РегистрацияПрогнозныхДанных = фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмеютсяПравилаРегистрацииПрогнозныхДанных() И Источник.Метаданные().Движения.Содержит(Метаданные.РегистрыНакопления.фин_ПрогнозИсполненияБюджетов);
	РегистрацияЛимитов = фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмеютсяЛимитыНаИсполнение() И Источник.Метаданные().Движения.Содержит(Метаданные.РегистрыНакопления.фин_КонтролируемыеФинансовыеПоказатели);
	фин_РегистрацияФактическихДанныхПоБюджетированию.ФормироватьПроводкиПоБюджетированию(Источник.Ссылка, Отказ, Истина,ТаблицаПереданныхДвижений,?(Объект.Шаблон.Пустая(),Неопределено,Объект.Шаблон),,,РегистрацияПрогнозныхДанных,РегистрацияЛимитов);
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_УчитыватьФактическиеДанныеПоДвижениямРегистров") Тогда
		Для Каждого НаборДвижений Из Источник.Движения Цикл
			НаборДвижений.Прочитать();
			Если НаборДвижений.Количество()>0 Тогда
				ИмяНабора = НаборДвижений.Метаданные().Имя;
				ВидРегистра = НаборДвижений.Метаданные().ПолноеИмя();
				ВидРегистра = Лев(ВидРегистра,Найти(ВидРегистра,".")-1);
				Если ВидРегистра = "РегистрСведений" Тогда
					ВидРегистра = "РегистрыСведений";
				ИначеЕсли ВидРегистра = "РегистрНакопления" Тогда
					ВидРегистра = "РегистрыНакопления";
				ИначеЕсли ВидРегистра = "РегистрБухгалтерии" Тогда
					ВидРегистра = "РегистрыБухгалтерии";
				Иначе
					ВидРегистра = "РегистрыРасчета";
				КонецЕсли;
				Если ВидРегистра = "РегистрыБухгалтерии" Тогда
					Если ИмяНабора = "фин_Бюджетирование" Тогда
						Продолжить;
					КонецЕсли;
				ИначеЕсли ВидРегистра = "РегистрыНакопления" Тогда
					Если ИмяНабора="фин_ОборотыБюджетов"
						ИЛИ Найти(ИмяНабора,"фин_ФактическиеОборотыБюджетов")<>0
						ИЛИ ИмяНабора="фин_ЗначенияРасчетныхПоказателейЗаПериод"
						ИЛИ ИмяНабора="фин_КонтролируемыеФинансовыеПоказатели"
						ИЛИ ИмяНабора="фин_МониторингКорректировок"
						ИЛИ ИмяНабора="фин_МониторингНепринятияСтрокБюджетов"
						ИЛИ ИмяНабора="фин_ЗначенияРасчетныхПоказателейЗаПериод" Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				НаборШаблоновДляОтражения = Неопределено;
				Если НЕ фин_ПроцедурыМеханизмовБюджетирования.ПредусмотренаРегистрацияФактическихДанныхРегистром(ВидРегистра,ИмяНабора,Источник.Ссылка,НаборШаблоновДляОтражения) Тогда
					Продолжить;
				КонецЕсли;
				фин_РегистрацияФактическихДанныхПоБюджетированию.ФормироватьПроводкиПоБюджетированиюПоРегистрам(Источник.Ссылка,НаборДвижений.Выгрузить(),ВидРегистра,ИмяНабора,Отказ,Истина,НаборШаблоновДляОтражения,РегистрацияПрогнозныхДанных,РегистрацияЛимитов);
			КонецЕсли;
        КонецЦикла;
	КонецЕсли;
	Если Отказ=Истина Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При имитации проведения по бюджетам возникает ошибка - документ не будет проведен!");
	КонецЕсли;
	Источник.Движения[ИмяРегистра].Прочитать();
	СтруктураТаблицРезультат.Вставить("Таблица_"+ИмяРегистра,Источник.Движения[ИмяРегистра].Выгрузить());
	Если Источник.Метаданные().Движения.Содержит(Метаданные.РегистрыНакопления.фин_КонтролируемыеФинансовыеПоказатели) Тогда
		Источник.Движения.фин_КонтролируемыеФинансовыеПоказатели.Прочитать();
		СтруктураТаблицРезультат.Вставить("Таблица_фин_КонтролируемыеФинансовыеПоказатели",Источник.Движения.фин_КонтролируемыеФинансовыеПоказатели.Выгрузить());
	КонецЕсли;
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ВестиУчетПоПлануСчетовБюджетирования") И Источник.Метаданные().Движения.Содержит(Метаданные.РегистрыБухгалтерии.фин_Бюджетирование) Тогда
		Источник.Движения.фин_Бюджетирование.Прочитать();
		Объект.Бюджетирование.Загрузить(Источник.Движения.фин_Бюджетирование.Выгрузить());
	КонецЕсли;
	ОтменитьТранзакцию();
	// формируем визуальные таблицы
	
	ГруппаКолонок = Неопределено;
	Для Каждого Регистр Из МассивРегистров Цикл
		Имя = Регистр.Представление;
		Если СтруктураТаблицРезультат.Свойство(Имя)=Ложь Тогда
			Продолжить;
		КонецЕсли;
		ЭлементФормы = Элементы.Добавить(Имя,Тип("ТаблицаФормы"),?(Имя="Таблица_фин_КонтролируемыеФинансовыеПоказатели",Элементы.Страницы.ПодчиненныеЭлементы["м"+Имя],Элементы.Страницы.ПодчиненныеЭлементы.мТаблица_ОборотыБюджетов));
		ЭлементФормы.ПутьКДанным = Имя;
		Для Каждого Колонка Из СтруктураТаблицРезультат[Имя].Колонки Цикл
			Если Колонка.Имя="Регистратор" ИЛИ Колонка.Имя="Активность" ИЛИ Колонка.Имя="МоментВремени" Тогда
				Продолжить;
			КонецЕсли;
			РеквизитКолонка 			= Элементы.Добавить(Имя+Колонка.Имя,Тип("ПолеФормы"),ЭлементФормы);
			РеквизитКолонка.ПутьКДанным	= Имя+"."+Колонка.Имя;
			РеквизитКолонка.ТолькоПросмотр = Истина;
			//Если Колонка.Имя="Результат" Тогда
			//	ГруппаКолонок = Элементы.Добавить("РеквизитТаблицаГруппаПравил",Тип("ГруппаФормы"),ЭлементФормы);
			//	ГруппаКолонок.Вид = ВидГруппыФормы.ГруппаКолонок;
			//	ГруппаКолонок.Видимость = Истина;
			//	ГруппаКолонок.Заголовок = "Составные условия";
			//	ГруппаКолонок.ОтображатьВШапке = Истина;
			//	ГруппаКолонок.Группировка = ГруппировкаКолонок.Горизонтальная;
			//КонецЕсли;
			//РеквизитКолонка.ЦветФона = ?(Колонка.Имя="Результат",Новый Цвет(176,196,222),?(Найти(Колонка.Имя,"Результат")<>0,Новый Цвет(240,248,255),Новый Цвет(255,255,255)));
		КонецЦикла;
		// перенесем данные в таблицу
		ЗначениеВРеквизитФормы(СтруктураТаблицРезультат[Имя],Имя);
		ЭлементФормы.ИзменятьСоставСтрок = Ложь;
		ЭлементФормы.КоманднаяПанель.Видимость = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументовПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ВидДокументов) Тогда
		НастроитьТипДокумента();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура НастроитьТипДокумента()
	Элементы.Документ.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка."+Объект.ВидДокументов.ПрограммныйИдентификатор);	
	Объект.Документ = Элементы.Документ.ОграничениеТипа.ПривестиЗначение(Объект.Документ);
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЗафиксироватьНажатие(Элемент)
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	ВыполнитьЗапись();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗапись()
	ТаблицаПереданныхДвижений = Новый Структура;
	фин_ПроцедурыМеханизмовБюджетирования.ЗаполнитьПередаваемыеДвижения(Объект.Документ.ПолучитьОбъект(),ТаблицаПереданныхДвижений,объект.ВидДокументов,Объект.ВидДокументов.ПрограммныйИдентификатор);
	
	Шаблон 		= Объект.Шаблон;
	Источник 	= Объект.Документ.ПолучитьОбъект();
	Если (Строка(Источник.Метаданные().Проведение)="Разрешить") И (НЕ Источник.Проведен) Тогда
		Сообщить("Документ не проведен!");
		Возврат;
	КонецЕсли;
	
	МассивУдалить = Новый Массив;
	Для Каждого РеквизитФормы Из ЭтотОбъект.ПолучитьРеквизиты() Цикл
		Если Найти(РеквизитФормы.Имя,"Таблица_")<>0 Тогда
			МассивУдалить.Добавить(РеквизитФормы.Имя);
			Если Элементы.Найти(РеквизитФормы.Имя) <>Неопределено Тогда
				Элементы.Удалить(Элементы[РеквизитФормы.Имя]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Попытка
		ИзменитьРеквизиты(,МассивУдалить);
	Исключение
	КонецПопытки;
	ИмяРегистра = фин_ОбщегоНазначенияВызовСервераПовтИсп.РегистрФактическихДанныхДляДокумента(Объект.ВидДокументов).ИмяРегистра;
	// таблица основных оборотов и контролируемых финансовых показателей
	МассивРегистров = Новый СписокЗначений;
	МассивРегистров.Добавить(ИмяРегистра,"Таблица_"+ИмяРегистра);
	МассивРегистров.Добавить("фин_КонтролируемыеФинансовыеПоказатели","Таблица_фин_КонтролируемыеФинансовыеПоказатели");
	Для Каждого Регистр Из МассивРегистров Цикл
		ИмяТаблицы = Регистр.Представление;
		РеквизитТаблица 	= Новый РеквизитФормы(ИмяТаблицы,Новый ОписаниеТипов("ТаблицаЗначений"),,"Обороты бюджетов");
		МассивДобавить = Новый Массив;
		МассивДобавить.Добавить(РеквизитТаблица);
		ИзменитьРеквизиты(МассивДобавить);
		МассивДобавить = Новый Массив;
		РеквизитКолонка 	= Новый РеквизитФормы("Период",Новый ОписаниеТипов("Дата"),ИмяТаблицы,"Период");
		МассивДобавить.Добавить(РеквизитКолонка);
		РеквизитКолонка 	= Новый РеквизитФормы("НомерСтроки",Новый ОписаниеТипов("Число"),ИмяТаблицы,"НомерСтроки");
		МассивДобавить.Добавить(РеквизитКолонка);
		Для Каждого Колонка Из Метаданные.РегистрыНакопления[Регистр.Значение].Измерения Цикл
			РеквизитКолонка 	= Новый РеквизитФормы(Колонка.Имя,Колонка.Тип,ИмяТаблицы,Колонка.Синоним);
			МассивДобавить.Добавить(РеквизитКолонка);
		КонецЦикла;
		Для Каждого Колонка Из Метаданные.РегистрыНакопления[Регистр.Значение].Ресурсы Цикл
			РеквизитКолонка 	= Новый РеквизитФормы(Колонка.Имя,Колонка.Тип,ИмяТаблицы,Колонка.Синоним);
			МассивДобавить.Добавить(РеквизитКолонка);
		КонецЦикла;
		Для Каждого Колонка Из Метаданные.РегистрыНакопления[Регистр.Значение].Реквизиты Цикл
			РеквизитКолонка 	= Новый РеквизитФормы(Колонка.Имя,Колонка.Тип,ИмяТаблицы,Колонка.Синоним);
			МассивДобавить.Добавить(РеквизитКолонка);
		КонецЦикла;
		ИзменитьРеквизиты(МассивДобавить);
	КонецЦикла;
	
	Объект.Бюджетирование.Очистить();
	
	//формируем движения
	СтруктураТаблицРезультат = Новый Структура;
	НачатьТранзакцию();
	Отказ = Ложь;
	РегистрацияПрогнозныхДанных = фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмеютсяПравилаРегистрацииПрогнозныхДанных() И Источник.Метаданные().Движения.Содержит(Метаданные.РегистрыНакопления.фин_ПрогнозИсполненияБюджетов);
	РегистрацияЛимитов = фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмеютсяЛимитыНаИсполнение() И Источник.Метаданные().Движения.Содержит(Метаданные.РегистрыНакопления.фин_КонтролируемыеФинансовыеПоказатели);
	фин_РегистрацияФактическихДанныхПоБюджетированию.ФормироватьПроводкиПоБюджетированию(Источник.Ссылка, Отказ, Истина,ТаблицаПереданныхДвижений,?(Объект.Шаблон.Пустая(),Неопределено,Объект.Шаблон),,,РегистрацияПрогнозныхДанных,РегистрацияЛимитов);
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_УчитыватьФактическиеДанныеПоДвижениямРегистров") Тогда
		Для Каждого НаборДвижений Из Источник.Движения Цикл
			НаборДвижений.Прочитать();
			Если НаборДвижений.Количество()>0 Тогда
				ИмяНабора = НаборДвижений.Метаданные().Имя;
				ВидРегистра = НаборДвижений.Метаданные().ПолноеИмя();
				ВидРегистра = Лев(ВидРегистра,Найти(ВидРегистра,".")-1);
				Если ВидРегистра = "РегистрСведений" Тогда
					ВидРегистра = "РегистрыСведений";
				ИначеЕсли ВидРегистра = "РегистрНакопления" Тогда
					ВидРегистра = "РегистрыНакопления";
				ИначеЕсли ВидРегистра = "РегистрБухгалтерии" Тогда
					ВидРегистра = "РегистрыБухгалтерии";
				Иначе
					ВидРегистра = "РегистрыРасчета";
				КонецЕсли;
				Если ВидРегистра = "РегистрыБухгалтерии" Тогда
					Если ИмяНабора = "фин_Бюджетирование" Тогда
						Продолжить;
					КонецЕсли;
				ИначеЕсли ВидРегистра = "РегистрыНакопления" Тогда
					Если ИмяНабора="фин_ОборотыБюджетов"
						ИЛИ Найти(ИмяНабора,"фин_ФактическиеОборотыБюджетов")<>0
						ИЛИ ИмяНабора="фин_ЗначенияРасчетныхПоказателейЗаПериод"
						ИЛИ ИмяНабора="фин_КонтролируемыеФинансовыеПоказатели"
						ИЛИ ИмяНабора="фин_МониторингКорректировок"
						ИЛИ ИмяНабора="фин_МониторингНепринятияСтрокБюджетов"
						ИЛИ ИмяНабора="фин_ЗначенияРасчетныхПоказателейЗаПериод" Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				НаборШаблоновДляОтражения = Неопределено;
				Если НЕ фин_ПроцедурыМеханизмовБюджетирования.ПредусмотренаРегистрацияФактическихДанныхРегистром(ВидРегистра,ИмяНабора,Источник.Ссылка,НаборШаблоновДляОтражения) Тогда
					Продолжить;
				КонецЕсли;
				фин_РегистрацияФактическихДанныхПоБюджетированию.ФормироватьПроводкиПоБюджетированиюПоРегистрам(Источник.Ссылка,НаборДвижений.Выгрузить(),ВидРегистра,ИмяНабора,Отказ,Истина,НаборШаблоновДляОтражения,РегистрацияПрогнозныхДанных,РегистрацияЛимитов);
			КонецЕсли;
        КонецЦикла;
	КонецЕсли;
	Если Отказ=Истина Тогда
		Сообщить("При имитации проведения по бюджетам возникает ошибка - документ не будет проведен!");
	КонецЕсли;
	Источник.Движения[ИмяРегистра].Прочитать();
	СтруктураТаблицРезультат.Вставить("Таблица_"+ИмяРегистра,Источник.Движения[ИмяРегистра].Выгрузить());
	Если Источник.Метаданные().Движения.Содержит(Метаданные.РегистрыНакопления.фин_КонтролируемыеФинансовыеПоказатели) Тогда
		Источник.Движения.фин_КонтролируемыеФинансовыеПоказатели.Прочитать();
		СтруктураТаблицРезультат.Вставить("Таблица_фин_КонтролируемыеФинансовыеПоказатели",Источник.Движения.фин_КонтролируемыеФинансовыеПоказатели.Выгрузить());
	КонецЕсли;
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ВестиУчетПоПлануСчетовБюджетирования") И Источник.Метаданные().Движения.Содержит(Метаданные.РегистрыБухгалтерии.фин_Бюджетирование) Тогда
		Источник.Движения.фин_Бюджетирование.Прочитать();
		Объект.Бюджетирование.Загрузить(Источник.Движения.фин_Бюджетирование.Выгрузить());
	КонецЕсли;
	ЗафиксироватьТранзакцию();
	// формируем визуальные таблицы
	
	ГруппаКолонок = Неопределено;
	Для Каждого Регистр Из МассивРегистров Цикл
		Имя = Регистр.Представление;
		Если СтруктураТаблицРезультат.Свойство(Имя)=Ложь Тогда
			Продолжить;
		КонецЕсли;
		ЭлементФормы = Элементы.Добавить(Имя,Тип("ТаблицаФормы"),?(Имя="Таблица_фин_КонтролируемыеФинансовыеПоказатели",Элементы.Страницы.ПодчиненныеЭлементы["м"+Имя],Элементы.Страницы.ПодчиненныеЭлементы.мТаблица_ОборотыБюджетов));
		ЭлементФормы.ПутьКДанным = Имя;
		Для Каждого Колонка Из СтруктураТаблицРезультат[Имя].Колонки Цикл
			Если Колонка.Имя="Регистратор" ИЛИ Колонка.Имя="Активность" ИЛИ Колонка.Имя="МоментВремени" Тогда
				Продолжить;
			КонецЕсли;
			РеквизитКолонка 			= Элементы.Добавить(Имя+Колонка.Имя,Тип("ПолеФормы"),ЭлементФормы);
			РеквизитКолонка.ПутьКДанным	= Имя+"."+Колонка.Имя;
			РеквизитКолонка.ТолькоПросмотр = Истина;
			//Если Колонка.Имя="Результат" Тогда
			//	ГруппаКолонок = Элементы.Добавить("РеквизитТаблицаГруппаПравил",Тип("ГруппаФормы"),ЭлементФормы);
			//	ГруппаКолонок.Вид = ВидГруппыФормы.ГруппаКолонок;
			//	ГруппаКолонок.Видимость = Истина;
			//	ГруппаКолонок.Заголовок = "Составные условия";
			//	ГруппаКолонок.ОтображатьВШапке = Истина;
			//	ГруппаКолонок.Группировка = ГруппировкаКолонок.Горизонтальная;
			//КонецЕсли;
			//РеквизитКолонка.ЦветФона = ?(Колонка.Имя="Результат",Новый Цвет(176,196,222),?(Найти(Колонка.Имя,"Результат")<>0,Новый Цвет(240,248,255),Новый Цвет(255,255,255)));
		КонецЦикла;
		// перенесем данные в таблицу
		ЗначениеВРеквизитФормы(СтруктураТаблицРезультат[Имя],Имя);
		ЭлементФормы.ИзменятьСоставСтрок = Ложь;
		ЭлементФормы.КоманднаяПанель.Видимость = Ложь;
	КонецЦикла;
КонецПроцедуры

