
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	фин_БюджетированиеОбщегоНазначения.НастроитьОформлениеТабличногоПоля(Элементы.мДеревоСловаря);
	мЯзык 	= Объект.Язык;
	мГруппа	= Объект.ГруппаТерминов;
	ЗаполнитьДерево();
	МассивТипов = фин_ОбщегоНазначенияВызовСервераПовтИсп.ОписаниеТиповТерминовБюджетирования().Типы();
	Для Каждого Тип Из МассивТипов Цикл
		МассивТип = Новый Массив;
		МассивТип.Добавить(Тип);
		ОписаниеТипа = Новый ОписаниеТипов(МассивТип);
		СписокКатегорий.Добавить(ОписаниеТипа.ПривестиЗначение(Неопределено),Строка(Тип));
	КонецЦикла;
КонецПроцедуры

//Заполняет дерево словаря
// 
Процедура ЗаполнитьДерево()
	ДеревоСловаря = ДанныеФормыВЗначение(мДеревоСловаря,Тип("ДеревоЗначений"));
	ДеревоСловаря.Строки.Очистить();
	НаборМодифицирован = Ложь;
	Если Объект.Язык.Пустая() Тогда
		Возврат;
	КонецЕсли;
	Если Объект.ГруппаТерминовПредставление="" Тогда
		Возврат;
	КонецЕсли;
	Подчиненный = Объект.ГруппаТерминов.Метаданные().Владельцы.Количество()<>0;
	ИмяСправочника = Объект.ГруппаТерминов.Метаданные().Имя;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ"+?(Подчиненный,"
					|	Справочник.Владелец КАК Владелец,","")+"
	               |	Справочник.Ссылка КАК Ссылка,
	               |	Словарь.Перевод КАК Перевод
	               |ИЗ
	               |	Справочник."+ИмяСправочника+" КАК Справочник
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.фин_СловарьТерминовБюджетирования КАК Словарь
	               |		ПО Справочник.Ссылка = Словарь.Термин
	               |			И (&ЯзыкПеревода = Словарь.ЯзыкПеревода)
	               |			И (&ГруппаТерминов = Словарь.ГруппаТерминов)
				   |ГДЕ НЕ Справочник.ПометкаУдаления
				   |ИТОГИ 
				   |	МАКСИМУМ(Перевод)
				   |ПО"+?(Подчиненный,"
				   |	Владелец,","")+"
	               |	Ссылка";
	Если Объект.ГруппаТерминов.Метаданные().Иерархический Тогда
	   Запрос.Текст = Запрос.Текст +" ИЕРАРХИЯ";
	КонецЕсли;
	Запрос.УстановитьПараметр("ЯзыкПеревода",	Объект.Язык);
	Запрос.УстановитьПараметр("ГруппаТерминов",	Объект.ГруппаТерминов);
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Если Подчиненный Тогда
			ВыборкаПоИерархии = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Владелец");
			Пока ВыборкаПоИерархии.Следующий() Цикл
				СтрокаДерева 				= ДеревоСловаря.Строки.Добавить();
				СтрокаДерева.ЭтоВладелец 	= Истина;
				СтрокаДерева.Термин 		= ВыборкаПоИерархии.Владелец;
				СтрокаДерева.Код 			= ВыборкаПоИерархии.Владелец.Код;
				ТекущаяВыборка = ВыборкаПоИерархии.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Ссылка");
				ЗаполнитьДеревоИзВыборки(ТекущаяВыборка,СтрокаДерева.Строки);
			КонецЦикла;
		Иначе
			ТекущаяВыборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Ссылка");
			ЗаполнитьДеревоИзВыборки(ТекущаяВыборка,ДеревоСловаря.Строки);
		КонецЕсли;
		ДеревоСловаря.Строки.Сортировать("Термин",Истина);
	КонецЕсли;
	ЗначениеВДанныеФормы(ДеревоСловаря,мДеревоСловаря);
КонецПроцедуры //ЗаполнитьДерево

//Процедура ЗаполнитьДеревоИзВыборки
//
Процедура ЗаполнитьДеревоИзВыборки(Выборка,КоллекцияСтрок)
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТипЗаписи()=ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			Продолжить;
		КонецЕсли;
		Если Объект.ГруппаТерминов.Метаданные().Иерархический Тогда
			СуществующиеСтроки = КоллекцияСтрок.НайтиСтроки(Новый Структура("Термин",Выборка.Ссылка),Истина);
			Если СуществующиеСтроки.Количество()<>0 Тогда
				Если Выборка.ТипЗаписи()=ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
					СуществующиеСтроки[0].Перевод = Выборка.Перевод;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			НаборСтрок = КоллекцияСтрок;
			Если НЕ Выборка.Ссылка.Родитель.Пустая() Тогда
				СтрокиРодителя = КоллекцияСтрок.НайтиСтроки(Новый Структура("Термин",Выборка.Ссылка.Родитель),Истина);
				НаборСтрок = СтрокиРодителя[0].Строки;
			КонецЕсли;
			СтрокаДерева = НаборСтрок.Добавить();
			СтрокаДерева.Термин	= Выборка.Ссылка;
			СтрокаДерева.Код 	= Выборка.Ссылка.Код;
			Если Выборка.ТипЗаписи()=ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
				СтрокаДерева.Перевод 	= Выборка.Перевод;
			КонецЕсли;
		ИначеЕсли Выборка.ТипЗаписи()=ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
			СтрокаДерева = КоллекцияСтрок.Добавить();
			СтрокаДерева.Термин 	= Выборка.Ссылка;
			СтрокаДерева.Перевод 	= Выборка.Перевод;
			СтрокаДерева.Код		= Выборка.Ссылка.Код;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры //ЗаполнитьДеревоИзВыборки

&НаКлиенте
Процедура ЯзыкПриИзменении(Элемент)
	Если мЯзык <> Объект.Язык Тогда
		Если НаборМодифицирован=Истина Тогда
			Обработчик = Новый ОписаниеОповещения("ОбработатьВопросОСохранении","Сохранение");
			ПоказатьВопрос(Обработчик,"Сохранить изменения в переводе?",РежимДиалогаВопрос.ДаНетОтмена,,КодВозвратаДиалога.Отмена,"Внимание!!! Изменения в переводе не сохранены!");
		Иначе
			ЗаполнитьДерево();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВопросОСохранении(Ответ,Режим) Экспорт
	Если Ответ=КодВозвратаДиалога.Да Тогда
		СохранитьДанныеСтрок();
		НаборМодифицирован = Ложь;
		Если Режим = "Сохранение" Тогда
			ЗаполнитьДерево();
		КонецЕсли;
		мЯзык = Объект.Язык;
		Если Режим<>Неопределено И ТипЗнч(Режим)<>Тип("Строка") Тогда
			Объект.ГруппаТерминов 				= Режим;
			Объект.ГруппаТерминовПредставление 	= СписокКатегорий.НайтиПоЗначению(Режим).Представление;
			ЗаполнитьДерево();
			мГруппа = Объект.ГруппаТерминов;
		КонецЕсли;
	ИначеЕсли Режим = "Сохранение" Тогда
		Объект.Язык = мЯзык;
	Иначе
		Закрыть();
	КонецЕсли;
КонецПроцедуры
			
&НаСервере
Процедура СохранитьДанныеСтрок()
	Для Каждого СтрокаДерева Из мДеревоСловаря.ПолучитьЭлементы() Цикл
		СохранитьДанныеСтроки(СтрокаДерева);
	КонецЦикла;
КонецПроцедуры

// записывает перевод в  регистр
//
&НаСервере
Процедура СохранитьДанныеСтроки(СтрокаДерева)
	Если НЕ СтрокаДерева.ЭтоВладелец Тогда
		Запись = РегистрыСведений.фин_СловарьТерминовБюджетирования.СоздатьМенеджерЗаписи();
		Запись.ГруппаТерминов 	= Объект.ГруппаТерминов;
		Запись.ЯзыкПеревода 	= Объект.Язык;
		Запись.Термин 			= СтрокаДерева.Термин;
		Запись.Прочитать();
		Если Запись.Выбран() Тогда
			Если Запись.Перевод <> СокрЛП(СтрокаДерева.Перевод) Тогда
				Если СокрЛП(СтрокаДерева.Перевод)="" Тогда
					Запись.Удалить();
				Иначе
					Запись.ГруппаТерминов 	= Объект.ГруппаТерминов;
					Запись.ЯзыкПеревода 	= Объект.Язык;
					Запись.Термин 			= СтрокаДерева.Термин;
					Запись.Перевод 			= СокрЛП(СтрокаДерева.Перевод);
					Запись.Записать(Истина);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли СокрЛП(СтрокаДерева.Перевод)<>"" Тогда
			Запись.ГруппаТерминов 	= Объект.ГруппаТерминов;
			Запись.ЯзыкПеревода 	= Объект.Язык;
			Запись.Термин 			= СтрокаДерева.Термин;
			Запись.Перевод 			= СокрЛП(СтрокаДерева.Перевод);
			Запись.Записать(Ложь);
		КонецЕсли;
	КонецЕсли;
	Для Каждого СтрокаПодчиненная Из СтрокаДерева.ПолучитьЭлементы() Цикл
		СохранитьДанныеСтроки(СтрокаПодчиненная);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если НаборМодифицирован=Истина Тогда
		Обработчик = Новый ОписаниеОповещения("ОбработатьВопросОСохранении",ЭтотОбъект);
		ПоказатьВопрос(Обработчик,"Сохранить изменения в переводе?",РежимДиалогаВопрос.ДаНетОтмена,,КодВозвратаДиалога.Отмена,"Внимание!!! Изменения в переводе не сохранены!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	СохранитьДанныеСтрок();
	НаборМодифицирован = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьДанныеСтрок();
	НаборМодифицирован = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	Если НаборМодифицирован=Истина Тогда
		Обработчик = Новый ОписаниеОповещения("ОбработатьВопросОСохранении",ЭтотОбъект,"Сохранение");
		ПоказатьВопрос(Обработчик,"Сохранить изменения в переводе?",РежимДиалогаВопрос.ДаНетОтмена,,КодВозвратаДиалога.Отмена,"Внимание!!! Изменения в переводе не сохранены!");
	Иначе
		ЗаполнитьДерево();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура мДеревоСловаряПереводПриИзменении(Элемент)
	НаборМодифицирован = Истина;	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаТерминовПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокКатегорий;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаТерминовПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если мГруппа <> ВыбранноеЗначение Тогда
		Если НаборМодифицирован=Истина Тогда
			Обработчик = Новый ОписаниеОповещения("ОбработатьВопросОСохранении",ЭтотОбъект,ВыбранноеЗначение);
			ПоказатьВопрос(Обработчик,"Сохранить изменения в переводе?",РежимДиалогаВопрос.ДаНетОтмена,,КодВозвратаДиалога.Отмена,"Внимание!!! Изменения в переводе не сохранены!");
		Иначе
			Объект.ГруппаТерминов 				= ВыбранноеЗначение;
			Объект.ГруппаТерминовПредставление 	= СписокКатегорий.НайтиПоЗначению(ВыбранноеЗначение).Представление;
			ЗаполнитьДерево();
			мГруппа = Объект.ГруппаТерминов;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
