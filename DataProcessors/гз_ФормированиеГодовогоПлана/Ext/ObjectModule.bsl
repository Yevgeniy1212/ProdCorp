////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура заполняет список планов закупок
//
Процедура ЗаполнитьСписокЗаявок() Экспорт 
	СписокГодовыхЗаявок.Очистить();
	СписокГодовыхЗаявок.Загрузить(гз_ПроцедурыОперативногоУчетаЗакупок.ЗаполнитьСписокЗаявокДляФормированияГП(ГодовойПлан));
КонецПроцедуры

// Функция определяет вид операции формируемого документа
//
// Параметры:
//  Нет.
// Возвращаемое значение:
//  Значение перечисления - вид операции документа Годовой план
//
Функция ОпределитьВидОперации() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Год", ГодовойПлан.Год);
	Запрос.УстановитьПараметр("Организация", ГодовойПлан.Организация);
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.гз_ВидыОперацийДокументовПланированияЗакупок.Планирование);
	Запрос.УстановитьПараметр("ВидПланаЗакупок", ГодовойПлан.ВидПланаЗакупок);
	Запрос.Текст =  "ВЫБРАТЬ
	                |	гз_ГодовойПлан.Ссылка
	                |ИЗ
	                |	Документ.гз_ГодовойПлан КАК гз_ГодовойПлан
	                |ГДЕ
	                |	гз_ГодовойПлан.Год = &Год
	                |	И гз_ГодовойПлан.Организация = &Организация
	                |	И гз_ГодовойПлан.Проведен
	                |	И гз_ГодовойПлан.ВидОперации = &ВидОперации
	                |	И (НЕ гз_ГодовойПлан.ПометкаУдаления)
	                |	И гз_ГодовойПлан.ВидПланаЗакупок = &ВидПланаЗакупок";
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда 
		Возврат Перечисления.гз_ВидыОперацийДокументовПланированияЗакупок.Корректировка;
	Иначе 
		Возврат Перечисления.гз_ВидыОперацийДокументовПланированияЗакупок.Планирование;
	КонецЕсли;
	
КонецФункции

// Функция формирует запрос для получения таблицы цен номенклатуры
//
// Параметры:
//  МассивНоменклатуры.
//
// Возвращаемое значение:
//  Таблица значений, содержащая колонки Номенклатура и Цена
//  
Функция ПолучитьТаблицуЦенНоменклатуры(МассивНоменклатуры) Экспорт 
	
	Возврат гз_ПроцедурыОперативногоУчетаЗакупок.мПолучитьТаблицуЦенНоменклатуры(МассивНоменклатуры,ГодовойПлан.Организация,ГодовойПлан.Год);
	
КонецФункции //ПолучитьТаблицуЦенНоменклатуры()

// Функция формирует таблицу планов закупок подразделений
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Таблица значений, содержащая планы закупок подразделений
//  
Функция СформироватьТаблицуПлановПодразделений() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Год", ГодовойПлан.Год);
	Запрос.УстановитьПараметр("Организация", ГодовойПлан.Организация);
	Запрос.УстановитьПараметр("СостояниеОтменена", Перечисления.гз_СостояниеДокумента.Отменена);
	Запрос.Текст = "ВЫБРАТЬ
				   |	гз_ПланЗакупокПодразделения.Ссылка,
				   |	гз_ПланЗакупокПодразделения.ПометкаУдаления,
				   |	гз_ПланЗакупокПодразделения.Номер,
				   |	гз_ПланЗакупокПодразделения.Дата,
				   |	гз_ПланЗакупокПодразделения.Проведен,
				   |	гз_ПланЗакупокПодразделения.Автор,
				   |	гз_ПланЗакупокПодразделения.Год,
				   |	гз_ПланЗакупокПодразделения.Комментарий,
				   |	гз_ПланЗакупокПодразделения.Организация,
				   |	гз_ПланЗакупокПодразделения.Ответственный,
				   |	гз_ПланЗакупокПодразделения.ПодразделениеОрганизации,
				   |	гз_ПланЗакупокПодразделения.РучнаяКорректировка,
				   |	гз_ПланЗакупокПодразделения.Состояние,
				   |	гз_ПланЗакупокПодразделения.СоставЗаявкиТовары.(
				   |		Ссылка,
				   |		НомерСтроки,
				   |		Количество,
				   |		Номенклатура,
				   |		ПериодПоставки
				   |	),
				   |	гз_ПланЗакупокПодразделения.Представление,
				   |	гз_ПланЗакупокПодразделения.МоментВремени
				   |ИЗ
				   |	Документ.гз_ПланЗакупокПодразделения КАК гз_ПланЗакупокПодразделения
				   |ГДЕ
				   |	гз_ПланЗакупокПодразделения.Год = &Год
				   |	И гз_ПланЗакупокПодразделения.Организация = &Организация
				   |	И гз_ПланЗакупокПодразделения.Состояние <> &СостояниеОтменена
				   |	И (НЕ гз_ПланЗакупокПодразделения.УчтенаВГодовомПлане)";
				   
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции //СформироватьТаблицуПлановПодразделений()






