

&НаСервере
Процедура Заполнить()
	Заголовок = "Просмотр движений документа "+Строка(Объект.Документ);
	Объект.РучнаяКорректировка = ?(куфиб_ОбщегоНазначения.ЕстьРеквизитДокумента("РучнаяКорректировка",Объект.Документ.Метаданные()),Объект.Документ.РучнаяКорректировка,Ложь);
	МассивУдалить = Новый Массив;
	Для Каждого РеквизитФормы Из ЭтаФорма.ПолучитьРеквизиты() Цикл
		Если Найти(РеквизитФормы.Имя,"Таблица_")<>0 Тогда
			МассивУдалить.Добавить(РеквизитФормы.Имя);
			Если Элементы.Найти(РеквизитФормы.Имя) <>Неопределено Тогда
				Элементы.Удалить(Элементы[РеквизитФормы.Имя]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Попытка
		ИзменитьРеквизиты(,МассивУдалить);
	Исключение
	КонецПопытки;
	// таблица основных оборотов и контролируемых финансовых показателей
	МассивРегистров = Новый СписокЗначений;
	Для Каждого Движение Из Объект.Документ.Метаданные().Движения Цикл
		Группа = СтрЗаменить(Лев(Движение.ПолноеИмя(),Найти(Движение.ПолноеИмя(),".")-1),"Регистр","Регистры");
		Если Группа = "РегистрыБухгалтерии" Тогда
			Продолжить;
		КонецЕсли;
		МассивРегистров.Добавить(Движение.Имя,Группа);
	КонецЦикла;
	Для Каждого Регистр Из МассивРегистров Цикл
		ИмяТаблицы = "Таблица_"+Регистр.Значение;
		РеквизитТаблица 	= Новый РеквизитФормы(ИмяТаблицы,Новый ОписаниеТипов("ТаблицаЗначений"),,Метаданные[Регистр.Представление][Регистр.Значение].Синоним);
		МассивДобавить = Новый Массив;
		МассивДобавить.Добавить(РеквизитТаблица);
		ИзменитьРеквизиты(МассивДобавить);
		МассивДобавить = Новый Массив;
		Если Регистр.Представление<>"РегистрыРасчета" И НЕ (Регистр.Представление="РегистрыСведений" И Строка(Метаданные.РегистрыСведений.Найти(Регистр.Значение).ПериодичностьРегистраСведений) = "Непериодический") Тогда
			РеквизитКолонка 	= Новый РеквизитФормы("Период",Новый ОписаниеТипов("Дата"),ИмяТаблицы,"Период");
			МассивДобавить.Добавить(РеквизитКолонка);
		КонецЕсли;
		РеквизитКолонка 	= Новый РеквизитФормы("НомерСтроки",Новый ОписаниеТипов("Число"),ИмяТаблицы,"НомерСтроки");
		МассивДобавить.Добавить(РеквизитКолонка);
		Если Регистр.Представление="РегистрыНакопления" И Строка(Метаданные.РегистрыНакопления.Найти(Регистр.Значение).ВидРегистра) = "Остатки" Тогда
			РеквизитКолонка 	= Новый РеквизитФормы("ВидДвижения",Новый ОписаниеТипов("ВидДвиженияНакопления"),ИмяТаблицы,"НомерСтроки");
			МассивДобавить.Добавить(РеквизитКолонка);
		КонецЕсли;
		Если Регистр.Представление="РегистрыРасчета" Тогда
			РеквизитКолонка 	= Новый РеквизитФормы("ПериодРегистрации",Новый ОписаниеТипов("Дата"),ИмяТаблицы,"ПериодРегистрации");
			МассивДобавить.Добавить(РеквизитКолонка);
			РеквизитКолонка 	= Новый РеквизитФормы("Сторно",Новый ОписаниеТипов("Булево"),ИмяТаблицы,"Сторно");
			МассивДобавить.Добавить(РеквизитКолонка);
			ТипыВР = Новый Массив;
			Для Каждого ВР Из Метаданные.ПланыВидовРасчета Цикл
				ТипыВР.Добавить(Тип("ПланВидовРасчетаСсылка."+ВР.Имя));
			КонецЦикла;
			РеквизитКолонка 	= Новый РеквизитФормы("ВидРасчета",Новый ОписаниеТипов(ТипыВР),ИмяТаблицы,"ВидРасчета");
			МассивДобавить.Добавить(РеквизитКолонка);
		КонецЕсли;
		Для Каждого Колонка Из Метаданные[Регистр.Представление][Регистр.Значение].Измерения Цикл
			РеквизитКолонка 	= Новый РеквизитФормы(Колонка.Имя,Колонка.Тип,ИмяТаблицы,Колонка.Синоним);
			МассивДобавить.Добавить(РеквизитКолонка);
		КонецЦикла;
		Для Каждого Колонка Из Метаданные[Регистр.Представление][Регистр.Значение].Ресурсы Цикл
			РеквизитКолонка 	= Новый РеквизитФормы(Колонка.Имя,Колонка.Тип,ИмяТаблицы,Колонка.Синоним);
			МассивДобавить.Добавить(РеквизитКолонка);
		КонецЦикла;
		Для Каждого Колонка Из Метаданные[Регистр.Представление][Регистр.Значение].Реквизиты Цикл
			РеквизитКолонка 	= Новый РеквизитФормы(Колонка.Имя,Колонка.Тип,ИмяТаблицы,Колонка.Синоним);
			МассивДобавить.Добавить(РеквизитКолонка);
		КонецЦикла;
		Если Регистр.Представление="РегистрыРасчета" Тогда
			РР = Метаданные.РегистрыРасчета.Найти(Регистр.Значение);
			Если РР.ПериодДействия Тогда
				РеквизитКолонка 	= Новый РеквизитФормы("ПериодДействия",Новый ОписаниеТипов("Дата"),ИмяТаблицы,"ПериодДействия");
				МассивДобавить.Добавить(РеквизитКолонка);
				РеквизитКолонка 	= Новый РеквизитФормы("ПериодДействияНачало",Новый ОписаниеТипов("Дата"),ИмяТаблицы,"ПериодДействияНачало");
				МассивДобавить.Добавить(РеквизитКолонка);
				РеквизитКолонка 	= Новый РеквизитФормы("ПериодДействияКонец",Новый ОписаниеТипов("Дата"),ИмяТаблицы,"ПериодДействияКонец");
				МассивДобавить.Добавить(РеквизитКолонка);
			КонецЕсли;
			Если РР.БазовыйПериод Тогда
				РеквизитКолонка 	= Новый РеквизитФормы("БазовыйПериодНачало",Новый ОписаниеТипов("Дата"),ИмяТаблицы,"БазовыйПериодНачало");
				МассивДобавить.Добавить(РеквизитКолонка);
				РеквизитКолонка 	= Новый РеквизитФормы("БазовыйПериодКонец",Новый ОписаниеТипов("Дата"),ИмяТаблицы,"БазовыйПериодКонец");
				МассивДобавить.Добавить(РеквизитКолонка);
			КонецЕсли;
		КонецЕсли;
		ИзменитьРеквизиты(МассивДобавить);
	КонецЦикла;
	
	Объект.Бюджетирование.Очистить();
	Объект.Типовой.Очистить();
	Объект.Налоговый.Очистить();
	Если Объект.Документ.Метаданные().Движения.Содержит(Метаданные.РегистрыБухгалтерии.фин_Бюджетирование) Тогда

		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	*
			|ИЗ
			|	РегистрБухгалтерии.фин_Бюджетирование.ДвиженияССубконто(, , Регистратор = &Регистратор, , ) КАК фин_БюджетированиеДвиженияССубконто
			|ГДЕ
			|	фин_БюджетированиеДвиженияССубконто.Регистратор = &Регистратор";

		Запрос.УстановитьПараметр("Регистратор", Объект.Документ);

		Движенияфин_Бюджетирование = Запрос.Выполнить();

		Объект.Бюджетирование.Загрузить(Движенияфин_Бюджетирование.Выгрузить());
		Элементы.Бюджетирование.Видимость = Объект.Бюджетирование.Количество()>0;
		
	Иначе	
		Элементы.Бюджетирование.Видимость = Ложь;
	КонецЕсли;
	Если Метаданные.РегистрыБухгалтерии.Найти("Типовой")<>Неопределено Тогда
		Если Объект.Документ.Метаданные().Движения.Содержит(Метаданные.РегистрыБухгалтерии.Типовой) Тогда

			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	*
				|ИЗ
				|	РегистрБухгалтерии.Типовой.ДвиженияССубконто(, , Регистратор = &Регистратор, , ) КАК Типовой
				|ГДЕ
				|	Типовой.Регистратор = &Регистратор";

			Запрос.УстановитьПараметр("Регистратор", Объект.Документ);

			ДвиженияТиповой = Запрос.Выполнить();

			Объект.Типовой.Загрузить(ДвиженияТиповой.Выгрузить());
			Элементы.Типовой.Видимость = Объект.Типовой.Количество()>0;
			
		Иначе	
			Элементы.Типовой.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	Если Метаданные.РегистрыБухгалтерии.Найти("Налоговый")<>Неопределено Тогда
		Если Объект.Документ.Метаданные().Движения.Содержит(Метаданные.РегистрыБухгалтерии.Налоговый) Тогда

			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	*
				|ИЗ
				|	РегистрБухгалтерии.Налоговый.ДвиженияССубконто(, , Регистратор = &Регистратор, , ) КАК Налоговый
				|ГДЕ
				|	Налоговый.Регистратор = &Регистратор";

			Запрос.УстановитьПараметр("Регистратор", Объект.Документ);

			ДвиженияНалоговый = Запрос.Выполнить();

			Объект.Налоговый.Загрузить(ДвиженияНалоговый.Выгрузить());
			Элементы.Налоговый.Видимость = Объект.Налоговый.Количество()>0;
			
		Иначе	
			Элементы.Налоговый.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ГруппаКолонок = Неопределено;
	Для Каждого Регистр Из МассивРегистров Цикл
		Если НЕ ПравоДоступа("Просмотр",Метаданные[Регистр.Представление][Регистр.Значение]) Тогда
			Продолжить;
		КонецЕсли;
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	*
			|ИЗ
			|	"+СтрЗаменить(Регистр.Представление,"Регистры","Регистр")+"."+Регистр.Значение+" КАК ДвиженияРегистра
			|ГДЕ
			|	ДвиженияРегистра.Регистратор = &Регистратор";

		Запрос.УстановитьПараметр("Регистратор", Объект.Документ);

		ДвиженияРегистра = Запрос.Выполнить().Выгрузить();
		Имя = "Таблица_"+Регистр.Значение;
		Если ДвиженияРегистра.Количество()=0 Тогда
			Продолжить;
		КонецЕсли;
		
		Страница= Элементы.Добавить("м"+Имя,Тип("ГруппаФормы"),Элементы.Страницы);
		Страница.Вид=ВидГруппыФормы.Страница;
		Страница.Заголовок = Метаданные[Регистр.Представление][Регистр.Значение].Синоним;
		Страница.Картинка = БиблиотекаКартинок.РегистрНакопления;
		ЭлементФормы = Элементы.Добавить(Имя,Тип("ТаблицаФормы"),Страница);
		ЭлементФормы.ПутьКДанным = Имя;
		ЭлементФормы.ЦветТекста = Новый Цвет(25,25,112);
		ЭлементФормы.ЦветРамки = Новый Цвет(176,196,222);
		
		КолонкиУдалить = Новый Массив;
		
		Для Каждого Колонка Из ДвиженияРегистра.Колонки Цикл
			Если Колонка.Имя="Регистратор" ИЛИ Колонка.Имя="Активность" ИЛИ Колонка.Имя="МоментВремени" Тогда
				КолонкиУдалить.Добавить(Колонка.Имя);
				Продолжить;
			КонецЕсли;
			//Если Колонка.Имя="Сторно" ИЛИ Колонка.Имя="ВидРасчета" ИЛИ Колонка.Имя="ПериодРегистрации"
			//	 ИЛИ Колонка.Имя="ПериодДействия" ИЛИ Колонка.Имя="ПериодДействияНачало" ИЛИ Колонка.Имя="ПериодДействияКонец"
			//	  ИЛИ Колонка.Имя="БазовыйПериодНачало" ИЛИ Колонка.Имя="БазовыйПериодКонец" Тогда
			//	Продолжить;
			//КонецЕсли;
			Попытка
			РеквизитКолонка 			= Элементы.Добавить(Имя+Колонка.Имя,Тип("ПолеФормы"),ЭлементФормы);
			РеквизитКолонка.ПутьКДанным	= Имя+"."+Колонка.Имя;
			РеквизитКолонка.ТолькоПросмотр = Истина;
			РеквизитКолонка.ЦветТекстаЗаголовка = Новый Цвет(0,66,66);
			РеквизитКолонка.ЦветФонаЗаголовка = Новый Цвет(176,196,222);
			РеквизитКолонка.ШрифтЗаголовка = Новый Шрифт(,9,Истина);
			Исключение
				КолонкиУдалить.Добавить(Колонка.Имя);
				Продолжить;
			КонецПопытки;
		КонецЦикла;
		Для Каждого УдаляемаяКолонка Из КолонкиУдалить Цикл
			ДвиженияРегистра.Колонки.Удалить(УдаляемаяКолонка);
		КонецЦикла;
		// перенесем данные в таблицу
		Попытка
			ЗначениеВРеквизитФормы(ДвиженияРегистра,Имя);
		Исключение
			куфиб_ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
		ЭлементФормы.ИзменятьСоставСтрок = Ложь;
		ЭлементФормы.КоманднаяПанель.Видимость = Ложь;
		ЭлементФормы.ПоложениеКоманднойПанели=ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	КонецЦикла;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Документ") Тогда
		Объект.Документ=Параметры.Документ;
		Заполнить();
	Иначе
		Отказ = Истина;
	КонецЕсли;
	Для Инд = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("МаксимальноеКоличествоСубконто")+1 По 5 Цикл
		Элементы["БюджетированиеВидСубконтоДт"+Строка(Инд)].Видимость = Ложь;
		Элементы["БюджетированиеСубконтоДт"+Строка(Инд)].Видимость = Ложь;
		Элементы["БюджетированиеВидСубконтоКт"+Строка(Инд)].Видимость = Ложь;
		Элементы["БюджетированиеСубконтоКт"+Строка(Инд)].Видимость = Ложь;
	КонецЦикла;
КонецПроцедуры

