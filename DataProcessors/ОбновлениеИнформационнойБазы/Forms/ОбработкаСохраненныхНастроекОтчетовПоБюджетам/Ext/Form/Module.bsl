
&НаСервере
Процедура ВыполнитьОбработкуНаСервере()
	Для Каждого ЭлементСписка Из СписокОтчетов Цикл
		Если ЭлементСписка.Пометка Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	общ_СохраненныеНастройки.Ссылка
				|ИЗ
				|	Справочник.общ_СохраненныеНастройки КАК общ_СохраненныеНастройки
				|ГДЕ
				|	общ_СохраненныеНастройки.ПометкаУдаления = ЛОЖЬ
				|	И общ_СохраненныеНастройки.НастраиваемыйОбъект = &НастраиваемыйОбъект";
			
			Запрос.УстановитьПараметр("НастраиваемыйОбъект", "ОтчетОбъект."+ЭлементСписка.Значение);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СохраненнаяНастройка = ВыборкаДетальныеЗаписи.Ссылка;
				ПеренестиНастройку(СохраненнаяНастройка,ЭлементСписка.Значение);
			КонецЦикла;
	
		КонецЕсли;
	КонецЦикла;										
КонецПроцедуры

&НаСервере
Процедура ПеренестиНастройку(СохраненнаяНастройка,ИмяОтчета)
	ВидОтчетов = Справочники.фин_ВидыОтчетовПоБюджетам[ИмяОтчета];
	МетаданныеОтчета 		= Справочники.фин_ВидыОтчетовПоБюджетам.МетаданныеОтчета(ВидОтчетов);
	РеквизитыНастроек 		= фин_ОбщегоНазначенияВызовСервераПовтИсп.РеквизитыСправочникаНастроекОтчетов();
	ТабличныеЧастиНастроек 	= фин_ОбщегоНазначенияВызовСервераПовтИсп.ТабличныеЧастиСправочникаНастроекОтчетов();
	ОбъектНастройки 		= СохраненнаяНастройка.ПолучитьОбъект();
	мХранилищеНастроек 		= ОбъектНастройки.ХранилищеНастроек.Получить();
	НовыйОбъект = Справочники.фин_НастройкиОтчетовПоБюджетам.СоздатьЭлемент();
	НовыйОбъект.Владелец 		= ВидОтчетов;
	НовыйОбъект.ВидНастройки	= Перечисления.фин_ВидыНастроекОтчета.ПерсональнаяНастройка;
	НовыйОбъект.Наименование 	= ОбъектНастройки.Наименование;
	НовыйОбъект.ОграничитьПоПользователям	= Истина;
	НовыйОбъект.ОткрыватьПриЗапуске 		= ОбъектНастройки.ОткрыватьПриЗапуске;
	НовыйОбъект.СохранятьАвтоматически 		= ОбъектНастройки.СохранятьАвтоматически;
	Если ИмяОтчета="фин_ПечатьБюджета" Тогда
		НовыйОбъект.Бюджет 					= ОбъектНастройки.ДополнительныйОбъект;
	КонецЕсли;
	Для Каждого СтрокаПользователь Из ОбъектНастройки.Пользователи Цикл
		НоваяСтрока = НовыйОбъект.Доступность.Добавить();
		НоваяСтрока.Пользователь 		= СтрокаПользователь.Пользователь;
		НоваяСтрока.ЗапретитьИзменение	= НЕ СтрокаПользователь.ПравоИзменения;
	КонецЦикла;
	Если ТипЗнч(мХранилищеНастроек) = Тип("Структура") Тогда
		//Если мХранилищеНастроек.Свойство("ПользовательскиеНастройки") Тогда
		//	Отчет.КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(мХранилищеНастроек.ПользовательскиеНастройки);
		//КонецЕсли;
		//Если мХранилищеНастроек.Свойство("ФиксированныеНастройки") Тогда
		//	Отчет.КомпоновщикНастроек.ЗагрузитьФиксированныеНастройки(мХранилищеНастроек.ФиксированныеНастройки);
		//КонецЕсли;
		//Если мХранилищеНастроек.Свойство("НастройкиКомпоновщика") Тогда
		//	Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(мХранилищеНастроек.НастройкиКомпоновщика);
		//КонецЕсли;

		Для Каждого ЭлементНастроек Из мХранилищеНастроек Цикл
			Если РеквизитыНастроек.Найти(НРег(ЭлементНастроек.Ключ))<>Неопределено Тогда
				НовыйОбъект[ЭлементНастроек.Ключ]= ЭлементНастроек.Значение;
			ИначеЕсли ТабличныеЧастиНастроек.Найти(НРег(ЭлементНастроек.Ключ))<>Неопределено Тогда
				НовыйОбъект[ЭлементНастроек.Ключ].Очистить();
				Для Каждого СтрокаДанных Из ЭлементНастроек.Значение Цикл
					НС = НовыйОбъект[ЭлементНастроек.Ключ].Добавить();
					ИсключаемыеПоля = ?(ЭлементНастроек.Ключ="Отбор","Значение",?(ЭлементНастроек.Ключ="Группировки","Цвет,Шрифт,Состав",""));
					ЗаполнитьЗначенияСвойств(НС,СтрокаДанных,,ИсключаемыеПоля);
					Если ЭлементНастроек.Ключ="Отбор" Тогда
						Если ТипЗнч(СтрокаДанных.Значение)=Тип("СписокЗначений") Тогда
							НС.ЗначениеСписок = ЗначениеВСтрокуВнутр(СтрокаДанных.Значение);
						Иначе
							НС.Значение = СтрокаДанных.Значение;
						КонецЕсли;
					ИначеЕсли ЭлементНастроек.Ключ="Группировки" Тогда
						Если ЭлементНастроек.Значение.Колонки.Найти("Цвет")<>Неопределено Тогда
							НС.Цвет = ЗначениеВСтрокуВнутр(СтрокаДанных.Цвет);
						КонецЕсли;
						Если ЭлементНастроек.Значение.Колонки.Найти("Шрифт")<>Неопределено Тогда
							НС.Шрифт = ЗначениеВСтрокуВнутр(СтрокаДанных.Шрифт);
						КонецЕсли;
						Если ЭлементНастроек.Значение.Колонки.Найти("Состав")<>Неопределено Тогда
							НС.Состав = ЗначениеВСтрокуВнутр(СтрокаДанных.Состав);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли МетаданныеОтчета.Реквизиты.Найти(ЭлементНастроек.Ключ)<>Неопределено Тогда
			    НовыйДопПараметр = НовыйОбъект.ДополнительныеПараметрыОтчета.Добавить();
				НовыйДопПараметр.Параметр = ЭлементНастроек.Ключ;
				НовыйДопПараметр.Значение = ЭлементНастроек.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если ИмяОтчета="фин_ИсполнениеБюджета" Тогда
		Если НовыйОбъект.ДанныеДляАнализа.Количество()>2 Тогда
			НовыйОбъект.Владелец = Справочники.фин_ВидыОтчетовПоБюджетам.фин_СравнительныйАнализ;
		Иначе
			СценарийПлана 	= Неопределено;
			ДанныеФакта 	= Неопределено;
			Для Каждого СтрокаДанных Из НовыйОбъект.ДанныеДляАнализа Цикл
				Если ТипЗнч(СтрокаДанных.ДанныеДляСравнения)=Тип("СправочникСсылка.СценарииПланирования") И ЗначениеЗаполнено(СтрокаДанных.ДанныеДляСравнения) Тогда
					СценарийПлана =  СтрокаДанных.ДанныеДляСравнения;
				ИначеЕсли НЕ ЗначениеЗаполнено(СтрокаДанных.ДанныеДляСравнения) Тогда
					ДанныеФакта = Перечисления.фин_ВидыДанныхОтчета.Фактические;
				Иначе
					ДанныеФакта = СтрокаДанных.ДанныеДляСравнения;
				КонецЕсли;
			КонецЦикла;
			Если НовыйОбъект.ДанныеДляАнализа.Количество()=2 И (СценарийПлана=Неопределено ИЛИ ДанныеФакта=Неопределено ИЛИ НовыйОбъект.ДанныеДляАнализа[0].НачалоПериода<>НовыйОбъект.ДанныеДляАнализа[1].НачалоПериода ИЛИ НовыйОбъект.ДанныеДляАнализа[0].ОкончаниеПериода<>НовыйОбъект.ДанныеДляАнализа[1].ОкончаниеПериода) Тогда
				НовыйОбъект.Владелец = Справочники.фин_ВидыОтчетовПоБюджетам.фин_СравнительныйАнализ;
			Иначе
				НовыйОбъект.Сценарий 					= СценарийПлана;
				НовыйОбъект.ВидДанных 					= ДанныеФакта;
				НовыйОбъект.НачалоПериода 				= НовыйОбъект.ДанныеДляАнализа[0].НачалоПериода;
				НовыйОбъект.НачалоПериодаПланирования 	= НовыйОбъект.ДанныеДляАнализа[0].НачалоПериода;
				НовыйОбъект.КонецПериода 				= НовыйОбъект.ДанныеДляАнализа[0].ОкончаниеПериода;
				НовыйОбъект.КонецПериодаПланирования 	= НовыйОбъект.ДанныеДляАнализа[0].ОкончаниеПериода;
				НовыйОбъект.Периодичность				= НовыйОбъект.Сценарий.Периодичность;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	НовыйОбъект.УстановитьНовыйКод();
	Попытка
		НовыйОбъект.Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось сохранить настройку "+СохраненнаяНастройка+"
		|	"+ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	Попытка
		ОбъектНастройки.УстановитьПометкуУдаления(Истина);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось пометить на удаление настройку "+СохраненнаяНастройка+"
		|	"+ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуРегистра(Команда)
	ВыполнитьОбработкуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработку() Экспорт
	ВыполнитьОбработкуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_ВидыОтчетовПоБюджетам.Ссылка,
		|	фин_ВидыОтчетовПоБюджетам.ИмяПредопределенныхДанных,
		|	фин_ВидыОтчетовПоБюджетам.Наименование
		|ИЗ
		|	Справочник.фин_ВидыОтчетовПоБюджетам КАК фин_ВидыОтчетовПоБюджетам
		|ГДЕ
		|	фин_ВидыОтчетовПоБюджетам.ЭтоГруппа = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Отчет = Метаданные.Отчеты.Найти(ВыборкаДетальныеЗаписи.ИмяПредопределенныхДанных);
		Если Отчет <>Неопределено Тогда
			Если Отчет.ОсновнаяФорма = Метаданные.ОбщиеФормы.фин_ФормаОтчетовБюджета Тогда
				СписокОтчетов.Добавить(ВыборкаДетальныеЗаписи.ИмяПредопределенныхДанных,ВыборкаДетальныеЗаписи.Наименование,Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
