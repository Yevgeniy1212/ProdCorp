
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.КоэффициентКоличество 	= 1;
	Объект.КоэффициентСумма 		= 1;
	Объект.СценарийФормируемый 		= фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ОсновнойСценарийПланирования");
	Объект.Сценарий 				= Объект.СценарийФормируемый;
	Объект.ПериодПланирования 		= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(ТекущаяДата(),Объект.Сценарий);
	Объект.ПериодПланированияКопируемый = Объект.ПериодПланирования;
	Объект.СостояниеВыбираемыхЗаявок 	= Перечисления[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СостоянияОбъектов"].Подготовлен;
	Объект.СпособФормирования 			= Перечисления.фин_СпособыФормированияБюджета.НаОснованииБюджетныхЗаявок;
	Элементы.Страницы.ТекущаяСтраница 	= Элементы.Страницы.ПодчиненныеЭлементы.ГруппаПараметрыФормируемогоБюджета;
	ПутьГруппаСтраницы 				= "Страницы";
	ПутьГруппаФормыСписокШагов 		= "ГруппаПанельЛевая";
	ОпределитьСоставШагов();
	УчетПоПроектам = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_ВестиУчетПоПроектам");
	БюджетированиеПоОрганизациям = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_БюджетированиеПоОрганизациям");
	Элементы.Организация.Видимость 					= БюджетированиеПоОрганизациям;
	Элементы.Проект.Видимость 						= УчетПоПроектам;
	Элементы.ПроектКопируемый.Видимость 			= УчетПоПроектам;
	Элементы.ПоданныеЗаявкиЗаявкаПроект.Видимость 	= УчетПоПроектам;
	Элементы.ЗаявкиКУчастиюПроект.Видимость 		= УчетПоПроектам;
	Если НЕ УчетПоПроектам Тогда
		Элементы.УровеньДетализацииБюджета.СписокВыбора.Удалить(Элементы.УровеньДетализацииБюджета.СписокВыбора.НайтиПоЗначению(Перечисления.фин_УровниДетализацииБюджета.БюджетПроекта));	
	КонецЕсли;
	фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.УстановитьГоризонтПланированияИПредставлениеБюджетногоПериода(НадписьПериодПланирования,,Объект.ПериодПланирования,Объект.СценарийФормируемый);
	фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.УстановитьГоризонтПланированияИПредставлениеБюджетногоПериода(НадписьПериодПланированияКопируемый,,Объект.ПериодПланированияКопируемый,Объект.Сценарий);
	Элементы.ЗаявкиКУчастию.ОтборСтрок = Новый ФиксированнаяСтруктура("Принята",Истина);
	Элементы.ПоданныеЗаявки.ОтборСтрок = Новый ФиксированнаяСтруктура("Принята",Ложь);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьОбработчик(Страница)
	Если Страница = "ГруппаПараметрыКопируемыхДанных" Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Сценарий) Тогда
			Объект.Сценарий = Объект.СценарийФормируемый;
		КонецЕсли;
		//Если НЕ ЗначениеЗаполнено(Объект.ПериодПланированияКопируемый) Тогда
		Объект.ПериодПланированияКопируемый = Объект.ПериодПланирования;
		фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.УстановитьГоризонтПланированияИПредставлениеБюджетногоПериода(НадписьПериодПланированияКопируемый,,Объект.ПериодПланированияКопируемый,Объект.Сценарий);
		//КонецЕсли;
	ИначеЕсли Страница = "ГруппаЗаявкиКУчастию" Тогда
		ПолучитьБюджетныеЗаявки();
	КонецЕсли;
КонецПроцедуры

//Процедура ПолучитьБюджетныеЗаявки
//
&НаСервере
Процедура ПолучитьБюджетныеЗаявки()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Бюджет.Ссылка КАК Заявка,
	|	Бюджет.Состояние,
	|	Бюджет.Проект,
	|	Бюджет.УправленческоеПодразделение
	|ИЗ
	|	Документ.фин_Бюджет КАК Бюджет
	|ГДЕ
	|	Бюджет.ВидОперации = &ВидОперации"+?(Объект.СостояниеВыбираемыхЗаявок.Пустая(),"","
	|	И Бюджет.Состояние = &Состояние")+"
	|	И Бюджет.ФормируемыйБюджет = &ФормируемыйБюджет"+?(Объект.УправленческоеПодразделениеКопируемый.Пустая(),"","
	|	И Бюджет.УправленческоеПодразделение = &УправленческоеПодразделение")+?(Объект.ПроектКопируемый.Пустая(),"","
	|	И Бюджет.Проект = &Проект")+"
	|	И Бюджет.Сценарий = &Сценарий"+?(Объект.НеОтбиратьПоПериоду,"","
	|	И Бюджет.ПериодПланирования >= &ПериодПланированияНачало И Бюджет.ПериодПланирования <= &ПериодПланированияКонец");
	Запрос.УстановитьПараметр("Состояние",			Объект.СостояниеВыбираемыхЗаявок);
	Запрос.УстановитьПараметр("ФормируемыйБюджет",	Объект.Бюджет);
	Запрос.УстановитьПараметр("ВидОперации", 		Перечисления.фин_ВидыОперацийБюджет.Заявка);
	Запрос.УстановитьПараметр("Сценарий",			Объект.Сценарий);
	Запрос.УстановитьПараметр("Проект",				Объект.ПроектКопируемый);
	Запрос.УстановитьПараметр("ПериодПланированияНачало",фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(Объект.ПериодПланированияКопируемый,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(Объект.Сценарий)));
	Запрос.УстановитьПараметр("ПериодПланированияКонец", фин_ПроцедурыМеханизмовБюджетирования.ПолучитьГоризонтПланированияСПересчетом(Объект.ПериодПланированияКопируемый,Объект.Сценарий,Объект.СценарийФормируемый));
	Запрос.УстановитьПараметр("УправленческоеПодразделение", 				Объект.УправленческоеПодразделениеКопируемый);
	РезультатЗапроса = Запрос.Выполнить();                                  
	Выборка = РезультатЗапроса.Выбрать();
	Объект.ЗаявкиКУчастию.Очистить();
	Пока Выборка.Следующий() Цикл
		СтрокаТаблицы = Объект.ЗаявкиКУчастию.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы,Выборка);
		СтрокаТаблицы.КоэффициентСумма = 1;
		СтрокаТаблицы.КоэффициентКоличество = 1;
	КонецЦикла;
КонецПроцедуры //ПолучитьБюджетныеЗаявки

&НаСервере
Процедура ОпределитьСоставШагов()
	СписокШагов.Очистить();
	Если Объект.СпособФормирования=Перечисления.фин_СпособыФормированияБюджета.НаОснованииБюджетныхЗаявок Тогда
		КоличествоШагов=4;
		СписокШагов.Добавить("ГруппаПараметрыФормируемогоБюджета");
		СписокШагов.Добавить("ГруппаПараметрыКопируемыхДанных");
		СписокШагов.Добавить("ГруппаЗаявкиКУчастию");
		СписокШагов.Добавить("ГруппаПоправки");
	ИначеЕсли Объект.СпособФормирования=Перечисления.фин_СпособыФормированияБюджета.ПоОбразцуБюджета Тогда
		КоличествоШагов=3;
		СписокШагов.Добавить("ГруппаПараметрыФормируемогоБюджета");
		СписокШагов.Добавить("ГруппаПараметрыКопируемыхДанных");
		СписокШагов.Добавить("ГруппаПоправки");
	ИначеЕсли Объект.СпособФормирования=Перечисления.фин_СпособыФормированияБюджета.ПоНеисполненнымОстаткамПредыдущегоПериода Тогда
		КоличествоШагов=2;
		СписокШагов.Добавить("ГруппаПараметрыФормируемогоБюджета");
		СписокШагов.Добавить("ГруппаПоправки");
	Иначе	
		КоличествоШагов=2;
		СписокШагов.Добавить("ГруппаПараметрыФормируемогоБюджета");
		СписокШагов.Добавить("ГруппаПараметрыКопируемыхДанных");
	КонецЕсли;
	НастроитьСоставШагов(ЭтотОбъект,"Страницы","ГруппаПанельЛевая");
	ТекущийШаг 						= 1;
	ВыделитьАктивныйШаг(ЭтотОбъект);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура НастроитьСоставШагов(Форма,ПутьГруппаСтраницы,ПутьГруппаФормыСписокШагов)
	Элементы 	= Форма.Элементы;
	СписокШагов = Форма.СписокШагов;
	ПутьГруппаСтраницы 				= Форма.ПутьГруппаСтраницы;
	ПутьГруппаФормыСписокШагов 		= Форма.ПутьГруппаФормыСписокШагов;
	Пока Элементы.Найти(ПутьГруппаФормыСписокШагов).ПодчиненныеЭлементы.Количество()>0 Цикл
		Элементы.Удалить(Элементы.Найти(ПутьГруппаФормыСписокШагов).ПодчиненныеЭлементы[0]);
	КонецЦикла;
	Для Инд = 1 По Форма.КоличествоШагов Цикл
		ИмяЭлемента = "ДекорацияШаг"+Строка(Инд);
		НовыйЭлемент 			= Элементы.Добавить(ИмяЭлемента,Тип("ДекорацияФормы"),Элементы.Найти(ПутьГруппаФормыСписокШагов));
		НовыйЭлемент.вид		= ВидДекорацииФормы.Надпись;
		НовыйЭлемент.Заголовок 	= Строка(Инд)+". "+ Элементы.Найти(СписокШагов.Получить(Инд-1).Значение).Заголовок;
		НовыйЭлемент.ЦветТекста = Новый Цвет(25,25,112);
	КонецЦикла;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВыделитьАктивныйШаг(Форма)
	Элементы 	= Форма.Элементы;
	СписокШагов = Форма.СписокШагов;
	Для Инд = 1 По Форма.КоличествоШагов Цикл
		Элементы.Найти("ДекорацияШаг"+Строка(Инд)).Шрифт = Новый Шрифт(,?(Инд = Форма.ТекущийШаг,9,8),Инд = Форма.ТекущийШаг);
	КонецЦикла;
	ПутьГруппаСтраницы	= Форма.ПутьГруппаСтраницы;
	Элементы[ПутьГруппаСтраницы].ТекущаяСтраница = Элементы[ПутьГруппаСтраницы].ПодчиненныеЭлементы[СписокШагов.Получить(Форма.ТекущийШаг-1).Значение];
	Элементы.КнопкаНазад.Видимость 		= Форма.ТекущийШаг <> 1;
	Элементы.КнопкаДалее.Видимость 		= Форма.ТекущийШаг <> Форма.КоличествоШагов;
	Элементы.КнопкаЗавершить.Видимость 	= Форма.ТекущийШаг = Форма.КоличествоШагов;
КонецПроцедуры

&НаКлиенте
Процедура СпособФормированияПриИзменении(Элемент)
	ОпределитьСоставШагов();
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	ТекущийШаг = ТекущийШаг - 1;
	ВыделитьАктивныйШаг(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	Если ПроверитьДанныеШага() Тогда
		ТекущийШаг = ТекущийШаг + 1;
		ВыполнитьОбработчик(СписокШагов.Получить(ТекущийШаг-1).Значение);
		ВыделитьАктивныйШаг(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПроверитьДанныеШага()
	СписокРеквизитовДляПроверки = Новый СписокЗначений;
	Если ТекущийШаг = 1 Тогда
		СписокРеквизитовДляПроверки.Добавить("Бюджет",				"Бюджет");
		СписокРеквизитовДляПроверки.Добавить("ПериодПланирования",	"Период планирования");
		СписокРеквизитовДляПроверки.Добавить("СценарийФормируемый",	"Сценарий");
		Если БюджетированиеПоОрганизациям Тогда
			СписокРеквизитовДляПроверки.Добавить("Организация",		"Организация");
		КонецЕсли;
	ИначеЕсли ТекущийШаг = 2 Тогда
		СписокРеквизитовДляПроверки.Добавить("ПериодПланированияКопируемый",	"Период планирования");
		СписокРеквизитовДляПроверки.Добавить("Сценарий",	"Сценарий");
	КонецЕсли;
	ПроверкаВыполнена = Истина;
	Для Каждого Проверка Из СписокРеквизитовДляПроверки Цикл
		Если НЕ ЗначениеЗаполнено(Объект[Проверка.Значение]) Тогда
			ПроверкаВыполнена = Ложь;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено поле """+Проверка.Представление+"""");
		КонецЕсли;
	КонецЦикла;
	Возврат ПроверкаВыполнена;
КонецФункции

//////////////////////////////////////////////////////////////////////////////////////////////////////////////


&НаКлиенте
Процедура ПринятьВБюджет(Команда)
	Если Элементы.ПоданныеЗаявки.ТекущиеДанные<>Неопределено Тогда
		Элементы.ПоданныеЗаявки.ТекущиеДанные.Принята = Истина;
		Элементы.ЗаявкиКУчастию.ОтборСтрок = Новый ФиксированнаяСтруктура("Принята",Истина);
		Элементы.ПоданныеЗаявки.ОтборСтрок = Новый ФиксированнаяСтруктура("Принята",Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПринятьВсеЗаявкиВБюджет(Команда)
	Для Каждого СтрокаЗаявка Из Объект.ЗаявкиКУчастию Цикл
		СтрокаЗаявка.Принята = Истина;
		Элементы.ЗаявкиКУчастию.ОтборСтрок = Новый ФиксированнаяСтруктура("Принята",Истина);
		Элементы.ПоданныеЗаявки.ОтборСтрок = Новый ФиксированнаяСтруктура("Принята",Ложь);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИзъятьИзБюджета(Команда)
	Если Элементы.ЗаявкиКУчастию.ТекущиеДанные<>Неопределено Тогда
		Элементы.ЗаявкиКУчастию.ТекущиеДанные.Принята = Ложь;
		Элементы.ЗаявкиКУчастию.ОтборСтрок = Новый ФиксированнаяСтруктура("Принята",Истина);
		Элементы.ПоданныеЗаявки.ОтборСтрок = Новый ФиксированнаяСтруктура("Принята",Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Утвердить(Команда)
	Если Элементы.ПоданныеЗаявки.ТекущиеДанные<>Неопределено Тогда
		Заявка = Элементы.ПоданныеЗаявки.ТекущиеДанные.Заявка;
		УтвердитьНаСервере(Заявка);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УтвердитьНаСервере(Заявка)
	ДокументЗаявка = Заявка.ПолучитьОбъект();
	ДокументЗаявка.Состояние = фин_ОбщегоНазначенияВызовСервераПовтИсп.СостояниеОбъектаУтвержден();
	Попытка
		ДокументЗаявка.Записать(РежимЗаписиДокумента.Запись);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось утвердить документ : "+ОписаниеОшибки());
		Возврат;
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура Отклонить(Команда)
	Если Элементы.ПоданныеЗаявки.ТекущиеДанные<>Неопределено Тогда
		Заявка = Элементы.ПоданныеЗаявки.ТекущиеДанные.Заявка;
		ОтклонитьНаСервере(Заявка);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтклонитьНаСервере(Заявка)
	ДокументЗаявка = Заявка.ПолучитьОбъект();
	ДокументЗаявка.Состояние = Перечисления[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СостоянияОбъектов"].Отклонен;
	Попытка
		ДокументЗаявка.Записать(РежимЗаписиДокумента.Запись);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось отклонить документ : "+ОписаниеОшибки());
		Возврат;
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура Завершить(Команда)
	ЗавершитьНаСервере();
	ОткрытьФорму("Документ.фин_Бюджет.ФормаОбъекта",Новый Структура("АдресНастроекЗаполнения",Адрес),ЭтотОбъект,Новый УникальныйИдентификатор);
КонецПроцедуры

&НаСервере
Процедура ЗавершитьНаСервере()
	КЭШ_Разрезы = Новый Соответствие;
	ПериодПланированияКопируемый	= Объект.ПериодПланированияКопируемый;
	ПериодПланирования 				= Объект.ПериодПланирования;
	Организация 					= Объект.Организация;
	КоэффициентКоличество 			= Объект.КоэффициентКоличество;
	КоэффициентСумма 				= Объект.КоэффициентСумма;
	Бюджет 							= Объект.Бюджет;
	Сценарий 						= Объект.Сценарий;
	СценарийФормируемый				= Объект.СценарийФормируемый;
	СпособФормирования				= Объект.СпособФормирования;
	ПроектКопируемый				= Объект.ПроектКопируемый;
	УправленческоеПодразделениеКопируемый	= Объект.УправленческоеПодразделениеКопируемый;
	Проект							= Объект.Проект;
	УправленческоеПодразделение		= Объект.УправленческоеПодразделение;
	Поправки						= Объект.Поправки;
	МассивРегистров = фин_ОбщегоНазначенияВызовСервераПовтИсп.РегистрыФактическихДанных();
	
	СтруктураОбъект 				= Новый Структура("ФормируемыйБюджет,ВалютаДокумента,Сценарий,ПериодПланирования,Организация,Дата,УровеньДетализацииБюджета,ВидОперации,УправленческоеПодразделение",Объект.Бюджет,фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета"),Объект.СценарийФормируемый,Объект.ПериодПланированияКопируемый,Объект.Организация,ТекущаяДата(),Объект.УровеньДетализацииБюджета,?(Объект.Заявка,Перечисления.фин_ВидыОперацийБюджет.Заявка,Перечисления.фин_ВидыОперацийБюджет.Бюджет),Объект.УправленческоеПодразделение);
	СписокФильтрСтатей 				= Новый СписокЗначений;
	Документы.фин_Бюджет.ЗаполнитьСписокФильтрСтатей(СтруктураОбъект,СписокФильтрСтатей);
	СтруктураРазрезовБюджета 		= фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПолучитьСписокРазрезовБюджета(Объект.Бюджет);
	СписокРассчитываемыхПоМодели 	= Документы.фин_Бюджет.СписокРассчитываемыхПоМодели(СтруктураОбъект,фин_ПроцедурыМеханизмовБюджетирования.ВерсияБюджета(Объект.Бюджет,Объект.ПериодПланирования),СписокФильтрСтатей,БюджетированиеПоОрганизациям);
	мПериод 						= ПериодПланированияКопируемый;
	СмещениеПериодаБюджета 			= 0;
	Если ПериодПланированияКопируемый <> ПериодПланирования Тогда
		мПериод 					= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(мПериод,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый));
		Флаг 						= 1;
		Если ПериодПланирования < мПериод Тогда
			Флаг 					= -1;
		КонецЕсли;
		ТребуемыйПериод 			= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(ПериодПланирования,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый));
		РассчитанныйПериод 			= мПериод;
		Пока РассчитанныйПериод <> ТребуемыйПериод И (СмещениеПериодаБюджета*Флаг)<10000 Цикл
			СмещениеПериодаБюджета 	= СмещениеПериодаБюджета + Флаг;
			РассчитанныйПериод  	= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(РассчитанныйПериод,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый),Флаг);
		КонецЦикла;
	КонецЕсли;
	// формируем итоговую таблицу
	Запрос = Новый Запрос;
	Если СпособФормирования = Перечисления.фин_СпособыФормированияБюджета.НаОснованииБюджетныхЗаявок Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	ВТ_Коэффициенты.Заявка,
		|	ВТ_Коэффициенты.КоэффициентСумма,
		|	ВТ_Коэффициенты.КоэффициентКоличество
		|ПОМЕСТИТЬ ВТ_Список
		|ИЗ
		|	&ТаблоКоэффициентов КАК ВТ_Коэффициенты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(БюджетОборотыПоСтатьям.ПериодПланирования,"+?((НЕ ЗначениеЗаполнено(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый))),"МЕСЯЦ",Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)))+"),"+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)+","+Строка(СмещениеПериодаБюджета)+") КАК ПериодПланирования,
		|	БюджетОборотыПоСтатьям.ВалютаОперации,
		|	СУММА(БюджетОборотыПоСтатьям.Количество * ВТ_Список.КоэффициентКоличество * &КоэффициентКоличество) КАК Количество,
		|	БюджетОборотыПоСтатьям.Контрагент,
		|	БюджетОборотыПоСтатьям.Номенклатура,
		|	БюджетОборотыПоСтатьям.Проект,
		|	БюджетОборотыПоСтатьям.Состояние,
		|	БюджетОборотыПоСтатьям.СтатьяБюджета,
		|	БюджетОборотыПоСтатьям.Разрез1,
		|	БюджетОборотыПоСтатьям.Разрез2,
		|	БюджетОборотыПоСтатьям.Разрез3,
		|	БюджетОборотыПоСтатьям.Разрез4,
		|	БюджетОборотыПоСтатьям.Разрез5,
		|	БюджетОборотыПоСтатьям.Разрез6,
		|	БюджетОборотыПоСтатьям.Разрез7,
		|	БюджетОборотыПоСтатьям.Разрез8,
		|	БюджетОборотыПоСтатьям.Разрез9,
		|	БюджетОборотыПоСтатьям.Разрез10,
		|	БюджетОборотыПоСтатьям.ФинансовыйПоказатель,
		|	СУММА(БюджетОборотыПоСтатьям.Сумма * ВТ_Список.КоэффициентСумма * &КоэффициентСумма) КАК Сумма,
		|	БюджетОборотыПоСтатьям.Цена,
		|	БюджетОборотыПоСтатьям.УправленческоеПодразделение
		|ИЗ
		|	Документ.фин_Бюджет.ОборотыПоСтатьям КАК БюджетОборотыПоСтатьям
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Список КАК ВТ_Список
		|		ПО БюджетОборотыПоСтатьям.Ссылка = ВТ_Список.Заявка
		|ГДЕ БюджетОборотыПоСтатьям.Количество>0 ИЛИ БюджетОборотыПоСтатьям.Сумма>0
		|
		|СГРУППИРОВАТЬ ПО
		|	БюджетОборотыПоСтатьям.Ссылка.ПериодПланирования,
		|	БюджетОборотыПоСтатьям.ВалютаОперации,
		|	БюджетОборотыПоСтатьям.Контрагент,
		|	БюджетОборотыПоСтатьям.Проект,
		|	БюджетОборотыПоСтатьям.ПериодПланирования,
		|	БюджетОборотыПоСтатьям.УправленческоеПодразделение,
		|	БюджетОборотыПоСтатьям.ФинансовыйПоказатель,
		|	БюджетОборотыПоСтатьям.Номенклатура,
		|	БюджетОборотыПоСтатьям.СтатьяБюджета,
		|	БюджетОборотыПоСтатьям.Разрез1,
		|	БюджетОборотыПоСтатьям.Разрез2,
		|	БюджетОборотыПоСтатьям.Разрез3,
		|	БюджетОборотыПоСтатьям.Разрез4,
		|	БюджетОборотыПоСтатьям.Разрез5,
		|	БюджетОборотыПоСтатьям.Разрез6,
		|	БюджетОборотыПоСтатьям.Разрез7,
		|	БюджетОборотыПоСтатьям.Разрез8,
		|	БюджетОборотыПоСтатьям.Разрез9,
		|	БюджетОборотыПоСтатьям.Разрез10,
		|	БюджетОборотыПоСтатьям.Состояние,
		|	БюджетОборотыПоСтатьям.Цена
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(БюджетЗависимыеОбороты.ПериодПланирования,"+?((НЕ ЗначениеЗаполнено(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый))),"МЕСЯЦ",Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)))+"),"+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)+","+Строка(СмещениеПериодаБюджета)+") КАК ПериодПланирования,
		|	БюджетЗависимыеОбороты.ВалютаОперации,
		|	СУММА(БюджетЗависимыеОбороты.Количество * ВТ_Список.КоэффициентКоличество) КАК Количество,
		|	БюджетЗависимыеОбороты.Контрагент,
		|	БюджетЗависимыеОбороты.КоэффициентДляРасчетаКоличества,
		|	БюджетЗависимыеОбороты.КоэффициентДляРасчетаСуммы,
		|	БюджетЗависимыеОбороты.Номенклатура,
		|	БюджетЗависимыеОбороты.Проект,
		|	БюджетЗависимыеОбороты.РеквизитОперацииДляРасчетаКоличества,
		|	БюджетЗависимыеОбороты.РеквизитОперацииДляРасчетаСуммы,
		|	БюджетЗависимыеОбороты.Состояние,
		|	БюджетЗависимыеОбороты.СтатьяБюджета,
		|	БюджетЗависимыеОбороты.Разрез1,
		|	БюджетЗависимыеОбороты.Разрез2,
		|	БюджетЗависимыеОбороты.Разрез3,
		|	БюджетЗависимыеОбороты.Разрез4,
		|	БюджетЗависимыеОбороты.Разрез5,
		|	БюджетЗависимыеОбороты.Разрез6,
		|	БюджетЗависимыеОбороты.Разрез7,
		|	БюджетЗависимыеОбороты.Разрез8,
		|	БюджетЗависимыеОбороты.Разрез9,
		|	БюджетЗависимыеОбороты.Разрез10,
		|	БюджетЗависимыеОбороты.ФинансовыйПоказатель,
		|	СУММА(БюджетЗависимыеОбороты.Сумма * ВТ_Список.КоэффициентСумма) КАК Сумма,
		|	БюджетЗависимыеОбороты.УправленческоеПодразделение
		|ИЗ
		|	Документ.фин_Бюджет.ЗависимыеОбороты КАК БюджетЗависимыеОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Список КАК ВТ_Список
		|		ПО БюджетЗависимыеОбороты.Ссылка = ВТ_Список.Заявка
		|
		|ГДЕ БюджетЗависимыеОбороты.Количество>0 ИЛИ БюджетЗависимыеОбороты.Сумма>0
		|СГРУППИРОВАТЬ ПО
		|	БюджетЗависимыеОбороты.РеквизитОперацииДляРасчетаСуммы,
		|	БюджетЗависимыеОбороты.ФинансовыйПоказатель,
		|	БюджетЗависимыеОбороты.РеквизитОперацииДляРасчетаКоличества,
		|	БюджетЗависимыеОбороты.Состояние,
		|	БюджетЗависимыеОбороты.Проект,
		|	БюджетЗависимыеОбороты.СтатьяБюджета,
		|	БюджетЗависимыеОбороты.Разрез1,
		|	БюджетЗависимыеОбороты.Разрез2,
		|	БюджетЗависимыеОбороты.Разрез3,
		|	БюджетЗависимыеОбороты.Разрез4,
		|	БюджетЗависимыеОбороты.Разрез5,
		|	БюджетЗависимыеОбороты.Разрез6,
		|	БюджетЗависимыеОбороты.Разрез7,
		|	БюджетЗависимыеОбороты.Разрез8,
		|	БюджетЗависимыеОбороты.Разрез9,
		|	БюджетЗависимыеОбороты.Разрез10,
		|	БюджетЗависимыеОбороты.УправленческоеПодразделение,
		|	БюджетЗависимыеОбороты.ВалютаОперации,
		|	БюджетЗависимыеОбороты.Ссылка.ПериодПланирования,
		|	БюджетЗависимыеОбороты.ПериодПланирования,
		|	БюджетЗависимыеОбороты.Контрагент,
		|	БюджетЗависимыеОбороты.Номенклатура,
		|	БюджетЗависимыеОбороты.КоэффициентДляРасчетаКоличества,
		|	БюджетЗависимыеОбороты.КоэффициентДляРасчетаСуммы";
		Запрос.УстановитьПараметр("ТаблоКоэффициентов",Объект.ЗаявкиКУчастию.Выгрузить(Новый Структура("Принята",Истина)));
		Запрос.УстановитьПараметр("КоэффициентКоличество",	КоэффициентКоличество);
		Запрос.УстановитьПараметр("КоэффициентСумма",		КоэффициентСумма);
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		ТаблицаОсновныхОборотов 	= РезультатЗапроса[1].Выгрузить();
		Для Каждого СтрокаОборотов Из ТаблицаОсновныхОборотов Цикл
			СтрокиКоэффициент = Поправки.НайтиСтроки(Новый Структура("СтатьяБюджета",СтрокаОборотов.СтатьяБюджета));
			Если СтрокиКоэффициент.Количество() > 0 Тогда
				СтрокаОборотов.Сумма 		= СтрокаОборотов.Сумма * СтрокиКоэффициент[0].ПоправочныйКоэффициент;
				СтрокаОборотов.Количество 	= СтрокаОборотов.Количество * СтрокиКоэффициент[0].ПоправочныйКоэффициентКоличество;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли СпособФормирования = Перечисления.фин_СпособыФормированияБюджета.ПоОбразцуБюджета Тогда
		Запрос.Текст="ВЫБРАТЬ
		|	СтатьиОборотовИзПрочихБюджетов.ФинансовыйПоказатель
		|ПОМЕСТИТЬ ВТ_СтатьиВысшегоПорядка
		|ИЗ
		|	(ВЫБРАТЬ
		|		РегламентФормированияБюджетовСрезПоследних.Бюджет КАК Бюджет
		|	ИЗ
		|		(ВЫБРАТЬ
		|			РегламентФормированияБюджетовСрезПоследних.Ранг КАК Ранг
		|		ИЗ
		|			РегистрСведений.фин_РегламентФормированияБюджетов.СрезПоследних(, Регламент = &Регламент И Бюджет = &Бюджет) КАК РегламентФормированияБюджетовСрезПоследних) КАК ВложенныйЗапрос
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.фин_РегламентФормированияБюджетов.СрезПоследних(, Регламент = &Регламент) КАК РегламентФормированияБюджетовСрезПоследних
		|			ПО ВложенныйЗапрос.Ранг > РегламентФормированияБюджетовСрезПоследних.Ранг) КАК БолееПриоритетныеБюджеты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СтатьиБюджета.ФинансовыйПоказатель КАК ФинансовыйПоказатель,
		|			СтатьиБюджета.Владелец КАК Бюджет
		|		ИЗ
		|			Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
		|		ГДЕ
		|			СтатьиБюджета.Владелец <> &Бюджет) КАК СтатьиОборотовИзПрочихБюджетов
		|		ПО БолееПриоритетныеБюджеты.Бюджет = СтатьиОборотовИзПрочихБюджетов.Бюджет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтатьиБюджета.Ссылка КАК СтатьяБюджета,
		|	СтатьиБюджета.ФинансовыйПоказатель
		|ПОМЕСТИТЬ ВТ_СписокСтатей
		|ИЗ
		|	Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.фин_ЗависимостиФинансовыхПоказателей.СрезПоследних(&Дата,"+?(УправленческоеПодразделение.Пустая(),""," (ИсходныйНаборРазрезов.УправленческоеПодразделение=&УправленческоеПодразделение ИЛИ НЕ ИсходныйНаборРазрезов.ОтборУправленческоеПодразделение) И ")+?(Проект.Пустая(),""," (ИсходныйНаборРазрезов.Проект=&Проект ИЛИ НЕ ИсходныйНаборРазрезов.ОтборПроект) И ")+"
		|				(ИсхСценарий = &Сценарий
		|					ИЛИ ИсхСценарий = ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СценарииПланирования.ПустаяСсылка))) КАК ЗависимостиФинансовыхПоказателей
		|		ПО СтатьиБюджета.ФинансовыйПоказатель = ЗависимостиФинансовыхПоказателей.ЗависимаяФинансовыйПоказатель
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтатьиВысшегоПорядка КАК ВТ_СтатьиВысшегоПорядка
		|		ПО СтатьиБюджета.ФинансовыйПоказатель = ВТ_СтатьиВысшегоПорядка.ФинансовыйПоказатель
		|ГДЕ
		|	(НЕ СтатьиБюджета.ЭтоГруппа)
		|	И СтатьиБюджета.Владелец = &Бюджет
		|	И ЗависимостиФинансовыхПоказателей.ЗависимаяФинансовыйПоказатель ЕСТЬ NULL 
		|	И (НЕ ВТ_СтатьиВысшегоПорядка.ФинансовыйПоказатель ЕСТЬ NULL)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ОборотыБюджетовОбороты.ПериодПланирования,"+?((НЕ ЗначениеЗаполнено(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый))),"МЕСЯЦ",Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)))+") КАК ПериодПланированияЗаявки,
		|	ОборотыБюджетовОбороты.Сценарий,
		|	ОборотыБюджетовОбороты.Проект,
		|	ОборотыБюджетовОбороты.УправленческоеПодразделение,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы,
		|	ОборотыБюджетовОбороты.ФинансовыйПоказатель,
		|	ОборотыБюджетовОбороты.Контрагент,
		|	ОборотыБюджетовОбороты.Номенклатура,
		|	ОборотыБюджетовОбороты.Валюта,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез1 КАК Разрез1,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез2 КАК Разрез2,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез3 КАК Разрез3,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез4 КАК Разрез4,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез5 КАК Разрез5,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез6 КАК Разрез6,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез7 КАК Разрез7,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез8 КАК Разрез8,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез9 КАК Разрез9,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез10 КАК Разрез10,
		|	ОборотыБюджетовОбороты.КоличествоОборот * &КоэффициентКоличество КАК Количество,
		|	ОборотыБюджетовОбороты.ВалютнаяСуммаОборот * &КоэффициентСумма КАК Сумма,
		|	НАЧАЛОПЕРИОДА(ОборотыБюджетовОбороты.ПериодПланирования,"+?((НЕ ЗначениеЗаполнено(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый))),"МЕСЯЦ",Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)))+") КАК Период,
		|	НАЧАЛОПЕРИОДА(ОборотыБюджетовОбороты.ПериодПланирования,"+?((НЕ ЗначениеЗаполнено(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый))),"МЕСЯЦ",Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)))+") КАК ПериодПланирования
		|ПОМЕСТИТЬ ВТ_Обороты
		|ИЗ
		|	РегистрНакопления.фин_ОборотыБюджетов.Обороты(,,,ПериодПланирования >=&НачалоПериода И ПериодПланирования <=&КонецПериода И  Сценарий = &Сценарий "+?(УправленческоеПодразделениеКопируемый.Пустая(),""," И УправленческоеПодразделение=&УправленческоеПодразделение")+?(ПроектКопируемый.Пустая(),""," И Проект=&Проект")+") КАК ОборотыБюджетовОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.фин_ЗависимостиФинансовыхПоказателей.СрезПоследних(&Дата,"+?(УправленческоеПодразделение.Пустая(),""," (ИсходныйНаборРазрезов.УправленческоеПодразделение=&УправленческоеПодразделение ИЛИ НЕ ИсходныйНаборРазрезов.ОтборУправленческоеПодразделение) И ")+?(Проект.Пустая(),""," (ИсходныйНаборРазрезов.Проект=&Проект ИЛИ НЕ ИсходныйНаборРазрезов.ОтборПроект) И ")+"
		|				(ИсхСценарий = &Сценарий
		|					ИЛИ ИсхСценарий = ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СценарииПланирования.ПустаяСсылка))) КАК ЗависимостиФинансовыхПоказателей
		| ПО ОборотыБюджетовОбороты.ФинансовыйПоказатель = ЗависимостиФинансовыхПоказателей.ЗависимаяФинансовыйПоказатель
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СписокСтатей КАК ВТ_СписокСтатей
		|		ПО ОборотыБюджетовОбороты.ФинансовыйПоказатель = ВТ_СписокСтатей.ФинансовыйПоказатель
		|	ГДЕ ВТ_СписокСтатей.ФинансовыйПоказатель ЕСТЬ NULL
		|		И ЗависимостиФинансовыхПоказателей.ЗависимаяФинансовыйПоказатель ЕСТЬ NULL
		|";
		Если НЕ ЗначениеЗаполнено(Сценарий) Тогда
			Для Каждого ИмяРегистра Из МассивРегистров Цикл
				Если ИмяРегистра = "фин_ОборотыБюджетов" Тогда
					Продолжить;
				КонецЕсли;
				Запрос.Текст=Запрос.Текст+"
				|ОБЪЕДИНИТЬ ВСЕ
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	НАЧАЛОПЕРИОДА(ОборотыБюджетовОбороты.ПериодПланирования,"+?((НЕ ЗначениеЗаполнено(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый))),"МЕСЯЦ",Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)))+") КАК ПериодПланированияЗаявки,
				|	ОборотыБюджетовОбороты.Сценарий,
				|	ОборотыБюджетовОбороты.Проект,
				|	ОборотыБюджетовОбороты.УправленческоеПодразделение,
				|	ОборотыБюджетовОбороты.ДополнительныеРазрезы,
				|	ОборотыБюджетовОбороты.ФинансовыйПоказатель,
				|	ОборотыБюджетовОбороты.Контрагент,
				|	ОборотыБюджетовОбороты.Номенклатура,
				|	ОборотыБюджетовОбороты.Валюта,
				|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез1 КАК Разрез1,
				|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез2 КАК Разрез2,
				|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез3 КАК Разрез3,
				|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез4 КАК Разрез4,
				|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез5 КАК Разрез5,
				|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез6 КАК Разрез6,
				|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез7 КАК Разрез7,
				|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез8 КАК Разрез8,
				|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез9 КАК Разрез9,
				|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез10 КАК Разрез10,
				|	ОборотыБюджетовОбороты.КоличествоОборот * &КоэффициентКоличество КАК Количество,
				|	ОборотыБюджетовОбороты.ВалютнаяСуммаОборот * &КоэффициентСумма КАК Сумма,
				|	НАЧАЛОПЕРИОДА(ОборотыБюджетовОбороты.ПериодПланирования,"+?((НЕ ЗначениеЗаполнено(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый))),"МЕСЯЦ",Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)))+") КАК Период,
				|	НАЧАЛОПЕРИОДА(ОборотыБюджетовОбороты.ПериодПланирования,"+?((НЕ ЗначениеЗаполнено(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый))),"МЕСЯЦ",Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)))+") КАК ПериодПланирования
				|ПОМЕСТИТЬ ВТ_Обороты
				|ИЗ
				|	РегистрНакопления."+ИмяРегистра+".Обороты(,,,ПериодПланирования >=&НачалоПериода И ПериодПланирования <=&КонецПериода И  Сценарий = &Сценарий "+?(УправленческоеПодразделениеКопируемый.Пустая(),""," И УправленческоеПодразделение=&УправленческоеПодразделение")+?(ПроектКопируемый.Пустая(),""," И Проект=&Проект")+") КАК ОборотыБюджетовОбороты
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.фин_ЗависимостиФинансовыхПоказателей.СрезПоследних(&Дата,"+?(УправленческоеПодразделение.Пустая(),""," (ИсходныйНаборРазрезов.УправленческоеПодразделение=&УправленческоеПодразделение ИЛИ НЕ ИсходныйНаборРазрезов.ОтборУправленческоеПодразделение) И ")+?(Проект.Пустая(),""," (ИсходныйНаборРазрезов.Проект=&Проект ИЛИ НЕ ИсходныйНаборРазрезов.ОтборПроект) И ")+"
				|				(ИсхСценарий = &Сценарий
				|					ИЛИ ИсхСценарий = ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СценарииПланирования.ПустаяСсылка))) КАК ЗависимостиФинансовыхПоказателей
				| ПО ОборотыБюджетовОбороты.ФинансовыйПоказатель = ЗависимостиФинансовыхПоказателей.ЗависимаяФинансовыйПоказатель
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СписокСтатей КАК ВТ_СписокСтатей
				|		ПО ОборотыБюджетовОбороты.ФинансовыйПоказатель = ВТ_СписокСтатей.ФинансовыйПоказатель
				|	ГДЕ ВТ_СписокСтатей.ФинансовыйПоказатель ЕСТЬ NULL
				|		И ЗависимостиФинансовыхПоказателей.ЗависимаяФинансовыйПоказатель ЕСТЬ NULL
				|";
			КонецЦикла;
		КонецЕсли;
		Запрос.Текст=Запрос.Текст+"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Курс КАК КурсОперации,
		|	ВложенныйЗапрос.Кратность КАК КратностьОперации,
		|	ДОБАВИТЬКДАТЕ(ВТ_Обороты.ПериодПланированияЗаявки,"+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)+","+Строка(СмещениеПериодаБюджета)+") КАК ПериодПланированияЗаявки,
		|	ВТ_Обороты.Сценарий,
		|	ВТ_Обороты.Проект,
		|	ВТ_Обороты.УправленческоеПодразделение,
		|	ВТ_Обороты.ДополнительныеРазрезы,
		|	ВТ_Обороты.ФинансовыйПоказатель,
		|	ВТ_Обороты.Контрагент,
		|	ВТ_Обороты.Номенклатура,
		|	ВТ_Обороты.Валюта КАК ВалютаОперации,
		|	ВТ_Обороты.Разрез1,
		|	ВТ_Обороты.Разрез2,
		|	ВТ_Обороты.Разрез3,
		|	ВТ_Обороты.Разрез4,
		|	ВТ_Обороты.Разрез5,
		|	ВТ_Обороты.Разрез6,
		|	ВТ_Обороты.Разрез7,
		|	ВТ_Обороты.Разрез8,
		|	ВТ_Обороты.Разрез9,
		|	ВТ_Обороты.Разрез10,
		|	ВТ_Обороты.Количество,
		|	ВТ_Обороты.Сумма,
		|	ДОБАВИТЬКДАТЕ(ВТ_Обороты.Период,"+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)+","+Строка(СмещениеПериодаБюджета)+") КАК Период,
		|	ДОБАВИТЬКДАТЕ(ВТ_Обороты.ПериодПланирования,"+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)+","+Строка(СмещениеПериодаБюджета)+") КАК ПериодПланирования,
		|	Ложь КАК ЗависимаяСтатья,
		|	Ложь КАК Модель,
		|	Ложь КАК Наследуемая,
		|	0 КАК ИдентификаторСтроки,
		|	ЛОЖЬ КАК ВложеннаяЗависимость,
		|	0 КАК ВлияющаяОперация,
		|	0 КАК Цена,
		|	ЗНАЧЕНИЕ(Перечисление."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СостоянияОбъектов.Подготовлен) КАК Состояние,
		|	СтатьиБюджета.Ссылка КАК СтатьяБюджета
		|ИЗ
		|	ВТ_Обороты КАК ВТ_Обороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВложенныйЗапрос.Валюта КАК Валюта,
		|			ВложенныйЗапрос.ПериодПланирования КАК ПериодПланирования,
		|			КурсыВалют.Курс КАК Курс,
		|			КурсыВалют.Кратность КАК Кратность
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ВложенныйЗапрос.Валюта КАК Валюта,
		|				ВложенныйЗапрос.ПериодПланирования КАК ПериодПланирования,
		|				МАКСИМУМ(КурсыВалют.Период) КАК ПериодКурса
		|			ИЗ
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВТ_Обороты.Валюта КАК Валюта,
		|					ВТ_Обороты.ПериодПланирования КАК ПериодПланирования
		|				ИЗ
		|					ВТ_Обороты КАК ВТ_Обороты) КАК ВложенныйЗапрос
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|					ПО ВложенныйЗапрос.Валюта = КурсыВалют.Валюта
		|						И ВложенныйЗапрос.ПериодПланирования >= КурсыВалют.Период
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ВложенныйЗапрос.Валюта,
		|				ВложенныйЗапрос.ПериодПланирования) КАК ВложенныйЗапрос
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|				ПО ВложенныйЗапрос.Валюта = КурсыВалют.Валюта
		|					И ВложенныйЗапрос.ПериодКурса = КурсыВалют.Период) КАК ВложенныйЗапрос
		|		ПО ВТ_Обороты.ПериодПланирования = ВложенныйЗапрос.ПериодПланирования
		|			И ВТ_Обороты.Валюта = ВложенныйЗапрос.Валюта
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
		|		ПО ВТ_Обороты.ФинансовыйПоказатель = СтатьиБюджета.ФинансовыйПоказатель
		|			И СтатьиБюджета.Владелец = &Бюджет И СтатьиБюджета.ФинансовыйПоказатель НЕ В (&СписокРассчитываемых)";		   
		Запрос.УстановитьПараметр("Сценарий",		Сценарий);       
		Запрос.УстановитьПараметр("Регламент",		фин_ОбщегоНазначенияВызовСервераПовтИсп.БюджетныйРегламентПериода(ПериодПланирования));       
		Запрос.УстановитьПараметр("СписокРассчитываемых",			СписокРассчитываемыхПоМодели);
		Запрос.УстановитьПараметр("Бюджет",			Бюджет);
		Запрос.УстановитьПараметр("Проект",			ПроектКопируемый);
		Запрос.УстановитьПараметр("УправленческоеПодразделение",			УправленческоеПодразделениеКопируемый);
		Запрос.УстановитьПараметр("Проект",			Проект);
		Запрос.УстановитьПараметр("КоэффициентКоличество",	КоэффициентКоличество);
		Запрос.УстановитьПараметр("КоэффициентСумма",		КоэффициентСумма);
		Запрос.УстановитьПараметр("Дата",			ТекущаяДата());
		Запрос.УстановитьПараметр("НачалоПериода",	фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(ПериодПланированияКопируемый,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)));
		Запрос.УстановитьПараметр("КонецПериода",	?(СценарийФормируемый.ПродолжительностьЦикла<2,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ПериодПланированияКопируемый,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)),фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ПериодПланированияКопируемый,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)),фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый),СценарийФормируемый.ПродолжительностьЦикла-1)));
		РезультатЗапроса = Запрос.Выполнить();
		ТаблицаОсновныхОборотов 	= РезультатЗапроса.Выгрузить();
		Таблица = ТаблицаОсновныхОборотов.Скопировать(,"СтатьяБюджета");
		Таблица.Свернуть("СтатьяБюджета");
		Для Каждого СтрокаОборотов Из ТаблицаОсновныхОборотов Цикл
			
			СтрокиКоэффициент = Поправки.НайтиСтроки(Новый Структура("СтатьяБюджета",СтрокаОборотов.СтатьяБюджета));
			Если СтрокиКоэффициент.Количество() > 0 Тогда
				СтрокаОборотов.Сумма 		= СтрокаОборотов.Сумма * СтрокиКоэффициент[0].ПоправочныйКоэффициент;
				СтрокаОборотов.Количество 	= СтрокаОборотов.Количество * СтрокиКоэффициент[0].ПоправочныйКоэффициентКоличество;
			КонецЕсли;
			Если СтрокаОборотов.ФинансовыйПоказатель.СпособЦенообразования <> Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.НеРассчитывать И НЕ Объект.НеПересчитыватьЦеныПоИсточникам Тогда
				фин_ПроцедурыУправленияПлановымЦенообразованием.УстановитьЦенуПоУмолчанию(СтрокаОборотов,Сценарий,ВестиУчетПоПроектам,СтрокаОборотов.ПериодПланирования);
			Иначе
				СтрокаОборотов.Цена = ?(СтрокаОборотов.Количество=0,0,СтрокаОборотов.Сумма/СтрокаОборотов.Количество);
			КонецЕсли;
			Если СписокРассчитываемыхПоМодели.НайтиПоЗначению(СтрокаОборотов.СтатьяБюджета)<>Неопределено Тогда
				СтрокаОборотов.Модель = Истина;
			КонецЕсли;
		КонецЦикла;
		Если ТаблицаОсновныхОборотов.Колонки.Найти("НомерСтроки")=Неопределено Тогда
			ТаблицаОсновныхОборотов.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Строка"));
			НомерСтроки = 1;
			Для Каждого СтрокаОборотов Из ТаблицаОсновныхОборотов Цикл
				СтрокаОборотов.НомерСтроки = НомерСтроки;
				НомерСтроки = НомерСтроки + 1;
			КонецЦикла;
		КонецЕсли;
		ОборотыПоСтатьям = ТаблицаОсновныхОборотов;
	ИначеЕсли СпособФормирования = Перечисления.фин_СпособыФормированияБюджета.ПоНеисполненнымОстаткамПредыдущегоПериода Тогда
		Запрос.Текст="
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОборотыБюджетовОбороты.Сценарий,
		|	ОборотыБюджетовОбороты.Проект,
		|	ОборотыБюджетовОбороты.УправленческоеПодразделение,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы,
		|	ОборотыБюджетовОбороты.ФинансовыйПоказатель,
		|	ОборотыБюджетовОбороты.Контрагент,
		|	ОборотыБюджетовОбороты.Номенклатура,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез1 КАК Разрез1,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез2 КАК Разрез2,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез3 КАК Разрез3,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез4 КАК Разрез4,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез5 КАК Разрез5,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез6 КАК Разрез6,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез7 КАК Разрез7,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез8 КАК Разрез8,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез9 КАК Разрез9,
		|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез10 КАК Разрез10,
		|	ОборотыБюджетовОбороты.КоличествоОборот * &КоэффициентКоличество КАК Количество,
		|	ОборотыБюджетовОбороты.СуммаУпрОборот * &КоэффициентСумма КАК Сумма,
		|	НАЧАЛОПЕРИОДА(ОборотыБюджетовОбороты.ПериодПланирования,"+?(НЕ ЗначениеЗаполнено(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)),"МЕСЯЦ",Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)))+") КАК ПериодПланирования
		|ПОМЕСТИТЬ ВТ_Обороты
		|ИЗ
		|	РегистрНакопления.фин_ОборотыБюджетов.Обороты(,,,ФинансовыйПоказатель В (&Показатели) И ПериодПланирования >=&НачалоПериода И ПериодПланирования <=&КонецПериода И  Сценарий = &Сценарий "+?(УправленческоеПодразделениеКопируемый.Пустая(),""," И УправленческоеПодразделение=&УправленческоеПодразделение")+?(ПроектКопируемый.Пустая(),""," И Проект=&Проект")+") КАК ОборотыБюджетовОбороты
		|";
		Для Каждого ИмяРегистра Из МассивРегистров Цикл
			Запрос.Текст=Запрос.Текст+"
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	&Сценарий,
			|	ОборотыБюджетовОбороты.Проект,
			|	ОборотыБюджетовОбороты.УправленческоеПодразделение,
			|	ОборотыБюджетовОбороты.ДополнительныеРазрезы,
			|	ОборотыБюджетовОбороты.ФинансовыйПоказатель,
			|	ОборотыБюджетовОбороты.Контрагент,
			|	ОборотыБюджетовОбороты.Номенклатура,
			|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез1 КАК Разрез1,
			|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез2 КАК Разрез2,
			|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез3 КАК Разрез3,
			|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез4 КАК Разрез4,
			|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез5 КАК Разрез5,
			|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез6 КАК Разрез6,
			|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез7 КАК Разрез7,
			|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез8 КАК Разрез8,
			|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез9 КАК Разрез9,
			|	ОборотыБюджетовОбороты.ДополнительныеРазрезы.Разрез10 КАК Разрез10,
			|	-ОборотыБюджетовОбороты.КоличествоОборот * &КоэффициентКоличество КАК Количество,
			|	-ОборотыБюджетовОбороты.СуммаУпрОборот * &КоэффициентСумма КАК Сумма,
			|	НАЧАЛОПЕРИОДА(ОборотыБюджетовОбороты.ПериодПланирования,"+?((НЕ ЗначениеЗаполнено(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый))),"МЕСЯЦ",Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)))+") КАК ПериодПланирования
			|ИЗ
			|	РегистрНакопления."+ИмяРегистра+".Обороты(,,,ФинансовыйПоказатель В (&Показатели) И ПериодПланирования >=&НачалоПериода И ПериодПланирования <=&КонецПериода И  Сценарий = ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СценарииПланирования.ПустаяСсылка) "+?(УправленческоеПодразделениеКопируемый.Пустая(),""," И УправленческоеПодразделение=&УправленческоеПодразделение")+?(ПроектКопируемый.Пустая(),""," И Проект=&Проект")+") КАК ОборотыБюджетовОбороты
			|
			|";
		КонецЦикла;
		Запрос.Текст=Запрос.Текст+"
		
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Обороты.Сценарий,
		|	ВТ_Обороты.Проект,
		|	ВТ_Обороты.УправленческоеПодразделение,
		|	ВТ_Обороты.ДополнительныеРазрезы,
		|	ВТ_Обороты.ФинансовыйПоказатель,
		|	ВТ_Обороты.Контрагент,
		|	ВТ_Обороты.Номенклатура,
		|	ВТ_Обороты.Разрез1,
		|	ВТ_Обороты.Разрез2,
		|	ВТ_Обороты.Разрез3,
		|	ВТ_Обороты.Разрез4,
		|	ВТ_Обороты.Разрез5,
		|	ВТ_Обороты.Разрез6,
		|	ВТ_Обороты.Разрез7,
		|	ВТ_Обороты.Разрез8,
		|	ВТ_Обороты.Разрез9,
		|	ВТ_Обороты.Разрез10,
		|	СУММА(ВТ_Обороты.Количество) КАК Количество,
		|	СУММА(ВТ_Обороты.Сумма) КАК Сумма,
		|	ВТ_Обороты.ПериодПланирования
		|ПОМЕСТИТЬ ВТ_ИтоговыеОбороты
		|ИЗ
		|	ВТ_Обороты КАК ВТ_Обороты
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Обороты.Сценарий,
		|	ВТ_Обороты.Проект,
		|	ВТ_Обороты.УправленческоеПодразделение,
		|	ВТ_Обороты.ДополнительныеРазрезы,
		|	ВТ_Обороты.ФинансовыйПоказатель,
		|	ВТ_Обороты.Контрагент,
		|	ВТ_Обороты.Номенклатура,
		|	ВТ_Обороты.Разрез1,
		|	ВТ_Обороты.Разрез2,
		|	ВТ_Обороты.Разрез3,
		|	ВТ_Обороты.Разрез4,
		|	ВТ_Обороты.Разрез5,
		|	ВТ_Обороты.Разрез6,
		|	ВТ_Обороты.Разрез7,
		|	ВТ_Обороты.Разрез8,
		|	ВТ_Обороты.Разрез9,
		|	ВТ_Обороты.Разрез10,
		|	ВТ_Обороты.ПериодПланирования
		|ИМЕЮЩИЕ СУММА(ВТ_Обороты.Сумма)>0 ИЛИ СУММА(ВТ_Обороты.Количество)>0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Обороты.Сценарий,
		|	ВТ_Обороты.Проект,
		|	ВТ_Обороты.УправленческоеПодразделение,
		|	ВТ_Обороты.ДополнительныеРазрезы,
		|	ВТ_Обороты.ФинансовыйПоказатель,
		|	ВТ_Обороты.Контрагент,
		|	ВТ_Обороты.Номенклатура,
		|	&ВалютаУпр КАК ВалютаОперации,
		|	ВТ_Обороты.Разрез1,
		|	ВТ_Обороты.Разрез2,
		|	ВТ_Обороты.Разрез3,
		|	ВТ_Обороты.Разрез4,
		|	ВТ_Обороты.Разрез5,
		|	ВТ_Обороты.Разрез6,
		|	ВТ_Обороты.Разрез7,
		|	ВТ_Обороты.Разрез8,
		|	ВТ_Обороты.Разрез9,
		|	ВТ_Обороты.Разрез10,
		|	ВЫБОР КОГДА ВТ_Обороты.Количество<0 ТОГДА 0 ИНАЧЕ ВТ_Обороты.Количество КОНЕЦ КАК Количество,
		|	ВЫБОР КОГДА ВТ_Обороты.Сумма<0 ТОГДА 0 ИНАЧЕ ВТ_Обороты.Сумма КОНЕЦ КАК Сумма,
		|	ДОБАВИТЬКДАТЕ(ВТ_Обороты.ПериодПланирования,"+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)+",1) КАК ПериодПланирования,
		|	0 КАК Цена,
		|	ЗНАЧЕНИЕ(Перечисление."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СостоянияОбъектов.Подготовлен) КАК Состояние,
		|	СтатьиБюджета.Ссылка КАК СтатьяБюджета
		|ИЗ
		|	ВТ_ИтоговыеОбороты КАК ВТ_Обороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
		|		ПО ВТ_Обороты.ФинансовыйПоказатель = СтатьиБюджета.ФинансовыйПоказатель
		|			И СтатьиБюджета.Владелец = &Бюджет";		   
		Запрос.УстановитьПараметр("Показатели", фин_УправлениеБюджетированием.ПервичныеСтатьиБюджета(Объект.Бюджет,Объект.ПериодПланирования,Истина));
		Запрос.УстановитьПараметр("ВалютаУпр",		фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета"));       
		Запрос.УстановитьПараметр("Сценарий",		СценарийФормируемый);       
		Запрос.УстановитьПараметр("Регламент",		фин_ОбщегоНазначенияВызовСервераПовтИсп.БюджетныйРегламентПериода(ПериодПланирования));       
		Запрос.УстановитьПараметр("СписокРассчитываемых",			СписокРассчитываемыхПоМодели);
		Запрос.УстановитьПараметр("Бюджет",			Бюджет);
		Запрос.УстановитьПараметр("Проект",			ПроектКопируемый);
		Запрос.УстановитьПараметр("УправленческоеПодразделение",			УправленческоеПодразделениеКопируемый);
		Запрос.УстановитьПараметр("Проект",			Проект);
		Запрос.УстановитьПараметр("КоэффициентКоличество",	КоэффициентКоличество);
		Запрос.УстановитьПараметр("КоэффициентСумма",		КоэффициентСумма);
		Запрос.УстановитьПараметр("Дата",			ТекущаяДата());
		Запрос.УстановитьПараметр("НачалоПериода",	фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПланирования,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый),-1));
		Запрос.УстановитьПараметр("КонецПериода",	фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПланирования,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый),-1),фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)));
		РезультатЗапроса = Запрос.Выполнить();
		ТаблицаОсновныхОборотов 	= РезультатЗапроса.Выгрузить();
		Таблица = ТаблицаОсновныхОборотов.Скопировать(,"СтатьяБюджета");
		Таблица.Свернуть("СтатьяБюджета");
		Для Каждого СтрокаОборотов Из ТаблицаОсновныхОборотов Цикл
			
			СтрокиКоэффициент = Поправки.НайтиСтроки(Новый Структура("СтатьяБюджета",СтрокаОборотов.СтатьяБюджета));
			Если СтрокиКоэффициент.Количество() > 0 Тогда
				СтрокаОборотов.Сумма 		= СтрокаОборотов.Сумма * СтрокиКоэффициент[0].ПоправочныйКоэффициент;
				СтрокаОборотов.Количество 	= СтрокаОборотов.Количество * СтрокиКоэффициент[0].ПоправочныйКоэффициентКоличество;
			КонецЕсли;
			Если СтрокаОборотов.ФинансовыйПоказатель.СпособЦенообразования <> Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.НеРассчитывать И НЕ Объект.НеПересчитыватьЦеныПоИсточникам Тогда
				фин_ПроцедурыУправленияПлановымЦенообразованием.УстановитьЦенуПоУмолчанию(СтрокаОборотов,Сценарий,ВестиУчетПоПроектам,СтрокаОборотов.ПериодПланирования);
			Иначе
				СтрокаОборотов.Цена = ?(СтрокаОборотов.Количество=0,0,СтрокаОборотов.Сумма/СтрокаОборотов.Количество);
			КонецЕсли;
		КонецЦикла;
		Если ТаблицаОсновныхОборотов.Колонки.Найти("НомерСтроки")=Неопределено Тогда
			ТаблицаОсновныхОборотов.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Строка"));
			НомерСтроки = 1;
			Для Каждого СтрокаОборотов Из ТаблицаОсновныхОборотов Цикл
				СтрокаОборотов.НомерСтроки = НомерСтроки;
				НомерСтроки = НомерСтроки + 1;
			КонецЦикла;
		КонецЕсли;
		ОборотыПоСтатьям = ТаблицаОсновныхОборотов;
	ИначеЕсли СпособФормирования = Перечисления.фин_СпособыФормированияБюджета.ПоПлануДвиженияДенежныхСредств Тогда
		Запрос.Текст = 		"ВЫБРАТЬ
		|	ПланыДвиженияДенежныхСредствОбороты.ВидДенежныхСредств КАК ВидДенежныхСредств,
		|	ПланыДвиженияДенежныхСредствОбороты.ПриходРасход КАК ПриходРасход,
		|	ПланыДвиженияДенежныхСредствОбороты.ВалютаДенежныхСредств,
		|	ПланыДвиженияДенежныхСредствОбороты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
		|	ПланыДвиженияДенежныхСредствОбороты.Проект,
		|	ПланыДвиженияДенежныхСредствОбороты.Контрагент,
		|	ПланыДвиженияДенежныхСредствОбороты.Подразделение,
		|	ПланыДвиженияДенежныхСредствОбороты.ВидОперации КАК ВидОперации,
		|	ПланыДвиженияДенежныхСредствОбороты.СуммаОборот,
		|	ПланыДвиженияДенежныхСредствОбороты.СуммаУпрОборот,
		|	ПланыДвиженияДенежныхСредствОбороты.Период"+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)+" КАК Период
		|ПОМЕСТИТЬ ВТ_ПланыДДС
		|ИЗ
		|	РегистрНакопления.ден_ПланыДвиженияДенежныхСредств.Обороты(&НачалоПериода, &КонецПериода, Авто, Сценарий = &Сценарий "+?(УправленческоеПодразделениеКопируемый.Пустая(),""," И УправленческоеПодразделение=&УправленческоеПодразделение")+?(ПроектКопируемый.Пустая(),""," И Проект=&Проект")+") КАК ПланыДвиженияДенежныхСредствОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидДенежныхСредств,
		|	ПриходРасход,
		|	СтатьяДвиженияДенежныхСредств,
		|	ВидОперации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПланыДДС.Период КАК ПериодПланирования,
		|	ВТ_ПланыДДС.ВалютаДенежныхСредств КАК ВалютаОперации,
		|	ВТ_ПланыДДС.СуммаОборот КАК Сумма,
		|	ВТ_ПланыДДС.СуммаУпрОборот КАК СуммаУпр,
		|	ВЫБОР
		|		КОГДА ПараметрыПолные.ФинансовыйПоказатель ЕСТЬ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА ПараметрыБезУчетаВида.ФинансовыйПоказатель ЕСТЬ NULL 
		|						ТОГДА ВЫБОР
		|								КОГДА ПараметрыБезУчетаСтатьи.ФинансовыйПоказатель ЕСТЬ NULL 
		|									ТОГДА ПараметрыБезУчетаВидаИСтатьи.ФинансовыйПоказатель
		|								ИНАЧЕ ПараметрыБезУчетаСтатьи.ФинансовыйПоказатель
		|							КОНЕЦ
		|					ИНАЧЕ ПараметрыБезУчетаВида.ФинансовыйПоказатель
		|				КОНЕЦ
		|		ИНАЧЕ ПараметрыПолные.ФинансовыйПоказатель
		|	КОНЕЦ КАК ФинансовыйПоказатель,
		|	ВЫБОР
		|		КОГДА ПараметрыПолные.ФинансовыйПоказатель ЕСТЬ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА ПараметрыБезУчетаВида.ФинансовыйПоказатель ЕСТЬ NULL 
		|						ТОГДА ВЫБОР
		|								КОГДА ПараметрыБезУчетаСтатьи.ФинансовыйПоказатель ЕСТЬ NULL 
		|									ТОГДА ПараметрыБезУчетаВидаИСтатьи.ПоПроект
		|								ИНАЧЕ ПараметрыБезУчетаСтатьи.ПоПроект
		|							КОНЕЦ
		|					ИНАЧЕ ПараметрыБезУчетаВида.ПоПроект
		|				КОНЕЦ
		|		ИНАЧЕ ПараметрыПолные.ПоПроект
		|	КОНЕЦ КАК ПоПроект,
		|	ВЫБОР
		|		КОГДА ПараметрыПолные.ФинансовыйПоказатель ЕСТЬ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА ПараметрыБезУчетаВида.ФинансовыйПоказатель ЕСТЬ NULL 
		|						ТОГДА ВЫБОР
		|								КОГДА ПараметрыБезУчетаСтатьи.ФинансовыйПоказатель ЕСТЬ NULL 
		|									ТОГДА ПараметрыБезУчетаВидаИСтатьи.ПоКонтрагент
		|								ИНАЧЕ ПараметрыБезУчетаСтатьи.ПоКонтрагент
		|							КОНЕЦ
		|					ИНАЧЕ ПараметрыБезУчетаВида.ПоКонтрагент
		|				КОНЕЦ
		|		ИНАЧЕ ПараметрыПолные.ПоКонтрагент
		|	КОНЕЦ КАК ПоКонтрагент,
		|	ВЫБОР
		|		КОГДА ПараметрыПолные.ФинансовыйПоказатель ЕСТЬ NULL 
		|			ТОГДА ВЫБОР
		|					КОГДА ПараметрыБезУчетаВида.ФинансовыйПоказатель ЕСТЬ NULL 
		|						ТОГДА ВЫБОР
		|								КОГДА ПараметрыБезУчетаСтатьи.ФинансовыйПоказатель ЕСТЬ NULL 
		|									ТОГДА ПараметрыБезУчетаВидаИСтатьи.ПоУправленческоеПодразделение
		|								ИНАЧЕ ПараметрыБезУчетаСтатьи.ПоУправленческоеПодразделение
		|							КОНЕЦ
		|					ИНАЧЕ ПараметрыБезУчетаВида.ПоУправленческоеПодразделение
		|				КОНЕЦ
		|		ИНАЧЕ ПараметрыПолные.ПоУправленческоеПодразделение
		|	КОНЕЦ КАК ПоУправленческоеПодразделение,
		|	ВТ_ПланыДДС.Проект,
		|	ВТ_ПланыДДС.Контрагент,
		|	ВТ_ПланыДДС.Подразделение
		|ПОМЕСТИТЬ ВТ_ПредварительныеОбороты
		|ИЗ
		|	ВТ_ПланыДДС КАК ВТ_ПланыДДС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ден_ПараметрыСвязиБюджетаИПлановДДС КАК ПараметрыПолные
		|		ПО ВТ_ПланыДДС.ВидДенежныхСредств = ПараметрыПолные.ВидДенежныхСредств
		|			И ВТ_ПланыДДС.ПриходРасход = ПараметрыПолные.ПриходРасход
		|			И ВТ_ПланыДДС.СтатьяДвиженияДенежныхСредств = ПараметрыПолные.СтатьяДвиженияДенежныхСредств
		|			И ВТ_ПланыДДС.ВидОперации = ПараметрыПолные.ВидОперации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ден_ПараметрыСвязиБюджетаИПлановДДС КАК ПараметрыБезУчетаВида
		|		ПО ВТ_ПланыДДС.СтатьяДвиженияДенежныхСредств = ПараметрыБезУчетаВида.СтатьяДвиженияДенежныхСредств
		|			И ВТ_ПланыДДС.ПриходРасход = ПараметрыБезУчетаВида.ПриходРасход
		|			И ВТ_ПланыДДС.ВидОперации = ПараметрыБезУчетаВида.ВидОперации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ден_ПараметрыСвязиБюджетаИПлановДДС КАК ПараметрыБезУчетаСтатьи
		|		ПО ВТ_ПланыДДС.ПриходРасход = ПараметрыБезУчетаСтатьи.ПриходРасход
		|			И ВТ_ПланыДДС.ВидДенежныхСредств = ПараметрыБезУчетаСтатьи.ВидДенежныхСредств
		|			И ВТ_ПланыДДС.ВидОперации = ПараметрыБезУчетаСтатьи.ВидОперации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ден_ПараметрыСвязиБюджетаИПлановДДС КАК ПараметрыБезУчетаВидаИСтатьи
		|		ПО ВТ_ПланыДДС.ВидОперации = ПараметрыБезУчетаВидаИСтатьи.ВидОперации
		|			И ВТ_ПланыДДС.ПриходРасход = ПараметрыБезУчетаВидаИСтатьи.ПриходРасход
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ПараметрыПолные.ФинансовыйПоказатель ЕСТЬ NULL 
		|				ТОГДА ВЫБОР
		|						КОГДА ПараметрыБезУчетаВида.ФинансовыйПоказатель ЕСТЬ NULL 
		|							ТОГДА ВЫБОР
		|									КОГДА ПараметрыБезУчетаСтатьи.ФинансовыйПоказатель ЕСТЬ NULL 
		|										ТОГДА НЕ ПараметрыБезУчетаВидаИСтатьи.ФинансовыйПоказатель ЕСТЬ NULL 
		|									ИНАЧЕ ИСТИНА
		|								КОНЕЦ
		|						ИНАЧЕ ИСТИНА
		|					КОНЕЦ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПредварительныеОбороты.ПериодПланирования,
		|	ВТ_ПредварительныеОбороты.ВалютаОперации,
		|	СУММА(ВТ_ПредварительныеОбороты.Сумма) КАК Сумма,
		|	СУММА(ВТ_ПредварительныеОбороты.СуммаУпр) КАК СуммаУпр,
		|	ВТ_ПредварительныеОбороты.ФинансовыйПоказатель КАК ФинансовыйПоказатель,
		|	ВЫБОР
		|		КОГДА ВТ_ПредварительныеОбороты.ПоПроект = ИСТИНА
		|			ТОГДА ВТ_ПредварительныеОбороты.Проект
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПроектов()+".ПустаяСсылка)
		|	КОНЕЦ КАК Проект,
		|	ВЫБОР
		|		КОГДА ВТ_ПредварительныеОбороты.ПоКонтрагент = ИСТИНА
		|			ТОГДА ВТ_ПредварительныеОбороты.Контрагент
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|	КОНЕЦ КАК Контрагент,
		|	ВЫБОР
		|		КОГДА ВТ_ПредварительныеОбороты.ПоУправленческоеПодразделение = ИСТИНА
		|			ТОГДА ВТ_ПредварительныеОбороты.Подразделение
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПодразделений()+".ПустаяСсылка)
		|	КОНЕЦ КАК УправленческоеПодразделение
		|ПОМЕСТИТЬ ВТ_ПодготовленныеОбороты
		|ИЗ
		|	ВТ_ПредварительныеОбороты КАК ВТ_ПредварительныеОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПредварительныеОбороты.ПериодПланирования,
		|	ВТ_ПредварительныеОбороты.ВалютаОперации,
		|	ВТ_ПредварительныеОбороты.ФинансовыйПоказатель,
		|	ВЫБОР
		|		КОГДА ВТ_ПредварительныеОбороты.ПоПроект = ИСТИНА
		|			ТОГДА ВТ_ПредварительныеОбороты.Проект
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПроектов()+".ПустаяСсылка)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ПредварительныеОбороты.ПоКонтрагент = ИСТИНА
		|			ТОГДА ВТ_ПредварительныеОбороты.Контрагент
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ПредварительныеОбороты.ПоУправленческоеПодразделение = ИСТИНА
		|			ТОГДА ВТ_ПредварительныеОбороты.Подразделение
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПодразделений()+".ПустаяСсылка)
		|	КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФинансовыйПоказатель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Курс КАК КурсОперации,
		|	ВложенныйЗапрос.Кратность КАК КратностьОперации,
		|	&Сценарий КАК Сценарий,
		|	ДОБАВИТЬКДАТЕ(ВТ_ПодготовленныеОбороты.ПериодПланирования,"+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)+","+Строка(СмещениеПериодаБюджета)+") КАК Период,
		|	ДОБАВИТЬКДАТЕ(ВТ_ПодготовленныеОбороты.ПериодПланирования,"+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)+","+Строка(СмещениеПериодаБюджета)+") КАК ПериодПланирования,
		|	ДОБАВИТЬКДАТЕ(ВТ_ПодготовленныеОбороты.ПериодПланирования,"+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)+","+Строка(СмещениеПериодаБюджета)+") КАК ПериодПланированияЗаявки,
		|	ВТ_ПодготовленныеОбороты.ВалютаОперации,
		|	ВТ_ПодготовленныеОбороты.Сумма*&КоэффициентСумма КАК Сумма,
		|	ВТ_ПодготовленныеОбороты.СуммаУпр*&КоэффициентСумма КАК СуммаУпр,
		|	ВТ_ПодготовленныеОбороты.ФинансовыйПоказатель,
		|	ВТ_ПодготовленныеОбороты.Проект,
		|	ВТ_ПодготовленныеОбороты.Контрагент,
		|	ВТ_ПодготовленныеОбороты.УправленческоеПодразделение,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Перечисление."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СостоянияОбъектов.Подготовлен) КАК Состояние,
		|	Ложь КАК ЗависимаяСтатья,
		|	Ложь КАК Модель,
		|	Ложь КАК Наследуемая,
		|	0 КАК ИдентификаторСтроки,
		|	ЛОЖЬ КАК ВложеннаяЗависимость,
		|	0 КАК НомерСтроки,
		|	0 КАК ВлияющаяОперация,
		|	0 КАК Цена,
		|	0 КАК Количество,
		|	СтатьиБюджета.Ссылка КАК СтатьяБюджета
		|ИЗ
		|	ВТ_ПодготовленныеОбороты КАК ВТ_ПодготовленныеОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.фин_СтатьиБюджета КАК СтатьиБюджета
		|		ПО ВТ_ПодготовленныеОбороты.ФинансовыйПоказатель = СтатьиБюджета.ФинансовыйПоказатель
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВложенныйЗапрос.Валюта КАК Валюта,
		|			ВложенныйЗапрос.ПериодПланирования КАК ПериодПланирования,
		|			КурсыВалют.Курс КАК Курс,
		|			КурсыВалют.Кратность КАК Кратность
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ВложенныйЗапрос.Валюта КАК Валюта,
		|				ВложенныйЗапрос.ПериодПланирования КАК ПериодПланирования,
		|				МАКСИМУМ(КурсыВалют.Период) КАК ПериодКурса
		|			ИЗ
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВТ_ПредварительныеОбороты.ВалютаОперации КАК Валюта,
		|					ВТ_ПредварительныеОбороты.ПериодПланирования КАК ПериодПланирования
		|				ИЗ
		|					ВТ_ПредварительныеОбороты КАК ВТ_ПредварительныеОбороты) КАК ВложенныйЗапрос
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|					ПО ВложенныйЗапрос.Валюта = КурсыВалют.Валюта
		|						И ВложенныйЗапрос.ПериодПланирования >= КурсыВалют.Период
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ВложенныйЗапрос.Валюта,
		|				ВложенныйЗапрос.ПериодПланирования) КАК ВложенныйЗапрос
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|				ПО ВложенныйЗапрос.Валюта = КурсыВалют.Валюта
		|					И ВложенныйЗапрос.ПериодКурса = КурсыВалют.Период) КАК ВложенныйЗапрос
		|		ПО ВТ_ПодготовленныеОбороты.ПериодПланирования = ВложенныйЗапрос.ПериодПланирования
		|			И ВТ_ПодготовленныеОбороты.ВалютаОперации = ВложенныйЗапрос.Валюта
		|ГДЕ
		|	СтатьиБюджета.Владелец = &Бюджет";
		Запрос.УстановитьПараметр("Сценарий",		Сценарий);       
		Запрос.УстановитьПараметр("Бюджет",			Бюджет);
		Запрос.УстановитьПараметр("Проект",			ПроектКопируемый);
		Запрос.УстановитьПараметр("УправленческоеПодразделение",			УправленческоеПодразделениеКопируемый);
		Запрос.УстановитьПараметр("КоэффициентКоличество",	КоэффициентКоличество);
		Запрос.УстановитьПараметр("КоэффициентСумма",		КоэффициентСумма);
		Запрос.УстановитьПараметр("Дата",			ТекущаяДата());
		Запрос.УстановитьПараметр("НачалоПериода",	фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(ПериодПланированияКопируемый,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)));
		Запрос.УстановитьПараметр("КонецПериода",	?(СценарийФормируемый.ПродолжительностьЦикла<2,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ПериодПланированияКопируемый,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)),фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ПериодПланированияКопируемый,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)),фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый),СценарийФормируемый.ПродолжительностьЦикла-1)));
		РезультатЗапроса = Запрос.Выполнить();
		ТаблицаОсновныхОборотов 	= РезультатЗапроса.Выгрузить();
		Для Инд = 1 По 10 Цикл
			ТаблицаОсновныхОборотов.Колонки.Добавить("Разрез"+Строка(Инд),Метаданные.Документы.фин_Бюджет.ТабличныеЧасти.ОборотыПоСтатьям.Реквизиты["Разрез"+Строка(Инд)].Тип);
		КонецЦикла;
		Для Каждого СтрокаОборотов Из ТаблицаОсновныхОборотов Цикл
			СтрокаОборотов.НомерСтроки = ТаблицаОсновныхОборотов.Индекс(СтрокаОборотов)+1;
			СтрокиКоэффициент = Поправки.НайтиСтроки(Новый Структура("СтатьяБюджета",СтрокаОборотов.СтатьяБюджета));
			Если СтрокиКоэффициент.Количество() > 0 Тогда
				СтрокаОборотов.Сумма 		= СтрокаОборотов.Сумма * СтрокиКоэффициент[0].ПоправочныйКоэффициент;
				СтрокаОборотов.Количество 	= СтрокаОборотов.Количество * СтрокиКоэффициент[0].ПоправочныйКоэффициентКоличество;
			КонецЕсли;
			Если СтрокаОборотов.ФинансовыйПоказатель.СпособЦенообразования <> Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.НеРассчитывать Тогда
				фин_ПроцедурыУправленияПлановымЦенообразованием.УстановитьЦенуПоУмолчанию(СтрокаОборотов,Сценарий,ВестиУчетПоПроектам,СтрокаОборотов.ПериодПланирования);
			КонецЕсли;
			Если СписокРассчитываемыхПоМодели.НайтиПоЗначению(СтрокаОборотов.СтатьяБюджета)<>Неопределено Тогда
				СтрокаОборотов.Модель = Истина;
			КонецЕсли;
		КонецЦикла;
		ОборотыПоСтатьям = ТаблицаОсновныхОборотов;
	ИначеЕсли СпособФормирования = Перечисления.фин_СпособыФормированияБюджета.ПоПлануЗакупок Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	узп_ПланыЗакупокОбороты.Подразделение,
		|	узп_ПланыЗакупокОбороты.Номенклатура,
		|	узп_ПланыЗакупокОбороты.НоменклатураПлановая,
		|	узп_ПланыЗакупокОбороты.Контрагент,
		|	НАЧАЛОПЕРИОДА(узп_ПланыЗакупокОбороты.ПериодПланирования,"+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)+") КАК ПериодПланирования,
		|	узп_ПланыЗакупокОбороты.Проект,
		|	СУММА(узп_ПланыЗакупокОбороты.КоличествоОборот) КАК Количество,
		|	СУММА(узп_ПланыЗакупокОбороты.СуммаОборот) КАК Сумма,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоответствияПодразделениеИНоменклатура.ФинансовыйПоказатель, ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)
		|			ТОГДА СоответствияПодразделениеИНоменклатура.ФинансовыйПоказатель
		|		КОГДА ЕСТЬNULL(СоответствияПодразделения.ФинансовыйПоказатель, ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)
		|			ТОГДА СоответствияПодразделения.ФинансовыйПоказатель
		|		КОГДА ЕСТЬNULL(СоответствияНоменклатура.ФинансовыйПоказатель, ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)
		|			ТОГДА СоответствияНоменклатура.ФинансовыйПоказатель
		|		ИНАЧЕ СоответствияОбщие.ФинансовыйПоказатель
		|	КОНЕЦ КАК ФинансовыйПоказатель
		|ПОМЕСТИТЬ ВТ_Закупки
		|ИЗ
		|	РегистрНакопления.узп_ПланыЗакупок.Обороты(, , , ПериодПланирования >= &НачалоПериода И ПериодПланирования <= &КонецПериода И Сценарий = &Сценарий"+?(УправленческоеПодразделениеКопируемый.Пустая(),""," И Подразделение=&УправленческоеПодразделение")+?(ПроектКопируемый.Пустая(),""," И Проект=&Проект")+") КАК узп_ПланыЗакупокОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствияПозицийПланаЗакупокИБюджетаЗакупок КАК СоответствияПодразделениеИНоменклатура
		|		ПО узп_ПланыЗакупокОбороты.Подразделение = СоответствияПодразделениеИНоменклатура.Подразделение
		|			И (узп_ПланыЗакупокОбороты.Номенклатура = СоответствияПодразделениеИНоменклатура.Номенклатура
		|					И СоответствияПодразделениеИНоменклатура.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.Пустаяссылка)
		|				ИЛИ узп_ПланыЗакупокОбороты.НоменклатураПлановая = СоответствияПодразделениеИНоменклатура.Номенклатура
		|					И СоответствияПодразделениеИНоменклатура.Номенклатура <> ЗНАЧЕНИЕ(Справочник.фин_плановаяНоменклатура.Пустаяссылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствияПозицийПланаЗакупокИБюджетаЗакупок КАК СоответствияПодразделения
		|		ПО узп_ПланыЗакупокОбороты.Подразделение = СоответствияПодразделения.Подразделение
		|			И (ВЫБОР
		|				КОГДА СоответствияПодразделения.Номенклатура ССЫЛКА Справочник.Номенклатура
		|					ТОГДА СоответствияПодразделения.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|				КОГДА СоответствияПодразделения.Номенклатура ССЫЛКА Справочник.фин_ПлановаяНоменклатура
		|					ТОГДА СоответствияПодразделения.Номенклатура = ЗНАЧЕНИЕ(Справочник.фин_ПлановаяНоменклатура.ПустаяСсылка)
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствияПозицийПланаЗакупокИБюджетаЗакупок КАК СоответствияНоменклатура
		|		ПО (узп_ПланыЗакупокОбороты.Номенклатура = СоответствияНоменклатура.Номенклатура
		|					И СоответствияНоменклатура.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.Пустаяссылка)
		|				ИЛИ узп_ПланыЗакупокОбороты.НоменклатураПлановая = СоответствияНоменклатура.Номенклатура
		|					И СоответствияНоменклатура.Номенклатура <> ЗНАЧЕНИЕ(Справочник.фин_плановаяНоменклатура.Пустаяссылка))
		|			И (СоответствияНоменклатура.Подразделение = ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПодразделений()+".ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.узп_СоответствияПозицийПланаЗакупокИБюджетаЗакупок КАК СоответствияОбщие
		|		ПО 	(ВЫБОР
		|				КОГДА СоответствияОбщие.Номенклатура ССЫЛКА Справочник.Номенклатура
		|					ТОГДА СоответствияОбщие.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|				КОГДА СоответствияОбщие.Номенклатура ССЫЛКА Справочник.фин_ПлановаяНоменклатура
		|					ТОГДА СоответствияОбщие.Номенклатура = ЗНАЧЕНИЕ(Справочник.фин_ПлановаяНоменклатура.ПустаяСсылка)
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)
		|			И (СоответствияОбщие.Подразделение = ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПодразделений()+".ПустаяСсылка))
		|ГДЕ
		|	(ЕСТЬNULL(СоответствияПодразделениеИНоменклатура.ФинансовыйПоказатель, ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)
		|			ИЛИ ЕСТЬNULL(СоответствияПодразделения.ФинансовыйПоказатель, ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)
		|			ИЛИ ЕСТЬNULL(СоответствияНоменклатура.ФинансовыйПоказатель, ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)
		|			ИЛИ ЕСТЬNULL(СоответствияОбщие.ФинансовыйПоказатель, ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоответствияПодразделениеИНоменклатура.ФинансовыйПоказатель, ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)
		|			ТОГДА СоответствияПодразделениеИНоменклатура.ФинансовыйПоказатель
		|		КОГДА ЕСТЬNULL(СоответствияПодразделения.ФинансовыйПоказатель, ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)
		|			ТОГДА СоответствияПодразделения.ФинансовыйПоказатель
		|		КОГДА ЕСТЬNULL(СоответствияНоменклатура.ФинансовыйПоказатель, ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.фин_Финансовыепоказатели.ПустаяСсылка)
		|			ТОГДА СоответствияНоменклатура.ФинансовыйПоказатель
		|		ИНАЧЕ СоответствияОбщие.ФинансовыйПоказатель
		|	КОНЕЦ,
		|	узп_ПланыЗакупокОбороты.Подразделение,
		|	узп_ПланыЗакупокОбороты.НоменклатураПлановая,
		|	узп_ПланыЗакупокОбороты.Проект,
		|	узп_ПланыЗакупокОбороты.Номенклатура,
		|	узп_ПланыЗакупокОбороты.Контрагент,
		|	НАЧАЛОПЕРИОДА(узп_ПланыЗакупокОбороты.ПериодПланирования,"+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)+")
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Закупки.Подразделение,
		|	ВТ_Закупки.Контрагент,
		|	ВТ_Закупки.ПериодПланирования,
		|	ВТ_Закупки.Проект,
		|	ВТ_Закупки.Количество,
		|	ВТ_Закупки.Сумма,
		|	ВТ_Закупки.ФинансовыйПоказатель,
		|	ВЫБОР
		|		КОГДА ВТ_Закупки.ФинансовыйПоказатель.ИспользуемыйНоменклатурныйПеречень = ЗНАЧЕНИЕ(Перечисление.узп_ИспользуемыеНоменклатурныеПеречни.ПлановаяНоменклатура)
		|			ТОГДА ВТ_Закупки.НоменклатураПлановая
		|		КОГДА ВТ_Закупки.ФинансовыйПоказатель.ИспользуемыйНоменклатурныйПеречень = ЗНАЧЕНИЕ(Перечисление.узп_ИспользуемыеНоменклатурныеПеречни.РегламентированнаяИПлановаяНоменклатура)
		|			ТОГДА ВЫБОР
		|					КОГДА ВТ_Закупки.Номенклатура ССЫЛКА Справочник.Номенклатура И ВТ_Закупки.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|						ТОГДА ВТ_Закупки.Номенклатура
		|					ИНАЧЕ ВТ_Закупки.НоменклатураПлановая
		|				КОНЕЦ
		|		ИНАЧЕ ВТ_Закупки.Номенклатура
		|	КОНЕЦ КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_ЗакупкиПоСтатьям
		|ИЗ
		|	ВТ_Закупки КАК ВТ_Закупки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_Закупки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ДополнительныеЗатратыНаЗакупку.ПериодПланирования,"+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)+") КАК ПериодПланирования,
		|	ДополнительныеЗатратыНаЗакупку.Подразделение,
		|	ДополнительныеЗатратыНаЗакупку.Проект,
		|	ДополнительныеЗатратыНаЗакупку.Номенклатура,
		|	СУММА(ДополнительныеЗатратыНаЗакупку.Размер) КАК Сумма,
		|	узп_ЗатратыНаПроведениеЗакупок.ПоказательДляОтраженияВБюджетах КАК ФинансовыйПоказатель
		|ПОМЕСТИТЬ ВТ_ДопЗатраты
		|ИЗ
		|	Документ.узп_ПланЗакупок.ДополнительныеЗатраты КАК ДополнительныеЗатратыНаЗакупку
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.узп_ЗатратыНаПроведениеЗакупок КАК узп_ЗатратыНаПроведениеЗакупок
		|		ПО ДополнительныеЗатратыНаЗакупку.ВидЗатрат = узп_ЗатратыНаПроведениеЗакупок.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.узп_ПланЗакупок КАК ПланЗакупок
		|		ПО ДополнительныеЗатратыНаЗакупку.Ссылка = ПланЗакупок.Ссылка
		|ГДЕ
		|	узп_ЗатратыНаПроведениеЗакупок.ПоказательДляОтраженияВБюджетах <> ЗНАЧЕНИЕ(Справочник.фин_ФинансовыеПоказатели.ПустаяСсылка)
		|	И ДополнительныеЗатратыНаЗакупку.ПериодПланирования >= &НачалоПериода
		|	И ДополнительныеЗатратыНаЗакупку.ПериодПланирования <= &КонецПериода
		|	И ПланЗакупок.Проведен
		|	И ПланЗакупок.Сценарий = &Сценарий
		//		|	И ПланЗакупок.Организация = &Организация
		|	"+?(УправленческоеПодразделениеКопируемый.Пустая(),""," И ДополнительныеЗатратыНаЗакупку.Подразделение=&УправленческоеПодразделение")+?(ПроектКопируемый.Пустая(),""," И ДополнительныеЗатратыНаЗакупку.Проект=&Проект")+"
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ДополнительныеЗатратыНаЗакупку.ПериодПланирования,"+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)+"),
		|	ДополнительныеЗатратыНаЗакупку.Подразделение,
		|	ДополнительныеЗатратыНаЗакупку.Проект,
		|	ДополнительныеЗатратыНаЗакупку.Номенклатура,
		|	узп_ЗатратыНаПроведениеЗакупок.ПоказательДляОтраженияВБюджетах
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЗакупкиПоСтатьям.Подразделение,
		|	ВТ_ЗакупкиПоСтатьям.Контрагент,
		|	ВТ_ЗакупкиПоСтатьям.ПериодПланирования,
		|	ВТ_ЗакупкиПоСтатьям.Проект,
		|	ВТ_ЗакупкиПоСтатьям.Количество,
		|	ВТ_ЗакупкиПоСтатьям.Сумма,
		|	ВТ_ЗакупкиПоСтатьям.ФинансовыйПоказатель,
		|	ВТ_ЗакупкиПоСтатьям.Номенклатура
		|ПОМЕСТИТЬ ВТ_Свод
		|ИЗ
		|	ВТ_ЗакупкиПоСтатьям КАК ВТ_ЗакупкиПоСтатьям
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ДопЗатраты.Подразделение,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
		|	ВТ_ДопЗатраты.ПериодПланирования,
		|	ВТ_ДопЗатраты.Проект,
		|	0,
		|	ВТ_ДопЗатраты.Сумма,
		|	ВТ_ДопЗатраты.ФинансовыйПоказатель,
		|	ВТ_ДопЗатраты.Номенклатура
		|ИЗ
		|	ВТ_ДопЗатраты КАК ВТ_ДопЗатраты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	фин_СтатьиБюджета.Ссылка КАК СтатьяБюджета,
		|	фин_СтатьиБюджета.ФинансовыйПоказатель
		|ПОМЕСТИТЬ ВТ_Статьи
		|ИЗ
		|	Справочник.фин_СтатьиБюджета КАК фин_СтатьиБюджета
		|ГДЕ
		|	фин_СтатьиБюджета.Владелец = &Бюджет
		|	И НЕ фин_СтатьиБюджета.ПометкаУдаления
		|	И фин_СтатьиБюджета.Версия В(&Версия)
		|	И НЕ фин_СтатьиБюджета.ЭтоГруппа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ЗакупкиПоСтатьям
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ДопЗатраты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Статьи.СтатьяБюджета,
		|	ВТ_Статьи.ФинансовыйПоказатель,
		|	ВЫБОР
		|		КОГДА РазрезыПодразделение.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПоПодразделениям,
		|	ВЫБОР
		|		КОГДА РазрезыНоменклатура.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПоНоменклатуре,
		|	ВЫБОР
		|		КОГДА РазрезыПроект.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПоПроектам,
		|	ВЫБОР
		|		КОГДА РазрезыКонтрагент.НомерСтроки ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПоКонтрагентам
		|ПОМЕСТИТЬ ВТ_РазрезыСтатей
		|ИЗ
		|	ВТ_Статьи КАК ВТ_Статьи
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.фин_ФинансовыеПоказатели.РазрезыУчета КАК РазрезыПодразделение
		|		ПО ВТ_Статьи.ФинансовыйПоказатель = РазрезыПодразделение.Ссылка
		|			И (РазрезыПодразделение.Измерение = ЗНАЧЕНИЕ(Перечисление.фин_ФактическиеПоказателиБюджетирования.УправленческоеПодразделение))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.фин_ФинансовыеПоказатели.РазрезыУчета КАК РазрезыНоменклатура
		|		ПО (РазрезыНоменклатура.Измерение = ЗНАЧЕНИЕ(Перечисление.фин_ФактическиеПоказателиБюджетирования.Номенклатура))
		|			И ВТ_Статьи.ФинансовыйПоказатель = РазрезыНоменклатура.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.фин_ФинансовыеПоказатели.РазрезыУчета КАК РазрезыПроект
		|		ПО ВТ_Статьи.ФинансовыйПоказатель = РазрезыПроект.Ссылка
		|			И (РазрезыПроект.Измерение = ЗНАЧЕНИЕ(Перечисление.фин_ФактическиеПоказателиБюджетирования.Проект))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.фин_ФинансовыеПоказатели.РазрезыУчета КАК РазрезыКонтрагент
		|		ПО ВТ_Статьи.ФинансовыйПоказатель = РазрезыКонтрагент.Ссылка
		|			И (РазрезыКонтрагент.Измерение = ЗНАЧЕНИЕ(Перечисление.фин_ФактическиеПоказателиБюджетирования.Контрагент))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_РазрезыСтатей.СтатьяБюджета,
		|	ВТ_РазрезыСтатей.ФинансовыйПоказатель,
		|	ВТ_Свод.ПериодПланирования,
		|	ВТ_Свод.ПериодПланирования КАК Период,
		|	ВТ_Свод.ПериодПланирования КАК ПериодПланированияЗаявки,
		|	ВТ_Свод.Количество*&КоэффициентКоличество КАК Количество,
		|	ВТ_Свод.Сумма*&КоэффициентСумма КАК Сумма,
		|	ВЫБОР
		|		КОГДА ВТ_РазрезыСтатей.ПоПодразделениям
		|			ТОГДА ВТ_Свод.Подразделение
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
		|	КОНЕЦ КАК УправленческоеПодразделение,
		|	ВЫБОР
		|		КОГДА ВТ_РазрезыСтатей.ПоНоменклатуре
		|			ТОГДА ВТ_Свод.Номенклатура
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	КОНЕЦ КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА ВТ_РазрезыСтатей.ПоПроектам
		|			ТОГДА ВТ_Свод.Проект
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПроектов()+".ПустаяСсылка)
		|	КОНЕЦ КАК Проект,
		|	ВЫБОР
		|		КОГДА ВТ_РазрезыСтатей.ПоКонтрагентам
		|			ТОГДА ВТ_Свод.Контрагент
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|	КОНЕЦ КАК Контрагент,
		|	ЗНАЧЕНИЕ(Перечисление."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СостоянияОбъектов.Подготовлен) КАК Состояние,
		|	ВЫБОР КОГДА ВТ_Свод.Количество =0 ТОГДА 0 ИНАЧЕ ВТ_Свод.Сумма*&КоэффициентСумма/ВТ_Свод.Количество КОНЕЦ КАК Цена,
		|	Ложь КАК ЗависимаяСтатья,
		|	Ложь КАК Модель,
		|	Ложь КАК Наследуемая,
		|	0 КАК ИдентификаторСтроки,
		|	ЛОЖЬ КАК ВложеннаяЗависимость,
		|	0 КАК НомерСтроки,
		|	0 КАК ВлияющаяОперация,
		|	&ВалютаЗакупок КАК ВалютаОперации,
		|	ВложенныйЗапрос.Курс КАК КурсОперации,
		|	ВложенныйЗапрос.Кратность КАК КратностьОперации,
		|	&Сценарий КАК Сценарий
		|ИЗ
		|	ВТ_Свод КАК ВТ_Свод
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_РазрезыСтатей КАК ВТ_РазрезыСтатей
		|		ПО ВТ_Свод.ФинансовыйПоказатель = ВТ_РазрезыСтатей.ФинансовыйПоказатель
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВложенныйЗапрос.ПериодПланирования КАК ПериодПланирования,
		|			КурсыВалют.Курс КАК Курс,
		|			КурсыВалют.Кратность КАК Кратность
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ВложенныйЗапрос.ПериодПланирования КАК ПериодПланирования,
		|				МАКСИМУМ(КурсыВалют.Период) КАК ПериодКурса
		|			ИЗ
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВТ_ПредварительныеОбороты.ПериодПланирования КАК ПериодПланирования
		|				ИЗ
		|					ВТ_Свод КАК ВТ_ПредварительныеОбороты) КАК ВложенныйЗапрос
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|					ПО КурсыВалют.Валюта = &ВалютаЗакупок
		|						И ВложенныйЗапрос.ПериодПланирования >= КурсыВалют.Период
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ВложенныйЗапрос.ПериодПланирования) КАК ВложенныйЗапрос
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|				ПО КурсыВалют.Валюта  = &ВалютаЗакупок
		|					И ВложенныйЗапрос.ПериодКурса = КурсыВалют.Период) КАК ВложенныйЗапрос
		|		ПО ВТ_Свод.ПериодПланирования = ВложенныйЗапрос.ПериодПланирования";
		
		
		Запрос.УстановитьПараметр("ВалютаЗакупок",	?(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("узп_ПланированиеЗакупокВВалютеРеглУчета"),фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаРегламентированногоУчета"),фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета")));       
		Запрос.УстановитьПараметр("Сценарий",		Сценарий);       
		Запрос.УстановитьПараметр("Версия",			фин_ПроцедурыМеханизмовБюджетирования.ВерсииБюджетаЗаПериод(Бюджет,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(ПериодПланированияКопируемый,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)),?(СценарийФормируемый.ПродолжительностьЦикла<2,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ПериодПланированияКопируемый,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)),фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ПериодПланированияКопируемый,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)),фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый),СценарийФормируемый.ПродолжительностьЦикла-1))));       
		Запрос.УстановитьПараметр("Бюджет",			Бюджет);
		Запрос.УстановитьПараметр("Проект",			ПроектКопируемый);
		Запрос.УстановитьПараметр("УправленческоеПодразделение",			УправленческоеПодразделениеКопируемый);
		Запрос.УстановитьПараметр("КоэффициентКоличество",	Объект.КоэффициентКоличество);
		Запрос.УстановитьПараметр("КоэффициентСумма",		Объект.КоэффициентСумма);
		Запрос.УстановитьПараметр("Дата",			ТекущаяДата());
		Запрос.УстановитьПараметр("НачалоПериода",	фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(ПериодПланированияКопируемый,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)));
		Запрос.УстановитьПараметр("КонецПериода",	?(СценарийФормируемый.ПродолжительностьЦикла<2,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ПериодПланированияКопируемый,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)),фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ПериодПланированияКопируемый,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый)),фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийФормируемый),СценарийФормируемый.ПродолжительностьЦикла-1)));
		РезультатЗапроса = Запрос.Выполнить();
		ТаблицаОсновныхОборотов 	= РезультатЗапроса.Выгрузить();
		Для Инд = 1 По 10 Цикл
			ТаблицаОсновныхОборотов.Колонки.Добавить("Разрез"+Строка(Инд),Метаданные.Документы.фин_Бюджет.ТабличныеЧасти.ОборотыПоСтатьям.Реквизиты["Разрез"+Строка(Инд)].Тип);
		КонецЦикла;
		Для Каждого СтрокаОборотов Из ТаблицаОсновныхОборотов Цикл
			СтрокаОборотов.НомерСтроки = ТаблицаОсновныхОборотов.Индекс(СтрокаОборотов)+1;
			СтрокиКоэффициент = Поправки.НайтиСтроки(Новый Структура("СтатьяБюджета",СтрокаОборотов.СтатьяБюджета));
			Если СтрокиКоэффициент.Количество() > 0 Тогда
				СтрокаОборотов.Сумма 		= СтрокаОборотов.Сумма * СтрокиКоэффициент[0].ПоправочныйКоэффициент;
				СтрокаОборотов.Количество 	= СтрокаОборотов.Количество * СтрокиКоэффициент[0].ПоправочныйКоэффициентКоличество;
			КонецЕсли;
			//Если СтрокаОборотов.ФинансовыйПоказатель.СпособЦенообразования <> Перечисления.фин_СпособыЦенообразованияПоФинансовымПоказателям.НеРассчитывать Тогда
			//	фин_ПроцедурыУправленияПлановымЦенообразованием.УстановитьЦенуПоУмолчанию(СтрокаОборотов,Сценарий,ВестиУчетПоПроектам,СтрокаОборотов.ПериодПланирования);
			//КонецЕсли;
			Если СписокРассчитываемыхПоМодели.НайтиПоЗначению(СтрокаОборотов.СтатьяБюджета)<>Неопределено Тогда
				СтрокаОборотов.Модель = Истина;
			КонецЕсли;
		КонецЦикла;
		ОборотыПоСтатьям = ТаблицаОсновныхОборотов;
	КонецЕсли;
	Шапка = Новый Структура("ФормируемыйБюджет,ВалютаДокумента,Сценарий,ПериодПланирования,Организация,Дата,УровеньДетализацииБюджета,ВидОперации,УправленческоеПодразделение,Проект",Объект.Бюджет,фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета"),Объект.СценарийФормируемый,Объект.ПериодПланирования,Объект.Организация,ТекущаяДата(),Объект.УровеньДетализацииБюджета,?(Объект.Заявка,Перечисления.фин_ВидыОперацийБюджет.Заявка,Перечисления.фин_ВидыОперацийБюджет.Бюджет),Объект.УправленческоеПодразделение,Объект.Проект);
	СтруктураДанных = Новый Структура("ОборотыПоСтатьям,Шапка",ТаблицаОсновныхОборотов,Шапка);
	Если СпособФормирования = Перечисления.фин_СпособыФормированияБюджета.НаОснованииБюджетныхЗаявок Тогда
		СтруктураДанных.Вставить("ЗаявкиНаФормирование",Объект.ЗаявкиКУчастию.Выгрузить(Новый Структура("Принята",Истина),"Заявка"));	
	КонецЕсли;
	Адрес = ПоместитьВоВременноеХранилище(СтруктураДанных);
КонецПроцедуры

&НаКлиенте
Процедура СпособФормированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СпособФормированияНачалоВыбораНаСервере(Объект.Бюджет);
КонецПроцедуры

&НаСервереБезКонтекста
Функция СпособФормированияНачалоВыбораНаСервере(Бюджет)
	СписокСпособов = Новый СписокЗначений;
	СписокСпособов.Добавить(Перечисления.фин_СпособыФормированияБюджета.ПоОбразцуБюджета);
	СписокСпособов.Добавить(Перечисления.фин_СпособыФормированияБюджета.НаОснованииБюджетныхЗаявок);
	СписокСпособов.Добавить(Перечисления.фин_СпособыФормированияБюджета.ПоНеисполненнымОстаткамПредыдущегоПериода);
	Если Бюджет.ДоступноФормированиеНаОснованииПлановДвиженияДенежныхСредств Тогда
		СписокСпособов.Добавить(Перечисления.фин_СпособыФормированияБюджета.ПоПлануДвиженияДенежныхСредств);
	КонецЕсли;
	Если Бюджет.ДоступноФормированиеНаОснованииПлановЗакупок Тогда
		СписокСпособов.Добавить(Перечисления.фин_СпособыФормированияБюджета.ПоПлануЗакупок);
	КонецЕсли;
	Возврат СписокСпособов;
КонецФункции

&НаКлиенте
Процедура СценарийФормируемыйПриИзменении(Элемент)
	СценарийФормируемыйПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СценарийФормируемыйПриИзмененииНаСервере()
	Объект.ПериодПланирования =фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(Объект.ПериодПланирования,Объект.СценарийФормируемый);
	фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.УстановитьГоризонтПланированияИПредставлениеБюджетногоПериода(НадписьПериодПланирования,,Объект.ПериодПланирования,Объект.СценарийФормируемый);
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	СценарийПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СценарийПриИзмененииНаСервере()
	Объект.ПериодПланированияКопируемый =фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(Объект.ПериодПланированияКопируемый,Объект.Сценарий);
	фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.УстановитьГоризонтПланированияИПредставлениеБюджетногоПериода(НадписьПериодПланированияКопируемый,,Объект.ПериодПланированияКопируемый,Объект.Сценарий);
КонецПроцедуры



&НаКлиенте
Процедура НадписьПериодПланированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораПериодаПланирования",ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.фин_ВыборБюджетногоПериода",Новый Структура("Бюджет,НачалоПериодаПланирования,Периодичность,РазрешитьПроизвольныйПериод",Объект.Бюджет,Объект.ПериодПланирования,Объект.СценарийФормируемый,Ложь),ЭтотОбъект,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораПериодаПланирования(РезультатВыбора,ДополнительныеПараметры) Экспорт
	Если РезультатВыбора<>Неопределено Тогда
		Объект.ПериодПланирования = РезультатВыбора.НачалоПериода;
		фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.УстановитьГоризонтПланированияИПредставлениеБюджетногоПериода(НадписьПериодПланирования,,Объект.ПериодПланирования,Объект.СценарийФормируемый);
	КонецЕсли;
КонецПроцедуры



&НаКлиенте
Процедура НадписьПериодПланированияКопируемыйНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораПериодаПланированияКопируемый",ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.фин_ВыборБюджетногоПериода",Новый Структура("Бюджет,НачалоПериодаПланирования,Периодичность,РазрешитьПроизвольныйПериод",Объект.Бюджет,Объект.ПериодПланированияКопируемый,Объект.Сценарий,Ложь),ЭтотОбъект,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораПериодаПланированияКопируемый(РезультатВыбора,ДополнительныеПараметры) Экспорт
	Если РезультатВыбора<>Неопределено Тогда
		Объект.ПериодПланированияКопируемый = РезультатВыбора.НачалоПериода;
		фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.УстановитьГоризонтПланированияИПредставлениеБюджетногоПериода(НадписьПериодПланированияКопируемый,,Объект.ПериодПланированияКопируемый,Объект.Сценарий);
	КонецЕсли;
КонецПроцедуры
