#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура ИнициализироватьДанныеДокумента(Объект) Экспорт
	Если ЗначениеЗаполнено(Объект.Документ) Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	БюджетныеОперации.Период,
			|	БюджетныеОперации.ФинансовыйПоказатель,
			|	БюджетныеОперации.УправленческоеПодразделение,
			|	БюджетныеОперации.Проект,
			|	БюджетныеОперации.Контрагент,
			|	БюджетныеОперации.Номенклатура,
			|	БюджетныеОперации.Валюта,
			|	СУММА(БюджетныеОперации.Количество) КАК Количество,
			|	СУММА(БюджетныеОперации.Сумма) КАК Сумма,
			|	БюджетныеОперации.Разрез1,
			|	БюджетныеОперации.Разрез10,
			|	БюджетныеОперации.Разрез2,
			|	БюджетныеОперации.Разрез3,
			|	БюджетныеОперации.Разрез4,
			|	БюджетныеОперации.Разрез5,
			|	БюджетныеОперации.Разрез6,
			|	БюджетныеОперации.Разрез7,
			|	БюджетныеОперации.Разрез8,
			|	БюджетныеОперации.Разрез9
			|ИЗ
			|	Документ."+Объект.Документ.Метаданные().Имя+".БюджетныеОперации КАК БюджетныеОперации
			|ГДЕ
			|	БюджетныеОперации.Ссылка = &Документ
			|
			|СГРУППИРОВАТЬ ПО
			|	БюджетныеОперации.ФинансовыйПоказатель,
			|	БюджетныеОперации.Разрез6,
			|	БюджетныеОперации.УправленческоеПодразделение,
			|	БюджетныеОперации.Разрез4,
			|	БюджетныеОперации.Разрез2,
			|	БюджетныеОперации.Разрез7,
			|	БюджетныеОперации.Разрез5,
			|	БюджетныеОперации.Разрез9,
			|	БюджетныеОперации.Валюта,
			|	БюджетныеОперации.Разрез1,
			|	БюджетныеОперации.Разрез3,
			|	БюджетныеОперации.Период,
			|	БюджетныеОперации.Разрез8,
			|	БюджетныеОперации.Номенклатура,
			|	БюджетныеОперации.Разрез10,
			|	БюджетныеОперации.Контрагент,
			|	БюджетныеОперации.Проект";
		
		Запрос.УстановитьПараметр("Документ", Объект.Документ);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Объект.БюджетныеОперации.Загрузить(РезультатЗапроса.Выгрузить());

	КонецЕсли;	
КонецПроцедуры

Процедура ИнициализироватьДанныеОбработки(Объект) Экспорт
	ЭтоЗаявкаНаРасход = Ложь;
	Если ЭтоЗаявкаНаРасход Тогда
		Объект.РегистрНакопления = "ден_РезервыПоБюджетамПодВыполнениеЗаявок";
		Объект.ВидРегистра = "Остатки";
		Объект.ИзмерениеРегистраДокумент = "ЗаявкаНаРасходование";
	ИначеЕсли ТипЗнч(Объект.Документ)<>Тип("ДокументСсылка.фин_УчетФактическихДанныхПоБюджетам") Тогда
		Объект.РегистрНакопления = "фин_ПрогнозИсполненияБюджетов";
		Объект.ВидРегистра = "Обороты";
		Объект.ИзмерениеРегистраДокумент = "ДокументПланирования";
	КонецЕсли;
	Если Объект.СценарииКонтроля.Количество()=0 Тогда
		Если ЗначениеЗаполнено(Объект.Сценарий) Тогда
			НС = Объект.СценарииКонтроля.Добавить();
			НС.Сценарий = Объект.Сценарий;
		Иначе
	    ПолеПериодичность = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолеПериодичность();
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("БюджетныеОперации",Объект.БюджетныеОперации.Выгрузить());
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	БюджетныеОперации.Период,
			|	БюджетныеОперации.ФинансовыйПоказатель
			|ПОМЕСТИТЬ ВТ
			|ИЗ
			|	&БюджетныеОперации КАК БюджетныеОперации
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ.ФинансовыйПоказатель,
			|	СправочникСценариев.Ссылка КАК Сценарий,
			|	ВЫБОР
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.День)
			|			ТОГДА ВТ.Период
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Неделя)
			|			ТОГДА НАЧАЛОПЕРИОДА(ВТ.Период, НЕДЕЛЯ)
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Декада)
			|			ТОГДА НАЧАЛОПЕРИОДА(ВТ.Период, ДЕКАДА)
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Месяц)
			|			ТОГДА НАЧАЛОПЕРИОДА(ВТ.Период, МЕСЯЦ)
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Квартал)
			|			ТОГДА НАЧАЛОПЕРИОДА(ВТ.Период, КВАРТАЛ)
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Полугодие)
			|			ТОГДА НАЧАЛОПЕРИОДА(ВТ.Период, КВАРТАЛ)
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Полугодие)
			|			ТОГДА НАЧАЛОПЕРИОДА(ВТ.Период, ПОЛУГОДИЕ)
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Год)
			|			ТОГДА НАЧАЛОПЕРИОДА(ВТ.Период, ГОД)
			|		ИНАЧЕ ВТ.Период
			|	КОНЕЦ КАК ПериодПланирования
			|ПОМЕСТИТЬ ВТ_Кортеж
			|ИЗ
			|	Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СценарииПланирования КАК СправочникСценариев,
			|	ВТ КАК ВТ
			|
			|СГРУППИРОВАТЬ ПО
			|	ВЫБОР
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.День)
			|			ТОГДА ВТ.Период
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Неделя)
			|			ТОГДА НАЧАЛОПЕРИОДА(ВТ.Период, НЕДЕЛЯ)
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Декада)
			|			ТОГДА НАЧАЛОПЕРИОДА(ВТ.Период, ДЕКАДА)
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Месяц)
			|			ТОГДА НАЧАЛОПЕРИОДА(ВТ.Период, МЕСЯЦ)
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Квартал)
			|			ТОГДА НАЧАЛОПЕРИОДА(ВТ.Период, КВАРТАЛ)
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Полугодие)
			|			ТОГДА НАЧАЛОПЕРИОДА(ВТ.Период, КВАРТАЛ)
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Полугодие)
			|			ТОГДА НАЧАЛОПЕРИОДА(ВТ.Период, ПОЛУГОДИЕ)
			|		КОГДА СправочникСценариев."+ПолеПериодичность+" = ЗНАЧЕНИЕ(Перечисление.фин_Периодичность.Год)
			|			ТОГДА НАЧАЛОПЕРИОДА(ВТ.Период, ГОД)
			|		ИНАЧЕ ВТ.Период
			|	КОНЕЦ,
			|	ВТ.ФинансовыйПоказатель,
			|	СправочникСценариев.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	фин_ОборотыБюджетовОбороты.Сценарий
			|ПОМЕСТИТЬ ВТ_Результат
			|ИЗ
			|	РегистрНакопления.фин_ОборотыБюджетов.Обороты(
			|			,
			|			,
			|			,
			|			(Сценарий, ФинансовыйПоказатель, ПериодПланирования) В
			|				(ВЫБРАТЬ
			|					ВТ_Кортеж.Сценарий,
			|					ВТ_Кортеж.ФинансовыйПоказатель,
			|					ВТ_Кортеж.ПериодПланирования
			|				ИЗ
			|					ВТ_Кортеж КАК ВТ_Кортеж)) КАК фин_ОборотыБюджетовОбороты
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	фин_КонтролируемыеФинансовыеПоказателиОбороты.КонтролирующийСценарий
			|ИЗ
			|	РегистрНакопления.фин_КонтролируемыеФинансовыеПоказатели.Обороты(
			|			,
			|			,
			|			,
			|			(КонтролирующийСценарий, ФинансовыйПоказатель, ПериодПланирования) В
			|				(ВЫБРАТЬ
			|					ВТ_Кортеж.Сценарий,
			|					ВТ_Кортеж.ФинансовыйПоказатель,
			|					ВТ_Кортеж.ПериодПланирования
			|				ИЗ
			|					ВТ_Кортеж КАК ВТ_Кортеж)) КАК фин_КонтролируемыеФинансовыеПоказателиОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Результат.Сценарий
			|ИЗ
			|	ВТ_Результат КАК ВТ_Результат
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_Результат.Сценарий";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НС = Объект.СценарииКонтроля.Добавить();
			НС.Сценарий = ВыборкаДетальныеЗаписи.Сценарий;
		КонецЦикла;
	

		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ИнициализироватьДанныеРазрезов(Объект) Экспорт
	ПереченьРазрезов = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПолучитьПолныйСписокРазрезов");
	Для Каждого Разрез Из ПереченьРазрезов Цикл
		ИмяРазреза = фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяРазреза(Разрез.Значение);
		
		КопияТаблицы = Объект.БюджетныеОперации.Выгрузить(,ИмяРазреза);
		КопияТаблицы.Свернуть(ИмяРазреза);
		Если КопияТаблицы.Количество()>1 Тогда
			Объект.СписокРазрезовКонтроля.Добавить(ИмяРазреза);
			Объект.СписокПолейСНесколькимиЗначениями.Добавить(ИмяРазреза);
		ИначеЕсли КопияТаблицы.Количество()=1 И ЗначениеЗаполнено(КопияТаблицы[0][ИмяРазреза]) Тогда
			Объект.СписокРазрезовКонтроля.Добавить(ИмяРазреза);
		КонецЕсли;
	КонецЦикла;
	МассивПрочихПолей = Новый Массив;
	МассивПрочихПолей.Добавить("Период");
	МассивПрочихПолей.Добавить("ФинансовыйПоказатель");
	МассивПрочихПолей.Добавить("Валюта");
	Для Каждого ИмяРазреза Из МассивПрочихПолей Цикл
		
		КопияТаблицы = Объект.БюджетныеОперации.Выгрузить(,ИмяРазреза);
		КопияТаблицы.Свернуть(ИмяРазреза);
		Если КопияТаблицы.Количество()>1 Тогда
			Объект.СписокПолейСНесколькимиЗначениями.Добавить(ИмяРазреза);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


Функция КонтрольВыполнен(Объект, ТаблицаПечать = Неопределено,ТаблицаДвиженийПоЛимитам = Неопределено) Экспорт
	//ИнициализироватьДанныеОбработки(Объект);
	//ИнициализироватьДанныеРазрезов(Объект);
	
	мВалютаУправленческогоУчета = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
	
	ПолныйМассивИмен = Новый Массив;
	СписокРазрезовУчета = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПолучитьПолныйСписокРазрезов();
	Для Каждого РазрезЭлемент Из СписокРазрезовУчета Цикл
		ИмяРазреза = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(РазрезЭлемент.Значение);
		ПолныйМассивИмен.Добавить(ИмяРазреза);
	КонецЦикла;

	ПоНесколькимРазрезам = Объект.СписокПолейСНесколькимиЗначениями.Количество()<>0;
	БюджетированиеПоОрганизациям = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_БюджетированиеПоОрганизациям");

	ТаблицаВыполненияКонтроля = Объект.БюджетныеОперации.Выгрузить();
	СтрокаСвертки = "ФинансовыйПоказатель,Период,Валюта";
	Для Каждого СтрокаКонтроль Из Объект.СписокРазрезовКонтроля Цикл
		ИмяКолонки = СтрокаКонтроль.Значение;
		СтрокаСвертки = СтрокаСвертки + "," + ИмяКолонки;
	КонецЦикла;
	ТаблицаВыполненияКонтроля.Свернуть(СтрокаСвертки,"Сумма");
	ТаблицаВыполненияКонтроля.Колонки.Добавить("СуммаУпр", Новый ОписаниеТипов("Число"));
	
	// валютные пересчеты
	МассивПериодов = Новый Массив;
	МинимальныйПериод 	= Неопределено;
	МаксимальныйПериод 	= Неопределено;
	
	Для Каждого СтрокаКонтроль Из ТаблицаВыполненияКонтроля Цикл
		КурсУпр = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(мВалютаУправленческогоУчета, СтрокаКонтроль.Период);
		КурсВал = ?(Объект.ИспользоватьУказанныйКурс,Новый Структура("Курс,Кратность",Объект.Курс,Объект.Кратность),фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(СтрокаКонтроль.Валюта, СтрокаКонтроль.Период));
		СтрокаКонтроль.СуммаУпр = ?(мВалютаУправленческогоУчета = СтрокаКонтроль.Валюта,СтрокаКонтроль.Сумма,фин_ОбщегоНазначенияСервер.ПересчитатьИзВалютыВВалюту(СтрокаКонтроль.Сумма,СтрокаКонтроль.Валюта,мВалютаУправленческогоУчета,КурсВал.Курс,КурсУпр.Курс,КурсВал.Кратность,КурсУпр.Кратность));
		Если Объект.СписокРазрезовКонтроля.НайтиПоЗначению("Проект")<>Неопределено Тогда
			Если СтрокаКонтроль.Проект = Неопределено ИЛИ СтрокаКонтроль.Проект = Справочники[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"ВидыРаспределенияПоПроектам"].ПустаяСсылка() Тогда
				СтрокаКонтроль.Проект = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПустоеЗначениеРазреза("Проект");
			ИначеЕсли ТипЗнч(СтрокаКонтроль.Проект) = фин_ОбщегоНазначенияВызовСервераПовтИсп.ТипСправочникВидыРаспределенияПоПроектам() Тогда
				фин_УправлениеПроектами.РаспределитьДвиженияДСПоПроектам(ТаблицаВыполненияКонтроля, СтрокаКонтроль, СтрокаКонтроль.Проект, КонецМесяца(СтрокаКонтроль.Период));
			КонецЕсли;
		КонецЕсли;
		Для Каждого СтрокаСценарий Из Объект.СценарииКонтроля Цикл
			НачалоПериода = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(СтрокаКонтроль.Период,СтрокаСценарий.Сценарий);
			Если МассивПериодов.Найти(НачалоПериода)=Неопределено Тогда
				МассивПериодов.Добавить(НачалоПериода);
				МинимальныйПериод = ?(МинимальныйПериод=Неопределено,НачалоПериода,Мин(НачалоПериода,МинимальныйПериод));
				КонецПериода = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(СтрокаКонтроль.Период,СтрокаСценарий.Сценарий);
				МаксимальныйПериод = ?(МаксимальныйПериод=Неопределено,КонецПериода,Макс(КонецПериода,МаксимальныйПериод));
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
		
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Период",МассивПериодов);
	Для Каждого ИмяРазреза Из ПолныйМассивИмен Цикл
		Если Объект.СписокРазрезовКонтроля.НайтиПоЗначению(ИмяРазреза)<>Неопределено Тогда
			СтруктураДанных.Вставить(ИмяРазреза,ТаблицаВыполненияКонтроля.ВыгрузитьКолонку(ИмяРазреза));	
		КонецЕсли;
	КонецЦикла;
	
	СписокЛимитов = фин_УправлениеЗависимостямиСтатейБюджетов.ПолучитьТаблицуКонтролирующихПравил(ТаблицаВыполненияКонтроля.ВыгрузитьКолонку("ФинансовыйПоказатель"),Неопределено,БюджетированиеПоОрганизациям,Объект.Организация,СтруктураДанных,Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриИсполнении,Истина);
	
	// рассчитаем контроль по лимиту
	
	БюджетированиеПоОрганизациям = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("БюджетированиеПоОрганизациям");
	
	
	Если СписокЛимитов.Количество()>0 Тогда
		
		Если Объект.РегистрНакопления<>"" Тогда
			Запрос = Новый Запрос;
			//Запрос.УстановитьПараметр("Сценарий", 				Сценарий);
			Запрос.УстановитьПараметр("ФинансовыйПоказатель", 	ТаблицаВыполненияКонтроля.ВыгрузитьКолонку("ФинансовыйПоказатель"));
			Запрос.УстановитьПараметр("НачалоПериода", 			МинимальныйПериод);
			Запрос.УстановитьПараметр("КонецПериода", 			МаксимальныйПериод);
			Запрос.УстановитьПараметр("Организация", 			Объект.Организация);
			Запрос.УстановитьПараметр("Ссылка", 				Объект.Документ);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	БюджетныеДанные.ПериодПланирования КАК ПериодПланирования,
			|	БюджетныеДанные.ФинансовыйПоказатель КАК ФинансовыйПоказатель,";
			Для Каждого Разрез Из Объект.СписокРазрезовКонтроля Цикл
				Запрос.Текст=Запрос.Текст+"
				|	БюджетныеДанные."+?(Найти(Разрез.Значение,"Разрез")=0,"","ДополнительныеРазрезы.")+Разрез.Значение+" КАК "+Разрез.Значение+",";
			КонецЦикла;
			Запрос.Текст=Запрос.Текст+"
			|	БюджетныеДанные.СуммаУпр"+?(Объект.ВидРегистра="Остатки","Остаток","Оборот")+" КАК КИсполнениюПоПрочимЗаявкам
			|ИЗ
			|	РегистрНакопления."+Объект.РегистрНакопления+"."+Объект.ВидРегистра+"(
			|			, "+?(Объект.ВидРегистра="Остатки","",",,")+Объект.ИзмерениеРегистраДокумент+"<>&Ссылка И
			|			ФинансовыйПоказатель В (&ФинансовыйПоказатель)
			|				И (Организация=ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ИЛИ Организация=&Организация)) КАК БюджетныеДанные
			|
			|ИТОГИ
			| 	СУММА(КИсполнениюПоПрочимЗаявкам)
			|
			|ПО Общие";
			
			Результат = Запрос.Выполнить();
			
			ТаблицаПрочиеЗаявки = Результат.Выгрузить();
		КонецЕсли;
		
		Для Каждого СтрокаОборотовДляКонтроля Из ТаблицаВыполненияКонтроля Цикл
			
			ТабКонтролируемыхЗначений=ПроверкаКонтролируемыхЗначений(Объект,СписокЛимитов,СтрокаОборотовДляКонтроля,СтрокаОборотовДляКонтроля.Валюта,БюджетированиеПоОрганизациям,ПолныйМассивИмен);
			КурсУпр 					= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(мВалютаУправленческогоУчета, СтрокаОборотовДляКонтроля.Период);
			КурсВал = ?(Объект.ИспользоватьУказанныйКурс,Новый Структура("Курс,Кратность",Объект.Курс,Объект.Кратность),фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(СтрокаОборотовДляКонтроля.Валюта, СтрокаОборотовДляКонтроля.Период));
			
			Для Каждого СтрокаРезультатКонтроля Из ТабКонтролируемыхЗначений Цикл
				
				Сценарий 		= СтрокаРезультатКонтроля.КонтролирующийСценарий;
				ВсегоРазрешено 	= СтрокаРезультатКонтроля.СуммаКонтроль;
				Исполнено 		= СтрокаРезультатКонтроля.СуммаСценарияИсполнение;
				ОписаниеКонтроля = "";
				Для Каждого ИмяРазреза Из ПолныйМассивИмен Цикл
					Если ТабКонтролируемыхЗначений.Колонки.Найти(ИмяРазреза)=Неопределено ИЛИ НЕ ЗначениеЗаполнено(СтрокаРезультатКонтроля[ИмяРазреза]) Тогда
						Продолжить;
					КонецЕсли;
					Если ЗначениеЗаполнено(СтрокаРезультатКонтроля[ИмяРазреза]) Тогда
						ОписаниеКонтроля = ОписаниеКонтроля + ?(ОписаниеКонтроля="","",Символы.ПС)+фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(Перечисления.фин_ФактическиеПоказателиБюджетирования[ИмяРазреза])+": "+СтрокаРезультатКонтроля[ИмяРазреза];
					КонецЕсли;
				КонецЦикла;
				// 2 - неисполненный остаток по текущей заявке
				Если СтрокаОборотовДляКонтроля.Валюта = Сценарий.Валюта Тогда
					КИсполнениюПоТекущейЗаявке = СтрокаОборотовДляКонтроля.Сумма; 
				Иначе	
					КурсСценария = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(Сценарий.Валюта,СтрокаОборотовДляКонтроля.Период);
					КИсполнениюПоТекущейЗаявке = фин_ОбщегоНазначенияСервер.ПересчитатьИзВалютыВВалюту(СтрокаОборотовДляКонтроля.Сумма,СтрокаОборотовДляКонтроля.Валюта,Сценарий.Валюта,КурсВал.Курс,КурсСценария.Курс,КурсВал.Кратность,КурсСценария.Кратность) 
				КонецЕсли;
				
				
				Если ТаблицаДвиженийПоЛимитам <>Неопределено Тогда
					НоваяСтрока = ТаблицаДвиженийПоЛимитам.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаРезультатКонтроля);
					СтруктураДопРазрезы = Новый Структура;
					Для Каждого ИмяРазреза Из ПолныйМассивИмен Цикл
						Если Найти(ИмяРазреза,"Разрез")=0 Тогда
							Продолжить;
						КонецЕсли;
						Если ТабКонтролируемыхЗначений.Колонки.Найти(ИмяРазреза)=Неопределено ИЛИ НЕ ЗначениеЗаполнено(СтрокаРезультатКонтроля[ИмяРазреза]) Тогда
							Продолжить;
						КонецЕсли;
						Если Объект.СписокРазрезовКонтроля.НайтиПоЗначению(ИмяРазреза)<>Неопределено Тогда
							СтруктураДопРазрезы.Вставить(ИмяРазреза,СтрокаРезультатКонтроля[ИмяРазреза]);
						КонецЕсли;
					КонецЦикла;
					НоваяСтрока.Организация = Объект.Организация;
					НоваяСтрока.ИспользованиеКонтролируемогоЗначения = Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриИсполнении;
					НоваяСтрока.ПериодПланирования 		=  СтрокаРезультатКонтроля.Период;
					НоваяСтрока.ДополнительныеРазрезы 	= фин_РаботаСДополнительнымиРазрезамиБюджетирования.ОпределитьПозициюКлассификатораПоСтруктуре(СтруктураДопРазрезы);
					НоваяСтрока.СуммаСценарияКонтроль 	= 0;
					НоваяСтрока.СуммаСценарияИсполнение = КИсполнениюПоТекущейЗаявке;
				КонецЕсли;
				
				// 3 - получение остатков по прочим заявкам
				КИсполнениюПоПрочимЗаявкам = 0;
				СтруктураПоиска = Новый Структура("ФинансовыйПоказатель",СтрокаОборотовДляКонтроля.ФинансовыйПоказатель);
				МассивЗаявок = Новый Массив;
				Для Каждого ИмяРазреза Из ПолныйМассивИмен Цикл
					Если ТабКонтролируемыхЗначений.Колонки.Найти(ИмяРазреза)=Неопределено ИЛИ НЕ ЗначениеЗаполнено(СтрокаРезультатКонтроля[ИмяРазреза]) Тогда
						Продолжить;
					КонецЕсли;
					Если Объект.СписокРазрезовКонтроля.НайтиПоЗначению(ИмяРазреза)<>Неопределено Тогда
						СтруктураПоиска.Вставить(ИмяРазреза,СтрокаРезультатКонтроля[ИмяРазреза]);
					КонецЕсли;
				КонецЦикла;
				
				КИсполнениюПоПрочимЗаявкам = 0;
				Если Объект.РегистрНакопления<>"" Тогда
					СтрокиПрочихЗаявок = ТаблицаПрочиеЗаявки.НайтиСтроки(СтруктураПоиска);
					Для Каждого СтрокаПрочихЗаявок Из СтрокиПрочихЗаявок Цикл
						Если СтрокаПрочихЗаявок.ПериодПланирования > СтрокаОборотовДляКонтроля.Период ИЛИ фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(СтрокаПрочихЗаявок.ПериодПланирования,Сценарий)<>фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(СтрокаКонтроль.Период,Сценарий) Тогда
							Продолжить;
						КонецЕсли;
						// пересчитаем в валюту документа
						Если мВалютаУправленческогоУчета <> Сценарий.Валюта Тогда
							КурсСцен 					= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(Сценарий.Валюта,СтрокаПрочихЗаявок.ПериодПланирования);
							КИсполнениюПоПрочимЗаявкам 	= КИсполнениюПоПрочимЗаявкам + фин_ОбщегоНазначенияСервер.ПересчитатьИзВалютыВВалюту(СтрокаПрочихЗаявок.КИсполнениюПоПрочимЗаявкам,мВалютаУправленческогоУчета,Сценарий.Валюта,КурсУпр.Курс,КурсСцен.Курс,КурсУпр.Кратность,КурсСцен.Кратность);
						Иначе
							КИсполнениюПоПрочимЗаявкам = КИсполнениюПоПрочимЗаявкам + СтрокаПрочихЗаявок.КИсполнениюПоПрочимЗаявкам;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;	
				ОстатокСУчетомЗаявки = (ВсегоРазрешено - Исполнено - КИсполнениюПоПрочимЗаявкам) - КИсполнениюПоТекущейЗаявке;
				Если ТаблицаПечать<>Неопределено Тогда
					НоваяСтрокаПечать = ТаблицаПечать.Добавить();
					НоваяСтрокаПечать.Сценарий = СтрокаРезультатКонтроля.КонтролирующийСценарий;
					НоваяСтрокаПечать.Разрешено = ВсегоРазрешено;
					НоваяСтрокаПечать.Исполнено = Исполнено;
					НоваяСтрокаПечать.Резерв = КИсполнениюПоПрочимЗаявкам;
					НоваяСтрокаПечать.ПоТекущей = КИсполнениюПоТекущейЗаявке;
					НоваяСтрокаПечать.Остаток = ОстатокСУчетомЗаявки;
				Иначе
					Если ОстатокСУчетомЗаявки < 0 Тогда
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В результате проведения заявки возникает превышение лимитов"+?(ОписаниеКонтроля="",""," ("+ОписаниеКонтроля+")")+":
						|	нехватка: "+Строка(ОстатокСУчетомЗаявки)+ " "+Сценарий.Валюта+";
						|	общее исполнение: "+Строка(Исполнено+КИсполнениюПоПрочимЗаявкам+КИсполнениюПоТекущейЗаявке)+ " "+Сценарий.Валюта+";
						|	в т.ч. по резервам под прочие заявки: "+Строка(КИсполнениюПоПрочимЗаявкам)+ " "+Сценарий.Валюта, Объект.Документ,);
						Возврат Ложь;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ПроверкаКонтролируемыхЗначений(Источник, СписокЛимитов, СтрокаОборотовДляКонтроля,ВалютаОперации,БюджетированиеПоОрганизациям,МассивИмен,ДатаАктуальности = Неопределено) Экспорт
	
	// Получение списка контролирующих сценариев для выбранного периода и измерений бюджетирования
	
	ТабРезультата = СписокЛимитов.СкопироватьКолонки();
	
	Для Каждого СтрокаЛимитов Из СписокЛимитов Цикл
		Сценарий = ?(ЗначениеЗаполнено(СтрокаЛимитов.КонтролирующийСценарий),СтрокаЛимитов.КонтролирующийСценарий,Перечисления.фин_Периодичность.Месяц);
		ПодходящаяСтрока = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(СтрокаОборотовДляКонтроля.Период, Сценарий) = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(СтрокаЛимитов.Период, Сценарий);
		Если НЕ ПодходящаяСтрока Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого ИмяРазреза Из МассивИмен Цикл
			Если НЕ фин_РаботаСДополнительнымиРазрезамиБюджетирования.УчетПоСтатьеПоРазрезу(СтрокаОборотовДляКонтроля.ФинансовыйПоказатель,Перечисления.фин_ФактическиеПоказателиБюджетирования[ИмяРазреза]) Тогда
				Продолжить;
			КонецЕсли;
			Если Источник.СписокРазрезовКонтроля.НайтиПоЗначению(ИмяРазреза)=Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если НЕ (СтрокаЛимитов[ИмяРазреза] = СтрокаОборотовДляКонтроля[ИмяРазреза] ИЛИ НЕ ЗначениеЗаполнено(СтрокаЛимитов[ИмяРазреза])) Тогда
				ПодходящаяСтрока = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если СтрокаЛимитов.ФинансовыйПоказатель = СтрокаОборотовДляКонтроля.ФинансовыйПоказатель И ПодходящаяСтрока Тогда
			НовыйЛимит = ТабРезультата.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйЛимит,СтрокаЛимитов);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПроверитьПоказателиВСоответствииСправиламиКонтроля(ТабРезультата,СтрокаОборотовДляКонтроля,МассивИмен,Источник,БюджетированиеПоОрганизациям,Источник.Организация,ВалютаОперации,,ДатаАктуальности);
	
КонецФункции // ПроверкаКонтролируемыхЗначений()

//////////////////////////////////////////////////////////////////////////////////
//// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


//////////////////////////////////////////////////////////////////////////////////
//// Проведение

//Функция ТекстЗапросаТаблицаКонтроля(НомераТаблиц, ПараметрыПроведения, Реквизиты) Экспорт

//	НомераТаблиц.Вставить("ТаблицаКонтроля", НомераТаблиц.Количество());

//	ТекстЗапроса = "";
//	

//		ТекстЗапроса=
//		"ВЫБРАТЬ
//		|	ТаблицаКонтроля.Ссылка.Сценарий,
//		|	ТаблицаКонтроля.Ссылка.ФинансовыйПоказатель,
//		|	ТаблицаКонтроля.СуммаПлатежа
//		|ИЗ
//		|	Документ.ден_ЗаявкаНаРасходованиеСредств.РасшифровкаПлатежа КАК ТаблицаКонтроля
//		|ГДЕ
//		|	ТаблицаКонтроля.Ссылка = &Ссылка";
//	
//	Возврат ТекстЗапроса + фин_УправлениеПроведениемДокументовСервер.ТекстРазделителяЗапросовПакета();
//	
//КонецФункции 

Функция ПроверитьПоказателиВСоответствииСправиламиКонтроля(ТабРезультата,СтрокаОборотовДляКонтроля,ИменаРазрезов,
		СтруктураДанныхШапки,БюджетированиеПоОрганизациям,Организация,ВалютаДокумента,СтатьиИФинансовыеПоказатели=Неопределено,ДатаАктуальности = Неопределено)
		
	КонтрольПройден = Истина;
	Запрос = Новый Запрос;
	ТабРезультата.Колонки.Добавить("СуммаСценарияИсполнение");
	ТабРезультата.Колонки.Добавить("СуммаКонтроль");
	
	Если ТабРезультата.Количество() = 0 Тогда
		
		Возврат ТабРезультата;
		
	Иначе
		
		Для каждого СтрокаПроверки Из ТабРезультата Цикл
			
			СтруктураПоискаОборотов = Новый Структура("Период,ФинансовыйПоказатель",СтрокаОборотовДляКонтроля.Период,СтрокаОборотовДляКонтроля.ФинансовыйПоказатель);
			
			ТекстФильтр = "";
			Для Каждого Разрез Из ИменаРазрезов Цикл
				Если НЕ фин_РаботаСДополнительнымиРазрезамиБюджетирования.УчетПоСтатьеПоРазрезу(СтрокаОборотовДляКонтроля.ФинансовыйПоказатель,Перечисления.фин_ФактическиеПоказателиБюджетирования[Разрез]) Тогда
					Продолжить;
				КонецЕсли;
				Если СтруктураДанныхШапки.СписокРазрезовКонтроля.НайтиПоЗначению(Разрез)=Неопределено Тогда
					Продолжить;
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаПроверки[Разрез]) Тогда
					СтруктураПоискаОборотов.Вставить(Разрез,СтрокаПроверки[Разрез]);
				КонецЕсли;
				ТекстФильтр = ТекстФильтр+" И 
				|			"+?(Найти(Разрез,"Разрез")=0,"","ДополнительныеРазрезы.")+Разрез+"=&"+Разрез;
				Запрос.УстановитьПараметр(Разрез,СтрокаПроверки[Разрез]);
			КонецЦикла;
			Если СтрокаПроверки.КонтролирующийСценарий.Пустая() Тогда
				ТекущийСценарий	= СтрокаПроверки.КонтролирующийСценарий;
				ДатаНачала		= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(СтрокаОборотовДляКонтроля.Период, Перечисления.фин_Периодичность.Месяц);
				ДатаКонца  		= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ДатаНачала,Перечисления.фин_Периодичность.Месяц);
			Иначе
				ТекущийСценарий	= СтрокаПроверки.КонтролирующийСценарий;				
				ДатаНачала 		= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(СтрокаОборотовДляКонтроля.Период, ТекущийСценарий.Периодичность);
				ДатаКонца  		= фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(ДатаНачала,ТекущийСценарий.Периодичность);
			КонецЕсли;
			
			Сумма	= СтрокаОборотовДляКонтроля.Сумма;
			// пересчет в валюту сценария
			ВалютаСценария = СтрокаПроверки.КонтролирующийСценарий.Валюта;
			
			Если ВалютаСценария = ВалютаДокумента Тогда
				СуммаСценария = Сумма;
			Иначе
				Курс 		= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаСценария,ДатаНачала);
				КурсДок 	= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаДокумента,ДатаНачала);
				СуммаСценария=фин_ОбщегоНазначенияСервер.ПересчитатьИзВалютыВВалюту(Сумма,
						ВалютаДокумента,ВалютаСценария,
						КурсДок.Курс,Курс.Курс,
						КурсДок.Кратность,Курс.Кратность);
			КонецЕсли;
			
			ДополнительныеСуммы = 0;
			
			Запрос.Текст="ВЫБРАТЬ
			|	СУММА(КонтролируемыеФинансовыеПоказателиОбороты.СуммаСценарияКонтрольОборот) КАК СуммаКонтроль,
			|	СУММА(КонтролируемыеФинансовыеПоказателиОбороты.СуммаСценарияИсполнениеОборот) КАК СуммаИсполнение
			|ИЗ
			|	РегистрНакопления.фин_КонтролируемыеФинансовыеПоказатели.Обороты(,"+?(ДатаАктуальности=Неопределено,"","&ДатаАктуальности")+", ,"+?(БюджетированиеПоОрганизациям,"Организация = &Организация И ","")+" 
			|					ПериодПланирования >=&ДатаНачала И ПериодПланирования<=&ДатаОкончания И
			|					КонтролирующийСценарий=&КонтролирующийСценарий И
			|					ФинансовыйПоказатель=&ФинансовыйПоказатель И 
			|					ИспользованиеКонтролируемогоЗначения=&ИспользованиеКонтролируемогоЗначения"+ТекстФильтр+"
			|					) КАК КонтролируемыеФинансовыеПоказателиОбороты"+?(ДатаАктуальности=Неопределено,"","
			|	ГДЕ КонтролируемыеФинансовыеПоказателиОбороты.СуммаСценарияКонтрольОборот>0");		
			
			Запрос.УстановитьПараметр("ДатаАктуальности",						ДатаАктуальности);
			Запрос.УстановитьПараметр("Организация",							Организация);
			Запрос.УстановитьПараметр("ДатаНачала",								ДатаНачала);
			Запрос.УстановитьПараметр("ДатаОкончания",							ДатаКонца);
			Запрос.УстановитьПараметр("КонтролирующийСценарий",					СтрокаПроверки.КонтролирующийСценарий);
			Запрос.УстановитьПараметр("ФинансовыйПоказатель",					СтрокаПроверки.ФинансовыйПоказатель);
			Запрос.УстановитьПараметр("ИспользованиеКонтролируемогоЗначения",	Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриИсполнении);
			
			СуммаКонтроль = 0;
			СуммаИсполнение = 0;
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			Если Выборка.Следующий() И (НЕ Выборка["СуммаКонтроль"]=NULL) И (НЕ Выборка["СуммаИсполнение"]=NULL) Тогда
				СуммаКонтроль	= Выборка["СуммаКонтроль"]*фин_РегистрацияФактическихДанныхПоБюджетированию.РазрядностьПланирования();
				СуммаИсполнение	= Выборка["СуммаИсполнение"];//+СуммаСценария;
			КонецЕсли;
			
			СтрокаПроверки.СуммаСценарияИсполнение = СуммаИсполнение;
			СтрокаПроверки.СуммаКонтроль = СуммаКонтроль;
			СтрокаПроверки.Период = ДатаНачала;
		КонецЦикла; 
	КонецЕсли;
	
	Возврат ТабРезультата;
	
КонецФункции

Процедура ЗаполнитьБюджетныйКонтроль(Объект,ТаблицаБюджетныйКонтроль,СоответствиеРасшифровка,АктуальныйМониторинг,Модифицированность=Ложь) Экспорт
	
	ПолныйМассивИмен = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПолучитьПолныйМассивИменРазрезов");
	
	
	Если Объект.БюджетныеОперации.Количество()=0 Тогда
		ТаблицаБюджетныйКонтроль.Строки.Очистить();
		Возврат;
	КонецЕсли;
	
	мВалютаУправленческогоУчета = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ВалютаУправленческогоУчета");
	
	ПоНесколькимРазрезам = Объект.СписокПолейСНесколькимиЗначениями.Количество()<>0;

	ТаблицаВыполненияКонтроля = Новый ТаблицаЗначений;
	ТаблицаВыполненияКонтроля.Колонки.Добавить("Сумма",					Новый ОписаниеТипов("Число"));
	ТаблицаВыполненияКонтроля.Колонки.Добавить("Количество",			Новый ОписаниеТипов("Число"));
	ТаблицаВыполненияКонтроля.Колонки.Добавить("ФинансовыйПоказатель",	Новый ОписаниеТипов("СправочникСсылка.фин_ФинансовыеПоказатели"));
	ТаблицаВыполненияКонтроля.Колонки.Добавить("Период",				Новый ОписаниеТипов("Дата"));
	ТаблицаВыполненияКонтроля.Колонки.Добавить("Валюта",				Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	СтрокаСвертки = "ФинансовыйПоказатель,Период,Валюта";
	Для Каждого СтрокаКонтроль Из Объект.СписокРазрезовКонтроля Цикл
		//Если НЕ ЗначениеЗаполнено(СтрокаКонтроль.Измерение) Тогда
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Бюджетный контроль не может быть заполнен по причине неверного заполнения разрезов контроля!");
		//	Возврат;
		//КонецЕсли;
		ИмяКолонки = СтрокаКонтроль.Значение;
		ТипКолонки = фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(Перечисления.фин_ФактическиеПоказателиБюджетирования[СтрокаКонтроль.Значение]).ТипЗначения;
		ТаблицаВыполненияКонтроля.Колонки.Добавить(ИмяКолонки,			ТипКолонки);
		СтрокаСвертки = СтрокаСвертки+","+ИмяКолонки;
	КонецЦикла;
	Если ПоНесколькимРазрезам Тогда
		Для Каждого СтрокаАналитики Из Объект.БюджетныеОперации Цикл
			НС = ТаблицаВыполненияКонтроля.Добавить();
			ЗаполнитьЗначенияСвойств(НС,СтрокаАналитики);
		КонецЦикла;
	Иначе
		СвернутаяТаблица = Объект.БюджетныеОперации.Выгрузить();
		СвернутаяТаблица.Свернуть(СтрокаСвертки,"Сумма,Количество");
		НС = ТаблицаВыполненияКонтроля.Добавить();
		ЗаполнитьЗначенияСвойств(НС,СвернутаяТаблица[0]);
	КонецЕсли;

	ТаблицаВыполненияКонтроля.Свернуть(СтрокаСвертки,"Сумма,Количество");
	ТаблицаВыполненияКонтроля.Колонки.Добавить("СуммаУпр",Новый ОписаниеТипов("Число"));
	
	// валютные пересчеты
	
	Для Каждого СтрокаКонтроль Из ТаблицаВыполненияКонтроля Цикл
		
		КурсУпр = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(мВалютаУправленческогоУчета,СтрокаКонтроль.Период);
		
		ВалютаДокумента 	= СтрокаКонтроль.Валюта;
		Если Объект.ИспользоватьУказанныйКурс Тогда
			КурсДокумента 		= Объект.Курс;
			КратностьДокумента 	= Объект.Кратность;
		Иначе
			Курс = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(ВалютаДокумента,СтрокаКонтроль.Период);
			КурсДокумента 		= Курс.Курс;
			КратностьДокумента 	= Курс.Кратность;
		КонецЕсли;
		
		СтрокаКонтроль.СуммаУпр = ?(мВалютаУправленческогоУчета=ВалютаДокумента,СтрокаКонтроль.Сумма,фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(СтрокаКонтроль.Сумма,ВалютаДокумента,мВалютаУправленческогоУчета,КурсДокумента,КурсУпр.Курс,КратностьДокумента,КурсУпр.Кратность));
		Если Объект.СписокРазрезовКонтроля.НайтиПоЗначению("Проект")<>Неопределено Тогда
			Если СтрокаКонтроль.Проект = Неопределено ИЛИ СтрокаКонтроль.Проект = Справочники[фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"ВидыРаспределенияПоПроектам"].ПустаяСсылка() Тогда
				СтрокаКонтроль.Проект = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПустоеЗначениеРазреза("Проект");
			ИначеЕсли ТипЗнч(СтрокаКонтроль.Проект)=Тип("СправочникСсылка."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"ВидыРаспределенияПоПроектам") Тогда
				фин_УправлениеПроектами.РаспределитьДвиженияДСПоПроектам(ТаблицаВыполненияКонтроля, СтрокаКонтроль, СтрокаКонтроль.Проект, КонецМесяца(СтрокаКонтроль.Период));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
//	ТаблицаВыполненияКонтроля.Колонки.Сумма.Имя = "СуммаПлатежа";
	
	
	ТаблицаБюджетныйКонтроль.Строки.Очистить();
	Идентификатор = 0;
	Идентификатор = 0+1;
	СписокИменРазрезов = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПолучитьСписокИменДополнительныхРазрезов");
	
	СписокРазрезовУчета = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("ПолучитьПолныйСписокИменРазрезов");
	
	Для Каждого КонтролируемаяСтрока Из ТаблицаВыполненияКонтроля Цикл
		
		Для Каждого СтрокаСценарий Из Объект.СценарииКонтроля Цикл
			Сценарий = СтрокаСценарий.Сценарий;
					
			КурсСценария = фин_ПроцедурыМеханизмовБюджетирования.ПолучитьКурсВалюты(мВалютаУправленческогоУчета,КонтролируемаяСтрока.Период,Сценарий);
					
			Если Объект.ИспользоватьУказанныйКурс Тогда
				КурсДокумента 		= Объект.Курс;
				КратностьДокумента 	= Объект.Кратность;
			Иначе
				Курс = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(КонтролируемаяСтрока.Валюта,КонтролируемаяСтрока.Период);
				КурсДокумента 		= Курс.Курс;
				КратностьДокумента 	= Курс.Кратность;
			КонецЕсли;
			Если Сценарий.ИспользоватьКурсыСценария Тогда
				КурсСчетный = КурсСценария;
			Иначе
				КурсСчетный = КурсУпр;
			КонецЕсли;
		
			// контроль по бюджету
			СтрокаКонтроль = ТаблицаБюджетныйКонтроль.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаКонтроль,КонтролируемаяСтрока);
			СтрокаКонтроль.ВидКонтроля = "По бюджету, "+Строка(мВалютаУправленческогоУчета);
			СтрокаКонтроль.Идентификатор 	= Идентификатор;
			СтрокаКонтроль.Сценарий 		= Сценарий;
			СтрокаКонтроль.ФинансовыйПоказатель = КонтролируемаяСтрока.ФинансовыйПоказатель;
			СтрокаКонтроль.Период 				= КонтролируемаяСтрока.Период;
			СтрокаКонтроль.Валюта 				= мВалютаУправленческогоУчета;
			Если мВалютаУправленческогоУчета <> КонтролируемаяСтрока.Валюта Тогда
				СтрокаКонтрольВал = ТаблицаБюджетныйКонтроль.Строки.Добавить();
				СтрокаКонтрольВал.ВидКонтроля = "По бюджету, "+ВалютаДокумента;
				ЗаполнитьЗначенияСвойств(СтрокаКонтрольВал,КонтролируемаяСтрока);
				СтрокаКонтрольВал.Идентификатор = Идентификатор;
				СтрокаКонтрольВал.Сценарий 		= Сценарий;
				СтрокаКонтрольВал.Валюта 			= КонтролируемаяСтрока.Валюта;
				СтрокаКонтрольВал.ФинансовыйПоказатель = КонтролируемаяСтрока.ФинансовыйПоказатель;
				СтрокаКонтрольВал.Период 				= КонтролируемаяСтрока.Период;
			КонецЕсли;
			// 1 - стартовая сумма и сумма исполнения
			ТекстУсловие = "";
			Запрос = Новый Запрос;
			Для Каждого СтрокаПараметров Из Объект.СписокРазрезовКонтроля Цикл
				Если НЕ ЗначениеЗаполнено(КонтролируемаяСтрока[СтрокаПараметров.Значение]) Тогда
					Продолжить; // контроль по незаполненным разрезам не делаем
				КонецЕсли;
				ИмяРазреза = СтрокаПараметров.Значение;
				Если Найти(ИмяРазреза,"Разрез")<>0 Тогда
					ПутьРазреза = "ДополнительныеРазрезы."+ИмяРазреза;
				Иначе 
					ПутьРазреза = ИмяРазреза;
				КонецЕсли;
				ТекстУсловие= ТекстУсловие+"
				|				И "+ПутьРазреза+" =&"+ИмяРазреза;
				Запрос.УстановитьПараметр(ИмяРазреза,КонтролируемаяСтрока[ИмяРазреза]);
			КонецЦикла;

			ФрагментПоляДополнительно = "";
			ФрагментГруппировкаДополнительно = "";
			Для Инд =1 По 10 Цикл
				Если СписокИменРазрезов.НайтиПоЗначению("Разрез"+Строка(Инд))<>Неопределено Тогда
					ПустоеЗначение = Неопределено;
					ЭлементПВХ = фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(Перечисления.фин_ФактическиеПоказателиБюджетирования["Разрез"+Строка(Инд)]);
					ПустоеЗначение = ЭлементПВХ.ТипЗначения.ПривестиЗначение(ПустоеЗначение);
					Фрагмент = "ВЫБОР КОГДА БюджетныеДанные.ДополнительныеРазрезы=ЗНАЧЕНИЕ(Справочник.фин_КлассификаторНаборовДополнительныхРазрезов.ПустаяСсылка) ТОГДА &ПустойРазрез"+Строка(Инд)+" ИНАЧЕ ЕСТЬNULL(БюджетныеДанные.ДополнительныеРазрезы.Разрез"+Строка(Инд)+",НЕОПРЕДЕЛЕНО) КОНЕЦ";
					Запрос.УстановитьПараметр("ПустойРазрез"+Строка(Инд),ПустоеЗначение);
					ФрагментГруппировкаДополнительно = ФрагментГруппировкаДополнительно + ",
					|"+Фрагмент;
					ФрагментПоляДополнительно = ФрагментПоляДополнительно + ",
					|"+Фрагмент+ " КАК Разрез"+Строка(Инд);
				КонецЕсли;
			КонецЦикла;
			ТекстРазрядность = "";
			РазрядностьПланирования = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("РазрядностьПланированияБюджетов");
			Если РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.Миллионы Тогда
				ТекстРазрядность="*1000000";
			ИначеЕсли РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.СотниТысяч Тогда
				ТекстРазрядность="*100000";
			ИначеЕсли РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.ДесяткиТысяч Тогда
				ТекстРазрядность="*10000";
			ИначеЕсли РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.Тысячи Тогда
				ТекстРазрядность="*1000";
			ИначеЕсли РазрядностьПланирования = Перечисления.фин_РазрядностьПланированияБюджетов.Сотни Тогда
				ТекстРазрядность="*100";
			КонецЕсли;
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СУММА(ВЫБОР
			|		КОГДА БюджетныеДанные.Сценарий = &Сценарий
			|			ТОГДА БюджетныеДанные.СуммаУпрОборот"+ТекстРазрядность+"
			|		ИНАЧЕ 0
			|	КОНЕЦ) КАК ВсегоРазрешено,
			|	СУММА(ВЫБОР
			|		КОГДА БюджетныеДанные.Сценарий = &Сценарий И Валюта=&ВалютаДокумента
			|			ТОГДА БюджетныеДанные.ВалютнаяСуммаОборот"+ТекстРазрядность+"
			|		ИНАЧЕ 0
			|	КОНЕЦ) КАК ВсегоРазрешеноВВалюте,
			|	СУММА(ВЫБОР
			|		КОГДА БюджетныеДанные.Сценарий = &Сценарий И Валюта<>&ВалютаДокумента
			|			ТОГДА БюджетныеДанные.СуммаУпрОборот"+ТекстРазрядность+"
			|		ИНАЧЕ 0
			|	КОНЕЦ) КАК ВсегоРазрешеноВВалютеУпр,
			|	СУММА(ВЫБОР
			|		КОГДА БюджетныеДанные.Сценарий <> &Сценарий
			|			ТОГДА БюджетныеДанные.СуммаУпрОборот
			|		ИНАЧЕ 0
			|	КОНЕЦ) КАК Исполнено,
			|	СУММА(ВЫБОР
			|		КОГДА БюджетныеДанные.Сценарий <> &Сценарий И Валюта=&ВалютаДокумента
			|			ТОГДА БюджетныеДанные.ВалютнаяСуммаОборот
			|		ИНАЧЕ 0
			|	КОНЕЦ) КАК ИсполненоВВалюте,
			|	СУММА(ВЫБОР
			|		КОГДА БюджетныеДанные.Сценарий <> &Сценарий И Валюта<>&ВалютаДокумента
			|			ТОГДА БюджетныеДанные.СуммаУпрОборот
			|		ИНАЧЕ 0
			|	КОНЕЦ) КАК ИсполненоВВалютеУпр,
			|   БюджетныеДанные.Проект,
			|   БюджетныеДанные.Контрагент,
			|   ВЫБОР 
			|		КОГДА БюджетныеДанные.Номенклатура=ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|			ТОГДА НЕОПРЕДЕЛЕНО
			| 	КОГДА БюджетныеДанные.Номенклатура=ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		КОГДА БюджетныеДанные.Номенклатура=ЗНАЧЕНИЕ(Справочник.фин_ПлановаяНоменклатура.ПустаяСсылка)
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ БюджетныеДанные.Номенклатура
			|КОНЕЦ КАК Номенклатура,
			|   БюджетныеДанные.УправленческоеПодразделение"+ФрагментПоляДополнительно+"
			|ИЗ
			|	РегистрНакопления.фин_ОборотыБюджетов.Обороты(
			|			,
			|			"+?(АктуальныйМониторинг=0,"","&ДатаРасхода")+",
			|			,ПериодПланирования >=&НачалоПериода И ПериодПланирования<= &КонецПериода И
			|			(Сценарий = &Сценарий
			|				ИЛИ Сценарий = ЗНАЧЕНИЕ(Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+"СценарииПланирования.ПустаяСсылка))
			|				И ФинансовыйПоказатель = &ФинансовыйПоказатель
			|				И (Организация=ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ИЛИ Организация=&Организация) "+ТекстУсловие+") КАК БюджетныеДанные
			|
			|СГРУППИРОВАТЬ ПО
			|   БюджетныеДанные.Проект,
			|   БюджетныеДанные.Контрагент,
			|   ВЫБОР 
			|		КОГДА БюджетныеДанные.Номенклатура=ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
			|			ТОГДА НЕОПРЕДЕЛЕНО
			| 	КОГДА БюджетныеДанные.Номенклатура=ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		КОГДА БюджетныеДанные.Номенклатура=ЗНАЧЕНИЕ(Справочник.фин_ПлановаяНоменклатура.ПустаяСсылка)
			|			ТОГДА НЕОПРЕДЕЛЕНО
			|		ИНАЧЕ БюджетныеДанные.Номенклатура
			|КОНЕЦ,
			|   БюджетныеДанные.УправленческоеПодразделение"+ФрагментГруппировкаДополнительно+"
			|ИТОГИ
			| 	СУММА(ВсегоРазрешеноВВалютеУпр),
			| 	СУММА(ВсегоРазрешеноВВалюте),
			| 	СУММА(ИсполненоВВалюте),
			| 	СУММА(ИсполненоВВалютеУпр),
			| 	СУММА(ВсегоРазрешено),
			| 	СУММА(Исполнено)
			|
			|ПО Общие";

			Запрос.УстановитьПараметр("Сценарий", 				Сценарий);
			Запрос.УстановитьПараметр("ФинансовыйПоказатель", 	КонтролируемаяСтрока.ФинансовыйПоказатель);
			Запрос.УстановитьПараметр("НачалоПериода", 			фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(КонтролируемаяСтрока.Период,Сценарий));
			Запрос.УстановитьПараметр("КонецПериода", 			КонецДня(фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(КонтролируемаяСтрока.Период,Сценарий)));
		 	Запрос.УстановитьПараметр("Организация", 			Объект.Организация);
		    Запрос.УстановитьПараметр("ДатаРасхода", 			?(АктуальныйМониторинг=2,КонецДня(КонтролируемаяСтрока.Период),КонтролируемаяСтрока.Период));
	 	 	Запрос.УстановитьПараметр("Ссылка", 				Объект.Документ);
	 	 	Запрос.УстановитьПараметр("ВалютаДокумента", 		КонтролируемаяСтрока.Валюта);
	 	 	Запрос.УстановитьПараметр("ПериодИсполнения", 		КонтролируемаяСтрока.Период);

			Результат = Запрос.Выполнить();

			ВыборкаПоБюджету = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Если ВыборкаПоБюджету.Следующий() Тогда
				ЗаполнитьЗначенияСвойств(СтрокаКонтроль,ВыборкаПоБюджету,"ВсегоРазрешено,Исполнено");
				Если мВалютаУправленческогоУчета <> КонтролируемаяСтрока.Валюта Тогда
					ЗаполнитьЗначенияСвойств(СтрокаКонтрольВал,ВыборкаПоБюджету,"ВсегоРазрешено,Исполнено");
					// пересчитаем в валюту документа
					СтрокаКонтрольВал.Исполнено = ВыборкаПоБюджету.ИсполненоВВалюте + фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(ВыборкаПоБюджету.ИсполненоВВалютеУпр,мВалютаУправленческогоУчета,КонтролируемаяСтрока.Валюта,КурсУпр.Курс,КурсДокумента,КурсУпр.Кратность,КратностьДокумента);

					СтрокаКонтрольВал.ВсегоРазрешено = ВыборкаПоБюджету.ВсегоРазрешеноВВалюте + фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(ВыборкаПоБюджету.ВсегоРазрешеноВВалютеУпр,мВалютаУправленческогоУчета,КонтролируемаяСтрока.Валюта,КурсСчетный.Курс,КурсДокумента,КурсСчетный.Кратность,КратностьДокумента);
				КонецЕсли;
			КонецЕсли;
			
		    // 2 - неисполненный остаток по текущей заявке
			Если Объект.Документ.Проведен И АктуальныйМониторинг<>1 И НЕ Объект.РегистрНакопления="фин_ПрогнозИсполненияБюджетов" И ЗначениеЗаполнено(Объект.РегистрНакопления) Тогда
				Запрос.Текст = 
						"ВЫБРАТЬ
						|	БюджетныеДанные.ПериодПланирования,	 
			            |	БюджетныеДанные.ВалютнаяСумма"+?(Объект.ВидРегистра="Остатки","Остаток","Оборот")+" КАК КИсполнениюПоТекущейЗаявкеВВалюте,
			            |	БюджетныеДанные.Валюта КАК Валюта,
			            |	БюджетныеДанные.СуммаУпр"+?(Объект.ВидРегистра="Остатки","Остаток","Оборот")+" КАК КИсполнениюПоТекущейЗаявке
						|ИЗ
						|	РегистрНакопления."+Объект.РегистрНакопления+"."+Объект.ВидРегистра+"(
						|			"+?(АктуальныйМониторинг=0 ИЛИ Объект.РегистрНакопления="фин_ПрогнозИсполненияБюджетов","","&ДатаРасхода")+","+?(Объект.ВидРегистра="Остатки","",",,")+"
						|			 "+?(ЗначениеЗаполнено(Объект.ИзмерениеРегистраДокумент),Объект.ИзмерениеРегистраДокумент+" = &Ссылка","ИСТИНА")+" И ФинансовыйПоказатель = &ФинансовыйПоказатель "+?(Объект.РегистрНакопления="фин_ПрогнозИсполненияБюджетов"," И ПериодПланирования<=&ПериодИсполнения","")+" "+?(ПоНесколькимРазрезам,ТекстУсловие,"")+") КАК БюджетныеДанные
						|ГДЕ БюджетныеДанные.ВалютнаяСумма"+?(Объект.ВидРегистра="Остатки","Остаток","Оборот")+">0";

				Результат = Запрос.Выполнить();

				ВыборкаДетальныеЗаписи = Результат.Выбрать();
	            мКИсполнениюПоТекущейЗаявке = 0;
	            мКИсполнениюПоТекущейЗаявкеВал = 0;
	            мКИсполнениюПоТекущейСтроке = 0;
	            мКИсполнениюПоТекущейСтрокеВал = 0;
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					мКИсполнениюПоТекущейЗаявке  = мКИсполнениюПоТекущейЗаявке + ВыборкаДетальныеЗаписи.КИсполнениюПоТекущейЗаявке;
					Если мВалютаУправленческогоУчета <> КонтролируемаяСтрока.Валюта Тогда
						Если ВыборкаДетальныеЗаписи.Валюта = КонтролируемаяСтрока.Валюта Тогда
							мКИсполнениюПоТекущейЗаявкеВал = мКИсполнениюПоТекущейЗаявкеВал + ВыборкаДетальныеЗаписи.КИсполнениюПоТекущейЗаявкеВВалюте;
						Иначе
							ТекСумма = ВыборкаДетальныеЗаписи.КИсполнениюПоТекущейЗаявке;
							// пересчитаем в валюту документа
							Если мВалютаУправленческогоУчета <> КонтролируемаяСтрока.Валюта Тогда
								мКИсполнениюПоТекущейЗаявкеВал = мКИсполнениюПоТекущейЗаявкеВал + фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(ТекСумма,мВалютаУправленческогоУчета,КонтролируемаяСтрока.Валюта,КурсУпр.Курс,КурсДокумента,КурсУпр.Кратность,КратностьДокумента);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					Если ВыборкаДетальныеЗаписи.ПериодПланирования = КонтролируемаяСтрока.Период Тогда
						мКИсполнениюПоТекущейСтроке  = мКИсполнениюПоТекущейСтроке + ВыборкаДетальныеЗаписи.КИсполнениюПоТекущейЗаявке;
						Если мВалютаУправленческогоУчета <> КонтролируемаяСтрока.Валюта Тогда
							Если ВыборкаДетальныеЗаписи.Валюта = КонтролируемаяСтрока.Валюта Тогда
								мКИсполнениюПоТекущейСтрокеВал = мКИсполнениюПоТекущейСтрокеВал + ВыборкаДетальныеЗаписи.КИсполнениюПоТекущейЗаявкеВВалюте;
							Иначе
								ТекСумма = ВыборкаДетальныеЗаписи.КИсполнениюПоТекущейЗаявке;
								// пересчитаем в валюту документа
								Если мВалютаУправленческогоУчета <> КонтролируемаяСтрока.Валюта Тогда
									мКИсполнениюПоТекущейСтрокеВал = мКИсполнениюПоТекущейСтрокеВал + фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(ТекСумма,мВалютаУправленческогоУчета,КонтролируемаяСтрока.Валюта,КурсУпр.Курс,КурсДокумента,КурсУпр.Кратность,КратностьДокумента);
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				СтрокаКонтроль.КИсполнениюПоТекущейЗаявке = мКИсполнениюПоТекущейЗаявке;
				СтрокаКонтроль.КИсполнениюПоТекущейСтрокеЗаявки = мКИсполнениюПоТекущейСтроке;
				Если мВалютаУправленческогоУчета <> КонтролируемаяСтрока.Валюта Тогда
					СтрокаКонтрольВал.КИсполнениюПоТекущейЗаявке = мКИсполнениюПоТекущейЗаявкеВал;
					СтрокаКонтрольВал.КИсполнениюПоТекущейСтрокеЗаявки = мКИсполнениюПоТекущейСтрокеВал;
				КонецЕсли;
				Если Модифицированность Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Т.к. документ изменен, но не записан, сведения об актуальном остатке платежа по заявке могут быть неточными!");
				КонецЕсли;
			Иначе
				СтруктураПоискаИдентичных = Новый Структура("ФинансовыйПоказатель");
				Для Каждого ЭлементРазрез Из Объект.СписокРазрезовКонтроля Цикл
					СтруктураПоискаИдентичных.Вставить(ЭлементРазрез.Значение);
				КонецЦикла;
				ЗаполнитьЗначенияСвойств(СтруктураПоискаИдентичных,КонтролируемаяСтрока);
				СуммыАналогичныхСтрок = 0;
				Для Каждого АналогичнаяСтрока Из ТаблицаВыполненияКонтроля.НайтиСтроки(СтруктураПоискаИдентичных) Цикл
					Если АналогичнаяСтрока<> КонтролируемаяСтрока И АналогичнаяСтрока.Период<=КонтролируемаяСтрока.Период И фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(АналогичнаяСтрока.Период,Сценарий)=фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(КонтролируемаяСтрока.Период,Сценарий) Тогда
						Если АналогичнаяСтрока.Валюта = мВалютаУправленческогоУчета Тогда
							СуммаУпр 	= АналогичнаяСтрока.Сумма;
						Иначе
							КурсСтроки 	= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(АналогичнаяСтрока.Валюта,АналогичнаяСтрока.Период);
							СуммаУпр 	= фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(АналогичнаяСтрока.Сумма,АналогичнаяСтрока.Валюта,мВалютаУправленческогоУчета,КурсДокумента,КурсСтроки.Курс,КратностьДокумента,КурсСтроки.Кратность);
						КонецЕсли;
						СуммыАналогичныхСтрок = СуммыАналогичныхСтрок + СуммаУпр;
					КонецЕсли;
				КонецЦикла;

				Если мВалютаУправленческогоУчета <> КонтролируемаяСтрока.Валюта Тогда
					КурсСтроки 					= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(КонтролируемаяСтрока.Валюта,КонтролируемаяСтрока.Период);
					СуммыАналогичныхСтрокВал 	= фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(СуммыАналогичныхСтрокВал,КонтролируемаяСтрока.Валюта,мВалютаУправленческогоУчета,КурсДокумента,КурсСтроки.Курс,КратностьДокумента,КурсСтроки.Кратность);
					СтрокаКонтрольВал.КИсполнениюПоТекущейЗаявке = КонтролируемаяСтрока.Сумма + СуммыАналогичныхСтрокВал;
					СтрокаКонтрольВал.КИсполнениюПоТекущейСтрокеЗаявки = КонтролируемаяСтрока.Сумма;
				КонецЕсли;
				СтрокаКонтроль.КИсполнениюПоТекущейЗаявке = СуммыАналогичныхСтрок + фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(КонтролируемаяСтрока.Сумма,КонтролируемаяСтрока.Валюта,мВалютаУправленческогоУчета,КурсДокумента,КурсУпр.Курс,КратностьДокумента,КурсУпр.Кратность);
				СтрокаКонтроль.КИсполнениюПоТекущейСтрокеЗаявки = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(КонтролируемаяСтрока.Сумма,КонтролируемаяСтрока.Валюта,мВалютаУправленческогоУчета,КурсДокумента,КурсУпр.Курс,КратностьДокумента,КурсУпр.Кратность);
			КонецЕсли;

			// 3 - получение остатков по прочим заявкам

			
			мКИсполнениюПоПрочимЗаявкам =0;
			мКИсполнениюПоПрочимЗаявкамВал =0;
		    МассивЗаявок = Новый Массив;
			Если Объект.РегистрНакопления<>"" Тогда
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	БюджетныеДанные."+Объект.ИзмерениеРегистраДокумент+" КАК ПрогнознаяТранзакция,
		            |	БюджетныеДанные.Валюта КАК Валюта,
		            |	БюджетныеДанные.СуммаУпр"+?(Объект.ВидРегистра="Остатки","Остаток","Оборот")+" КАК СуммаУпр,
		            |	БюджетныеДанные.ВалютнаяСумма"+?(Объект.ВидРегистра="Остатки","Остаток","Оборот")+" КАК ВалютнаяСумма
					|ИЗ
					|	РегистрНакопления."+Объект.РегистрНакопления+"."+Объект.ВидРегистра+"(
					|			"+?(АктуальныйМониторинг=0 ИЛИ Объект.РегистрНакопления="фин_ПрогнозИсполненияБюджетов","","&ДатаРасхода")+","+?(Объект.ВидРегистра="Остатки","",",,")+"
					|			"+?(Объект.РегистрНакопления="фин_ПрогнозИсполненияБюджетов","ИСТИНА ","Сценарий = &Сценарий ")+?(ЗначениеЗаполнено(Объект.ИзмерениеРегистраДокумент),"И "+Объект.ИзмерениеРегистраДокумент+" <> &Ссылка","")+" 
					|				И ФинансовыйПоказатель = &ФинансовыйПоказатель "+?(Объект.РегистрНакопления="фин_ПрогнозИсполненияБюджетов"," И ПериодПланирования<=&ДатаРасхода","")+"
					|				И (Организация=ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ИЛИ Организация=&Организация) "+ТекстУсловие+") КАК БюджетныеДанные
					|ГДЕ БюджетныеДанные.ВалютнаяСумма"+?(Объект.ВидРегистра="Остатки","Остаток","Оборот")+">0
					|ИТОГИ
					| 	СУММА(СуммаУпр),СУММА(ВалютнаяСумма)
					|
					|ПО ПрогнознаяТранзакция";

				Результат = Запрос.Выполнить();

				ВыборкаДетальныеЗаписи = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					мКИсполнениюПоПрочимЗаявкам = мКИсполнениюПоПрочимЗаявкам +  ВыборкаДетальныеЗаписи.СуммаУпр;
					МассивЗаявок.Добавить(ВыборкаДетальныеЗаписи.ПрогнознаяТранзакция);
					Если мВалютаУправленческогоУчета <> КонтролируемаяСтрока.Валюта Тогда
						ВыборкаВалюты = ВыборкаДетальныеЗаписи.Выбрать();
						Пока ВыборкаВалюты.Следующий() Цикл
							Если ВыборкаВалюты.Валюта <> ВалютаДокумента Тогда
								мКИсполнениюПоПрочимЗаявкамВал = мКИсполнениюПоПрочимЗаявкамВал+ фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(ВыборкаВалюты.СуммаУпр,мВалютаУправленческогоУчета,КонтролируемаяСтрока.Валюта,КурсУпр.Курс,КурсДокумента,КурсУпр.Кратность,КратностьДокумента);
							Иначе
								мКИсполнениюПоПрочимЗаявкамВал = мКИсполнениюПоПрочимЗаявкамВал + ВыборкаВалюты.ВалютнаяСумма;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			СтрокаКонтроль.КИсполнениюПоПрочимЗаявкам =  мКИсполнениюПоПрочимЗаявкам;
			Если мВалютаУправленческогоУчета <> КонтролируемаяСтрока.Валюта Тогда
				СтрокаКонтрольВал.КИсполнениюПоПрочимЗаявкам = мКИсполнениюПоПрочимЗаявкамВал;
			КонецЕсли;
			
			СоответствиеРасшифровка.Вставить(Идентификатор,МассивЗаявок);
			
			// разноска детализирующих строк
			
			ВыборкаДетали = ВыборкаПоБюджету.Выбрать();
			
			Если ВыборкаДетали.Количество()>0 Тогда

				Пока ВыборкаДетали.Следующий() Цикл
					Идентификатор = Идентификатор + 1;
					
					СтруктураОтбора = Новый Структура;
					СтруктураОтбораПустые = Новый Структура;
					ТекстОписания = "";
					Для Каждого ИмяРазреза Из ПолныйМассивИмен Цикл
						Если Объект.СписокРазрезовКонтроля.НайтиПоЗначению(ИмяРазреза)=Неопределено Тогда
							Продолжить;
						КонецЕсли;
						Если ЗначениеЗаполнено(ВыборкаДетали[ИмяРазреза]) Тогда
							СтруктураОтбора.Вставить(ИмяРазреза,ВыборкаДетали[ИмяРазреза]);
							ТекстОписания=ТекстОписания+?(ТекстОписания="","",";"+Символы.ПС)+фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(Перечисления.фин_ФактическиеПоказателиБюджетирования[ИмяРазреза])+": "+Строка(ВыборкаДетали[ИмяРазреза]);
						Иначе
							СтруктураОтбораПустые.Вставить(ИмяРазреза,ВыборкаДетали[ИмяРазреза]);
						КонецЕсли;
					КонецЦикла;
					// определим, есть ли отличия для данной строки - ищем только более детальные, чем в документе
					ЕстьОтличия = Ложь;
					Для Каждого СтрокаОтбор Из СтруктураОтбора Цикл
						ЗначениеПоля = КонтролируемаяСтрока[СтрокаОтбор.Ключ];
						Если НЕ ЗначениеЗаполнено(ЗначениеПоля) Тогда
							ЕстьОтличия = Истина;
							Прервать;
						ИначеЕсли ЗначениеПоля <> СтрокаОтбор.Значение Тогда
							ЕстьОтличия = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					Если ЕстьОтличия=Ложь И ВыборкаДетали.Количество()=1 Тогда
						Продолжить;
					КонецЕсли;
					Для Каждого СтрокаОтбор Из Объект.СписокРазрезовКонтроля Цикл
						ЗначениеПараметра = Неопределено;
						Если НЕ СтруктураОтбора.Свойство(СтрокаОтбор.Значение,ЗначениеПараметра) Тогда
							ЕстьОтличия = Истина;
							Прервать;
						ИначеЕсли ЗначениеПараметра <> КонтролируемаяСтрока[СтрокаОтбор.Значение] Тогда
							ЕстьОтличия = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					// контроль по бюджету
					СтрокаКонтрольВложенная = СтрокаКонтроль.Строки.Добавить();
					СтрокаКонтрольВложенная.ВидКонтроля = "По бюджету, "+Строка(мВалютаУправленческогоУчета)+?(ТекстОписания="","",": ")+ТекстОписания;
					СтрокаКонтрольВложенная.Идентификатор = Идентификатор;
					ЗаполнитьЗначенияСвойств(СтрокаКонтрольВложенная,КонтролируемаяСтрока);
					СтрокаКонтрольВложенная.Валюта = мВалютаУправленческогоУчета;
					Если мВалютаУправленческогоУчета <> КонтролируемаяСтрока.Валюта Тогда
						СтрокаКонтрольВалВложенная = СтрокаКонтрольВал.Строки.Добавить();
						СтрокаКонтрольВалВложенная.ВидКонтроля = "По бюджету, "+КонтролируемаяСтрока.Валюта+?(ТекстОписания="","",": ")+ТекстОписания;
						СтрокаКонтрольВалВложенная.Идентификатор = Идентификатор;
						ЗаполнитьЗначенияСвойств(СтрокаКонтрольВложенная,КонтролируемаяСтрока);
					КонецЕсли;
					ЗаполнитьЗначенияСвойств(СтрокаКонтрольВложенная,ВыборкаДетали);
					Если мВалютаУправленческогоУчета <> КонтролируемаяСтрока.Валюта Тогда
						ЗаполнитьЗначенияСвойств(СтрокаКонтрольВалВложенная,ВыборкаДетали);
						// пересчитаем в валюту документа
						СтрокаКонтрольВалВложенная.Исполнено = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(СтрокаКонтрольВалВложенная.Исполнено,мВалютаУправленческогоУчета,КонтролируемаяСтрока.Валюта,КурсУпр.Курс,КурсДокумента,КурсУпр.Кратность,КратностьДокумента);
						СтрокаКонтрольВалВложенная.ВсегоРазрешено = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(СтрокаКонтрольВалВложенная.ВсегоРазрешено,мВалютаУправленческогоУчета,КонтролируемаяСтрока.Валюта,КурсСчетный.Курс,КурсДокумента,КурсСчетный.Кратность,КратностьДокумента);
					КонецЕсли;
				
				    // 2 - неисполненный остаток по текущей заявке
					Если НЕ ЕстьОтличия Тогда
						Если мВалютаУправленческогоУчета <> ВалютаДокумента Тогда
							СтрокаКонтрольВалВложенная.КИсполнениюПоТекущейЗаявке = СтрокаКонтрольВал.КИсполнениюПоТекущейЗаявке;
							СтрокаКонтрольВалВложенная.КИсполнениюПоТекущейСтрокеЗаявки = СтрокаКонтрольВал.КИсполнениюПоТекущейЗаявке;
						КонецЕсли;
						СтрокаКонтрольВложенная.КИсполнениюПоТекущейЗаявке = СтрокаКонтроль.КИсполнениюПоТекущейЗаявке;
						СтрокаКонтрольВложенная.КИсполнениюПоТекущейСтрокеЗаявки = СтрокаКонтроль.КИсполнениюПоТекущейЗаявке;
					КонецЕсли;

					// 3 - получение остатков по прочим заявкам

				    МассивЗаявок = Новый Массив;
					

					мКИсполнениюПоПрочимЗаявкам =0;
					мКИсполнениюПоПрочимЗаявкамВал =0;
					Если Объект.РегистрНакопления<>"" Тогда
				  		ТекстУсловие = "";
						Для Каждого СтрокаПараметров Из СтруктураОтбора Цикл
							ИмяРазреза = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(Перечисления.фин_ФактическиеПоказателиБюджетирования[СтрокаПараметров.Ключ]);
							Если Найти(ИмяРазреза,"Разрез")<>0 Тогда
								ПутьРазреза = "ДополнительныеРазрезы."+ИмяРазреза;
							Иначе 
								ПутьРазреза = ИмяРазреза;
							КонецЕсли;
							ТекстУсловие= ТекстУсловие+"
							|				И "+ПутьРазреза+" =&"+ИмяРазреза;
							Запрос.УстановитьПараметр(ИмяРазреза,СтрокаПараметров.Значение);
						КонецЦикла;
						Для Каждого СтрокаПараметров Из СтруктураОтбораПустые Цикл
							ИмяРазреза = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(Перечисления.фин_ФактическиеПоказателиБюджетирования[СтрокаПараметров.Ключ]);
							Если Найти(ИмяРазреза,"Разрез")<>0 Тогда
								ПутьРазреза = "ДополнительныеРазрезы."+ИмяРазреза;
							Иначе 
								ПутьРазреза = ИмяРазреза;
							КонецЕсли;
							ТекстУсловие= ТекстУсловие+"
							|				И "+ПутьРазреза+" =&"+ИмяРазреза;
							Запрос.УстановитьПараметр(ИмяРазреза,СтрокаПараметров.Значение);
						КонецЦикла;

						Запрос.Текст = 
							"ВЫБРАТЬ
							|	БюджетныеДанные."+Объект.ИзмерениеРегистраДокумент+" КАК ПрогнознаяТранзакция,
		           			|	БюджетныеДанные.Валюта КАК Валюта,
		            		|	БюджетныеДанные.ВалютнаяСумма"+?(Объект.ВидРегистра="Остатки","Остаток","Оборот")+" КАК ВалютнаяСумма,
				            |	БюджетныеДанные.СуммаУпр"+?(Объект.ВидРегистра="Остатки","Остаток","Оборот")+" КАК КИсполнениюПоПрочимЗаявкам
							|ИЗ
							|	РегистрНакопления."+Объект.РегистрНакопления+"."+Объект.ВидРегистра+"(
							|			"+?(АктуальныйМониторинг=0 ИЛИ Объект.РегистрНакопления="фин_ПрогнозИсполненияБюджетов","","&ДатаРасхода")+","+?(Объект.ВидРегистра="Остатки","",",,")+"
							|			"+?(Объект.РегистрНакопления="фин_ПрогнозИсполненияБюджетов","ИСТИНА ","Сценарий = &Сценарий ")+?(ЗначениеЗаполнено(Объект.ИзмерениеРегистраДокумент),"И "+Объект.ИзмерениеРегистраДокумент+" <> &Ссылка","")+"
							|				И ФинансовыйПоказатель = &ФинансовыйПоказатель "+?(Объект.РегистрНакопления="фин_ПрогнозИсполненияБюджетов"," И ПериодПланирования<=&ДатаРасхода","")+"
							|				И (Организация=ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ИЛИ Организация=&Организация) "+ТекстУсловие+") КАК БюджетныеДанные					
							|ИТОГИ
							| 	СУММА(КИсполнениюПоПрочимЗаявкам),СУММА(ВалютнаяСумма)
							|
							|ПО ПрогнознаяТранзакция";
						
						
						Результат = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						мКИсполнениюПоПрочимЗаявкам = мКИсполнениюПоПрочимЗаявкам + ВыборкаДетальныеЗаписи.КИсполнениюПоПрочимЗаявкам;
						МассивЗаявок.Добавить(ВыборкаДетальныеЗаписи.ПрогнознаяТранзакция);
						Если мВалютаУправленческогоУчета <> КонтролируемаяСтрока.Валюта Тогда
							ВыборкаВалюты = ВыборкаДетальныеЗаписи.Выбрать();
							Пока ВыборкаВалюты.Следующий() Цикл
								// пересчитаем в валюту документа
								Если ВыборкаВалюты.Валюта <> ВалютаДокумента Тогда
									мКИсполнениюПоПрочимЗаявкамВал = мКИсполнениюПоПрочимЗаявкамВал +  фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(ВыборкаДетальныеЗаписи.КИсполнениюПоПрочимЗаявкам,мВалютаУправленческогоУчета,КонтролируемаяСтрока.Валюта,КурсУпр.Курс,КурсДокумента,КурсУпр.Кратность,КратностьДокумента);
								Иначе
									мКИсполнениюПоПрочимЗаявкамВал = мКИсполнениюПоПрочимЗаявкамВал + ВыборкаВалюты.ВалютнаяСумма;
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЦикла;
					КонецЕсли;
					СтрокаКонтрольВложенная.КИсполнениюПоПрочимЗаявкам =  мКИсполнениюПоПрочимЗаявкам;
					Если мВалютаУправленческогоУчета <> КонтролируемаяСтрока.Валюта Тогда
						СтрокаКонтрольВалВложенная.КИсполнениюПоПрочимЗаявкам = мКИсполнениюПоПрочимЗаявкамВал;
					КонецЕсли;
					СоответствиеРасшифровка.Вставить(Идентификатор,МассивЗаявок);
					
				КонецЦикла;	
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;
	// 4 - расчет контрольных сумм
	
	Для Каждого мСтрокаКонтроля Из ТаблицаБюджетныйКонтроль.Строки Цикл
		мСтрокаКонтроля.Остаток = мСтрокаКонтроля.ВсегоРазрешено - мСтрокаКонтроля.Исполнено - мСтрокаКонтроля.КИсполнениюПоПрочимЗаявкам;
		мСтрокаКонтроля.ОстатокСУчетомЗаявки = мСтрокаКонтроля.Остаток - мСтрокаКонтроля.КИсполнениюПоТекущейЗаявке;
		мСтрокаКонтроля.ОстатокСУчетомТекущейСтрокиЗаявки = мСтрокаКонтроля.Остаток - мСтрокаКонтроля.КИсполнениюПоТекущейСтрокеЗаявки;
		Для Каждого мСтрокаКонтроляВложенная Из мСтрокаКонтроля.Строки Цикл
			мСтрокаКонтроляВложенная.Остаток = мСтрокаКонтроляВложенная.ВсегоРазрешено - мСтрокаКонтроляВложенная.Исполнено - мСтрокаКонтроляВложенная.КИсполнениюПоПрочимЗаявкам;
			мСтрокаКонтроляВложенная.ОстатокСУчетомЗаявки = мСтрокаКонтроляВложенная.Остаток - мСтрокаКонтроляВложенная.КИсполнениюПоТекущейЗаявке;
			мСтрокаКонтроляВложенная.ОстатокСУчетомТекущейСтрокиЗаявки = мСтрокаКонтроляВложенная.Остаток - мСтрокаКонтроляВложенная.КИсполнениюПоТекущейСтрокеЗаявки;
		КонецЦикла;
		Если мСтрокаКонтроля.Строки.Количество()>0 Тогда
			РазницаТекущаяЗаявка 	= мСтрокаКонтроля.КИсполнениюПоТекущейЗаявке - мСтрокаКонтроля.Строки.Итог("КИсполнениюПоТекущейЗаявке");
			РазницаТекущаяСтрока 	= мСтрокаКонтроля.КИсполнениюПоТекущейСтрокеЗаявки - мСтрокаКонтроля.Строки.Итог("КИсполнениюПоТекущейСтрокеЗаявки");
			РазницаПрочиеЗаявки 	= мСтрокаКонтроля.КИсполнениюПоПрочимЗаявкам - мСтрокаКонтроля.Строки.Итог("КИсполнениюПоПрочимЗаявкам");
			РазницаИсполнение	 	= мСтрокаКонтроля.Исполнено - мСтрокаКонтроля.Строки.Итог("Исполнено");
			Если РазницаТекущаяЗаявка<>0 ИЛИ РазницаПрочиеЗаявки<>0 ИЛИ РазницаИсполнение<>0 Тогда
				Идентификатор=Идентификатор+1;
				ДопСтрока = мСтрокаКонтроля.Строки.Добавить();
				ДопСтрока.ВидКонтроля = "По бюджету, "+Строка(мВалютаУправленческогоУчета)+": ОТКЛОНЕНИЯ";
				ДопСтрока.Идентификатор = Идентификатор;
				ДопСтрока.Валюта = мСтрокаКонтроля.Валюта;
				ДопСтрока.КИсполнениюПоТекущейЗаявке = РазницаТекущаяЗаявка;
				ДопСтрока.КИсполнениюПоТекущейСтрокеЗаявки = РазницаТекущаяЗаявка;
				ДопСтрока.КИсполнениюПоПрочимЗаявкам = РазницаПрочиеЗаявки;
				ДопСтрока.Исполнено = РазницаИсполнение;
				ДопСтрока.Остаток = - РазницаПрочиеЗаявки - РазницаИсполнение;
				ДопСтрока.ОстатокСУчетомЗаявки = - РазницаПрочиеЗаявки - РазницаИсполнение - РазницаТекущаяЗаявка;
				ДопСтрока.ОстатокСУчетомТекущейСтрокиЗаявки = - РазницаПрочиеЗаявки - РазницаИсполнение - РазницаТекущаяСтрока;
				ПолныйМассив = СоответствиеРасшифровка.Получить(мСтрокаКонтроля.Идентификатор);
				Если ПолныйМассив<>Неопределено Тогда
					Для Каждого мСтрокаКонтроляВложенная Из мСтрокаКонтроля.Строки Цикл
						ТекущийМассив = СоответствиеРасшифровка.Получить(мСтрокаКонтроляВложенная.Идентификатор);
						Если ТекущийМассив<>Неопределено Тогда
							Для Каждого ЗаявкаВключенная Из ТекущийМассив Цикл
								Если ПолныйМассив.Найти(ЗаявкаВключенная)<>Неопределено Тогда
									ПолныйМассив.Удалить(ПолныйМассив.Найти(ЗаявкаВключенная));
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЦикла;
					СоответствиеРасшифровка.Вставить(Идентификатор,ПолныйМассив);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	// рассчитаем контроль по лимиту

	
	ДокБюджет = Новый ТаблицаЗначений;
	Для Каждого НР Из Метаданные.Документы.фин_Бюджет.ТабличныеЧасти.ОборотыПоСтатьям.Реквизиты Цикл
		ДокБюджет.Колонки.Добавить(НР.Имя,НР.Тип);
	КонецЦикла;
	БюджетированиеПоОрганизациям = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("БюджетированиеПоОрганизациям");
	
	ПериодыИПоказатели = ТаблицаВыполненияКонтроля.Скопировать(,"ФинансовыйПоказатель,Период,Валюта");
	ПериодыИПоказатели.Свернуть("ФинансовыйПоказатель,Период,Валюта");
	ПериодыИПоказатели.Сортировать("ФинансовыйПоказатель,Период,Валюта");
	
	Сценарий = Неопределено;
	
	Для Каждого СтрокаПериодПоказатель Из ПериодыИПоказатели Цикл
		ТаблицаВыполненияКонтроляПоПериодуИПоказателю = ТаблицаВыполненияКонтроля.Скопировать(Новый Структура("ФинансовыйПоказатель,Период,Валюта",СтрокаПериодПоказатель.ФинансовыйПоказатель,СтрокаПериодПоказатель.Период,СтрокаПериодПоказатель.Валюта));
		
		//определим применяемое количество правил лимитирования - на весь документ, или по разрезам
		ОбщийКонтроль = Истина;
		Если ПоНесколькимРазрезам Тогда
			ТаблицаОборотовДокументаДляКонтроля = ДокБюджет.Скопировать();
			ТаблицаОборотовДокументаДляКонтроля.Колонки.Добавить("Период");
			ТаблицаОборотовДокументаДляКонтроля.Колонки.Добавить("Сценарий");
			ТаблицаОборотовДокументаДляКонтроля.Колонки.Добавить("СуммаСценария");
			ТЗ = ТаблицаВыполненияКонтроляПоПериодуИПоказателю.Скопировать();
			
			Для Каждого КонтролируемаяСтрока Из ТЗ Цикл
				
				мСтрокаКонтроля = ТаблицаОборотовДокументаДляКонтроля.Добавить();
				мСтрокаКонтроля.Период 					= КонтролируемаяСтрока.Период;
				//мСтрокаКонтроля.Сценарий 				= Сценарий;
				мСтрокаКонтроля.ФинансовыйПоказатель 	= КонтролируемаяСтрока.ФинансовыйПоказатель;
				мСтрокаКонтроля.Сумма 					= КонтролируемаяСтрока.Сумма;
				мСтрокаКонтроля.ВалютаОперации 			= КонтролируемаяСтрока.Валюта;
				Для Каждого СтрокаПараметры Из Объект.СписокРазрезовКонтроля Цикл
					мСтрокаКонтроля[СтрокаПараметры.Значение] 		= КонтролируемаяСтрока[СтрокаПараметры.Значение];
				КонецЦикла;
			КонецЦикла;
			СтруктураДанных = Новый Структура;
			СтруктураДанных.Вставить("Период",СтрокаПериодПоказатель.Период);
			Для Каждого ИмяРазреза Из ПолныйМассивИмен Цикл
				СтруктураДанных.Вставить(ИмяРазреза,ТаблицаОборотовДокументаДляКонтроля.ВыгрузитьКолонку(ИмяРазреза));	
			КонецЦикла;
			
			СписокЛимитов = фин_УправлениеЗависимостямиСтатейБюджетов.ПолучитьТаблицуКонтролирующихПравил(ТаблицаОборотовДокументаДляКонтроля.ВыгрузитьКолонку("ФинансовыйПоказатель"),Сценарий,БюджетированиеПоОрганизациям,Объект.Организация,СтруктураДанных,Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриИсполнении,Истина);
			СтрокаКопированияСвертки = "ФинансовыйПоказатель";
			Для Каждого ЭлементРазрез Из Объект.СписокРазрезовКонтроля Цикл
				Если Объект.СписокПолейСНесколькимиЗначениями.НайтиПоЗначению(ЭлементРазрез.Значение)<>Неопределено И СписокЛимитов.Колонки.Найти(ЭлементРазрез.Значение)<>Неопределено Тогда
					СтрокаКопированияСвертки = СтрокаКопированияСвертки + ?(СтрокаКопированияСвертки="","",",")+ЭлементРазрез.Значение;
				КонецЕсли;
			КонецЦикла;
			
			ТЗ = СписокЛимитов.Скопировать(,СтрокаКопированияСвертки);
			ТЗ.Свернуть(СтрокаКопированияСвертки);
			Если ТЗ.Количество()>1 Тогда
				ОбщийКонтроль = Ложь;
			КонецЕсли;
			
			МассивУдаляемых = Новый Массив;
			Для Каждого СтрокаЛимит Из СписокЛимитов Цикл
				Если фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(СтрокаЛимит.Период,СтрокаЛимит.КонтролирующийСценарий.Периодичность) <> фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(КонтролируемаяСтрока.Период,СтрокаЛимит.КонтролирующийСценарий.Периодичность) Тогда
					МассивУдаляемых.Добавить(СтрокаЛимит);
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаЛимит Из МассивУдаляемых Цикл
				СписокЛимитов.Удалить(СтрокаЛимит);
			КонецЦикла;
		КонецЕсли;
		
		Если ОбщийКонтроль Тогда
			ТаблицаОборотовДокументаДляКонтроля = ДокБюджет.Скопировать();
			ТаблицаОборотовДокументаДляКонтроля.Колонки.Добавить("Период");
			ТаблицаОборотовДокументаДляКонтроля.Колонки.Добавить("Сценарий");
			ТаблицаОборотовДокументаДляКонтроля.Колонки.Добавить("СуммаСценария");
			мСтрокаКонтроля = ТаблицаОборотовДокументаДляКонтроля.Добавить();
			мСтрокаКонтроля.Период 					= СтрокаПериодПоказатель.Период;
			мСтрокаКонтроля.Сценарий 				= Сценарий;
			мСтрокаКонтроля.ФинансовыйПоказатель 	= СтрокаПериодПоказатель.ФинансовыйПоказатель;
			мСтрокаКонтроля.Сумма 					= ТаблицаВыполненияКонтроляПоПериодуИПоказателю.Итог("Сумма");
			мСтрокаКонтроля.ВалютаОперации 			= ТаблицаВыполненияКонтроляПоПериодуИПоказателю[0].Валюта;
			КонтролируемаяСтрока 					= ТаблицаВыполненияКонтроляПоПериодуИПоказателю[0];
			Для Каждого СтрокаКонтроль Из Объект.СписокРазрезовКонтроля Цикл
				мСтрокаКонтроля[СтрокаКонтроль.Значение] = КонтролируемаяСтрока[СтрокаКонтроль.Значение];
			КонецЦикла;
			
			СтруктураДанных = Новый Структура;
			СтруктураДанных.Вставить("Период",СтрокаПериодПоказатель.Период);
			Для Каждого ИмяРазреза Из ПолныйМассивИмен Цикл
				СтруктураДанных.Вставить(ИмяРазреза,ТаблицаОборотовДокументаДляКонтроля.ВыгрузитьКолонку(ИмяРазреза));	
			КонецЦикла;
			
			СписокЛимитов = фин_УправлениеЗависимостямиСтатейБюджетов.ПолучитьТаблицуКонтролирующихПравил(ТаблицаОборотовДокументаДляКонтроля.ВыгрузитьКолонку("ФинансовыйПоказатель"),Сценарий,БюджетированиеПоОрганизациям,Объект.Организация,СтруктураДанных,Перечисления.фин_ИспользованиеКонтролируемыхЗначенийБюджетов.ПриИсполнении,Истина);
			
			МассивУдаляемых = Новый Массив;
			Для Каждого СтрокаЛимит Из СписокЛимитов Цикл
				Если фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(СтрокаЛимит.Период,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СтрокаЛимит.КонтролирующийСценарий)) <> фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(СтрокаПериодПоказатель.Период,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СтрокаЛимит.КонтролирующийСценарий)) Тогда
					МассивУдаляемых.Добавить(СтрокаЛимит);
				КонецЕсли;
			КонецЦикла;
			Для Каждого СтрокаЛимит Из МассивУдаляемых Цикл
				СписокЛимитов.Удалить(СтрокаЛимит);
			КонецЦикла;
		КонецЕсли;
		//ДокБюджет = Неопределено;
		
		Если СписокЛимитов.Количество()>0 Тогда
			Для Каждого СтрокаОборотовДляКонтроля Из ТаблицаОборотовДокументаДляКонтроля Цикл
				Если НЕ ОбщийКонтроль Тогда
					СтруктураПоискаЛимиты = Новый Структура("Валюта",мВалютаУправленческогоУчета);
					СтруктураПоискаЛимиты.Вставить("ФинансовыйПоказатель",СтрокаОборотовДляКонтроля.ФинансовыйПоказатель);
					Для Каждого ЭлементРазрез Из Объект.СписокРазрезовКонтроля Цикл
						Если Объект.СписокПолейСНесколькимиЗначениями.НайтиПоЗначению(ЭлементРазрез.Значение)<>Неопределено Тогда
							СтруктураПоискаЛимиты.Вставить(ЭлементРазрез.Значение,СтрокаОборотовДляКонтроля[ЭлементРазрез.Значение]);
						КонецЕсли;
					КонецЦикла;
					СтрокаКонтроль = ТаблицаБюджетныйКонтроль.Строки.НайтиСтроки(СтруктураПоискаЛимиты)[0];
					Если мВалютаУправленческогоУчета <> СтрокаОборотовДляКонтроля.ВалютаОперации Тогда
						СтруктураПоискаЛимиты.Вставить("Валюта",СтрокаОборотовДляКонтроля.ВалютаОперации);
						СтрокаКонтрольВал = ТаблицаБюджетныйКонтроль.Строки.НайтиСтроки(СтруктураПоискаЛимиты)[0];
					КонецЕсли;
				Иначе
					СтруктураПоискаЛимиты = Новый Структура("Валюта",мВалютаУправленческогоУчета);
					СтруктураПоискаЛимиты.Вставить("ФинансовыйПоказатель",СтрокаОборотовДляКонтроля.ФинансовыйПоказатель);
					СтрокаКонтроль = ТаблицаБюджетныйКонтроль.Строки.НайтиСтроки(СтруктураПоискаЛимиты)[0];
					Если мВалютаУправленческогоУчета <> СтрокаОборотовДляКонтроля.ВалютаОперации Тогда
						СтруктураПоискаЛимиты.Вставить("Валюта",СтрокаОборотовДляКонтроля.ВалютаОперации);
						СтрокаКонтрольВал = ТаблицаБюджетныйКонтроль.Строки.НайтиСтроки(СтруктураПоискаЛимиты)[0];
					КонецЕсли;
				КонецЕсли;
				
				ТабКонтролируемыхЗначений=Обработки.фин_КонтрольПрогнозныхТранзакций.ПроверкаКонтролируемыхЗначений(Объект,СписокЛимитов,СтрокаОборотовДляКонтроля,СтрокаОборотовДляКонтроля.ВалютаОперации,БюджетированиеПоОрганизациям,ПолныйМассивИмен,?(АктуальныйМониторинг=0,Неопределено,?(АктуальныйМониторинг=2,КонецДня(СтрокаПериодПоказатель.Период),КонецДня(СтрокаПериодПоказатель.Период))));
				
				Для Каждого СтрокаРезультатКонтроля Из ТабКонтролируемыхЗначений Цикл
					Сценарий = СтрокаРезультатКонтроля.КонтролирующийСценарий;
					Идентификатор = Идентификатор + 1;
					ОписаниеКонтроля = "";
					Для Каждого ИмяРазреза Из ПолныйМассивИмен Цикл
						Если ТабКонтролируемыхЗначений.Колонки.Найти(ИмяРазреза)=Неопределено ИЛИ НЕ ЗначениеЗаполнено(СтрокаРезультатКонтроля[ИмяРазреза]) Тогда
							Продолжить;
						КонецЕсли;
						Если ЗначениеЗаполнено(СтрокаРезультатКонтроля[ИмяРазреза]) Тогда
							ОписаниеКонтроля = ОписаниеКонтроля + ?(ОписаниеКонтроля="","",Символы.ПС)+фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(Перечисления.фин_ФактическиеПоказателиБюджетирования[ИмяРазреза])+": "+СтрокаРезультатКонтроля[ИмяРазреза];
						КонецЕсли;
					КонецЦикла;
					// контроль по лимиту
					СтрокаКонтрольПоЛимиту = ТаблицаБюджетныйКонтроль.Строки.Добавить();
					СтрокаКонтрольПоЛимиту.ВидКонтроля = "По лимиту, "+Сценарий.Валюта+?(ОписаниеКонтроля="",""," ("+ОписаниеКонтроля+")");
					// 1 - стартовая сумма и сумма исполнения
					СтрокаКонтрольПоЛимиту.ВсегоРазрешено 	= СтрокаРезультатКонтроля.СуммаКонтроль;
					СтрокаКонтрольПоЛимиту.Исполнено 		= СтрокаРезультатКонтроля.СуммаСценарияИсполнение;
					СтрокаКонтрольПоЛимиту.Идентификатор 	= Идентификатор;
					СтрокаКонтрольПоЛимиту.Сценарий 		= Сценарий;
					СтрокаКонтрольПоЛимиту.ФинансовыйПоказатель = СтрокаОборотовДляКонтроля.ФинансовыйПоказатель;
					СтрокаКонтрольПоЛимиту.Период 			= СтрокаОборотовДляКонтроля.Период;
					СтрокаКонтрольПоЛимиту.Сценарий 		= Сценарий;
					СтрокаКонтрольПоЛимиту.Валюта 			= ?(Сценарий=Неопределено,"",Сценарий.Валюта);
					Для Каждого ЭлементРазрез Из Объект.СписокРазрезовКонтроля Цикл
						Если Объект.СписокПолейСНесколькимиЗначениями.НайтиПоЗначению(ЭлементРазрез.Значение)<>Неопределено Тогда
							СтрокаКонтрольПоЛимиту[ЭлементРазрез.Значение]=СтрокаОборотовДляКонтроля[ЭлементРазрез.Значение];
						КонецЕсли;
					КонецЦикла;
					СтруктураПоискаИдентичных = Новый Структура("ФинансовыйПоказатель");
					Для Каждого ЭлементРазрез Из Объект.СписокРазрезовКонтроля Цикл
						Если ТабКонтролируемыхЗначений.Колонки.Найти(ЭлементРазрез.Значение)<>Неопределено И ЗначениеЗаполнено(СтрокаРезультатКонтроля[ЭлементРазрез.Значение]) Тогда
							СтруктураПоискаИдентичных.Вставить(ЭлементРазрез.Значение);
						КонецЕсли;
					КонецЦикла;
					ЗаполнитьЗначенияСвойств(СтруктураПоискаИдентичных,СтрокаРезультатКонтроля);
					СуммыАналогичныхСтрок = 0;
					Для Каждого АналогичнаяСтрока Из ТаблицаОборотовДокументаДляКонтроля.НайтиСтроки(СтруктураПоискаИдентичных) Цикл
						Если АналогичнаяСтрока<> СтрокаОборотовДляКонтроля И АналогичнаяСтрока.Период=СтрокаОборотовДляКонтроля.Период И фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(АналогичнаяСтрока.Период,Сценарий)=фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(СтрокаОборотовДляКонтроля.Период,Сценарий) Тогда
							Если АналогичнаяСтрока.ВалютаОперации = мВалютаУправленческогоУчета Тогда
								СуммаУпр 	= АналогичнаяСтрока.Сумма;
							Иначе
								КурсСтроки 	= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(АналогичнаяСтрока.ВалютаОперации,АналогичнаяСтрока.Период);
								СуммаУпр 	= фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(АналогичнаяСтрока.Сумма,АналогичнаяСтрока.ВалютаОперации,мВалютаУправленческогоУчета,КурсДокумента,КурсСтроки.Курс,КратностьДокумента,КурсСтроки.Кратность);
							КонецЕсли;
							СуммыАналогичныхСтрок = СуммыАналогичныхСтрок + СуммаУпр;
						КонецЕсли;
					КонецЦикла;
					Для Каждого АналогичнаяСтрока Из ТаблицаВыполненияКонтроля.НайтиСтроки(СтруктураПоискаИдентичных) Цикл
						Если АналогичнаяСтрока<> СтрокаОборотовДляКонтроля И АналогичнаяСтрока.Период<СтрокаОборотовДляКонтроля.Период И фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(АналогичнаяСтрока.Период,Сценарий)=фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(СтрокаОборотовДляКонтроля.Период,Сценарий) Тогда
							Если АналогичнаяСтрока.Валюта = мВалютаУправленческогоУчета Тогда
								СуммаУпр 	= АналогичнаяСтрока.Сумма;
							Иначе
								КурсСтроки 	= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(АналогичнаяСтрока.Валюта,АналогичнаяСтрока.Период);
								СуммаУпр 	= фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(АналогичнаяСтрока.Сумма,АналогичнаяСтрока.Валюта,мВалютаУправленческогоУчета,КурсДокумента,КурсСтроки.Курс,КратностьДокумента,КурсСтроки.Кратность);
							КонецЕсли;
							СуммыАналогичныхСтрок = СуммыАналогичныхСтрок + СуммаУпр;
						КонецЕсли;
					КонецЦикла;

					Если мВалютаУправленческогоУчета <> СтрокаОборотовДляКонтроля.ВалютаОперации Тогда
						КурсСтроки 					= фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(СтрокаОборотовДляКонтроля.ВалютаОперации,ТаблицаОборотовДокументаДляКонтроля.Период);
						СуммыАналогичныхСтрокВал 	= фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(СуммыАналогичныхСтрокВал,СтрокаОборотовДляКонтроля.ВалютаОперации,мВалютаУправленческогоУчета,КурсДокумента,КурсСтроки.Курс,КратностьДокумента,КурсСтроки.Кратность);
					КонецЕсли;
					// 2 - неисполненный остаток по текущей заявке                   //!!!
					Если мВалютаУправленческогоУчета = Сценарий.Валюта Тогда
						СтрокаКонтрольПоЛимиту.КИсполнениюПоТекущейЗаявке = СтрокаКонтроль.КИсполнениюПоТекущейСтрокеЗаявки + СуммыАналогичныхСтрок; 
						СтрокаКонтрольПоЛимиту.КИсполнениюПоТекущейСтрокеЗаявки = СтрокаКонтроль.КИсполнениюПоТекущейСтрокеЗаявки; 
					//ИначеЕсли СтрокаРезультатКонтроля.Валюта = Сценарий.Валюта Тогда
					//	СтрокаКонтрольПоЛимиту.КИсполнениюПоТекущейЗаявке = СтрокаКонтрольВал.КИсполнениюПоТекущейСтрокеЗаявки + СуммыАналогичныхСтрок; 
					//	СтрокаКонтрольПоЛимиту.КИсполнениюПоТекущейСтрокеЗаявки = СтрокаКонтрольВал.КИсполнениюПоТекущейСтрокеЗаявки; 
					ИначеЕсли мВалютаУправленческогоУчета = Сценарий.Валюта Тогда
						СтрокаКонтрольПоЛимиту.КИсполнениюПоТекущейЗаявке = СтрокаКонтроль.КИсполнениюПоТекущейСтрокеЗаявки + СуммыАналогичныхСтрок; 
						СтрокаКонтрольПоЛимиту.КИсполнениюПоТекущейСтрокеЗаявки = СтрокаКонтроль.КИсполнениюПоТекущейСтрокеЗаявки; 
					ИначеЕсли СтрокаКонтрольВал<>Неопределено Тогда	
						КИсполнениюПоТекущейЗаявке = СтрокаКонтрольВал.КИсполнениюПоТекущейСтрокеЗаявки + СуммыАналогичныхСтрок;
						КурсСценария = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(Сценарий.Валюта,СтрокаПериодПоказатель.Период);
						СтрокаКонтрольПоЛимиту.КИсполнениюПоТекущейЗаявке = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(КИсполнениюПоТекущейЗаявке,СтрокаРезультатКонтроля.Валюта,Сценарий.Валюта,КурсДокумента,КурсСценария.Курс,КратностьДокумента,КурсСценария.Кратность); 
						
						КИсполнениюПоТекущейСтрокеЗаявки = СтрокаКонтрольВал.КИсполнениюПоТекущейСтрокеЗаявки;
						КурсСценария = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(Сценарий.Валюта,СтрокаПериодПоказатель.Период);
						СтрокаКонтрольПоЛимиту.КИсполнениюПоТекущейСтрокеЗаявки = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(КИсполнениюПоТекущейСтрокеЗаявки,СтрокаРезультатКонтроля.Валюта,Сценарий.Валюта,КурсДокумента,КурсСценария.Курс,КратностьДокумента,КурсСценария.Кратность) 
					Иначе
						КИсполнениюПоТекущейЗаявке = СтрокаКонтроль.КИсполнениюПоТекущейСтрокеЗаявки + СуммыАналогичныхСтрок;
						КурсУпр = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(мВалютаУправленческогоУчета,СтрокаПериодПоказатель.Период);
						КурсСценария = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(Сценарий.Валюта,СтрокаПериодПоказатель.Период);
						СтрокаКонтрольПоЛимиту.КИсполнениюПоТекущейЗаявке = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(КИсполнениюПоТекущейЗаявке,мВалютаУправленческогоУчета,Сценарий.Валюта,КурсУпр.Курс,КурсСценария.Курс,КурсУпр.Кратность,КурсСценария.Кратность); 
						
						КИсполнениюПоТекущейСтрокеЗаявки = СтрокаКонтроль.КИсполнениюПоТекущейСтрокеЗаявки;
						КурсУпр = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(мВалютаУправленческогоУчета,СтрокаПериодПоказатель.Период);
						КурсСценария = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(Сценарий.Валюта,СтрокаПериодПоказатель.Период);
						СтрокаКонтрольПоЛимиту.КИсполнениюПоТекущейСтрокеЗаявки = фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(КИсполнениюПоТекущейСтрокеЗаявки,мВалютаУправленческогоУчета,Сценарий.Валюта,КурсУпр.Курс,КурсСценария.Курс,КурсУпр.Кратность,КурсСценария.Кратность) 
					КонецЕсли;
					
					// 3 - получение остатков по прочим заявкам
					КИсполнениюПоПрочимЗаявкам = 0;
					
				    МассивЗаявок = Новый Массив;
					Если Объект.РегистрНакопления<>"" Тогда
					Для Каждого ИмяРазреза Из ПолныйМассивИмен Цикл
						Если ТабКонтролируемыхЗначений.Колонки.Найти(ИмяРазреза)=Неопределено ИЛИ НЕ ЗначениеЗаполнено(СтрокаРезультатКонтроля[ИмяРазреза]) Тогда
							Продолжить;
						КонецЕсли;
						Если Найти(ИмяРазреза,"Разрез")<>0 Тогда
							ПутьРазреза = "ДополнительныеРазрезы."+ИмяРазреза;
						Иначе 
							ПутьРазреза = ИмяРазреза;
						КонецЕсли;
						ТекстУсловие= ТекстУсловие+"
						|				И "+ПутьРазреза+" =&"+ИмяРазреза;
						Запрос.УстановитьПараметр(ИмяРазреза,СтрокаРезультатКонтроля[ИмяРазреза]);
					КонецЦикла;

						Запрос.Текст = 
							"ВЫБРАТЬ
							|	БюджетныеДанные."+Объект.ИзмерениеРегистраДокумент+" КАК ПрогнознаяТранзакция,
							|	БюджетныеДанные.Валюта КАК Валюта,
							|	БюджетныеДанные.ВалютнаяСумма"+?(Объект.ВидРегистра="Остатки","Остаток","Оборот")+" КАК ВалютнаяСуммаОстаток,
				            |	БюджетныеДанные.СуммаУпр"+?(Объект.ВидРегистра="Остатки","Остаток","Оборот")+" КАК КИсполнениюПоПрочимЗаявкам
							|ИЗ
							|	РегистрНакопления."+Объект.РегистрНакопления+"."+Объект.ВидРегистра+"(
							|			"+?(АктуальныйМониторинг=0 ИЛИ Объект.РегистрНакопления="фин_ПрогнозИсполненияБюджетов","","&ДатаРасхода")+","+?(Объект.ВидРегистра="Остатки","",",,")+"
							|			"+?(Объект.РегистрНакопления="фин_ПрогнозИсполненияБюджетов","ИСТИНА ","Сценарий = &Сценарий ")+?(ЗначениеЗаполнено(Объект.ИзмерениеРегистраДокумент),"И "+Объект.ИзмерениеРегистраДокумент+" <> &Ссылка","")+"
							|				И ФинансовыйПоказатель = &ФинансовыйПоказатель "+?(Объект.РегистрНакопления="фин_ПрогнозИсполненияБюджетов"," И ПериодПланирования<=&ДатаРасхода","")+"
							|				И (Организация=ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ИЛИ Организация=&Организация) "+ТекстУсловие+") КАК БюджетныеДанные
							| ГДЕ БюджетныеДанные.ВалютнаяСумма"+?(Объект.ВидРегистра="Остатки","Остаток","Оборот")+">0
							|ИТОГИ
							| 	СУММА(КИсполнениюПоПрочимЗаявкам),СУММА(ВалютнаяСуммаОстаток)
							|
							|ПО ПрогнознаяТранзакция";
						
						Результат = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						КурсСцен = фин_ОбщегоНазначенияСервер.ПолучитьКурсВалюты(Сценарий.Валюта,СтрокаПериодПоказатель.Период);
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						МассивЗаявок.Добавить(ВыборкаДетальныеЗаписи.ПрогнознаяТранзакция);
						// пересчитаем в валюту документа
						Если мВалютаУправленческогоУчета <> Сценарий.Валюта Тогда
							ВыборкаВалюты = ВыборкаДетальныеЗаписи.Выбрать();
							Пока ВыборкаВалюты.Следующий() Цикл
								Если ВыборкаВалюты.Валюта <> Сценарий.Валюта Тогда
									КИсполнениюПоПрочимЗаявкам = КИсполнениюПоПрочимЗаявкам + фин_ОбщегоНазначенияКлиентСервер.ПересчитатьИзВалютыВВалюту(ВыборкаДетальныеЗаписи.КИсполнениюПоПрочимЗаявкам,мВалютаУправленческогоУчета,Сценарий.Валюта,КурсУпр.Курс,КурсСцен.Курс,КурсУпр.Кратность,КурсСцен.Кратность);
								Иначе
									КИсполнениюПоПрочимЗаявкам = КИсполнениюПоПрочимЗаявкам + ВыборкаДетальныеЗаписи.ВалютнаяСуммаОстаток;
								КонецЕсли;

							КонецЦикла;
						Иначе
							КИсполнениюПоПрочимЗаявкам = КИсполнениюПоПрочимЗаявкам + ВыборкаДетальныеЗаписи.КИсполнениюПоПрочимЗаявкам;
						КонецЕсли;
					КонецЦикла;
					КонецЕсли;
					СтрокаКонтрольПоЛимиту.КИсполнениюПоПрочимЗаявкам = КИсполнениюПоПрочимЗаявкам;
	  				СоответствиеРасшифровка.Вставить(Идентификатор,МассивЗаявок);
				КонецЦикла;
				
				// 4 - расчет контрольных сумм
				
				Для Каждого мСтрокаКонтроля Из ТаблицаБюджетныйКонтроль.Строки Цикл
					мСтрокаКонтроля.Остаток = мСтрокаКонтроля.ВсегоРазрешено - мСтрокаКонтроля.Исполнено - мСтрокаКонтроля.КИсполнениюПоПрочимЗаявкам;
					мСтрокаКонтроля.ОстатокСУчетомЗаявки = мСтрокаКонтроля.Остаток - мСтрокаКонтроля.КИсполнениюПоТекущейЗаявке;
					мСтрокаКонтроля.ОстатокСУчетомТекущейСтрокиЗаявки = мСтрокаКонтроля.Остаток - мСтрокаКонтроля.КИсполнениюПоТекущейСтрокеЗаявки;
				КонецЦикла;

			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
		// перегруппируем строки по проектам
		Если ПоНесколькимРазрезам Тогда
			СтрокаКопированияСвертки = "ФинансовыйПоказатель,Период,Валюта";
			СтруктураПоиска = Новый Структура("ФинансовыйПоказатель,Период,Валюта");
			Для Каждого ЭлементРазрез Из Объект.СписокРазрезовКонтроля Цикл
				Если Объект.СписокПолейСНесколькимиЗначениями.НайтиПоЗначению(ЭлементРазрез.Значение)<>Неопределено Тогда
					СтрокаКопированияСвертки = СтрокаКопированияСвертки + ?(СтрокаКопированияСвертки="","",",")+ЭлементРазрез.Значение;
					СтруктураПоиска.Вставить(ЭлементРазрез.Значение);
				КонецЕсли;
			КонецЦикла;
			
			СписокРазрезов = ТаблицаВыполненияКонтроля.Скопировать(,СтрокаКопированияСвертки);
			СписокРазрезов.Свернуть(СтрокаКопированияСвертки);
			Для Каждого СтрокаРазрезов Из СписокРазрезов Цикл
				ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаРазрезов);
				СтрокиДанногоРазреза = ТаблицаБюджетныйКонтроль.Строки.НайтиСтроки(СтруктураПоиска);
				НоваяСтрока = ТаблицаБюджетныйКонтроль.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураПоиска);
				Для Каждого СтрокаДляВложения Из СтрокиДанногоРазреза Цикл
					ВложеннаяСтрока = НоваяСтрока.Строки.Добавить();
					ЗаполнитьЗначенияСвойств(ВложеннаяСтрока,СтрокаДляВложения);
					Для Каждого СтрокаПроектаДочерняя Из СтрокаДляВложения.Строки Цикл
						ВложеннаяДочерняяСтрока = ВложеннаяСтрока.Строки.Добавить();
						ЗаполнитьЗначенияСвойств(ВложеннаяДочерняяСтрока,СтрокаПроектаДочерняя);
					КонецЦикла;
					ТаблицаБюджетныйКонтроль.Строки.Удалить(СтрокаДляВложения);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
КонецПроцедуры

#КонецЕсли