
&НаКлиенте
Процедура ОткрытьСправочник(Элемент)
	ИмяФормыОбъекта = "Справочник."+ОтсечьЦифры(СтрЗаменить(Элемент.Имя,"Декорация_",""))+".ФормаСписка";
	Попытка	
		ОткрытьФорму(ИмяФормыОбъекта,,,Новый УникальныйИдентификатор);
	Исключение
		ПоказатьПредупреждение(,ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Элемент)
	ИмяФормыОбъекта = "Документ."+ОтсечьЦифры(СтрЗаменить(Элемент.Имя,"Декорация_",""))+".ФормаСписка";
	Попытка	
		ОткрытьФорму(ИмяФормыОбъекта,,,Новый УникальныйИдентификатор);
	Исключение
		ПоказатьПредупреждение(,ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРегистрСведений(Элемент)
	ИмяФормыОбъекта = "РегистрСведений."+ОтсечьЦифры(СтрЗаменить(Элемент.Имя,"Декорация_",""))+".ФормаСписка";
	Попытка	
		ОткрытьФорму(ИмяФормыОбъекта,,,Новый УникальныйИдентификатор);
	Исключение
		ПоказатьПредупреждение(,ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОбработку(Элемент)
	ИмяФормыОбъекта = "Обработка."+ОтсечьЦифры(СтрЗаменить(Элемент.Имя,"Декорация_",""))+".Форма";
	Попытка	
		ОткрытьФорму(ИмяФормыОбъекта,,,Новый УникальныйИдентификатор);
	Исключение
		ПоказатьПредупреждение(,ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Функция ОтсечьЦифры(ИсходнаяСтрока)

	ФинальнаяСтрока = ИсходнаяСтрока;
	
	КодСимвола = КодСимвола(Прав(ИсходнаяСтрока, 1));
	
	Если (КодСимвола >= 48 И КодСимвола <= 57) Тогда
		ФинальнаяСтрока = Лев(ИсходнаяСтрока, СтрДлина(ИсходнаяСтрока) - 1);
	КонецЕсли; 
	
	КодСимвола = КодСимвола(Прав(ФинальнаяСтрока, 1));
	
	Если (КодСимвола >= 48 И КодСимвола <= 57) Тогда
		ФинальнаяСтрока = Лев(ФинальнаяСтрока, СтрДлина(ФинальнаяСтрока) - 1);
	КонецЕсли; 
	
	МассивПереопределяемых = Новый Массив;
	МассивПереопределяемых.Добавить("УстановкаДолейРаспределенияПоПроектам");
	МассивПереопределяемых.Добавить("Проекты");
	МассивПереопределяемых.Добавить("ВидыРаспределенияПоПроектам");
	МассивПереопределяемых.Добавить("Подразделения");
	МассивПереопределяемых.Добавить("СценарииПланирования");
	МассивПереопределяемых.Добавить("ЯзыкиНародовМира");
	Если МассивПереопределяемых.Найти(ФинальнаяСтрока)<>Неопределено Тогда
		Если ФинальнаяСтрока="Проекты" Тогда
			ФинальнаяСтрока = фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПроектов();
		ИначеЕсли ФинальнаяСтрока = "Подразделения" Тогда
			ФинальнаяСтрока = фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПодразделений();
		Иначе
			ФинальнаяСтрока = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПрефиксОбщихОбъектов()+ФинальнаяСтрока;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ФинальнаяСтрока;
		
КонецФункции // ОтсечьЦифры()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнениеДереваОтчетов();
	Элементы.ФормаОткрыватьФормыВОтдельныхОкнах.Пометка = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьЗначениеПоУмолчанию("ОткрыватьПодчиненныеОкнаВОтдельномОкне")=Истина;
	ВОтдельныхОкнах = Элементы.ФормаОткрыватьФормыВОтдельныхОкнах.Пометка;
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеДереваОтчетов()
	Дерево = ДанныеФормыВЗначение(ДеревоОтчетов,Тип("ДеревоЗначений"));
	Дерево.Строки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_ВидыОтчетовПоБюджетам.Ссылка
		|ИЗ
		|	Справочник.фин_ВидыОтчетовПоБюджетам КАК фин_ВидыОтчетовПоБюджетам
		|ГДЕ
		|	фин_ВидыОтчетовПоБюджетам.ЭтоГруппа
		|	И фин_ВидыОтчетовПоБюджетам.Предопределенный
		|
		|УПОРЯДОЧИТЬ ПО
		|	фин_ВидыОтчетовПоБюджетам.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Ссылка = Справочники.фин_ВидыОтчетовПоБюджетам.УправленческийПланСчетов И НЕ ПолучитьФункциональнуюОпцию("фин_УчетПоПлануСчетовБюджетирования") Тогда
			Продолжить;
		КонецЕсли;
		СтрокаРодитель = Дерево.Строки.Добавить();
		СтрокаРодитель.ЭтоГруппа = Истина;
		СтрокаРодитель.ВидОтчета = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_ВидыОтчетовПоБюджетам.Ссылка,
		|	фин_ВидыОтчетовПоБюджетам.Родитель
		|ИЗ
		|	Справочник.фин_ВидыОтчетовПоБюджетам КАК фин_ВидыОтчетовПоБюджетам
		|ГДЕ
		|	НЕ фин_ВидыОтчетовПоБюджетам.ЭтоГруппа
		|	И фин_ВидыОтчетовПоБюджетам.Предопределенный
		|
		|УПОРЯДОЧИТЬ ПО
		|	фин_ВидыОтчетовПоБюджетам.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокиГруппы = Дерево.Строки.НайтиСтроки(Новый Структура("ВидОтчета",ВыборкаДетальныеЗаписи.Родитель));
		Если СтрокиГруппы.Количество()=0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаРодитель = СтрокиГруппы[0];
		СтрокаОтчет = СтрокаРодитель.Строки.Добавить();
		СтрокаОтчет.ВидОтчета = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_НастройкиОтчетовПоБюджетам.Владелец КАК ВидОтчета,
		|	фин_НастройкиОтчетовПоБюджетам.Ссылка КАК Настройка,
		|	фин_НастройкиОтчетовПоБюджетам.ВидНастройки
		|ИЗ
		|	Справочник.фин_НастройкиОтчетовПоБюджетам КАК фин_НастройкиОтчетовПоБюджетам
		|ГДЕ
		|	фин_НастройкиОтчетовПоБюджетам.ПометкаУдаления = ЛОЖЬ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокиОтчета = Дерево.Строки.НайтиСтроки(Новый Структура("ВидОтчета",ВыборкаДетальныеЗаписи.ВидОтчета),Истина);
		Если СтрокиОтчета.Количество()=0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаОтчет = СтрокиОтчета[0];
		СтрокаНастройка = СтрокаОтчет.Строки.Добавить();
		СтрокаНастройка.ВидОтчета 		= ВыборкаДетальныеЗаписи.ВидОтчета;
		СтрокаНастройка.Настройка 		= ВыборкаДетальныеЗаписи.Настройка;
		СтрокаНастройка.ЭтоНастройка 	= Истина;
		СтрокаНастройка.Картинка 		= ?(ВыборкаДетальныеЗаписи.ВидНастройки=Перечисления.фин_ВидыНастроекОтчета.ПерсональнаяНастройка,0,1);
	КонецЦикла;
	
	
	ЗначениеВДанныеФормы(Дерево,ДеревоОтчетов);
КонецПроцедуры

&НаКлиенте
Процедура Декорация_Группа(Элемент)
	ИмяСтраницы = СтрЗаменить(Элемент.Имя,"Декорация_","");
	Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы[ИмяСтраницы];
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	ТекущиеДанные = Элементы.ДеревоОтчетов.ТекущиеДанные;
	Если ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	ИначеЕсли ТекущиеДанные.ЭтоНастройка Тогда
		ОбработкаКоманды(ТекущиеДанные.Настройка);
	Иначе	
		ОбработкаКоманды(ТекущиеДанные.ВидОтчета);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды)
	//Вставить содержимое обработчика.
	ИмяОтчета = ИмяОтчета(ПараметрКоманды);
	Если ИмяОтчета="" Тогда
		Возврат;
	КонецЕсли;
	ПараметрыФормы = НастройкиОтчета(ПараметрКоманды);
	ОткрытьФорму("Отчет."+ИмяОтчета+".Форма", ПараметрыФормы, ,Новый УникальныйИдентификатор,?(ВОтдельныхОкнах,ВариантОткрытияОкна.ОтдельноеОкно,Окно));
КонецПроцедуры

&НаСервере
Функция ИмяОтчета(Настройка)
	Если ТипЗнч(Настройка)=Тип("СправочникСсылка.фин_ВидыОтчетовПоБюджетам") Тогда
		Возврат Справочники.фин_ВидыОтчетовПоБюджетам.ПолучитьИмяМетаданныхОтчета(Настройка);	
	Иначе
		Возврат Справочники.фин_ВидыОтчетовПоБюджетам.ПолучитьИмяМетаданныхОтчета(Настройка.Владелец);	
	КонецЕсли;
КонецФункции


&НаКлиенте
Функция НастройкиОтчета(Настройка)
	Если ТипЗнч(Настройка)=Тип("СправочникСсылка.фин_ВидыОтчетовПоБюджетам") Тогда
		Возврат Новый Структура;	
	КонецЕсли;
	СтруктураНастроек = Новый Структура("НеВосстанавливатьНастройки,СформироватьПриОткрытии,ШаблонОтчета",Истина,Истина,Настройка);

	Возврат СтруктураНастроек;	
КонецФункции

&НаКлиенте
Процедура ДеревоОтчетовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.ДеревоОтчетов.ТекущиеДанные;
	Если ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	ИначеЕсли ТекущиеДанные.ЭтоНастройка Тогда
		ПоказатьЗначение(,ТекущиеДанные.Настройка);
	Иначе	
		ОбработкаКоманды(ТекущиеДанные.ВидОтчета);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ЗаполнениеДереваОтчетов();
	Для Каждого ЭлементДерева Из ДеревоОтчетов.ПолучитьЭлементы() Цикл
		Элементы.ДеревоОтчетов.Развернуть(ЭлементДерева.ПолучитьИдентификатор(),Истина);	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройку(Команда)
	ТекущиеДанные = Элементы.ДеревоОтчетов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено ИЛИ ТекущиеДанные.ЭтоНастройка = Ложь Тогда
		ПоказатьПредупреждение(,"Не определена копируемая настройка!");
	Иначе
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗакрытиеНовойНастройки",ЭтотОбъект);
		ОткрытьФорму("Справочник.фин_НастройкиОтчетовПоБюджетам.ФормаОбъекта",Новый Структура("ЗначениеКопирования",ТекущиеДанные.Настройка),ЭтотОбъект,?(ВОтдельныхОкнах,ВариантОткрытияОкна.ОтдельноеОкно,Окно),,,ОписаниеОповещения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеНовойНастройки(РезультатЗакрытия,ДополнительныеПараметры) Экспорт
	ЗаполнениеДереваОтчетов();
	Для Каждого ЭлементДерева Из ДеревоОтчетов.ПолучитьЭлементы() Цикл
		Элементы.ДеревоОтчетов.Развернуть(ЭлементДерева.ПолучитьИдентификатор(),Истина);	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовуюНастройку(Команда)
	ТекущиеДанные = Элементы.ДеревоОтчетов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.ВидОтчета) Тогда
		ПоказатьПредупреждение(,"Не определен вид отчета для создания настройки!");
	ИначеЕсли ДоступноСозданиеНастроек(ТекущиеДанные.ВидОтчета)=Ложь Тогда
		ПоказатьПредупреждение(,"Не доступно создание настроек для указанного вида отчетов!");
	Иначе
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗакрытиеНовойНастройки",ЭтотОбъект);
		ОткрытьФорму("Справочник.фин_НастройкиОтчетовПоБюджетам.ФормаОбъекта",Новый Структура("ЗначенияЗаполнения",Новый Структура("Владелец",ТекущиеДанные.ВидОтчета)),ЭтотОбъект,?(ВОтдельныхОкнах,ВариантОткрытияОкна.ОтдельноеОкно,Окно),,,ОписаниеОповещения);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДоступноСозданиеНастроек(ВидОтчета)
	Возврат Справочники.фин_ВидыОтчетовПоБюджетам.ДоступноСозданиеНастроек(ВидОтчета);	
КонецФункции



&НаСервере
Функция ИмяВидаОбъектовМетаданных(ИмяЭлемента)
	Возврат СтрЗаменить(Элементы.Найти(ИмяЭлемента).ПолучитьДействие("Нажатие"),"Открыть","");	
КонецФункции

&НаКлиенте
Процедура ОткрытьВОтдельномОкне(Команда)
	ИмяЭлемента = ТекущийЭлемент.Имя;
	ИмяВидаОбъектов = ИмяВидаОбъектовМетаданных(ИмяЭлемента);
	ИмяФормыОбъекта = ИмяВидаОбъектов+"."+ОтсечьЦифры(СтрЗаменить(ТекущийЭлемент.Имя,"Декорация_",""))+".ФормаСписка";
	Попытка	
		ОткрытьФорму(ИмяФормыОбъекта,,,Новый УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно);
	Исключение
		ПоказатьПредупреждение(,ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ОткрыватьФормыВОтдельныхОкнах(Команда)
	Элементы.ФормаОткрыватьФормыВОтдельныхОкнах.Пометка = НЕ Элементы.ФормаОткрыватьФормыВОтдельныхОкнах.Пометка;
	ВОтдельныхОкнах = Элементы.ФормаОткрыватьФормыВОтдельныхОкнах.Пометка;
КонецПроцедуры
