Перем мВалютаРегламентированногоУчета;
Перем мОтображатьСтруктурныеПодразделения Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Производит автозаполнение табличной части РКО
//
Процедура Автозаполнение() Экспорт
		
	ТекстЗапрос = 	
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗарплатаКВыплатеОрганизаций.Физлицо,
	|	ЕСТЬNULL(ЕСТЬNULL(РасходныйКассовыйОрдер.Ссылка, РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка), &ПустойРКО) КАК РКО,
	|	(НЕ ЕСТЬNULL(ЕСТЬNULL(РасходныйКассовыйОрдер.Проведен, РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка.Проведен), ЛОЖЬ)) КАК Отметка,
	|	СУММА(ЗарплатаКВыплатеОрганизаций.Сумма + ЗарплатаКВыплатеОрганизаций.ДепонированнаяСумма) КАК Сумма
	|ИЗ
	|	Документ.ЗарплатаКВыплатеОрганизаций.Зарплата КАК ЗарплатаКВыплатеОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|		ПО ЗарплатаКВыплатеОрганизаций.Ссылка = РасходныйКассовыйОрдер.ПлатежнаяВедомость
	|			И ЗарплатаКВыплатеОрганизаций.Физлицо = РасходныйКассовыйОрдер.Контрагент
	|			И НЕ РасходныйКассовыйОрдер.ПометкаУдаления
	|			И (РасходныйКассовыйОрдер.ВидОперации = &ВыплатаЗаработнойПлатыРаботнику)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер.ВыплатаЗаработнойПлаты КАК РасходныйКассовыйОрдерВыплатаЗаработнойПлаты
	|		ПО ЗарплатаКВыплатеОрганизаций.Ссылка = РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ведомость
	|			И (РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка.ВидОперации = &ВыплатаЗаработнойПлатыПоВедомостям)
	|			И НЕ РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка.ПометкаУдаления
	|ГДЕ
	|	ЗарплатаКВыплатеОрганизаций.ВыплаченностьЗарплаты = &Выплачено
	|	И ЗарплатаКВыплатеОрганизаций.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарплатаКВыплатеОрганизаций.Физлицо,
	|	РасходныйКассовыйОрдер.Ссылка,
	|	РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗарплатаКВыплатеОрганизаций.Физлицо.Наименование
	|";	
	
	Запрос = Новый Запрос(ТекстЗапрос);
	Запрос.УстановитьПараметр("Ссылка",ПлатежнаяВедомость);
	Запрос.УстановитьПараметр("ПустойРКО",Документы.РасходныйКассовыйОрдер.ПустаяСсылка());
	Запрос.УстановитьПараметр("Выплачено",Перечисления.ВыплаченностьЗарплаты.Выплачено);
	Запрос.УстановитьПараметр("ВыплатаЗаработнойПлатыРаботнику",Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику);
	Запрос.УстановитьПараметр("ВыплатаЗаработнойПлатыПоВедомостям",Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыПоВедомостям);
	         
	РКО.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // Автозаполнение()

// Создает документы РКО по отмеченным строкам
//
// Параметры
//  нет
//
Процедура СоздатьРКО() Экспорт

	Основание = "Платежная ведомость №" + ПлатежнаяВедомость.Номер + " от " + Формат(ПлатежнаяВедомость.Дата, "ДФ=дд.ММ.гггг");
	
	Для Каждого СтрокаТаблицы Из РКО Цикл
		
		Если СтрокаТаблицы.Отметка И НЕ ЗначениеЗаполнено(СтрокаТаблицы.РКО) Тогда
			
			ДокументРКО = Документы.РасходныйКассовыйОрдер.СоздатьДокумент();
			ДокументРКО.Дата		 		= ДатаФормирования;
			ДокументРКО.ВидОперации			= Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику;
			ДокументРКО.Контрагент			= СтрокаТаблицы.ФизЛицо;
			ДокументРКО.ПодставитьРеквизитыФизЛица(СтрокаТаблицы.ФизЛицо);
			ДокументРКО.ПлатежнаяВедомость	= ПлатежнаяВедомость;
			ДокументРКО.Основание			= Основание;
			ДокументРКО.Организация			= Организация;
			ДокументРКО.СтруктурноеПодразделениеОтправитель			= СтруктурноеПодразделение;
			ДокументРКО.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
			ДокументРКО.СчетКасса			= ПланыСчетов.Типовой.ДенежныеСредстваВКассе;
			ДокументРКО.СуммаДокумента		= СтрокаТаблицы.Сумма;
			ДокументРКО.Касса				= Касса;
			ДокументРКО.Ответственный		= Ответственный;
			ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ДокументРКО,глЗначениеПеременной("глТекущийПользователь"));
			#Если Клиент Тогда
			УправлениеДенежнымиСредствами.ЗаполнитьРеквизитыРасчетногоДокумента(ДокументРКО, глТекущийПользователь, мВалютаРегламентированногоУчета, ДокументРКО.РасшифровкаПлатежа);
			ДокументРКО.ВалютаДокумента		= мВалютаРегламентированногоУчета; // зарплата только в валюте регл. учета
			ДокументРКО.УстановитьНовыйНомер();
			#КонецЕсли 
			ДокументРКО.Записать();
			
			СтрокаТаблицы.РКО	= ДокументРКО.Ссылка;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // СоздатьРКО()

#Если Клиент Тогда

// Печатает документы РКО по отмеченным строкам
//
// Параметры
//  нет
//
Процедура ПечатьРКО() Экспорт

    СписокНапечатанныхРКО = Новый СписокЗначений;
	ТабДокумент = Новый ТабличныйДокумент;
	КоличествоРКО = 0;
	
	Для Каждого СтрокаТаблицы Из РКО Цикл
		
		Если СтрокаТаблицы.Отметка 
			 И ЗначениеЗаполнено(СтрокаТаблицы.РКО) 
			 И СписокНапечатанныхРКО.НайтиПоЗначению(СтрокаТаблицы.РКО) = Неопределено Тогда
			
			КоличествоРКО 	= КоличествоРКО + 1;
			ДокументРКО 	= СтрокаТаблицы.РКО.ПолучитьОбъект();
			ВремТабДокумент = ДокументРКО.ПечатьРКО();
			
			ТабДокумент.Вывести(ВремТабДокумент);
			
			// отчеркнем очередной РКО
			НизДокумента = ТабДокумент.Область(ТабДокумент.ВысотаТаблицы, 1, ТабДокумент.ВысотаТаблицы, ТабДокумент.ШиринаТаблицы);
			НизДокумента.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.РедкийПунктир);
			
			// Запомним, что такой документ уже напечатали (если встретиться еще)
			СписокНапечатанныхРКО.Добавить(СтрокаТаблицы.РКО);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если КоличествоРКО > 0 Тогда
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, , , "Выплата зарплаты расходными ордерами");
	КонецЕсли;

КонецПроцедуры // ПечатьРКО()

#КонецЕсли

// Изменяет даты у существующих документов РКО по отмеченным строкам
//
// Параметры
//  НоваяДатаДок - новое значение даты, которую надо установить
//
Процедура ИзменитьДатыРКО(НоваяДатаДок) Экспорт
	
	Для Каждого СтрокаТаблицы Из РКО Цикл
		
		Если СтрокаТаблицы.Отметка 
				И ЗначениеЗаполнено(СтрокаТаблицы.РКО) 
				И НачалоДня(СтрокаТаблицы.РКО.Дата) <> НачалоДня(НоваяДатаДок) Тогда
			
			ДокументРКО 		= СтрокаТаблицы.РКО.ПолучитьОбъект();
			ДокументРКО.Дата	= ДатаФормирования;
			
			Если ДокументРКО.Проведен Тогда
			    Попытка 
					ДокументРКО.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					Сообщить("Дата документа " + СтрокаТаблицы.РКО + " не изменена!", СтатусСообщения.Важное);
				КонецПопытки;
			Иначе
				ДокументРКО.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // ИзменитьДатыРКО()

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
мОтображатьСтруктурныеПодразделения = ОбщегоНазначения.ПолучитьПризнакОтображенияСтруктурныхПодразделенийВЗарплате();
