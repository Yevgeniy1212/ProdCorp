Перем ФормаПрогрессора;

// Проццедура выполняет установку видов субконто на счетах.
//
Процедура ПрименитьПараметры(СкладскойУчет, СуммовойУчет, Отказ = Ложь) Экспорт

	ФормаПрогрессора = ПолучитьОбщуюФорму("ФормаИндикатора");
	ФормаПрогрессора.НаименованиеОбработкиДанных = "Настройка аналитического учета ТМЗ";
	ФормаПрогрессора.ЗначениеИндикатора = 0;
	ФормаПрогрессора.СтрокаСостоянияПрогрессора  = "";
	ФормаПрогрессора.Открыть();
	
	БУ = ПланыСчетов.Типовой.Товары.ПолучитьОбъект();
	ВестиПартионныйУчетБУ = ?(БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Партии, "ВидСубконто") = Неопределено, Ложь, Истина);
	ВестиСкладскойУчетБУ  = ?(БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоТиповые.Склады, "ВидСубконто") = Неопределено, Ложь, Истина);
			
	//
	ВестиСкладскойУчетБУ 			= (СкладскойУчет);
	ВестиСуммовойУчетПоСкладамБУ 	= (СуммовойУчет);
			
	НачатьТранзакцию();

	Счета = Новый СписокЗначений();
	Счета.Добавить("ГотоваяПродукция");
	Счета.Добавить("СырьеИМатериалы");
	Счета.Добавить("Товары");
	Счета.Добавить("МонтажОборудования");
	Счета.Добавить("МатериалыПринятыеВПереработку");
	
	СчетаНУ = Новый СписокЗначений();
	СчетаНУ.Добавить("Товары");
	СчетаНУ.Добавить("ГотоваяПродукция");
	СчетаНУ.Добавить("СырьеИМатериалы");
	
	КоличествоСчетовВсего = 100;
	ОбработаноСчетов = 0;
	ФормаПрогрессора.МаксимальноеЗначение = КоличествоСчетовВсего;
	ФормаПрогрессора.СтрокаСостоянияПрогрессора = "Установка аналитики на счетах бухгалтерского учета";
	
	Для Каждого Счет Из Счета Цикл
		ПрименитьПараметрыСубконто(Счет.Значение, "Типовой", Истина,  ВестиСкладскойУчетБУ, ВестиСуммовойУчетПоСкладамБУ,,Отказ);
		ОбработаноСчетов = ОбработаноСчетов + 100/Счета.Количество();
		ФормаПрогрессора.ЗначениеИндикатора = ОбработаноСчетов;
	КонецЦикла;
	
	КоличествоСчетовВсего = 100;
	ОбработаноСчетов = 0;
	ФормаПрогрессора.МаксимальноеЗначение = КоличествоСчетовВсего;
	ФормаПрогрессора.СтрокаСостоянияПрогрессора = "Установка аналитики на счетах налогового учета";

	Для Каждого Счет Из СчетаНУ Цикл
		ПрименитьПараметрыСубконто(Счет.Значение, "Налоговый", Истина, ВестиСкладскойУчетБУ, ВестиСуммовойУчетПоСкладамБУ,,Отказ);
		ОбработаноСчетов = ОбработаноСчетов + 100/Счета.Количество();
		ФормаПрогрессора.ЗначениеИндикатора = ОбработаноСчетов;
	КонецЦикла;

	Если Отказ Тогда
		ОтменитьТранзакцию();
	Иначе
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
	Если ФормаПрогрессора.Открыта() Тогда
		ФормаПрогрессора.Закрыть();
	КонецЕсли;
	           	

КонецПроцедуры // ПрименитьПараметры()

// Устанавливает субконто "Номенклатура" и "Контрагент" у указанного счета.
//
Процедура ПрименитьПараметрыСубконто(ИмяСчета, ИмяПланаСчетов, ЕстьКоличество, Склады, Суммы, ОбработкаПодчиненных = Истина, Отказ = Ложь)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	ВидСубконто = "ВидыСубконтоТиповые";

	Попытка

		Счет  = ПланыСчетов[ИмяПланаСчетов][ИмяСчета];
		Счета = Новый СписокЗначений();
		Счета.Добавить(Счет);

		Если ОбработкаПодчиненных Тогда

			ВыборкаСчетов = ПланыСчетов[ИмяПланаСчетов].ВыбратьИерархически(Счет);
			Пока ВыборкаСчетов.Следующий() Цикл
				
				Счета.Добавить(ВыборкаСчетов.Ссылка);

			КонецЦикла;

		КонецЕсли;
				
		Для каждого Счет Из Счета Цикл

			Объект   = Счет.Значение.ПолучитьОбъект();
			КодСчета = Объект.Код;
			
			Сообщение = "";

			Субконто = Объект.ВидыСубконто.Найти(ПланыВидовХарактеристик[ВидСубконто].Склады, "ВидСубконто");

			Если Склады = Истина Тогда // Добавляем 

				Если Субконто = Неопределено Тогда

					НовыйВид = Объект.ВидыСубконто.Добавить();

					НовыйВид.ВидСубконто = ПланыВидовХарактеристик[ВидСубконто].Склады;

					Если ЕстьКоличество Тогда
						НовыйВид.Количественный = Истина;
					КонецЕсли;
						
					Сообщение = Сообщение + " установлено субконто ""Склады"",";

				КонецЕсли;

			ИначеЕсли Склады = Ложь Тогда // Удаляем

				Если Субконто <> Неопределено Тогда
					Объект.ВидыСубконто.Удалить(Субконто);
					Сообщение = Сообщение + " удалено субконто ""Склады"",";
				КонецЕсли;
					
			КонецЕсли;

			Если Склады Тогда
					
				Субконто = Объект.ВидыСубконто.Найти(ПланыВидовХарактеристик[ВидСубконто].Склады, "ВидСубконто");
				Если Субконто.Суммовой <> Суммы Тогда
					Субконто.Суммовой = Суммы;
					Сообщение = Сообщение + " у субконто ""Склады"" изменен признак суммового учета,";
				КонецЕсли;
					
			КонецЕсли;

			Если Сообщение <> "" Тогда
				Сообщение = "План счетов """ + ИмяПланаСчетов + """, счет """ +Строка(Объект) + """:" +  Сообщение;
				
				Если Прав(Сообщение, 1) = "," Тогда
					Сообщение = Лев(Сообщение, СтрДлина(Сообщение)-1);
				КонецЕсли;

				ФормаПрогрессора.НадписьСостоянияПрогрессора = Сообщение;
			КонецЕсли; 

			Объект.Записать();

		КонецЦикла;

	Исключение

		Сообщить("Счет """ + Строка(КодСчета) + """:");
		Сообщить(ОписаниеОшибки());

	КонецПопытки;

КонецПроцедуры // ПрименитьПараметрыСубконто()


