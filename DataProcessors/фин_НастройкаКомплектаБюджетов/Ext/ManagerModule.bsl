	Процедура УдалитьУжеИмеющиесяНастройкиКомплекта(ТолькоОтключениеОтКомплекта = Ложь) Экспорт
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Документ.Ссылка
		               |ИЗ
		               |	ПланВидовХарактеристик.фин_ВидыСубконтоБюджетирования КАК Документ
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.фин_НастройкаДополнительныхРазрезовБюджетирования КАК фин_НастройкаДополнительныхРазрезовБюджетирования
		               |		ПО Документ.Ссылка = фин_НастройкаДополнительныхРазрезовБюджетирования.Разрез
		               |ГДЕ
		               |	Документ.ПозицияКлассификатора <> ЗНАЧЕНИЕ(Перечисление.фин_КлассификаторРазрезовБюджетов.ПустаяСсылка)
		               |	И НЕ Документ.Предопределенный
		               |	И ЕСТЬNULL(фин_НастройкаДополнительныхРазрезовБюджетирования.ДляКомплектаБюджетов, ЛОЖЬ) = ИСТИНА";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НачатьТранзакцию();
			Если ТолькоОтключениеОтКомплекта = Ложь Тогда
				УдалитьСвязанные(Выборка.ссылка);
			КонецЕсли;
			ОбъектИБ = Выборка.ссылка.ПолучитьОбъект();
			ОбъектИБ.ПозицияКлассификатора = Перечисления.фин_КлассификаторРазрезовБюджетов.ПустаяСсылка();
			ОбъектИБ.ДополнительныеСвойства.Вставить("ВнешняяОбработка",Истина);
			ОбъектИБ.Записать();
			Если ТолькоОтключениеОтКомплекта = Ложь Тогда
				ОбъектИБ.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		КонецЦикла;
		
		Для Каждого Документ Из Метаданные.Документы Цикл
			Если Найти(Документ.Имя,"фин_")=0 Тогда
				Продолжить;
			КонецЕсли;
			Если Документ.Реквизиты.Найти("ДляКомплектаБюджетов")<>Неопределено Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	Документ.Ссылка
				|ИЗ
				|	Документ."+Документ.Имя+" КАК Документ
				|ГДЕ
				|	Документ.ДляКомплектаБюджетов";
				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					НачатьТранзакцию();
					ОбъектИБ = Выборка.ссылка.ПолучитьОбъект();
					ОбъектИБ.ДляКомплектаБюджетов = Ложь;
					ОбъектИБ.ДополнительныеСвойства.Вставить("ВнешняяОбработка",Истина);
					ОбъектИБ.Записать();
					Если ТолькоОтключениеОтКомплекта = Ложь Тогда
						ОбъектИБ.УстановитьПометкуУдаления(Истина);
					КонецЕсли;
					ЗафиксироватьТранзакцию();
				КонецЦикла;
			ИначеЕсли Документ.Реквизиты.Найти("ПозицияКлассификатора")<>Неопределено Тогда
				Реквизит = Документ.Реквизиты.Найти("ПозицияКлассификатора");
				ИмяПеречисления = "";
				Для Каждого Перечисление Из Метаданные.Перечисления Цикл
					Если Реквизит.Тип.СодержитТип(Тип("ПеречислениеСсылка."+Перечисление.Имя)) Тогда
						ИмяПеречисления = Перечисление.Имя;
					КонецЕсли;
				КонецЦикла;
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	Документ.Ссылка
				|ИЗ
				|	Документ."+Документ.Имя+" КАК Документ
				|ГДЕ
				|	Документ.ПозицияКлассификатора<>ЗНАЧЕНИЕ(Перечисление."+ИмяПеречисления+".ПустаяСсылка)";
				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					НачатьТранзакцию();
					ОбъектИБ = Выборка.ссылка.ПолучитьОбъект();
					ОбъектИБ.ПозицияКлассификатора = Перечисления[ИмяПеречисления].ПустаяСсылка();
					ОбъектИБ.ДополнительныеСвойства.Вставить("ВнешняяОбработка",Истина);
					ОбъектИБ.Записать();
					Если ТолькоОтключениеОтКомплекта = Ложь Тогда
						ОбъектИБ.УстановитьПометкуУдаления(Истина);
					КонецЕсли;
					ЗафиксироватьТранзакцию();
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		// документы Бюджет
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Документ.Ссылка
		               |ИЗ
		               |	Документ.фин_Бюджет КАК Документ
		               |ГДЕ
		               |	Документ.ФормируемыйБюджет.ПозицияКлассификатора <> ЗНАЧЕНИЕ(Перечисление.фин_КлассификаторБюджетов.ПустаяСсылка)";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НачатьТранзакцию();
			ОбъектИБ = Выборка.ссылка.ПолучитьОбъект();
			ОбъектИБ.ДополнительныеСвойства.Вставить("ВнешняяОбработка",Истина);
			Если ТолькоОтключениеОтКомплекта = Ложь Тогда
				ОбъектИБ.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		КонецЦикла;
		
		// документы фин_ВводЗначенийРасчетныхПоказателей
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Документ.Ссылка
		               |ИЗ
		               |	Документ.фин_ВводЗначенийРасчетныхПоказателей КАК Документ
		               |ГДЕ
		               |	Документ.РасчетныйПоказатель.ПозицияКлассификатора <> ЗНАЧЕНИЕ(Перечисление.фин_КлассификаторРасчетныхПоказателей.ПустаяСсылка)";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НачатьТранзакцию();
			ОбъектИБ = Выборка.ссылка.ПолучитьОбъект();
			ОбъектИБ.ДополнительныеСвойства.Вставить("ВнешняяОбработка",Истина);
			Если ТолькоОтключениеОтКомплекта = Ложь Тогда
				ОбъектИБ.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		КонецЦикла;
		
		Для Каждого Документ Из Метаданные.Справочники Цикл
			Если Найти(Документ.Имя,"фин_")=0 И Найти(Документ.Имя,"усд_")=0 Тогда
				Продолжить;
			КонецЕсли;
			Если Документ.Реквизиты.Найти("ДляКомплектаБюджетов")<>Неопределено Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	Документ.Ссылка
				|ИЗ
				|	Справочник."+Документ.Имя+" КАК Документ
				|ГДЕ
				|	Документ.ДляКомплектаБюджетов";
				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					НачатьТранзакцию();
					Если ТолькоОтключениеОтКомплекта = Ложь Тогда
						УдалитьСвязанные(Выборка.ссылка);
					КонецЕсли;
					ОбъектИБ = Выборка.ссылка.ПолучитьОбъект();
					ОбъектИБ.ДляКомплектаБюджетов = Ложь;
					ОбъектИБ.ДополнительныеСвойства.Вставить("ВнешняяОбработка",Истина);
					ОбъектИБ.Записать();
					Если ТолькоОтключениеОтКомплекта = Ложь Тогда
						ОбъектИБ.УстановитьПометкуУдаления(Истина);
					КонецЕсли;
					ЗафиксироватьТранзакцию();
				КонецЦикла;
			ИначеЕсли Документ.Реквизиты.Найти("ПозицияКлассификатора")<>Неопределено Тогда
				Реквизит = Документ.Реквизиты.Найти("ПозицияКлассификатора");
				ИмяПеречисления = "";
				Для Каждого Перечисление Из Метаданные.Перечисления Цикл
					Если Реквизит.Тип.СодержитТип(Тип("ПеречислениеСсылка."+Перечисление.Имя)) Тогда
						ИмяПеречисления = Перечисление.Имя;
					КонецЕсли;
				КонецЦикла;
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	Документ.Ссылка
				|ИЗ
				|	Справочник."+Документ.Имя+" КАК Документ
				|ГДЕ
				|	Документ.ПозицияКлассификатора<>ЗНАЧЕНИЕ(Перечисление."+ИмяПеречисления+".ПустаяСсылка)";
				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					НачатьТранзакцию();
					Если ТолькоОтключениеОтКомплекта = Ложь Тогда
						УдалитьСвязанные(Выборка.ссылка);
					КонецЕсли;
					ОбъектИБ = Выборка.ссылка.ПолучитьОбъект();
					ОбъектИБ.ПозицияКлассификатора = Перечисления[ИмяПеречисления].ПустаяСсылка();
					ОбъектИБ.ДополнительныеСвойства.Вставить("ВнешняяОбработка",Истина);
					ОбъектИБ.Записать();
					Если ТолькоОтключениеОтКомплекта = Ложь Тогда
						ОбъектИБ.УстановитьПометкуУдаления(Истина);
					КонецЕсли;
					ЗафиксироватьТранзакцию();
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		ОбновитьПовторноИспользуемыеЗначения();
	КонецПроцедуры

	Процедура УдалитьСвязанные(ЭлементДанных)
		Регистр2 = "";
		Поле2 = "";
		Если ТипЗнч(ЭлементДанных)=Тип("СправочникСсылка.фин_ПравилаАвтоматическогоРасчетаРазрезовБюджетирования") Тогда
			Регистр = "фин_ПрименениеПравилАвтоматическогоРасчетаРазрезов";
			Поле = "Правило";
		ИначеЕсли ТипЗнч(ЭлементДанных)=Тип("СправочникСсылка.фин_ПроизводственныеМодели") Тогда
			Регистр = "фин_РасчетПроизводственныхМоделей";
			Поле = "Модель";
		ИначеЕсли ТипЗнч(ЭлементДанных)=Тип("СправочникСсылка.фин_МоделиРаспределенияБюджетныхДанных") Тогда
			Регистр = "фин_РасчетМоделейРаспределения";
			Поле = "Модель";
		ИначеЕсли ТипЗнч(ЭлементДанных)=Тип("СправочникСсылка.фин_СхемыОтраженияФактическихДанных") Тогда
			Регистр = "фин_ПрименениеСхемОтраженияФактическихДанных";
			Поле = "Схема";
		ИначеЕсли ТипЗнч(ЭлементДанных)=Тип("СправочникСсылка.фин_НаборыШаблоновОтраженияПервичныхДанныхВБюджетах") Тогда
			Регистр = "фин_ПрименениеСхемОтраженияФактическихДанных";
			Поле = "Схема";
		ИначеЕсли ТипЗнч(ЭлементДанных)=Тип("ПланВидовХарактеристикСсылка.фин_ВидыСубконтоБюджетирования") Тогда
			Регистр = "фин_НастройкаДополнительныхРазрезовБюджетирования";
			Поле = "Разрез";
		Иначе
			Возврат;
		КонецЕсли;
		ОчиститьСвязанныеЗаписи(Регистр,Поле,ЭлементДанных);
		Если ЗначениеЗаполнено(Регистр2) Тогда
			ОчиститьСвязанныеЗаписи(Регистр2,Поле2,ЭлементДанных);
		КонецЕсли;
	КонецПроцедуры
	
	Процедура ОчиститьСвязанныеЗаписи(Регистр,Поле,ЭлементДанных)
		Набор = РегистрыСведений[Регистр].СоздатьНаборЗаписей();
		Если Набор.Метаданные().Измерения.Найти(Поле)<>Неопределено Тогда
			Набор.Отбор[Поле].Установить(ЭлементДанных);
			Набор.Записать();
		Иначе
			МассивУдалить = Новый Массив;
			Набор.Прочитать();
			Для Каждого Запись Из Набор Цикл
				Если Запись[Поле] = ЭлементДанных Тогда
					МассивУдалить.Добавить(Запись);
				КонецЕсли;
			КонецЦикла;
			Для Каждого ЗаписьУдалить Из МассивУдалить Цикл
				Набор.Удалить(ЗаписьУдалить);
			КонецЦикла;
			Набор.Записать();
		КонецЕсли;
	КонецПроцедуры
