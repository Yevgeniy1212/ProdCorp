
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Параметры.Свойство("СтатьяБюджета",СтатьяБюджета) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	ПрограмнныйИдентификатор 	= фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(СтатьяБюджета);
	ВыбранныеВарианты 			= Параметры.ВыбранныеВарианты;
	ВыбранныеВариантыКБ.ЗагрузитьЗначения(ВыбранныеВарианты);
	Параметры.Свойство("АдресНастроек",АдресНастроек);
	Если АдресНастроек = "" Тогда
		ДанныеХранилища = Неопределено;
	Иначе
		ДанныеХранилища = ПолучитьИзВременногоХранилища(АдресНастроек);
	КонецЕсли;
	
	СтатьиБюджетов 	= ?(ДанныеХранилища = Неопределено,фин_УправлениеБюджетнойМоделью.ПолучитьТаблицуПостатейногоСоставаБюджетов(ВыбранныеВарианты),ДанныеХранилища.СтатьиБюджетов);
	Строки 			= СтатьиБюджетов.НайтиСтроки(Новый Структура("Статья",СтатьяБюджета));
	ПоРасценкам 	= Ложь;
	РасчетТолькоПриПланировании = Истина;
	РазрезыСтатьи = Новый СписокЗначений;
	Для Каждого СтрокаСтруктуры Из Строки Цикл
		Бюджеты.Добавить(СтрокаСтруктуры.Бюджет);
		ПризнакПеретекающегоОстатка	= СтрокаСтруктуры.ПризнакПеретекающегоОстатка;
		ПоРасценкам 				= СтрокаСтруктуры.ПоРасценкам;
		РасчетТолькоПриПланировании	= СтрокаСтруктуры.РасчетТолькоПриПланировании;
		Если ДанныеХранилища<>Неопределено И ЗначениеЗаполнено(СтрокаСтруктуры.Разрезы) Тогда
			Разрезы = ДанныеХранилища.РазрезыБюджетов.НайтиСтроки(Новый Структура("Бюджет",СтрокаСтруктуры.Бюджет));
			Для Каждого СтрокаРазрез Из Разрезы Цикл
				Если РазрезыСтатьи.НайтиПоЗначению(СтрокаРазрез.Разрез) = Неопределено И Найти(СтрокаСтруктуры.Разрезы,фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(СтрокаРазрез.Разрез))<>0 Тогда
					РазрезыСтатьи.Добавить(СтрокаРазрез.Разрез);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	// проверка на расчет по формуле
	
	ФормулаСуммы 		= ?(ДанныеХранилища = Неопределено,фин_УправлениеБюджетнойМоделью.ФормулаСуммы(СтатьяБюджета,ВыбранныеВарианты,Истина),ДанныеХранилища.ВсеФормулыСуммы.Получить(СтатьяБюджета));
	ФормулаКоличества 	= ?(ДанныеХранилища = Неопределено,фин_УправлениеБюджетнойМоделью.ФормулаКоличества(СтатьяБюджета,ВыбранныеВарианты,Истина),ДанныеХранилища.ВсеФормулыКоличества.Получить(СтатьяБюджета));
	
	Если ФормулаСуммы<>Неопределено ИЛИ ФормулаКоличества<>Неопределено Тогда
		Если ФормулаСуммы = Неопределено И ПоРасценкам Тогда
			ИнформацияПоРасчетнымСвязям = ИнформацияПоРасчетнымСвязям + "
			|	Расчет суммы производится на основании количества, путем применения плановых цен;";
		КонецЕсли;
		Если ФормулаСуммы <> Неопределено Тогда
			ИнформацияПоРасчетнымСвязям = ИнформацияПоРасчетнымСвязям + "
			|	Расчет суммы производится по формуле:
			|
			|	"+ФормулаСуммы.Формула+"
			|";
			Если ФормулаСуммы.Свойство("Комментарии") Тогда
				ИнформацияПоРасчетнымСвязям = ИнформацияПоРасчетнымСвязям + "
				|	* Примечания к расчету суммы:
				|
				|	"+ФормулаСуммы.Комментарии+"
				|";
			КонецЕсли;
			Для Каждого СтрокаПоказатель Из ФормулаСуммы.ВходящиеПоказатели Цикл
				ВлияющиеПоказатели.Добавить(СтрокаПоказатель.ПоказательПоКлассификатору);
			КонецЦикла;
		КонецЕсли;
		Если ФормулаКоличества <> Неопределено Тогда
			ИнформацияПоРасчетнымСвязям = ИнформацияПоРасчетнымСвязям + "
			|	Расчет количества производится по формуле:
			|
			|	"+ФормулаКоличества.Формула+"
			|";
			Если ФормулаКоличества.Свойство("Комментарии") Тогда
				ИнформацияПоРасчетнымСвязям = ИнформацияПоРасчетнымСвязям + "
				|	* Примечания к расчету количества:
				|
				|	"+ФормулаКоличества.Комментарии+"
				|";
			КонецЕсли;
			Для Каждого СтрокаПоказатель Из ФормулаКоличества.ВходящиеПоказатели Цикл
				ВлияющиеПоказатели.Добавить(СтрокаПоказатель.ПоказательПоКлассификатору);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	// проверка на расчет по формуле
	
	ВсеФормулыСуммы 		= ?(ДанныеХранилища = Неопределено,фин_УправлениеБюджетнойМоделью.ФормулаСуммы(,ВыбранныеВарианты,Истина),ДанныеХранилища.ВсеФормулыСуммы);
	Для Каждого Формула Из ВсеФормулыСуммы Цикл
		Если Формула.Ключ = СтатьяБюджета Тогда
			Продолжить;
		КонецЕсли;
		ВходящиеПоказатели = Формула.Значение.ВходящиеПоказатели;
		Для Каждого ВходящийПоказатель Из ВходящиеПоказатели Цикл
			Позиция = ВходящийПоказатель.ПоказательПоКлассификатору;
			Если Позиция = СтатьяБюджета Тогда
				 СтрокаТЗ = УчастиеВРасчетах.Добавить();
				 СтрокаТЗ.Статья = Формула.Ключ;
				 СтрокаТЗ.Правило = "Используется для расчета суммы по формуле: "+Формула.Значение.Формула;
			ИначеЕсли Найти(фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(Позиция),"Группа")<>0 Тогда
				Если ПринадлежитГруппеСтатей(СтатьяБюджета,Позиция,СтатьиБюджетов) Тогда
					 СтрокаТЗ = УчастиеВРасчетах.Добавить();
					 СтрокаТЗ.Статья = Формула.Ключ;
					 СтрокаТЗ.Правило = "Используется в группе статей """+Позиция+""" для расчета суммы по формуле: "+Формула.Значение.Формула;
				КонецЕсли;
			ИначеЕсли ТипЗнч(Позиция)=Тип("ПеречислениеСсылка.фин_КлассификаторБюджетов") Тогда
				Если СтатьиБюджетов.НайтиСтроки(Новый Структура("Бюджет,Статья",Позиция,СтатьяБюджета)).Количество()>0 Тогда
					 СтрокаТЗ = УчастиеВРасчетах.Добавить();
					 СтрокаТЗ.Статья = Формула.Ключ;
					 СтрокаТЗ.Правило = "Используется в составе бюджета """+Позиция+""" для расчета суммы по формуле: "+Формула.Значение.Формула;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	ВсеФормулыКоличества 	= ?(ДанныеХранилища = Неопределено,фин_УправлениеБюджетнойМоделью.ФормулаКоличества(,ВыбранныеВарианты,Истина),ДанныеХранилища.ВсеФормулыКоличества);
	Для Каждого Формула Из ВсеФормулыКоличества Цикл
		Если Формула.Ключ = СтатьяБюджета Тогда
			Продолжить;
		КонецЕсли;
		ВходящиеПоказатели = Формула.Значение.ВходящиеПоказатели;
		Для Каждого ВходящийПоказатель Из ВходящиеПоказатели Цикл
			Позиция = ВходящийПоказатель.ПоказательПоКлассификатору;
			Если Позиция = СтатьяБюджета Тогда
				 СтрокаТЗ = УчастиеВРасчетах.Добавить();
				 СтрокаТЗ.Статья = Формула.Ключ;
				 СтрокаТЗ.Правило = "Используется для расчета количества по формуле: "+Формула.Значение.Формула;
			ИначеЕсли Найти(фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(Позиция),"Группа")<>0 Тогда
				Если ПринадлежитГруппеСтатей(СтатьяБюджета,Позиция,СтатьиБюджетов) Тогда
					 СтрокаТЗ = УчастиеВРасчетах.Добавить();
					 СтрокаТЗ.Статья = Формула.Ключ;
					 СтрокаТЗ.Правило = "Используется в группе статей """+Позиция+""" для расчета количества по формуле: "+Формула.Значение.Формула;
				КонецЕсли;
			ИначеЕсли ТипЗнч(Позиция)=Тип("ПеречислениеСсылка.фин_КлассификаторБюджетов") Тогда
				Если СтатьиБюджетов.НайтиСтроки(Новый Структура("Бюджет,Статья",Позиция,СтатьяБюджета)).Количество()>0 Тогда
					 СтрокаТЗ = УчастиеВРасчетах.Добавить();
					 СтрокаТЗ.Статья = Формула.Ключ;
					 СтрокаТЗ.Правило = "Используется в составе бюджета """+Позиция+""" для расчета количества по формуле: "+Формула.Значение.Формула;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// проверка на расчет по зависимостям
	
	ЗависимостиБазы = ?(ДанныеХранилища = Неопределено,фин_УправлениеБюджетнойМоделью.ЗависимостиПоказателя(СтатьяБюджета,,ВыбранныеВарианты,,,Истина),ДанныеХранилища.ВсеЗависимостиБазы.Получить(СтатьяБюджета));
	Если ЗависимостиБазы<>Неопределено Тогда
		ИнформацияПоРасчетнымСвязям = ИнформацияПоРасчетнымСвязям + "
		|	Применяется расчет по зависимости от показателей:";
		Для Каждого Зависимость Из ЗависимостиБазы Цикл
			ФинансовыйПоказательВлияющая = Зависимость.ФинансовыйПоказательВлияющая;
			ИнформацияПоРасчетнымСвязям = ИнформацияПоРасчетнымСвязям + "
			|		- "+ФинансовыйПоказательВлияющая;
			ВлияющиеПоказатели.Добавить(ФинансовыйПоказательВлияющая);
		КонецЦикла;
	КонецЕсли;
	
	ВсеЗависимостиБазы = ?(ДанныеХранилища = Неопределено,фин_УправлениеБюджетнойМоделью.ЗависимостиПоказателя(,,ВыбранныеВарианты,,,Истина),ДанныеХранилища.ВсеЗависимостиБазы);
	Если ВсеЗависимостиБазы<>Неопределено Тогда
		Для Каждого ЗависимостьБазы Из ВсеЗависимостиБазы Цикл
			Для Каждого Зависимость Из ЗависимостьБазы.Значение Цикл
				ФинансовыйПоказательВлияющая = Зависимость.ФинансовыйПоказательВлияющая;
				Если ФинансовыйПоказательВлияющая = СтатьяБюджета Тогда
					 СтрокаТЗ = УчастиеВРасчетах.Добавить();
					 СтрокаТЗ.Статья = ЗависимостьБазы.Ключ;
					 СтрокаТЗ.Правило = "Используется в качестве влияющего показателя при расчете зависимости";
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	// проверка на расчет по производственным моделям
	
	Модели = ?(ДанныеХранилища = Неопределено,фин_УправлениеБюджетнойМоделью.ПроизводственнаяМодельПоказателя(,,ВыбранныеВарианты,,Истина),ДанныеХранилища.Модели);
	
	Если Модели <>Неопределено Тогда
		Для Каждого Модель Из Модели Цикл
			ОтражениеРезультатов = Модель.Значение.ОтражениеРезультатов;
			Строки = ОтражениеРезультатов.НайтиСтроки(Новый Структура("ПозицияКлассификатора",СтатьяБюджета));
			Если Строки.Количество()<>0 Тогда
				ИнформацияПоРасчетнымСвязям = ИнформацияПоРасчетнымСвязям + "
				|	Применяется расчет по производственной модели от показателя "+Модель.Ключ;
				ВлияющиеПоказатели.Добавить(Модель.Ключ);
			КонецЕсли;
			Если Модель.Значение.Свойство("ФинансовыйПоказательДляОтраженияТрудовыхЗатрат") И Модель.Значение.ФинансовыйПоказательДляОтраженияТрудовыхЗатрат = СтатьяБюджета Тогда
				ИнформацияПоРасчетнымСвязям = ИнформацияПоРасчетнымСвязям + "
				|	Применяется расчет по производственной модели от показателя "+Модель.Ключ;
				ВлияющиеПоказатели.Добавить(Модель.Ключ);
			КонецЕсли;
			Если Модель.Ключ = СтатьяБюджета Тогда
				Для Каждого СтрокаОтражение Из ОтражениеРезультатов Цикл
					 СтрокаТЗ = УчастиеВРасчетах.Добавить();
					 СтрокаТЗ.Статья = СтрокаОтражение.ПозицияКлассификатора;
					 СтрокаТЗ.Правило = "Используется в качестве исходных данных для расчета производственной модели";
				КонецЦикла;
				Если Модель.Значение.Свойство("ФинансовыйПоказательДляОтраженияТрудовыхЗатрат") Тогда
					 СтрокаТЗ = УчастиеВРасчетах.Добавить();
					 СтрокаТЗ.Статья = Модель.Значение.ФинансовыйПоказательДляОтраженияТрудовыхЗатрат;
					 СтрокаТЗ.Правило = "Используется в качестве исходных данных для расчета производственной модели";
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// проверка на расчет по моделям распределения
	
	Модели = ?(ДанныеХранилища = Неопределено,фин_УправлениеБюджетнойМоделью.МодельРаспределенияПоказателя(,,ВыбранныеВарианты,,Истина),ДанныеХранилища.МоделиРаспределения);
	
	Если Модели <>Неопределено Тогда
		Для Каждого Модель Из Модели Цикл
			ОтражениеРезультатов = Модель.Значение.ОтражениеРезультатов;
			Строки = ОтражениеРезультатов.НайтиСтроки(Новый Структура("ПозицияКлассификатора",СтатьяБюджета));
			Если Строки.Количество()<>0 Тогда
				ИнформацияПоРасчетнымСвязям = ИнформацияПоРасчетнымСвязям + "
				|	Применяется расчет по производственной модели от показателя "+Модель.Ключ;
				ВлияющиеПоказатели.Добавить(Модель.Ключ);
			КонецЕсли;
			
			Строки = Модель.Значение.БазаРаспределения.НайтиСтроки(Новый Структура("ПозицияКлассификатора",СтатьяБюджета));
			Для Каждого СтрокаБаза Из Строки Цикл
			 СтрокаТЗ = УчастиеВРасчетах.Добавить();
			 СтрокаТЗ.Статья = Модель.Ключ;
			 СтрокаТЗ.Правило = "Используется в качестве базы для распределения по модели";
			КонецЦикла;
			
			Если Модель.Ключ = СтатьяБюджета Тогда
				Для Каждого СтрокаОтражение Из ОтражениеРезультатов Цикл
					 СтрокаТЗ = УчастиеВРасчетах.Добавить();
					 СтрокаТЗ.Статья = СтрокаОтражение.ПозицияКлассификатора;
					 СтрокаТЗ.Правило = "Используется в качестве исходных данных для распределения по модели";
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
//	Зависимость = фин_УправлениеБюджетнойМоделью.ЗависимостиПоказателя(СтатьяБюджета,,ВыбранныеВарианты,,,Истина);
	//Для Каждого Зависимость Из ЗависимостиБазы Цикл
	//	МассивПравил = Зависимость.Значение.ЗависимостиОборотовПоСтатьям;
	//	Строки = МассивПравил.НайтиСтроки(Новый Структура("ПозицияКлассификатора",СтатьяБюджета))
	//	Если Строки.Количество()<>0 Тогда
	//		
	//	КонецЕсли;
	//КонецЦикла;
	
	//фактические данные
	Если (РасчетТолькоПриПланировании = Ложь) И (ФормулаСуммы<>Неопределено ИЛИ ФормулаКоличества<>Неопределено) Тогда
		ИнформацияПоФакту = "Фактические данные рассчитываются по формуле, настроенной для расчета плановых данных";
	Иначе
		ФактическиеДанные = ?(ДанныеХранилища = Неопределено,фин_УправлениеБюджетнойМоделью.ПолучитьТаблицуНастроекФактическихДанных(ВыбранныеВарианты,Истина),ДанныеХранилища.ФактическиеДанные);
		СтрокиФактических = ФактическиеДанные.НайтиСтроки(Новый Структура("ФинансовыйПоказательИсточник",СтатьяБюджета));
		ИнформацияПоФакту = "Правила сбора фактических данных:
		|
		|";
		Для Каждого СтрокаФД Из СтрокиФактических Цикл
			ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + "По объекту "+Метаданные[СтрокаФД.ВидОбъектаИБ][СтрокаФД.ИмяОбъектаИБ].Представление() + " ("+Метаданные[СтрокаФД.ВидОбъектаИБ][СтрокаФД.ИмяОбъектаИБ].ПолноеИмя()+")";
			Если ЗначениеЗаполнено(СтрокаФД.ИдентификаторСтроки) Тогда
				СтрокиГруппы = ФактическиеДанные.НайтиСтроки(Новый Структура("ИдентификаторСтроки,ЭтоГруппаПравил",СтрокаФД.ИдентификаторСтроки,Истина));
				Для Каждого СтрокаГруппы Из СтрокиГруппы Цикл
					ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " включено в группу правил: "+СтрокаГруппы.Представление+?(ЗначениеЗаполнено(СтрокаГруппы.УсловиеПрименения)," (группа выполняется при условии: "+СтрокаГруппы.УсловиеПрименения.Наименование+")","");
				КонецЦикла;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаФД.УсловиеПрименения) Тогда
				 ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " правило выполняется при условии: "+СтрокаФД.УсловиеПрименения.Наименование;  
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаФД.СуммаИсточник) Тогда
				 ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " учет суммы: "+СтрокаФД.СуммаИсточник;  
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаФД.КоличествоИсточник) Тогда
				 ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " учет количества: "+СтрокаФД.КоличествоИсточник;  
			КонецЕсли;
			Если СтрокаФД.Сторно=Истина Тогда
				 ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " (* сторнирующая операция)";  
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаФД.ЗаполнениеРазрезов) Тогда
				 ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " заполнение плановых разрезов: ";
				 Для Каждого ЭлементЗаполнения Из СтрокаФД.ЗаполнениеРазрезов Цикл
					 Если ЭлементЗаполнения.Ключ = "Валюта" Тогда
				 		ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " 		- Валюта : "+ЭлементЗаполнения.Значение;
					 ИначеЕсли РазрезыСтатьи.НайтиПоЗначению(Перечисления.фин_КлассификаторРазрезовБюджетов[ЭлементЗаполнения.Ключ])<>Неопределено Тогда
				 		ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " 		- "+Перечисления.фин_КлассификаторРазрезовБюджетов[ЭлементЗаполнения.Ключ]+" : "+ЭлементЗаполнения.Значение;
					 КонецЕсли;
				 КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		НастройкиСоответствий	= ?(ДанныеХранилища = Неопределено,фин_УправлениеБюджетнойМоделью.НастройкиСоответствий(ВыбранныеВарианты,,Истина),ДанныеХранилища.НастройкиСоответствий);
		Для Каждого СоответствиеДанных Из НастройкиСоответствий Цикл
			МассивИсходных = Новый Массив;
			Для Каждого ЭлементСоответствия Из СоответствиеДанных.Значение.ПереченьСоответствий Цикл
				Если ЭлементСоответствия.Значение = СтатьяБюджета Тогда
					МассивИсходных.Добавить(ЭлементСоответствия.Ключ);
				КонецЕсли;
			КонецЦикла;
			Если СоответствиеДанных.Значение.ЗначениеИначе = СтатьяБюджета Тогда
				МассивИсходных.Добавить("значение, используемое если не найдено подходящее соответствие");
			КонецЕсли;
			Если МассивИсходных.Количество()>0 Тогда
				СтрокиФактических = ФактическиеДанные.НайтиСтроки(Новый Структура("ФинансовыйПоказательИсточник",СоответствиеДанных.Ключ));
				Если СтрокиФактических.Количество()> 0 Тогда
					ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + "Правила сбора фактических данных по соответствиям между плановыми и фактическими значениями ("+СоответствиеДанных.Ключ+"):
					|
					|";
				КонецЕсли;
				Для Каждого СтрокаФД Из СтрокиФактических Цикл
					ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + "По объекту "+Метаданные[СтрокаФД.ВидОбъектаИБ][СтрокаФД.ИмяОбъектаИБ].Представление() + " ("+Метаданные[СтрокаФД.ВидОбъектаИБ][СтрокаФД.ИмяОбъектаИБ].ПолноеИмя()+")";
					Если ЗначениеЗаполнено(СтрокаФД.ИдентификаторСтроки) Тогда
						СтрокиГруппы = ФактическиеДанные.НайтиСтроки(Новый Структура("ИдентификаторСтроки,ЭтоГруппаПравил",СтрокаФД.ИдентификаторСтроки,Истина));
						Для Каждого СтрокаГруппы Из СтрокиГруппы Цикл
							ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " включено в группу правил: "+СтрокаГруппы.Представление+?(ЗначениеЗаполнено(СтрокаГруппы.УсловиеПрименения)," (группа выполняется при условии: "+СтрокаГруппы.УсловиеПрименения.Наименование+")","");
						КонецЦикла;
					КонецЕсли;
					ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " исходные значения, в соответствие которым назначена статья:";
					Для Каждого ЭлементИсходных Из МассивИсходных Цикл
						ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " 		- "+ЭлементИсходных;
					КонецЦикла;
					Если ЗначениеЗаполнено(СтрокаФД.УсловиеПрименения) Тогда
						ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " правило выполняется при условии: "+СтрокаФД.УсловиеПрименения.Наименование;  
					КонецЕсли;
					Если ЗначениеЗаполнено(СтрокаФД.СуммаИсточник) Тогда
						ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " учет суммы: "+СтрокаФД.СуммаИсточник;  
					КонецЕсли;
					Если ЗначениеЗаполнено(СтрокаФД.КоличествоИсточник) Тогда
						ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " учет количества: "+СтрокаФД.КоличествоИсточник;  
					КонецЕсли;
					Если СтрокаФД.Сторно=Истина Тогда
						ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " (* сторнирующая операция)";  
					КонецЕсли;
					Если ЗначениеЗаполнено(СтрокаФД.ЗаполнениеРазрезов) Тогда
						ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " заполнение плановых разрезов: ";
						Для Каждого ЭлементЗаполнения Из СтрокаФД.ЗаполнениеРазрезов Цикл
							Если ЭлементЗаполнения.Ключ = "Валюта" Тогда
								ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " 		- Валюта : "+ЭлементЗаполнения.Значение;
							ИначеЕсли РазрезыСтатьи.НайтиПоЗначению(Перечисления.фин_КлассификаторРазрезовБюджетов[ЭлементЗаполнения.Ключ])<>Неопределено Тогда
								ИнформацияПоФакту = ИнформацияПоФакту + Символы.ПС + " 		- "+Перечисления.фин_КлассификаторРазрезовБюджетов[ЭлементЗаполнения.Ключ]+" : "+ЭлементЗаполнения.Значение;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	фин_БюджетированиеОбщегоНазначения.НастроитьОформлениеТабличногоПоля(Элементы.УчастиеВРасчетах);
	
КонецПроцедуры

&НаСервере
Функция ПринадлежитГруппеСтатей(СтатьяБюджета,ГруппаСтатей,СтатьиБюджетов)
	СтрокиБюджета = СтатьиБюджетов.НайтиСтроки(Новый Структура("Родитель,Статья",ГруппаСтатей,СтатьяБюджета));
	Если СтрокиБюджета.Количество()>0 Тогда
		Возврат Истина;	
	КонецЕсли;
	СтрокиБюджета = СтатьиБюджетов.НайтиСтроки(Новый Структура("Родитель",ГруппаСтатей)); 
	Для Каждого СтрокаБюджета Из СтрокиБюджета Цикл
		Если Найти(фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(СтрокаБюджета.Статья),"Группа")<>0 Тогда
			Принадлежит = ПринадлежитГруппеСтатей(СтатьяБюджета,СтрокаБюджета.Статья,СтатьиБюджетов);
			Если Принадлежит Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура ПравилаРасчетаПоСтатье(Команда)
	Если Элементы.ВлияющиеПоказатели.ТекущиеДанные<>Неопределено Тогда
		СтруктураПараметров = Новый Структура("СтатьяБюджета,ВыбранныеВарианты,АдресНастроек",Элементы.ВлияющиеПоказатели.ТекущиеДанные.Значение,ВыбранныеВариантыКБ.ВыгрузитьЗначения(),АдресНастроек);
		ОткрытьФорму("Обработка.фин_НастройкаКомплектаБюджетов.Форма.ФормаСведенийОСтатье",СтруктураПараметров,ЭтотОбъект,Элементы.ВлияющиеПоказатели.ТекущиеДанные.Значение,ВариантОткрытияОкна.ОтдельноеОкно);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПравилаРасчетаПоСтатьеЗависимой(Команда)
	Если Элементы.УчастиеВРасчетах.ТекущиеДанные<>Неопределено Тогда
		СтруктураПараметров = Новый Структура("СтатьяБюджета,ВыбранныеВарианты,АдресНастроек",Элементы.УчастиеВРасчетах.ТекущиеДанные.Статья,ВыбранныеВариантыКБ.ВыгрузитьЗначения(),АдресНастроек);
		ОткрытьФорму("Обработка.фин_НастройкаКомплектаБюджетов.Форма.ФормаСведенийОСтатье",СтруктураПараметров,ЭтотОбъект,Элементы.УчастиеВРасчетах.ТекущиеДанные.Статья,ВариантОткрытияОкна.ОтдельноеОкно);	
	КонецЕсли;
КонецПроцедуры
