
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИмеющиесяДанные = фин_УправлениеБюджетнойМоделью.ПолучитьЭлементыВРамкахКомплекта();
	Если Параметры.Свойство("ПозицияКлассификатора") Тогда
		ИмеющиесяДанные = ИмеющиесяДанные.Скопировать(Новый Структура("ПозицияКлассификатора",Параметры.ПозицияКлассификатора));
	КонецЕсли;
	ИмеющиесяДанные.Колонки.Добавить("ПустаяСсылка");
	ИмеющиесяДанные.Колонки.Добавить("ВидОбъекта");
	Для Каждого СтрокаДанных Из ИмеющиесяДанные Цикл
		НоваяСтрока = ТаблицаДанных.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаДанных);
		ТипОбъекта = ТипЗнч(НоваяСтрока.Ссылка);
		НоваяСтрока.ВидОбъекта = ТипОбъекта;
		СтрокаДанных.ВидОбъекта = НоваяСтрока.ВидОбъекта;
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(ТипОбъекта);
		ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
		СтрокаДанных.ПустаяСсылка = ОписаниеТипов.ПривестиЗначение(Неопределено);
	КонецЦикла;
	Дерево = ДанныеФормыВЗначение(ДеревоНастроек,Тип("ДеревоЗначений"));
	// разрезы
	СтрокаВсеРазрезы = Дерево.Строки.Добавить();
	СтрокаВсеРазрезы.ВидОбъекта = "Разрезы планирования бюджетов";
	СтрокиРазрезы = ИмеющиесяДанные.НайтиСтроки(Новый Структура("ПустаяСсылка",ПланыВидовХарактеристик.фин_ВидыСубконтоБюджетирования.ПустаяСсылка()));
	Для Каждого СтрокаРазрезы Из СтрокиРазрезы Цикл
		НоваяСтрока = СтрокаВсеРазрезы.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаРазрезы);
		ДобавитьПодчиненные(Дерево,СтрокаРазрезы,ИмеющиесяДанные,НоваяСтрока);
	КонецЦикла;
	// бюджеты
	СтрокаВсеБюджеты = Дерево.Строки.Добавить();
	СтрокаВсеБюджеты.ВидОбъекта = "Бюджетная структура";
	СтрокиРегламент = ИмеющиесяДанные.НайтиСтроки(Новый Структура("ПустаяСсылка",Документы.фин_БюджетныйРегламент.ПустаяСсылка()));
	Для Каждого СтрокаРегламент Из СтрокиРегламент Цикл
		НоваяСтрока = СтрокаВсеБюджеты.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаРегламент);
	КонецЦикла;
	СтрокиБюджет = ИмеющиесяДанные.НайтиСтроки(Новый Структура("ПустаяСсылка",Справочники.фин_Бюджеты.ПустаяСсылка()));
	Для Каждого СтрокаБюджет Из СтрокиБюджет Цикл
		НоваяСтрокаБюджет = СтрокаВсеБюджеты.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаБюджет,СтрокаБюджет);
		ДобавитьПодчиненные(Дерево,СтрокаБюджет,ИмеющиесяДанные,НоваяСтрокаБюджет);
		СтрокиСтатьи = ИмеющиесяДанные.НайтиСтроки(Новый Структура("ПустаяСсылка,Владелец",Справочники.фин_СтатьиБюджета.ПустаяСсылка(),СтрокаБюджет.ссылка));
		Для Каждого СтрокаСтатьи Из СтрокиСтатьи Цикл
			НоваяСтрока = НоваяСтрокаБюджет.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаСтатьи);
			ДобавитьПодчиненные(Дерево,СтрокаСтатьи,ИмеющиесяДанные,НоваяСтрока);
		КонецЦикла;
	КонецЦикла;
	// расчетные показатели
	СтрокаВсеРП = Дерево.Строки.Добавить();
	СтрокаВсеРП.ВидОбъекта = "Расчетные показатели";
	СтрокиРП = ИмеющиесяДанные.НайтиСтроки(Новый Структура("ПустаяСсылка",Справочники.фин_РасчетныеПоказатели.ПустаяСсылка()));
	Для Каждого СтрокаРП Из СтрокиРП Цикл
		НоваяСтрока = СтрокаВсеРП.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаРП);
		ДобавитьПодчиненные(Дерево,СтрокаРП,ИмеющиесяДанные,НоваяСтрока);
	КонецЦикла;
	// фактические данные
	СтрокаВсеФД = Дерево.Строки.Добавить();
	СтрокаВсеФД.ВидОбъекта = "Фактические данные";
	
	СтрокаВсеУсловия = СтрокаВсеФД.Строки.Добавить();
	СтрокаВсеУсловия.ВидОбъекта = "Условия выполнения операций (на шапку документов)";
	
	СтрокиУсловия = ИмеющиесяДанные.НайтиСтроки(Новый Структура("ПустаяСсылка",Справочники.усд_УсловияВыполненияОперацийПоДокументам.ПустаяСсылка()));
	Для Каждого СтрокаУсловия Из СтрокиУсловия Цикл
		НоваяСтрока = СтрокаВсеУсловия.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаУсловия);
		ДобавитьПодчиненные(Дерево,СтрокаУсловия,ИмеющиесяДанные,НоваяСтрока);
	КонецЦикла;
	
	СтрокаВсеУсловия = СтрокаВсеФД.Строки.Добавить();
	СтрокаВсеУсловия.ВидОбъекта = "Условия выполнения операций (построчные)";
	
	СтрокиУсловия = ИмеющиесяДанные.НайтиСтроки(Новый Структура("ПустаяСсылка",Справочники.усд_УсловияВыполненияОперацийПоСтрокамДокумента.ПустаяСсылка()));
	Для Каждого СтрокаУсловия Из СтрокиУсловия Цикл
		НоваяСтрока = СтрокаВсеУсловия.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаУсловия);
		ДобавитьПодчиненные(Дерево,СтрокаУсловия,ИмеющиесяДанные,НоваяСтрока);
	КонецЦикла;
	
	СтрокаВсеШаблоны = СтрокаВсеФД.Строки.Добавить();
	СтрокаВсеШаблоны.ВидОбъекта = "Шаблоны регистрации";
	
	СтрокиШаблоны = ИмеющиесяДанные.НайтиСтроки(Новый Структура("ПустаяСсылка",Справочники.фин_НаборыШаблоновОтраженияПервичныхДанныхВБюджетах.ПустаяСсылка()));
	Для Каждого СтрокаШаблоны Из СтрокиШаблоны Цикл
		НоваяСтрока = СтрокаВсеШаблоны.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаШаблоны);
		ДобавитьПодчиненные(Дерево,СтрокаШаблоны,ИмеющиесяДанные,НоваяСтрока);
	КонецЦикла;
	
	СтрокиШаблоны = ИмеющиесяДанные.НайтиСтроки(Новый Структура("ПустаяСсылка",Справочники.фин_СхемыОтраженияФактическихДанных.ПустаяСсылка()));
	Для Каждого СтрокаШаблоны Из СтрокиШаблоны Цикл
		НоваяСтрока = СтрокаВсеШаблоны.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаШаблоны);
		ДобавитьПодчиненные(Дерево,СтрокаШаблоны,ИмеющиесяДанные,НоваяСтрока);
	КонецЦикла;

	
	СтрокаВсеШаблоны = СтрокаВсеФД.Строки.Добавить();
	СтрокаВсеШаблоны.ВидОбъекта = "Списки значений для отбора в условиях";
	
	СтрокиШаблоны = ИмеющиесяДанные.НайтиСтроки(Новый Структура("ПустаяСсылка",Справочники.фин_СпискиДанных.ПустаяСсылка()));
	Для Каждого СтрокаШаблоны Из СтрокиШаблоны Цикл
		НоваяСтрока = СтрокаВсеШаблоны.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаШаблоны);
		ДобавитьПодчиненные(Дерево,СтрокаШаблоны,ИмеющиесяДанные,НоваяСтрока);
	КонецЦикла;
	
	СтрокаВсеШаблоны = СтрокаВсеФД.Строки.Добавить();
	СтрокаВсеШаблоны.ВидОбъекта = "Настройки соответствий плановых и фактических данных";
	
	СтрокиШаблоны = ИмеющиесяДанные.НайтиСтроки(Новый Структура("ПустаяСсылка",Справочники.фин_ВариантыПолученияСоответствийДляПервичныхДанных.ПустаяСсылка()));
	Для Каждого СтрокаШаблоны Из СтрокиШаблоны Цикл
		НоваяСтрока = СтрокаВсеШаблоны.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаШаблоны);
		ДобавитьПодчиненные(Дерево,СтрокаШаблоны,ИмеющиесяДанные,НоваяСтрока);
	КонецЦикла;
	
	СтрокиШаблоны = ИмеющиесяДанные.НайтиСтроки(Новый Структура("ПустаяСсылка",Справочники.фин_НастройкиПолученияСоответствийДляПервичныхДанныхБюджетирования.ПустаяСсылка()));
	Для Каждого СтрокаШаблоны Из СтрокиШаблоны Цикл
		НоваяСтрока = СтрокаВсеШаблоны.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаШаблоны);
		ДобавитьПодчиненные(Дерево,СтрокаШаблоны,ИмеющиесяДанные,НоваяСтрока);
	КонецЦикла;
	
	ЗначениеВДанныеФормы(Дерево,ДеревоНастроек);
	фин_БюджетированиеОбщегоНазначения.НастроитьОформлениеТабличногоПоля(Элементы.ДеревоНастроек);
	фин_БюджетированиеОбщегоНазначения.НастроитьОформлениеТабличногоПоля(Элементы.ТаблицаДанных);
КонецПроцедуры

&НаСервере
Процедура ДобавитьПодчиненные(Дерево,СтрокаДанных,ИмеющиесяДанные,СтрокаДерева)
	Если НЕ ЗначениеЗаполнено(СтрокаДанных.ПозицияКлассификатора) Тогда
		Возврат;
	КонецЕсли;
	СтрокиСвязанные = ИмеющиесяДанные.НайтиСтроки(Новый Структура("ПозицияКлассификатора",СтрокаДанных.ПозицияКлассификатора));
	Для Каждого СтрокаСвязанная Из СтрокиСвязанные Цикл
		Если СтрокаСвязанная = СтрокаДанных Тогда
			Продолжить;
		КонецЕсли;
		Если Дерево.Строки.НайтиСтроки(Новый Структура("Ссылка",СтрокаСвязанная.Ссылка),Истина).Количество()>0 Тогда
			Продолжить;
		КонецЕсли;
		Если ТипЗнч(СтрокаСвязанная.Ссылка)=Тип("СправочникСсылка.фин_СтатьиБюджета") И ТипЗнч(СтрокаДанных.Ссылка)=Тип("СправочникСсылка.фин_СтатьиБюджета") И СтрокаСвязанная.Владелец <> СтрокаДанных.Владелец Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = СтрокаДерева.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаСвязанная);
		//ДобавитьПодчиненные(Дерево,СтрокаСвязанная,ИмеющиесяДанные,НоваяСтрока);
	КонецЦикла;
КонецПроцедуры
