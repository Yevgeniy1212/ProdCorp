
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИСТИНА КАК Применить,
		|	Бюджет.ФормируемыйБюджет КАК Бюджет,
		|	Бюджет.Сценарий КАК Сценарий,
		|	Бюджет.Ссылка КАК Документ,
		|	Бюджет.ПериодПланирования,
		|	Бюджет.ВидОперации,
		|	Бюджет.Организация,
		|	Бюджет.Проведен
		|ИЗ
		|	Документ.фин_Бюджет КАК Бюджет
		|ГДЕ
		|	(НЕ Бюджет.ПометкаУдаления)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Бюджет.ФормируемыйБюджет,
		|	Бюджет.Дата
		|ИТОГИ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Применить)
		|ПО
		|	Бюджет,
		|	Сценарий";

	Результат = Запрос.Выполнить();
	ЗначениеВРеквизитФормы(Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам),"СписокБюджетов");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИСТИНА КАК Применить,
		|	НастройкаЗависимостей.ФинансовыйПоказательВлияющая КАК ФинансовыйПоказатель,
		|	НастройкаЗависимостей.Ссылка КАК Документ,
		|	НастройкаЗависимостей.ВидОперации,
		|	НастройкаЗависимостей.Организация,
		|	НастройкаЗависимостей.Проведен
		|ИЗ
		|	Документ.фин_НастройкаЗависимостейМеждуФинансовымиПоказателями КАК НастройкаЗависимостей
		|ГДЕ
		|	(НЕ НастройкаЗависимостей.ПометкаУдаления)
		|ИТОГИ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Применить)
		|ПО
		|	ФинансовыйПоказательВлияющая";

	Результат = Запрос.Выполнить();
	ЗначениеВРеквизитФормы(Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам),"СписокНастройкиКонтролируемых");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИСТИНА КАК Применить,
		|	УстановкаКонтролируемыхФинансовыхПоказателей.Ссылка КАК Документ,
		|	УстановкаКонтролируемыхФинансовыхПоказателей.Организация КАК Организация,
		|	УстановкаКонтролируемыхФинансовыхПоказателей.Проведен
		|ИЗ
		|	Документ.фин_УстановкаЛимитовИЦелевыхЗначений КАК УстановкаКонтролируемыхФинансовыхПоказателей
		|ГДЕ
		|	(НЕ УстановкаКонтролируемыхФинансовыхПоказателей.ПометкаУдаления)
		|
		|УПОРЯДОЧИТЬ ПО
		|	УстановкаКонтролируемыхФинансовыхПоказателей.Дата
		|ИТОГИ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Документ)
		|ПО
		|	Организация";

	Результат = Запрос.Выполнить();
	ЗначениеВРеквизитФормы(Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам),"СписокНастройкиКонтролируемых");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИСТИНА КАК Применить,
		|	УчетФактическихДанныхПоБюджетам.Ссылка КАК Документ,
		|	УчетФактическихДанныхПоБюджетам.Организация КАК Организация,
		|	УчетФактическихДанныхПоБюджетам.Проведен
		|ИЗ
		|	Документ.фин_УчетФактическихДанныхПоБюджетам КАК УчетФактическихДанныхПоБюджетам
		|ГДЕ
		|	(НЕ УчетФактическихДанныхПоБюджетам.ПометкаУдаления)
		|
		|УПОРЯДОЧИТЬ ПО
		|	УчетФактическихДанныхПоБюджетам.Дата
		|ИТОГИ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Документ)
		|ПО
		|	Организация";

	Результат = Запрос.Выполнить();
	ЗначениеВРеквизитФормы(Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам),"СписокФактическиеДанные");
	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокБюджетовПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Элемент.ТекущиеДанные.ПолучитьЭлементы().Количество()>0 Тогда
		УстановитьФлажкиВПодчиненных(Элемент.ТекущиеДанные.ПолучитьЭлементы(),Элемент.ТекущиеДанные.Применить);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВПодчиненных(Строки, Пометка)
	Для Каждого СтрокаПодчиненная Из Строки Цикл
		СтрокаПодчиненная.Применить = Пометка;
		УстановитьФлажкиВПодчиненных(СтрокаПодчиненная.ПолучитьЭлементы(),Пометка);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	УстановитьФлажкиВПодчиненных(СписокБюджетов.ПолучитьЭлементы(),Ложь);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	УстановитьФлажкиВПодчиненных(СписокБюджетов.ПолучитьЭлементы(),Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработку(Команда)
	ОбработатьДокументы();
КонецПроцедуры

&НаСервере
Процедура ОбработатьДокументы()
	Дерево = РеквизитФормыВЗначение("СписокБюджетов");	
	Обработать(Дерево.Строки);
КонецПроцедуры

&НаСервере
Процедура Обработать(Строки)
	Для Каждого СтрокаПодчиненная Из Строки Цикл
		Если СтрокаПодчиненная.Применить И ЗначениеЗаполнено(СтрокаПодчиненная.Документ) Тогда
			фин_РаботаСДополнительнымиРазрезамиБюджетирования.ОбработатьРазрезыДокумента(СтрокаПодчиненная.Документ);
		КонецЕсли;
		Обработать(СтрокаПодчиненная.Строки);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗависимостиВыполнить(Команда)
	ОбработатьДокументыЗависимостей();
КонецПроцедуры

&НаСервере
Процедура ОбработатьДокументыЗависимостей()
	Дерево = РеквизитФормыВЗначение("СписокНастройкиКонтролируемых");	
	Обработать(Дерево.Строки);
КонецПроцедуры

&НаСервере
Процедура ОбработатьДокументыКонтролируемых()
	Дерево = РеквизитФормыВЗначение("СписокЗависимостей");	
	Обработать(Дерево.Строки);
КонецПроцедуры

&НаСервере
Процедура ОбработатьФактическиеДокументы()
	Дерево = РеквизитФормыВЗначение("СписокФактическиеДанные");	
	Обработать(Дерево.Строки);
КонецПроцедуры

&НаКлиенте
Процедура ЗависимостиСнятьФлажки(Команда)
	УстановитьФлажкиВПодчиненных(СписокЗависимостей.ПолучитьЭлементы(),Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗависимостиУстановитьФлажки(Команда)
	УстановитьФлажкиВПодчиненных(СписокЗависимостей.ПолучитьЭлементы(),Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСловарныеТермины(Команда)
     ИзменениеСловарныхТерминов();
КонецПроцедуры

&НаСервере
Процедура ИзменениеСловарныхТерминов()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкаДополнительныхРазрезовБюджетирования.Измерение,
		|	НастройкаДополнительныхРазрезовБюджетирования.Разрез
		|ИЗ
		|	РегистрСведений.фин_НастройкаДополнительныхРазрезовБюджетирования КАК НастройкаДополнительныхРазрезовБюджетирования";

	Результат = Запрос.Выполнить();

	Выборка = Результат.Выбрать();

	Пока Выборка.Следующий() Цикл
		ИмяРазреза 			= фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(Выборка.Измерение);
		СправочникОбъект 	= Справочники.фин_СлужебныеТерминыБюджетирования[ИмяРазреза].ПолучитьОбъект();
		СправочникОбъект.Наименование = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ПредставлениеРазреза(Выборка.Измерение);
		Попытка
			СправочникОбъект.Записать();
		Исключение
			Сообщить("Не обработан элемент "+Справочники.фин_СлужебныеТерминыБюджетирования[ИмяРазреза]);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КонтролируемыеСнятьФлажки(Команда)
	УстановитьФлажкиВПодчиненных(СписокНастройкиКонтролируемых.ПолучитьЭлементы(),Ложь);
КонецПроцедуры

&НаКлиенте
Процедура КонтролируемыеУстановитьФлажки(Команда)
	УстановитьФлажкиВПодчиненных(СписокНастройкиКонтролируемых.ПолучитьЭлементы(),Истина);
КонецПроцедуры

&НаКлиенте
Процедура КонтролируемыеВыполнить(Команда)
	ОбработатьДокументыКонтролируемых();
КонецПроцедуры

&НаКлиенте
Процедура ФактическиеСнятьФлажки(Команда)
	УстановитьФлажкиВПодчиненных(СписокФактическиеДанные.ПолучитьЭлементы(),Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ФактическиеУстановитьФлажки(Команда)
	УстановитьФлажкиВПодчиненных(СписокФактическиеДанные.ПолучитьЭлементы(),Истина);
КонецПроцедуры

&НаКлиенте
Процедура ФактическиеВыполнить(Команда)
	ОбработатьФактическиеДокументы();
КонецПроцедуры
