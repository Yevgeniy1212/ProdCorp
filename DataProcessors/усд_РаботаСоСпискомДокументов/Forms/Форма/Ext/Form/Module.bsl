////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("Экземпляр") Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Форма обработки не предназначена для самостоятельной работы!");
		Возврат;
	КонецЕсли;
	ИмяВидаДокументов 	= Параметры.Экземпляр.Метаданные().Имя;
	ТекстЗапроса 		= Список.ТекстЗапроса;
	ТекстЗапроса 		= СтрЗаменить(ТекстЗапроса,"усд_ВходящийДокумент",ИмяВидаДокументов);
	Заголовок 			= Параметры.Экземпляр.Метаданные().Синоним;
	ТекстПолей 			= "";
	Для Каждого Реквизит Из Метаданные.Документы[ИмяВидаДокументов].Реквизиты Цикл
		ТекстПолей = ТекстПолей+",
		|	СписокДокументовВида."+Реквизит.Имя+" КАК "+Реквизит.Имя;
	КонецЦикла;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"АктивныеЭтапы.Состояние КАК мСостояние","АктивныеЭтапы.Состояние КАК мСостояние"+ТекстПолей);
	Список.ОсновнаяТаблица = "";
	Список.ТекстЗапроса =  ТекстЗапроса;
	Список.ОсновнаяТаблица = "Документ."+ИмяВидаДокументов;
	Элементы.Список.Обновить();
	Для Каждого Реквизит Из Метаданные.Документы[ИмяВидаДокументов].Реквизиты Цикл
		Если Найти(Реквизит.Имя,"Удалить")<>0 Тогда
			Продолжить;
		КонецЕсли;
		Попытка
			РеквизитКолонка 			= Элементы.Добавить("Список"+Реквизит.Имя,Тип("ПолеФормы"),Элементы.ГруппаСпецифическихКолонок);
			РеквизитКолонка.ПутьКДанным	= "Список."+Реквизит.Имя;
			РеквизитКолонка.ТолькоПросмотр = Истина;
			РеквизитКолонка.Заголовок = Реквизит.Синоним;
			РеквизитКолонка.ЦветТекстаЗаголовка = Новый Цвет(0,66,66);
			РеквизитКолонка.ЦветФонаЗаголовка = Новый Цвет(176,196,222);
			РеквизитКолонка.ШрифтЗаголовка = Новый Шрифт(,9,Истина);
		Исключение
		КонецПопытки;
	КонецЦикла;
 	Элементы.Список.Обновить();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать