
&НаКлиенте
Процедура ИмяФайлаДанныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Режим = РежимДиалогаВыбораФайла.Открытие;
	Диалог = Новый ДиалогВыбораФайла(Режим);
	Диалог.Заголовок = "Выбор файла для загрузки данных";
	Диалог.Фильтр = "XML-файл (*.xml)|*.xml";
	ОписаниеОбработкаВыбораФайла = Новый ОписаниеОповещения("ОбработкаВыбораФайла",ЭтотОбъект);
	Диалог.Показать(ОписаниеОбработкаВыбораФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораФайла(МассивФайлов,ДополнительныеПараметры) Экспорт
	Если МассивФайлов<>Неопределено И МассивФайлов.Количество()>0 Тогда
		Объект.ПутьКФайлу = МассивФайлов[0];
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеНаСервере()
	СоответствиеВыгруженныхОбъектов = Новый Соответствие;
	ЧтениеXML = Новый ЧтениеXML;
	Если ФайловаяИБ Тогда
		ИмяФайла = Объект.ПутьКФайлу;
	Иначе
		МассивСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Объект.ПутьКФайлу,"\");
		ПоследнееЗначение = МассивСтрок[МассивСтрок.Количество()-1];
		ИмяФайла = КаталогВременныхФайлов()+ПоследнееЗначение;
		ПолучитьИзВременногоХранилища(АдресФайлаНаСервере).Записать(ИмяФайла);
	КонецЕсли;
	ЧтениеXML.ОткрытьФайл(ИмяФайла,,, "UTF-8");
	ЧтениеXML.URIПространстваИменАтрибута(0);
	ЧтениеXML.НайтиURIПространстваИмен("V8Exch:Data");
	ЧтениеXML.ПервоеОбъявление();
	НомерОбъектаПоПорядку = "";
	ГруппаОбъектов = "";
	ИмяОбъекта = "";
	Вложенность = 0;
	ТипОбъекта = "";
	ИмяТабличнойЧасти = "";
	ДанныеОбъекта = Неопределено;
	НачатьТранзакцию();
	Попытка
		Пока ЧтениеXML.Прочитать() Цикл
			ОбработкаУзлаXML(ЧтениеXML,СоответствиеВыгруженныхОбъектов,НомерОбъектаПоПорядку,ГруппаОбъектов,ИмяОбъекта,Вложенность,ТипОбъекта,ИмяТабличнойЧасти,ДанныеОбъекта);
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Загрузка прервана:
		|	"+ОписаниеОшибки());
	    ОтменитьТранзакцию();
	КонецПопытки;
	ЧтениеXML.Закрыть();
	Если НЕ ФайловаяИБ Тогда
		УдалитьФайлы(ИмяФайла);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаУзлаXML(ЧтениеXML,СоответствиеВыгруженныхОбъектов,НомерОбъектаПоПорядку,ГруппаОбъектов,ИмяОбъекта,Вложенность,ТипОбъекта,ИмяТабличнойЧасти,ДанныеОбъекта)
	Подстрока = "XMLЗначение(Тип(""Строка""),""";
	Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
		Если ЧтениеXML.Имя = "Data" Тогда
			Если ЧтениеXML.ЗначениеАтрибута("ВерсияФормата") <> "1.0" Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Версия формата файла "+ЧтениеXML.ЗначениеАтрибута("ВерсияФормата")+" не соответствует требуемой 1.0");	
				ВызватьИсключение "Версия формата файла "+ЧтениеXML.ЗначениеАтрибута("ВерсияФормата")+" не соответствует требуемой 1.0";
			КонецЕсли;
			Возврат;
		ИначеЕсли ЧтениеXML.Имя = "Константы" Тогда
			ТипОбъекта = "Константы";
			ГруппаОбъектов 	= "Константы";
			ЭтоОбъект		= Истина;
			Вложенность		= 1;
			ДанныеОбъекта 	= Новый Структура("ОписанияПолей",Новый Соответствие);
			
		ИначеЕсли ЧтениеXML.ПолучитьАтрибут("Тип")="Объект" Тогда
			ТипОбъекта = "Объект";
			НомерОбъектаПоПорядку 	= ЧтениеXML.ПолучитьАтрибут("НомерОбъектаПП");
			ГруппаОбъектов 	= ЧтениеXML.ПолучитьАтрибут("ГруппаОбъектов");
			ИмяОбъекта 		= фин_ОбщегоНазначенияКлиентСервер.ИмяОбъектаИБ(ЧтениеXML.ПолучитьАтрибут("Объект"));
			Если ГруппаОбъектов="Алгоритм" И ИмяОбъекта = "ФактическиеДанные" Тогда
				ГруппаОбъектов = "Документы";
				ИмяОбъекта = "фин_УчетФактическихДанныхПоБюджетам";
			КонецЕсли;
			ЭтоОбъект		= Истина;
			Вложенность		= 1;
			ДанныеОбъекта 	= Новый Структура("ОписанияПолей",Новый Соответствие);
			
		ИначеЕсли ЧтениеXML.ПолучитьАтрибут("Тип")="Реквизит" Тогда
			Вложенность			= 2;
			ИмяРеквизита 		= ЧтениеXML.ПолучитьАтрибут("ИмяРеквизита");
			ЗначениеРеквизита 	= ЧтениеXML.ПолучитьАтрибут("ЗначениеРеквизита");
			Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
				Если Найти(ЗначениеРеквизита,Подстрока)=1 Тогда
					ПриведенноеЗначениеРеквизита = Сред(ЗначениеРеквизита,СтрДлина(Подстрока)+1,СтрДлина(ЗначениеРеквизита)-СтрДлина(Подстрока)-2);    
				Иначе
					ПриведенноеЗначениеРеквизита = Вычислить(ЗначениеРеквизита);    
				КонецЕсли;
				Если ЗначениеЗаполнено(ПриведенноеЗначениеРеквизита) ИЛИ ИмяРеквизита="Наименование" ИЛИ ИмяРеквизита="Код" ИЛИ ИмяРеквизита="Родитель" Тогда
					Если НЕ ЗначениеЗаполнено(ПриведенноеЗначениеРеквизита) И ИмяРеквизита="Родитель" И Метаданные[ГруппаОбъектов].Найти(ИмяОбъекта)<>Неопределено Тогда
						ПриведенноеЗначениеРеквизита = Вычислить(ГруппаОбъектов+"."+ИмяОбъекта+".ПустаяСсылка()");
					КонецЕсли;
					ДанныеОбъекта.Вставить(ИмяРеквизита,ПриведенноеЗначениеРеквизита);
					ДанныеОбъекта.ОписанияПолей.Вставить(ИмяРеквизита,ЧтениеXML.ПолучитьАтрибут("Вид"));
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ЧтениеXML.ПолучитьАтрибут("Тип")="ТабличнаяЧасть" Тогда
			Вложенность			= 2;
			ИмяТабличнойЧасти	= ЧтениеXML.ПолучитьАтрибут("ИмяТабличнойЧасти");
			ДанныеОбъекта.Вставить(ИмяТабличнойЧасти,Новый Массив);
			
		ИначеЕсли ЧтениеXML.ПолучитьАтрибут("Тип")="СтрокаТабличнойЧасти" Тогда
			Вложенность			= 3;
			НомерСтроки	= ЧтениеXML.ПолучитьАтрибут("НомерСтроки");
			МассивСтрок = ДанныеОбъекта[ИмяТабличнойЧасти];
			МассивСтрок.Добавить(Новый Структура("НомерСтроки",НомерСтроки));
			
		ИначеЕсли ЧтениеXML.ПолучитьАтрибут("Тип")="РеквизитСтроки" Тогда
			Вложенность			= 4;
			
			ИмяРеквизита 		= ЧтениеXML.ПолучитьАтрибут("ИмяРеквизита");
			ЗначениеРеквизита 	= ЧтениеXML.ПолучитьАтрибут("ЗначениеРеквизита");
			Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
				Если Найти(ЗначениеРеквизита,Подстрока)=1 Тогда
					ПриведенноеЗначениеРеквизита = Сред(ЗначениеРеквизита,СтрДлина(Подстрока)+1,СтрДлина(ЗначениеРеквизита)-СтрДлина(Подстрока)-2);    
				Иначе
					ПриведенноеЗначениеРеквизита = Вычислить(ЗначениеРеквизита);    
				КонецЕсли;
				МассивСтрок = ДанныеОбъекта[ИмяТабличнойЧасти];
				СтрокаКоллекции = МассивСтрок[МассивСтрок.Количество()-1];
				СтрокаКоллекции.Вставить(ИмяРеквизита,ПриведенноеЗначениеРеквизита);
			КонецЕсли;
			
		КонецЕсли;
	ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
		Если Вложенность = 1 Тогда
			// создаем объект
			СсылочныйТип = (ГруппаОбъектов<>"РегистрыСведений");
			Если СсылочныйТип Тогда
				ТолькоПоиск = (ДанныеОбъекта.Свойство("ТолькоПоиск") И ДанныеОбъекта.ТолькоПоиск = Истина);
				
				Если ГруппаОбъектов<>"Константы" Тогда
					МетаданныеОбъекта = Метаданные[ГруппаОбъектов].Найти(ИмяОбъекта);
					Если МетаданныеОбъекта = Неопределено Тогда
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не загружен объект """+Строка(ДанныеОбъекта.Представление)+""" "+ГруппаОбъектов+"."+ИмяОбъекта);
						СоответствиеВыгруженныхОбъектов.Вставить(НомерОбъектаПоПорядку,Неопределено);
						Возврат;
					КонецЕсли;
					Попытка
						МенеджерОбъектов = Вычислить(ГруппаОбъектов);
						МенеджерОбъектов = МенеджерОбъектов[ИмяОбъекта];
					Исключение
						СоответствиеВыгруженныхОбъектов.Вставить(НомерОбъектаПоПорядку,Неопределено);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не загружен объект """+Строка(ДанныеОбъекта.Представление)+""" "+ГруппаОбъектов+"."+ИмяОбъекта+"
						|	"+ОписаниеОшибки());
						Возврат;
					КонецПопытки;
				КонецЕсли;
				НайденныйОбъект = Неопределено;
				Если ГруппаОбъектов = "Константы" Тогда
					Для Каждого ЭлементСвойств Из ДанныеОбъекта Цикл
						Попытка
							Если НЕ ЭлементСвойств.Ключ="ОписанияПолей" Тогда
								Константы[фин_ОбщегоНазначенияКлиентСервер.ИмяОбъектаИБ(ЭлементСвойств.Ключ)].Установить(ЭлементСвойств.Значение);
							КонецЕсли;
						Исключение
							Ошибок = 1;
						КонецПопытки;
					КонецЦикла;
				ИначеЕсли ГруппаОбъектов = "Документы" Тогда
					Если ДанныеОбъекта.Свойство("РежимПоиска") И ДанныеОбъекта.РежимПоиска = "Номер" Тогда
						НайденныйОбъект = МенеджерОбъектов.НайтиПоНомеру(ДанныеОбъекта.Номер,ДанныеОбъекта.Дата);
					КонецЕсли;
					Если ТолькоПоиск Тогда
						СоответствиеВыгруженныхОбъектов.Вставить(НомерОбъектаПоПорядку,НайденныйОбъект);
					Иначе
						ЗагрузитьДанныеВОбъект(НайденныйОбъект,МенеджерОбъектов,ДанныеОбъекта,Истина);
						СоответствиеВыгруженныхОбъектов.Вставить(НомерОбъектаПоПорядку,НайденныйОбъект);
					КонецЕсли;
				Иначе
					Если ДанныеОбъекта.Свойство("РежимПоиска") И ДанныеОбъекта.РежимПоиска = "Код" Тогда
						ПоРодителю 	= ГруппаОбъектов = "Справочники" И Метаданные[ГруппаОбъектов][ИмяОбъекта].Иерархический И Метаданные[ГруппаОбъектов][ИмяОбъекта].СерииКодов=Метаданные.СвойстваОбъектов.СерииКодовСправочника.ВПределахПодчинения;
						ПоВладельцу = ГруппаОбъектов = "Справочники" И Метаданные[ГруппаОбъектов][ИмяОбъекта].Владельцы.Количество()>0 И Метаданные[ГруппаОбъектов][ИмяОбъекта].СерииКодов=Метаданные.СвойстваОбъектов.СерииКодовСправочника.ВПределахПодчиненияВладельцу;
						Попытка
							Если ПоРодителю Тогда
								НайденныйОбъект = МенеджерОбъектов.НайтиПоКоду(ДанныеОбъекта.Код,,ДанныеОбъекта.Родитель);
							ИначеЕсли ПоВладельцу Тогда
								НайденныйОбъект = МенеджерОбъектов.НайтиПоКоду(ДанныеОбъекта.Код,,,ДанныеОбъекта.Владелец);
							Иначе
								НайденныйОбъект = МенеджерОбъектов.НайтиПоКоду(ДанныеОбъекта.Код);
							КонецЕсли;
						Исключение
							НайденныйОбъект = Неопределено;
							Ошибок = 1;
						КонецПопытки;
					ИначеЕсли ДанныеОбъекта.Свойство("РежимПоиска") И ДанныеОбъекта.РежимПоиска = "Наименование" Тогда
						ПоРодителю 	= ГруппаОбъектов = "Справочники" И Метаданные[ГруппаОбъектов][ИмяОбъекта].Иерархический И Метаданные[ГруппаОбъектов][ИмяОбъекта].СерииКодов=Метаданные.СвойстваОбъектов.СерииКодовСправочника.ВПределахПодчинения;
						ПоВладельцу = ГруппаОбъектов = "Справочники" И Метаданные[ГруппаОбъектов][ИмяОбъекта].Владельцы.Количество()>0 И Метаданные[ГруппаОбъектов][ИмяОбъекта].СерииКодов=Метаданные.СвойстваОбъектов.СерииКодовСправочника.ВПределахПодчиненияВладельцу;
						Попытка
							Если ПоРодителю Тогда
								НайденныйОбъект = МенеджерОбъектов.НайтиПоНаименованию(ДанныеОбъекта.Наименование,Истина,ДанныеОбъекта.Родитель);
							ИначеЕсли ПоВладельцу Тогда
								НайденныйОбъект = МенеджерОбъектов.НайтиПоНаименованию(ДанныеОбъекта.Наименование,Истина,,ДанныеОбъекта.Владелец);
							Иначе
								НайденныйОбъект = МенеджерОбъектов.НайтиПоНаименованию(ДанныеОбъекта.Наименование,Истина);
							КонецЕсли;
						Исключение
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
							НайденныйОбъект = Неопределено;
							Ошибок = 1;
						КонецПопытки;
					ИначеЕсли ДанныеОбъекта.Свойство("РежимПоиска") И ДанныеОбъекта.РежимПоиска = "ИмяПредопределенныхДанных" Тогда
						НайденныйОбъект = МенеджерОбъектов[ДанныеОбъекта.ИмяПредопределенныхДанных];
						СоответствиеВыгруженныхОбъектов.Вставить(НомерОбъектаПоПорядку,НайденныйОбъект);
						Возврат;
					КонецЕсли;
					Если ТолькоПоиск Тогда
						СоответствиеВыгруженныхОбъектов.Вставить(НомерОбъектаПоПорядку,НайденныйОбъект);
					Иначе
						ЗагрузитьДанныеВОбъект(НайденныйОбъект,МенеджерОбъектов,ДанныеОбъекта,Ложь);
						СоответствиеВыгруженныхОбъектов.Вставить(НомерОбъектаПоПорядку,НайденныйОбъект);
					КонецЕсли;
				КонецЕсли;
			Иначе
				МетаданныеОбъекта = Метаданные[ГруппаОбъектов].Найти(ИмяОбъекта);
				Если МетаданныеОбъекта = Неопределено Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не загружен объект "+ГруппаОбъектов+"."+ИмяОбъекта);
					Возврат;
				КонецЕсли;
				Попытка
					МенеджерОбъектов = Вычислить(ГруппаОбъектов);
					МенеджерОбъектов = МенеджерОбъектов[ИмяОбъекта];
				Исключение
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не загружен объект "+ГруппаОбъектов+"."+ИмяОбъекта+"
						|	"+ОписаниеОшибки());
					Возврат;
				КонецПопытки;
				НаборЗаписей = МенеджерОбъектов.СоздатьНаборЗаписей();
				Для Каждого Измерение Из Метаданные.РегистрыСведений[ИмяОбъекта].Измерения Цикл
					Если ДанныеОбъекта.Свойство(Измерение.Имя) Тогда
						НаборЗаписей.Отбор[Измерение.Имя].Установить(ДанныеОбъекта[Измерение.Имя]);
					КонецЕсли;
				КонецЦикла;
				НоваяСтрока = НаборЗаписей.Добавить();
				Для Каждого ЭлементСвойств Из ДанныеОбъекта Цикл
					Если ЭлементСвойств.Ключ="ОписанияПолей" Тогда
						Продолжить;
					КонецЕсли;
					ВидПоля = ДанныеОбъекта.ОписанияПолей.Получить(ЭлементСвойств.Ключ);
					Если ЗначениеЗаполнено(ВидПоля) И ВидПоля<>"Свойства" Тогда
						Если МетаданныеОбъекта[ВидПоля].Найти(ЭлементСвойств.Ключ)=Неопределено Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					Попытка
						НоваяСтрока[ЭлементСвойств.Ключ]=ЭлементСвойств.Значение;
					Исключение
						Ошибок = 1;
					КонецПопытки;
				КонецЦикла;
				Попытка
					НаборЗаписей.Записать();
				Исключение
					
				КонецПопытки;
				
			КонецЕсли;
		Иначе
			Вложенность = Вложенность - 1;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеВОбъект(НайденныйОбъект,МенеджерОбъектов,ДанныеОбъекта,ЭтоДокумент)
	Если ЗначениеЗаполнено(НайденныйОбъект) Тогда
		ОбъектИБ = НайденныйОбъект.ПолучитьОбъект();
	Иначе
		Если ЭтоДокумент Тогда
			ОбъектИБ = МенеджерОбъектов.СоздатьДокумент();
		ИначеЕсли ПланыСчетов.ТипВсеСсылки().СодержитТип(ТипЗнч(МенеджерОбъектов.ПустаяСсылка())) Тогда
			ОбъектИБ = МенеджерОбъектов.СоздатьСчет();
		ИначеЕсли ДанныеОбъекта.Свойство("ЭтоГруппа") И ДанныеОбъекта.ЭтоГруппа = Истина Тогда
			ОбъектИБ = МенеджерОбъектов.СоздатьГруппу();
		Иначе
			ОбъектИБ = МенеджерОбъектов.СоздатьЭлемент();
		КонецЕсли;
	КонецЕсли;
	МетаданныеОбъекта = ОбъектИБ.Метаданные();
	Если Найти(МетаданныеОбъекта.Имя,"_")=0 Тогда
		ОбъектИБ.ОбменДанными.Загрузка = Истина;
	КонецЕсли;
	Для Каждого ЭлементСвойств Из ДанныеОбъекта Цикл
		Если ЭлементСвойств.Ключ = "ТолькоПоиск" ИЛИ ЭлементСвойств.Ключ = "РежимПоиска" ИЛИ ЭлементСвойств.Ключ = "Представление" ИЛИ ЭлементСвойств.Ключ = "ЭтоГруппа" ИЛИ ЭлементСвойств.Ключ = "ОписанияПолей" Тогда
			Продолжить;
		ИначеЕсли ЭлементСвойств.Ключ = "ОбменДанными" Тогда
			ОбъектИБ.ОбменДанными.Загрузка = Истина;
			Продолжить;
		КонецЕсли;
		Если ТипЗнч(ЭлементСвойств.Значение)<>Тип("Массив") Тогда
			ВидПоля = ДанныеОбъекта.ОписанияПолей.Получить(ЭлементСвойств.Ключ);
			Если ЗначениеЗаполнено(ВидПоля) И ВидПоля<>"Свойства" Тогда
				Если МетаданныеОбъекта[ВидПоля].Найти(ЭлементСвойств.Ключ)=Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			Если ЭтоДокумент = Ложь И ДанныеОбъекта.Свойство("РежимПоиска") И ДанныеОбъекта.РежимПоиска <> "Код" Тогда
				Если ЭлементСвойств.Ключ = "Код" Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			Если ЭтоДокумент = Ложь И ДанныеОбъекта.Свойство("РежимПоиска") И ДанныеОбъекта.РежимПоиска = "Код" Тогда
				Если ЭлементСвойств.Ключ = "Наименование" И ЗначениеЗаполнено(НайденныйОбъект) Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			Если ЭтоДокумент=Истина И НЕ (ДанныеОбъекта.Свойство("РежимПоиска") И ДанныеОбъекта.РежимПоиска = "Номер") Тогда
				Если ЭлементСвойств.Ключ = "Номер" Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			Попытка
				ОбъектИБ[ЭлементСвойств.Ключ]=ЭлементСвойств.Значение;
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При установке свойства """+ЭлементСвойств.Ключ+""" в значение"""+Строка(ЭлементСвойств.Значение)+""" объекта """+Строка(ДанныеОбъекта.Представление)+""" "+МетаданныеОбъекта.ПолноеИмя()+" возникла ошибка:
				|	"+ОписаниеОшибки());
				Ошибок = 1;
			КонецПопытки;
		ИначеЕсли ЭтоДокумент ИЛИ НЕ (ДанныеОбъекта.Свойство("ЭтоГруппа") И ДанныеОбъекта.ЭтоГруппа = Истина) Тогда
			Попытка
				Если ЭлементСвойств.Ключ<>"ВидыСубконто" И МетаданныеОбъекта.ТабличныеЧасти.Найти(ЭлементСвойств.Ключ)=Неопределено Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найдена табличная часть """+ЭлементСвойств.Ключ+""" объекта """+Строка(ДанныеОбъекта.Представление)+""" "+МетаданныеОбъекта.ПолноеИмя()+" возникла ошибка:
					|	"+ОписаниеОшибки());
					Продолжить;
				КонецЕсли;
				ОбъектИБ[ЭлементСвойств.Ключ].Очистить();
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При очистке табличной части """+ЭлементСвойств.Ключ+""" объекта """+Строка(ДанныеОбъекта.Представление)+""" "+МетаданныеОбъекта.ПолноеИмя()+" возникла ошибка:
				|	"+ОписаниеОшибки());
				Ошибок = 1;
				Продолжить;
			КонецПопытки;
			Для Каждого ЭлементСтрока Из ЭлементСвойств.Значение Цикл
				НоваяСтрока = ОбъектИБ[ЭлементСвойств.Ключ].Добавить();
				Для Каждого ПолеСтроки Из ЭлементСтрока Цикл
					Если ПолеСтроки.Ключ = "НомерСтроки" ИЛИ  ПолеСтроки.Ключ = "Ссылка" Тогда
						Продолжить;
					КонецЕсли;
					Попытка
						НоваяСтрока[ПолеСтроки.Ключ]=ПолеСтроки.Значение;
					Исключение
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При установке реквизита """+ПолеСтроки.Ключ+""" табличной части """+ЭлементСвойств.Ключ+""" объекта """+Строка(ДанныеОбъекта.Представление)+""" "+МетаданныеОбъекта.ПолноеИмя()+" возникла ошибка:
						|	"+ОписаниеОшибки());
						Ошибок = 1;
						Продолжить;
					КонецПопытки;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Если НЕ ЗначениеЗаполнено(НайденныйОбъект) Тогда
		Если ЭтоДокумент Тогда
			Если НЕ (ДанныеОбъекта.Свойство("РежимПоиска") И ДанныеОбъекта.РежимПоиска = "Номер") Тогда
				ОбъектИБ.УстановитьНовыйНомер();
			КонецЕсли;
		Иначе
			Если НЕ (ДанныеОбъекта.Свойство("РежимПоиска") И ДанныеОбъекта.РежимПоиска = "Код") Тогда
				ОбъектИБ.УстановитьНовыйКод();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Попытка
		
		ОбъектИБ.Записать();
		Если НЕ ЗначениеЗаполнено(НайденныйОбъект) Тогда
			НайденныйОбъект = ОбъектИБ.Ссылка;
		КонецЕсли;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При записи объекта """+?(ДанныеОбъекта.Свойство("Представление"),Строка(ДанныеОбъекта.Представление),"")+""" "+МетаданныеОбъекта.ПолноеИмя()+" возникла ошибка:
		|	"+ОписаниеОшибки());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ПолучитьЭлементПеречисления(ИмяПеречисления,ИмяЭлемента)
	Если Метаданные.Перечисления.Найти(фин_ОбщегоНазначенияКлиентСервер.ИмяОбъектаИБ(ИмяПеречисления))=Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найдено значение """+ИмяЭлемента+""" перечисления """+ИмяПеречисления+"""");
		Возврат Неопределено;
	ИначеЕсли НЕ ЗначениеЗаполнено(ИмяЭлемента) Тогда
		Возврат Перечисления[фин_ОбщегоНазначенияКлиентСервер.ИмяОбъектаИБ(ИмяПеречисления)].ПустаяСсылка();	
	Иначе
		Возврат Перечисления[фин_ОбщегоНазначенияКлиентСервер.ИмяОбъектаИБ(ИмяПеречисления)][ИмяЭлемента];	
	КонецЕсли;
КонецФункции

Функция ПолучитьВыгруженныйОбъект(НомерОбъекта,СоответствиеВыгруженныхОбъектов)
	Возврат СоответствиеВыгруженныхОбъектов.Получить(НомерОбъекта);	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьДанные(Команда)
	Если ЗначениеЗаполнено(Объект.ПутьКФайлу) Тогда
		Если ФайловаяИБ Тогда
			ЗагрузитьДанныеНаСервере();
			ПоказатьПредупреждение(,"Готово");
		Иначе
			ОписаниеЗавершенияПомещения = Новый ОписаниеОповещения("ОбработкаПомещенияФайла",ЭтотОбъект);
			НачатьПомещениеФайла(ОписаниеЗавершенияПомещения,,Объект.ПутьКФайлу,Ложь,УникальныйИдентификатор);
		КонецЕсли;
	Иначе
		ПоказатьПредупреждение(,"Не указан файл");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПомещенияФайла(Результат,Адрес,ВыбранноеИмяФайла,ДополнительныеПараметры) Экспорт
	Если Результат Тогда
	    АдресФайлаНаСервере = Адрес;
		ЗагрузитьДанныеНаСервере();
		ПоказатьПредупреждение(,"Готово");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	НачатьЗапускПриложения(,Объект.ПутьКФайлу);
КонецПроцедуры

&НаСервере
Функция ОписаниеТиповИзСтроки(Строка)
	МассивСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Строка,"|");
	Типы = Новый Массив;
	Для Каждого СтрокаТипа Из МассивСтрок Цикл
		Попытка
			Если НЕ Метаданные.НайтиПоПолномуИмени(СтрЗаменить(СтрокаТипа,"Ссылка.","."))=Неопределено Тогда
				Тип = Тип(СтрокаТипа);
				Типы.Добавить(Тип);
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определен тип данных """+СтрокаТипа+"""");
			КонецЕсли;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка создания типа данных """+СтрокаТипа+"""");
		КонецПопытки;
	КонецЦикла;
	ОписаниеТипов = Новый ОписаниеТипов(Типы);
	Возврат ОписаниеТипов;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ФайловаяИБ = фин_ОбщегоНазначенияСервер.ИнформационнаяБазаФайловая();
КонецПроцедуры
