////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("ИмяТаблицы") Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Форма обработки не предназначена для самостоятельной работы!");
		Возврат;
	КонецЕсли;
	ИмяТаблицы = Параметры.ИмяТаблицы;
	Если Найти(ИмяТаблицы,"Справочник.")<>0 Тогда
		ИмяСправочника 		= Сред(ИмяТаблицы,Найти(ИмяТаблицы,".")+1);
		МетаданныеСправочника = Метаданные.Справочники[ИмяСправочника];
		ТекстЗапроса 		= Список.ТекстЗапроса;
		ТекстЗапроса 		= СтрЗаменить(ТекстЗапроса,"фин_ПлановаяНоменклатура",ИмяСправочника);
		Заголовок 			= МетаданныеСправочника.Синоним;
		ТекстПолей 			= "";
		Для Каждого Реквизит Из МетаданныеСправочника.Реквизиты Цикл
			ТекстПолей = ТекстПолей+",
			|	СписокСправочника."+Реквизит.Имя+" КАК "+Реквизит.Имя;
		КонецЦикла;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"СписокСправочника.Код","СписокСправочника.Код"+ТекстПолей);
		Список.ОсновнаяТаблица = "";
		Список.ТекстЗапроса =  ТекстЗапроса;
		Список.ОсновнаяТаблица = "Справочник."+ИмяСправочника;
		Элементы.Список.Обновить();
		Для Каждого Реквизит Из МетаданныеСправочника.Реквизиты Цикл
			Если Найти(Реквизит.Имя,"Удалить")<>0 Тогда
				Продолжить;
			КонецЕсли;
			Попытка
				РеквизитКолонка 			= Элементы.Добавить("Список"+Реквизит.Имя,Тип("ПолеФормы"),Элементы.ГруппаСпецифическихКолонок);
				РеквизитКолонка.ПутьКДанным	= "Список."+Реквизит.Имя;
				РеквизитКолонка.ТолькоПросмотр = Истина;
				РеквизитКолонка.Заголовок = Реквизит.Синоним;
				РеквизитКолонка.ЦветТекстаЗаголовка = Новый Цвет(0,66,66);
				РеквизитКолонка.ЦветФонаЗаголовка = Новый Цвет(176,196,222);
				РеквизитКолонка.ШрифтЗаголовка = Новый Шрифт(,9,Истина);
			Исключение
			КонецПопытки;
		КонецЦикла;
	 	Элементы.Список.Обновить();
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать