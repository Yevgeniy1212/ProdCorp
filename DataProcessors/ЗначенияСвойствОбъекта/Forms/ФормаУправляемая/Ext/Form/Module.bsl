
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьЗначенияСвойств(Объект,Параметры);
	Заголовок = "Свойства: " + Объект.ОбъектОтбораЗначений;
	ЗаполнитьСвойстваИЗначения();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСвойстваИЗначения()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ПрочитатьЗаполнитьСвойстваИЗначения();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Если Модифицированность Тогда
		Вопрос = "Измененные значения свойств не были записаны! Сохранить изменения?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНетОтмена);

		Если      Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьЗначенияСвойств();

		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЗначенияСвойств()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ЗаписатьЗначенияСвойств();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
КонецПроцедуры

&НаСервере
Процедура ОбработкаНового(НовыйОбъект)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ПроверитьДобавитьНовоеСвойство(НовыйОбъект, ОбработкаОбъект.СвойстваИЗначения);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЗначения(Команда)
	ВыполнитьЗапись();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗапись()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Если ОбработкаОбъект.ЗаписатьЗначенияСвойств() Тогда
		Модифицированность = Ложь;
	КонецЕсли;
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура Перечитать(Команда)
	Если Модифицированность Тогда
		Вопрос = "Измененные значения свойств не были записаны! Продолжить?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ОкОтмена);

		Если Ответ <> КодВозвратаДиалога.ОК Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ЗаполнитьСвойстваИЗначения();

	Модифицированность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СвойстваИЗначенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Элементы.СвойстваИЗначенияЗначение.ОграничениеТипа = УстановитьТипСвойства(Элементы.СвойстваИЗначения.ТекущиеДанные.Свойство);
КонецПроцедуры

&НаСервереБезКонтекста
Функция УстановитьТипСвойства(Свойство)
	Возврат Свойство.ТипЗначения;
КонецФункции

&НаКлиенте
Процедура СвойстваИЗначенияСвойствоПриИзменении(Элемент)
	Элементы.СвойстваИЗначенияЗначение.ОграничениеТипа = УстановитьТипСвойства(Элементы.СвойстваИЗначения.ТекущиеДанные.Свойство);
	Элементы.СвойстваИЗначения.ТекущиеДанные.Свойство = Элементы.СвойстваИЗначенияЗначение.ОграничениеТипа.ПривестиЗначение(Элементы.СвойстваИЗначения.ТекущиеДанные.Свойство);
КонецПроцедуры

&НаКлиенте
Процедура СвойстваИЗначенияЗначениеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СвойстваИЗначенияЗначениеОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Элементы.СвойстваИЗначенияЗначение.ОграничениеТипа = УстановитьТипСвойства(Элементы.СвойстваИЗначения.ТекущиеДанные.Свойство);
	Элементы.СвойстваИЗначения.ТекущиеДанные.Свойство = Элементы.СвойстваИЗначенияЗначение.ОграничениеТипа.ПривестиЗначение(Неопределено);

	Модифицированность = Истина;
КонецПроцедуры


