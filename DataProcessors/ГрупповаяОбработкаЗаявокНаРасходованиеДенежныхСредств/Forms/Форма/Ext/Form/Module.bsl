
&НаКлиенте
Процедура ЗаполнитьЗадачи(Команда)
	
	ЗаполнитьЗадачиНаСервере(); 	
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьЗадачиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗадачаИсполнителяПоСогласованиюПлатежей.Ссылка КАК Задача,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(ХранилищеДополнительнойИнформации.Ссылка, ЗНАЧЕНИЕ(Справочник.ХранилищеДополнительнойИнформации.ПустаяСсылка))) КАК КоличествоФайлов
	|ИЗ
	|	Задача.ЗадачаИсполнителяПоСогласованиюПлатежей КАК ЗадачаИсполнителяПоСогласованиюПлатежей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
	|		ПО ЗадачаИсполнителяПоСогласованиюПлатежей.БизнесПроцесс = ХранилищеДополнительнойИнформации.Объект
	|ГДЕ
	|	ЗадачаИсполнителяПоСогласованиюПлатежей.ТочкаМаршрута = &ТочкаМаршрута
	|	И ЗадачаИсполнителяПоСогласованиюПлатежей.БизнесПроцесс.РасчетнаяДатаПлатежа МЕЖДУ &ДатаНач И &ДатаКон
	|	И НЕ ЗадачаИсполнителяПоСогласованиюПлатежей.Выполнена
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗадачаИсполнителяПоСогласованиюПлатежей.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗадачаИсполнителяПоСогласованиюПлатежей.БизнесПроцесс.РасчетнаяДатаПлатежа";
	Запрос.УстановитьПараметр("ТочкаМаршрута", БизнесПроцессы.СогласованиеПлатежей.ТочкиМаршрута.ПроверкаВР);
	Запрос.УстановитьПараметр("ДатаНач", НачалоПериода);
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонецПериода));
	
	ТаблицаДокументов.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры


&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	Для Каждого СтрокаТЧ Из ТаблицаДокументов Цикл
		СтрокаТЧ.ФлагВыбора = Истина;	
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для Каждого СтрокаТЧ Из ТаблицаДокументов Цикл
		СтрокаТЧ.ФлагВыбора = Ложь;	
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ВыполнитьЗадачи(Команда)
	ВыполнитьЗадачиНаСервере();
	ОповеститьОбИзменении(ПредопределенноеЗначение("Задача.ЗадачаИсполнителяПоСогласованиюПлатежей.ПустаяСсылка"));
	ОповеститьОбИзменении(ПредопределенноеЗначение("БизнесПроцесс.СогласованиеПлатежей.ПустаяСсылка"));
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗадачиНаСервере()
	
	Для Каждого СтрокаТч Из ТаблицаДокументов Цикл
		Если СтрокаТч.ФлагВыбора Тогда
			Задача = СтрокаТч.Задача.ПолучитьОбъект();
			Задача.ВыполнитьЗадачу();
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьЗадачиНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьФорму("БизнесПроцесс.СогласованиеПлатежей.Форма.ФормаБизнесПроцесса", новый Структура("Ключ,Задача",ВернутьБП(ВыбраннаяСтрока.Задача),ВыбраннаяСтрока));
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьБП(Задача)
	возврат Задача.БизнесПроцесс;
КонецФункции	


&НаКлиенте
Процедура ОткрытьФайлы(Команда)
	
	ТекДанные = Элементы.ТаблицаДокументов.ТекущиеДанные;
	
	Если ТекДанные <> Неопределено Тогда
		
		ПараметрКоманды = ВернутьБП(ТекДанные.Задача);
		
		СтруктураДляСпискаИзображений = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, ПараметрКоманды, Ложь, Ложь);
		СтруктураДляСпискаДополнительныхФайлов = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, ПараметрКоманды, Ложь, Ложь);
		ОбязательныеОтборы = Новый Структура("Объект", ПараметрКоманды);
		
		УниверсальныеМеханизмы.ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, Неопределено);
			
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НачалоПериода = ТекущаяДата();
	КонецПериода = ТекущаяДата();
	
КонецПроцедуры

