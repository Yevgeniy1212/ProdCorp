////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РеквизитТаблица = Новый РеквизитФормы("РеквизитТаблица",Новый ОписаниеТипов("ТаблицаЗначений"),,"Результат проверки");
	МассивДобавить = Новый Массив;
	МассивДобавить.Добавить(РеквизитТаблица);
	ИзменитьРеквизиты(МассивДобавить);
	МассивДобавить = Новый Массив;
	ТаблицаРезультатИтоговая = Новый ТаблицаЗначений;
	РеквизитКолонка 	= Новый РеквизитФормы("НомерСтроки",Новый ОписаниеТипов("Строка"),"РеквизитТаблица","Номер строки");
	МассивДобавить.Добавить(РеквизитКолонка);
	РеквизитКолонка 	= Новый РеквизитФормы("Выполнено",Новый ОписаниеТипов("Булево"),"РеквизитТаблица","Выполнено");
	МассивДобавить.Добавить(РеквизитКолонка);
	
	ИзменитьРеквизиты(МассивДобавить);
	
	ГруппаКолонок = Неопределено;
	ЭлементФормы = Элементы.Добавить("РеквизитТаблица",Тип("ТаблицаФормы"),Элементы.РезультатыПроверки);
	ЭлементФормы.ПутьКДанным = "РеквизитТаблица";

	РеквизитКолонка 			= Элементы.Добавить("РеквизитТаблицаНомерСтроки",Тип("ПолеФормы"),ЭлементФормы);
	РеквизитКолонка.ПутьКДанным	= "РеквизитТаблица.НомерСтроки";
	РеквизитКолонка.ТолькоПросмотр = Истина;
	
	РеквизитКолонка 			= Элементы.Добавить("РеквизитТаблицаВыполнено",Тип("ПолеФормы"),ЭлементФормы);
	РеквизитКолонка.ПутьКДанным	= "РеквизитТаблица.Выполнено";
	РеквизитКолонка.ТолькоПросмотр = Истина;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ДекорацияЗакрытьНажатие(Элемент)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура НадписьПроверкаНажатие(Элемент)
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	ВыполнитьПроверку();
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументовПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ВидДокументов) Тогда
		НастроитьТипДокумента();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура НастроитьТипДокумента()
	Элементы.Документ.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка."+Объект.ВидДокументов.ПрограммныйИдентификатор);	
	Объект.Документ = Элементы.Документ.ОграничениеТипа.ПривестиЗначение(Объект.Документ);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПроверку()
	СтруктураТаблиц = Новый Структура;
	фин_ПроцедурыМеханизмовБюджетирования.ЗаполнитьПередаваемыеДвиженияВсемиНаборами(Объект.Документ.ПолучитьОбъект(),СтруктураТаблиц);
	ИсходныеДанные = 	?(	Объект.Условие.ВидДанных=Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоШапкеДокумента,
							Объект.Документ,
							?(	Объект.Условие.ВидДанных=Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоТабличнойЧасти,
								Объект.Документ[Объект.Условие.ИмяИсточника].Выгрузить(),
								СтруктураТаблиц[Сред(Объект.Условие.ИмяИсточника,Найти(Объект.Условие.ИмяИсточника,".")+1)])	);
	ПозицияКолонкиРезультата = 0;
	Если Объект.Условие.ВидДанных=Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоШапкеДокумента Тогда
		ТаблицаРезультат = Новый ТаблицаЗначений;
		ТаблицаРезультат.Добавить();
	Иначе
		ТаблицаРезультат = ИсходныеДанные.Скопировать();
		ПозицияКолонкиРезультата = 1;
		ИндексКН = ТаблицаРезультат.Колонки.Индекс(ТаблицаРезультат.Колонки.НомерСтроки); 
		Если ИндексКН<>0 Тогда
			ТаблицаРезультат.Колонки.Сдвинуть(ИндексКН,-ИндексКН);
		КонецЕсли;
	КонецЕсли;
	СтруктураДанныхДокумента = усд_УправлениеСогласованиемДокументов.СоздатьСтруктуруПоДаннымДокумента(Объект.Документ.ПолучитьОбъект());
	ТаблицаРезультат.Колонки.Вставить(ПозицияКолонкиРезультата,"Результат",Новый ОписаниеТипов("Булево"));
	ПозицияКолонкиРезультата = ПозицияКолонкиРезультата+1;
	Для Каждого СтрокаТЧ Из Объект.Условие.СоставныеЧастиУсловия Цикл
		ТаблицаРезультат.Колонки.Вставить(ПозицияКолонкиРезультата,"Результат"+Строка(СтрокаТЧ.НомерСтроки),Новый ОписаниеТипов("Булево"),"№"+Строка(СтрокаТЧ.НомерСтроки)+" по "+СтрокаТЧ.ИмяРеквизита);
		ПозицияКолонкиРезультата = ПозицияКолонкиРезультата+1;
	КонецЦикла;
	Для Каждого СтрокаТЗ Из ТаблицаРезультат Цикл
		СтрокаТЗ.Результат = усд_ПроцедурыСогласованияДокументов.УсловиеПоСтрокеВыполняется(Объект.Условие,Объект.Документ,СтрокаТЗ,ТаблицаРезультат,СтруктураДанныхДокумента);
	КонецЦикла;
	Если Объект.Условие.ВидДанных<>Перечисления.фин_ВидыОтраженийПервичныхДокументовВБюджетировании.ПоШапкеДокумента Тогда
		ТаблицаРезультат.Колонки.НомерСтроки.Имя = "НомерСтрокиТаблицыДокумента";
		ТаблицаРезультат.Колонки.НомерСтрокиТаблицыДокумента.Заголовок = "Номер строки таблицы документа";
	КонецЕсли;
	МассивУдалить = Новый Массив;
	Для Каждого РеквизитФормы Из ЭтотОбъект.ПолучитьРеквизиты() Цикл
		Если РеквизитФормы.Имя = "РеквизитТаблица" Тогда
			МассивУдалить.Добавить(РеквизитФормы.Имя);
			Если Элементы.Найти("РеквизитТаблица") <>Неопределено Тогда
				Элементы.Удалить(Элементы["РеквизитТаблица"]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Попытка
		ИзменитьРеквизиты(,МассивУдалить);
	Исключение
	КонецПопытки;
	РеквизитТаблица 	= Новый РеквизитФормы("РеквизитТаблица",Новый ОписаниеТипов("ТаблицаЗначений"),,"Результат проверки");
	МассивДобавить = Новый Массив;
	МассивДобавить.Добавить(РеквизитТаблица);
	ИзменитьРеквизиты(МассивДобавить);
	МассивДобавить = Новый Массив;
	ТаблицаРезультатИтоговая = Новый ТаблицаЗначений;
	Для Каждого Колонка Из ТаблицаРезультат.Колонки Цикл
		Если Колонка.ТипЗначения.СодержитТип(Тип("МоментВремени")) Тогда
			Продолжить;
		КонецЕсли;
		РеквизитКолонка 	= Новый РеквизитФормы(Колонка.Имя,?(Найти(Колонка.Имя,"Результат")<>0 И Колонка.ТипЗначения.СодержитТип(Тип("Булево")),Новый ОписаниеТипов("Строка"),Колонка.ТипЗначения),"РеквизитТаблица",Колонка.Заголовок);
		МассивДобавить.Добавить(РеквизитКолонка);
		ТаблицаРезультатИтоговая.Колонки.Добавить(Колонка.Имя,?(Найти(Колонка.Имя,"Результат")<>0 И Колонка.ТипЗначения.СодержитТип(Тип("Булево")),Новый ОписаниеТипов("Строка"),Колонка.ТипЗначения),Колонка.Заголовок);
	КонецЦикла;
	Для Каждого СтрокаТЗ Из ТаблицаРезультат Цикл
		НоваяСтрока = ТаблицаРезультатИтоговая.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЗ);
		Для Каждого Колонка Из ТаблицаРезультат.Колонки Цикл
			Если Найти(Колонка.Имя,"Результат")<>0 И Колонка.ТипЗначения.СодержитТип(Тип("Булево")) Тогда
				НоваяСтрока[Колонка.Имя] = ?(СтрокаТЗ[Колонка.Имя],"+","-");
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивДобавить);
	
	ГруппаКолонок = Неопределено;
	ЭлементФормы = Элементы.Добавить("РеквизитТаблица",Тип("ТаблицаФормы"),Элементы.РезультатыПроверки);
	ЭлементФормы.ПутьКДанным = "РеквизитТаблица";
	Для Каждого Колонка Из ТаблицаРезультатИтоговая.Колонки Цикл
		РеквизитКолонка 			= Элементы.Добавить("РеквизитТаблица"+Колонка.Имя,Тип("ПолеФормы"),?(Найти(Колонка.Имя,"Результат")<>0 И Колонка.Имя<>"Результат",ГруппаКолонок,ЭлементФормы));
		РеквизитКолонка.ПутьКДанным	= "РеквизитТаблица."+Колонка.Имя;
		РеквизитКолонка.ТолькоПросмотр = Истина;
		Если Колонка.Имя="Результат" Тогда
			ГруппаКолонок = Элементы.Добавить("РеквизитТаблицаГруппаПравил",Тип("ГруппаФормы"),ЭлементФормы);
			ГруппаКолонок.Вид = ВидГруппыФормы.ГруппаКолонок;
			ГруппаКолонок.Видимость = Истина;
			ГруппаКолонок.Заголовок = "Составные условия";
			ГруппаКолонок.ОтображатьВШапке = Истина;
			ГруппаКолонок.Группировка = ГруппировкаКолонок.Горизонтальная;
		КонецЕсли;
		РеквизитКолонка.ЦветФона = ?(Колонка.Имя="Результат",Новый Цвет(176,196,222),?(Найти(Колонка.Имя,"Результат")<>0,Новый Цвет(240,248,255),Новый Цвет(255,255,255)));
	КонецЦикла;
	
	// перенесем данные в таблицу
	ЗначениеВРеквизитФормы(ТаблицаРезультатИтоговая,"РеквизитТаблица");
	ЭлементФормы.ИзменятьСоставСтрок = Ложь;
	ЭлементФормы.КоманднаяПанель.Видимость = Ложь;
КонецПроцедуры
