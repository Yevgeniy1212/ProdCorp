#Если Клиент Тогда

Перем мСоответствиеНазначений Экспорт;
Перем мСтруктураДляОтбораПоКатегориям Экспорт; // содержит связь отборов текста запроса Построителя и значений категорий

Процедура ЗаполнитьНачальныеНастройки(НачальноеЗаполнение = Истина) Экспорт
	
	// структура представлений полей
	СтруктураПредставлениеПолей = Новый Структура();
	СтруктураФорматаПолей = Новый Структура();
	
	Если ИмяРегистра = "РаботникиОрганизаций" Тогда 
		
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
			|	РаботникиОрганизации.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния";
		
		Если ВыбиратьМестоРаботы Тогда
			ТекстЗапроса = ТекстЗапроса	+ ",
				|	РаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,
				|	РаботникиОрганизации.Сотрудник.Код КАК ТабельныйНомер,
				|	РаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
				|	РаботникиОрганизации.Должность КАК Должность,
				|	РаботникиОрганизации.РаботаетПоДоговоруГПХ КАК РаботаетПоДоговоруГПХ,
				|	ЗНАЧЕНИЕ(Документ.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка) КАК ДокументОснование,
				|	РаботникиОрганизации.ПодразделениеОрганизации КАК Подразделение";
		КонецЕсли;

		ТекстРаботникиОрганизации = "
		|ВЫБРАТЬ
		|	РаботникиОрганизации.Организация,
		|	РаботникиОрганизации.ОбособленноеПодразделение,
		|	РаботникиОрганизации.Сотрудник,
		|	РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
		|	РаботникиОрганизации.ПричинаИзмененияСостояния,
		|	РаботникиОрганизации.ГрафикРаботы,
		|	РаботникиОрганизации.ЗанимаемыхСтавок,
		|	РаботникиОрганизации.Должность,
		|	ЗНАЧЕНИЕ(Документ.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка) КАК ДокументОснование,
		|	РаботникиОрганизации.ПодразделениеОрганизации,
		|	РаботникиОрганизации.Период,
		|	РаботникиОрганизации.Сотрудник.ВидЗанятости КАК ВидЗанятости
		|ИЗ";
		
		Если НЕ Уникальность Тогда
			
			ТекстРаботникиОрганизации = ТекстРаботникиОрганизации + "
			|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизации
			|";
			
		Иначе
			
			ТекстРаботникиОрганизации = ТекстРаботникиОрганизации + "
			|	(ВЫБРАТЬ
			|		РаботникиОрганизации.Сотрудник,
			|		МАКСИМУМ(РаботникиОрганизации.Период) КАК Период
			|	ИЗ
			|		РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
			|	ГДЕ
			|		РаботникиОрганизации.Организация = &ГоловнаяОрганизация
			|		И РаботникиОрганизации.Период <= &ДатаАктуальности
			|		И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
			|
			|	СГРУППИРОВАТЬ ПО
			|		РаботникиОрганизации.Сотрудник) КАК ПоследниеДатыДвижений
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
			|		ПО ПоследниеДатыДвижений.Сотрудник = РаботникиОрганизации.Сотрудник
			|			И ПоследниеДатыДвижений.Период = РаботникиОрганизации.Период
			|			И РаботникиОрганизации.Организация = &ГоловнаяОрганизация
			|			И (РаботникиОрганизации.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
			|";
		
		КонецЕсли;
		
		Если НЕ Уникальность Тогда
		
		    ТекстДоговорникиОрганизации = "
			|ВЫБРАТЬ
			|	ВЫБОР КОГДА ДоговорникиОрганизации.Организация.ГоловнаяОрганизация = Значение(Справочник.Организации.ПустаяСсылка) 
			|		 	ТОГДА ДоговорникиОрганизации.Организация
			|		ИНАЧЕ ДоговорникиОрганизации.Организация.ГоловнаяОрганизация
			|	КОНЕЦ КАК Организация,
			|	ДоговорникиОрганизации.Организация КАК ОбособленноеПодразделение,
			|	ДоговорникиОрганизации.Сотрудник,
			|	ВЫБОР
			|		КОГДА ДоговорникиОрганизации.ДатаОкончания < &ДатаАктуальности
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
			|	КОНЕЦ КАК ПричинаИзмененияСостояния,
			|	ЗНАЧЕНИЕ(Документ.ПриемНаРаботуВОрганизацию.ПустаяСсылка) КАК Приказ,
			|	ДоговорникиОрганизации.Ссылка КАК ДокументОснование,
			|	ДоговорникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
			|	ДоговорникиОрганизации.Должность КАК Должность,
			|	ДоговорникиОрганизации.ДатаНачала,
			|	ДоговорникиОрганизации.ДатаОкончания КАК ДатаОкончания
			|ИЗ
			|	Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорникиОрганизации
			|ГДЕ
			|	ДоговорникиОрганизации.Организация = &ОбособленноеПодразделение
			|	И ДоговорникиОрганизации.ДатаНачала <= &ДатаАктуальности
			|";
		
		Иначе 
	    
		    ТекстДоговорникиОрганизации = "
			|ВЫБРАТЬ
			|	ДоговорникиОрганизации.Организация КАК Организация,
			|	ДоговорникиОрганизации.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
			|	ДоговорникиОрганизации.Сотрудник,
			|	ВЫБОР
			|		КОГДА МАКСИМУМ(ДоговорникиОрганизации.ДатаОкончания) < &ДатаАктуальности
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
			|	КОНЕЦ КАК ПричинаИзмененияСостояния,
			|	МАКСИМУМ(ДоговорникиОрганизации.Договор) КАК ДокументОснование,
			|	МАКСИМУМ(ДоговорникиОрганизации.ПодразделениеОрганизации) КАК ПодразделениеОрганизации,
			|	МАКСИМУМ(ДоговорникиОрганизации.Должность) КАК Должность,
			|	ДоговорникиОрганизации.ДатаНачала,
			|	МАКСИМУМ(ДоговорникиОрганизации.ДатаОкончания) КАК ДатаОкончания
			|ИЗ
			|	РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|								ДоговорникиОрганизации.Сотрудник,
			|								ДоговорникиОрганизации.Организация,
			|								МАКСИМУМ(ДоговорникиОрганизации.ДатаНачала) КАК ДатаНачала
			|							ИЗ
			|								РегистрСведений.ДоговорникиОрганизаций КАК ДоговорникиОрганизации
			|							ГДЕ
			|								ДоговорникиОрганизации.Организация = &ГоловнаяОрганизация
			|								И ДоговорникиОрганизации.ДатаНачала <= &ДатаАктуальности
			|							СГРУППИРОВАТЬ ПО
			|								ДоговорникиОрганизации.Сотрудник,
			|								ДоговорникиОрганизации.Организация) КАК АктуальныеДоговоры
			|		ПО ДоговорникиОрганизации.Сотрудник = АктуальныеДоговоры.Сотрудник
			|			И ДоговорникиОрганизации.Организация = АктуальныеДоговоры.Организация
			|			И ДоговорникиОрганизации.ДатаНачала = АктуальныеДоговоры.ДатаНачала
			|
			|СГРУППИРОВАТЬ ПО
			|	ДоговорникиОрганизации.Организация,
			|	ДоговорникиОрганизации.ОбособленноеПодразделение,
			|	ДоговорникиОрганизации.Сотрудник,
			|	ДоговорникиОрганизации.ДатаНачала
			|";
		
		КонецЕсли;
		
		Если НЕ ВключатьДоговорников Тогда
			
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	РаботникиОрганизации.Организация,
			|	РаботникиОрганизации.ОбособленноеПодразделение,
			|	РаботникиОрганизации.Сотрудник,
			|	РаботникиОрганизации.ПричинаИзмененияСостояния,
			|	РаботникиОрганизации.ГрафикРаботы,
			|	РаботникиОрганизации.Сотрудник.Код,
			|	РаботникиОрганизации.ЗанимаемыхСтавок,
			|	РаботникиОрганизации.Должность,
			|	РаботникиОрганизации.ДокументОснование,
			|	РаботникиОрганизации.ПодразделениеОрганизации,
			|	РаботникиОрганизации.Период,
			|	РаботникиОрганизации.Сотрудник.ВидЗанятости,
			|	NULL КАК ДатаПриема,
			|	ЛОЖЬ КАК РаботаетПоДоговоруГПХ
			|ИЗ
			|	(" + ТекстРаботникиОрганизации + ") КАК РаботникиОрганизации
			|";
			
		Иначе
		
			Если НЕ Уникальность Тогда
				
				ТекстЗапроса = "
				|ВЫБРАТЬ
				|	РаботникиОрганизации.Организация,
				|	РаботникиОрганизации.ОбособленноеПодразделение,
				|	РаботникиОрганизации.Сотрудник,
				|	РаботникиОрганизации.Сотрудник.ФизЛицо,
				|	РаботникиОрганизации.ПричинаИзмененияСостояния,
				|	РаботникиОрганизации.ГрафикРаботы,
				|	РаботникиОрганизации.Сотрудник.Код,
				|	РаботникиОрганизации.ЗанимаемыхСтавок,
				|	РаботникиОрганизации.Должность,
				|	РаботникиОрганизации.ДокументОснование,
				|	РаботникиОрганизации.ПодразделениеОрганизации,
				|	РаботникиОрганизации.Период,
				|	РаботникиОрганизации.Сотрудник.ВидЗанятости,
				|	NULL КАК ДатаПриема,
				|	ЛОЖЬ КАК РаботаетПоДоговоруГПХ
				|ИЗ
				|	(" + ТекстРаботникиОрганизации + ") КАК РаботникиОрганизации
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ДоговорникиОрганизации.Организация,
				|	ДоговорникиОрганизации.ОбособленноеПодразделение,
				|	ДоговорникиОрганизации.Сотрудник,
				|	ДоговорникиОрганизации.Сотрудник.ФизЛицо,
				|	ДоговорникиОрганизации.ПричинаИзмененияСостояния,
				|	ДоговорникиОрганизации.Сотрудник.Код КАК ТабельныйНомер,
				|	NULL КАК ГрафикРаботы,
				|	NULL КАК ЗанимаемыхСтавок,
				|	ДоговорникиОрганизации.Должность,
				|	ДоговорникиОрганизации.ДокументОснование,
				|	ДоговорникиОрганизации.ПодразделениеОрганизации,
				|	ДОБАВИТЬКДАТЕ(ДоговорникиОрганизации.ДатаОкончания, ДЕНЬ, 1) КАК Период,
				|	""По договору ГПХ"" КАК ВидЗанятости,
				|	ДоговорникиОрганизации.ДатаНачала КАК ДатаПриема,
				|	ИСТИНА КАК РаботаетПоДоговоруГПХ
				|ИЗ
				|	(" + ТекстДоговорникиОрганизации + ") КАК ДоговорникиОрганизации
				|";
				
			Иначе
			
				ТекстЗапроса = "
				|ВЫБРАТЬ
				|	ЕСТЬNULL(РаботникиОрганизации.Организация, ДоговорникиОрганизации.Организация) КАК Организация,
				|	ЕСТЬNULL(РаботникиОрганизации.ОбособленноеПодразделение, ДоговорникиОрганизации.ОбособленноеПодразделение) КАК ОбособленноеПодразделение,
				|	ЕСТЬNULL(РаботникиОрганизации.Сотрудник, ДоговорникиОрганизации.Сотрудник) КАК Сотрудник,
				|	ЕСТЬNULL(РаботникиОрганизации.ПричинаИзмененияСостояния, ДоговорникиОрганизации.ПричинаИзмененияСостояния) КАК ПричинаИзмененияСостояния,
				|	РаботникиОрганизации.ГрафикРаботы,
				|	РаботникиОрганизации.Сотрудник.Код,
				|	РаботникиОрганизации.ЗанимаемыхСтавок,
				|	ЕСТЬNULL(РаботникиОрганизации.Должность, ДоговорникиОрганизации.Должность) КАК Должность,
				|	ВЫБОР
				|		КОГДА НЕ(РаботникиОрганизации.Сотрудник ЕСТЬ NULL)
				|			ТОГДА ЗНАЧЕНИЕ(Документ.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка)
				|		ИНАЧЕ ДоговорникиОрганизации.ДокументОснование
				|	КОНЕЦ КАК ДокументОснование,
				|	ЕСТЬNULL(РаботникиОрганизации.ПодразделениеОрганизации, ДоговорникиОрганизации.ПодразделениеОрганизации) КАК ПодразделениеОрганизации,
				|	ЕСТЬNULL(РаботникиОрганизации.Период, ДОБАВИТЬКДАТЕ(ДоговорникиОрганизации.ДатаОкончания, ДЕНЬ, 1)) КАК Период,
				|	ВЫБОР
				|		КОГДА НЕ(РаботникиОрганизации.Сотрудник ЕСТЬ NULL)
				|			ТОГДА РаботникиОрганизации.Сотрудник.ВидЗанятости
				|		ИНАЧЕ ""По договору ГПХ""
				|	КОНЕЦ КАК ВидЗанятости,
				|	ДоговорникиОрганизации.ДатаНачала КАК ДатаПриема,
				|	ВЫБОР
				|		КОГДА НЕ (РаботникиОрганизации.Сотрудник ЕСТЬ NULL)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ИСТИНА
				|	КОНЕЦ КАК РаботаетПоДоговоруГПХ
				|ИЗ
				|	(" + ТекстРаботникиОрганизации + ") КАК РаботникиОрганизации
				|	ПОЛНОЕ СОЕДИНЕНИЕ (" + ТекстДоговорникиОрганизации + ") КАК ДоговорникиОрганизации
				|		ПО РаботникиОрганизации.Организация = ДоговорникиОрганизации.Организация
				|			И РаботникиОрганизации.Сотрудник = ДоговорникиОрганизации.Сотрудник
				|";
				
			КонецЕсли;
		
		КонецЕсли;

		ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РаботникиОрганизации.Организация,"+?(куфиб_ВыбиратьСтруктурноеПодразделение,"   // - КУФИБ - начало
		|	ЕСТЬNULL(СтруктурныеПодразделения.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК СтруктурноеПодразделениеСотрудника,","")+" // - КУФИБ - конец
		|	РаботникиОрганизации.ОбособленноеПодразделение,
		|	РаботникиОрганизации.Сотрудник,
		|	РаботникиОрганизации.Сотрудник.ФизЛицо КАК ФизЛицо,
		|	РаботникиОрганизации.ПричинаИзмененияСостояния,
		|	РаботникиОрганизации.ГрафикРаботы,
		|	РаботникиОрганизации.Сотрудник.Код КАК ТабельныйНомер,
		|	РаботникиОрганизации.ЗанимаемыхСтавок,
		|	РаботникиОрганизации.Должность,
		|	РаботникиОрганизации.ДокументОснование,
		|	РаботникиОрганизации.ПодразделениеОрганизации,
		|	РаботникиОрганизации.Период,
		|	РаботникиОрганизации.Сотрудник.ВидЗанятости,
		|	РаботникиОрганизации.ДатаПриема,
		|	РаботникиОрганизации.РаботаетПоДоговоруГПХ
		|ИЗ
		|	(" + ТекстЗапроса + ") КАК РаботникиОрганизации
		|
		|		{ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|								РаботникиОрганизации.Сотрудник,
		|								РаботникиОрганизации.Организация,
		|								МАКСИМУМ(РаботникиОрганизации.Период) КАК Период
		|							ИЗ
		|								РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|							ГДЕ
		|								РаботникиОрганизации.Период <= &ДатаАктуальности
		|								И РаботникиОрганизации.Организация = &ГоловнаяОрганизация
		|								И РаботникиОрганизации.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
		|							СГРУППИРОВАТЬ ПО
		|								РаботникиОрганизации.Сотрудник,
		|								РаботникиОрганизации.Организация) КАК ПриказыОПриеме
		|			ПО РаботникиОрганизации.Сотрудник = ПриказыОПриеме.Сотрудник
		|				И РаботникиОрганизации.Организация = ПриказыОПриеме.Организация}";
		// - КУФИБ - начало
		Если куфиб_ВыбиратьСтруктурноеПодразделение Тогда
			ТекстЗапроса = ТекстЗапроса+"
			|ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ 
			|	СтруктурныеПодразделения.Сотрудник,
			|	СтруктурныеПодразделения.СтруктурноеПодразделение
			|ИЗ
			|	РегистрСведений.общ_РеглУчетВзаиморасчетовССотрудникамиОрганизаций.СрезПоследних(&ДатаАктуальности, Организация = &ГоловнаяОрганизация) КАК СтруктурныеПодразделения) КАК СтруктурныеПодразделения
			|	ПО РаботникиОрганизации.Сотрудник = СтруктурныеПодразделения.Сотрудник";
		КонецЕсли;
		// - КУФИБ - конец
	Иначе 	
	                                       
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РаботникиОрганизации.ФизЛицо КАК ФизЛицо,
		|	РаботникиОрганизации.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния";
		
		Если ВыбиратьСотрудника Тогда
			ТекстЗапроса = ТекстЗапроса + ",	
			|	Сотрудники.Сотрудник КАК Сотрудник,
			|	Сотрудники.Сотрудник.Наименование КАК ФИО"
		КонецЕсли;
		
		Если ВыбиратьМестоРаботы Тогда
			ТекстЗапроса = ТекстЗапроса	+ ",
			|	РаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,
			|	Сотрудники.Сотрудник.Код КАК ТабельныйНомер,
			|	РаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
			|	РаботникиОрганизации.Должность КАК Должность,
			|	РаботникиОрганизации.Подразделение КАК Подразделение";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса	+ "
		|ИЗ
		|	РегистрСведений.Работники.СрезПоследних(&ДатаАктуальности, ) КАК РаботникиОрганизации
		|		{ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ДатыПоследнихДвиженийРаботников.Период,
		|			ДатыПоследнихДвиженийРаботников.ФизЛицо,
		|			ДанныеПоРаботникуПриНазначении.Регистратор КАК Приказ
		|		ИЗ
		|			(ВЫБРАТЬ
		|				МАКСИМУМ(Работники.Период) КАК Период,
		|				ТЧРаботникиОрганизации.Физлицо КАК ФизЛицо
		|			ИЗ
		|				РегистрСведений.Работники.СрезПоследних(&ДатаАктуальности) КАК ТЧРаботникиОрганизации
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК Работники
		|					ПО ТЧРаботникиОрганизации.Физлицо = Работники.Физлицо
		|						И Работники.Период <= ТЧРаботникиОрганизации.Период
		|						И (Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу))
		|			{ГДЕ
		|				ТЧРаботникиОрганизации.Должность КАК Должность,
		|				ТЧРаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,
		|				ТЧРаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
		|				ТЧРаботникиОрганизации.Подразделение КАК Подразделение}
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТЧРаботникиОрганизации.Физлицо) КАК ДатыПоследнихДвиженийРаботников
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК ДанныеПоРаботникуПриНазначении
		|				ПО ДанныеПоРаботникуПриНазначении.Период = ДатыПоследнихДвиженийРаботников.Период
		|					И ДатыПоследнихДвиженийРаботников.ФизЛицо = ДанныеПоРаботникуПриНазначении.Физлицо) КАК ПриказыОПриеме
		|				ПО ПриказыОПриеме.ФизЛицо = РаботникиОрганизации.ФизЛицо}";
		
		Если ВыбиратьСотрудника Тогда
			ТекстЗапроса = ТекстЗапроса + "	
				|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|	СписокСотрудников.Сотрудник КАК Сотрудник,
				|	СписокСотрудников.Физлицо КАК Физлицо
				|ИЗ
				|	(ВЫБРАТЬ
				|		МАКСИМУМ(РаботникиОсновноеМесто.Сотрудник) КАК Сотрудник,
				|		РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
				|		1 КАК Приоритет
				|	ИЗ
				|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОсновноеМесто
				|	ГДЕ
				|		РаботникиОсновноеМесто.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
				|	
				|	СГРУППИРОВАТЬ ПО
				|		РаботникиОсновноеМесто.Сотрудник.Физлицо
				|	
				|	ОБЪЕДИНИТЬ
				|	
				|	ВЫБРАТЬ
				|		МАКСИМУМ(РаботникиСовместительство.Сотрудник),
				|		РаботникиСовместительство.Сотрудник.Физлицо,
				|		2
				|	ИЗ
				|		РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)) КАК РаботникиСовместительство
				|	ГДЕ
				|		РаботникиСовместительство.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
				|	
				|	СГРУППИРОВАТЬ ПО
				|		РаботникиСовместительство.Сотрудник.Физлицо
				|	
				|	ОБЪЕДИНИТЬ
				|	
				|	ВЫБРАТЬ
				|		МАКСИМУМ(СотрудникиДУ.Ссылка),
				|		СотрудникиДУ.Физлицо,
				|		ВЫБОР
				|			КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
				|				ТОГДА 3
				|			КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
				|				ТОГДА 4
				|			ИНАЧЕ 5
				|		КОНЕЦ
				|	ИЗ
				|		Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
				|	
				|	СГРУППИРОВАТЬ ПО
				|		СотрудникиДУ.Физлицо,
				|		ВЫБОР
				|			КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
				|				ТОГДА 3
				|			КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
				|				ТОГДА 4
				|			ИНАЧЕ 5
				|		КОНЕЦ) КАК СписокСотрудников
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|			СписокФизическихЛиц.Физлицо КАК Физлицо,
				|			МИНИМУМ(СписокФизическихЛиц.Приоритет) КАК Приоритет
				|		ИЗ
				|			(ВЫБРАТЬ
				|				РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
				|				1 КАК Приоритет
				|			ИЗ
				|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(
				|						&ДатаАктуальности,
				|						Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
				|							И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОсновноеМесто
				|			ГДЕ
				|				РаботникиОсновноеМесто.ПричинаИзмененияСостояния  <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				РаботникиСовместительство.Сотрудник.Физлицо,
				|				2
				|			ИЗ
				|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(
				|						&ДатаАктуальности,
				|						Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
				|							И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)) КАК РаботникиСовместительство
				|			ГДЕ
				|				РаботникиСовместительство.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				СотрудникиДУ.Физлицо,
				|				ВЫБОР
				|					КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
				|						ТОГДА 3
				|					КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
				|						ТОГДА 4
				|					ИНАЧЕ 5
				|				КОНЕЦ
				|			ИЗ
				|				Справочник.СотрудникиОрганизаций КАК СотрудникиДУ) КАК СписокФизическихЛиц
				|		
				|		СГРУППИРОВАТЬ ПО
				|			СписокФизическихЛиц.Физлицо) КАК СписокФизическихЛиц
				|		ПО СписокСотрудников.Физлицо = СписокФизическихЛиц.Физлицо
				|			И СписокСотрудников.Приоритет = СписокФизическихЛиц.Приоритет) КАК Сотрудники
				|		ПО РаботникиОрганизации.ФизЛицо = Сотрудники.Физлицо";
		КонецЕсли;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+ "
	|		//ДАННЫЕ О ФИЗЛИЦЕ: СОЕДИНЕНИЯ
	|		//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ";
	
	Если НЕ ВключатьУволенных Тогда 
		ТекстЗапроса = ТекстЗапроса	+ "
		|ГДЕ
		|	РаботникиОрганизации.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|"
	ИначеЕсли ЗначениеЗаполнено(ДатаУволенных) Тогда
		ТекстЗапроса = ТекстЗапроса	+ "
		|ГДЕ
		|	(РаботникиОрганизации.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) или (ДОБАВИТЬКДАТЕ(РаботникиОрганизации.Период, ДЕНЬ, -1) > &ДатаУволенных)
		|"
	КонецЕсли;
	
	Если ИмяРегистра = "РаботникиОрганизаций" Тогда 
		ТекстЗапроса = ТекстЗапроса	+ "
			|
			|{ГДЕ
			|	РаботникиОрганизации.Сотрудник КАК Работник,"+?(куфиб_ВыбиратьСтруктурноеПодразделение," // - КУФИБ - начало
			|	ЕСТЬNULL(СтруктурныеПодразделения.СтруктурноеПодразделение,ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК СтруктурноеПодразделениеСотрудника,","")+" // КУФИБ - конец
			|	РаботникиОрганизации.Сотрудник.Родитель КАК Группа,
			|	РаботникиОрганизации.Должность.* КАК Должность,
			|	РаботникиОрганизации.ГрафикРаботы.* КАК ГрафикРаботы,
			|	РаботникиОрганизации.Сотрудник.Код.* КАК ТабельныйНомер,
			|	РаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
			|	ЕСТЬNULL(ПриказыОПриеме.Период, РаботникиОрганизации.ДатаПриема) КАК ДатаПриема,
			|	РаботникиОрганизации.РаботаетПоДоговоруГПХ КАК РаботаетПоДоговоруГПХ,
			|	РаботникиОрганизации.Сотрудник.ВидЗанятости КАК ВидЗанятости,
			|	РаботникиОрганизации.ПодразделениеОрганизации КАК Подразделение,
			|	РаботникиОрганизации.ОбособленноеПодразделение КАК ОбособленноеПодразделение
			| 	//ДАННЫЕ О ФИЗЛИЦЕ: ПОЛЯ
			|	//СВОЙСТВА
			|	//КАТЕГОРИИ
			|}
			|
			|УПОРЯДОЧИТЬ ПО
			|	РаботникиОрганизации.Сотрудник.Наименование
			|
			|";

	Иначе 	
		ТекстЗапроса = ТекстЗапроса	+ "
			|
			|{ГДЕ
			|	РаботникиОрганизации.ФизЛицо КАК Работник,
			|	РаботникиОрганизации.ФизЛицо.Родитель КАК Группа,
			|	РаботникиОрганизации.Должность.* КАК Должность,
			|	РаботникиОрганизации.ГрафикРаботы.* КАК ГрафикРаботы,
			|	РаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
			|	ПриказыОПриеме.Период КАК ДатаПриема,
			|	РаботникиОрганизации.Подразделение КАК Подразделение
			| 	//ДАННЫЕ О ФИЗЛИЦЕ: ПОЛЯ
			|	//СВОЙСТВА
			|	//КАТЕГОРИИ
			|}
			|
			|УПОРЯДОЧИТЬ ПО
			|	РаботникиОрганизации.ФизЛицо.Наименование
            |";
	КонецЕсли;
                         
	// Преобразуем текст запроса для получения полной информации о физлице
	ПроцедурыУправленияПерсоналом.ДобавитьВТекстПостроителяДанныеОФизлице(ТекстЗапроса, СтруктураПредставлениеПолей, СтруктураФорматаПолей, "РаботникиОрганизации", ?(ИмяРегистра = "Работники", "Физлицо", "Сотрудник.Физлицо"));	
	
	// При использовании свойств и категорий в текст запроса добавляются дополнительные поля
	Если ИспользоватьСвойстваИКатегории Тогда
                                                 
		// Свойства и категории, назначаемые пользователем:
		ТаблицаПолей = Новый ТаблицаЗначений;
		ТаблицаПолей.Колонки.Добавить("ПутьКДанным");  // описание поля запроса поля, для которого добавляются свойства и категории. Используется в условии соединения с регистром сведений, хранящим значения свойств или категорий
		ТаблицаПолей.Колонки.Добавить("Представление");// представление поля, для которого добавляются свойства и категории. 
		ТаблицаПолей.Колонки.Добавить("Назначение");   // назначение свойств/категорий объектов для данного поля
		ТаблицаПолей.Колонки.Добавить("ТипЗначения");  // тип значения поля, для которого добавляются свойства и категории. Используется, если не установлено назначение
		ТаблицаПолей.Колонки.Добавить("НетКатегорий"); // признак НЕиспользования категорий для объекта

		НоваяСтрока = ТаблицаПолей.Добавить();
		
		Если ИмяРегистра = "РаботникиОрганизаций" Тогда
			НоваяСтрока.ПутьКДанным = "РаботникиОрганизации.Сотрудник";
			НоваяСтрока.Представление = "Работник";
			НоваяСтрока.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_СотрудникиОрганизаций;
		Иначе
			НоваяСтрока.ПутьКДанным = "РаботникиОрганизации.ФизЛицо";
			НоваяСтрока.Представление = "Работник";
			НоваяСтрока.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица;
        КонецЕсли;

		// Добавим строки запроса, необходимые для использования свойств и категорий
		ТекстПоляКатегорий = "";
		ТекстПоляСвойств = "";
		УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, мСоответствиеНазначений, ПостроительОтчета.Параметры,,ТекстПоляКатегорий,ТекстПоляСвойств,,,,"//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ",,мСтруктураДляОтбораПоКатегориям);
	КонецЕсли;						  
	                                
	ПостроительОтчета.Текст = ТекстЗапроса;							  
	
	Если ИспользоватьСвойстваИКатегории Тогда
		УправлениеОтчетами.УстановитьТипыЗначенийСвойствИКатегорийДляОтбора(ПостроительОтчета, ТекстПоляКатегорий, ТекстПоляСвойств, мСоответствиеНазначений, СтруктураПредставлениеПолей);
	КонецЕсли;
	
	ПостроительОтчета.Параметры.Вставить("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
							  
	//представление полей запроса
	СтруктураПредставлениеПолей.Вставить("Группа", "Группа физ.лиц");
	СтруктураПредставлениеПолей.Вставить("ОбособленноеПодразделение", "Организация");
	СтруктураПредставлениеПолей.Вставить("Работник", "Сотрудник");
	
	Если ИмяРегистра = "РаботникиОрганизаций" Тогда 
		СтруктураПредставлениеПолей.Вставить("ВидЗанятости", "Вид занятости");
		СтруктураПредставлениеПолей.Вставить("РаботаетПоДоговоруГПХ", "Работает по договору ГПХ");
		// - КУФИБ - начало
		Если куфиб_ВыбиратьСтруктурноеПодразделение Тогда 
			СтруктураПредставлениеПолей.Вставить("СтруктурноеПодразделениеСотрудника", "Структурное подразделение");
		КонецЕсли;
		// - КУФИБ - конец
	КонецЕсли;
	СтруктураПредставлениеПолей.Вставить("ДатаПриема", "Дата приема");
	СтруктураПредставлениеПолей.Вставить("ГрафикРаботы", "График работы");
	СтруктураПредставлениеПолей.Вставить("ЗанимаемыхСтавок", "Занимаемых ставок");
	
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	УправлениеОтчетами.УпорядочитьПоляПостроителяОтчета(ПостроительОтчета);
	
	Если НачальноеЗаполнение Тогда
		// отборы по умолчанию
		МассивОтбора = Новый Массив;
		Если ИмяРегистра = "РаботникиОрганизаций" Тогда 
			МассивОтбора.Добавить("ОбособленноеПодразделение");
		КонецЕсли;
		// - КУФИБ - начало
		Если ИмяРегистра = "РаботникиОрганизаций" И куфиб_ВыбиратьСтруктурноеПодразделение Тогда 
			МассивОтбора.Добавить("СтруктурноеПодразделениеСотрудника");
		КонецЕсли;
		// - КУФИБ - конец
		МассивОтбора.Добавить("Подразделение");
		МассивОтбора.Добавить("Должность");
		МассивОтбора.Добавить("Работник");
		Если ИмяРегистра = "РаботникиОрганизаций" И ВключатьДоговорников Тогда
			МассивОтбора.Добавить("РаботаетПоДоговоруГПХ");
		КонецЕсли;
		УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСписокРаботников() Экспорт

	Если НЕ УправлениеОтчетами.ЗадатьПараметрыОтбораПоКатегориям(ПостроительОтчета, мСтруктураДляОтбораПоКатегориям) Тогда
		//повторные отборы по категориям
		Предупреждение("По одной категории нельзя устанавливать два отбора", 60);
		Возврат Неопределено;
	КонецЕсли;
	                                                            
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности", ДатаАктуальности);
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_Год", Год(ДатаАктуальности));
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_Месяц", Месяц(ДатаАктуальности));
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_День", День(ДатаАктуальности));
	ПостроительОтчета.Параметры.Вставить("ДатаУволенных", ДатаУволенных);
	Если ИмяРегистра = "РаботникиОрганизаций" Тогда
		ПостроительОтчета.Параметры.Вставить("ОбособленноеПодразделение", ПостроительОтчета.Отбор.ОбособленноеПодразделение.Значение);
		// - КУФИБ - начало
		Если куфиб_ВыбиратьСтруктурноеПодразделение Тогда 
			ПостроительОтчета.Параметры.Вставить("СтруктурноеПодразделениеСотрудника", ПостроительОтчета.Отбор.СтруктурноеПодразделениеСотрудника.Значение);
		КонецЕсли;
		// - КУФИБ - конец
	КонецЕсли;
	
	Если ИсполнятьЗапрос Тогда 
		ПостроительОтчета.Выполнить();
		РезультатОтбора = ПостроительОтчета.Результат;
		Если РезультатОтбора.Пустой() Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не обнаружено работников, удовлетворяющих указанным условиям!");
		КонецЕсли;
		
		ТаблицаЗначенияРеквизитов = РеквизитыТабличнойЧасти.Выгрузить();
		Если ТаблицаЗначенияРеквизитов.Найти(Истина, "Использование") = Неопределено Тогда
			Возврат Новый Структура("Команда,Данные","ЗаполнитьСписокРаботников",РезультатОтбора);
		Иначе
			Возврат Новый Структура("Команда,Данные,ЗначенияРеквизитов","ЗаполнитьСписокРаботников",РезультатОтбора,ТаблицаЗначенияРеквизитов);
		КонецЕсли;
		
	Иначе
		ПостроительЗапроса = Новый ПостроительЗапроса(ПостроительОтчета.Текст);
		Для каждого Параметр Из ПостроительОтчета.Параметры Цикл
			ПостроительЗапроса.Параметры.Вставить(Параметр.Ключ,Параметр.Значение);
		КонецЦикла; 
		Для каждого ЭлементОтбора Из ПостроительОтчета.Отбор Цикл
			Если ЭлементОтбора.Использование И ЗначениеЗаполнено(ЭлементОтбора.ПутьКДанным) Тогда
				//пропустим неправильно заполненные отборы
				//Если ЭлементОтбора.ТипЗначения.СодержитТип(Тип("Строка")) Тогда
				//	Если ЭлементОтбора.ТипЗначения.КвалификаторыСтроки.Длина = 0 И (ЭлементОтбора.ВидСравнения <> ВидСравнения.Содержит) И (ЭлементОтбора.ВидСравнения <> ВидСравнения.НеСодержит) Тогда
				//		Продолжить;
				//	КонецЕсли;;
				//КонецЕсли;
				НовыйОтбор = ПостроительЗапроса.Отбор.Добавить(ЭлементОтбора.ПутьКДанным,ЭлементОтбора.Имя,ЭлементОтбора.Представление);
				НовыйОтбор.ВидСравнения = ЭлементОтбора.ВидСравнения;
				НовыйОтбор.Значение = ЭлементОтбора.Значение;
				НовыйОтбор.ЗначениеПо = ЭлементОтбора.ЗначениеПо;
				НовыйОтбор.ЗначениеС = ЭлементОтбора.ЗначениеС;
				НовыйОтбор.Использование = Истина;
			КонецЕсли;                                	
		КонецЦикла; 
		Возврат Новый Структура("Команда,ПостроительЗапроса","ЗаполнитьПостроительЗапроса",ПостроительЗапроса)
	КонецЕсли;
	
КонецФункции

мСоответствиеНазначений = Новый Соответствие;
мСтруктураДляОтбораПоКатегориям = Новый Структура;

#КонецЕсли
