
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьЗначенияСвойств(ЭтотОбъект,Параметры,"Бюджет,Версия");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	фин_ПорядокФормированияЗаявокПоБюджетамПоПодразделениям.УправленческоеПодразделение
		|ИЗ
		|	РегистрСведений.фин_ПорядокФормированияЗаявокПоБюджетамПоПодразделениям КАК фин_ПорядокФормированияЗаявокПоБюджетамПоПодразделениям
		|ГДЕ
		|	фин_ПорядокФормированияЗаявокПоБюджетамПоПодразделениям.Бюджет = &Бюджет
		|
		|УПОРЯДОЧИТЬ ПО
		|	фин_ПорядокФормированияЗаявокПоБюджетамПоПодразделениям.УправленческоеПодразделение.Наименование";
	
	Запрос.УстановитьПараметр("Бюджет", Бюджет);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Подразделения.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("УправленческоеПодразделение"));
	ЗаполнитьДанные();
	СписокРежимы.Добавить(Истина,"Разрешить");
	СписокРежимы.Добавить(Ложь,"Запретить");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанные()
	ТабличныйДокумент.Очистить();
	ДанныеРасшифровкиКомпоновкиДанных = Неопределено;	
	Отчет = Отчеты.фин_ПравилаПодачиЗаявокПоБюджетам.Создать();
	Отчет.СхемаКомпоновкиДанных.НаборыДанных[0].Запрос = СтрЗаменить(Отчет.СхемаКомпоновкиДанных.НаборыДанных[0].Запрос,"Справочник.общ_Подразделения","Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПодразделений());
	КомпоновщикНастроек = Отчет.КомпоновщикНастроек;
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Бюджет",Бюджет);
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Версия",Версия);
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Подразделения",Подразделения);
	Отчет.СкомпоноватьРезультат(ТабличныйДокумент,ДанныеРасшифровкиКомпоновкиДанных);
	ДанныеРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровкиКомпоновкиДанных,УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	РезультатОбработки = ОбработатьРасшифровку(Расшифровка);
	Если РезультатОбработки = Неопределено Тогда
		Возврат;
	ИначеЕсли РезультатОбработки.Действие = "ОткрытьЗначение" Тогда
		ПоказатьЗначение(,РезультатОбработки.Параметр);
	ИначеЕсли РезультатОбработки.Действие = "ВыбратьРежим" Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораРежима",ЭтотОбъект);
		ПоказатьВыборИзСписка(ОписаниеОповещения,СписокРежимы,,СписокРежимы.НайтиПоЗначению(НЕ РезультатОбработки.Параметр));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораРежима(Результат,ДополнительныеПараметры) Экспорт
	Если Результат<>Неопределено Тогда
		ОбработкаВыбораРежимаНаСервере(Результат.Значение);	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораРежимаНаСервере(Результат)
	НачатьТранзакцию();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	фин_СтатьиБюджета.Ссылка КАК Статья
		|ПОМЕСТИТЬ ВТ_Статьи
		|ИЗ
		|	Справочник.фин_СтатьиБюджета КАК фин_СтатьиБюджета
		|ГДЕ
		|	фин_СтатьиБюджета.Владелец = &Бюджет
		|	И фин_СтатьиБюджета.ЭтоГруппа = ЛОЖЬ
		|	И фин_СтатьиБюджета.ПометкаУдаления = ЛОЖЬ
		|	И (фин_СтатьиБюджета.Версия = &Версия
		|			ИЛИ фин_СтатьиБюджета.Версия = ЗНАЧЕНИЕ(Справочник.фин_ВерсииБюджетов.ПустаяСсылка))
		|	И ВЫБОР
		|			КОГДА &ИерархияСтатей
		|				ТОГДА фин_СтатьиБюджета.Ссылка В ИЕРАРХИИ (&Статьи)
		|			ИНАЧЕ фин_СтатьиБюджета.Ссылка В (&Статьи)
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Подразделения.Ссылка КАК Подразделение
		|ПОМЕСТИТЬ ВТ_Подразделения
		|ИЗ
		|	Справочник."+фин_ОбщегоНазначенияВызовСервераПовтИсп.ИмяСправочникаПодразделений()+" КАК Подразделения
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ИерархияПодразделений
		|				ТОГДА Подразделения.Ссылка В ИЕРАРХИИ (&Подразделения)
		|			ИНАЧЕ Подразделения.Ссылка В (&Подразделения)
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Статьи.Статья,
		|	ВТ_Подразделения.Подразделение
		|ИЗ
		|	ВТ_Статьи КАК ВТ_Статьи
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Подразделения КАК ВТ_Подразделения
		|		ПО (ИСТИНА)";
	ИерархияПодразделений = Ложь;
	ИерархияСтатей = Ложь;
	ПодразделенияОтбора = Новый СписокЗначений;
	СтатьиОтбора = Новый СписокЗначений;
	
	СтрокиСтатья = ТаблицаОтбора.НайтиСтроки(Новый Структура("Поле","Статья"));
	Если СтрокиСтатья.Количество()>0 Тогда
		СтрокаТаблицы = СтрокиСтатья[0];
		ИерархияСтатей = СтрокаТаблицы.ВидСравнения = "ВИерархии";
		СтатьиОтбора.Добавить(СтрокаТаблицы.Значение);
	КонецЕсли;
	
	СтрокиПодразделение = ТаблицаОтбора.НайтиСтроки(Новый Структура("Поле","Подразделение"));
	Если СтрокиПодразделение.Количество()>0 Тогда
		СтрокаТаблицы = СтрокиПодразделение[0];
		ИерархияПодразделений = СтрокаТаблицы.ВидСравнения = "ВИерархии";
		ПодразделенияОтбора.Добавить(СтрокаТаблицы.Значение);
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Значение) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определено подразделение!");
			Возврат;
		КонецЕсли;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не определено подразделение!");
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Бюджет", Бюджет);
	Запрос.УстановитьПараметр("Версия", Версия);
	Запрос.УстановитьПараметр("ИерархияПодразделений", ИерархияПодразделений);
	Запрос.УстановитьПараметр("ИерархияСтатей", ИерархияСтатей);
	Запрос.УстановитьПараметр("Подразделения", ПодразделенияОтбора);
	Запрос.УстановитьПараметр("Статьи", СтатьиОтбора);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.фин_ПорядокФормированияЗаявокПоБюджетамПоПодразделениям.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Бюджет.Установить(Бюджет);
		НаборЗаписей.Отбор.УправленческоеПодразделение.Установить(ВыборкаДетальныеЗаписи.Подразделение);
		НаборЗаписей.Отбор.СтатьяБюджета.Установить(ВыборкаДетальныеЗаписи.Статья);
		Если Результат = Истина Тогда
			НЗ = НаборЗаписей.Добавить();
			НЗ.Бюджет = Бюджет;
			НЗ.УправленческоеПодразделение = ВыборкаДетальныеЗаписи.Подразделение;
			НЗ.СтатьяБюджета = ВыборкаДетальныеЗаписи.Статья;
		КонецЕсли;
		НаборЗаписей.Записать();
	КонецЦикла;
	ЗаполнитьДанные();
	ЗафиксироватьТранзакцию();
КонецПроцедуры



&НаСервере
Функция ОбработатьРасшифровку(Расшифровка, ВариантРасшифровки = Неопределено)
	
	ДанныеДляОбработки = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	ИнформацияДляРасшифровки = ДанныеДляОбработки.Элементы.Получить(Расшифровка);
	Если ИнформацияДляРасшифровки <> Неопределено Тогда
		ДействиеРасшифровки = СокрЛП(Строка(ИнформацияДляРасшифровки.ОсновноеДействие));
		Данные = ИнформацияДляРасшифровки.ПолучитьПоля();
		Если ДействиеРасшифровки= "Нет" Тогда
			Возврат Неопределено;
		ИначеЕсли ДействиеРасшифровки = "Открыть значение" Тогда
			Возврат Новый Структура("Действие,Параметр","ОткрытьЗначение",Данные[0].Значение);
		ИначеЕсли ДействиеРасшифровки = "Расшифровать" Тогда
			ТаблицаОтбора.Очистить();
			//ТаблицаОтбора.Колонки.Добавить("Поле");
			//ТаблицаОтбора.Колонки.Добавить("ВидСравнения");
			//ТаблицаОтбора.Колонки.Добавить("Значение");
			ЗаполнитьОтборИзГруппировок(ТаблицаОтбора,ИнформацияДляРасшифровки,ДанныеДляОбработки);
			Возврат Новый Структура("Действие,Параметр","ВыбратьРежим",?(Данные[0].Значение=Null,Истина,Данные[0].Значение));
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ЗаполнитьОтборИзГруппировок(ТаблицаОтбора,ИнформацияДляРасшифровки,ДанныеРасшифровки)
	РодительскиеПоля = ИнформацияДляРасшифровки.ПолучитьРодителей();
	Для Каждого ПолеРодитель Из РодительскиеПоля Цикл
		ДанныеРодителя = ДанныеРасшифровки.Элементы.Получить(ПолеРодитель.Идентификатор);
		Если НЕ ТипЗнч(ДанныеРодителя)=Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") Тогда
			Для Каждого ПолеРодителя Из ДанныеРодителя.ПолучитьПоля() Цикл
				НС = ТаблицаОтбора.Добавить();
				НС.Поле = ПолеРодителя.Поле;
				НС.Значение = ПолеРодителя.Значение;
				НС.ВидСравнения = ?(ЗначениеЗаполнено(ПолеРодителя.Значение),?(ПолеРодителя.Иерархия,"ВИерархии","Равно"),"Незаполнено");
			КонецЦикла;
		КонецЕсли;
		ЗаполнитьОтборИзГруппировок(ТаблицаОтбора,ДанныеРодителя,ДанныеРасшифровки);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	ЗаполнитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделенияПриИзменении(Элемент)
	ПодразделенияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПодразделенияПриИзмененииНаСервере()
	ЗаполнитьДанные();
КонецПроцедуры
