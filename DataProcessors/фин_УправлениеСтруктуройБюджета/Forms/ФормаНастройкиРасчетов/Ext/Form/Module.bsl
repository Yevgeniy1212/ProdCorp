
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьЗначенияСвойств(ЭтотОбъект,Параметры,"ВидСтрокиБюджета,ЭтоГруппа,УчетПоСумме,УчетПоКоличеству,ВидПоказателя,Формула,ФормулаКоличество,ТолькоДляПлановыхДанных,ПоРасценкам,ОтносительныйПоказатель,ПризнакПеретекающегоОстатка"+?(Параметры.Свойство("ИспользоватьРасчетыТолькоДляПервоначальногоЗаполнения"),",ИспользоватьРасчетыТолькоДляПервоначальногоЗаполнения","")+?(Параметры.Свойство("ПериодичностьВыполненияРасчетов"),",ПериодичностьВыполненияРасчетов","")+?(Параметры.Свойство("ЧастотаВыполненияРасчетовПоФормулам"),",ЧастотаВыполненияРасчетовПоФормулам","")+?(Параметры.Свойство("РучнаяНастройкаИтоговПоГруппам"),",РучнаяНастройкаИтоговПоГруппам",""));
	Элементы.РежимРасчета.Видимость			= НЕ ЭтоГруппа;
	Элементы.Формула.Видимость				= УчетПоСумме И НЕ (УчетПоКоличеству И ПоРасценкам);
	Элементы.ФормулаКоличество.Видимость	= УчетПоКоличеству;
	Элементы.ПоРасценкам.Видимость			= УчетПоСумме И УчетПоКоличеству И НЕ ЭтоГруппа;
	Элементы.ГруппаРасчеты.Видимость		= ВидПоказателя = ПредопределенноеЗначение("Перечисление.фин_ВидыФинансовыхПоказателей.Рассчитываемый") ИЛИ (ЭтоГруппа И РучнаяНастройкаИтоговПоГруппам);
	Элементы.ИспользоватьРасчетыТолькоДляПервоначальногоЗаполнения.Видимость = Параметры.Свойство("ИспользоватьРасчетыТолькоДляПервоначальногоЗаполнения");
	Элементы.ЧастотаВыполненияРасчетовПоФормулам.Видимость 	= Параметры.Свойство("ЧастотаВыполненияРасчетовПоФормулам");
	Элементы.ПериодичностьВыполненияРасчетов.Видимость 		= Параметры.Свойство("ПериодичностьВыполненияРасчетов") И (ЧастотаВыполненияРасчетовПоФормулам=Перечисления.фин_ЧастотаВыполненияРасчетов.СУказаннойПериодичностью ИЛИ ЧастотаВыполненияРасчетовПоФормулам=Перечисления.фин_ЧастотаВыполненияРасчетов.СУказаннойПериодичностьюВКонцеПериода);
	РежимРасчета = ТолькоДляПлановыхДанных;
	Если Параметры.Свойство("ВидПоказателяТолькоПросмотр") Тогда
		Элементы.ВидПоказателя.ТолькоПросмотр = Параметры.ВидПоказателяТолькоПросмотр;
	КонецЕсли;
	Если НЕ (ВидСтрокиБюджета = Перечисления.фин_ВидыСтрокБюджета.Первичная
		ИЛИ ВидСтрокиБюджета = Перечисления.фин_ВидыСтрокБюджета.РассчитываемаяПоФормуле
		 ИЛИ (ЭтоГруппа И РучнаяНастройкаИтоговПоГруппам)) Тогда
		Элементы.ВидСтрокиБюджета.ТолькоПросмотр	= Истина;
		Элементы.ГруппаРасчеты.ТолькоПросмотр		= Истина;
	КонецЕсли;
	Если ВидСтрокиБюджета = Перечисления.фин_ВидыСтрокБюджета.РассчитываемаяПоМоделиВПредшествующихБюджетах 
		ИЛИ ВидСтрокиБюджета = Перечисления.фин_ВидыСтрокБюджета.Наследуемая 
		ИЛИ ВидСтрокиБюджета = Перечисления.фин_ВидыСтрокБюджета.РассчитываемаяПоЗависимости 
		ИЛИ ВидСтрокиБюджета = Перечисления.фин_ВидыСтрокБюджета.РассчитываемаяПоНесколькимИсточникамРасчета 
		ИЛИ ВидСтрокиБюджета = Перечисления.фин_ВидыСтрокБюджета.РассчитываемаяПоМодели Тогда
		Элементы.ИспользоватьРасчетыТолькоДляПервоначальногоЗаполнения.Видимость	= Ложь;
	КонецЕсли;
	Если ЭтоГруппа Тогда
		Элементы.ГруппаРасширенныеНастройкиРасчета.Видимость	= Ложь;	
		Элементы.ИспользоватьРасчетыТолькоДляПервоначальногоЗаполнения.Видимость	= Ложь;	
		Элементы.ВидСтрокиБюджета.Видимость	= Ложь;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидПоказателяПриИзменении(Элемент)
	Если ВидПоказателя <> ПредопределенноеЗначение("Перечисление.фин_ВидыФинансовыхПоказателей.Рассчитываемый") Тогда
		Формула 				= ПредопределенноеЗначение("Справочник.фин_ФормулыРасчетаФинансовыхПоказателей.ПустаяСсылка");
		ФормулаКоличество 		= ПредопределенноеЗначение("Справочник.фин_ФормулыРасчетаФинансовыхПоказателей.ПустаяСсылка");
		ТолькоДляПлановыхДанных = Ложь;
		ПоРасценкам				= Ложь;
		ОтносительныйПоказатель = Ложь;
		ПризнакПеретекающегоОстатка = ПредопределенноеЗначение("Перечисление.фин_ПризнакиПеретекающихОстатковМеждуПериодами.ПустаяСсылка");
		ЧастотаВыполненияРасчетовПоФормулам = ПредопределенноеЗначение("Перечисление.фин_ЧастотаВыполненияРасчетов.ПустаяСсылка");
		ПериодичностьВыполненияРасчетов = ПредопределенноеЗначение("Перечисление.фин_Периодичность.ПустаяСсылка");
	КонецЕсли;
	Элементы.ГруппаРасчеты.Видимость		= ВидПоказателя = ПредопределенноеЗначение("Перечисление.фин_ВидыФинансовыхПоказателей.Рассчитываемый");
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	Если ПроверитьКорректностьНастроек() Тогда
		Закрыть(Новый Структура("ВидСтрокиБюджета,ВидПоказателя,Формула,ФормулаКоличество,ТолькоДляПлановыхДанных,ПоРасценкам,ОтносительныйПоказатель,ПризнакПеретекающегоОстатка,ИспользоватьРасчетыТолькоДляПервоначальногоЗаполнения,ЧастотаВыполненияРасчетовПоФормулам,ПериодичностьВыполненияРасчетов",ВидСтрокиБюджета,ВидПоказателя,Формула,ФормулаКоличество,ТолькоДляПлановыхДанных,ПоРасценкам,ОтносительныйПоказатель,ПризнакПеретекающегоОстатка,ИспользоватьРасчетыТолькоДляПервоначальногоЗаполнения,ЧастотаВыполненияРасчетовПоФормулам,ПериодичностьВыполненияРасчетов));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьКорректностьНастроек()
	Если ВидСтрокиБюджета = Перечисления.фин_ВидыСтрокБюджета.РассчитываемаяПоФормуле Тогда
		Если ЗначениеЗаполнено(Формула) И Формула.Вид=Перечисления.фин_ВидыФормулРасчета.ПравилоРасчетаОстатков И НЕ ЗначениеЗаполнено(ПризнакПеретекающегоОстатка) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен признак перетекающего остатка!",,"ПризнакПеретекающегоОстатка","ПризнакПеретекающегоОстатка");
			Возврат Ложь;
		ИначеЕсли ЗначениеЗаполнено(ФормулаКоличество) И ФормулаКоличество.Вид=Перечисления.фин_ВидыФормулРасчета.ПравилоРасчетаОстатков И НЕ ЗначениеЗаполнено(ПризнакПеретекающегоОстатка) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен признак перетекающего остатка!",,"ПризнакПеретекающегоОстатка","ПризнакПеретекающегоОстатка");
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура РежимРасчетаПриИзменении(Элемент)
	ТолькоДляПлановыхДанных = РежимРасчета;
КонецПроцедуры

&НаКлиенте
Процедура ПоРасценкамПриИзменении(Элемент)
	Элементы.Формула.Видимость	= УчетПоСумме И НЕ (УчетПоКоличеству И ПоРасценкам);
	Если ПоРасценкам Тогда
		Формула = ПредопределенноеЗначение("Справочник.фин_ФормулыРасчетаФинансовыхПоказателей.ПустаяСсылка");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидСтрокиБюджетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Список = Новый СписокЗначений;
	Список.Добавить(ПредопределенноеЗначение("Перечисление.фин_ВидыСтрокБюджета.Первичная"));
	Список.Добавить(ПредопределенноеЗначение("Перечисление.фин_ВидыСтрокБюджета.РассчитываемаяПоФормуле"));
	ДанныеВыбора = Список;
КонецПроцедуры

&НаКлиенте
Процедура ВидСтрокиБюджетаПриИзменении(Элемент)
	Если ВидСтрокиБюджета = ПредопределенноеЗначение("Перечисление.фин_ВидыСтрокБюджета.РассчитываемаяПоФормуле") Тогда
		ВидПоказателя = ПредопределенноеЗначение("Перечисление.фин_ВидыФинансовыхПоказателей.Рассчитываемый");
	Иначе
		ВидПоказателя = ПредопределенноеЗначение("Перечисление.фин_ВидыФинансовыхПоказателей.Оборотный");
	КонецЕсли;
	ВидПоказателяПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ЧастотаВыполненияРасчетовПоФормуламПриИзменении(Элемент)
	Если ЧастотаВыполненияРасчетовПоФормулам<>ПредопределенноеЗначение("Перечисление.фин_ЧастотаВыполненияРасчетов.СУказаннойПериодичностью") И ЧастотаВыполненияРасчетовПоФормулам<>ПредопределенноеЗначение("Перечисление.фин_ЧастотаВыполненияРасчетов.СУказаннойПериодичностьюВКонцеПериода") Тогда
		ПериодичностьВыполненияРасчетов = ПредопределенноеЗначение("Перечисление.фин_Периодичность.ПустаяСсылка");
	КонецЕсли;
	Элементы.ПериодичностьВыполненияРасчетов.Видимость = ЧастотаВыполненияРасчетовПоФормулам=ПредопределенноеЗначение("Перечисление.фин_ЧастотаВыполненияРасчетов.СУказаннойПериодичностью") ИЛИ ЧастотаВыполненияРасчетовПоФормулам=ПредопределенноеЗначение("Перечисление.фин_ЧастотаВыполненияРасчетов.СУказаннойПериодичностьюВКонцеПериода");
КонецПроцедуры

