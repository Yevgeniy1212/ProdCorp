
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Модель") Тогда
		СохраненнаяМодель = Параметры.Модель;
		Для Каждого Реквизит Из Метаданные.Справочники.фин_МоделиПрогнозирования.Реквизиты Цикл
			Попытка
				Объект[Реквизит.Имя] = СохраненнаяМодель[Реквизит.Имя];
			Исключение
			КонецПопытки;
		КонецЦикла;
		Для Каждого ТабличнаяЧасть Из Метаданные.Справочники.фин_МоделиПрогнозирования.ТабличныеЧасти Цикл
			Объект[ТабличнаяЧасть.Имя].Загрузить(СохраненнаяМодель[ТабличнаяЧасть.Имя].Выгрузить());
		КонецЦикла;
		Объект.ПрогнозируемыйПериод = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),1));
		НастройкаПериодов();
	Иначе
		Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.РегрессионнаяМодельВременногоРяда");
		Объект.СпособСбораНаблюдаемыхДанных=ПредопределенноеЗначение("Перечисление.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ЗначенияПериодаПредшествующегоПрогнозируемому");
		Объект.КоличествоНаблюдаемыхПериодов = 1;
		Объект.ПрогнозируемыйПериод = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(),1));
		Объект.ПрогнозируемыйРесурсПоказателя=ПредопределенноеЗначение("Перечисление.фин_РесурсыДанныхБюджетирования.СуммаУпр");
		Объект.ПорядокОпределенияСценарияНаблюдаемыхДанных = Перечисления.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ПрогнозируемыйСценарий;
	КонецЕсли;
	фин_РаботаСДополнительнымиРазрезамиБюджетирования.ЗаполнитьСписокРазрезовУчета(СписокРазрезов);
	фин_РаботаСДополнительнымиРазрезамиБюджетирования.НастроитьПредставлениеРазрезов(ЭтотОбъект);
	Реквизиты = ПолучитьРеквизиты();
	Для Каждого Реквизит Из Реквизиты  Цикл
		Если Найти(Реквизит.Имя,"Надпись")<>0 Тогда
			ЭтотОбъект[Реквизит.Имя] = Реквизит.Заголовок;
		КонецЕсли;
	КонецЦикла;
	НастроитьФорматы();
КонецПроцедуры

&НаСервере
Процедура НастроитьФорматы()
	//Если ЗначениеЗаполнено(Объект.СценарийПрогнозныхДанных) Тогда
	//	Элементы.ПрогнозируемыйПериод.Формат = фин_ПроцедурыМеханизмовБюджетирования.ФорматПериода(Объект.СценарийПрогнозныхДанных);
	//	Элементы.ПрогнозируемыйПериод.ФорматРедактирования = фин_ПроцедурыМеханизмовБюджетирования.ФорматПериода(Объект.СценарийПрогнозныхДанных);
	//КонецЕсли;
	//СценарийНаблюдаемый = ?(Объект.ПорядокОпределенияСценарияНаблюдаемыхДанных=Перечисления.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ВыбранныйСценарий И ЗначениеЗаполнено(Объект.СценарийНаблюдаемыхДанных),Объект.СценарийНаблюдаемыхДанных,Объект.СценарийПрогнозныхДанных);
	//Если ЗначениеЗаполнено(СценарийНаблюдаемый) Тогда
	//	Элементы.НачалоНаблюдаемогоПериода.Формат = фин_ПроцедурыМеханизмовБюджетирования.ФорматПериода(СценарийНаблюдаемый);
	//	Элементы.НачалоНаблюдаемогоПериода.ФорматРедактирования = фин_ПроцедурыМеханизмовБюджетирования.ФорматПериода(СценарийНаблюдаемый);
	//	Элементы.ОкончаниеНаблюдаемогоПериода.Формат = фин_ПроцедурыМеханизмовБюджетирования.ФорматПериода(СценарийНаблюдаемый);
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
	УстановитьВидимостьКнопок();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьКнопок()
	Элементы.Назад.Видимость = Элементы.Страницы.ТекущаяСтраница<>Элементы.Страницы.ПодчиненныеЭлементы.СтраницаНастройки;
	Элементы.Далее.Видимость = Элементы.Страницы.ТекущаяСтраница<>Элементы.Страницы.ПодчиненныеЭлементы.СтраницаПрогнозныеЗначения И Элементы.Страницы.ТекущаяСтраница<>Элементы.Страницы.ПодчиненныеЭлементы.СтраницаСтатистическиеДанные И Элементы.Страницы.ТекущаяСтраница<>Элементы.Страницы.ПодчиненныеЭлементы.СтраницаКорреляционныйАнализ;
	Элементы.СтатистическиеСвойства.Видимость = (Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаПрогнозныеЗначения И (НЕ Объект.ФиксированныеОценкиПараметров)  И (Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии") ИЛИ Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии")));
	Элементы.КорреляционныйАнализ.Видимость = (Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаИсходныеДанные И (НЕ Объект.ФиксированныеОценкиПараметров)  И (Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии") ИЛИ Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии")));
	Элементы.СохранитьМодель.Видимость = Элементы.Страницы.ТекущаяСтраница<>Элементы.Страницы.ПодчиненныеЭлементы.СтраницаНастройки;
	Элементы.Печать.Видимость = (Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаПрогнозныеЗначения ИЛИ Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаИсходныеДанные ИЛИ Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаСтатистическиеДанные ИЛИ Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаКорреляционныйАнализ);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	ЭтоНелинейнаяМодель = Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии");
	ЭтоЛинейнаяМодель = Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии");
	Элементы.НачалоНаблюдаемогоПериода.ТолькоПросмотр = Объект.СпособСбораНаблюдаемыхДанных=ПредопределенноеЗначение("Перечисление.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ЗначенияПериодаПредшествующегоПрогнозируемому");
	Элементы.НачалоНаблюдаемогоПериода.Видимость = Объект.СпособСбораНаблюдаемыхДанных<>ПредопределенноеЗначение("Перечисление.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения");
	Элементы.ОкончаниеНаблюдаемогоПериода.Видимость = Объект.СпособСбораНаблюдаемыхДанных<>ПредопределенноеЗначение("Перечисление.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения");
	Элементы.ФормулаПреобразованияНаблюдаемыхЗначений.Видимость 			=  ЭтоНелинейнаяМодель; 
	Элементы.ФормулаПреобразованияПрогнозируемыхЗначений.Видимость			=  ЭтоНелинейнаяМодель; 
	Элементы.НаблюдаемыеИсходныеПоказателиФормулаПреобразования.Видимость	=  ЭтоНелинейнаяМодель;
	Элементы.НаблюдаемыеИсходныеПоказатели.Видимость = ЭтоНелинейнаяМодель ИЛИ ЭтоЛинейнаяМодель;
	Элементы.НадписьИсходныеПоказатели.Видимость = ЭтоНелинейнаяМодель ИЛИ ЭтоЛинейнаяМодель;
	Элементы.ФиксированныеОценкиМНК.Видимость = ЭтоНелинейнаяМодель ИЛИ ЭтоЛинейнаяМодель;
	Элементы.ГруппаНаблюдаемыеДанные.Видимость = ?(ЭтоНелинейнаяМодель ИЛИ ЭтоЛинейнаяМодель,НЕ Объект.ФиксированныеОценкиПараметров,Истина);
	Элементы.НаблюдаемыеИсходныеПоказателиОценкаМНК.Видимость = Объект.ФиксированныеОценкиПараметров;
	Элементы.БазоваяОценка.Видимость = ?(ЭтоНелинейнаяМодель ИЛИ ЭтоЛинейнаяМодель,Объект.ФиксированныеОценкиПараметров,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ВидМоделиПрогнозированияПриИзменении(Элемент)
	Если Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.МодельПрогнозированияВременногоРядаНаОсновеЭкспоненциальногоСглаживания") ИЛИ Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.РегрессионнаяМодельВременногоРяда") Тогда
		Объект.НаблюдаемыеИсходныеПоказатели.Очистить();
	КонецЕсли;
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	Если Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаИсходныеДанные Тогда
		Если Объект.КоличествоНаблюдаемыхПериодов=0 Тогда
			ПоказатьПредупреждение(,"Не определено количество наблюдаемых периодов!");
		Иначе
			ВыполнитьПрогнозирование();
		КонецЕсли;
		Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаПрогнозныеЗначения;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаПоказателиМодели Тогда
		Если ПроверитьЗаполнение() Тогда
			Пересчет = Истина;
			Если Объект.СпособСбораНаблюдаемыхДанных=ПредопределенноеЗначение("Перечисление.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения") Тогда
				Пересчет = Ложь;
			КонецЕсли;
			Если (Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии") ИЛИ Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии")) И Объект.ФиксированныеОценкиПараметров Тогда
				Пересчет = Ложь;
			КонецЕсли;
			Объект.ПрогнозируемыеЗначенияИсходныхПоказателей.Очистить();
			ВыполнитьСборИсходныхДанных(Пересчет);
			Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаИсходныеДанные;
		КонецЕсли;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаНастройки Тогда
		Если ПроверитьЗаполнение() Тогда
			Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаПоказателиМодели;
		КонецЕсли;
	КонецЕсли;
	УстановитьВидимостьКнопок();
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	Если Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаПрогнозныеЗначения Тогда
		Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаИсходныеДанные;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаКорреляционныйАнализ Тогда
		Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаИсходныеДанные;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаСтатистическиеДанные Тогда
		Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаПрогнозныеЗначения;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаИсходныеДанные Тогда
		Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаПоказателиМодели;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаПоказателиМодели Тогда
		Если ПроверитьЗаполнение() Тогда
			Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаНастройки;
		КонецЕсли;
	КонецЕсли;
	УстановитьВидимостьКнопок();
КонецПроцедуры

&НаКлиенте
Процедура СтатистическиеСвойства(Команда)
	РасчетСтатистики();
	Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаСтатистическиеДанные;
	УстановитьВидимостьКнопок();
КонецПроцедуры

&НаСервере
Процедура РасчетСтатистики()
 	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.РасчетСтатистики();	
	ЗначениеВРеквизитФормы(ОбъектОбработки,"Объект");
    Макет = Обработки.фин_РасчетПоМоделиПрогнозирования.ПолучитьМакет("Макет");
	ТаблицаСтатистическиеДанные.Очистить();
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицыБаза = Макет.ПолучитьОбласть("ШапкаТаблицы|База");
	ОбластьШапкаТаблицыКолонка = Макет.ПолучитьОбласть("ШапкаТаблицы|Колонка");
	ОбластьШапкаТаблицыКолонкаПараметр =Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаПараметр"); 
	ОбластьСтрокаТаблицыБаза = Макет.ПолучитьОбласть("СтрокаТаблицы|База");
	ОбластьСтрокаТаблицыКолонка = Макет.ПолучитьОбласть("СтрокаТаблицы|Колонка");
	ОбластьСтрокаТаблицыКолонкаОценка = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаПараметр");
	// вывод результирующих
	ОбластьЗаголовок.Параметры.Заголовок = "Свойства оценок параметров";
	ТаблицаСтатистическиеДанные.Вывести(ОбластьЗаголовок);
	ТаблицаСтатистическиеДанные.Вывести(ОбластьШапкаТаблицыБаза);
	СписокХарактеристик = Новый СписокЗначений;
	СписокХарактеристик.Добавить("НомерСтроки","Номер");
	СписокХарактеристик.Добавить("Лаг","Лаг");
	СписокХарактеристик.Добавить("ОценкаПараметра","Оценка параметра");
	СписокХарактеристик.Добавить("СреднеквадратичнаяОшибка","Среднеквадратичная ошибка");

	Для Каждого ЭлементСписка Из СписокХарактеристик Цикл
		ОбластьШапка = ?(ЭлементСписка.Значение="Лаг" ИЛИ ЭлементСписка.Значение="Номер",ОбластьШапкаТаблицыКолонка,ОбластьШапкаТаблицыКолонкаПараметр);
		ОбластьШапка.Параметры.Период = ЭлементСписка.Значение;
		ОбластьШапка.Параметры.ПериодПредставление = ЭлементСписка.Представление;
		ТаблицаСтатистическиеДанные.Присоединить(ОбластьШапка);
	КонецЦикла;
	Для Каждого СтрокаПоказатель Из Объект.НаблюдаемыеИсходныеПоказатели Цикл
		ОбластьСтрокаТаблицыБаза.Параметры.Показатель = СтрокаПоказатель.Показатель;
		ТаблицаСтатистическиеДанные.Вывести(ОбластьСтрокаТаблицыБаза);
		Для Каждого ЭлементСписка Из СписокХарактеристик Цикл
			ОбластьСтрока = ?(ЭлементСписка.Значение="Лаг" ИЛИ ЭлементСписка.Значение="НомерСтроки",ОбластьСтрокаТаблицыКолонка,ОбластьСтрокаТаблицыКолонкаОценка);
			ОбластьСтрока.Параметры.Значение = СтрокаПоказатель[ЭлементСписка.Значение];
			ТаблицаСтатистическиеДанные.Присоединить(ОбластьСтрока);
		КонецЦикла;
	КонецЦикла;
	МассивФактическихЗначений = Новый Массив(Объект.КоличествоНаблюдаемыхПериодов);
	МассивОценочныхЗначений = Новый Массив(Объект.КоличествоНаблюдаемыхПериодов);
	МассивОтклонений = Новый Массив(Объект.КоличествоНаблюдаемыхПериодов);
	// вывод сетки для прогнозных входящих показателей
	ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
	СценарийНаблюдаемый = ?(Объект.ПорядокОпределенияСценарияНаблюдаемыхДанных=Перечисления.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ВыбранныйСценарий И ЗначениеЗаполнено(Объект.СценарийНаблюдаемыхДанных),Объект.СценарийНаблюдаемыхДанных,Объект.СценарийПрогнозныхДанных);
	СуммаОценочныхВеличин = 0;
	Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
		ОценочнаяВеличина = Объект.БазоваяОценка;
		Для Каждого СтрокаПоказатель Из Объект.НаблюдаемыеИсходныеПоказатели Цикл
			Значение = 0;
			СтрокиНайдено = Объект.НаблюдаемыеЗначенияИсходныхПоказателей.НайтиСтроки(Новый Структура("ПериодПланирования,Номер",ПериодПлана,СтрокаПоказатель.НомерСтроки));
			Если СтрокиНайдено.Количество()>0 Тогда
				Значение = СтрокиНайдено[0].Значение;
			КонецЕсли;
            ОценочнаяВеличина = ОценочнаяВеличина + СтрокаПоказатель.ОценкаПараметра * Значение;
		КонецЦикла;
		МассивОценочныхЗначений[Инд-1] = ОценочнаяВеличина;
		СуммаОценочныхВеличин = СуммаОценочныхВеличин + ОценочнаяВеличина;
		ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
	КонецЦикла;
	СредняяОценочнаяВеличина = СуммаОценочныхВеличин / Объект.КоличествоНаблюдаемыхПериодов;
	Сумма_Отклонений = 0;
	СуммаКвадратовОтклоненийОтСредней = 0;
	ОбластьДополнительно = Макет.ПолучитьОбласть("Дополнительно");
	ОбластьДополнительно.Параметры.Заголовок = "Базовая оценка: "+Строка(Объект.БазоваяОценка);
	ТаблицаСтатистическиеДанные.Вывести(ОбластьДополнительно);
	// вывод результирующих
	ОбластьЗаголовок.Параметры.Заголовок = "Анализ модели на основании исходных данных";
	ТаблицаСтатистическиеДанные.Вывести(ОбластьЗаголовок);
	ТаблицаСтатистическиеДанные.Вывести(ОбластьШапкаТаблицыБаза);
	ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
	Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
		ОбластьШапкаТаблицыКолонка.Параметры.Период = ПериодПлана;
		ОбластьШапкаТаблицыКолонка.Параметры.ПериодПредставление = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,Строка((ПериодПлана-'00010101')/(24*60*60)+1),фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПредставлениеПериодаСтрокой(ПериодПлана,СценарийНаблюдаемый));
		ТаблицаСтатистическиеДанные.Присоединить(ОбластьШапкаТаблицыКолонка);
		ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
	КонецЦикла;
	ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
	Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
		ОценочнаяВеличина = МассивОценочныхЗначений[Инд-1];
		Значение = 0;
		СтрокиНайдено = Объект.НаблюдаемыеЗначенияПрогнозируемогоПоказателя.НайтиСтроки(Новый Структура("ПериодПланирования",ПериодПлана));
		Если СтрокиНайдено.Количество()>0 Тогда
			Значение = СтрокиНайдено[0].Значение;
		КонецЕсли;
		Отклонение = Значение - ОценочнаяВеличина;
		МассивОтклонений[Инд-1] = Отклонение;
		МассивФактическихЗначений[Инд-1] = Значение;
		Сумма_Отклонений = Сумма_Отклонений + Отклонение;
		СуммаКвадратовОтклоненийОтСредней = СуммаКвадратовОтклоненийОтСредней + Pow(Значение - СредняяОценочнаяВеличина,2);
		ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
	КонецЦикла;
	ОбластьСтрокаТаблицыБаза.Параметры.Показатель = "Фактическое значение";
	ТаблицаСтатистическиеДанные.Вывести(ОбластьСтрокаТаблицыБаза);
	ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
	Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
		ОбластьСтрокаТаблицыКолонка.Параметры.Значение = МассивФактическихЗначений[Инд-1];
		ТаблицаСтатистическиеДанные.Присоединить(ОбластьСтрокаТаблицыКолонка);
		ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
	КонецЦикла;
	ОбластьСтрокаТаблицыБаза.Параметры.Показатель = "Расчетное значение";
	ТаблицаСтатистическиеДанные.Вывести(ОбластьСтрокаТаблицыБаза);
	ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
	Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
		ОбластьСтрокаТаблицыКолонка.Параметры.Значение = МассивОценочныхЗначений[Инд-1];
		ТаблицаСтатистическиеДанные.Присоединить(ОбластьСтрокаТаблицыКолонка);
		ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
	КонецЦикла;
	ОбластьСтрокаТаблицыБаза.Параметры.Показатель = "Отклонение";
	ТаблицаСтатистическиеДанные.Вывести(ОбластьСтрокаТаблицыБаза);
	ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
	Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
		ОбластьСтрокаТаблицыКолонка.Параметры.Значение = МассивОтклонений[Инд-1];
		ТаблицаСтатистическиеДанные.Присоединить(ОбластьСтрокаТаблицыКолонка);
		ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
	КонецЦикла;
	КоэффициентДетерминации = ?(СуммаКвадратовОтклоненийОтСредней=0,0,1 - Сумма_Отклонений / СуммаКвадратовОтклоненийОтСредней);
	ОбластьДополнительно = Макет.ПолучитьОбласть("Дополнительно");
	ОбластьДополнительно.Параметры.Заголовок = "Выборочный коэффициент детерминации (R^2): "+Строка(КоэффициентДетерминации);
	ТаблицаСтатистическиеДанные.Вывести(ОбластьДополнительно);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьМодель(Команда)
	Если НЕ ПроверитьЗаполнение() Тогда
		ПоказатьПредупреждение(,"Проверьте настройки! Сохранение не выполнено");
		Возврат;
	КонецЕсли;
	Если ЗначениеЗаполнено(СохраненнаяМодель) Тогда
		Ответ = Вопрос("Обновить существующую модель?
		|	Да - обновить существующую;
		|	Нет - создать новую;
		|	Отмена - не сохранять",РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ=КодВозвратаДиалога.Отмена Тогда
			Возврат;
		ИначеЕсли Ответ=КодВозвратаДиалога.Да Тогда
			СохранитьМодельСервер(Истина);
		Иначе
			Наименование = Строка(Объект.ПрогнозируемыйПоказатель);
			ВвестиСтроку(Наименование,"Укажите наименование модели для сохранения",150);
			СохранитьМодельСервер(,Наименование);
		КонецЕсли;
	Иначе
		Наименование = Строка(Объект.ПрогнозируемыйПоказатель);
		ВвестиСтроку(Наименование,"Укажите наименование модели для сохранения",150);
		СохранитьМодельСервер(,Наименование);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьМодельСервер(Имеющаяся = Ложь,Наименование = "")
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.СтраницаИсходныеДанные И Объект.СпособСбораНаблюдаемыхДанных=ПредопределенноеЗначение("Перечисление.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения") Тогда
		ВыполнитьСборДанных();
	КонецЕсли;
	Если Имеющаяся = Ложь Тогда
		Модель = Справочники.фин_МоделиПрогнозирования.СоздатьЭлемент();
		Модель.УстановитьНовыйКод();
		Модель.Наименование = ?(СокрЛП(Наименование)="",Объект.ПрогнозируемыйПоказатель.Наименование,Наименование);
	Иначе
		Модель = СохраненнаяМодель.ПолучитьОбъект();
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Модель,Объект);
	Для Каждого ТЧ Из Метаданные.Справочники.фин_МоделиПрогнозирования.ТабличныеЧасти Цикл
		Модель[ТЧ.Имя].Загрузить(Объект[ТЧ.Имя].Выгрузить());
	КонецЦикла;
	Попытка
		Модель.Записать();
		СохраненнаяМодель = Модель.Ссылка;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Модель не записана по причине:
		|	"+ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПрогнозируемыйПоказательПриИзменении(Элемент)
	Объект.ОбластьДействия.Очистить();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПрогнозирование()
	ВыполнитьСборДанных();
	
	// выполнение прогноза
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.Прогноз();	
	ЗначениеВРеквизитФормы(ОбъектОбработки,"Объект");
	ВывестиДанныеПрогнозаВТабличныйДокумент();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьСборДанных()
	// считывание данных в табличные части
	Объект.НаблюдаемыеЗначенияИсходныхПоказателей.Очистить();
	Объект.НаблюдаемыеЗначенияПрогнозируемогоПоказателя.Очистить();
	Объект.ПрогнозируемыеЗначенияИсходныхПоказателей.Очистить();
	// считывание наблюдений прогнозируемого показателя
 	БезИсходныхДанных = (Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии") ИЛИ Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии")) И Объект.ФиксированныеОценкиПараметров;
	ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
	СценарийНаблюдаемый = ?(Объект.ПорядокОпределенияСценарияНаблюдаемыхДанных=Перечисления.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ВыбранныйСценарий И ЗначениеЗаполнено(Объект.СценарийНаблюдаемыхДанных),Объект.СценарийНаблюдаемыхДанных,Объект.СценарийПрогнозныхДанных);
	Если НЕ БезИсходныхДанных Тогда
		Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
			Колонка =  Формат(4+Инд-1,"ЧГ=");
	        Значение = ТаблицаИсходныеДанные.Область("R5C"+Колонка+":R5C"+Колонка).Значение;
			НС = Объект.НаблюдаемыеЗначенияПрогнозируемогоПоказателя.Добавить();
			НС.Значение = Значение;
			НС.ПериодПланирования = ПериодПлана;
			ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
		КонецЦикла;
	КонецЕсли;
	Если Объект.ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии ИЛИ Объект.ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии Тогда
		// считывание исходных показателей
		Если НЕ БезИсходныхДанных Тогда
			ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
			Для Каждого СтрокаПоказатель Из Объект.НаблюдаемыеИсходныеПоказатели Цикл
				ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
				Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
					Колонка =  Формат(4+Инд-1,"ЧГ=");
					Ряд = Формат(9  + СтрокаПоказатель.НомерСтроки,"ЧГ=");
			        Значение = ТаблицаИсходныеДанные.Область("R"+Ряд+"C"+Колонка+":R"+Ряд+"C"+Колонка).Значение;
					НС = Объект.НаблюдаемыеЗначенияИсходныхПоказателей.Добавить();
					НС.Значение = Значение;
					НС.Показатель = СтрокаПоказатель.Показатель;
					НС.ПериодПланирования = ПериодПлана;
					НС.Номер = СтрокаПоказатель.НомерСтроки;
					ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		// вывод сетки для прогнозных входящих показателей
		ПериодПлана = Объект.ПрогнозируемыйПериод;
		Для Каждого СтрокаПоказатель Из Объект.НаблюдаемыеИсходныеПоказатели Цикл
			ПериодПлана = Объект.ПрогнозируемыйПериод;
			Для Инд = 1 По Объект.КоличествоПрогнозируемыхПериодов Цикл
				Колонка =  Формат(4+Инд-1,"ЧГ=");
				Ряд = Формат(?(БезИсходныхДанных,4,13+Объект.НаблюдаемыеИсходныеПоказатели.Количество()) + СтрокаПоказатель.НомерСтроки,"ЧГ=");
		        Значение = ТаблицаИсходныеДанные.Область("R"+Ряд+"C"+Колонка+":R"+Ряд+"C"+Колонка).Значение;
				НС = Объект.ПрогнозируемыеЗначенияИсходныхПоказателей.Добавить();
				НС.Значение = Значение;
				НС.Показатель = СтрокаПоказатель.Показатель;
				НС.ПериодПланирования = ПериодПлана;
				НС.Номер = СтрокаПоказатель.НомерСтроки;
				ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,Объект.СценарийПрогнозныхДанных,1));
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВывестиДанныеПрогнозаВТабличныйДокумент()
    Макет = Обработки.фин_РасчетПоМоделиПрогнозирования.ПолучитьМакет("Макет");
	ТаблицаПрогноз.Очистить();
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицыБаза = Макет.ПолучитьОбласть("ШапкаТаблицы|База");
	ОбластьШапкаТаблицыКолонка = Макет.ПолучитьОбласть("ШапкаТаблицы|Колонка");
	ОбластьСтрокаТаблицыБаза = Макет.ПолучитьОбласть("СтрокаТаблицы|База");
	ОбластьСтрокаТаблицыКолонка = Макет.ПолучитьОбласть("СтрокаТаблицы|Колонка");
	// вывод результирующих
	ОбластьЗаголовок.Параметры.Заголовок = "Прогнозные значения";
	ТаблицаПрогноз.Вывести(ОбластьЗаголовок);
	ТаблицаПрогноз.Вывести(ОбластьШапкаТаблицыБаза);
	ПериодПлана = Объект.ПрогнозируемыйПериод;
	Для Инд = 1 По Объект.КоличествоПрогнозируемыхПериодов Цикл
		ОбластьШапкаТаблицыКолонка.Параметры.Период = ПериодПлана;
		ОбластьШапкаТаблицыКолонка.Параметры.ПериодПредставление = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПредставлениеПериодаСтрокой(ПериодПлана,Объект.СценарийПрогнозныхДанных);
		ТаблицаПрогноз.Присоединить(ОбластьШапкаТаблицыКолонка);
		ПериодПлана = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,Объект.СценарийПрогнозныхДанных,1);
	КонецЦикла;
	ОбластьСтрокаТаблицыБаза.Параметры.Показатель = Объект.ПрогнозируемыйПоказатель;
	ТаблицаПрогноз.Вывести(ОбластьСтрокаТаблицыБаза);
	ПериодПлана = Объект.ПрогнозируемыйПериод;
	Для Инд = 1 По Объект.КоличествоПрогнозируемыхПериодов Цикл
		Значение = 0;
		Строки = Объект.ПрогнозныеЗначения.НайтиСтроки(Новый Структура("ПериодПланирования",ПериодПлана));
		Если Строки.Количество()>0 Тогда
			Значение = Строки[0].Прогноз;
		КонецЕсли;
		ОбластьСтрокаТаблицыКолонка.Параметры.Значение = Значение;
		ТаблицаПрогноз.Присоединить(ОбластьСтрокаТаблицыКолонка);
		ПериодПлана = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,Объект.СценарийПрогнозныхДанных,1);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьСборИсходныхДанных(Пересчет)
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.ПолучитьИсходныеДанные(Пересчет);
	ОбъектОбработки.ПолучитьДанныеИсходныхПоказателейЗаПрогнозируемыйПериод();
	ЗначениеВРеквизитФормы(ОбъектОбработки,"Объект");
	ВывестиДанныеВТабличныйДокумент();
КонецПроцедуры

&НаСервере
Процедура ВывестиДанныеВТабличныйДокумент()
 	БезИсходныхДанных = (Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии") ИЛИ Объект.ВидМоделиПрогнозирования=ПредопределенноеЗначение("Перечисление.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии")) И Объект.ФиксированныеОценкиПараметров;
   	Макет = Обработки.фин_РасчетПоМоделиПрогнозирования.ПолучитьМакет("Макет");
	ТаблицаИсходныеДанные.Очистить();
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицыБаза = Макет.ПолучитьОбласть("ШапкаТаблицы|База");
	ОбластьШапкаТаблицыКолонка = Макет.ПолучитьОбласть("ШапкаТаблицы|Колонка");
	ОбластьСтрокаТаблицыБаза = Макет.ПолучитьОбласть("СтрокаТаблицы|База");
	ОбластьСтрокаТаблицыКолонка = Макет.ПолучитьОбласть("СтрокаТаблицы|Колонка");
	Если НЕ БезИсходныхДанных Тогда
		// вывод результирующих
		ОбластьЗаголовок.Параметры.Заголовок = "Наблюдаемые значения прогнозируемого показателя";
		ТаблицаИсходныеДанные.Вывести(ОбластьЗаголовок);
		ТаблицаИсходныеДанные.Вывести(ОбластьШапкаТаблицыБаза);
		ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
		СценарийНаблюдаемый = ?(Объект.ПорядокОпределенияСценарияНаблюдаемыхДанных=Перечисления.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ВыбранныйСценарий И ЗначениеЗаполнено(Объект.СценарийНаблюдаемыхДанных),Объект.СценарийНаблюдаемыхДанных,Объект.СценарийПрогнозныхДанных);
		Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
			ОбластьШапкаТаблицыКолонка.Параметры.Период = ПериодПлана;
			ОбластьШапкаТаблицыКолонка.Параметры.ПериодПредставление = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,Строка((ПериодПлана-'00010101')/(24*60*60)+1),фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПредставлениеПериодаСтрокой(ПериодПлана,СценарийНаблюдаемый));
			ТаблицаИсходныеДанные.Присоединить(ОбластьШапкаТаблицыКолонка);
			ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
		КонецЦикла;
		ОбластьСтрокаТаблицыБаза.Параметры.Показатель = Объект.ПрогнозируемыйПоказатель;
		ТаблицаИсходныеДанные.Вывести(ОбластьСтрокаТаблицыБаза);
		ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
		Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
			Значение = 0;
			Строки = Объект.НаблюдаемыеЗначенияПрогнозируемогоПоказателя.НайтиСтроки(Новый Структура("ПериодПланирования",ПериодПлана));
			Если Строки.Количество()>0 Тогда
				Значение = Строки[0].Значение;
			КонецЕсли;
			ОбластьСтрокаТаблицыКолонка.Параметры.Значение = Значение;
			ТаблицаИсходныеДанные.Присоединить(ОбластьСтрокаТаблицыКолонка);
			ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
		КонецЦикла;
	КонецЕсли;
	Если Объект.ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии ИЛИ Объект.ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии Тогда
		Если НЕ БезИсходныхДанных Тогда
			// вывод исходных показателей
			ОбластьЗаголовок.Параметры.Заголовок = "Наблюдаемые значения исходных показателей";
			ТаблицаИсходныеДанные.Вывести(ОбластьЗаголовок);
			ТаблицаИсходныеДанные.Вывести(ОбластьШапкаТаблицыБаза);
			ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
			Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
				ОбластьШапкаТаблицыКолонка.Параметры.Период = ПериодПлана;
				ОбластьШапкаТаблицыКолонка.Параметры.ПериодПредставление = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,Строка((ПериодПлана-'00010101')/(24*60*60)+1),фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПредставлениеПериодаСтрокой(ПериодПлана,СценарийНаблюдаемый));
				ТаблицаИсходныеДанные.Присоединить(ОбластьШапкаТаблицыКолонка);
				ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
			КонецЦикла;
			Для Каждого СтрокаПоказатель Из Объект.НаблюдаемыеИсходныеПоказатели Цикл
				ОбластьСтрокаТаблицыБаза.Параметры.Показатель = СтрокаПоказатель.Показатель;
				ТаблицаИсходныеДанные.Вывести(ОбластьСтрокаТаблицыБаза);
				ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
				Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
					Значение = 0;
					Строки = Объект.НаблюдаемыеЗначенияИсходныхПоказателей.НайтиСтроки(Новый Структура("ПериодПланирования,Номер",ПериодПлана,СтрокаПоказатель.НомерСтроки));
					Если Строки.Количество()>0 Тогда
						Значение = Строки[0].Значение;
					КонецЕсли;
					ОбластьСтрокаТаблицыКолонка.Параметры.Значение = Значение;
					ТаблицаИсходныеДанные.Присоединить(ОбластьСтрокаТаблицыКолонка);
					ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		// вывод сетки для прогнозных входящих показателей
		ОбластьЗаголовок.Параметры.Заголовок = "Прогнозируемые значения исходных показателей";
		ТаблицаИсходныеДанные.Вывести(ОбластьЗаголовок);
		ТаблицаИсходныеДанные.Вывести(ОбластьШапкаТаблицыБаза);
		ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=ПредопределенноеЗначение("Перечисление.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения"),'00010101',Объект.ПрогнозируемыйПериод);
		Для Инд = 1 По Объект.КоличествоПрогнозируемыхПериодов Цикл
			ОбластьШапкаТаблицыКолонка.Параметры.Период = ПериодПлана;
			ОбластьШапкаТаблицыКолонка.Параметры.ПериодПредставление = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,Строка((ПериодПлана-'00010101')/(24*60*60)+1),фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПредставлениеПериодаСтрокой(ПериодПлана,Объект.СценарийПрогнозныхДанных));
			ТаблицаИсходныеДанные.Присоединить(ОбластьШапкаТаблицыКолонка);
			ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения И НЕ Объект.ФиксированныеОценкиПараметров,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,Объект.СценарийПрогнозныхДанных,1));
		КонецЦикла;
		Для Каждого СтрокаПоказатель Из Объект.НаблюдаемыеИсходныеПоказатели Цикл
			ОбластьСтрокаТаблицыБаза.Параметры.Показатель = СтрокаПоказатель.Показатель;
			ТаблицаИсходныеДанные.Вывести(ОбластьСтрокаТаблицыБаза);
			ПериодПлана = Объект.ПрогнозируемыйПериод;
			Для Инд = 1 По Объект.КоличествоПрогнозируемыхПериодов Цикл
				Значение = 0;
				СтрокиЗначения = Объект.ПрогнозируемыеЗначенияИсходныхПоказателей.НайтиСтроки(Новый Структура("ПериодПланирования,Номер",ПериодПлана,СтрокаПоказатель.НомерСтроки));
				Если СтрокиЗначения.Количество()<>0 Тогда
					Значение = СтрокиЗначения[0].Значение;
				КонецЕсли;
				ОбластьСтрокаТаблицыКолонка.Параметры.Значение = Значение;
				ТаблицаИсходныеДанные.Присоединить(ОбластьСтрокаТаблицыКолонка);
				ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения И НЕ Объект.ФиксированныеОценкиПараметров,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,Объект.СценарийПрогнозныхДанных,1));
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КоличествоНаблюдаемыхПериодовПриИзменении(Элемент)
	НастройкаПериодов();
КонецПроцедуры

&НаКлиенте
Процедура СценарийНаблюдаемыхДанныхПриИзменении(Элемент)
	НастройкаПериодов();
	НастроитьФорматы();
КонецПроцедуры

&НаКлиенте
Процедура СценарийПрогнозныхДанныхПриИзменении(Элемент)
	НастройкаПериодов();
	НастроитьФорматы();
КонецПроцедуры

&НаСервере
Процедура НастройкаПериодов()
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.НастроитьПериодыПрогноза();	
	ЗначениеВРеквизитФормы(ОбъектОбработки,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура СпособСбораНаблюдаемыхДанныхПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПрогнозируемыйПериодПриИзменении(Элемент)
	НастройкаПериодов();
КонецПроцедуры

&НаКлиенте
Процедура ФормулаПреобразованияНаблюдаемыхЗначенийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ОбработатьВыборФормулы(Объект.ФормулаПреобразованияНаблюдаемыхЗначений);
	Если Результат <> Неопределено Тогда
		Объект.ФормулаПреобразованияНаблюдаемыхЗначений = Результат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ОбработатьВыборФормулы(Текст)
 	Возврат ОткрытьФормуМодально("Обработка.фин_РасчетПоМоделиПрогнозирования.Форма.ФормаФормулы",Новый Структура("Формула",Текст),ЭтотОбъект);
КонецФункции

&НаКлиенте
Процедура ФормулаПреобразованияПрогнозируемыхЗначенийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ОбработатьВыборФормулы(Объект.ФормулаПреобразованияПрогнозируемыхЗначений);
	Если Результат <> Неопределено Тогда
		Объект.ФормулаПреобразованияПрогнозируемыхЗначений = Результат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НаблюдаемыеИсходныеПоказателиФормулаПреобразованияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Результат = ОбработатьВыборФормулы(Элементы.НаблюдаемыеИсходныеПоказатели.ТекущиеДанные.ФормулаПреобразования);
	Если Результат <> Неопределено Тогда
		Элементы.НаблюдаемыеИсходныеПоказатели.ТекущиеДанные.ФормулаПреобразования = Результат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбластьДействияИзмерениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокРазрезов;
КонецПроцедуры

&НаКлиенте
Процедура ОбластьДействияИзмерениеПриИзменении(Элемент)

	ТекущиеДанные = Элементы.ОбластьДействия.ТекущаяСтрока;
	ОбработатьИзменениеРазрезаУчета(ТекущиеДанные);
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеРазрезаУчета(ТекущаяСтрока)
	ТекущиеДанные = Объект.ОбластьДействия.НайтиПоИдентификатору(ТекущаяСтрока);
	ТекущиеДанные.Разрез = фин_РаботаСДополнительнымиРазрезамиБюджетирования.РазрезПоИзмерению(ТекущиеДанные.Измерение);
	Если ЗначениеЗаполнено(ТекущиеДанные.Разрез) Тогда
		ТекущиеДанные.Значение = ТекущиеДанные.Разрез.ТипЗначения.ПривестиЗначение(ТекущиеДанные.Значение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбластьДействияЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Элемент.ОграничениеТипа = Элементы.ОбластьДействия.ТекущиеДанные.Разрез.ТипЗначения;
КонецПроцедуры

&НаКлиенте
Процедура КоличествоНаблюдаемыхПериодовРегулирование(Элемент, Направление, СтандартнаяОбработка)
	НастройкаПериодов();
КонецПроцедуры

&НаКлиенте
Процедура ПорядокОпределенияСценарияНаблюдаемыхДанныхПриИзменении(Элемент)
	НастройкаПериодов();
	НастроитьФорматы();
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	Если Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаИсходныеДанные Тогда
		ТаблицаИсходныеДанные.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаПрогнозныеЗначения Тогда
		ТаблицаИсходныеДанные.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаСтатистическиеДанные Тогда
		ТаблицаСтатистическиеДанные.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	Иначе
		ТаблицаКорреляционныйАнализ.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НачалоНаблюдаемогоПериодаПриИзменении(Элемент)
	НастройкаПериодов();
КонецПроцедуры

&НаКлиенте
Процедура НачалоНаблюдаемогоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СценарийНаблюдаемый = ?(Объект.ПорядокОпределенияСценарияНаблюдаемыхДанных=ПредопределенноеЗначение("Перечисление.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ВыбранныйСценарий") И ЗначениеЗаполнено(Объект.СценарийНаблюдаемыхДанных),Объект.СценарийНаблюдаемыхДанных,Объект.СценарийПрогнозныхДанных);
	Если ЗначениеЗаполнено(СценарийНаблюдаемый) Тогда
		СтандартнаяОбработка = Ложь;
		ОбработатьРегулированиеПериода(СценарийНаблюдаемый,Направление);
	КонецЕсли;
	НастройкаПериодов();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРегулированиеПериода(СценарийНаблюдаемый,Направление)
	Объект.НачалоНаблюдаемогоПериода = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(Объект.НачалоНаблюдаемогоПериода,СценарийНаблюдаемый,Направление);
КонецПроцедуры

&НаКлиенте
Процедура ПрогнозируемыйПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.СценарийПрогнозныхДанных) Тогда
		СтандартнаяОбработка = Ложь;
		ОбработатьРегулированиеПрогнозногоПериода(Направление);
	КонецЕсли;
	НастройкаПериодов();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРегулированиеПрогнозногоПериода(Направление)
	Объект.ПрогнозируемыйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(Объект.ПрогнозируемыйПериод,Объект.СценарийПрогнозныхДанных,Направление);
КонецПроцедуры

&НаКлиенте
Процедура ФиксированныеОценкиМНКПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура КорреляционныйАнализ(Команда)
	ВыполнитьКорреляционныйАнализ();
	Элементы.Страницы.ТекущаяСтраница=Элементы.Страницы.ПодчиненныеЭлементы.СтраницаКорреляционныйАнализ;
	УстановитьВидимостьКнопок();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКорреляционныйАнализ()
	ВыполнитьСборДанных();
    Макет = Обработки.фин_РасчетПоМоделиПрогнозирования.ПолучитьМакет("Макет");
	ТаблицаКорреляционныйАнализ.Очистить();
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицыБаза = Макет.ПолучитьОбласть("ШапкаТаблицы|База");
	ОбластьШапкаТаблицыКолонка = Макет.ПолучитьОбласть("ШапкаТаблицы|Колонка");
	ОбластьШапкаТаблицыКолонкаПараметр =Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаПараметр"); 
	ОбластьСтрокаТаблицыБаза = Макет.ПолучитьОбласть("СтрокаТаблицы|База");
	ОбластьСтрокаТаблицыКолонка = Макет.ПолучитьОбласть("СтрокаТаблицы|Колонка");
	ОбластьСтрокаТаблицыКолонкаОценка = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаПараметр");
	ТаблицаПоказателей = Новый ТаблицаЗначений;
	ТаблицаПоказателей.Колонки.Добавить("Среднее", Новый ОписаниеТипов("Число"));
	ТаблицаПоказателей.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	ТаблицаПоказателей.Колонки.Добавить("СуммаКвадратов", Новый ОписаниеТипов("Число"));
	ТаблицаПоказателей.Колонки.Добавить("КвадратСреднего", Новый ОписаниеТипов("Число"));
	ТаблицаПоказателей.Колонки.Добавить("СреднийКвадрат", Новый ОписаниеТипов("Число"));
	ТаблицаПоказателей.Колонки.Добавить("КоэффициентКорреляции", Новый ОписаниеТипов("Число"));
	Для Каждого СтрокаПоказатель Из Объект.НаблюдаемыеИсходныеПоказатели Цикл
		ТаблицаПоказателей.Колонки.Добавить("КоэффициентКорреляции"+Строка(СтрокаПоказатель.НомерСтроки), Новый ОписаниеТипов("Число"));
	КонецЦикла;
	
	СценарийНаблюдаемый = ?(Объект.ПорядокОпределенияСценарияНаблюдаемыхДанных=Перечисления.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ВыбранныйСценарий И ЗначениеЗаполнено(Объект.СценарийНаблюдаемыхДанных),Объект.СценарийНаблюдаемыхДанных,Объект.СценарийПрогнозныхДанных);
	Сумма = 0;
	СуммаКвадратов = 0;
	ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
	Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
        Значение = 0;
		СтрокиЗначения = Объект.НаблюдаемыеЗначенияПрогнозируемогоПоказателя.НайтиСтроки(Новый Структура("ПериодПланирования",ПериодПлана));
		Если СтрокиЗначения.Количество()>0 Тогда
			Значение = СтрокиЗначения[0].Значение;
		КонецЕсли;
		Сумма = Сумма + Значение;
		СуммаКвадратов = СуммаКвадратов + Значение * Значение;
		ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
	КонецЦикла;
	НС = ТаблицаПоказателей.Добавить();
	НС.Среднее = Сумма / Объект.КоличествоНаблюдаемыхПериодов;
	НС.Сумма = Сумма;
	НС.СуммаКвадратов = СуммаКвадратов;
	НС.СреднийКвадрат = СуммаКвадратов / Объект.КоличествоНаблюдаемыхПериодов;
	НС.КвадратСреднего = НС.Среднее * НС.Среднее;
	Для Каждого СтрокаПоказатель Из Объект.НаблюдаемыеИсходныеПоказатели Цикл
		Сумма = 0;
		СуммаКвадратов = 0;
		СуммаПроизведенийНаУ = 0;
		ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
		Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
	        Значение_У = 0;
			СтрокиЗначения = Объект.НаблюдаемыеЗначенияПрогнозируемогоПоказателя.НайтиСтроки(Новый Структура("ПериодПланирования",ПериодПлана));
			Если СтрокиЗначения.Количество()>0 Тогда
				Значение_У = СтрокиЗначения[0].Значение;
			КонецЕсли;
	        Значение = 0;
			СтрокиЗначения = Объект.НаблюдаемыеЗначенияИсходныхПоказателей.НайтиСтроки(Новый Структура("ПериодПланирования,Номер",ПериодПлана,СтрокаПоказатель.НомерСтроки));
			Если СтрокиЗначения.Количество()>0 Тогда
				Значение = СтрокиЗначения[0].Значение;
			КонецЕсли;
			СуммаПроизведенийНаУ = СуммаПроизведенийНаУ +  Значение_У * Значение;
			Сумма = Сумма + Значение;
			СуммаКвадратов = СуммаКвадратов + Значение * Значение;
			ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
		КонецЦикла;
		НС = ТаблицаПоказателей.Добавить();
		НС.Среднее = Сумма / Объект.КоличествоНаблюдаемыхПериодов;
		НС.Сумма = Сумма;
		НС.СуммаКвадратов = СуммаКвадратов;
		НС.СреднийКвадрат = СуммаКвадратов / Объект.КоличествоНаблюдаемыхПериодов;
		НС.КвадратСреднего = НС.Среднее * НС.Среднее;
		Попытка
			НС.КоэффициентКорреляции = ((1/Объект.КоличествоНаблюдаемыхПериодов)*(СуммаПроизведенийНаУ - Объект.КоличествоНаблюдаемыхПериодов*НС.Среднее*ТаблицаПоказателей[0].Среднее))/(Sqrt(НС.СреднийКвадрат - НС.КвадратСреднего)*Sqrt(ТаблицаПоказателей[0].СреднийКвадрат - ТаблицаПоказателей[0].КвадратСреднего));
		Исключение
		КонецПопытки;
	КонецЦикла;
	Для Каждого СтрокаПоказательБазовый Из Объект.НаблюдаемыеИсходныеПоказатели Цикл
		Для Каждого СтрокаПоказатель Из Объект.НаблюдаемыеИсходныеПоказатели Цикл
			Если СтрокаПоказательБазовый.НомерСтроки = СтрокаПоказатель.НомерСтроки Тогда
				Продолжить;
			КонецЕсли;
			СуммаПроизведенийНаУ = 0;
			ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,'00010101',Объект.НачалоНаблюдаемогоПериода);
			Для Инд = 1 По Объект.КоличествоНаблюдаемыхПериодов Цикл
		        Значение_У = 0;
				СтрокиЗначения = Объект.НаблюдаемыеЗначенияИсходныхПоказателей.НайтиСтроки(Новый Структура("ПериодПланирования,Номер",ПериодПлана,СтрокаПоказательБазовый.НомерСтроки));
				Если СтрокиЗначения.Количество()>0 Тогда
					Значение_У = СтрокиЗначения[0].Значение;
				КонецЕсли;
		        Значение = 0;
				СтрокиЗначения = Объект.НаблюдаемыеЗначенияИсходныхПоказателей.НайтиСтроки(Новый Структура("ПериодПланирования,Номер",ПериодПлана,СтрокаПоказатель.НомерСтроки));
				Если СтрокиЗначения.Количество()>0 Тогда
					Значение = СтрокиЗначения[0].Значение;
				КонецЕсли;
				СуммаПроизведенийНаУ = СуммаПроизведенийНаУ +  Значение_У * Значение;
				ПериодПлана = ?(Объект.СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения,ПериодПлана+24*60*60,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПериодПлана,СценарийНаблюдаемый,1));
			КонецЦикла;
			НС = ТаблицаПоказателей[СтрокаПоказательБазовый.НомерСтроки];
			Попытка
				НС["КоэффициентКорреляции"+Строка(СтрокаПоказатель.НомерСтроки)] = ((1/Объект.КоличествоНаблюдаемыхПериодов)*(СуммаПроизведенийНаУ - Объект.КоличествоНаблюдаемыхПериодов*НС.Среднее*ТаблицаПоказателей[СтрокаПоказатель.НомерСтроки].Среднее))/(Sqrt(НС.СреднийКвадрат - НС.КвадратСреднего)*Sqrt(ТаблицаПоказателей[СтрокаПоказатель.НомерСтроки].СреднийКвадрат - ТаблицаПоказателей[СтрокаПоказатель.НомерСтроки].КвадратСреднего));
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЦикла;
	
	// вывод результирующих
	ОбластьЗаголовок.Параметры.Заголовок = "Корреляционный анализ";
	ТаблицаКорреляционныйАнализ.Вывести(ОбластьЗаголовок);
	ТаблицаКорреляционныйАнализ.Вывести(ОбластьШапкаТаблицыБаза);
	СписокХарактеристик = Новый СписокЗначений;
	СписокХарактеристик.Добавить("НомерСтроки", "Номер");
	СписокХарактеристик.Добавить("КоэффициентКорреляции", "r xy");
	Если  Объект.НаблюдаемыеИсходныеПоказатели.Количество()>1 Тогда
		Для Каждого СтрокаПоказатель Из Объект.НаблюдаемыеИсходныеПоказатели Цикл
			СписокХарактеристик.Добавить("КоэффициентКорреляции"+Строка(СтрокаПоказатель.НомерСтроки), "r xx"+Строка(СтрокаПоказатель.НомерСтроки));
		КонецЦикла;
    КонецЕсли;
	Для Каждого ЭлементСписка Из СписокХарактеристик Цикл
		ОбластьШапка = ?(ЭлементСписка.Значение="НомерСтроки",ОбластьШапкаТаблицыКолонка,ОбластьШапкаТаблицыКолонкаПараметр);
		ОбластьШапка.Параметры.Период = ЭлементСписка.Значение;
		ОбластьШапка.Параметры.ПериодПредставление = ЭлементСписка.Представление;
		ТаблицаКорреляционныйАнализ.Присоединить(ОбластьШапка);
	КонецЦикла;
	Для Каждого СтрокаПоказатель Из Объект.НаблюдаемыеИсходныеПоказатели Цикл
		ОбластьСтрокаТаблицыБаза.Параметры.Показатель = СтрокаПоказатель.Показатель;
		ТаблицаКорреляционныйАнализ.Вывести(ОбластьСтрокаТаблицыБаза);
		Для Каждого ЭлементСписка Из СписокХарактеристик Цикл
			ОбластьСтрока = ?(ЭлементСписка.Значение="НомерСтроки",ОбластьСтрокаТаблицыКолонка,ОбластьСтрокаТаблицыКолонкаОценка);
			ОбластьСтрока.Параметры.Значение = ?(ЭлементСписка.Значение="НомерСтроки",СтрокаПоказатель.НомерСтроки,ТаблицаПоказателей[СтрокаПоказатель.НомерСтроки][ЭлементСписка.Значение]);
			ТаблицаКорреляционныйАнализ.Присоединить(ОбластьСтрока);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры
