#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если ПорядокОпределенияСценарияНаблюдаемыхДанных=Перечисления.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ПрогнозируемыйСценарий Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СценарийНаблюдаемыхДанных");
	КонецЕсли;
	Если СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НачалоНаблюдаемогоПериода");
		МассивНепроверяемыхРеквизитов.Добавить("ОкончаниеНаблюдаемогоПериода");
	КонецЕсли;
	Если (ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии ИЛИ ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии) И ФиксированныеОценкиПараметров Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СценарийНаблюдаемыхДанных");
		МассивНепроверяемыхРеквизитов.Добавить("КоличествоНаблюдаемыхПериодов");
		МассивНепроверяемыхРеквизитов.Добавить("СпособСбораНаблюдаемыхДанных");
		МассивНепроверяемыхРеквизитов.Добавить("ПорядокОпределенияСценарияНаблюдаемыхДанных");
		МассивНепроверяемыхРеквизитов.Добавить("НачалоНаблюдаемогоПериода");
		МассивНепроверяемыхРеквизитов.Добавить("ОкончаниеНаблюдаемогоПериода");
	КонецЕсли;
	фин_ЗаполнениеДокументов.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
КонецПроцедуры

Процедура ПолучитьИсходныеДанные(ТребуетсяПересчет = Истина) Экспорт
	Если СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения Тогда
		Возврат;
	КонецЕсли;
	Если Не ТребуетсяПересчет Тогда
		Возврат;
	КонецЕсли;
	НаблюдаемыеЗначенияПрогнозируемогоПоказателя.Очистить();
	НаблюдаемыеЗначенияИсходныхПоказателей.Очистить();
	СценарийНаблюдаемый = ?(ПорядокОпределенияСценарияНаблюдаемыхДанных=Перечисления.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ВыбранныйСценарий И ЗначениеЗаполнено(СценарийНаблюдаемыхДанных),СценарийНаблюдаемыхДанных,СценарийПрогнозныхДанных);
    СписокФинансовыхПоказателей = Новый Массив;
	МаксимальныйЛагФинансовыхПоказателей = 0;
	СписокФинансовыхПоказателей.Добавить(ПрогнозируемыйПоказатель);
	СписокОборотныхРасчетныхПоказателей = Новый Массив;
	МаксимальныйЛагОборотныхРасчетныхПоказателей = 0;
	СписокОстаточныхРасчетныхПоказателей = Новый Массив;
	МаксимальныйЛагОстаточныхРасчетныхПоказателей = 0;
	Если ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии ИЛИ ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии Тогда
		Для Каждого СтрокаПоказатель Из НаблюдаемыеИсходныеПоказатели Цикл
			Если ТипЗнч(СтрокаПоказатель.Показатель)=Тип("СправочникСсылка.фин_ФинансовыеПоказатели") Тогда
				СписокФинансовыхПоказателей.Добавить(СтрокаПоказатель.Показатель);
				МаксимальныйЛагФинансовыхПоказателей = Макс(МаксимальныйЛагФинансовыхПоказателей,СтрокаПоказатель.Лаг);
			ИначеЕсли СтрокаПоказатель.Показатель.СпособВвода=Перечисления.фин_СпособыВводаЗначенийРасчетныхПоказателей.ВКаждомПериоде Тогда
				СписокОборотныхРасчетныхПоказателей.Добавить(СтрокаПоказатель.Показатель);
				МаксимальныйЛагОборотныхРасчетныхПоказателей = Макс(МаксимальныйЛагОборотныхРасчетныхПоказателей,СтрокаПоказатель.Лаг);
			Иначе
				СписокОстаточныхРасчетныхПоказателей.Добавить(СтрокаПоказатель.Показатель);
				МаксимальныйЛагОстаточныхРасчетныхПоказателей = Макс(МаксимальныйЛагОстаточныхРасчетныхПоказателей,СтрокаПоказатель.Лаг);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Запрос = Новый Запрос;
	Поле = фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(ПрогнозируемыйРесурсПоказателя);
	ТекстУсловия = "";
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_БюджетированиеПоОрганизациям") И ЗначениеЗаполнено(Организация) Тогда
		 ТекстУсловия = " И Организация = &Организация ";
		 Запрос.УстановитьПараметр("Организация",Организация);
	 КонецЕсли;
	Инд =1;
	Для Каждого Условие Из ОбластьДействия Цикл
		 ИмяПоля = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(Условие.Измерение);
		 ТекстУсловия = " И "+?(Найти(ИмяПоля,"Разрез")<>0,"ДополнительныеРазрезы.","")+ИмяПоля+" = &Параметр"+Формат(Инд,"ЧГ=");
		 Запрос.УстановитьПараметр("Параметр"+Формат(Инд,"ЧГ="),Условие.Значение);
		 Инд = Инд + 1;
	КонецЦикла;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Обороты.ФинансовыйПоказатель КАК ФинансовыйПоказатель,
		|	НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,"+Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийНаблюдаемый))+") КАК ПериодПланирования,
		|	СУММА(Обороты."+Поле+"Оборот) КАК Значение
		|ИЗ
		|	РегистрНакопления.фин_ОборотыБюджетов.Обороты(
		|			,
		|			,
		|			,
		|			ПериодПланирования >= &Начало
		|				И ПериодПланирования <= &Конец
		|				И Сценарий = &Сценарий
		|				И ФинансовыйПоказатель В (&Показатели)"+ТекстУсловия+") КАК Обороты
		|
		|СГРУППИРОВАТЬ ПО
		|	Обороты.ФинансовыйПоказатель,
		|	НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,"+Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийНаблюдаемый))+")
		|
		|УПОРЯДОЧИТЬ ПО
		|	НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,"+Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийНаблюдаемый))+"),
		|	ФинансовыйПоказатель";

	Запрос.УстановитьПараметр("Конец", ОкончаниеНаблюдаемогоПериода);
	Запрос.УстановитьПараметр("Начало", ?(МаксимальныйЛагФинансовыхПоказателей=0,НачалоНаблюдаемогоПериода,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(НачалоНаблюдаемогоПериода,СценарийНаблюдаемый,-МаксимальныйЛагФинансовыхПоказателей)));
	Запрос.УстановитьПараметр("Показатели", СписокФинансовыхПоказателей);
	Запрос.УстановитьПараметр("Сценарий", ?(ПорядокОпределенияСценарияНаблюдаемыхДанных=Перечисления.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ВыбранныйСценарий,СценарийНаблюдаемыхДанных,СценарийПрогнозныхДанных));

	Результат = Запрос.Выполнить().Выгрузить();

	ПлановыйПериод = НачалоНаблюдаемогоПериода;
	Пока ПлановыйПериод <= ОкончаниеНаблюдаемогоПериода Цикл
		// получение значений результирующего показателя
		Значение = 0;
		СтрокиФП = Результат.НайтиСтроки(Новый Структура("ФинансовыйПоказатель,ПериодПланирования",ПрогнозируемыйПоказатель,ПлановыйПериод));
		Если СтрокиФП.Количество()>0 Тогда
			Значение = СтрокиФП[0].Значение;
		КонецЕсли;
		НС = НаблюдаемыеЗначенияПрогнозируемогоПоказателя.Добавить();
		НС.ПериодПланирования = ПлановыйПериод;
		НС.Значение = Значение;
		// получение значений исходных показателей
		Для Каждого СтрокаПоказатель Из НаблюдаемыеИсходныеПоказатели Цикл
			Если ТипЗнч(СтрокаПоказатель.Показатель)=Тип("СправочникСсылка.фин_ФинансовыеПоказатели") Тогда
				Значение = 0;
				мПлановыйПериод = ПлановыйПериод;
				Если СтрокаПоказатель.Лаг<>0 Тогда
					мПлановыйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(мПлановыйПериод,СценарийНаблюдаемый,-СтрокаПоказатель.Лаг);
				КонецЕсли;
				СтрокиФП = Результат.НайтиСтроки(Новый Структура("ФинансовыйПоказатель,ПериодПланирования",СтрокаПоказатель.Показатель,мПлановыйПериод));
				Если СтрокиФП.Количество()>0 Тогда
					Значение = СтрокиФП[0].Значение;
				КонецЕсли;
				НС = НаблюдаемыеЗначенияИсходныхПоказателей.Добавить();
				НС.Показатель = СтрокаПоказатель.Показатель;
				НС.ПериодПланирования = ПлановыйПериод;
				НС.Значение = Значение;
				НС.Номер = СтрокаПоказатель.НомерСтроки;
			КонецЕсли;
		КонецЦикла;
		
		ПлановыйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПлановыйПериод,СценарийНаблюдаемый,1);
	КонецЦикла;
	
	Если (ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии ИЛИ ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии) И СписокОборотныхРасчетныхПоказателей.Количество()>0 Тогда

		Запрос = Новый Запрос;
		ТекстУсловия = "";
		Инд =1;
		Для Каждого Условие Из ОбластьДействия Цикл
			 ИмяПоля = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(Условие.Измерение);
			 ТекстУсловия = " И "+?(Найти(ИмяПоля,"Разрез")<>0,"ДополнительныеРазрезы.","")+ИмяПоля+" = &Параметр"+Формат(Инд,"ЧГ=");
			 Запрос.УстановитьПараметр("Параметр"+Формат(Инд,"ЧГ="),Условие.Значение);
			 Инд = Инд + 1;
		КонецЦикла;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Обороты.РасчетныйПоказатель КАК ФинансовыйПоказатель,
			|	НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,"+Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийНаблюдаемый))+") КАК ПериодПланирования,
			|	СУММА(Обороты.ЗначениеОборот) КАК Значение
			|ИЗ
			|	РегистрНакопления.фин_ЗначенияРасчетныхПоказателейЗаПериод.Обороты(
			|			,
			|			,
			|			,
			|			ПериодПланирования >= &Начало
			|				И ПериодПланирования <= &Конец
			|				И Сценарий = &Сценарий
			|				И РасчетныйПоказатель В (&Показатели)"+ТекстУсловия+") КАК Обороты
			|СГРУППИРОВАТЬ ПО
			|	Обороты.РасчетныйПоказатель,
			|	НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,"+Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийНаблюдаемый))+")
			|
			|УПОРЯДОЧИТЬ ПО
			|	РасчетныйПоказатель";

		Запрос.УстановитьПараметр("Конец", ОкончаниеНаблюдаемогоПериода);
		Запрос.УстановитьПараметр("Начало", ?(МаксимальныйЛагФинансовыхПоказателей=0,НачалоНаблюдаемогоПериода,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(НачалоНаблюдаемогоПериода,СценарийНаблюдаемый,-МаксимальныйЛагФинансовыхПоказателей)));
		Запрос.УстановитьПараметр("Показатели", СписокОборотныхРасчетныхПоказателей);
		Запрос.УстановитьПараметр("Сценарий", ?(ПорядокОпределенияСценарияНаблюдаемыхДанных=Перечисления.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ВыбранныйСценарий,СценарийНаблюдаемыхДанных,СценарийПрогнозныхДанных));

		Результат = Запрос.Выполнить().Выгрузить();

		ПлановыйПериод = НачалоНаблюдаемогоПериода;
		Пока ПлановыйПериод <= ОкончаниеНаблюдаемогоПериода Цикл
			Если ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии ИЛИ ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии Тогда
				Для Каждого СтрокаПоказатель Из НаблюдаемыеИсходныеПоказатели Цикл
					Если ТипЗнч(СтрокаПоказатель.Показатель)=Тип("СправочникСсылка.фин_РасчетныеПоказатели") И СтрокаПоказатель.Показатель.СпособВвода=Перечисления.фин_СпособыВводаЗначенийРасчетныхПоказателей.ВКаждомПериоде Тогда
						Значение = 0;
						мПлановыйПериод = ПлановыйПериод;
						Если СтрокаПоказатель.Лаг<>0 Тогда
							мПлановыйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(мПлановыйПериод,СценарийНаблюдаемый,-СтрокаПоказатель.Лаг);
						КонецЕсли;
						СтрокиФП = Результат.НайтиСтроки(Новый Структура("ФинансовыйПоказатель,ПериодПланирования",СтрокаПоказатель.Показатель,мПлановыйПериод));
						Если СтрокиФП.Количество()>0 Тогда
							Значение = СтрокиФП[0].Значение;
						КонецЕсли;
						НС = НаблюдаемыеЗначенияИсходныхПоказателей.Добавить();
						НС.Показатель = СтрокаПоказатель.Показатель;
						НС.ПериодПланирования = ПлановыйПериод;
						НС.Значение = Значение;
						НС.Номер = СтрокаПоказатель.НомерСтроки;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ПлановыйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПлановыйПериод,СценарийНаблюдаемый,1);
		КонецЦикла;
		
	КонецЕсли;
 	
	Если (ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии ИЛИ ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии) И СписокОстаточныхРасчетныхПоказателей.Количество()>0 Тогда
		ПлановыйПериод = НачалоНаблюдаемогоПериода;
		Пока ПлановыйПериод <= ОкончаниеНаблюдаемогоПериода Цикл
			Запрос = Новый Запрос;
			ТекстУсловия = "";
			Инд =1;
			Для Каждого Условие Из ОбластьДействия Цикл
				ИмяПоля = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(Условие.Измерение);
				ТекстУсловия = " И "+?(Найти(ИмяПоля,"Разрез")<>0,"ДополнительныеРазрезы.","")+ИмяПоля+" = &Параметр"+Формат(Инд,"ЧГ=");
				Запрос.УстановитьПараметр("Параметр"+Формат(Инд,"ЧГ="),Условие.Значение);
				Инд = Инд + 1;
			КонецЦикла;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Обороты.РасчетныйПоказатель КАК ФинансовыйПоказатель,
			|	Обороты.Значение КАК Значение
			|ИЗ
			|	РегистрСведений.фин_ПериодическиеЗначенияРасчетныхПоказателей.СрезПоследних(
			|			&Начало,
			|				Сценарий = &Сценарий
			|				И РасчетныйПоказатель В (&Показатели)"+ТекстУсловия+") КАК Обороты
			|
			|УПОРЯДОЧИТЬ ПО
			|	РасчетныйПоказатель";
			
			Запрос.УстановитьПараметр("Показатели", СписокОстаточныхРасчетныхПоказателей);
			Запрос.УстановитьПараметр("Сценарий", ?(ПорядокОпределенияСценарияНаблюдаемыхДанных=Перечисления.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ВыбранныйСценарий,СценарийНаблюдаемыхДанных,СценарийПрогнозныхДанных));
			
			Для Каждого СтрокаПоказатель Из НаблюдаемыеИсходныеПоказатели Цикл
				Если ТипЗнч(СтрокаПоказатель.Показатель)=Тип("СправочникСсылка.фин_РасчетныеПоказатели") И СтрокаПоказатель.Показатель.СпособВвода=Перечисления.фин_СпособыВводаЗначенийРасчетныхПоказателей.ПоМереИзменения Тогда
					Значение = 0;
					мПлановыйПериод = ПлановыйПериод;
					Если СтрокаПоказатель.Лаг<>0 Тогда
						мПлановыйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(мПлановыйПериод,СценарийНаблюдаемый,-СтрокаПоказатель.Лаг);
					КонецЕсли;
					Запрос.УстановитьПараметр("Начало", мПлановыйПериод);
					Результат = Запрос.Выполнить().Выгрузить();
					СтрокиФП = Результат.НайтиСтроки(Новый Структура("ФинансовыйПоказатель",СтрокаПоказатель.Показатель));
					Если СтрокиФП.Количество()>0 Тогда
						Значение = СтрокиФП[0].Значение;
					КонецЕсли;
					НС = НаблюдаемыеЗначенияИсходныхПоказателей.Добавить();
					НС.Показатель = СтрокаПоказатель.Показатель;
					НС.ПериодПланирования = ПлановыйПериод;
					НС.Значение = Значение;
					НС.Номер = СтрокаПоказатель.НомерСтроки;
				КонецЕсли;
			КонецЦикла;
			
			ПлановыйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПлановыйПериод,СценарийНаблюдаемый,1);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура ПолучитьДанныеИсходныхПоказателейЗаПрогнозируемыйПериод() Экспорт
	ПрогнозируемыеЗначенияИсходныхПоказателей.Очистить();
	Если НЕ (ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии ИЛИ ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии) Тогда
		Возврат;
	КонецЕсли;
	Если (НЕ ФиксированныеОценкиПараметров) И СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения Тогда
		Возврат;
	КонецЕсли;
	ГоризонтПланирования = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ПолучитьГоризонтПланирования(ПрогнозируемыйПериод,СценарийПрогнозныхДанных);
    СписокФинансовыхПоказателей = Новый Массив;
	МаксимальныйЛагФинансовыхПоказателей = 0;
	СписокФинансовыхПоказателей.Добавить(ПрогнозируемыйПоказатель);
	СписокОборотныхРасчетныхПоказателей = Новый Массив;
	МаксимальныйЛагОборотныхРасчетныхПоказателей = 0;
	СписокОстаточныхРасчетныхПоказателей = Новый Массив;
	МаксимальныйЛагОстаточныхРасчетныхПоказателей = 0;
	Если ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии ИЛИ ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии Тогда
		Для Каждого СтрокаПоказатель Из НаблюдаемыеИсходныеПоказатели Цикл
			Если ТипЗнч(СтрокаПоказатель.Показатель)=Тип("СправочникСсылка.фин_ФинансовыеПоказатели") Тогда
				СписокФинансовыхПоказателей.Добавить(СтрокаПоказатель.Показатель);
				МаксимальныйЛагФинансовыхПоказателей = Макс(МаксимальныйЛагФинансовыхПоказателей,СтрокаПоказатель.Лаг);
			ИначеЕсли СтрокаПоказатель.Показатель.СпособВвода=Перечисления.фин_СпособыВводаЗначенийРасчетныхПоказателей.ВКаждомПериоде Тогда
				СписокОборотныхРасчетныхПоказателей.Добавить(СтрокаПоказатель.Показатель);
				МаксимальныйЛагОборотныхРасчетныхПоказателей = Макс(МаксимальныйЛагОборотныхРасчетныхПоказателей,СтрокаПоказатель.Лаг);
			Иначе
				СписокОстаточныхРасчетныхПоказателей.Добавить(СтрокаПоказатель.Показатель);
				МаксимальныйЛагОстаточныхРасчетныхПоказателей = Макс(МаксимальныйЛагОстаточныхРасчетныхПоказателей,СтрокаПоказатель.Лаг);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Запрос = Новый Запрос;
	Поле = фин_ОбщегоНазначенияСервер.ПолучитьИмяЭлементаПеречисленияПоЗначению(ПрогнозируемыйРесурсПоказателя);
	ТекстУсловия = "";
	Если фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("фин_БюджетированиеПоОрганизациям") И ЗначениеЗаполнено(Организация) Тогда
		 ТекстУсловия = " И Организация = &Организация ";
		 Запрос.УстановитьПараметр("Организация",Организация);
	 КонецЕсли;
	Инд =1;
	Для Каждого Условие Из ОбластьДействия Цикл
		 ИмяПоля = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(Условие.Измерение);
		 ТекстУсловия = " И "+?(Найти(ИмяПоля,"Разрез")<>0,"ДополнительныеРазрезы.","")+ИмяПоля+" = &Параметр"+Формат(Инд,"ЧГ=");
		 Запрос.УстановитьПараметр("Параметр"+Формат(Инд,"ЧГ="),Условие.Значение);
		 Инд = Инд + 1;
	КонецЦикла;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Обороты.ФинансовыйПоказатель КАК ФинансовыйПоказатель,
		|	НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,"+Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийПрогнозныхДанных))+") КАК ПериодПланирования,
		|	СУММА(Обороты."+Поле+"Оборот) КАК Значение
		|ИЗ
		|	РегистрНакопления.фин_ОборотыБюджетов.Обороты(
		|			,
		|			,
		|			,
		|			ПериодПланирования >= &Начало
		|				И ПериодПланирования <= &Конец
		|				И Сценарий = &Сценарий
		|				И ФинансовыйПоказатель В (&Показатели)"+ТекстУсловия+") КАК Обороты
		|
		|СГРУППИРОВАТЬ ПО
		|	Обороты.ФинансовыйПоказатель,
		|	НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,"+Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийПрогнозныхДанных))+")
		|
		|УПОРЯДОЧИТЬ ПО
		|	НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,"+Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийПрогнозныхДанных))+"),
		|	ФинансовыйПоказатель";

	Запрос.УстановитьПараметр("Конец", ГоризонтПланирования);
	Запрос.УстановитьПараметр("Начало", ?(МаксимальныйЛагФинансовыхПоказателей=0,ПрогнозируемыйПериод,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПрогнозируемыйПериод,СценарийПрогнозныхДанных,-МаксимальныйЛагФинансовыхПоказателей)));
	Запрос.УстановитьПараметр("Показатели", СписокФинансовыхПоказателей);
	Запрос.УстановитьПараметр("Сценарий", СценарийПрогнозныхДанных);

	Результат = Запрос.Выполнить().Выгрузить();

	ПлановыйПериод = ПрогнозируемыйПериод;
	Для Инд = 1 По КоличествоПрогнозируемыхПериодов Цикл
		// получение значений исходных показателей
		Для Каждого СтрокаПоказатель Из НаблюдаемыеИсходныеПоказатели Цикл
			Если ТипЗнч(СтрокаПоказатель.Показатель)=Тип("СправочникСсылка.фин_ФинансовыеПоказатели") Тогда
				Значение = 0;
				мПлановыйПериод = ПлановыйПериод;
				Если СтрокаПоказатель.Лаг<>0 Тогда
					мПлановыйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(мПлановыйПериод,СценарийПрогнозныхДанных,-СтрокаПоказатель.Лаг);
				КонецЕсли;
				СтрокиФП = Результат.НайтиСтроки(Новый Структура("ФинансовыйПоказатель,ПериодПланирования",СтрокаПоказатель.Показатель,мПлановыйПериод));
				Если СтрокиФП.Количество()>0 Тогда
					Значение = СтрокиФП[0].Значение;
				КонецЕсли;
				НС = ПрогнозируемыеЗначенияИсходныхПоказателей.Добавить();
				НС.Показатель = СтрокаПоказатель.Показатель;
				НС.ПериодПланирования = ПлановыйПериод;
				НС.Значение = Значение;
				НС.Номер = СтрокаПоказатель.НомерСтроки;
			КонецЕсли;
		КонецЦикла;
		
		ПлановыйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПлановыйПериод,СценарийПрогнозныхДанных,1);
	КонецЦикла;
	
	Если (ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии ИЛИ ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии) И СписокОборотныхРасчетныхПоказателей.Количество()>0 Тогда

		Запрос = Новый Запрос;
		ТекстУсловия = "";
		Инд =1;
		Для Каждого Условие Из ОбластьДействия Цикл
			 ИмяПоля = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(Условие.Измерение);
			 ТекстУсловия = " И "+?(Найти(ИмяПоля,"Разрез")<>0,"ДополнительныеРазрезы.","")+ИмяПоля+" = &Параметр"+Формат(Инд,"ЧГ=");
			 Запрос.УстановитьПараметр("Параметр"+Формат(Инд,"ЧГ="),Условие.Значение);
			 Инд = Инд + 1;
		КонецЦикла;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Обороты.РасчетныйПоказатель КАК ФинансовыйПоказатель,
			|	НАЧАЛОПЕРИОДА(Обороты.ПериодПланирования,"+Строка(фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийПрогнозныхДанных))+") КАК ПериодПланирования,
			|	Обороты.ЗначениеОборот КАК Значение
			|ИЗ
			|	РегистрНакопления.фин_ЗначенияРасчетныхПоказателейЗаПериод.Обороты(
			|			,
			|			,
			|			,
			|			ПериодПланирования >= &Начало
			|				И ПериодПланирования <= &Конец
			|				И Сценарий = &Сценарий
			|				И РасчетныйПоказатель В (&Показатели)"+ТекстУсловия+") КАК Обороты
			|
			|УПОРЯДОЧИТЬ ПО
			|	РасчетныйПоказатель";

		Запрос.УстановитьПараметр("Конец", ГоризонтПланирования);
		Запрос.УстановитьПараметр("Начало", ?(МаксимальныйЛагФинансовыхПоказателей=0,ПрогнозируемыйПериод,фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПрогнозируемыйПериод,СценарийПрогнозныхДанных,-МаксимальныйЛагФинансовыхПоказателей)));
		Запрос.УстановитьПараметр("Показатели", СписокОборотныхРасчетныхПоказателей);
		Запрос.УстановитьПараметр("Сценарий", ?(ПорядокОпределенияСценарияНаблюдаемыхДанных=Перечисления.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ВыбранныйСценарий,СценарийНаблюдаемыхДанных,СценарийПрогнозныхДанных));

		Результат = Запрос.Выполнить().Выгрузить();

		ПлановыйПериод = ПрогнозируемыйПериод;
		Пока ПлановыйПериод <= ГоризонтПланирования Цикл
			Если ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии ИЛИ ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии Тогда
				Для Каждого СтрокаПоказатель Из НаблюдаемыеИсходныеПоказатели Цикл
					Если ТипЗнч(СтрокаПоказатель.Показатель)=Тип("СправочникСсылка.фин_РасчетныеПоказатели") И СтрокаПоказатель.Показатель.СпособВвода=Перечисления.фин_СпособыВводаЗначенийРасчетныхПоказателей.ВКаждомПериоде Тогда
						Значение = 0;
						мПлановыйПериод = ПлановыйПериод;
						Если СтрокаПоказатель.Лаг<>0 Тогда
							мПлановыйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(мПлановыйПериод,СценарийПрогнозныхДанных,-СтрокаПоказатель.Лаг);
						КонецЕсли;
						СтрокиФП = Результат.НайтиСтроки(Новый Структура("ФинансовыйПоказатель,ПериодПланирования",СтрокаПоказатель.Показатель,мПлановыйПериод));
						Если СтрокиФП.Количество()>0 Тогда
							Значение = СтрокиФП[0].Значение;
						КонецЕсли;
						НС = ПрогнозируемыеЗначенияИсходныхПоказателей.Добавить();
						НС.Показатель = СтрокаПоказатель.Показатель;
						НС.ПериодПланирования = ПлановыйПериод;
						НС.Значение = Значение;
						НС.Номер = СтрокаПоказатель.НомерСтроки;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ПлановыйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПлановыйПериод,СценарийПрогнозныхДанных,1);
		КонецЦикла;
		
	КонецЕсли;
 	
	Если (ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.НелинейнаяМодельМножественнойРегрессии ИЛИ ВидМоделиПрогнозирования=Перечисления.фин_ВидыМоделейПрогнозирования.ЛинейнаяМодельМножественнойРегрессии) И СписокОстаточныхРасчетныхПоказателей.Количество()>0 Тогда
		ПлановыйПериод = ПрогнозируемыйПериод;
		Пока ПлановыйПериод <= ГоризонтПланирования Цикл
			Запрос = Новый Запрос;
			ТекстУсловия = "";
			Инд =1;
			Для Каждого Условие Из ОбластьДействия Цикл
				ИмяПоля = фин_РаботаСДополнительнымиРазрезамиБюджетирования.ИмяРазреза(Условие.Измерение);
				ТекстУсловия = " И "+?(Найти(ИмяПоля,"Разрез")<>0,"ДополнительныеРазрезы.","")+ИмяПоля+" = &Параметр"+Формат(Инд,"ЧГ=");
				Запрос.УстановитьПараметр("Параметр"+Формат(Инд,"ЧГ="),Условие.Значение);
				Инд = Инд + 1;
			КонецЦикла;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Обороты.РасчетныйПоказатель КАК ФинансовыйПоказатель,
			|	Обороты.Значение КАК Значение
			|ИЗ
			|	РегистрСведений.фин_ПериодическиеЗначенияРасчетныхПоказателей.СрезПоследних(
			|			&Начало,
			|				Сценарий = &Сценарий
			|				И РасчетныйПоказатель В (&Показатели)"+ТекстУсловия+") КАК Обороты
			|
			|УПОРЯДОЧИТЬ ПО
			|	РасчетныйПоказатель";
			
			Запрос.УстановитьПараметр("Начало", ПлановыйПериод);
			Запрос.УстановитьПараметр("Показатели", СписокОстаточныхРасчетныхПоказателей);
			Запрос.УстановитьПараметр("Сценарий", ?(ПорядокОпределенияСценарияНаблюдаемыхДанных=Перечисления.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ВыбранныйСценарий,СценарийНаблюдаемыхДанных,СценарийПрогнозныхДанных));
			
			Для Каждого СтрокаПоказатель Из НаблюдаемыеИсходныеПоказатели Цикл
				Если ТипЗнч(СтрокаПоказатель.Показатель)=Тип("СправочникСсылка.фин_РасчетныеПоказатели") И СтрокаПоказатель.Показатель.СпособВвода=Перечисления.фин_СпособыВводаЗначенийРасчетныхПоказателей.ПоМереИзменения Тогда
					Значение = 0;
					мПлановыйПериод = ПлановыйПериод;
					Если СтрокаПоказатель.Лаг<>0 Тогда
						мПлановыйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(мПлановыйПериод,СценарийПрогнозныхДанных,-СтрокаПоказатель.Лаг);
					КонецЕсли;
					Запрос.УстановитьПараметр("Начало", мПлановыйПериод);
					Результат = Запрос.Выполнить().Выгрузить();
					СтрокиФП = Результат.НайтиСтроки(Новый Структура("ФинансовыйПоказатель",СтрокаПоказатель.Показатель));
					Если СтрокиФП.Количество()>0 Тогда
						Значение = СтрокиФП[0].Значение;
					КонецЕсли;
					НС = ПрогнозируемыеЗначенияИсходныхПоказателей.Добавить();
					НС.Показатель = СтрокаПоказатель.Показатель;
					НС.ПериодПланирования = ПлановыйПериод;
					НС.Значение = Значение;
					НС.Номер = СтрокаПоказатель.НомерСтроки;
				КонецЕсли;
			КонецЦикла;
			
			ПлановыйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(ПлановыйПериод,СценарийПрогнозныхДанных,1);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

Процедура НастроитьПериодыПрогноза() Экспорт
	Если НачалоНаблюдаемогоПериода = '00010101' Тогда
		НачалоНаблюдаемогоПериода = НачалоМесяца(ТекущаяДата());
	КонецЕсли;
	СценарийНаблюдаемый = ?(ПорядокОпределенияСценарияНаблюдаемыхДанных=Перечисления.фин_ПорядокОпределенияСценарияНаблюдаемыхДанныхПрогноза.ВыбранныйСценарий И ЗначениеЗаполнено(СценарийНаблюдаемыхДанных),СценарийНаблюдаемыхДанных,СценарийПрогнозныхДанных);
	Если НЕ (СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ФиксированныеЗначения ИЛИ СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ЗначенияПериодаПредшествующегоПрогнозируемому) Тогда
		Если ЗначениеЗаполнено(СценарийНаблюдаемый) И НачалоНаблюдаемогоПериода<>'00010101' Тогда
			НачалоНаблюдаемогоПериода = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(НачалоНаблюдаемогоПериода,СценарийНаблюдаемый);
			ОкончаниеНаблюдаемогоПериода = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(НачалоНаблюдаемогоПериода,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийНаблюдаемый),КоличествоНаблюдаемыхПериодов-1),СценарийНаблюдаемый)
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(СценарийПрогнозныхДанных) И ПрогнозируемыйПериод<>'00010101' Тогда
		ПрогнозируемыйПериод = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(ПрогнозируемыйПериод,СценарийПрогнозныхДанных);
	КонецЕсли;
	Если СпособСбораНаблюдаемыхДанных=Перечисления.фин_СпособыСбораНаблюдаемыхДанныхДляМоделейПрогнозирования.ЗначенияПериодаПредшествующегоПрогнозируемому Тогда
		Если ЗначениеЗаполнено(СценарийНаблюдаемый) И ПрогнозируемыйПериод<>'00010101' Тогда
			НачалоНаблюдаемогоПериода = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаНачалаПериода(ПрогнозируемыйПериод,СценарийНаблюдаемый),фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийНаблюдаемый),-КоличествоНаблюдаемыхПериодов-1),СценарийНаблюдаемый);
			ОкончаниеНаблюдаемогоПериода = фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДатаКонцаПериода(фин_ПроцедурыМеханизмовБюджетированияКлиентСервер.ДобавитьИнтервал(НачалоНаблюдаемогоПериода,фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПериодичностьСценария(СценарийНаблюдаемый),КоличествоНаблюдаемыхПериодов-1),СценарийНаблюдаемый)
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Прогноз() Экспорт
    фин_ЗащитаПривилегированныеПроцедуры.РасчетПоМоделиПрогнозирования(ЭтотОбъект,25);
КонецПроцедуры

Процедура РасчетСтатистики() Экспорт
    фин_ЗащитаПривилегированныеПроцедуры.РасчетСреднеквадратичныхОшибок(ЭтотОбъект,25);
КонецПроцедуры

#КонецЕсли