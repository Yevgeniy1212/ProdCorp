////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(СтруктурноеПодразделениеОрганизация) Тогда 
		Объект.Организация = Неопределено;
		Объект.СтруктурноеПодразделение = Неопределено;
	Иначе 
		Результат = общ_РаботаСоСтруктурнымиПодразделениями.ПроверитьИзменениеЗначенийОрганизацииСтруктурногоПодразделения(СтруктурноеПодразделениеОрганизация, Объект.Организация, Объект.СтруктурноеПодразделение);
		Если Результат.ИзмененаОрганизация ИЛИ Результат.ИзмененоСтруктурноеПодразделение Тогда
			СтруктурноеПодразделениеОрганизацияПриИзмененииНаКлиенте(Истина, Результат);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	общ_РаботаСоСтруктурнымиПодразделениями.СтруктурноеПодразделениеНачалоВыбора(ЭтаФорма, СтандартнаяОбработка, Объект.Организация, Объект.СтруктурноеПодразделение, Истина);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыполнитьАктуализацию(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнено поле ""Организация""!'"), , "СтруктурноеПодразделениеОрганизация", "");
		Возврат;
	КонецЕсли;
	
	ВыполнитьАктуализациюСервер(Объект.Организация,Объект.СтруктурноеПодразделение,Объект.Контрагент,Объект.ДоговорКонтрагента,Объект.ДатаНачала,Объект.ДатаОкончания);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияПриИзмененииНаКлиенте(ОчищатьНекорректныеЗначения, Параметры)

	Параметры.Вставить("ОчищатьНекорректныеЗначения", ОчищатьНекорректныеЗначения);
	
	СтруктураРезультатаВыполнения = Неопределено;
	СтруктурноеПодразделениеОрганизацияПриИзмененииНаСервере(Параметры, СтруктураРезультатаВыполнения);
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораСтруктурногоПодразделения(Результат, Параметры) Экспорт
	
	общ_РаботаСоСтруктурнымиПодразделениями.ПослеВыбораСтруктурногоПодразделения(Результат, Объект.Организация, Объект.СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация);
	Если Результат.ИзмененаОрганизация ИЛИ Результат.ИзмененоСтруктурноеПодразделение Тогда
		Модифицированность = Истина;
		Результат.Вставить("НеобходимоИзменитьЗначенияРеквизитовОбъекта", Ложь);
		СтруктурноеПодразделениеОрганизацияПриИзмененииНаКлиенте(Истина, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СтруктурноеПодразделениеОрганизацияПриИзмененииНаСервере(СтруктураПараметров = Неопределено, СтруктураРезультатаВыполнения)
	
	Если СтруктураПараметров = Неопределено	ИЛИ (СтруктураПараметров.Свойство("НеобходимоИзменитьЗначенияРеквизитовОбъекта") 
				И СтруктураПараметров.НеобходимоИзменитьЗначенияРеквизитовОбъекта) Тогда 
		общ_РаботаСоСтруктурнымиПодразделениями.СтруктурноеПодразделениеПриИзменении(СтруктурноеПодразделениеОрганизация, Объект.Организация, Объект.СтруктурноеПодразделение, СтруктураПараметров);
	КонецЕсли;
		
	ПриИзмененииЗначенияОрганизацииСервер(СтруктураПараметров, СтруктураРезультатаВыполнения);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииЗначенияОрганизацииСервер(СтруктураПараметров, СтруктураРезультатаВыполнения)
	
	Если НЕ СтруктураПараметров.ИзмененаОрганизация И НЕ СтруктураПараметров.ИзмененоСтруктурноеПодразделение Тогда
		Возврат;
	КонецЕсли;
	
	общ_РаботаСоСтруктурнымиПодразделениями.ПриИзмененииЗначенияОрганизации(Объект, , СтруктураРезультатаВыполнения);
			
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	Объект.Организация = фин_ОбщегоНазначенияСервер.ПолучитьЗначениеПоУмолчанию(ПользователиКлиентСервер.АвторизованныйПользователь(), "ОсновнаяОрганизация");

	Для Каждого Реквизит Из Метаданные.Обработки.дог_АктуализацияДанныхПоИсполнениюДоговоров.Реквизиты Цикл
		Если Параметры.Свойство(Реквизит.Имя) Тогда
			Объект[Реквизит.Имя] = Параметры[Реквизит.Имя];
		КонецЕсли;
	КонецЦикла;
	Объект.ДатаНачала = фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("дог_ДатаНачалаКонтроляСроковПоставокПоДоговорам");
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = фин_ОбщегоНазначенияВызовСервераПовтИсп.ПолучитьПризнакОтображенияСтруктурныхПодразделений();
	
	общ_РаботаСоСтруктурнымиПодразделениями.УстановитьВидимостьСтруктурногоПодразделения(Объект.Организация, Объект.СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	общ_РаботаСоСтруктурнымиПодразделениями.УстановитьСвойстваЭлементаСтруктурноеПодразделениеОрганизация(Элементы.СтруктурноеПодразделениеОрганизация, Объект.СтруктурноеПодразделение, ПоддержкаРаботыСоСтруктурнымиПодразделениями);

КонецПроцедуры 

&НаСервереБезКонтекста
Функция ИмяСтруктркногоПодразделения(ДокументБазы)
	
	Если Не ДокументБазы.Реквизиты.Найти("СтруктурноеПодразделение") = Неопределено Тогда
		Возврат "СтруктурноеПодразделение";
	ИначеЕсли Не ДокументБазы.Реквизиты.Найти("СтруктурноеПодразделениеПолучатель") = Неопределено Тогда
		Возврат "СтруктурноеПодразделениеПолучатель";
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ВыполнитьАктуализациюСервер(Организация,СтруктурноеПодразделение,Контрагент,Договор,ДатаНачала,ДатаОкончания)
	
	УстановитьПривилегированныйРежим(Истина);
	ТекстУсловия = "";
	ТекстУсловияСЕРасширенное = "";
	ТекстУсловияБезСЕ = "";
	
	Запрос = Новый Запрос;
	Если ЗначениеЗаполнено(Организация) Тогда
		ТекстУсловия = ТекстУсловия + ?(ТекстУсловия="",""," И ")+"Документ.Организация=&Организация И Документ.СтруктурноеПодразделение=&СтруктурноеПодразделение";
		ТекстУсловияСЕРасширенное = ТекстУсловияСЕРасширенное + ?(ТекстУсловияСЕРасширенное="",""," И ")+"Документ.Организация=&Организация И (Документ.СтруктурноеПодразделениеПолучатель=&СтруктурноеПодразделение ИЛИ Документ.СтруктурноеПодразделениеОтправитель=&СтруктурноеПодразделение)";
		ТекстУсловияБезСЕ = ТекстУсловияБезСЕ + ?(ТекстУсловияБезСЕ = "",""," И ")+"Документ.Организация=&Организация";
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("СтруктурноеПодразделение",СтруктурноеПодразделение);
	КонецЕсли;
	Если ЗначениеЗаполнено(Контрагент) Тогда
		ТекстУсловия = ТекстУсловия + ?(ТекстУсловия="",""," И ")+"Документ.Контрагент=&Контрагент";
		ТекстУсловияСЕРасширенное = ТекстУсловияСЕРасширенное + ?(ТекстУсловияСЕРасширенное="",""," И ")+"Документ.Контрагент=&Контрагент";
		ТекстУсловияБезСЕ = ТекстУсловияБезСЕ + ?(ТекстУсловияБезСЕ="",""," И ")+"Документ.Контрагент=&Контрагент";
		Запрос.УстановитьПараметр("Контрагент",Контрагент);
	КонецЕсли;
	Если ЗначениеЗаполнено(Договор) Тогда
		ТекстУсловия = ТекстУсловия + ?(ТекстУсловия="",""," И ")+"Документ.ДоговорКонтрагента=&Договор";
		ТекстУсловияСЕРасширенное = ТекстУсловияСЕРасширенное + ?(ТекстУсловияСЕРасширенное="",""," И ")+"Документ.ДоговорКонтрагента=&Договор";
		ТекстУсловияБезСЕ = ТекстУсловияБезСЕ + ?(ТекстУсловияБезСЕ="",""," И ")+"Документ.ДоговорКонтрагента=&Договор";
		Запрос.УстановитьПараметр("Договор",Договор);
	КонецЕсли;
	Если ДатаНачала<>'00010101' Тогда
		ТекстУсловия = ТекстУсловия + ?(ТекстУсловия="",""," И ")+"Документ.Дата>=&ДатаНачала";
		ТекстУсловияСЕРасширенное = ТекстУсловияСЕРасширенное + ?(ТекстУсловияСЕРасширенное="",""," И ")+"Документ.Дата>=&ДатаНачала";
		ТекстУсловияБезСЕ = ТекстУсловияБезСЕ + ?(ТекстУсловияБезСЕ="",""," И ")+"Документ.Дата>=&ДатаНачала";
		Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала);
	КонецЕсли;
	Если ДатаОкончания<>'00010101' Тогда
		ТекстУсловия = ТекстУсловия + ?(ТекстУсловия="",""," И ")+"Документ.Дата<=&ДатаОкончания";
		ТекстУсловияСЕРасширенное = ТекстУсловияСЕРасширенное + ?(ТекстУсловияСЕРасширенное="",""," И ")+"Документ.Дата<=&ДатаОкончания";
		ТекстУсловияБезСЕ = ТекстУсловияБезСЕ + ?(ТекстУсловияБезСЕ="",""," И ")+"Документ.Дата<=&ДатаОкончания";
		Запрос.УстановитьПараметр("ДатаОкончания",ДатаОкончания);
	КонецЕсли;
	ТекстУсловия = ТекстУсловия + ?(ТекстУсловия="",""," И ")+"Документ.Проведен = ИСТИНА";
	ТекстУсловияСЕРасширенное = ТекстУсловияСЕРасширенное + ?(ТекстУсловияСЕРасширенное="",""," И ")+"Документ.Проведен = ИСТИНА";
	ТекстУсловияБезСЕ = ТекстУсловияБезСЕ + ?(ТекстУсловияБезСЕ="",""," И ")+"Документ.Проведен = ИСТИНА";	
	
	ТекстУсловияВТЧ = СтрЗаменить(ТекстУсловия,"Документ.ДоговорКонтрагента","Документ.РасшифровкаПлатежа.ДоговорКонтрагента");
	ТекстУсловияСЕРасширенноеВТЧ = СтрЗаменить(ТекстУсловияСЕРасширенное,"Документ.ДоговорКонтрагента","Документ.РасшифровкаПлатежа.ДоговорКонтрагента");
	ТекстУсловияБезСЕВТЧ = СтрЗаменить(ТекстУсловияБезСЕ,"Документ.ДоговорКонтрагента","Документ.РасшифровкаПлатежа.ДоговорКонтрагента");
	
	ДокументыДляУчетаИсполнения = Новый Массив;
	ДокументыРегистрацииСобытий = Новый Массив;
	ДокументыДляОбработки = Новый Массив;
	РеквизитыДляОбработки = Новый Массив;
	ДокументыСДоговоромВТЧ = Новый Массив;
	
	Для Каждого ДокументБазы Из Метаданные.Документы Цикл
		Если ДокументБазы.Имя = "КорректировкаЗаписейРегистров" Тогда
			Продолжить;
		КонецЕсли;
		Если ДокументБазы.Имя = "Сторнирование" Тогда
			Продолжить;
		КонецЕсли;
		Если ДокументБазы.Имя = "дог_РегистрацияДоговоров" Тогда
			Продолжить;
		КонецЕсли;
		Если ДокументБазы.Имя = "дог_РегистрацияСобытийДоговоров" Тогда
			Продолжить;
		КонецЕсли;
		ПроверятьДоговорВТЧ = Ложь;
		Если ДокументБазы.Движения.Содержит(Метаданные.РегистрыНакопления.дог_ИсполнениеДоговоров) Тогда
			ДокументыДляУчетаИсполнения.Добавить(ДокументБазы.Имя);
			Если ДокументыДляОбработки.Найти(ДокументБазы.Имя)=Неопределено Тогда
				ДокументыДляОбработки.Добавить(ДокументБазы.Имя);
				РеквизитыДляОбработки.Добавить(ИмяСтруктркногоПодразделения(ДокументБазы));
				ПроверятьДоговорВТЧ = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ДокументБазы.Движения.Содержит(Метаданные.РегистрыСведений.дог_СобытияПоДоговорам) Тогда
			ДокументыРегистрацииСобытий.Добавить(ДокументБазы.Имя);
			Если ДокументыДляОбработки.Найти(ДокументБазы.Имя)=Неопределено Тогда
				ДокументыДляОбработки.Добавить(ДокументБазы.Имя);
				РеквизитыДляОбработки.Добавить(ИмяСтруктркногоПодразделения(ДокументБазы));
				ПроверятьДоговорВТЧ = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ПроверятьДоговорВТЧ Тогда 
			Для Каждого ТабличнаяЧасть Из ДокументБазы.ТабличныеЧасти Цикл 
				//ДокументБазы.ТабличныеЧасти[2].Реквизиты
				Массив = Новый Массив;
				Массив.Добавить(Тип("СправочникСсылка.ДоговорыКонтрагентов"));
				ОписаниеТипов = Новый ОписаниеТипов(Массив);
				Для каждого Реквизит Из ТабличнаяЧасть.Реквизиты Цикл
					Если Реквизит.Тип = ОписаниеТипов Тогда
						Если ДокументыСДоговоромВТЧ.Найти(ДокументБазы.Имя) = Неопределено Тогда 
							ДокументыСДоговоромВТЧ.Добавить(ДокументБазы.Имя);
						КонецЕсли;
					КонецЕсли;
					
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	
	Для Итр = 0 По ДокументыДляОбработки.Количество()-1 Цикл
		
		Запрос.Текст = Запрос.Текст + ?(Запрос.Текст = "", "", "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|")+"
		|ВЫБРАТЬ 
		|	Документ.Ссылка КАК Ссылка,
		|	""" + ДокументыДляОбработки[Итр] + """ КАК Имя,
		|	Документ.Дата КАК Дата
		|ИЗ Документ." + ДокументыДляОбработки[Итр] + " КАК Документ";
		
		Если ДокументыСДоговоромВТЧ.Найти(ДокументыДляОбработки[Итр]) = Неопределено Тогда
			Если РеквизитыДляОбработки[Итр] = "СтруктурноеПодразделение" Тогда
				Запрос.Текст = Запрос.Текст + " ГДЕ " + ТекстУсловия;
			ИначеЕсли РеквизитыДляОбработки[Итр] = "СтруктурноеПодразделениеПолучатель" Тогда
				Запрос.Текст = Запрос.Текст + " ГДЕ " + ТекстУсловияСЕРасширенное;
			Иначе
				Запрос.Текст = Запрос.Текст + " ГДЕ " + ТекстУсловияБезСЕ;
			КонецЕсли;
		Иначе
			Если РеквизитыДляОбработки[Итр] = "СтруктурноеПодразделение" Тогда
				Запрос.Текст = Запрос.Текст + " ГДЕ " + ТекстУсловияВТЧ;
			ИначеЕсли РеквизитыДляОбработки[Итр] = "СтруктурноеПодразделениеПолучатель" Тогда
				Запрос.Текст = Запрос.Текст + " ГДЕ " + ТекстУсловияСЕРасширенноеВТЧ;
			Иначе
				Запрос.Текст = Запрос.Текст + " ГДЕ " + ТекстУсловияБезСЕВТЧ;
			КонецЕсли;
		КонецЕсли;
		
		
	КонецЦикла;
    Запрос.Текст = "ВЫБРАТЬ
	|Документ.Ссылка,
	|Документ.Имя,
	|Документ.Дата
	|ИЗ (" + Запрос.Текст + ") КАК Документ
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.дог_ДоговорыИДополнительныеСоглашения КАК Договоры
	|	ПО Документ.Ссылка.ДоговорКонтрагента = Договоры.Договор
	|УПОРЯДОЧИТЬ ПО 
	|Документ.Дата";

	Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ДокументыДляУчетаИсполнения.Найти(Выборка.Имя)<>Неопределено Тогда
			ПризнакОтказ = Ложь;
			дог_УправлениеДоговорами.ПриПроведенииДокументовПоДоговоруОбработкаПроведения(Выборка.Ссылка,ПризнакОтказ,РежимПроведенияДокумента.Оперативный);
			Если ПризнакОтказ Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При отражении исполнения договоров не удалось обновить данные по документу: " + Строка(Выборка.Ссылка));
			КонецЕсли;
		КонецЕсли;
		Если ДокументыРегистрацииСобытий.Найти(Выборка.Имя)<>Неопределено Тогда
			ПризнакОтказ = Ложь;
			дог_УправлениеДоговорами.дог_АвтоматическаяРегистрацияСобытийПоДоговорамОбработкаПроведения(Выборка.Ссылка,ПризнакОтказ,РежимПроведенияДокумента.Оперативный);
			Если ПризнакОтказ Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При отражении событий не удалось обновить данные по документу: " + Строка(Выборка.Ссылка));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры


