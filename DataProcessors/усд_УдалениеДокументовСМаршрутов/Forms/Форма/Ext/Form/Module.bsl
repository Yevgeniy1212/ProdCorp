////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НадписьПараметрыУдаления = "Параметры удаления";	
	Элементы.РучнойВыбор.Видимость = Объект.УказанныеВручную;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура УказанныеВручнуюПриИзменении(Элемент)
	
	Элементы.РучнойВыбор.Видимость = Объект.УказанныеВручную;
	
	Если Объект.УказанныеВручную Тогда 
		ЗаполнитьСписокДокументов();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ <СписокДокументов>

&НаКлиенте
Процедура СписокДокументовПометкаПриИзменении(Элемент)
	СтрокаДерева = Элементы.СписокДокументов.ТекущиеДанные;
	Для Каждого СтрокаДереваМаршрут Из СтрокаДерева.ПолучитьЭлементы() Цикл
		СтрокаДереваМаршрут.Пометка = СтрокаДерева.Пометка;
		Для Каждого СтрокаДереваДокумент Из СтрокаДереваМаршрут.ПолучитьЭлементы() Цикл
			 СтрокаДереваДокумент.Пометка = СтрокаДерева.Пометка;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ТипЗнч(ВыбраннаяСтрока.Объект) <> Тип("СправочникСсылка.фин_ВидыДокументов") И ТипЗнч(ВыбраннаяСтрока.Объект) <> Тип("СправочникСсылка.усд_МаршрутыДвиженияДокументов") Тогда
		Форма = ВыбраннаяСтрока.Объект.ПолучитьФорму(,ЭтотОбъект);
		Форма.Открыть();
		Форма.Активизировать();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	фин_ПроцедурыРаботыСОбъектамиКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура ВыполнитьУдаление(Команда)
	
	УдалитьНаСервере();
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Готово");
	ПоказатьПредупреждение(, "Снятие с маршрутов выполнено!");
	
КонецПроцедуры

&НаКлиенте
Процедура Поиск(Команда)
	ЗаполнитьСписокДокументов();
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для Каждого СтрокаДерева Из ДеревоДокументов.ПолучитьЭлементы() Цикл
		СтрокаДерева.Пометка = Ложь;
		Для Каждого СтрокаДереваМаршрут Из СтрокаДерева.ПолучитьЭлементы() Цикл
			СтрокаДереваМаршрут.Пометка = Ложь;
			Для Каждого СтрокаДереваДокумент Из СтрокаДереваМаршрут.ПолучитьЭлементы() Цикл
				 СтрокаДереваДокумент.Пометка = Ложь;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для Каждого СтрокаДерева Из ДеревоДокументов.ПолучитьЭлементы() Цикл
		СтрокаДерева.Пометка = Истина;
		Для Каждого СтрокаДереваМаршрут Из СтрокаДерева.ПолучитьЭлементы() Цикл
			СтрокаДереваМаршрут.Пометка = Истина;
			Для Каждого СтрокаДереваДокумент Из СтрокаДереваМаршрут.ПолучитьЭлементы() Цикл
				 СтрокаДереваДокумент.Пометка = Истина;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьСписокДокументов()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НазначенияМаршрутов.Документ,
	|	НазначенияМаршрутов.Маршрут КАК Маршрут,
	|	НазначенияМаршрутов.ВидДокументов КАК ВидДокументов
	|ИЗ
	|	РегистрСведений.усд_НазначенияМаршрутов КАК НазначенияМаршрутов
	|ИТОГИ ПО
	|	ВидДокументов,
	|	Маршрут";
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПоВидам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ВидДокументов");
	СписокДокументов = ДанныеФормыВЗначение(ДеревоДокументов,Тип("ДеревоЗначений"));
	СписокДокументов.Строки.Очистить();
	Пока ВыборкаПоВидам.Следующий() Цикл
		СтрокаВид 			= СписокДокументов.Строки.Добавить();
		СтрокаВид.Картинка 	= 0;
		СтрокаВид.Объект 	= ВыборкаПоВидам.ВидДокументов;
		ВыборкаПоМаршрутам 	= ВыборкаПоВидам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Маршрут");
		Пока ВыборкаПоМаршрутам.Следующий() Цикл
			СтрокаМаршрут 			= СтрокаВид.Строки.Добавить();
			СтрокаМаршрут.Картинка 	= 1;
			СтрокаМаршрут.Объект 	= ВыборкаПоМаршрутам.Маршрут;
			ВыборкаПоДокументам		= ВыборкаПоМаршрутам.Выбрать();
			Пока ВыборкаПоДокументам.Следующий() Цикл
				СтрокаДокумент			= СтрокаМаршрут.Строки.Добавить();
				СтрокаДокумент.Картинка = 2;
				СтрокаДокумент.Объект 	= ВыборкаПоДокументам.Документ;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	ЗначениеВДанныеФормы(СписокДокументов,ДеревоДокументов);
КонецПроцедуры

&НаСервере
Процедура УдалитьНаСервере()
	ТаблицаУдаляемые = Новый ТаблицаЗначений;
	ТаблицаУдаляемые.Колонки.Добавить("Документ");
	Для Каждого СтрокаВид Из ДеревоДокументов.ПолучитьЭлементы() Цикл
		Для Каждого СтрокаМаршрут Из СтрокаВид.ПолучитьЭлементы() Цикл
			Для Каждого СтрокаДокумент Из СтрокаМаршрут.ПолучитьЭлементы() Цикл
				Если СтрокаДокумент.Пометка Тогда
					НоваяСтрока = ТаблицаУдаляемые.Добавить();
					НоваяСтрока.Документ = СтрокаДокумент.Объект;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	усд_ПроцедурыСогласованияДокументов.ВыполнитьУдаление(Объект.ПомеченныеНаУдалениеДокументы,Объект.ДокументыНеИмеющиеДвиженийПоМаршрутам,Объект.ДокументыНеИмеющиеНазначенныхМаршрутов,Объект.УказанныеВручную,ТаблицаУдаляемые);
КонецПроцедуры
