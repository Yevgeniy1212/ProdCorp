&НаСервере
Перем мУжеВСписке;
&НаСервере
Перем мДерево;
///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура вывода дерева структуры подчиненности документа
&НаСервере
Процедура ВывестиДеревоДокументов()
	ДеревоДокументов = ДанныеФормыВЗначение(Дерево,Тип("ДеревоЗначений"));
	ДеревоДокументов.Строки.Очистить();
	мДерево = ДеревоДокументов;	
	мУжеВСписке.Очистить();
	ВывестиРодительскиеДокументы(ДокументСсылка);	
	//ТекущаяСтрока = мДерево.ПолучитьИдентификатор;
	ВывестиПодчиненныеДокументы(мДерево);
	ЗначениеВДанныеФормы(ДеревоДокументов,Дерево);
КонецПроцедуры

// Процедура выполняет вывод родительских документов
&НаСервере
Процедура ВывестиРодительскиеДокументы(ДокументСсылка)
	МетаданныеДокумента = ДокументСсылка.Метаданные();
	СписокРеквизитов = Новый СписокЗначений;
	
	ТЗИменаДокументов = Новый ТаблицаЗначений;
	ТЗИменаДокументов.Колонки.Добавить("ИмяДокумента");
	
	Для Каждого Реквизит ИЗ МетаданныеДокумента.Реквизиты Цикл
		ТипыРеквизита = Реквизит.Тип.Типы();
		Для Каждого ТекущийТип ИЗ ТипыРеквизита Цикл
			МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);
					
			Если МетаданныеРеквизита<>Неопределено И Метаданные.Документы.Содержит(МетаданныеРеквизита) 
				 И ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда
				Попытка
					ЗначениеРеквизита = ДокументСсылка[Реквизит.Имя];
				Исключение
					Прервать;
				КонецПопытки;
				ЕСли ЗначениеРеквизита<>Неопределено И НЕ ЗначениеРеквизита.Пустая() И ТипЗнч(ЗначениеРеквизита) = ТекущийТип 
					 И мУжеВСписке[ЗначениеРеквизита] = Неопределено И СписокРеквизитов.НайтиПоЗначению(ДокументСсылка[Реквизит.Имя]) = Неопределено Тогда
					СтрокаТЗ = ТЗИменаДокументов.Добавить();
					СтрокаТЗ.ИмяДокумента = МетаданныеРеквизита.Имя;
					СписокРеквизитов.Добавить(ЗначениеРеквизита);
				КонецЕсли;
			КонецЕсли;			
			
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого ТЧ Из МетаданныеДокумента.ТабличныеЧасти Цикл
		СтрРеквизитов = "";
		
		Попытка
			СодержимоеТЧ = ДокументСсылка[ТЧ.Имя].Выгрузить();
		Исключение
			Прервать;
		КонецПопытки;
		
		Для Каждого Реквизит ИЗ ТЧ.Реквизиты Цикл
			ТипыРеквизита = Реквизит.Тип.Типы();
			Для Каждого ТекущийТип ИЗ ТипыРеквизита Цикл
				МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);				
				Если МетаданныеРеквизита<>Неопределено И Метаданные.Документы.Содержит(МетаданныеРеквизита) 
					И ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда
					СтрРеквизитов = СтрРеквизитов + ?(СтрРеквизитов = "", "", ", ") + Реквизит.Имя;
					Прервать;
				КонецЕсли;						
			КонецЦикла;
		КонецЦикла;
		
		СодержимоеТЧ.Свернуть(СтрРеквизитов);
		Для Каждого КолонкаТЧ ИЗ СодержимоеТЧ.Колонки Цикл
			Для Каждого СтрокаТЧ ИЗ СодержимоеТЧ Цикл
				Попытка
					ЗначениеРеквизита = СтрокаТЧ[КолонкаТЧ.Имя];
				Исключение
					Продолжить;
				КонецПопытки;
				МетаданныеЗначения = Метаданные.НайтиПоТипу(ТипЗнч(ЗначениеРеквизита));
				Если МетаданныеЗначения = Неопределено Тогда
					// базовый тип
					Продолжить;
				КонецЕсли;
				
				ЕСли ЗначениеРеквизита<>Неопределено И НЕ ЗначениеРеквизита.Пустая()
					 И Метаданные.Документы.Содержит(МетаданныеЗначения)
					 И мУжеВСписке[ЗначениеРеквизита] = Неопределено Тогда
					Если СписокРеквизитов.НайтиПоЗначению(ЗначениеРеквизита) = Неопределено Тогда
						СтрокаТЗ = ТЗИменаДокументов.Добавить();
						СтрокаТЗ.ИмяДокумента = МетаданныеЗначения.Имя;
						СписокРеквизитов.Добавить(ЗначениеРеквизита);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;		
	КонецЦикла;
	
	// оставим только уникальные имена документов
	ТЗИменаДокументов.Свернуть("ИмяДокумента");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДокументов", СписокРеквизитов.ВыгрузитьЗначения());
	
	СписокРеквизитов.Очистить();
	ЧислоТаблицВЗапросе = 0;
	ТекстЗапроса = "";
	Инд = 0;
	Пока Инд < ТЗИменаДокументов.Количество() Цикл
		
		ЧислоТаблицВЗапросе = ЧислоТаблицВЗапросе + 1;
	
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ " + ?(ЧислоТаблицВЗапросе = 1, "РАЗРЕШЕННЫЕ", "") + "
		|	Док.Ссылка,
		|	Док.Дата
		|ИЗ
		|	Документ." + ТЗИменаДокументов[Инд].ИмяДокумента + " КАК Док
		|ГДЕ
		|	Док.Ссылка В (&СписокДокументов)";
	
		Если ЧислоТаблицВЗапросе = 255
				Или Инд = ТЗИменаДокументов.Количество() - 1 Тогда
			
			Запрос.Текст = ТекстЗапроса;
			ЧислоТаблицВЗапросе = 0;
			ТекстЗапроса = "";
				
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				СписокРеквизитов.Добавить(Выборка.Ссылка, Формат(Выборка.Дата,"ДФ=yyyyMMddЧЧММсс"));
			КонецЦикла;
			
		КонецЕсли;
		
		Инд = Инд + 1; // переходим к следующему виду документов
		
	КонецЦикла;	
	
	СписокРеквизитов.СортироватьПоПредставлению();
	мУжеВСписке.Вставить(ДокументСсылка, Истина);
	
	Если СписокРеквизитов.Количество() = 1 Тогда
		ВывестиРодительскиеДокументы(СписокРеквизитов[0].Значение);
	ИначеЕсли СписокРеквизитов.Количество() > 1 Тогда
		ВывестиБезРодителей(СписокРеквизитов);		
	КонецЕсли;

	
	СтрокаДерева = мДерево.Строки.Добавить();
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ Ссылка, Проведен, ПометкаУдаления, #Сумма, #Валюта, Представление, """ + МетаданныеДокумента.Имя + """ КАК Метаданные
						   | ИЗ Документ."+МетаданныеДокумента.Имя + " ГДЕ Ссылка = &Ссылка");
						   
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Если МетаданныеДокумента.Реквизиты.Найти("СуммаДокумента") <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Сумма", "СуммаДокумента КАК СуммаДокумента");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Сумма", "NULL КАК СуммаДокумента");
	КонецЕсли;
	
	Если МетаданныеДокумента.Реквизиты.Найти("ВалютаДокумента") <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Валюта", "ВалютаДокумента КАК ВалютаДокумента");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Валюта", "NULL КАК ВалютаДокумента");
	КонецЕсли;
	
	Выборка  = Запрос.Выполнить().Выбрать();
	ЕСли Выборка.Следующий() Тогда		
		СтрокаДерева.Ссылка= Выборка.Ссылка;
		СтрокаДерева.Проведен = Выборка.Проведен;
		СтрокаДерева.ПометкаУдаления = Выборка.ПометкаУдаления;
		СтрокаДерева.ДокументПредставление = Выборка.Представление;
		СтрокаДерева.СуммаДокумента = Выборка.СуммаДокумента;
		СтрокаДерева.ВалютаДокумента = Выборка.ВалютаДокумента;
		СтрокаДерева.ВидДокумента = Выборка.Метаданные;				
		Если Выборка.Проведен=Истина Тогда
			СтрокаДерева.Картинка = 0;
		ИначеЕсли Выборка.ПометкаУдаления=Истина Тогда
			СтрокаДерева.Картинка = 1;
		Иначе
			СтрокаДерева.Картинка = 2
		КонецЕсли;
	Иначе
		СтрокаДерева.Ссылка= ДокументСсылка;
		СтрокаДерева.ДокументПредставление = Строка(ДокументСсылка);
		СтрокаДерева.СуммаДокумента = ДокументСсылка.СуммаДокумента;
		Если ДокументСсылка.Проведен=Истина Тогда
			СтрокаДерева.Картинка = 0;
		ИначеЕсли ДокументСсылка.ПометкаУдаления=Истина Тогда
			СтрокаДерева.Картинка = 1;
		Иначе
			СтрокаДерева.Картинка = 2
		КонецЕсли;
	КонецЕсли;
	
	мДерево = СтрокаДерева;
		
КонецПроцедуры

// Процедура осуществляет вывод родительских документов с ограничением по уровню в дереве
&НаСервере
Процедура ВывестиБезРодителей(СписокДокументов)
	
	Для Каждого ЭлементСписка Из СписокДокументов Цикл
		
		МетаданныеДокумента = ЭлементСписка.Значение.Метаданные();
		
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ Ссылка, Проведен, ПометкаУдаления, #Сумма, #Валюта, Представление, """ + МетаданныеДокумента.Имя + """ КАК Метаданные
		| ИЗ Документ."+МетаданныеДокумента.Имя + " ГДЕ Ссылка = &Ссылка");
		
		Запрос.УстановитьПараметр("Ссылка", ЭлементСписка.Значение);
		
		Если МетаданныеДокумента.Реквизиты.Найти("СуммаДокумента") <> Неопределено Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Сумма", "СуммаДокумента КАК СуммаДокумента");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Сумма", "NULL КАК СуммаДокумента");
		КонецЕсли;
		
		Если МетаданныеДокумента.Реквизиты.Найти("ВалютаДокумента") <> Неопределено Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Валюта", "ВалютаДокумента КАК ВалютаДокумента");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Валюта", "NULL КАК ВалютаДокумента");
		КонецЕсли;
		
		Выборка  = Запрос.Выполнить().Выбрать();
		ЕСли Выборка.Следующий() Тогда		
			Если мУжеВСписке[Выборка.Ссылка] = Неопределено Тогда
	            СтрокаДерева = мДерево.Строки.Добавить();
				СтрокаДерева.Ссылка= Выборка.Ссылка;
				СтрокаДерева.Проведен = Выборка.Проведен;
				СтрокаДерева.ПометкаУдаления = Выборка.ПометкаУдаления;
				СтрокаДерева.ДокументПредставление = Выборка.Представление;
				СтрокаДерева.ВидДокумента = Выборка.Метаданные;			
				СтрокаДерева.СуммаДокумента = Выборка.СуммаДокумента;
				СтрокаДерева.ВалютаДокумента = Выборка.ВалютаДокумента;
				СтрокаДерева.ОграничениеПоРодителям = Истина;
				мУжеВСписке.Вставить(Выборка.Ссылка, Истина);
				Если Выборка.Проведен=Истина Тогда
					СтрокаДерева.Картинка = 0;
				ИначеЕсли Выборка.ПометкаУдаления=Истина Тогда
					СтрокаДерева.Картинка = 1;
				Иначе
					СтрокаДерева.Картинка = 2
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;

	мДерево = СтрокаДерева;
	
КонецПроцедуры

// Процедура осуществляет вывод подчиненных документов
&НаСервере
Процедура ВывестиПодчиненныеДокументы(СтрокаДерева)
	
	ТекущийДокумент = СтрокаДерева.Ссылка;
	ТипДокумента = ТипЗнч(ТекущийДокумент);
	СтруктураРеквизитов = Новый ТаблицаЗначений;
	СтруктураРеквизитов.Колонки.Добавить("ПутьКДанным");
	СтруктураРеквизитов.Колонки.Добавить("ИмяРеквизита");
	СтруктураРеквизитов.Колонки.Добавить("ЕстьСуммаДокумента", Новый ОписаниеТипов("Булево"));
	СтруктураРеквизитов.Колонки.Добавить("ЕстьВалютаДокумента", Новый ОписаниеТипов("Булево"));
	
	Для каждого Док ИЗ Метаданные.Документы Цикл
		Если НЕ ПравоДоступа("Чтение", Док) Тогда
			Продолжить;
		КонецЕсли;
		
		ЕстьСуммаДокумента = НЕ (Док.Реквизиты.Найти("СуммаДокумента") = Неопределено);
		ЕстьВалютаДокумента = НЕ (Док.Реквизиты.Найти("ВалютаДокумента") = Неопределено);
				
		Для Каждого Реквизит Из Док.Реквизиты Цикл
			Если Реквизит.Тип.СодержитТип(ТипДокумента) Тогда			
				НовСтр = СтруктураРеквизитов.Добавить();
				НовСтр.ПутьКДанным = Док.Имя;
				НовСтр.ИмяРеквизита = Реквизит.Имя;
				НовСтр.ЕстьСуммаДокумента = ЕстьСуммаДокумента;
				НовСтр.ЕстьВалютаДокумента = ЕстьВалютаДокумента;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого ТЧ ИЗ Док.ТабличныеЧасти Цикл
			Для Каждого Реквизит Из ТЧ.Реквизиты Цикл
				Если Реквизит.Тип.СодержитТип(ТипДокумента) Тогда
					НовСтр = СтруктураРеквизитов.Добавить();
					НовСтр.ПутьКДанным = Док.Имя+"."+ТЧ.Имя;
					НовСтр.ИмяРеквизита = Реквизит.Имя;
					НовСтр.ЕстьСуммаДокумента = ЕстьСуммаДокумента;
					НовСтр.ЕстьВалютаДокумента = ЕстьВалютаДокумента;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;		
		
	КонецЦикла;	
	ТекстЗапроса = "";
 	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		
		Если Найти(КлючИЗначение.ПутьКДанным, ".") = 0 Тогда
		
			ТекстЗапроса = ТекстЗапроса + "
			|Выбрать " + ?(ТекстЗапроса="", "РАЗРЕШЕННЫЕ ", "") + "Ссылка, Ссылка.Дата Как ДатаДок, Представление, #СуммаДокумента, #ВалютаДокумента, Проведен, ПометкаУдаления, """+ КлючИЗначение.ПутьКДанным +""" КАК ВидДокумента ИЗ Документ."+КлючИЗначение.ПутьКДанным+"
			|ГДЕ "+КлючИЗначение.ИмяРеквизита+"=&ДокументОснование
			|ОБЪЕДИНИТЬ ВСЕ
			|";
			
			Если КлючИЗначение.ЕстьСуммаДокумента Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#СуммаДокумента", "СуммаДокумента КАК СуммаДокумента");
			Иначе
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#СуммаДокумента", "NULL КАК СуммаДокумента");
			КонецЕсли;
			
			Если КлючИЗначение.ЕстьВалютаДокумента Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ВалютаДокумента", "ВалютаДокумента КАК ВалютаДокумента");
			Иначе
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ВалютаДокумента", "NULL КАК ВалютаДокумента");
			КонецЕсли;
			
		Иначе
			ПозицияТочки = Найти(КлючИЗначение.ПутьКДанным, ".");
			ТекстЗапроса = ТекстЗапроса + "
			|Выбрать " + ?(ТекстЗапроса="", "РАЗРЕШЕННЫЕ ", "") + "Ссылка, Ссылка.Дата Как ДатаДок, Ссылка.Представление,  #СуммаДокумента, #ВалютаДокумента, Ссылка.Проведен, Ссылка.ПометкаУдаления, """+ Лев(КлючИЗначение.ПутьКДанным, ПозицияТочки-1) +""" КАК ВидДокумента ИЗ Документ."+КлючИЗначение.ПутьКДанным+"
			|ГДЕ "+КлючИЗначение.ИмяРеквизита+"=&ДокументОснование
			|ОБЪЕДИНИТЬ ВСЕ
			|";
			
			Если КлючИЗначение.ЕстьСуммаДокумента Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#СуммаДокумента", "Ссылка.СуммаДокумента КАК СуммаДокумента");
			Иначе
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#СуммаДокумента", "NULL КАК СуммаДокумента");
			КонецЕсли;
			
			Если КлючИЗначение.ЕстьВалютаДокумента Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ВалютаДокумента", "Ссылка.ВалютаДокумента КАК ВалютаДокумента");
			Иначе
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ВалютаДокумента", "NULL КАК ВалютаДокумента");
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Если ТекстЗапроса="" Тогда
		Возврат;
	КонецЕсли;		
	
	ТекстЗапроса = Лев (ТекстЗапроса, СтрДлина(ТекстЗапроса)-15);
	ТекстЗапроса = ТекстЗапроса+ "
	|УПОРЯДОЧИТЬ ПО  ДатаДок";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументОснование", ТекущийДокумент);
	Выборка = Запрос.Выполнить().Выбрать();
	
	
	Пока Выборка.Следующий() Цикл
		Если мУжеВСписке[Выборка.Ссылка] = Неопределено Тогда
			НоваяСтрока = СтрокаДерева.Строки.Добавить();
			НоваяСтрока.Ссылка = Выборка.Ссылка;
			НоваяСтрока.ДокументПредставление = Выборка.Представление;
			НоваяСтрока.СуммаДокумента = Выборка.СуммаДокумента;
			НоваяСтрока.ВалютаДокумента = Выборка.ВалютаДокумента;
			НоваяСтрока.Проведен = Выборка.Проведен;
			НоваяСтрока.ПометкаУдаления = Выборка.ПометкаУдаления;		
			НоваяСтрока.ВидДокумента = Выборка.ВидДокумента;						
			мУжеВСписке.Вставить(Выборка.Ссылка, Истина);
			Если Выборка.Проведен=Истина Тогда
				НоваяСтрока.Картинка = 0;
			ИначеЕсли Выборка.ПометкаУдаления=Истина Тогда
				НоваяСтрока.Картинка = 1;
			Иначе
				НоваяСтрока.Картинка = 2
			КонецЕсли;
			ВывестиПодчиненныеДокументы(НоваяСтрока);
		КонецЕсли;
	КонецЦикла;		
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Параметры.Свойство("ДокументСсылка") Тогда
		Отказ = Истина;
		Сообщить("Форма не предназначена для самостоятельной работы");
		Возврат;
	КонецЕсли;
	ДокументСсылка = Параметры.ДокументСсылка;
	ВывестиДеревоДокументов();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Для Каждого СтрокаДерева Из Дерево.ПолучитьЭлементы() Цикл
		Элементы.Дерево.Развернуть(СтрокаДерева.ПолучитьИдентификатор(),Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Провести(Команда)
	ВыполнитьПроведение();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПроведение()
	Попытка
		СтрокаДокумент = Дерево.НайтиПоИдентификатору(Элементы.Дерево.ТекущаяСтрока);

		Объект = СтрокаДокумент.Ссылка.ПолучитьОбъект();
		Если НЕ Объект.ПроверитьЗаполнение() Тогда
			куфиб_ОбщегоНазначения.СообщитьПользователю("Документ не проведен, т.к. при проверке заполнения произошли ошибки");
			Возврат;
		КонецЕсли;
		Объект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		СтрокаДокумент.Проведен = Истина;
		СтрокаДокумент.Картинка = 0;
		Если Объект.Проведен=Истина Тогда
			СтрокаДокумент.Картинка = 0;
		ИначеЕсли Объект.ПометкаУдаления=Истина Тогда
			СтрокаДокумент.Картинка = 1;
		Иначе
			СтрокаДокумент.Картинка = 2
		КонецЕсли;
	Исключение
		Если Найти(ОписаниеОшибки(), "недостаточно прав") <> 0 Тогда
			куфиб_ОбщегоНазначения.СообщитьПользователю("У пользователя недостаточно прав на исполнение операции над базой данных");
		Иначе
			куфиб_ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
		КонецЕсли;
	КонецПопытки;	
КонецПроцедуры

&НаКлиенте
Процедура ОтменаПроведения(Команда)
	ВыполнитьОтмену();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьОтмену()
	СтрокаДокумент = Дерево.НайтиПоИдентификатору(Элементы.Дерево.ТекущаяСтрока);
	Если НЕ СтрокаДокумент.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Объект = СтрокаДокумент.Ссылка.ПолучитьОбъект();
		Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		СтрокаДокумент.Проведен = Ложь;
		Если Объект.Проведен=Истина Тогда
			СтрокаДокумент.Картинка = 0;
		ИначеЕсли Объект.ПометкаУдаления=Истина Тогда
			СтрокаДокумент.Картинка = 1;
		Иначе
			СтрокаДокумент.Картинка = 2
		КонецЕсли;
	Исключение
		Если Найти(ОписаниеОшибки(), "недостаточно прав") <> 0 Тогда
			Сообщить("У пользователя недостаточно прав на исполнение операции над базой данных");
		Иначе
			Сообщить(ОписаниеОшибки());
		КонецЕсли;
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ВывестиДеревоДокументов();
	Для Каждого СтрокаДерева Из Дерево.ПолучитьЭлементы() Цикл
		Элементы.Дерево.Развернуть(СтрокаДерева.ПолучитьИдентификатор(),Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВывестиДляТекущего(Команда)
	ДокументСсылка = Элементы.Дерево.ТекущиеДанные.Ссылка;
	ВывестиДеревоДокументов();
	Для Каждого СтрокаДерева Из Дерево.ПолучитьЭлементы() Цикл
		Элементы.Дерево.Развернуть(СтрокаДерева.ПолучитьИдентификатор(),Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Попытка
			Форма = Элементы.Дерево.ТекущиеДанные.Ссылка.ПолучитьФорму();
			Форма.Открыть();
		Исключение
			Если Найти(ОписаниеОшибки(), "недостаточно прав") <> 0 Тогда
				Предупреждение("У пользователя недостаточно прав на исполнение операции над базой данных");
			КонецЕсли;
		КонецПопытки;	
	#Иначе
		ИмяДокумента = ИмяДокумента(Элементы.Дерево.ТекущиеДанные.Ссылка);
		Попытка
			ОткрытьФорму("Документ."+ИмяДокумента+".ФормаОбъекта",Новый Структура("Ключ",Элементы.Дерево.ТекущиеДанные.Ссылка),,Элементы.Дерево.ТекущиеДанные.Ссылка);
		Исключение
		КонецПопытки;
	#КонецЕсли
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяДокумента(Ссылка)
	Возврат Ссылка.Метаданные().Имя;	
КонецФункции

#Если Сервер Тогда
мУжеВСписке = Новый Соответствие;	
#КонецЕсли
