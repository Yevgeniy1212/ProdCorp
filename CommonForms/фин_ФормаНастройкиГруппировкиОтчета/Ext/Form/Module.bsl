
&НаКлиенте
Процедура ИзмерениеПриИзменении(Элемент)
	Состав = Новый СписокЗначений;
КонецПроцедуры

&НаКлиенте
Процедура ИзмерениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ДоступныеГруппировки;
КонецПроцедуры

&НаКлиенте
Процедура ВидГруппировкиПриИзменении(Элемент)
	Если ВидГруппировки = ПредопределенноеЗначение("Перечисление.фин_ВидыГруппировокОтчета.ГруппировкаТолькоИерархия") Тогда
		СоставноеПоле = Ложь;
		Состав = Новый СписокЗначений;
	КонецЕсли;
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СоставноеПолеПриИзменении(Элемент)
	Если РасположениеРеквизитов = ПредопределенноеЗначение("Перечисление.фин_РасположениеРеквизитов.ПустаяСсылка") И СоставноеПоле Тогда
		РасположениеРеквизитов = ПредопределенноеЗначение("Перечисление.фин_РасположениеРеквизитов.Вместе");
	КонецЕсли;
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СоставНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;	
	Если ЗначениеЗаполнено(Измерение) Тогда
		ОбработчикОповещения = Новый ОписаниеОповещения("ОбработчикВыбораСостава",ЭтотОбъект);
		ОткрытьФорму("ОбщаяФорма.фин_ВыборДополнительныхПолей",Новый Структура("ПервоначальноеЗаполнение,Список,Разрез,ПредставлениеРазреза,Группировки,ТипыГруппировок",Истина,Состав,Измерение,ДоступныеГруппировки.НайтиПоЗначению(Измерение).Представление,ДоступныеГруппировки,СоответствиеТиповГруппировкам),Элемент,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОбработчикОповещения);
	Иначе
	    ПоказатьПредупреждение(,"Не указано измерение");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыбораСостава(РезультатВыбора,ДополнительныеПараметры) Экспорт
	Если РезультатВыбора<>Неопределено Тогда
		Состав = РезультатВыбора;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтруктураЗаполнения = Новый Структура("ДополнительныеПредставления,СоответствиеТиповГруппировкам,ДоступныеГруппировки,ИмяОтчета,ИспользоватьВидГруппировки,ИспользоватьСоставноеПоле,ИспользоватьРасположение,ВидГруппировки,Измерение,ОтборПоУровнюЗначимости,ПрименятьОформление,Расположение,РасположениеРеквизитов,Состав,СоставноеПоле,УровеньЗначимости,Цвет,Шрифт,ИспользоватьСортировку,ПоказателиДляСортировки,Сортировка");
	Для Каждого ЭлементСтруктуры Из СтруктураЗаполнения Цикл
		Если Параметры.Свойство(ЭлементСтруктуры.Ключ) Тогда
			ЭтотОбъект[ЭлементСтруктуры.Ключ] = Параметры[ЭлементСтруктуры.Ключ];	
		КонецЕсли;
	КонецЦикла;
	Элементы.ГруппаОтборПоЗначимостиОтклонений.Видимость = (ИмяОтчета = "фин_ИсполнениеБюджета" ИЛИ ИмяОтчета = "фин_СравнительныйАнализ" ИЛИ ИмяОтчета="фин_АнализРассогласованияСтатей");
	Элементы.ВидГруппировки.Видимость=ИспользоватьВидГруппировки;
	Элементы.ГруппаСортировка.Видимость = ИспользоватьСортировку;
	Если НЕ ИспользоватьСоставноеПоле Тогда
		Элементы.СоставноеПоле.Видимость=Ложь;
		Элементы.Состав.Видимость=Ложь;
		Элементы.РасположениеРеквизитов.Видимость=Ложь;
	КонецЕсли;
	Если НЕ ИспользоватьРасположение Тогда
		Элементы.Расположение.Видимость=Ложь;
	КонецЕсли;
	УправлениеФормой(ЭтотОбъект);
	мВидГруппировки = фин_УправлениеОтчетамиКлиентСервер.ОпределитьВидГруппировок(ВидГруппировки);
	Если мВидГруппировки = Перечисления.фин_ВидыГруппировокОтчета.Поле Тогда
		 ДоступныеВидыГруппировок.Добавить(Перечисления.фин_ВидыГруппировокОтчета.Поле);
	ИначеЕсли мВидГруппировки = Перечисления.фин_ВидыГруппировокОтчета.ГруппировкаСтрок Тогда
		 ДоступныеВидыГруппировок.Добавить(Перечисления.фин_ВидыГруппировокОтчета.ГруппировкаСтрок);
		 ДоступныеВидыГруппировок.Добавить(Перечисления.фин_ВидыГруппировокОтчета.ГруппировкаСтрокСИерархией);
		 ДоступныеВидыГруппировок.Добавить(Перечисления.фин_ВидыГруппировокОтчета.ГруппировкаТолькоИерархия);
	ИначеЕсли мВидГруппировки = Перечисления.фин_ВидыГруппировокОтчета.Колонка Тогда
		 ДоступныеВидыГруппировок.Добавить(Перечисления.фин_ВидыГруппировокОтчета.Колонка);
		 ДоступныеВидыГруппировок.Добавить(Перечисления.фин_ВидыГруппировокОтчета.КолонкаСИерерахией);
	КонецЕсли;
	фин_УправлениеОтчетамиБюджетирование.НастроитьРасширенноеПредставлениеРазрезов(ЭтотОбъект,"Измерение","",Ложь,Истина,ДополнительныеПредставления);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	Форма.Элементы.Состав.Видимость = Форма.СоставноеПоле И Форма.ВидГруппировки <> ПредопределенноеЗначение("Перечисление.фин_ВидыГруппировокОтчета.ГруппировкаТолькоИерархия");
	Форма.Элементы.РасположениеРеквизитов.Видимость = Форма.ВидГруппировки <> ПредопределенноеЗначение("Перечисление.фин_ВидыГруппировокОтчета.ГруппировкаТолькоИерархия");

КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	СтруктураЗаполнения = Новый Структура("ВидГруппировки,Измерение,ОтборПоУровнюЗначимости,ПрименятьОформление,Расположение,РасположениеРеквизитов,Состав,СоставноеПоле,УровеньЗначимости,Цвет,Шрифт,Сортировка");
	ЗаполнитьЗначенияСвойств(СтруктураЗаполнения,ЭтотОбъект);
	Закрыть(СтруктураЗаполнения); 
КонецПроцедуры

&НаКлиенте
Процедура ВидГруппировкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ДоступныеВидыГруппировок;
КонецПроцедуры

&НаКлиенте
Процедура СортировкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;	
	Если ЗначениеЗаполнено(Измерение) Тогда
		ОбработчикОповещения = Новый ОписаниеОповещения("ОбработчикВыбораСортировки",ЭтотОбъект);
		ОткрытьФорму("ОбщаяФорма.фин_ВыборДополнительныхПолей",Новый Структура("ОтображениеПометки,Список,Разрез,ПредставлениеРазреза,Группировки,ТипыГруппировок","По убыванию",Сортировка,Измерение,ДоступныеГруппировки.НайтиПоЗначению(Измерение).Представление,ПоказателиДляСортировки,Новый ФиксированноеСоответствие(Новый Соответствие)),Элемент,УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,ОбработчикОповещения);
	Иначе
	    ПоказатьПредупреждение(,"Не указано измерение");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыбораСортировки(РезультатВыбора,ДополнительныеПараметры) Экспорт
	Если РезультатВыбора<>Неопределено Тогда
		Сортировка = РезультатВыбора;
	КонецЕсли;
КонецПроцедуры
