&НаКлиенте
Перем СоответствиеКоманд;

&НаКлиенте
Процедура ВыборФункции(Команда)
	Если Найти(Команда.Имя,"Цифра")=0 Тогда
		Элементы.Формула.ВыделенныйТекст = СоответствиеКоманд.Получить(Команда.Имя);
	Иначе
		Элементы.Формула.ВыделенныйТекст = Сред(Команда.Имя,СтрДлина("Цифра")+1);
	КонецЕсли;
	Модифицированность = Истина;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НадписьПоказателиФормулы = "Показатели формулы";
	НадписьФормула = "Формула";
	ТекстФормулы = "";
	Параметры.Свойство("ТекстФормулы",ТекстФормулы);
	Если Параметры.Свойство("АдресПоказателейФормулы") Тогда
		АдресПоказателейФормулы 	= Параметры.АдресПоказателейФормулы;
		Показатели 					= ПолучитьИзВременногоХранилища(АдресПоказателейФормулы);
		Для Каждого Показатель Из Показатели Цикл
			НС = ТаблицаАргументы.Добавить();
			ЗаполнитьЗначенияСвойств(НС,Показатель);
		КонецЦикла;
	КонецЕсли;
	Если Параметры.Свойство("ПредставлениеВВидеКодов") Тогда
		Параметры.Свойство("ПредставлениеВВидеКодов",ИспользоватьКод);	
	КонецЕсли;
	Параметры.Свойство("ВКвадратныхСкобках",ВКвадратныхСкобках);	
	ПредставлениеФормулы.УстановитьТекст(ТекстФормулы);
КонецПроцедуры

&НаКлиенте
Процедура ФормулаПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры


&НаСервере
Функция ИспользуемыеПоказатели(Знач ТекстФормулы)
	ТЗ = ТаблицаАргументы.Выгрузить();
	ТЗ.Колонки.Добавить("Длина",Новый ОписаниеТипов("Число"));
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		СтрокаТЗ.Длина = СтрДлина(СтрокаТЗ.ПредставлениеПоказателя);
	КонецЦикла;
	ТЗ.Сортировать("Длина УБЫВ");
	СписокПоказателей = Новый СписокЗначений;
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		Если Найти(ТекстФормулы,СтрокаТЗ.ПредставлениеПоказателя)<>0 Тогда
			СписокПоказателей.Добавить(СтрокаТЗ.ПредставлениеПоказателя);
			ТекстФормулы = СтрЗаменить(ТекстФормулы,СтрокаТЗ.ПредставлениеПоказателя,"/");
		КонецЕсли;
	КонецЦикла;
	Возврат СписокПоказателей;
КонецФункции

&НаКлиенте
Процедура ТригонометрическиеФункции(Команда)
	СписокФункций = Новый СписокЗначений;
	СписокФункций.Добавить("Sin()",		"Sin(Угол) - синус от аргумента, заданного в радианах");
	СписокФункций.Добавить("Cos()",		"Cos(Угол) - косинус от аргумента, заданного в радианах");
	СписокФункций.Добавить("Tan()",		"Tan(Угол) - тангенс от аргумента, заданного в радианах");
	СписокФункций.Добавить("ASin()",	"ASin(Число) - вычисление арксинуса в радианах от аргумента в диапазоне -1 ... 1");
	СписокФункций.Добавить("ACos()",	"ACos(Число) - вычисление арккосинуса в радианах от аргумента в диапазоне -1 ... 1");
	СписокФункций.Добавить("ATan()",	"ATan(Число) - вычисление арктангенса в радианах от аргумента в диапазоне -1 ... 1");
	ОписаниеОбработкаВыбораТригонометрическихФункций = Новый ОписаниеОповещения("ОбработкаВыбораТригонометрическихФункций",ЭтотОбъект);
	ПоказатьВыборИзСписка(ОписаниеОбработкаВыбораТригонометрическихФункций,СписокФункций,Элементы.ТригонометрическиеФункции,СписокФункций[0]);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораТригонометрическихФункций(РезультатВыбора,ДополнительныеПараметры) Экспорт
	Если РезультатВыбора <> Неопределено Тогда
		Элементы.Формула.ВыделенныйТекст = РезультатВыбора.Значение;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВходящиеПоказателиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элементы.ТаблицаАргументы.ТекущиеДанные<>Неопределено И Элементы.ТаблицаАргументы.ТекущиеДанные.Представление<>"" Тогда
		Элементы.Формула.ВыделенныйТекст = ?(ВКвадратныхСкобках,"[","")+ ?(ИспользоватьКод,Элементы.ТаблицаАргументы.ТекущиеДанные.Код,Элементы.ТаблицаАргументы.ТекущиеДанные.Представление)+?(ВКвадратныхСкобках,"]","");
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	ПоместитьПоказателиВХранилище();
	ОповеститьОВыборе(Новый Структура("ТекстФормулы,АдресПоказателей",ПредставлениеФормулы.ПолучитьТекст(),АдресПоказателейФормулы));
КонецПроцедуры

&НаСервере
Процедура ПоместитьПоказателиВХранилище()
	ПоместитьВоВременноеХранилище(ТаблицаАргументы.Выгрузить(),АдресПоказателейФормулы);	
КонецПроцедуры


СоответствиеКоманд = Новый Соответствие;
СоответствиеКоманд.Вставить("Выбор",	"?(,,)");
СоответствиеКоманд.Вставить("Макс",		"Макс(,)");
СоответствиеКоманд.Вставить("Мин",		"Мин(,)");
СоответствиеКоманд.Вставить("Окр",		"Окр(,)");
СоответствиеКоманд.Вставить("Цел",		"Цел()");
СоответствиеКоманд.Вставить("Оценить",	"ОценитьПо(,)");
СоответствиеКоманд.Вставить("Log",		"Log()");
СоответствиеКоманд.Вставить("Log10",	"Log10()");
СоответствиеКоманд.Вставить("Корень",	"КореньКв()");
СоответствиеКоманд.Вставить("Минус",	"-");
СоответствиеКоманд.Вставить("Плюс",		"+");
СоответствиеКоманд.Вставить("СкобкаЗакрывающая",	")");
СоответствиеКоманд.Вставить("СкобкаОткрывающая",	"(");
СоответствиеКоманд.Вставить("Степень",	"Степень(,)");
СоответствиеКоманд.Вставить("Умножить",	"*");
СоответствиеКоманд.Вставить("Делить",	"/");
СоответствиеКоманд.Вставить("Exp",		"Exp()");
СоответствиеКоманд.Вставить("Больше",			">");
СоответствиеКоманд.Вставить("Меньше",			"<");
СоответствиеКоманд.Вставить("Равно",			"=");
СоответствиеКоманд.Вставить("БольшеИлиРавно",	"=>");
СоответствиеКоманд.Вставить("МеньшеИлиРавно",	"<=");
СоответствиеКоманд.Вставить("НеРавно",			"<>");
СоответствиеКоманд.Вставить("Точка",			".");
