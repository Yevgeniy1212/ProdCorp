////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ДЛЯ РАБОТЫ С ДЕРЕВОМ

// Процедура рекурсивного обхода результатов запроса для вывода в дерево
&НаСервере
Процедура ВыдатьРекурсивноДеревоСтруктурныхПодразделений(КорневаяСтрока, Выборка) 	
	Перем НоваяВыборка;
	Пока Выборка.Следующий() Цикл
		Если ТипЗнч(КорневаяСтрока) = Тип("СтрокаДереваЗначений") Тогда
			НоваяСтрока = КорневаяСтрока.ПолучитьЭлементы().Строки.Добавить();
		Иначе
			НоваяСтрока = КорневаяСтрока.ПолучитьЭлементы().Добавить();
		КонецЕсли;
		НоваяСтрока.Код = Выборка.Код;
		НоваяСтрока.Наименование = Выборка.Наименование;
		НоваяСтрока.Ссылка = Выборка.Ссылка;
		СпособВыборки = ОбходРезультатаЗапроса.ПоГруппировкамСИерархией;
		НоваяВыборка  = Выборка.Выбрать(СпособВыборки);
		ВыдатьРекурсивноДеревоСтруктурныхПодразделений(НоваяСтрока, НоваяВыборка);
	КонецЦикла;
КонецПроцедуры // ВыдатьРекурсивноДеревоСтруктурныхПодразделений()

//Поиск элементов в дереве значений
&НаКлиенте
Процедура НайтиКатегориюВДереве(КоллекцияСтрокДереваОдногоУровня, ИскомыйОбъект, Индекс)
	Для Каждого Строка Из КоллекцияСтрокДереваОдногоУровня Цикл
		Если Строка.Ссылка = ИскомыйОбъект Тогда
			Индекс = Строка.ПолучитьИдентификатор();
		Иначе
			НайтиКатегориюВДереве(Строка.ПолучитьЭлементы(), ИскомыйОбъект, Индекс);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// Процедура формирует дерево для выбора структурного подразделения
&НаКлиенте
Процедура ЗаполнитьДеревоСтруктурныхПодразделений()
	ЗаполнитьДеревоСтруктурныхПодразделенийНаСервере(глТекущийПользователь,УчетПоВсемОрганизациям);		
	// Форматирование
	Элементы.ДеревоСтруктурныхПодразделенийСсылка.Видимость = Ложь;
	Элементы.ДеревоСтруктурныхПодразделенийКод.ТолькоПросмотр = Истина;
	Элементы.ДеревоСтруктурныхПодразделенийКод.Ширина = 10;
	Элементы.ДеревоСтруктурныхПодразделенийНаименование.ПропускатьПриВводе = Истина;
	Элементы.ДеревоСтруктурныхПодразделенийНаименование.Ширина = 50;
	Элементы.ДеревоСтруктурныхПодразделений.Развернуть(ДеревоСтруктурныхПодразделений.ПолучитьЭлементы().Получить(0).ПолучитьИдентификатор(), Истина);
	Элементы.ДеревоСтруктурныхПодразделений.Обновить();
	// Позиционирование на строке с выбранным структурным подразделением
	Если ЗначениеЗаполнено(АктивноеПодразделение) Тогда
		Позиция=0;
		НайтиКатегориюВДереве(ДеревоСтруктурныхПодразделений.ПолучитьЭлементы(),АктивноеПодразделение,позиция);
		Элементы.ДеревоСтруктурныхПодразделений.ТекущаяСтрока= позиция;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьДеревоСтруктурныхПодразделенийНаСервере(глТекущийПользователь,УчетПоВсемОрганизациям)
	Если Организация.Пустая() Тогда
		Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация");
	КонецЕсли;
	// Проверка ведения однофирменности
	Элементы.Организация.ТолькоПросмотр = НЕ УчетПоВсемОрганизациям;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПодразделенияОрганизаций.Ссылка КАК Ссылка,
	               |	ПодразделенияОрганизаций.Представление КАК Представление,
	               |	ПодразделенияОрганизаций.Код КАК Код,
	               |	ПодразделенияОрганизаций.Наименование КАК Наименование,
	               |	ПодразделенияОрганизаций.Родитель КАК Родитель
	               |ИЗ
	               |	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	               |ГДЕ
	               |	ПодразделенияОрганизаций.ЯвляетсяСтруктурнымПодразделением = ИСТИНА
	               |	И ПодразделенияОрганизаций.Владелец = &Владелец
	               |АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("Владелец", Организация);
	Результат = Запрос.Выполнить();
	НоваяВыборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	// Очистка дерева
	ДеревоСтруктурныхПодразделений.ПолучитьЭлементы().Очистить();
	// Добавляем строку корневого уровня
	КорневаяСтрока = ДеревоСтруктурныхПодразделений.ПолучитьЭлементы().Добавить();
	КорневаяСтрока.Код = Организация.Код;
	КорневаяСтрока.Наименование = Организация.Наименование;
	КорневаяСтрока.Ссылка = ПолучитьПодразделенияОрганизацийПустуюСсылку();

	ВыдатьРекурсивноДеревоСтруктурныхПодразделений(КорневаяСтрока, НоваяВыборка); 
КонецФункции // ЗаполнитьДеревоСтруктурныхПодразделений()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Обработчик события "ОсновныеДействияФормыВыбрать" кнопки "Выбрать"
&НаКлиенте
Процедура Выбрать(Команда)
	ВыбраннаяСтрока = Элементы.ДеревоСтруктурныхПодразделений.ТекущиеДанные;
	Если ВыбраннаяСтрока = Неопределено И ДеревоСтруктурныхПодразделений.ПолучитьЭлементы().Количество() <> 0 Тогда
		Возврат;
	ИначеЕсли ДеревоСтруктурныхПодразделений.ПолучитьЭлементы().Количество() = 0 И Организация = ПолучитьПодразделенияОрганизацийПустуюСсылку() Тогда
		СтруктураРезультата = Новый Структура("Организация, Подразделение", Организация, ПолучитьПодразделенияОрганизацийПустуюСсылку());
	Иначе
		СтруктураРезультата = Новый Структура("Организация, Подразделение", Организация, ?(НЕ ЗначениеЗаполнено(ВыбраннаяСтрока.ссылка), Организация, ВыбраннаяСтрока.ссылка));
	КонецЕсли;
	ОповеститьОВыборе(СтруктураРезультата);
КонецПроцедуры // Выбрать()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриИзменении" элемента "Организация"
&НаКлиенте
Процедура ОрганизацияПриИзменении()
	Если ОрганизацияНеПустаяСсылка() Тогда
		ЗаполнитьДеревоСтруктурныхПодразделений();
		Если ДеревоСтруктурныхПодразделений.ПолучитьЭлементы().Количество() <> 0 Тогда
			Элементы.ДеревоСтруктурныхПодразделений.ТекущаяСтрока = ДеревоСтруктурныхПодразделений.ПолучитьЭлементы().Индекс(0);
		КонецЕсли;
	Иначе
		ДеревоСтруктурныхПодразделений.Строки.Очистить();
	КонецЕсли;
КонецПроцедуры // ОрганизацияПриИзменении
//проверка на пустое поле организацииъ
&НаСервере
Функция ОрганизацияНеПустаяСсылка()
	Если Организация <> Справочники.Организации.ПустаяСсылка() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли
КонецФункции

&НаСервере
Функция ПолучитьПодразделенияОрганизацийПустуюСсылку()
	Возврат Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
КонецФункции

// Процедура - обработчик события "Выбор" элемента "ДеревоСтруктурныхПодразделений"
&НаКлиенте
Процедура ДеревоСтруктурныхПодразделенийВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	//оптимистическая обработка
	//отменяем оповещение и разворачиваем если является родителем и свернут
	Если НЕ ЗначениеЗаполнено(Элементы.ДеревоСтруктурныхПодразделений.ТекущиеДанные.Ссылка) и НЕ Элементы.ДеревоСтруктурныхПодразделений.Развернут(ВыбраннаяСтрока) Тогда
		Элементы.ДеревоСтруктурныхПодразделений.Развернуть(ВыбраннаяСтрока, Истина); 
		Возврат;
	КонецЕсли;
	//оповещаем формы 
	ОповеститьОВыборе(Новый Структура("Организация, Подразделение", Организация, ?(НЕ ЗначениеЗаполнено(Элементы.ДеревоСтруктурныхПодразделений.ТекущиеДанные.Ссылка), Организация, Элементы.ДеревоСтруктурныхПодразделений.ТекущиеДанные.Ссылка)));
КонецПроцедуры //ДеревоСтруктурныхПодразделенийВыбор()

// Процедура - обработчик события "ПриОткрытии" формы
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьДеревоСтруктурныхПодразделений();
	// Проверка ведения однофирменности
	Элементы.Организация.ТолькоПросмотр = НЕ УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(фин_ОбщегоНазначенияВызовСервераПовтИсп.ЗначениеПеременной("глТекущийПользователь"), "УчетПоВсемОрганизациям");
КонецПроцедуры
