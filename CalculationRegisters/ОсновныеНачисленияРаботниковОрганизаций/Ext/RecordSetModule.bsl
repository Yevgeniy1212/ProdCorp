
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Управление необходимостью выполнить 
//   расчет периода начислений сотрудников.
Перем мВыполнятьРасчетПериодаНачисленияСотрудника Экспорт;

// Управление необходимостью выполнять любые 
//   вспомогательные расчеты при записи набора записей.	
Перем мВыполнятьВспомогательныеРасчеты Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

///////////////////////////////////////////////////////////////////////////////////////
// Расчет периода начисления 
// Выполняется если установлен контроль периода начисления сотрудников
//
Процедура РасчетПериодаНачисления(ТекстЗапроса, ПериодыДействияМассив, Отказ, Заголовок)
	
	Регистратор = Отбор.Регистратор.Значение;
    Запрос = Новый Запрос(ТекстЗапроса);
    Запрос.УстановитьПараметр("Регистратор", Регистратор);
    Запрос.УстановитьПараметр("ПериодыДействия", ПериодыДействияМассив);
	
	МассивВидовВремени = Новый Массив;
	МассивВидовВремени.Добавить(Перечисления.ВидыВремени.ЧасовоеНеотработанное);
	Запрос.УстановитьПараметр("ВнутрисменныеВидыРасчета", МассивВидовВремени);
	
	Выборка = Запрос.Выполнить().Выбрать();
    ТекущийСотрудник			  = Неопределено;
    ТекущийПериодДействия 		  = Неопределено;
	ОрганизацияТекущегоСотрудника = Неопределено;
    
    ПериодыНачисления = Новый ТаблицаЗначений;
    ПериодыНачисления.Колонки.Добавить("ДатаНачала");
    ПериодыНачисления.Колонки.Добавить("ДатаОкончания");
    
    НаборЗаписей = РегистрыСведений.ПериодыНачисленийСотрудников.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Сотрудник.Использование		= Истина;
    НаборЗаписей.Отбор.ПериодДействия.Использование = Истина;
    НаборЗаписей.Отбор.Организация.Использование	= Истина;
    
    Пока Выборка.Следующий() Цикл
		Если Выборка.Сотрудник <> ТекущийСотрудник
                ИЛИ Выборка.ПериодДействия <> ТекущийПериодДействия 
                ИЛИ Выборка.Организация <> ОрганизацияТекущегоСотрудника Тогда
            Если ТекущийСотрудник <> Неопределено Тогда
                ПеренестиПериодыНачисленияВНаборЗаписей(ПериодыНачисления, НаборЗаписей, ТекущийСотрудник, ОрганизацияТекущегоСотрудника, ТекущийПериодДействия);
                НаборЗаписей.Отбор.Сотрудник.Значение	   = ТекущийСотрудник;
                НаборЗаписей.Отбор.ПериодДействия.Значение = ТекущийПериодДействия;
			    НаборЗаписей.Отбор.Организация.Значение	   = ОрганизацияТекущегоСотрудника;
                НаборЗаписей.Записать();
                НаборЗаписей.Очистить();
            КонецЕсли;
            ТекущийСотрудник 			  = Выборка.Сотрудник;
			ОрганизацияТекущегоСотрудника = Выборка.Организация;
            ТекущийПериодДействия 		  = Выборка.ПериодДействия;
        КонецЕсли;
        Если Выборка.ПериодДействияНачало <> NULL Тогда
            Если Выборка.Сторно Тогда
                УдалитьПериод(ПериодыНачисления, Выборка.ПериодДействияНачало, Выборка.ПериодДействияКонец);
            Иначе
                ДобавитьПериод(ПериодыНачисления, Выборка.ПериодДействияНачало, Выборка.ПериодДействияКонец, Истина, Выборка.СотрудникНаименование + ": обнаружено повторное начисление за период ", Отказ, Заголовок);
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
    Если ТекущийСотрудник <> Неопределено Тогда
        ПеренестиПериодыНачисленияВНаборЗаписей(ПериодыНачисления, НаборЗаписей, ТекущийСотрудник, ОрганизацияТекущегоСотрудника, ТекущийПериодДействия);
        НаборЗаписей.Отбор.Сотрудник.Значение 		= ТекущийСотрудник;
        НаборЗаписей.Отбор.ПериодДействия.Значение	= ТекущийПериодДействия;
		НаборЗаписей.Отбор.Организация.Значение 	= ОрганизацияТекущегоСотрудника;
        НаборЗаписей.Записать();
        НаборЗаписей.Очистить();
	КонецЕсли;
	
КонецПроцедуры

// Переносит записи в регистр сведений ПериодыНачисленийСотрудников из временной таблицы значений
//
Процедура ПеренестиПериодыНачисленияВНаборЗаписей(ПериодыНачисления, НаборЗаписей, ТекущийСотрудник, ОрганизацияТекущегоСотрудника, ТекущийПериодДействия)
	
	Для Каждого СтрокаПериода Из ПериодыНачисления Цикл
        Строка = НаборЗаписей.Добавить();
        Строка.Сотрудник 		= ТекущийСотрудник;
        Строка.ПериодДействия 	= ТекущийПериодДействия;
		Строка.Организация 		= ОрганизацияТекущегоСотрудника;
        Строка.ДатаНачала 		= СтрокаПериода.ДатаНачала;
        Строка.ДатаОкончания 	= СтрокаПериода.ДатаОкончания;
    КонецЦикла;
    ПериодыНачисления.Очистить();
	
КонецПроцедуры // ПеренестиПериодыНачисленияВНаборЗаписей()

// Рассчитывает периоды, за которые следует произвести доначисление зарплаты
//
Процедура РасчетПериодаДоначисления(ТекстЗапроса, ПериодыДействияМассив)
	
	Регистратор = Отбор.Регистратор.Значение;
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.УстановитьПараметр("ПериодыДействия", ПериодыДействияМассив);
	
	МассивВидовВремени = Новый Массив;
	МассивВидовВремени.Добавить(Перечисления.ВидыВремени.ЧасовоеНеотработанное);
	Запрос.УстановитьПараметр("ВнутрисменныеВидыРасчета", МассивВидовВремени);
	
	Выборка = Запрос.Выполнить().Выбрать();
	ТекущийСотрудник 	= Неопределено;
	ТекущийПериодДействия = Неопределено;
	ОрганизацияТекущегоСотрудника = Неопределено;
	ПериодыДействия = Новый ТаблицаЗначений;
	ПериодыДействия.Колонки.Добавить("ПериодРегистрации");
	ПериодыДействия.Колонки.Добавить("Погашение");
	ПериодыДействия.Колонки.Добавить("ДатаНачала");
	ПериодыДействия.Колонки.Добавить("ДатаОкончания");
	Пока Выборка.Следующий() Цикл
		Если Выборка.Сотрудник <> ТекущийСотрудник 
			ИЛИ Выборка.ПериодДействия <> ТекущийПериодДействия 
			ИЛИ Выборка.Организация <> ОрганизацияТекущегоСотрудника Тогда
			Если ТекущийСотрудник <> Неопределено Тогда 
				ЗаписатьНаборЗаписей(ПериодыДействия, ТекущийСотрудник, ОрганизацияТекущегоСотрудника, ТекущийПериодДействия);
			КонецЕсли;
			ТекущийСотрудник = Выборка.Сотрудник;
			ТекущийПериодДействия = Выборка.ПериодДействия;
			ОрганизацияТекущегоСотрудника = Выборка.Организация;
		КонецЕсли;
		Период = ПериодыДействия.Добавить();
		Период.Погашение = Ложь;
		Период.ПериодРегистрации = Выборка.ПериодРегистрации;
		Период.ДатаНачала = Выборка.ДатаНачала;
		Период.ДатаОкончания = Выборка.ДатаОкончания;
		Если Выборка.ДатаНачалаПогашения <> null Тогда
			Период = ПериодыДействия.Добавить();
			Период.Погашение = Истина;
			Период.ПериодРегистрации = Выборка.ПериодРегистрацииПогашения;
			Период.ДатаНачала = Выборка.ДатаНачалаПогашения;
			Период.ДатаОкончания = Выборка.ДатаОкончанияПогашения;
		КонецЕсли;
	КонецЦикла;
	Если ТекущийСотрудник <> Неопределено Тогда
		ЗаписатьНаборЗаписей(ПериодыДействия, ТекущийСотрудник, ОрганизацияТекущегоСотрудника, ТекущийПериодДействия);
	КонецЕсли;
	
КонецПроцедуры // РасчетПериодаДоначисления()

// Переносит записи в набор регистра сведений
//
Процедура ЗаписатьНаборЗаписей(ПериодыДействия, ТекущийСотрудник, ОрганизацияТекущегоСотрудника, ТекущийПериодДействия)
	
	ПериодыДоначисления = Новый ТаблицаЗначений;
	ПериодыДоначисления.Колонки.Добавить("ДатаНачала");
	ПериодыДоначисления.Колонки.Добавить("ДатаОкончания");
	
	ПериодыДействия.Сортировать("ПериодРегистрации, Погашение");
	Для Каждого Период Из ПериодыДействия Цикл
		Если Период.Погашение Тогда
			УдалитьПериод(ПериодыДоначисления, Период.ДатаНачала, Период.ДатаОкончания);
		Иначе
			ДобавитьПериод(ПериодыДоначисления, Период.ДатаНачала, Период.ДатаОкончания);
		КонецЕсли;
	КонецЦикла;
	
	НаборЗаписей = РегистрыСведений.ДоначисленияСотрудникам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Сотрудник.Установить(ТекущийСотрудник);
	НаборЗаписей.Отбор.ПериодДействия.Установить(ТекущийПериодДействия);
	НаборЗаписей.Отбор.Организация.Установить(ОрганизацияТекущегоСотрудника);
	
	Для Каждого Период Из ПериодыДоначисления Цикл
		Строка = НаборЗаписей.Добавить();
		Строка.Сотрудник	    = ТекущийСотрудник;
		Строка.ПериодДействия	= ТекущийПериодДействия;
		Строка.ДатаНачала		= Период.ДатаНачала;
		Строка.ДатаОкончания	= Период.ДатаОкончания;
		Строка.Организация		= ОрганизацияТекущегоСотрудника;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	ПериодыДействия.Очистить();
	
КонецПроцедуры // ЗаписатьНаборЗаписей()

// Добавляет запись о новом периоде во временную таблицу значений
//
Процедура ДобавитьПериод(Периоды, Начало, Окончание, СПроверкойПерекрытия = Ложь, ТекстИсключения = "", Отказ = Ложь, Заголовок = "")
	
	НоваяСтрока = Периоды.Добавить();
    НоваяСтрока.ДатаНачала = Начало;
    НоваяСтрока.ДатаОкончания = Окончание;
    // обработаем полученные периоды
    Периоды.Сортировать("ДатаНачала");
    ПрошлаяДатаНачала = '0001-01-01';
    ПрошлаяДатаОкончания = '0001-01-01';
    ПрошлаяСтрока = Неопределено;
    СтрокиКУдалению = Новый Массив;
    Для Каждого СтрокаПериода Из Периоды Цикл
        Если СПроверкойПерекрытия И СтрокаПериода.ДатаНачала < ПрошлаяДатаОкончания Тогда
        	ОбщегоНазначения.СообщитьОбОшибке(ТекстИсключения + "(" + Формат(Макс(СтрокаПериода.ДатаНачала, ПрошлаяДатаНачала), "ДФ='дд МММ гг ""г.""'") + " - " + Формат(Мин(СтрокаПериода.ДатаОкончания, ПрошлаяДатаОкончания), "ДФ='дд МММ гг ""г.""'") + ")", Отказ, Заголовок);
        КонецЕсли;
        Если СтрокаПериода.ДатаНачала <= ПрошлаяДатаОкончания + 1 Тогда
            //склеим периоды
            СтрокаПериода.ДатаНачала = Мин(СтрокаПериода.ДатаНачала, ПрошлаяДатаНачала);
            СтрокаПериода.ДатаОкончания = Макс(СтрокаПериода.ДатаОкончания, ПрошлаяДатаОкончания);
            СтрокиКУдалению.Добавить(ПрошлаяСтрока);
        КонецЕсли;
        ПрошлаяДатаНачала = СтрокаПериода.ДатаНачала;
        ПрошлаяДатаОкончания = СтрокаПериода.ДатаОкончания;
        ПрошлаяСтрока = СтрокаПериода;
    КонецЦикла;
    Для Каждого Строка Из СтрокиКУдалению Цикл
        Периоды.Удалить(Строка);
	КонецЦикла;
	
КонецПроцедуры // ДобавитьПериод()

// Удаляет из временной таблицы значений запись о периоде
//
Процедура УдалитьПериод(ПериодыДоначисления, ДатаНачала, ДатаОкончания)
	
	СтрокиКУдалению = Новый Массив;
	
	Для Каждого СтрокаПериода Из ПериодыДоначисления Цикл
		Если                                                //    ДН  ПН ДК   ПК
			ДатаНачала <= СтрокаПериода.ДатаНачала          //   --х--[---х====]----> t
			И ДатаОкончания > СтрокаПериода.ДатаНачала                     
			И ДатаОкончания < СтрокаПериода.ДатаОкончания Тогда
			СтрокаПериода.ДатаНачала = ДатаОкончания + 1;
			
		ИначеЕсли                                          //   ПН ДН  ПК  ДК
			ДатаНачала > СтрокаПериода.ДатаНачала          // --[===x---]--x----> t
			И ДатаНачала < СтрокаПериода.ДатаОкончания 
			И ДатаОкончания >= СтрокаПериода.ДатаОкончания Тогда 
			СтрокаПериода.ДатаОкончания = ДатаНачала - 1;
			
		ИначеЕсли                                         //   ПН ДН   ДК ПК
			ДатаНачала > СтрокаПериода.ДатаНачала         // --[==x----x===]----> t
			И ДатаОкончания < СтрокаПериода.ДатаОкончания Тогда
			// добавим новый период
			НоваяСтрока = ПериодыДоначисления.Добавить();
			НоваяСтрока.ДатаНачала = ДатаОкончания + 1;
			НоваяСтрока.ДатаОкончания = СтрокаПериода.ДатаОкончания;
			// сокартим прежний            
			СтрокаПериода.ДатаОкончания = ДатаНачала - 1;
			
		ИначеЕсли                                        // ДН  ПН   ПК   ДК
			ДатаНачала <= СтрокаПериода.ДатаНачала       // -x--[-----]---x-----> t
			И ДатаОкончания >= СтрокаПериода.ДатаОкончания Тогда
			СтрокиКУдалению.Добавить(СтрокаПериода);
			
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из СтрокиКУдалению Цикл
		ПериодыДоначисления.Удалить(Строка);
	КонецЦикла;
	
КонецПроцедуры // УдалитьПериод()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ПередЗаписью"
//
Процедура ПередЗаписью(Отказ, Замещение, ТолькоЗапись)
	
	Если ОбменДанными.Загрузка или НЕ мВыполнятьВспомогательныеРасчеты или ТолькоЗапись Тогда
        Возврат;
    КонецЕсли;
		
	Для Каждого СтрокаНабора Из ЭтотОбъект Цикл
		Если СтрокаНабора.ДатаНачалаСобытия = '00010101' Тогда
			СтрокаНабора.ДатаНачалаСобытия = СтрокаНабора.ПериодДействияНачало;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия КАК ПериодДействия
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор");
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Выборка = Запрос.Выполнить().Выбрать();
	ПериодыДействия = Новый Массив;
	Пока Выборка.Следующий() Цикл
		ПериодыДействия.Добавить(Выборка.ПериодДействия);
	КонецЦикла;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	НачисленияСторно.Сотрудник КАК Сотрудник,
	|	НачисленияСторно.Организация Как Организация,
	|	НачисленияСторно.ПериодДействия КАК ПериодДействия,
	|	НачисленияСторно.ПериодРегистрации КАК ПериодРегистрации,
	|	НачисленияСторно.ПериодДействияНачало КАК ДатаНачала,
	|	НачисленияСторно.ПериодДействияКонец КАК ДатаОкончания,
	|	Начисления.ПериодРегистрации КАК ПериодРегистрацииПогашения,
	|	Начисления.ПериодДействияНачало КАК ДатаНачалаПогашения,
	|	Начисления.ПериодДействияКонец КАК ДатаОкончанияПогашения
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
	|		Регистратор <> &Регистратор
	|			И ВидРасчета В
	|				(ВЫБРАТЬ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Ссылка
	|				ИЗ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций
	|				ГДЕ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ЗачетНормыВремени
	|					И НЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени В (&ВнутрисменныеВидыРасчета))
	|			И Сотрудник В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник
	|				ИЗ
	|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций
	|				ГДЕ
	|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор)
	|			И ПериодДействия В (&ПериодыДействия)) КАК НачисленияСторно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ОсновныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	|			ОсновныеНачисленияРаботниковОрганизаций.Организация КАК Организация,
	|			ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия КАК ПериодДействия
	|		ИЗ
	|			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ГДЕ
	|			ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор) КАК СотрудникПериод
	|		ПО СотрудникПериод.Сотрудник = НачисленияСторно.Сотрудник
	|			И СотрудникПериод.Организация = НачисленияСторно.Организация
	|			И СотрудникПериод.ПериодДействия = НачисленияСторно.ПериодДействия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
	|		Регистратор <> &Регистратор
	|			И (НЕ Сторно)
	|			И ВидРасчета В
	|				(ВЫБРАТЬ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Ссылка
	|				ИЗ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций
	|				ГДЕ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ЗачетНормыВремени
	|					И НЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени В (&ВнутрисменныеВидыРасчета))
	|			И Сотрудник В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник
	|				ИЗ
	|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций
	|				ГДЕ
	|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор)
	|			И ПериодДействия В (&ПериодыДействия)) КАК Начисления
	|		ПО НачисленияСторно.Сотрудник = Начисления.Сотрудник
	|			И НачисленияСторно.Организация = Начисления.Организация
	|			И НачисленияСторно.ПериодРегистрации <= Начисления.ПериодРегистрации
	|			И НачисленияСторно.ПериодДействия = Начисления.ПериодДействия
	|			И Начисления.ПериодДействияНачало < НачисленияСторно.ПериодДействияКонец
	|			И Начисления.ПериодДействияКонец > НачисленияСторно.ПериодДействияНачало
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Сотрудник,
	|	ПериодДействия";
	РасчетПериодаДоначисления(ТекстЗапроса, ПериодыДействия);
	
	Если НЕ мВыполнятьРасчетПериодаНачисленияСотрудника Тогда
        Возврат;
    КонецЕсли;

	ТекстЗапроса = 
    "ВЫБРАТЬ
    |	ОсновныеНачисленияФПД.Сотрудник КАК Сотрудник,
    |	ОсновныеНачисленияФПД.Сотрудник.Наименование КАК СотрудникНаименование,
    |	ЕСТЬNULL(СотрудникПериод.Организация, ОсновныеНачисленияФПД.Организация) КАК Организация,
    |	ОсновныеНачисленияФПД.ПериодДействия КАК ПериодДействия,
    |	ОсновныеНачисленияФПД.ПериодРегистрации КАК ПериодРегистрации,
    |	ОсновныеНачисленияФПД.ВидРасчета КАК ВидРасчета,
    |	ОсновныеНачисленияФПД.Сторно КАК Сторно,
    |	ОсновныеНачисленияФПД.ПериодДействияНачало,
    |	ОсновныеНачисленияФПД.ПериодДействияКонец
    |ИЗ
    |	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
    |			Регистратор <> &Регистратор
    |				И Сотрудник В
    |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
    |						РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник
    |					ИЗ
    |						РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций
    |					ГДЕ
    |						РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор)
    |				И ВидРасчета В
    |					(ВЫБРАТЬ
    |						ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Ссылка
    |					ИЗ
    |						ПланВидовРасчета.ОсновныеНачисленияОрганизаций
    |					ГДЕ
    |						ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ЗачетНормыВремени
    |						И (НЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени В (&ВнутрисменныеВидыРасчета)))
    |				И ПериодДействия В (&ПериодыДействия)) КАК ОсновныеНачисленияФПД
    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
    |			ОсновныеНачисления.Сотрудник КАК Сотрудник,
    |			ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
    |			ОсновныеНачисления.Организация КАК Организация
    |		ИЗ
    |			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
    |		ГДЕ
    |			ОсновныеНачисления.Регистратор = &Регистратор) КАК СотрудникПериод
    |		ПО СотрудникПериод.Сотрудник = ОсновныеНачисленияФПД.Сотрудник
    |			И СотрудникПериод.Организация = ОсновныеНачисленияФПД.Организация
    |			И СотрудникПериод.ПериодДействия = ОсновныеНачисленияФПД.ПериодДействия
    |
    |ОБЪЕДИНИТЬ ВСЕ
    |
    |ВЫБРАТЬ
    |	СотрудникПериод.Сотрудник,
    |	СотрудникПериод.Сотрудник.Наименование КАК СотрудникНаименование,
    |	СотрудникПериод.Организация КАК Организация,
    |	СотрудникПериод.ПериодДействия,
    |	NULL,
    |	NULL,
    |	NULL,
    |	NULL,
    |	NULL
    |ИЗ
    |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
    |		ОсновныеНачисления.Сотрудник КАК Сотрудник,
    |		ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
    |		ОсновныеНачисления.Организация КАК Организация
    |	ИЗ
    |		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
    |	ГДЕ
    |		ОсновныеНачисления.Регистратор = &Регистратор) КАК СотрудникПериод
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
    |				Регистратор <> &Регистратор
    |					И Сотрудник В
    |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
    |							РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник
    |						ИЗ
    |							РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций
    |						ГДЕ
    |							РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор)
    |					И ВидРасчета В
    |						(ВЫБРАТЬ
    |							ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Ссылка
    |						ИЗ
    |							ПланВидовРасчета.ОсновныеНачисленияОрганизаций
    |						ГДЕ
    |							ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ЗачетНормыВремени
    |							И (НЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени В (&ВнутрисменныеВидыРасчета)))
    |					И ПериодДействия В (&ПериодыДействия)) КАК ОсновныеНачисленияФПД
    |		ПО СотрудникПериод.Сотрудник = ОсновныеНачисленияФПД.Сотрудник
    |			И СотрудникПериод.Организация = ОсновныеНачисленияФПД.Организация
    |			И СотрудникПериод.ПериодДействия = ОсновныеНачисленияФПД.ПериодДействия
    |ГДЕ
    |	ОсновныеНачисленияФПД.Сотрудник ЕСТЬ NULL 
    |
    |УПОРЯДОЧИТЬ ПО
    |	Организация,
    |	Сотрудник,
    |	ПериодДействия,
    |	ПериодРегистрации,
    |	Сторно УБЫВ";
        
    Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Отбор.Регистратор.Значение);
    
    РасчетПериодаНачисления(ТекстЗапроса, ПериодыДействия, Отказ, Заголовок);
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ПриЗаписи"
//
Процедура ПриЗаписи(Отказ, Замещение, ТолькоЗапись)
	
	Если ОбменДанными.Загрузка или НЕ мВыполнятьВспомогательныеРасчеты или ТолькоЗапись Тогда
        Возврат;
    КонецЕсли;
	
	Если ЭтотОбъект.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	НачисленияСторно.Сотрудник КАК Сотрудник,
	|	НачисленияСторно.Организация КАК Организация,
	|	НачисленияСторно.ПериодДействия КАК ПериодДействия,
	|	НачисленияСторно.ПериодРегистрации КАК ПериодРегистрации,
	|	НачисленияСторно.ПериодДействияНачало КАК ДатаНачала,
	|	НачисленияСторно.ПериодДействияКонец КАК ДатаОкончания,
	|	Начисления.ПериодРегистрации КАК ПериодРегистрацииПогашения,
	|	Начисления.ПериодДействияНачало КАК ДатаНачалаПогашения,
	|	Начисления.ПериодДействияКонец КАК ДатаОкончанияПогашения
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
	|		ВидРасчета В
	|				(ВЫБРАТЬ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Ссылка
	|				ИЗ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций
	|				ГДЕ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ЗачетНормыВремени
	|					И НЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени В (&ВнутрисменныеВидыРасчета))
	|			И Сотрудник В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник
	|				ИЗ
	|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций
	|				ГДЕ
	|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор)
	|			И ПериодДействия В (&ПериодыДействия)) КАК НачисленияСторно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ОсновныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	|			ОсновныеНачисленияРаботниковОрганизаций.Организация КАК Организация,
	|			ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия КАК ПериодДействия
	|		ИЗ
	|			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ГДЕ
	|			ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор) КАК СотрудникПериод
	|		ПО СотрудникПериод.Сотрудник = НачисленияСторно.Сотрудник
	|			И СотрудникПериод.Организация = НачисленияСторно.Организация
	|			И СотрудникПериод.ПериодДействия = НачисленияСторно.ПериодДействия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
	|		(НЕ Сторно)
	|			И ВидРасчета В
	|				(ВЫБРАТЬ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Ссылка
	|				ИЗ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций
	|				ГДЕ
	|					ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ЗачетНормыВремени
	|					И НЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени В (&ВнутрисменныеВидыРасчета))
	|			И Сотрудник В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Сотрудник
	|				ИЗ
	|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций
	|				ГДЕ
	|					РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор)
	|			И ПериодДействия В (&ПериодыДействия)) КАК Начисления
	|		ПО НачисленияСторно.Сотрудник = Начисления.Сотрудник
	|			И НачисленияСторно.Организация = Начисления.Организация
	|			И НачисленияСторно.ПериодРегистрации <= Начисления.ПериодРегистрации
	|			И НачисленияСторно.ПериодДействия = Начисления.ПериодДействия
	|			И Начисления.ПериодДействияНачало < НачисленияСторно.ПериодДействияКонец
	|			И Начисления.ПериодДействияКонец > НачисленияСторно.ПериодДействияНачало
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Сотрудник,
	|	ПериодДействия";
	
	ПериодыДействияСоответствие = Новый Соответствие;
	Для Каждого Строка Из ЭтотОбъект Цикл
		ПериодыДействияСоответствие[Строка.ПериодДействия] = 0;
	КонецЦикла;
	
	ПериодыДействия = Новый Массив;
	Для Каждого Элемент Из ПериодыДействияСоответствие Цикл
		ПериодыДействия.Добавить(Элемент.Ключ);
	КонецЦикла;
	РасчетПериодаДоначисления(ТекстЗапроса, ПериодыДействия);

	Если НЕ мВыполнятьРасчетПериодаНачисленияСотрудника Тогда
        Возврат;
    КонецЕсли;
        
    ТекстЗапроса = 
    "ВЫБРАТЬ
    |	ОсновныеНачисленияФПД.Сотрудник КАК Сотрудник,
    |	ОсновныеНачисленияФПД.Сотрудник.Наименование КАК СотрудникНаименование,
    |	ЕСТЬNULL(СотрудникПериод.Организация, ОсновныеНачисленияФПД.Организация) КАК Организация,
    |	ОсновныеНачисленияФПД.ПериодДействия КАК ПериодДействия,
    |	ОсновныеНачисленияФПД.ВидРасчета КАК ВидРасчета,
    |	ОсновныеНачисленияФПД.Сторно КАК Сторно,
    |	ОсновныеНачисленияФПД.ПериодДействияНачало,
    |	ОсновныеНачисленияФПД.ПериодДействияКонец,
    |	ОсновныеНачисленияФПД.ПериодРегистрации КАК ПериодРегистрации
    |ИЗ
    |	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
    |			Сотрудник В
    |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
    |						РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Сотрудник
    |					ИЗ
    |						РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций
    |					ГДЕ
    |						РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор)
    |				И ВидРасчета В
    |					(ВЫБРАТЬ
    |						ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Ссылка
    |					ИЗ
    |						ПланВидовРасчета.ОсновныеНачисленияОрганизаций
    |					ГДЕ
    |						ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ЗачетНормыВремени
    |						И (НЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени В (&ВнутрисменныеВидыРасчета)))
    |				И ПериодДействия В (&ПериодыДействия)) КАК ОсновныеНачисленияФПД
    |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
    |			ОсновныеНачисления.Сотрудник КАК Сотрудник,
    |			ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
    |			ОсновныеНачисления.Организация КАК Организация
    |		ИЗ
    |			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
    |		ГДЕ
    |			ОсновныеНачисления.Регистратор = &Регистратор) КАК СотрудникПериод
    |		ПО СотрудникПериод.Сотрудник = ОсновныеНачисленияФПД.Сотрудник
    |			И СотрудникПериод.Организация = ОсновныеНачисленияФПД.Организация
    |			И СотрудникПериод.ПериодДействия = ОсновныеНачисленияФПД.ПериодДействия
    |
    |ОБЪЕДИНИТЬ ВСЕ
    |
    |ВЫБРАТЬ
    |	СотрудникПериод.Сотрудник,
    |	СотрудникПериод.Сотрудник.Наименование КАК СотрудникНаименование,
    |	СотрудникПериод.Организация,
    |	СотрудникПериод.ПериодДействия,
    |	NULL,
    |	NULL,
    |	NULL,
    |	NULL,
    |	NULL
    |ИЗ
    |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
    |		ОсновныеНачисления.Сотрудник КАК Сотрудник,
    |		ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
    |		ОсновныеНачисления.Организация КАК Организация
    |	ИЗ
    |		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
    |	ГДЕ
    |		ОсновныеНачисления.Регистратор = &Регистратор) КАК СотрудникПериод
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
    |				Сотрудник В
    |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
    |							РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник
    |						ИЗ
    |							РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций
    |						ГДЕ
    |							РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.Регистратор = &Регистратор)
    |					И ВидРасчета В
    |						(ВЫБРАТЬ
    |							ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Ссылка
    |						ИЗ
    |							ПланВидовРасчета.ОсновныеНачисленияОрганизаций
    |						ГДЕ
    |							ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ЗачетНормыВремени
    |							И (НЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени В (&ВнутрисменныеВидыРасчета)))
    |					И ПериодДействия В (&ПериодыДействия)) КАК ОсновныеНачисленияФПД
    |		ПО СотрудникПериод.Сотрудник = ОсновныеНачисленияФПД.Сотрудник
    |			И СотрудникПериод.Организация = ОсновныеНачисленияФПД.Организация
    |			И СотрудникПериод.ПериодДействия = ОсновныеНачисленияФПД.ПериодДействия
    |ГДЕ
    |	ОсновныеНачисленияФПД.Сотрудник ЕСТЬ NULL 
    |
    |УПОРЯДОЧИТЬ ПО
    |	Организация,
    |	Сотрудник,
    |	ПериодДействия,
    |	ПериодРегистрации,
    |	Сторно УБЫВ";
            
    Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Отбор.Регистратор.Значение);
    
    РасчетПериодаНачисления(ТекстЗапроса, ПериодыДействия, Отказ, Заголовок);

КонецПроцедуры // ПриЗаписи()


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мВыполнятьРасчетПериодаНачисленияСотрудника = Ложь;
мВыполнятьВспомогательныеРасчеты 			= Истина;
