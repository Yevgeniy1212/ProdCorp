
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
	Автор = ПараметрыСеанса.ТекущийПользователь;
	Состояние = Перечисления.ЦС_СостоянияСогласованияПлатежей.ВРаботе;	
	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь,"ОсновнаяОрганизация");
	
КонецПроцедуры

Функция ПолучитьАдресатаДляТекущегоЭтапа(Постановщик,ТочкаЭтапа);
	
	Если ТочкаЭтапа = Справочники.ЦС_ЭтапыМаршрутовБП.ВозвращеноАвтору Тогда
		Возврат Постановщик;
	КонецЕсли;

	Если ТочкаЭтапа = Справочники.ЦС_ЭтапыМаршрутовБП.СогласованиеСРуководителемСП Тогда
		Возврат ДиректорСТП;
	КонецЕсли;
	
	//-=-=
	Если ТочкаЭтапа = Справочники.ЦС_ЭтапыМаршрутовБП.СогласованиеСКурирующимЧП Тогда
		Возврат КурирующийЧП;
	КонецЕсли;
	//-=-=
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Бит_АдресацияУведомленийПоКомандировкам.Адресат,
	|	Бит_АдресацияУведомленийПоКомандировкам.Пользователь КАК Пользователь
	|ИЗ
	|	РегистрСведений.Бит_АдресацияУведомленийПоКомандировкам КАК Бит_АдресацияУведомленийПоКомандировкам
	|ГДЕ
	|	(Бит_АдресацияУведомленийПоКомандировкам.Пользователь = &Пользователь
	|			ИЛИ Бит_АдресацияУведомленийПоКомандировкам.Пользователь = &ПустойПользователь)
	|	И Бит_АдресацияУведомленийПоКомандировкам.ЭтапМаршрута = &ЭтапМаршрута
	|
	|УПОРЯДОЧИТЬ ПО
	|	Пользователь УБЫВ";
	
	Запрос.УстановитьПараметр("Пользователь", Постановщик);
	Запрос.УстановитьПараметр("ПустойПользователь", Справочники.Пользователи.ПустаяСсылка());

	Запрос.УстановитьПараметр("ЭтапМаршрута", ТочкаЭтапа);
	
	Результат = Запрос.Выполнить();
	Выборка = результат.Выбрать();
	Если Выборка.Следующий() тогда
		Возврат Выборка.Адресат;
	КонецЕсли;
	
КонецФункции

Процедура ОбработатьЭтап(Постановщик, ТочкаЭтапа,ФормируемыеЗадачи,Отказ, ЯвныйАдресат = Неопределено)
	
	Если ТочкаЭтапа = Справочники.ЦС_ЭтапыМаршрутовБП.ОтправленНаДоработкуАвтором тогда 
		Адресат = Постановщик;
	Иначе    
		Если ЯвныйАдресат = Неопределено тогда
			Адресат = ПолучитьАдресатаДляТекущегоЭтапа(Постановщик,ТочкаЭтапа);
		Иначе
			Адресат = ЯвныйАдресат;	
		КонецЕсли;
		
	КонецЕсли;
	
	Если Адресат = Неопределено или Адресат.Пустая() тогда 
		Отказ = Истина;
		Сообщить("Для текущего пользователя на этапе " + ТочкаЭтапа + " не найден адресат");
		Возврат;
	КонецЕсли;
	
	Для Каждого Задача из ФормируемыеЗадачи Цикл
		
		Если ТипЗнч(Адресат) = Тип("СправочникСсылка.Пользователи") тогда
			Задача.Пользователь = Адресат;
		Иначе
			Задача.Подразделение = Адресат;
		КонецЕсли;
		ЦС_ОбщегоНазначенияСервер.ОтправитьПисьмоПоИзменениюЗаявок(Задача.бизнеспроцесс, Адресат, Задача);
	КонецЦикла;
	
	ЭтотОбъект.Записать();

КонецПроцедуры

Процедура ОбработатьВыборВарианта(ТочкаВыбораВарианта, Результат,МаркерЭтапа)
	
	Если МаркерЭтапа = "Разрешено" тогда
		Результат = ТочкаВыбораВарианта.Варианты.Разрешено;
	ИначеЕсли МаркерЭтапа = "Возвращено" тогда
		Результат = ТочкаВыбораВарианта.Варианты.Возвращено;
	ИначеЕсли МаркерЭтапа = "Отказано" тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказано;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ТекущаяТочка = ТочкаМаршрутаБизнесПроцесса;          
	
	Если ТекущаяТочка = ПредопределенноеЗначение("БизнесПроцесс.СогласованиеПлатежейПредставительств.ТочкаМаршрута.СогласованиеСРП") Тогда
		Этап = Справочники.ЦС_ЭтапыМаршрутовБП.СогласованиеСРуководителемСП;
	//-=-=	
	ИначеЕсли ТекущаяТочка = ПредопределенноеЗначение("БизнесПроцесс.СогласованиеПлатежейПредставительств.ТочкаМаршрута.СогласованиеСКурирующимЧП") Тогда
		Этап = Справочники.ЦС_ЭтапыМаршрутовБП.СогласованиеСКурирующимЧП;
	//-=-=
	ИначеЕсли ТекущаяТочка = ПредопределенноеЗначение("БизнесПроцесс.СогласованиеПлатежейПредставительств.ТочкаМаршрута.СогласованиеСМенеджеромФД")	Тогда
		Этап = Справочники.ЦС_ЭтапыМаршрутовБП.СогласованиеСМенеджеромФД;
	ИначеЕсли ТекущаяТочка = ПредопределенноеЗначение("БизнесПроцесс.СогласованиеПлатежейПредставительств.ТочкаМаршрута.СогласованиеСРуководителемФД") Тогда
		Этап = Справочники.ЦС_ЭтапыМаршрутовБП.СогласованиеСРуководителемФД;
	ИначеЕсли ТекущаяТочка = ПредопределенноеЗначение("БизнесПроцесс.СогласованиеПлатежейПредставительств.ТочкаМаршрута.ПередачаВКазначейство") Тогда
		Этап = Справочники.ЦС_ЭтапыМаршрутовБП.ПередачаВКазначейство;
	ИначеЕсли ТекущаяТочка = ПредопределенноеЗначение("БизнесПроцесс.СогласованиеПлатежейПредставительств.ТочкаМаршрута.РаботаСЗаявкойАвтором") Тогда
		Этап = Справочники.ЦС_ЭтапыМаршрутовБП.ВозвращеноАвтору;
	КонецЕсли;	
	
	ОбработатьЭтап(Автор, Этап, ФормируемыеЗадачи, Отказ);
	
КонецПроцедуры

Процедура РезультатПроверкиВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекущаяТочка = ТочкаВыбораВарианта;
	
	Если ТекущаяТочка = ПредопределенноеЗначение("БизнесПроцесс.СогласованиеПлатежейПредставительств.ТочкаМаршрута.РезультатПроверкиСТП") Тогда
		МаркерЭтапа = ЗаявкаПрошлаСогласованиеРук;
	ИначеЕсли ТекущаяТочка = ПредопределенноеЗначение("БизнесПроцесс.СогласованиеПлатежейПредставительств.ТочкаМаршрута.РезультатПроверкиКурирующимЧП")	Тогда
		МаркерЭтапа = ЗаявкаПрошлаСогласованиеКурирующимЧП; 
	ИначеЕсли ТекущаяТочка = ПредопределенноеЗначение("БизнесПроцесс.СогласованиеПлатежейПредставительств.ТочкаМаршрута.РезультатПроверкиРуководителемФД") Тогда
		МаркерЭтапа = ЗаявкаПрошлаСогласованиеРуководительФД;
	//-=-=
	ИначеЕсли ТекущаяТочка = ПредопределенноеЗначение("БизнесПроцесс.СогласованиеПлатежейПредставительств.ТочкаМаршрута.РезультатПроверкиМенеджераФД")	Тогда
		МаркерЭтапа = ЗаявкаПрошлаСогласованиеМенеджераФД;
	//-=-=
	ИначеЕсли ТекущаяТочка = ПредопределенноеЗначение("БизнесПроцесс.СогласованиеПлатежейПредставительств.ТочкаМаршрута.РезультатПроверкиСогласующий")	Тогда
		МаркерЭтапа = ЗаявкаПрошлаСогласованиеСогласующим;
	КонецЕсли;
	
	ОбработатьВыборВарианта(ТочкаВыбораВарианта, Результат, МаркерЭтапа);	
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	КомментарииПроцесса.Очистить();
КонецПроцедуры







